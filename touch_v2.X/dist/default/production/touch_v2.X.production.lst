

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 16 04:22:35 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=2
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=2
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=2
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=2
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=2
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=2
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=2
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=2
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1,inline
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1,inline
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=2
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=2
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1,group=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=4,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=4,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=4,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1,group=1
   226                           	psect	text202,global,reloc=4,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=4,class=CODE,delta=1
   230                           	psect	text206,global,reloc=4,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=4,class=CODE,delta=1
   235                           	psect	text211,global,reloc=4,class=CODE,delta=1
   236                           	psect	text212,global,reloc=2,class=CODE,delta=1
   237                           	psect	text213,global,reloc=4,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=4,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=4,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=2,class=CODE,delta=1
   244                           	psect	text220,global,reloc=4,class=CODE,delta=1
   245                           	psect	text221,global,reloc=4,class=CODE,delta=1
   246                           	psect	text222,global,reloc=4,class=CODE,delta=1
   247                           	psect	text223,global,reloc=4,class=CODE,delta=1
   248                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   249                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   250                           	psect	text224,global,reloc=4,class=CODE,delta=1
   251                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   252                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   253  0000                     
   254                           ; Version 2.10
   255                           ; Generated 31/07/2019 GMT
   256                           ; 
   257                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   258                           ; All rights reserved.
   259                           ; 
   260                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   261                           ; 
   262                           ; Redistribution and use in source and binary forms, with or without modification, are
   263                           ; permitted provided that the following conditions are met:
   264                           ; 
   265                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   266                           ;        conditions and the following disclaimer.
   267                           ; 
   268                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   269                           ;        of conditions and the following disclaimer in the documentation and/or other
   270                           ;        materials provided with the distribution.
   271                           ; 
   272                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   273                           ;        software without specific prior written permission.
   274                           ; 
   275                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   276                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   277                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   278                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   279                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   280                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   281                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   282                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   283                           ; 
   284                           ; 
   285                           ; Code-generator required, PIC18F57K42 Definitions
   286                           ; 
   287                           ; SFR Addresses
   288  0000                     
   289 ;;_main$4024	offset	0
   290 ;;_main$4020	offset	2
   291 ;;_esr_temp	offset	4
   292 ;;_i_esr	offset	8
   293 ;;_shape	offset	10
   294 ;;_inp_index	offset	11
   295 ;;_k	offset	12
   296 ;;_j	offset	13
   297 ;;_i	offset	14
   298 ;;_mode	offset	15
   299 ;;_i_ror	offset	16
   300 ;;_mode	offset=-1 (param)
   301 ;;_hist	offset=-3 (param)
   302 ;;_s	offset=-2 (param)
   303 ;;_voltage	offset=-4 (param)
   304 ;;_voltage	offset=-4 (param)
   305 ;;_voltage	offset=-4 (param)
   306 ;;_set	offset=-1 (param)
   307 ;;_x	offset	0
   308 ;;_r_cal_ptr	offset	2
   309 ;;_y	offset	4
   310 ;;_crcVal_save	offset	6
   311 ;;_bAdd	offset=-2 (param)
   312 ;;_data	offset=-1 (param)
   313 ;;_cmd	offset=-1 (param)
   314 ;;_cmd	offset=-1 (param)
   315 ;;_data	offset=-1 (param)
   316 ;;__this	offset=-2 (param)
   317 ;;_soc	offset	0
   318 ;;_slot	offset	2
   319 ;;_cvoltage	offset=-4 (param)
   320 ;;_h	offset=-2 (param)
   321 ;;_h	offset=-2 (param)
   322 ;;_fsm	offset=-1 (param)
   323 ;;_mode	offset=-1 (param)
   324 ;;_mode	offset=-1 (param)
   325 ;;_cmd	offset=-1 (param)
   326 ;;_clock	offset	0
   327 ;;_t	offset=-8 (param)
   328 ;;_t	offset=-2 (param)
   329 ;;_t	offset=-2 (param)
   330 ;;_tm	offset=-4 (param)
   331 ;;_y	offset	0
   332 ;;_t1	offset	8
   333 ;;_t0	offset	16
   334 ;;_t	offset=-8 (param)
   335 ;;_local	offset=-10 (param)
   336 ;;_isdst	offset=-12 (param)
   337 ;;_offset	offset=-14 (param)
   338 ;;_oppoff	offset=-16 (param)
   339 ;;_zonename	offset=-18 (param)
   340 ;;_t	offset=-8 (param)
   341 ;;_local	offset=-10 (param)
   342 ;;_alt	offset=-12 (param)
   343 ;;_z	offset=-2 (param)
   344 ;;_days	offset	0
   345 ;;_wday	offset	2
   346 ;;_t	offset	4
   347 ;;_is_leap	offset	12
   348 ;;_n	offset	14
   349 ;;_x	offset	16
   350 ;;_m	offset	18
   351 ;;_d	offset	20
   352 ;;_rule	offset=-6 (param)
   353 ;;_year	offset=-8 (param)
   354 ;;_m	offset=-2 (param)
   355 ;;_is_leap	offset=-4 (param)
   356 ;;_y	offset	0
   357 ;;_leaps	offset	2
   358 ;;_rem	offset	4
   359 ;;F5	offset	6
   360 ;;_centuries	offset	8
   361 ;;_leaps	offset	10
   362 ;;_cycles	offset	12
   363 ;;_year	offset=-8 (param)
   364 ;;_is_leap	offset=-10 (param)
   365 ;;_t	offset	0
   366 ;;_month	offset=-2 (param)
   367 ;;_is_leap	offset=-4 (param)
   368 ;;_s	offset	0
   369 ;;_r	offset	0
   370 ;;_p	offset=-2 (param)
   371 ;;_rule	offset=-4 (param)
   372 ;;_off	offset	0
   373 ;;_neg	offset	2
   374 ;;_p	offset=-2 (param)
   375 ;;_x	offset	0
   376 ;;_p	offset=-2 (param)
   377 ;;_i	offset	0
   378 ;;_d	offset=-2 (param)
   379 ;;_p	offset=-4 (param)
   380 ;;___secs_to_tm$7845	offset	0
   381 ;;_years	offset	1
   382 ;;_days	offset	9
   383 ;;_secs	offset	17
   384 ;;_remdays	offset	25
   385 ;;_q_cycles	offset	29
   386 ;;_c_cycles	offset	33
   387 ;;_remyears	offset	37
   388 ;;_remsecs	offset	41
   389 ;;_qc_cycles	offset	45
   390 ;;_months	offset	49
   391 ;;_leap	offset	51
   392 ;;_yday	offset	53
   393 ;;_wday	offset	55
   394 ;;_t	offset=-8 (param)
   395 ;;_tm	offset=-10 (param)
   396 ;;_product	offset	0
   397 ;;_multiplier	offset=-8 (param)
   398 ;;_multiplicand	offset=-16 (param)
   399 ;;_product	offset	0
   400 ;;_multiplier	offset=-4 (param)
   401 ;;_multiplicand	offset=-8 (param)
   402 ;;_sign	offset	0
   403 ;;_counter	offset	1
   404 ;;_dividend	offset=-4 (param)
   405 ;;_divisor	offset=-8 (param)
   406 ;;_quotient	offset	0
   407 ;;_sign	offset	4
   408 ;;_counter	offset	5
   409 ;;_dividend	offset=-4 (param)
   410 ;;_divisor	offset=-8 (param)
   411 ;;_cp	offset	0
   412 ;;_s	offset	2
   413 ;;_tim	offset=-2 (param)
   414 ;;_cp	offset=-2 (param)
   415 ;;_i	offset=-3 (param)
   416 ;;_cl	offset=-4 (param)
   417 ;;_ct	offset=-5 (param)
   418 ;;_rem	offset	0
   419 ;;_counter	offset	1
   420 ;;_dividend	offset=-1 (param)
   421 ;;_divisor	offset=-2 (param)
   422 ;;_cp	offset	0
   423 ;;_cb	offset	4
   424 ;;_x	offset	8
   425 ;;_x	offset	0
   426 ;;_r_cal_ptr	offset	2
   427 ;;_y	offset	4
   428 ;;_crcVal	offset	6
   429 ;;_GIEBitValue	offset	0
   430 ;;_bAdd	offset=-2 (param)
   431 ;;_bData	offset=-3 (param)
   432 ;;_result	offset	0
   433 ;;_mask	offset	2
   434 ;;_reverse	offset=-1 (param)
   435 ;;_xorValue	offset=-3 (param)
   436 ;;_mask	offset	0
   437 ;;_reverse	offset	2
   438 ;;_crc	offset=-2 (param)
   439 ;;_data	offset=-1 (param)
   440 ;;_channel	offset=-1 (param)
   441 ;;_c	offset	0
   442 ;;_shape	offset=-1 (param)
   443 ;;_reset	offset=-2 (param)
   444 ;;_i	offset=-1 (param)
   445 ;;_mode	offset=-1 (param)
   446 ;;_cb	offset=-3 (param)
   447 ;;_cp	offset=-5 (param)
   448 ;;_value	offset=-2 (param)
   449 ;;_window	offset=-4 (param)
   450 ;;_standard	offset=-6 (param)
   451 ;;_i	offset	0
   452 ;;_h	offset=-2 (param)
   453 ;;_flipper	offset=-1 (param)
   454 ;;_f	offset	0
   455 ;;_ap	offset	6
   456 ;;_s	offset=-3 (param)
   457 ;;_fmt	offset=-5 (param)
   458 ;;_line	offset=-1 (param)
   459 ;;_vterm	offset=-2 (param)
   460 ;;_numMilliseconds	offset=-2 (param)
   461 ;;_vterm	offset=-1 (param)
   462 ;;_row	offset	0
   463 ;;_r	offset=-1 (param)
   464 ;;_c	offset=-2 (param)
   465 ;;_strPtr	offset=-4 (param)
   466 ;;_strPtr	offset=-1 (param)
   467 ;;_delay	offset=-4 (param)
   468 ;;_strPtr	offset=-1 (param)
   469 ;;_strPtr	offset=-2 (param)
   470 ;;__this	offset=-2 (param)
   471 ;;_clearBuffer	offset=-3 (param)
   472 ;;_s	offset	0
   473 ;;_k	offset	2
   474 ;;_dest	offset=-2 (param)
   475 ;;_c	offset=-4 (param)
   476 ;;_n	offset=-6 (param)
   477 ;;_ap	offset	0
   478 ;;_fmt	offset=-3 (param)
   479 ;;_cfmt	offset	0
   480 ;;_fp	offset=-2 (param)
   481 ;;_fmt	offset=-4 (param)
   482 ;;_ap	offset=-6 (param)
   483 ;;_vfpfcnvrt$6886	offset	0
   484 ;;_vfpfcnvrt$6897	offset	2
   485 ;;_vfpfcnvrt$6885	offset	4
   486 ;;_llu	offset	6
   487 ;;_ll	offset	14
   488 ;;_f	offset	22
   489 ;;_ct	offset	26
   490 ;;_cp	offset	29
   491 ;;_c	offset	31
   492 ;;_fp	offset=-2 (param)
   493 ;;_fmt	offset=-4 (param)
   494 ;;_ap	offset=-6 (param)
   495 ;;_xtoa$6871	offset	0
   496 ;;_xtoa$6870	offset	2
   497 ;;_n	offset	4
   498 ;;_c	offset	12
   499 ;;_i	offset	14
   500 ;;_w	offset	16
   501 ;;_p	offset	18
   502 ;;_fp	offset=-2 (param)
   503 ;;_d	offset=-10 (param)
   504 ;;_x	offset=-11 (param)
   505 ;;_toupper$7812	offset	0
   506 ;;_c	offset=-2 (param)
   507 ;;_c	offset=-2 (param)
   508 ;;_c	offset=-2 (param)
   509 ;;_n	offset	0
   510 ;;_i	offset	8
   511 ;;_w	offset	10
   512 ;;_p	offset	12
   513 ;;_fp	offset=-2 (param)
   514 ;;_d	offset=-10 (param)
   515 ;;_counter	offset	0
   516 ;;_dividend	offset=-8 (param)
   517 ;;_divisor	offset=-16 (param)
   518 ;;_quotient	offset	0
   519 ;;_counter	offset	8
   520 ;;_dividend	offset=-8 (param)
   521 ;;_divisor	offset=-16 (param)
   522 ;;_r	offset	0
   523 ;;_l	offset	2
   524 ;;__l	offset=-2 (param)
   525 ;;__r	offset=-4 (param)
   526 ;;_n	offset=-6 (param)
   527 ;;_nuls	offset	0
   528 ;;_l	offset	7
   529 ;;_p	offset	9
   530 ;;_cp	offset	11
   531 ;;_w	offset	13
   532 ;;_i	offset	15
   533 ;;_fp	offset=-2 (param)
   534 ;;_s	offset=-4 (param)
   535 ;;_efgtoa$6843	offset	0
   536 ;;_efgtoa$6842	offset	2
   537 ;;_efgtoa$6841	offset	4
   538 ;;_efgtoa$6837	offset	6
   539 ;;_efgtoa$6833	offset	8
   540 ;;_efgtoa$6832	offset	10
   541 ;;_u	offset	12
   542 ;;_g	offset	16
   543 ;;_l	offset	20
   544 ;;_h	offset	24
   545 ;;_ou	offset	28
   546 ;;_n	offset	32
   547 ;;_e	offset	34
   548 ;;_i	offset	36
   549 ;;_w	offset	38
   550 ;;_p	offset	40
   551 ;;_sign	offset	42
   552 ;;_d	offset	44
   553 ;;_ne	offset	46
   554 ;;_m	offset	48
   555 ;;_pp	offset	50
   556 ;;_t	offset	52
   557 ;;_mode	offset	54
   558 ;;_nmode	offset	55
   559 ;;_fp	offset=-2 (param)
   560 ;;_f	offset=-6 (param)
   561 ;;_c	offset=-7 (param)
   562 ;;_tolower$7797	offset	0
   563 ;;_c	offset=-2 (param)
   564 ;;_c	offset=-2 (param)
   565 ;;_d	offset	0
   566 ;;_s	offset	2
   567 ;;_dest	offset=-2 (param)
   568 ;;_src	offset=-4 (param)
   569 ;;_u	offset	0
   570 ;;_m	offset	4
   571 ;;_e	offset	8
   572 ;;_x	offset=-4 (param)
   573 ;;_u	offset	0
   574 ;;_e	offset	4
   575 ;;_x	offset=-4 (param)
   576 ;;_exp1	offset	0
   577 ;;_sign1	offset	1
   578 ;;_f1	offset=-4 (param)
   579 ;;_f1	offset=-4 (param)
   580 ;;_ff1	offset=-4 (param)
   581 ;;_ff2	offset=-8 (param)
   582 ;;_sign	offset	0
   583 ;;_counter	offset	1
   584 ;;_dividend	offset=-2 (param)
   585 ;;_divisor	offset=-4 (param)
   586 ;;_quotient	offset	0
   587 ;;_sign	offset	2
   588 ;;_counter	offset	3
   589 ;;_dividend	offset=-2 (param)
   590 ;;_divisor	offset=-4 (param)
   591 ;;_dtoa$6809	offset	0
   592 ;;_n	offset	2
   593 ;;_i	offset	10
   594 ;;_s	offset	12
   595 ;;_w	offset	14
   596 ;;_p	offset	16
   597 ;;_fp	offset=-2 (param)
   598 ;;_d	offset=-10 (param)
   599 ;;_a	offset=-2 (param)
   600 ;;_sign	offset	0
   601 ;;_counter	offset	1
   602 ;;_dividend	offset=-8 (param)
   603 ;;_divisor	offset=-16 (param)
   604 ;;_quotient	offset	0
   605 ;;_sign	offset	8
   606 ;;_counter	offset	9
   607 ;;_dividend	offset=-8 (param)
   608 ;;_divisor	offset=-16 (param)
   609 ;;_w	offset	0
   610 ;;_fp	offset=-2 (param)
   611 ;;_c	offset=-3 (param)
   612 ;;_w	offset	0
   613 ;;_i	offset	2
   614 ;;_fp	offset=-2 (param)
   615 ;;_buf	offset=-4 (param)
   616 ;;_p	offset=-6 (param)
   617 ;;_a	offset	0
   618 ;;_s	offset=-2 (param)
   619 ;;_i	offset	0
   620 ;;_c	offset	2
   621 ;;_s	offset=-2 (param)
   622 ;;_fp	offset=-4 (param)
   623 ;;_c	offset=-2 (param)
   624 ;;_fp	offset=-4 (param)
   625 ;;_c	offset=-1 (param)
   626 ;;__this	offset=-2 (param)
   627 ;;_c	offset=-3 (param)
   628 ;;_atoi$7429	offset	0
   629 ;;_atoi$7427	offset	2
   630 ;;_atoi$7428	offset	4
   631 ;;_n	offset	5
   632 ;;_neg	offset	7
   633 ;;_s	offset=-2 (param)
   634 ;;_isspace$7478	offset	0
   635 ;;_c	offset=-2 (param)
   636 ;;_c	offset=-2 (param)
   637 ;;_vterm	offset=-1 (param)
   638 ;;_new_response_info	offset=-1 (param)
   639 ;;_new_response_info	offset=-1 (param)
   640 ;;_level	offset=-2 (param)
   641 ;;_dutyValue	offset=-2 (param)
   642 ;;_timer	offset=-1 (param)
   643 ;;_timer	offset=-1 (param)
   644 ;;_count	offset=-3 (param)
   645 ;;_h	offset=-2 (param)
   646 ;;_u	offset	0
   647 ;;_x	offset=-4 (param)
   648 ;;_chan	offset=-1 (param)
   649 ;;_to_what	offset=-2 (param)
   650 ;;_u	offset	0
   651 ;;_s	offset=-2 (param)
   652 ;;_index	offset=-1 (param)
   653 ;;_arg	offset	0
   654 ;;_exp	offset	4
   655 ;;_sign	offset=-1 (param)
   656 ;;_val	offset=-5 (param)
   657 ;;_grs	offset	0
   658 ;;_rem	offset	4
   659 ;;_new_exp	offset	8
   660 ;;_aexp	offset	10
   661 ;;_bexp	offset	11
   662 ;;_sign	offset	12
   663 ;;_b	offset=-4 (param)
   664 ;;_a	offset=-8 (param)
   665 ;;_ff1	offset=-4 (param)
   666 ;;_ff2	offset=-8 (param)
   667 ;;_lp_speed	offset	0
   668 ;;_new	offset=-4 (param)
   669 ;;_bn	offset=-5 (param)
   670 ;;_slow	offset=-6 (param)
   671 ;;_b	offset=-4 (param)
   672 ;;_a	offset=-8 (param)
   673 ;;_grs	offset	0
   674 ;;_bexp	offset	1
   675 ;;_aexp	offset	2
   676 ;;_signs	offset	3
   677 ;;_b	offset=-4 (param)
   678 ;;_a	offset=-8 (param)
   679 ;;_prod	offset	0
   680 ;;_grs	offset	4
   681 ;;_temp	offset	8
   682 ;;_bexp	offset	10
   683 ;;_aexp	offset	11
   684 ;;_sign	offset	12
   685 ;;_b	offset=-4 (param)
   686 ;;_a	offset=-8 (param)
   687 ;;_InterruptHandler	offset=-3 (param)
   688 ;;_InterruptHandler	offset=-3 (param)
   689 ;;_InterruptHandler	offset=-3 (param)
   690 ;;_InterruptHandler	offset=-3 (param)
   691 ;;_InterruptHandler	offset=-3 (param)
   692 ;;_InterruptHandler	offset=-3 (param)
   693 ;;_state	offset	0
   694 ;;_InterruptHandler	offset=-3 (param)
   695 ;;_InterruptHandler	offset=-3 (param)
   696 ;;_seed	offset	0
   697 ;;_poly	offset	2
   698 ;;_InterruptHandler	offset=-3 (param)
   699 ;;_InterruptHandler	offset=-3 (param)
   700 ;;_i	offset	0
   701 ;;_sw_value	offset	1
   702 ;;_timerVal	offset=-2 (param)
   703 ;;_light	offset	0
   704 ;;_t	offset=-8 (param)
   705 ;;_mode	offset=-1 (param)
   706 ;;_chan	offset=-1 (param)
   707 ;;_to_what	offset=-2 (param)
   708 ;;_u	offset	0
   709 ;;_s	offset=-2 (param)
   710 ;;_index	offset=-1 (param)
   711 ;;_arg	offset	0
   712 ;;_exp	offset	4
   713 ;;_sign	offset=-1 (param)
   714 ;;_val	offset=-5 (param)
   715 ;;_b	offset=-4 (param)
   716 ;;_a	offset=-8 (param)
   717 ;;_grs	offset	0
   718 ;;_bexp	offset	1
   719 ;;_aexp	offset	2
   720 ;;_signs	offset	3
   721 ;;_b	offset=-4 (param)
   722 ;;_a	offset=-8 (param)
   723 ;;_prod	offset	0
   724 ;;_grs	offset	4
   725 ;;_temp	offset	8
   726 ;;_bexp	offset	10
   727 ;;_aexp	offset	11
   728 ;;_sign	offset	12
   729 ;;_b	offset=-4 (param)
   730 ;;_a	offset=-8 (param)
   731 ;;_grs	offset	0
   732 ;;_rem	offset	4
   733 ;;_new_exp	offset	8
   734 ;;_aexp	offset	10
   735 ;;_bexp	offset	11
   736 ;;_sign	offset	12
   737 ;;_b	offset=-4 (param)
   738 ;;_a	offset=-8 (param)
   739 ;;_ff1	offset=-4 (param)
   740 ;;_ff2	offset=-8 (param)
   741 ;;_timerVal	offset=-2 (param)
   742 ;;_adj	offset	0
   743 ;;_log_ptr	offset	4
   744 ;;_f	offset	0
   745 ;;_ap	offset	6
   746 ;;_s	offset=-3 (param)
   747 ;;_fmt	offset=-5 (param)
   748 ;;_cfmt	offset	0
   749 ;;_fp	offset=-2 (param)
   750 ;;_fmt	offset=-4 (param)
   751 ;;_ap	offset=-6 (param)
   752 ;;_vfpfcnvrt$6886	offset	0
   753 ;;_vfpfcnvrt$6897	offset	2
   754 ;;_vfpfcnvrt$6885	offset	4
   755 ;;_llu	offset	6
   756 ;;_ll	offset	14
   757 ;;_f	offset	22
   758 ;;_ct	offset	26
   759 ;;_cp	offset	29
   760 ;;_c	offset	31
   761 ;;_fp	offset=-2 (param)
   762 ;;_fmt	offset=-4 (param)
   763 ;;_ap	offset=-6 (param)
   764 ;;_xtoa$6871	offset	0
   765 ;;_xtoa$6870	offset	2
   766 ;;_n	offset	4
   767 ;;_c	offset	12
   768 ;;_i	offset	14
   769 ;;_w	offset	16
   770 ;;_p	offset	18
   771 ;;_fp	offset=-2 (param)
   772 ;;_d	offset=-10 (param)
   773 ;;_x	offset=-11 (param)
   774 ;;_toupper$7812	offset	0
   775 ;;_c	offset=-2 (param)
   776 ;;_c	offset=-2 (param)
   777 ;;_c	offset=-2 (param)
   778 ;;_n	offset	0
   779 ;;_i	offset	8
   780 ;;_w	offset	10
   781 ;;_p	offset	12
   782 ;;_fp	offset=-2 (param)
   783 ;;_d	offset=-10 (param)
   784 ;;_counter	offset	0
   785 ;;_dividend	offset=-8 (param)
   786 ;;_divisor	offset=-16 (param)
   787 ;;_quotient	offset	0
   788 ;;_counter	offset	8
   789 ;;_dividend	offset=-8 (param)
   790 ;;_divisor	offset=-16 (param)
   791 ;;_r	offset	0
   792 ;;_l	offset	2
   793 ;;__l	offset=-2 (param)
   794 ;;__r	offset=-4 (param)
   795 ;;_n	offset=-6 (param)
   796 ;;_nuls	offset	0
   797 ;;_l	offset	7
   798 ;;_p	offset	9
   799 ;;_cp	offset	11
   800 ;;_w	offset	13
   801 ;;_i	offset	15
   802 ;;_fp	offset=-2 (param)
   803 ;;_s	offset=-4 (param)
   804 ;;_efgtoa$6843	offset	0
   805 ;;_efgtoa$6842	offset	2
   806 ;;_efgtoa$6841	offset	4
   807 ;;_efgtoa$6837	offset	6
   808 ;;_efgtoa$6833	offset	8
   809 ;;_efgtoa$6832	offset	10
   810 ;;_u	offset	12
   811 ;;_g	offset	16
   812 ;;_l	offset	20
   813 ;;_h	offset	24
   814 ;;_ou	offset	28
   815 ;;_n	offset	32
   816 ;;_e	offset	34
   817 ;;_i	offset	36
   818 ;;_w	offset	38
   819 ;;_p	offset	40
   820 ;;_sign	offset	42
   821 ;;_d	offset	44
   822 ;;_ne	offset	46
   823 ;;_m	offset	48
   824 ;;_pp	offset	50
   825 ;;_t	offset	52
   826 ;;_mode	offset	54
   827 ;;_nmode	offset	55
   828 ;;_fp	offset=-2 (param)
   829 ;;_f	offset=-6 (param)
   830 ;;_c	offset=-7 (param)
   831 ;;_tolower$7797	offset	0
   832 ;;_c	offset=-2 (param)
   833 ;;_c	offset=-2 (param)
   834 ;;_d	offset	0
   835 ;;_s	offset	2
   836 ;;_dest	offset=-2 (param)
   837 ;;_src	offset=-4 (param)
   838 ;;_u	offset	0
   839 ;;_m	offset	4
   840 ;;_e	offset	8
   841 ;;_x	offset=-4 (param)
   842 ;;_u	offset	0
   843 ;;_e	offset	4
   844 ;;_x	offset=-4 (param)
   845 ;;_exp1	offset	0
   846 ;;_sign1	offset	1
   847 ;;_f1	offset=-4 (param)
   848 ;;_f1	offset=-4 (param)
   849 ;;_ff1	offset=-4 (param)
   850 ;;_ff2	offset=-8 (param)
   851 ;;_sign	offset	0
   852 ;;_counter	offset	1
   853 ;;_dividend	offset=-2 (param)
   854 ;;_divisor	offset=-4 (param)
   855 ;;_quotient	offset	0
   856 ;;_sign	offset	2
   857 ;;_counter	offset	3
   858 ;;_dividend	offset=-2 (param)
   859 ;;_divisor	offset=-4 (param)
   860 ;;_dtoa$6809	offset	0
   861 ;;_n	offset	2
   862 ;;_i	offset	10
   863 ;;_s	offset	12
   864 ;;_w	offset	14
   865 ;;_p	offset	16
   866 ;;_fp	offset=-2 (param)
   867 ;;_d	offset=-10 (param)
   868 ;;_a	offset=-2 (param)
   869 ;;_sign	offset	0
   870 ;;_counter	offset	1
   871 ;;_dividend	offset=-8 (param)
   872 ;;_divisor	offset=-16 (param)
   873 ;;_quotient	offset	0
   874 ;;_sign	offset	8
   875 ;;_counter	offset	9
   876 ;;_dividend	offset=-8 (param)
   877 ;;_divisor	offset=-16 (param)
   878 ;;_w	offset	0
   879 ;;_fp	offset=-2 (param)
   880 ;;_c	offset=-3 (param)
   881 ;;_w	offset	0
   882 ;;_i	offset	2
   883 ;;_fp	offset=-2 (param)
   884 ;;_buf	offset=-4 (param)
   885 ;;_p	offset=-6 (param)
   886 ;;_a	offset	0
   887 ;;_s	offset=-2 (param)
   888 ;;_i	offset	0
   889 ;;_c	offset	2
   890 ;;_s	offset=-2 (param)
   891 ;;_fp	offset=-4 (param)
   892 ;;_c	offset=-2 (param)
   893 ;;_fp	offset=-4 (param)
   894 ;;_c	offset=-1 (param)
   895 ;;__this	offset=-2 (param)
   896 ;;_c	offset=-3 (param)
   897 ;;_atoi$7429	offset	0
   898 ;;_atoi$7427	offset	2
   899 ;;_atoi$7428	offset	4
   900 ;;_n	offset	5
   901 ;;_neg	offset	7
   902 ;;_s	offset=-2 (param)
   903 ;;_isspace$7478	offset	0
   904 ;;_c	offset=-2 (param)
   905 ;;_c	offset=-2 (param)
   906 ;;_dsize	offset=-2 (param)
   907 ;;_u	offset	0
   908 ;;_x	offset=-4 (param)
   909 ;;_f1p	offset=-2 (param)
   910 ;;_f2	offset=-6 (param)
   911 ;;_timer	offset=-1 (param)
   912 ;;_count	offset=-3 (param)
   913 ;;_channel	offset=-1 (param)
   914 ;;_i	offset	0
   915                           
   916                           	psect	idataBIGRAM
   917  01A15A                     __pidataBIGRAM:
   918                           	opt callstack 0
   919                           
   920                           ;initializer for _port_data
   921  01A15A  FF                 	db	255
   922  01A15B  00                 	db	0
   923  01A15C  FF                 	db	255
   924  01A15D  00                 	db	0
   925  01A15E  FF                 	db	255
   926  01A15F  00                 	db	0
   927  01A160  FF                 	db	255
   928  01A161  00                 	db	0
   929  01A162  FF                 	db	255
   930  01A163  00                 	db	0
   931  01A164  FF                 	db	255
   932  01A165  00                 	db	0
   933  01A166  FF                 	db	255
   934  01A167  00                 	db	0
   935  01A168  FF                 	db	255
   936  01A169  00                 	db	0
   937  01A16A  00                 	db	0
   938  01A16B  00                 	db	0
   939  01A16C  00                 	db	0
   940  01A16D  00                 	db	0
   941  01A16E  00                 	db	0
   942  01A16F  00                 	db	0
   943  01A170  00                 	db	0
   944  01A171  00                 	db	0
   945  01A172  00                 	db	0
   946  01A173  00                 	db	0
   947  01A174  00                 	db	0
   948  01A175  00                 	db	0
   949  01A176  00                 	db	0
   950  01A177  00                 	db	0
   951  01A178  00                 	db	0
   952  01A179  00                 	db	0
   953  01A17A  00                 	db	0
   954  01A17B  00                 	db	0
   955  01A17C  00                 	db	0
   956  01A17D  00                 	db	0
   957  01A17E  00                 	db	0
   958  01A17F  00                 	db	0
   959  01A180  00                 	db	0
   960  01A181  00                 	db	0
   961  01A182  00                 	db	0
   962  01A183  00                 	db	0
   963  01A184  00                 	db	0
   964  01A185  00                 	db	0
   965  01A186  00                 	db	0
   966  01A187  00                 	db	0
   967  01A188  00                 	db	0
   968  01A189  00                 	db	0
   969  01A18A  00                 	db	0
   970  01A18B  00                 	db	0
   971  01A18C  00                 	db	0
   972  01A18D  00                 	db	0
   973  01A18E  00                 	db	0
   974  01A18F  00                 	db	0
   975  01A190  00                 	db	0
   976  01A191  00                 	db	0
   977  01A192  00                 	db	0
   978  01A193  00                 	db	0
   979  01A194  00                 	db	0
   980  01A195  00                 	db	0
   981  01A196  00                 	db	0
   982  01A197  00                 	db	0
   983  01A198  00                 	db	0
   984  01A199  00                 	db	0
   985  01A19A  00                 	db	0
   986  01A19B  00                 	db	0
   987  01A19C  00                 	db	0
   988  01A19D  00                 	db	0
   989  01A19E  00                 	db	0
   990  01A19F  00                 	db	0
   991  01A1A0  00                 	db	0
   992  01A1A1  00                 	db	0
   993  01A1A2  00                 	db	0
   994  01A1A3  00                 	db	0
   995  01A1A4  00                 	db	0
   996  01A1A5  00                 	db	0
   997  01A1A6  00                 	db	0
   998  01A1A7  00                 	db	0
   999  01A1A8  00                 	db	0
  1000  01A1A9  00                 	db	0
  1001  01A1AA  00                 	db	0
  1002  01A1AB  00                 	db	0
  1003  01A1AC  00                 	db	0
  1004  01A1AD  00                 	db	0
  1005  01A1AE  00                 	db	0
  1006  01A1AF  00                 	db	0
  1007  01A1B0  00                 	db	0
  1008  01A1B1  00                 	db	0
  1009  01A1B2  00                 	db	0
  1010  01A1B3  00                 	db	0
  1011  01A1B4  00                 	db	0
  1012  01A1B5  00                 	db	0
  1013  01A1B6  00                 	db	0
  1014  01A1B7  00                 	db	0
  1015  01A1B8  00                 	db	0
  1016  01A1B9  00                 	db	0
  1017  01A1BA  00                 	db	0
  1018  01A1BB  00                 	db	0
  1019  01A1BC  00                 	db	0
  1020  01A1BD  00                 	db	0
  1021  01A1BE  00                 	db	0
  1022  01A1BF  00                 	db	0
  1023  01A1C0  00                 	db	0
  1024  01A1C1  00                 	db	0
  1025  01A1C2  00                 	db	0
  1026  01A1C3  00                 	db	0
  1027  01A1C4  00                 	db	0
  1028  01A1C5  00                 	db	0
  1029  01A1C6  00                 	db	0
  1030  01A1C7  00                 	db	0
  1031  01A1C8  00                 	db	0
  1032  01A1C9  00                 	db	0
  1033  01A1CA  00                 	db	0
  1034  01A1CB  00                 	db	0
  1035  01A1CC  00                 	db	0
  1036  01A1CD  00                 	db	0
  1037  01A1CE  00                 	db	0
  1038  01A1CF  00                 	db	0
  1039  01A1D0  00                 	db	0
  1040  01A1D1  00                 	db	0
  1041  01A1D2  00                 	db	0
  1042  01A1D3  00                 	db	0
  1043  01A1D4  00                 	db	0
  1044  01A1D5  00                 	db	0
  1045  01A1D6  00                 	db	0
  1046  01A1D7  00                 	db	0
  1047  01A1D8  00                 	db	0
  1048  01A1D9  00                 	db	0
  1049  01A1DA  00                 	db	0
  1050  01A1DB  00                 	db	0
  1051  01A1DC  00                 	db	0
  1052  01A1DD  00                 	db	0
  1053  01A1DE  00                 	db	0
  1054  01A1DF  00                 	db	0
  1055  01A1E0  00                 	db	0
  1056  01A1E1  00                 	db	0
  1057  01A1E2  00                 	db	0
  1058  01A1E3  00                 	db	0
  1059  01A1E4  00                 	db	0
  1060  01A1E5  00                 	db	0
  1061  01A1E6  00                 	db	0
  1062  01A1E7  00                 	db	0
  1063  01A1E8  00                 	db	0
  1064  01A1E9  00                 	db	0
  1065  01A1EA  00                 	db	0
  1066  01A1EB  00                 	db	0
  1067  01A1EC  00                 	db	0
  1068  01A1ED  00                 	db	0
  1069  01A1EE  00                 	db	0
  1070  01A1EF  00                 	db	0
  1071  01A1F0  00                 	db	0
  1072  01A1F1  00                 	db	0
  1073  01A1F2  00                 	db	0
  1074  01A1F3  00                 	db	0
  1075  01A1F4  00                 	db	0
  1076  01A1F5  00                 	db	0
  1077  01A1F6  00                 	db	0
  1078  01A1F7  00                 	db	0
  1079  01A1F8  00                 	db	0
  1080  01A1F9  00                 	db	0
  1081  01A1FA  00                 	db	0
  1082  01A1FB  00                 	db	0
  1083  01A1FC  00                 	db	0
  1084  01A1FD  00                 	db	0
  1085  01A1FE  00                 	db	0
  1086  01A1FF  00                 	db	0
  1087  01A200  00                 	db	0
  1088  01A201  00                 	db	0
  1089  01A202  00                 	db	0
  1090  01A203  00                 	db	0
  1091  01A204  00                 	db	0
  1092  01A205  00                 	db	0
  1093  01A206  00                 	db	0
  1094  01A207  00                 	db	0
  1095  01A208  00                 	db	0
  1096  01A209  00                 	db	0
  1097  01A20A  00                 	db	0
  1098  01A20B  00                 	db	0
  1099  01A20C  00                 	db	0
  1100  01A20D  00                 	db	0
  1101  01A20E  00                 	db	0
  1102  01A20F  00                 	db	0
  1103  01A210  00                 	db	0
  1104  01A211  00                 	db	0
  1105  01A212  00                 	db	0
  1106  01A213  00                 	db	0
  1107  01A214  00                 	db	0
  1108  01A215  00                 	db	0
  1109  01A216  00                 	db	0
  1110  01A217  00                 	db	0
  1111  01A218  00                 	db	0
  1112  01A219  00                 	db	0
  1113  01A21A  00                 	db	0
  1114  01A21B  00                 	db	0
  1115  01A21C  00                 	db	0
  1116  01A21D  00                 	db	0
  1117  01A21E  00                 	db	0
  1118  01A21F  00                 	db	0
  1119  01A220  00                 	db	0
  1120  01A221  00                 	db	0
  1121  01A222  00                 	db	0
  1122  01A223  00                 	db	0
  1123  01A224  00                 	db	0
  1124  01A225  00                 	db	0
  1125  01A226  00                 	db	0
  1126  01A227  00                 	db	0
  1127  01A228  00                 	db	0
  1128  01A229  00                 	db	0
  1129  01A22A  00                 	db	0
  1130  01A22B  00                 	db	0
  1131  01A22C  00                 	db	0
  1132  01A22D  00                 	db	0
  1133  01A22E  00                 	db	0
  1134  01A22F  00                 	db	0
  1135  01A230  00                 	db	0
  1136  01A231  00                 	db	0
  1137  01A232  00                 	db	0
  1138  01A233  00                 	db	0
  1139  01A234  00                 	db	0
  1140  01A235  00                 	db	0
  1141  01A236  00                 	db	0
  1142  01A237  00                 	db	0
  1143  01A238  00                 	db	0
  1144  01A239  00                 	db	0
  1145  01A23A  00                 	db	0
  1146  01A23B  00                 	db	0
  1147  01A23C  00                 	db	0
  1148  01A23D  00                 	db	0
  1149  01A23E  00                 	db	0
  1150  01A23F  00                 	db	0
  1151  01A240  00                 	db	0
  1152  01A241  00                 	db	0
  1153  01A242  00                 	db	0
  1154  01A243  00                 	db	0
  1155  01A244  00                 	db	0
  1156  01A245  00                 	db	0
  1157  01A246  00                 	db	0
  1158  01A247  00                 	db	0
  1159  01A248  00                 	db	0
  1160  01A249  00                 	db	0
  1161  01A24A  00                 	db	0
  1162  01A24B  00                 	db	0
  1163  01A24C  00                 	db	0
  1164  01A24D  00                 	db	0
  1165  01A24E  00                 	db	0
  1166  01A24F  00                 	db	0
  1167  01A250  00                 	db	0
  1168  01A251  00                 	db	0
  1169  01A252  00                 	db	0
  1170  01A253  00                 	db	0
  1171  01A254  00                 	db	0
  1172  01A255  00                 	db	0
  1173  01A256  00                 	db	0
  1174  01A257  00                 	db	0
  1175  01A258  00                 	db	0
  1176  01A259  00                 	db	0
  1177  01A25A  00                 	db	0
  1178  01A25B  00                 	db	0
  1179  01A25C  00                 	db	0
  1180  01A25D  00                 	db	0
  1181  01A25E  00                 	db	0
  1182  01A25F  00                 	db	0
  1183  01A260  00                 	db	0
  1184  01A261  00                 	db	0
  1185  01A262  00                 	db	0
  1186  01A263  00                 	db	0
  1187  01A264  00                 	db	0
  1188  01A265  00                 	db	0
  1189  01A266  00                 	db	0
  1190  01A267  00                 	db	0
  1191  01A268  00                 	db	0
  1192  01A269  00                 	db	0
  1193  01A26A  00                 	db	0
  1194  01A26B  00                 	db	0
  1195  01A26C  00                 	db	0
  1196  01A26D  00                 	db	0
  1197  01A26E  00                 	db	0
  1198  01A26F  00                 	db	0
  1199  01A270  00                 	db	0
  1200  01A271  00                 	db	0
  1201  01A272  00                 	db	0
  1202  01A273  00                 	db	0
  1203  01A274  00                 	db	0
  1204  01A275  00                 	db	0
  1205  01A276  00                 	db	0
  1206  01A277  00                 	db	0
  1207  01A278  00                 	db	0
  1208  01A279  00                 	db	0
  1209  01A27A  00                 	db	0
  1210  01A27B  00                 	db	0
  1211  01A27C  00                 	db	0
  1212  01A27D  00                 	db	0
  1213  01A27E  00                 	db	0
  1214  01A27F  00                 	db	0
  1215  01A280  00                 	db	0
  1216  01A281  00                 	db	0
  1217  01A282  00                 	db	0
  1218  01A283  00                 	db	0
  1219  01A284  00                 	db	0
  1220  01A285  00                 	db	0
  1221  01A286  00                 	db	0
  1222  01A287  00                 	db	0
  1223  01A288  00                 	db	0
  1224  01A289  00                 	db	0
  1225  01A28A  00                 	db	0
  1226  01A28B  00                 	db	0
  1227  01A28C  00                 	db	0
  1228  01A28D  00                 	db	0
  1229  01A28E  00                 	db	0
  1230  01A28F  00                 	db	0
  1231  01A290  00                 	db	0
  1232  01A291  00                 	db	0
  1233  01A292  00                 	db	0
  1234  01A293  00                 	db	0
  1235  01A294  00                 	db	0
  1236  01A295  00                 	db	0
  1237  01A296  00                 	db	0
  1238  01A297  00                 	db	0
  1239  01A298  00                 	db	0
  1240  01A299  00                 	db	0
  1241  01A29A  00                 	db	0
  1242  01A29B  00                 	db	0
  1243  01A29C  00                 	db	0
  1244  01A29D  00                 	db	0
  1245  01A29E  00                 	db	0
  1246  01A29F  00                 	db	0
  1247  01A2A0  00                 	db	0
  1248  01A2A1  00                 	db	0
  1249  01A2A2  00                 	db	0
  1250  01A2A3  00                 	db	0
  1251  01A2A4  00                 	db	0
  1252  01A2A5  00                 	db	0
  1253  01A2A6  00                 	db	0
  1254  01A2A7  00                 	db	0
  1255  01A2A8  00                 	db	0
  1256  01A2A9  00                 	db	0
  1257  01A2AA  00                 	db	0
  1258  01A2AB  00                 	db	0
  1259  01A2AC  00                 	db	0
  1260  01A2AD  00                 	db	0
  1261  01A2AE  00                 	db	0
  1262  01A2AF  00                 	db	0
  1263  01A2B0  00                 	db	0
  1264  01A2B1  00                 	db	0
  1265  01A2B2  00                 	db	0
  1266  01A2B3  00                 	db	0
  1267  01A2B4  00                 	db	0
  1268  01A2B5  00                 	db	0
  1269  01A2B6  00                 	db	0
  1270  01A2B7  00                 	db	0
  1271  01A2B8  00                 	db	0
  1272  01A2B9  00                 	db	0
  1273  01A2BA  00                 	db	0
  1274  01A2BB  00                 	db	0
  1275  01A2BC  00                 	db	0
  1276  01A2BD  00                 	db	0
  1277  01A2BE  00                 	db	0
  1278  01A2BF  00                 	db	0
  1279  01A2C0  00                 	db	0
  1280  01A2C1  00                 	db	0
  1281  01A2C2  00                 	db	0
  1282  01A2C3  00                 	db	0
  1283  01A2C4  00                 	db	0
  1284  01A2C5  00                 	db	0
  1285  01A2C6  00                 	db	0
  1286  01A2C7  00                 	db	0
  1287  01A2C8  00                 	db	0
  1288  01A2C9  00                 	db	0
  1289  01A2CA  00                 	db	0
  1290  01A2CB  00                 	db	0
  1291  01A2CC  00                 	db	0
  1292  01A2CD  00                 	db	0
  1293  01A2CE  00                 	db	0
  1294  01A2CF  00                 	db	0
  1295  01A2D0  00                 	db	0
  1296  01A2D1  00                 	db	0
  1297  01A2D2  00                 	db	0
  1298  01A2D3  00                 	db	0
  1299  01A2D4  00                 	db	0
  1300  01A2D5  00                 	db	0
  1301  01A2D6  00                 	db	0
  1302  01A2D7  00                 	db	0
  1303  01A2D8  00                 	db	0
  1304  01A2D9  00                 	db	0
  1305  01A2DA  00                 	db	0
  1306  01A2DB  00                 	db	0
  1307  01A2DC  00                 	db	0
  1308  01A2DD  00                 	db	0
  1309  01A2DE  00                 	db	0
  1310  01A2DF  00                 	db	0
  1311  01A2E0  00                 	db	0
  1312  01A2E1  00                 	db	0
  1313  01A2E2  00                 	db	0
  1314  01A2E3  00                 	db	0
  1315  01A2E4  00                 	db	0
  1316  01A2E5  00                 	db	0
  1317  01A2E6  00                 	db	0
  1318  01A2E7  00                 	db	0
  1319  01A2E8  00                 	db	0
  1320  01A2E9  00                 	db	0
  1321  01A2EA  00                 	db	0
  1322  01A2EB  00                 	db	0
  1323  01A2EC  00                 	db	0
  1324  01A2ED  00                 	db	0
  1325  01A2EE  00                 	db	0
  1326  01A2EF  00                 	db	0
  1327  01A2F0  00                 	db	0
  1328  01A2F1  00                 	db	0
  1329  01A2F2  00                 	db	0
  1330  01A2F3  00                 	db	0
  1331  01A2F4  00                 	db	0
  1332  01A2F5  00                 	db	0
  1333  01A2F6  00                 	db	0
  1334  01A2F7  00                 	db	0
  1335  01A2F8  00                 	db	0
  1336  01A2F9  00                 	db	0
  1337  01A2FA  00                 	db	0
  1338  01A2FB  00                 	db	0
  1339  01A2FC  00                 	db	0
  1340  01A2FD  00                 	db	0
  1341  01A2FE  00                 	db	0
  1342  01A2FF  00                 	db	0
  1343  01A300  00                 	db	0
  1344  01A301  00                 	db	0
  1345  01A302  00                 	db	0
  1346  01A303  00                 	db	0
  1347  01A304  00                 	db	0
  1348  01A305  00                 	db	0
  1349  01A306  00                 	db	0
  1350  01A307  00                 	db	0
  1351  01A308  00                 	db	0
  1352  01A309  00                 	db	0
  1353  01A30A  00                 	db	0
  1354  01A30B  00                 	db	0
  1355  01A30C  00                 	db	0
  1356  01A30D  00                 	db	0
  1357  01A30E  00                 	db	0
  1358  01A30F  00                 	db	0
  1359  01A310  00                 	db	0
  1360  01A311  00                 	db	0
  1361  01A312  00                 	db	0
  1362  01A313  00                 	db	0
  1363  01A314  00                 	db	0
  1364  01A315  00                 	db	0
  1365  01A316  00                 	db	0
  1366  01A317  00                 	db	0
  1367  01A318  00                 	db	0
  1368  01A319  00                 	db	0
  1369  01A31A  00                 	db	0
  1370  01A31B  00                 	db	0
  1371  01A31C  00                 	db	0
  1372  01A31D  00                 	db	0
  1373  01A31E  00                 	db	0
  1374  01A31F  00                 	db	0
  1375  01A320  00                 	db	0
  1376  01A321  00                 	db	0
  1377  01A322  00                 	db	0
  1378  01A323  00                 	db	0
  1379  01A324  00                 	db	0
  1380  01A325  00                 	db	0
  1381  01A326  00                 	db	0
  1382  01A327  00                 	db	0
  1383  01A328  00                 	db	0
  1384  01A329  00                 	db	0
  1385  01A32A  00                 	db	0
  1386  01A32B  00                 	db	0
  1387  01A32C  00                 	db	0
  1388  01A32D  00                 	db	0
  1389  01A32E  00                 	db	0
  1390  01A32F  00                 	db	0
  1391  01A330  00                 	db	0
  1392  01A331  00                 	db	0
  1393  01A332  00                 	db	0
  1394  01A333  00                 	db	0
  1395  01A334  00                 	db	0
  1396  01A335  00                 	db	0
  1397  01A336  00                 	db	0
  1398  01A337  00                 	db	0
  1399  01A338  00                 	db	0
  1400  01A339  00                 	db	0
  1401  01A33A  00                 	db	0
  1402  01A33B  00                 	db	0
  1403  01A33C  00                 	db	0
  1404  01A33D  00                 	db	0
  1405  01A33E  00                 	db	0
  1406  01A33F  00                 	db	0
  1407  01A340  00                 	db	0
  1408  01A341  00                 	db	0
  1409  01A342  00                 	db	0
  1410  01A343  00                 	db	0
  1411  01A344  00                 	db	0
  1412  01A345  00                 	db	0
  1413  01A346  00                 	db	0
  1414  01A347  00                 	db	0
  1415  01A348  00                 	db	0
  1416  01A349  00                 	db	0
  1417  01A34A  00                 	db	0
  1418  01A34B  00                 	db	0
  1419  01A34C  00                 	db	0
  1420  01A34D  00                 	db	0
  1421  01A34E  00                 	db	0
  1422  01A34F  00                 	db	0
  1423  01A350  00                 	db	0
  1424  01A351  00                 	db	0
  1425  01A352  00                 	db	0
  1426  01A353  00                 	db	0
  1427  01A354  00                 	db	0
  1428  01A355  00                 	db	0
  1429  01A356  00                 	db	0
  1430  01A357  00                 	db	0
  1431  01A358  00                 	db	0
  1432  01A359  00                 	db	0
  1433                           
  1434                           ;initializer for _C
  1435  01A35A  0000               	dw	0
  1436  01A35C  0000               	dw	0
  1437  01A35E  0000               	dw	0
  1438  01A360  0000               	dw	0
  1439  01A362  0000               	dw	0
  1440  01A364  0000               	dw	0
  1441  01A366  0000               	dw	0
  1442  01A368  0000               	dw	0
  1443  01A36A  0000               	dw	0
  1444  01A36C  0000               	dw	0
  1445  01A36E  0000               	dw	0
  1446  01A370  0000               	dw	0
  1447  01A372  0000               	dw	0
  1448  01A374  0000               	dw	0
  1449  01A376  0000               	dw	0
  1450  01A378  0000               	dw	0
  1451  01A37A  0000               	dw	0
  1452  01A37C  0000               	dw	0
  1453  01A37E  0000               	dw	0
  1454  01A380  0000               	dw	0
  1455  01A382  0000               	dw	0
  1456  01A384  0000               	dw	0
  1457  01A386  0000               	dw	0
  1458  01A388  0000               	dw	0
  1459  01A38A  0000               	dw	0
  1460  01A38C  0000               	dw	0
  1461  01A38E  0000               	dw	0
  1462  01A390  0000               	dw	0
  1463  01A392  0000               	dw	0
  1464  01A394  0000               	dw	0
  1465  01A396  0000               	dw	0
  1466  01A398  0000               	dw	0
  1467  01A39A  0000               	dw	0
  1468  01A39C  0000               	dw	0
  1469  01A39E  0000               	dw	0
  1470  01A3A0  0000               	dw	0
  1471  01A3A2  0000               	dw	0
  1472  01A3A4  0000               	dw	0
  1473  01A3A6  0000               	dw	0
  1474  01A3A8  0000               	dw	0
  1475  01A3AA  0000               	dw	0
  1476  01A3AC  0000               	dw	0
  1477  01A3AE  0000               	dw	0
  1478  01A3B0  0000               	dw	0
  1479  01A3B2  0000               	dw	0
  1480  01A3B4  0000               	dw	0
  1481  01A3B6  0000               	dw	0
  1482  01A3B8  0000               	dw	0
  1483  01A3BA  0000               	dw	0
  1484  01A3BC  0000               	dw	0
  1485  01A3BE  0000               	dw	0
  1486  01A3C0  0000               	dw	0
  1487  01A3C2  0000               	dw	0
  1488  01A3C4  0000               	dw	0
  1489  01A3C6  0000               	dw	0
  1490  01A3C8  0000               	dw	0
  1491  01A3CA  0000               	dw	0
  1492  01A3CC  0000               	dw	0
  1493  01A3CE  0000               	dw	0
  1494  01A3D0  0000               	dw	0
  1495  01A3D2  0000               	dw	0
  1496  01A3D4  0000               	dw	0
  1497  01A3D6  0000               	dw	0
  1498  01A3D8  0000               	dw	0
  1499  01A3DA  0000               	dw	0
  1500  01A3DC  0000               	dw	0
  1501  01A3DE  0000               	dw	0
  1502  01A3E0  0000               	dw	0
  1503  01A3E2  0000               	dw	0
  1504  01A3E4  0000               	dw	0
  1505  01A3E6  0000               	dw	0
  1506  01A3E8  42FA               	dw	17146
  1507  01A3EA  0000               	dw	0
  1508  01A3EC  0000               	dw	0
  1509  01A3EE  0000               	dw	0
  1510  01A3F0  0000               	dw	0
  1511  01A3F2  0000               	dw	0
  1512  01A3F4  0000               	dw	0
  1513  01A3F6  0000               	dw	0
  1514  01A3F8  0000               	dw	0
  1515  01A3FA  0000               	dw	0
  1516  01A3FC  0000               	dw	0
  1517  01A3FE  0000               	dw	0
  1518  01A400  0000               	dw	0
  1519  01A402  0000               	dw	0
  1520  01A404  0000               	dw	0
  1521  01A406  0000               	dw	0
  1522  01A408  0000               	dw	0
  1523  01A40A  0000               	dw	0
  1524  01A40C  0000               	dw	0
  1525  01A40E  0000               	dw	0
  1526  01A410  0000               	dw	0
  1527  01A412  00                 	db	0
  1528  01A413  01                 	db	1
  1529  01A414  0000               	dw	0
  1530  01A416  0000               	dw	0
  1531  01A418  0000               	dw	0
  1532  01A41A  0000               	dw	0
  1533  01A41C  0000               	dw	0
  1534  01A41E  0000               	dw	0
  1535  01A420  0000               	dw	0
  1536  01A422  0000               	dw	0
  1537  01A424  0000               	dw	0
  1538  01A426  0000               	dw	0
  1539  01A428  0000               	dw	0
  1540  01A42A  00                 	db	0
  1541  01A42B  00                 	db	0
  1542  01A42C  0000               	dw	0
  1543  01A42E  3F80               	dw	16256
  1544  01A430  0000               	dw	0
  1545  01A432  3F80               	dw	16256
  1546  01A434  0000               	dw	0
  1547  01A436  0000               	dw	0
  1548  01A438  0000               	dw	0
  1549  01A43A  0000               	dw	0
  1550  01A43C  0000               	dw	0
  1551  01A43E  0000               	dw	0
  1552  01A440  0000               	dw	0
  1553  01A442  0000               	dw	0
  1554  01A444  0000               	dw	0
  1555  01A446  0000               	dw	0
  1556  01A448  00                 	db	0
  1557  01A449  00                 	db	0
  1558  01A44A  00                 	db	0
  1559  01A44B  00                 	db	0
  1560  01A44C  00                 	db	0
  1561  01A44D  00                 	db	0
  1562  01A44E  00                 	db	0
  1563  01A44F  00                 	db	0
  1564  01A450  00                 	db	0
  1565  01A451  00                 	db	0
  1566  01A452  00                 	db	0
  1567  01A453  00                 	db	0
  1568  01A454  00                 	db	0
  1569  01A455  00                 	db	0
  1570  01A456  00                 	db	0
  1571  01A457  00                 	db	0
  1572  01A458  00                 	db	0
  1573  01A459  00                 	db	0
  1574  01A45A  00                 	db	0
  1575  01A45B  00                 	db	0
  1576  01A45C  00                 	db	0
  1577  01A45D  00                 	db	0
  1578  01A45E  00                 	db	0
  1579  01A45F  00                 	db	0
  1580  01A460  00                 	db	0
  1581  01A461  00                 	db	0
  1582  01A462  00                 	db	0
  1583  01A463  00                 	db	0
  1584  01A464  00                 	db	0
  1585  01A465  00                 	db	0
  1586  01A466  00                 	db	0
  1587  01A467  00                 	db	0
  1588  01A468  00                 	db	0
  1589  01A469  00                 	db	0
  1590  01A46A  00                 	db	0
  1591  01A46B  00                 	db	0
  1592  01A46C  00                 	db	0
  1593  01A46D  00                 	db	0
  1594  01A46E  00                 	db	0
  1595  01A46F  00                 	db	0
  1596  01A470  00                 	db	0
  1597  01A471  00                 	db	0
  1598  01A472  00                 	db	0
  1599  01A473  00                 	db	0
  1600  01A474  00                 	db	0
  1601  01A475  00                 	db	0
  1602  01A476  00                 	db	0
  1603  01A477  00                 	db	0
  1604  01A478  00                 	db	0
  1605  01A479  00                 	db	0
  1606  01A47A  00                 	db	0
  1607  01A47B  00                 	db	0
  1608  01A47C  00                 	db	0
  1609  01A47D  00                 	db	0
  1610  01A47E  00                 	db	0
  1611  01A47F  00                 	db	0
  1612  01A480  00                 	db	0
  1613  01A481  00                 	db	0
  1614  01A482  00                 	db	0
  1615  01A483  00                 	db	0
  1616  01A484  0000               	dw	0
  1617  01A486  0000               	dw	0
  1618  01A488  0000               	dw	0
  1619  01A48A  0000               	dw	0
  1620  01A48C  0000               	dw	0
  1621  01A48E  0000               	dw	0
  1622  01A490  0000               	dw	0
  1623  01A492  0000               	dw	0
  1624  01A494  0000               	dw	0
  1625  01A496  0000               	dw	0
  1626  01A498  01                 	db	1
  1627  01A499  00                 	db	0
  1628  01A49A  0000               	dw	0
  1629  01A49C  0000               	dw	0
  1630  01A49E  0000               	dw	0
  1631  01A4A0  0000               	dw	0
  1632  01A4A2  0000               	dw	0
  1633  01A4A4  0000               	dw	0
  1634  01A4A6  0000               	dw	0
  1635  01A4A8  0000               	dw	0
  1636                           
  1637                           	psect	idataBANK1
  1638  01FCFC                     __pidataBANK1:
  1639                           	opt callstack 0
  1640                           
  1641                           ;initializer for stoa@F1166
  1642  01FCFC  28                 	db	40
  1643  01FCFD  6E                 	db	110
  1644  01FCFE  75                 	db	117
  1645  01FCFF  6C                 	db	108
  1646  01FD00  6C                 	db	108
  1647  01FD01  29                 	db	41
  1648  01FD02  00                 	db	0
  1649                           
  1650                           ;initializer for _R
  1651  01FD03  0000               	dw	0
  1652  01FD05  0000               	dw	0
  1653  01FD07  0000               	dw	0
  1654  01FD09  0000               	dw	0
  1655  01FD0B  0000               	dw	0
  1656  01FD0D  0000               	dw	0
  1657  01FD0F  0000               	dw	0
  1658  01FD11  0000               	dw	0
  1659  01FD13  0000               	dw	0
  1660  01FD15  0000               	dw	0
  1661  01FD17  0000               	dw	0
  1662  01FD19  0000               	dw	0
  1663  01FD1B  0000               	dw	0
  1664  01FD1D  0000               	dw	0
  1665  01FD1F  0000               	dw	0
  1666  01FD21  0000               	dw	0
  1667  01FD23  0000               	dw	0
  1668  01FD25  0000               	dw	0
  1669  01FD27  0000               	dw	0
  1670  01FD29  0F62               	dw	3938
  1671  01FD2B  0FA4               	dw	4004
  1672  01FD2D  89A0               	dw	35232
  1673  01FD2F  3DB0               	dw	15792
  1674  01FD31  DEA4               	dw	56996
  1675  01FD33  3D13               	dw	15635
  1676  01FD35  00                 	db	0
  1677  01FD36  0000               	dw	0
  1678  01FD38  00                 	db	0
  1679  01FD39  00                 	db	0
  1680  01FD3A  0000               	dw	0
  1681  01FD3C  0000               	dw	0
  1682  01FD3E  0000               	dw	0
  1683  01FD40  0000               	dw	0
  1684  01FD42  0000               	dw	0
  1685  01FD44  0000               	dw	0
  1686  01FD46  0000               	dw	0
  1687  01FD48  0000               	dw	0
  1688  01FD4A  0000               	dw	0
  1689  01FD4C  0000               	dw	0
  1690  01FD4E  0000               	dw	0
  1691  01FD50  00                 	db	0
  1692  01FD51  00                 	db	0
  1693  01FD52  0000               	dw	0
  1694  01FD54  0000               	dw	0
  1695  01FD56  0000               	dw	0
  1696  01FD58  0000               	dw	0
  1697  01FD5A  0000               	dw	0
  1698  01FD5C  0000               	dw	0
  1699  01FD5E  0000               	dw	0
  1700  01FD60  0000               	dw	0
  1701  01FD62  0000               	dw	0
  1702  01FD64  0000               	dw	0
  1703  01FD66  0000               	dw	0
  1704  01FD68  0000               	dw	0
  1705  01FD6A  0000               	dw	0
  1706  01FD6C  0000               	dw	0
  1707  01FD6E  0000               	dw	0
  1708  01FD70  0000               	dw	0
  1709  01FD72  0000               	dw	0
  1710  01FD74  0000               	dw	0
  1711  01FD76  0000               	dw	0
  1712  01FD78  0000               	dw	0
  1713  01FD7A  0000               	dw	0
  1714  01FD7C  0000               	dw	0
  1715  01FD7E  0000               	dw	0
  1716  01FD80  0000               	dw	0
  1717  01FD82  0000               	dw	0
  1718  01FD84  0000               	dw	0
  1719  01FD86  0000               	dw	0
  1720  01FD88  0000               	dw	0
  1721  01FD8A  0000               	dw	0
  1722  01FD8C  0000               	dw	0
  1723  01FD8E  0000               	dw	0
  1724  01FD90  0000               	dw	0
  1725  01FD92  0000               	dw	0
  1726  01FD94  0000               	dw	0
  1727  01FD96  0000               	dw	0
  1728  01FD98  0000               	dw	0
  1729  01FD9A  0000               	dw	0
  1730  01FD9C  0000               	dw	0
  1731  01FD9E  0000               	dw	0
  1732  01FDA0  0000               	dw	0
  1733  01FDA2  0000               	dw	0
  1734  01FDA4  0000               	dw	0
  1735  01FDA6  0000               	dw	0
  1736  01FDA8  0000               	dw	0
  1737  01FDAA  00                 	db	0
  1738  01FDAB  1957               	dw	6487
  1739  01FDAD  42                 	db	66
  1740                           
  1741                           ;initializer for _H
  1742  01FDAE  00                 	db	0
  1743  01FDAF  00                 	db	0
  1744  01FDB0  01                 	db	1
  1745  01FDB1  00                 	db	0
  1746  01FDB2  01                 	db	1
  1747  01FDB3  00                 	db	0
  1748  01FDB4  01                 	db	1
  1749  01FDB5  00                 	db	0
  1750  01FDB6  00                 	db	0
  1751                           
  1752                           	psect	idataBANK2
  1753  0000B6                     __pidataBANK2:
  1754                           	opt callstack 0
  1755                           
  1756                           ;initializer for _V
  1757  0000B6  00                 	db	0
  1758  0000B7  00                 	db	0
  1759  0000B8  00                 	db	0
  1760  0000B9  00                 	db	0
  1761  0000BA  00                 	db	0
  1762  0000BB  00                 	db	0
  1763  0000BC  00                 	db	0
  1764  0000BD  00                 	db	0
  1765  0000BE  00                 	db	0
  1766  0000BF  00                 	db	0
  1767  0000C0  00                 	db	0
  1768  0000C1  00                 	db	0
  1769  0000C2  00                 	db	0
  1770  0000C3  00                 	db	0
  1771  0000C4  00                 	db	0
  1772  0000C5  00                 	db	0
  1773  0000C6  00                 	db	0
  1774  0000C7  00                 	db	0
  1775  0000C8  00                 	db	0
  1776  0000C9  00                 	db	0
  1777  0000CA  00                 	db	0
  1778  0000CB  00                 	db	0
  1779  0000CC  00                 	db	0
  1780  0000CD  00                 	db	0
  1781  0000CE  00                 	db	0
  1782  0000CF  00                 	db	0
  1783  0000D0  00                 	db	0
  1784  0000D1  00                 	db	0
  1785  0000D2  00                 	db	0
  1786  0000D3  00                 	db	0
  1787  0000D4  00                 	db	0
  1788  0000D5  00                 	db	0
  1789  0000D6  00                 	db	0
  1790  0000D7  00                 	db	0
  1791  0000D8  00                 	db	0
  1792  0000D9  00                 	db	0
  1793  0000DA  00                 	db	0
  1794  0000DB  00                 	db	0
  1795  0000DC  00                 	db	0
  1796  0000DD  00                 	db	0
  1797  0000DE  00                 	db	0
  1798  0000DF  00                 	db	0
  1799  0000E0  00                 	db	0
  1800  0000E1  00                 	db	0
  1801  0000E2  00                 	db	0
  1802  0000E3  00                 	db	0
  1803  0000E4  00                 	db	0
  1804  0000E5  00                 	db	0
  1805  0000E6  00                 	db	0
  1806  0000E7  00                 	db	0
  1807  0000E8  00                 	db	0
  1808  0000E9  00                 	db	0
  1809  0000EA  00                 	db	0
  1810  0000EB  00                 	db	0
  1811  0000EC  00                 	db	0
  1812  0000ED  00                 	db	0
  1813  0000EE  00                 	db	0
  1814  0000EF  00                 	db	0
  1815  0000F0  00                 	db	0
  1816  0000F1  00                 	db	0
  1817  0000F2  00                 	db	0
  1818  0000F3  00                 	db	0
  1819  0000F4  00                 	db	0
  1820  0000F5  00                 	db	0
  1821  0000F6  00                 	db	0
  1822  0000F7  00                 	db	0
  1823  0000F8  00                 	db	0
  1824  0000F9  00                 	db	0
  1825  0000FA  00                 	db	0
  1826  0000FB  00                 	db	0
  1827  0000FC  00                 	db	0
  1828  0000FD  00                 	db	0
  1829  0000FE  00                 	db	0
  1830  0000FF  00                 	db	0
  1831  000100  00                 	db	0
  1832  000101  00                 	db	0
  1833  000102  00                 	db	0
  1834  000103  00                 	db	0
  1835  000104  00                 	db	0
  1836  000105  00                 	db	0
  1837  000106  00                 	db	0
  1838  000107  00                 	db	0
  1839  000108  00                 	db	0
  1840  000109  00                 	db	0
  1841  00010A  00                 	db	0
  1842  00010B  00                 	db	0
  1843  00010C  00                 	db	0
  1844  00010D  00                 	db	0
  1845  00010E  00                 	db	0
  1846  00010F  00                 	db	0
  1847  000110  00                 	db	0
  1848  000111  00                 	db	0
  1849  000112  00                 	db	0
  1850  000113  00                 	db	0
  1851  000114  00                 	db	0
  1852  000115  00                 	db	0
  1853  000116  00                 	db	0
  1854  000117  00                 	db	0
  1855  000118  00                 	db	0
  1856  000119  00                 	db	0
  1857  00011A  00                 	db	0
  1858  00011B  00                 	db	0
  1859  00011C  00                 	db	0
  1860  00011D  00                 	db	0
  1861  00011E  00                 	db	0
  1862  00011F  00                 	db	0
  1863  000120  00                 	db	0
  1864  000121  00                 	db	0
  1865  000122  00                 	db	0
  1866  000123  00                 	db	0
  1867  000124  00                 	db	0
  1868  000125  00                 	db	0
  1869  000126  00                 	db	0
  1870  000127  00                 	db	0
  1871  000128  00                 	db	0
  1872  000129  00                 	db	0
  1873  00012A  00                 	db	0
  1874  00012B  00                 	db	0
  1875  00012C  00                 	db	0
  1876  00012D  00                 	db	0
  1877  00012E  00                 	db	0
  1878  00012F  00                 	db	0
  1879  000130  00                 	db	0
  1880  000131  00                 	db	0
  1881  000132  00                 	db	0
  1882  000133  00                 	db	0
  1883  000134  00                 	db	0
  1884  000135  00                 	db	0
  1885  000136  00                 	db	0
  1886  000137  019A               	dw	410
  1887  000139  5E48               	dw	24136
  1888  00013B  00                 	db	0
  1889  00013C  00                 	db	0
  1890  00013D  00                 	db	0
  1891  00013E  00                 	db	0
  1892  00013F  00                 	db	0
  1893  000140  00                 	db	0
  1894  000141  00                 	db	0
  1895  000142  0000               	dw	0
  1896  000144  0000               	dw	0
  1897  000146  0000               	dw	0
  1898  000148  0000               	dw	0
  1899  00014A  0000               	dw	0
  1900  00014C  0000               	dw	0
  1901  00014E  00                 	db	0
  1902  00014F  00                 	db	0
  1903  000150  00                 	db	0
  1904  000151  00                 	db	0
  1905  000152  00                 	db	0
  1906  000153  00                 	db	0
  1907  000154  00                 	db	0
  1908  000155  00                 	db	0
  1909  000156  00                 	db	0
  1910  000157  00                 	db	0
  1911  000158  00                 	db	0
  1912  000159  0000               	dw	0
  1913  00015B  0000               	dw	0
  1914  00015D  2D                 	db	45
  1915  00015E  00                 	db	0
  1916  00015F  00                 	db	0
  1917  000160  00                 	db	0
  1918  000161  00                 	db	0
  1919  000162  00                 	db	0
  1920  000163  0000               	dw	0
  1921  000165  0000               	dw	0
  1922  000167  0000               	dw	0
  1923  000169  0000               	dw	0
  1924                           
  1925                           	psect	mediumconst
  1926  00F7F2                     __pmediumconst:
  1927                           	opt callstack 0
  1928  00F7F2  00                 	db	0
  1929  00F7F3                     _BVSOC_TABLE:
  1930                           	opt callstack 0
  1931  00F7F3  59D8               	dw	23000
  1932  00F7F5  0000               	dw	0
  1933  00F7F7  0005               	dw	5
  1934  00F7F9  0000               	dw	0
  1935  00F7FB  5B68               	dw	23400
  1936  00F7FD  0000               	dw	0
  1937  00F7FF  000A               	dw	10
  1938  00F801  0000               	dw	0
  1939  00F803  5C30               	dw	23600
  1940  00F805  0000               	dw	0
  1941  00F807  0014               	dw	20
  1942  00F809  0000               	dw	0
  1943  00F80B  5E38               	dw	24120
  1944  00F80D  0000               	dw	0
  1945  00F80F  0019               	dw	25
  1946  00F811  0000               	dw	0
  1947  00F813  5E88               	dw	24200
  1948  00F815  0000               	dw	0
  1949  00F817  001E               	dw	30
  1950  00F819  0000               	dw	0
  1951  00F81B  5F78               	dw	24440
  1952  00F81D  0000               	dw	0
  1953  00F81F  0028               	dw	40
  1954  00F821  0000               	dw	0
  1955  00F823  5FDC               	dw	24540
  1956  00F825  0000               	dw	0
  1957  00F827  002D               	dw	45
  1958  00F829  0000               	dw	0
  1959  00F82B  6018               	dw	24600
  1960  00F82D  0000               	dw	0
  1961  00F82F  0032               	dw	50
  1962  00F831  0000               	dw	0
  1963  00F833  6046               	dw	24646
  1964  00F835  0000               	dw	0
  1965  00F837  0035               	dw	53
  1966  00F839  0000               	dw	0
  1967  00F83B  607C               	dw	24700
  1968  00F83D  0000               	dw	0
  1969  00F83F  0037               	dw	55
  1970  00F841  0000               	dw	0
  1971  00F843  60AE               	dw	24750
  1972  00F845  0000               	dw	0
  1973  00F847  0039               	dw	57
  1974  00F849  0000               	dw	0
  1975  00F84B  60E0               	dw	24800
  1976  00F84D  0000               	dw	0
  1977  00F84F  003C               	dw	60
  1978  00F851  0000               	dw	0
  1979  00F853  6112               	dw	24850
  1980  00F855  0000               	dw	0
  1981  00F857  003F               	dw	63
  1982  00F859  0000               	dw	0
  1983  00F85B  615D               	dw	24925
  1984  00F85D  0000               	dw	0
  1985  00F85F  0043               	dw	67
  1986  00F861  0000               	dw	0
  1987  00F863  61A8               	dw	25000
  1988  00F865  0000               	dw	0
  1989  00F867  0046               	dw	70
  1990  00F869  0000               	dw	0
  1991  00F86B  61BC               	dw	25020
  1992  00F86D  0000               	dw	0
  1993  00F86F  0048               	dw	72
  1994  00F871  0000               	dw	0
  1995  00F873  61D0               	dw	25040
  1996  00F875  0000               	dw	0
  1997  00F877  004B               	dw	75
  1998  00F879  0000               	dw	0
  1999  00F87B  61DA               	dw	25050
  2000  00F87D  0000               	dw	0
  2001  00F87F  0050               	dw	80
  2002  00F881  0000               	dw	0
  2003  00F883  61E4               	dw	25060
  2004  00F885  0000               	dw	0
  2005  00F887  0055               	dw	85
  2006  00F889  0000               	dw	0
  2007  00F88B  61F8               	dw	25080
  2008  00F88D  0000               	dw	0
  2009  00F88F  005A               	dw	90
  2010  00F891  0000               	dw	0
  2011  00F893  6208               	dw	25096
  2012  00F895  0000               	dw	0
  2013  00F897  005C               	dw	92
  2014  00F899  0000               	dw	0
  2015  00F89B  6222               	dw	25122
  2016  00F89D  0000               	dw	0
  2017  00F89F  005D               	dw	93
  2018  00F8A1  0000               	dw	0
  2019  00F8A3  6234               	dw	25140
  2020  00F8A5  0000               	dw	0
  2021  00F8A7  005F               	dw	95
  2022  00F8A9  0000               	dw	0
  2023  00F8AB  6248               	dw	25160
  2024  00F8AD  0000               	dw	0
  2025  00F8AF  0061               	dw	97
  2026  00F8B1  0000               	dw	0
  2027  00F8B3  625C               	dw	25180
  2028  00F8B5  0000               	dw	0
  2029  00F8B7  0064               	dw	100
  2030  00F8B9  0000               	dw	0
  2031  00F8BB  6784               	dw	26500
  2032  00F8BD  0000               	dw	0
  2033  00F8BF  0062               	dw	98
  2034  00F8C1  0000               	dw	0
  2035  00F8C3                     __end_of_BVSOC_TABLE:
  2036                           	opt callstack 0
  2037  00F8C3                     ___month_to_secs@secs_through_month:
  2038                           	opt callstack 0
  2039  00F8C3  0000               	dw	0
  2040  00F8C5  0000               	dw	0
  2041  00F8C7  DE80               	dw	56960
  2042  00F8C9  0028               	dw	40
  2043  00F8CB  C880               	dw	51328
  2044  00F8CD  004D               	dw	77
  2045  00F8CF  A700               	dw	42752
  2046  00F8D1  0076               	dw	118
  2047  00F8D3  3400               	dw	13312
  2048  00F8D5  009E               	dw	158
  2049  00F8D7  1280               	dw	4736
  2050  00F8D9  00C7               	dw	199
  2051  00F8DB  9F80               	dw	40832
  2052  00F8DD  00EE               	dw	238
  2053  00F8DF  7E00               	dw	32256
  2054  00F8E1  0117               	dw	279
  2055  00F8E3  5C80               	dw	23680
  2056  00F8E5  0140               	dw	320
  2057  00F8E7  E980               	dw	59776
  2058  00F8E9  0167               	dw	359
  2059  00F8EB  C800               	dw	51200
  2060  00F8ED  0190               	dw	400
  2061  00F8EF  5500               	dw	21760
  2062  00F8F1  01B8               	dw	440
  2063  00F8F3                     __end_of___month_to_secs@secs_through_month:
  2064                           	opt callstack 0
  2065  00F8F3                     ___secs_to_tm@days_in_month:
  2066                           	opt callstack 0
  2067  00F8F3  1F                 	db	31
  2068  00F8F4  1E                 	db	30
  2069  00F8F5  1F                 	db	31
  2070  00F8F6  1E                 	db	30
  2071  00F8F7  1F                 	db	31
  2072  00F8F8  1F                 	db	31
  2073  00F8F9  1E                 	db	30
  2074  00F8FA  1F                 	db	31
  2075  00F8FB  1E                 	db	30
  2076  00F8FC  1F                 	db	31
  2077  00F8FD  1F                 	db	31
  2078  00F8FE  1D                 	db	29
  2079  00F8FF                     __end_of___secs_to_tm@days_in_month:
  2080                           	opt callstack 0
  2081  00F8FF                     _T:
  2082                           	opt callstack 0
  2083  00F8FF  63                 	db	99
  2084  00F900  6F                 	db	111
  2085  00F901  6D                 	db	109
  2086  00F902  6D                 	db	109
  2087  00F903  61                 	db	97
  2088  00F904  6E                 	db	110
  2089  00F905  64                 	db	100
  2090  00F906  73                 	db	115
  2091  00F907  20                 	db	32
  2092  00F908  31                 	db	49
  2093  00F909  00                 	db	0
  2094  00F90A  00                 	db	0
  2095  00F90B  00                 	db	0
  2096  00F90C  00                 	db	0
  2097  00F90D  00                 	db	0
  2098  00F90E  00                 	db	0
  2099  00F90F  00                 	db	0
  2100  00F910  00                 	db	0
  2101  00F911  00                 	db	0
  2102  00F912  00                 	db	0
  2103  00F913  00                 	db	0
  2104  00F914  00                 	db	0
  2105  00F915  64                 	db	100
  2106  00F916  69                 	db	105
  2107  00F917  73                 	db	115
  2108  00F918  70                 	db	112
  2109  00F919  6C                 	db	108
  2110  00F91A  61                 	db	97
  2111  00F91B  79                 	db	121
  2112  00F91C  73                 	db	115
  2113  00F91D  20                 	db	32
  2114  00F91E  31                 	db	49
  2115  00F91F  00                 	db	0
  2116  00F920  00                 	db	0
  2117  00F921  00                 	db	0
  2118  00F922  00                 	db	0
  2119  00F923  00                 	db	0
  2120  00F924  00                 	db	0
  2121  00F925  00                 	db	0
  2122  00F926  00                 	db	0
  2123  00F927  00                 	db	0
  2124  00F928  00                 	db	0
  2125  00F929  00                 	db	0
  2126  00F92A  00                 	db	0
  2127  00F92B  63                 	db	99
  2128  00F92C  6F                 	db	111
  2129  00F92D  6D                 	db	109
  2130  00F92E  6D                 	db	109
  2131  00F92F  61                 	db	97
  2132  00F930  6E                 	db	110
  2133  00F931  64                 	db	100
  2134  00F932  73                 	db	115
  2135  00F933  20                 	db	32
  2136  00F934  32                 	db	50
  2137  00F935  00                 	db	0
  2138  00F936  00                 	db	0
  2139  00F937  00                 	db	0
  2140  00F938  00                 	db	0
  2141  00F939  00                 	db	0
  2142  00F93A  00                 	db	0
  2143  00F93B  00                 	db	0
  2144  00F93C  00                 	db	0
  2145  00F93D  00                 	db	0
  2146  00F93E  00                 	db	0
  2147  00F93F  00                 	db	0
  2148  00F940  00                 	db	0
  2149  00F941  64                 	db	100
  2150  00F942  69                 	db	105
  2151  00F943  73                 	db	115
  2152  00F944  70                 	db	112
  2153  00F945  6C                 	db	108
  2154  00F946  61                 	db	97
  2155  00F947  79                 	db	121
  2156  00F948  73                 	db	115
  2157  00F949  20                 	db	32
  2158  00F94A  32                 	db	50
  2159  00F94B  00                 	db	0
  2160  00F94C  00                 	db	0
  2161  00F94D  00                 	db	0
  2162  00F94E  00                 	db	0
  2163  00F94F  00                 	db	0
  2164  00F950  00                 	db	0
  2165  00F951  00                 	db	0
  2166  00F952  00                 	db	0
  2167  00F953  00                 	db	0
  2168  00F954  00                 	db	0
  2169  00F955  00                 	db	0
  2170  00F956  00                 	db	0
  2171  00F957  63                 	db	99
  2172  00F958  6F                 	db	111
  2173  00F959  6D                 	db	109
  2174  00F95A  6D                 	db	109
  2175  00F95B  61                 	db	97
  2176  00F95C  6E                 	db	110
  2177  00F95D  64                 	db	100
  2178  00F95E  73                 	db	115
  2179  00F95F  20                 	db	32
  2180  00F960  33                 	db	51
  2181  00F961  00                 	db	0
  2182  00F962  00                 	db	0
  2183  00F963  00                 	db	0
  2184  00F964  00                 	db	0
  2185  00F965  00                 	db	0
  2186  00F966  00                 	db	0
  2187  00F967  00                 	db	0
  2188  00F968  00                 	db	0
  2189  00F969  00                 	db	0
  2190  00F96A  00                 	db	0
  2191  00F96B  00                 	db	0
  2192  00F96C  00                 	db	0
  2193  00F96D  64                 	db	100
  2194  00F96E  69                 	db	105
  2195  00F96F  73                 	db	115
  2196  00F970  70                 	db	112
  2197  00F971  6C                 	db	108
  2198  00F972  61                 	db	97
  2199  00F973  79                 	db	121
  2200  00F974  73                 	db	115
  2201  00F975  20                 	db	32
  2202  00F976  33                 	db	51
  2203  00F977  00                 	db	0
  2204  00F978  00                 	db	0
  2205  00F979  00                 	db	0
  2206  00F97A  00                 	db	0
  2207  00F97B  00                 	db	0
  2208  00F97C  00                 	db	0
  2209  00F97D  00                 	db	0
  2210  00F97E  00                 	db	0
  2211  00F97F  00                 	db	0
  2212  00F980  00                 	db	0
  2213  00F981  00                 	db	0
  2214  00F982  00                 	db	0
  2215  00F983  63                 	db	99
  2216  00F984  6F                 	db	111
  2217  00F985  6D                 	db	109
  2218  00F986  6D                 	db	109
  2219  00F987  61                 	db	97
  2220  00F988  6E                 	db	110
  2221  00F989  64                 	db	100
  2222  00F98A  73                 	db	115
  2223  00F98B  20                 	db	32
  2224  00F98C  34                 	db	52
  2225  00F98D  00                 	db	0
  2226  00F98E  00                 	db	0
  2227  00F98F  00                 	db	0
  2228  00F990  00                 	db	0
  2229  00F991  00                 	db	0
  2230  00F992  00                 	db	0
  2231  00F993  00                 	db	0
  2232  00F994  00                 	db	0
  2233  00F995  00                 	db	0
  2234  00F996  00                 	db	0
  2235  00F997  00                 	db	0
  2236  00F998  00                 	db	0
  2237  00F999  64                 	db	100
  2238  00F99A  69                 	db	105
  2239  00F99B  73                 	db	115
  2240  00F99C  70                 	db	112
  2241  00F99D  6C                 	db	108
  2242  00F99E  61                 	db	97
  2243  00F99F  79                 	db	121
  2244  00F9A0  73                 	db	115
  2245  00F9A1  20                 	db	32
  2246  00F9A2  34                 	db	52
  2247  00F9A3  00                 	db	0
  2248  00F9A4  00                 	db	0
  2249  00F9A5  00                 	db	0
  2250  00F9A6  00                 	db	0
  2251  00F9A7  00                 	db	0
  2252  00F9A8  00                 	db	0
  2253  00F9A9  00                 	db	0
  2254  00F9AA  00                 	db	0
  2255  00F9AB  00                 	db	0
  2256  00F9AC  00                 	db	0
  2257  00F9AD  00                 	db	0
  2258  00F9AE  00                 	db	0
  2259  00F9AF                     __end_of_T:
  2260                           	opt callstack 0
  2261  00F9AF                     _spin:
  2262                           	opt callstack 0
  2263  00F9AF  7C                 	db	124
  2264  00F9B0  7C                 	db	124
  2265  00F9B1  2F                 	db	47
  2266  00F9B2  2F                 	db	47
  2267  00F9B3  2D                 	db	45
  2268  00F9B4  2D                 	db	45
  2269  00F9B5  00                 	db	0
  2270  00F9B6  00                 	db	0
  2271  00F9B7  00                 	db	0
  2272  00F9B8  00                 	db	0
  2273  00F9B9  00                 	db	0
  2274  00F9BA  00                 	db	0
  2275  00F9BB  00                 	db	0
  2276  00F9BC  00                 	db	0
  2277  00F9BD  00                 	db	0
  2278  00F9BE  00                 	db	0
  2279  00F9BF  00                 	db	0
  2280  00F9C0  00                 	db	0
  2281  00F9C1  00                 	db	0
  2282  00F9C2  00                 	db	0
  2283  00F9C3  7C                 	db	124
  2284  00F9C4  7C                 	db	124
  2285  00F9C5  2F                 	db	47
  2286  00F9C6  2F                 	db	47
  2287  00F9C7  2D                 	db	45
  2288  00F9C8  2D                 	db	45
  2289  00F9C9  5C                 	db	92
  2290  00F9CA  5C                 	db	92
  2291  00F9CB  00                 	db	0
  2292  00F9CC  00                 	db	0
  2293  00F9CD  00                 	db	0
  2294  00F9CE  00                 	db	0
  2295  00F9CF  00                 	db	0
  2296  00F9D0  00                 	db	0
  2297  00F9D1  00                 	db	0
  2298  00F9D2  00                 	db	0
  2299  00F9D3  00                 	db	0
  2300  00F9D4  00                 	db	0
  2301  00F9D5  00                 	db	0
  2302  00F9D6  00                 	db	0
  2303  00F9D7  4F                 	db	79
  2304  00F9D8  4F                 	db	79
  2305  00F9D9  4F                 	db	79
  2306  00F9DA  4F                 	db	79
  2307  00F9DB  4F                 	db	79
  2308  00F9DC  4F                 	db	79
  2309  00F9DD  2D                 	db	45
  2310  00F9DE  2D                 	db	45
  2311  00F9DF  5F                 	db	95
  2312  00F9E0  5F                 	db	95
  2313  00F9E1  2D                 	db	45
  2314  00F9E2  00                 	db	0
  2315  00F9E3  00                 	db	0
  2316  00F9E4  00                 	db	0
  2317  00F9E5  00                 	db	0
  2318  00F9E6  00                 	db	0
  2319  00F9E7  00                 	db	0
  2320  00F9E8  00                 	db	0
  2321  00F9E9  00                 	db	0
  2322  00F9EA  00                 	db	0
  2323  00F9EB  76                 	db	118
  2324  00F9EC  76                 	db	118
  2325  00F9ED  3C                 	db	60
  2326  00F9EE  3C                 	db	60
  2327  00F9EF  5E                 	db	94
  2328  00F9F0  5E                 	db	94
  2329  00F9F1  3E                 	db	62
  2330  00F9F2  3E                 	db	62
  2331  00F9F3  00                 	db	0
  2332  00F9F4  00                 	db	0
  2333  00F9F5  00                 	db	0
  2334  00F9F6  00                 	db	0
  2335  00F9F7  00                 	db	0
  2336  00F9F8  00                 	db	0
  2337  00F9F9  00                 	db	0
  2338  00F9FA  00                 	db	0
  2339  00F9FB  00                 	db	0
  2340  00F9FC  00                 	db	0
  2341  00F9FD  00                 	db	0
  2342  00F9FE  00                 	db	0
  2343  00F9FF  2E                 	db	46
  2344  00FA00  2E                 	db	46
  2345  00FA01  2A                 	db	42
  2346  00FA02  2A                 	db	42
  2347  00FA03  78                 	db	120
  2348  00FA04  23                 	db	35
  2349  00FA05  78                 	db	120
  2350  00FA06  23                 	db	35
  2351  00FA07  58                 	db	88
  2352  00FA08  58                 	db	88
  2353  00FA09  7C                 	db	124
  2354  00FA0A  7C                 	db	124
  2355  00FA0B  2D                 	db	45
  2356  00FA0C  2D                 	db	45
  2357  00FA0D  00                 	db	0
  2358  00FA0E  00                 	db	0
  2359  00FA0F  00                 	db	0
  2360  00FA10  00                 	db	0
  2361  00FA11  00                 	db	0
  2362  00FA12  00                 	db	0
  2363  00FA13  2E                 	db	46
  2364  00FA14  2E                 	db	46
  2365  00FA15  6F                 	db	111
  2366  00FA16  6F                 	db	111
  2367  00FA17  4F                 	db	79
  2368  00FA18  4F                 	db	79
  2369  00FA19  6F                 	db	111
  2370  00FA1A  6F                 	db	111
  2371  00FA1B  00                 	db	0
  2372  00FA1C  00                 	db	0
  2373  00FA1D  00                 	db	0
  2374  00FA1E  00                 	db	0
  2375  00FA1F  00                 	db	0
  2376  00FA20  00                 	db	0
  2377  00FA21  00                 	db	0
  2378  00FA22  00                 	db	0
  2379  00FA23  00                 	db	0
  2380  00FA24  00                 	db	0
  2381  00FA25  00                 	db	0
  2382  00FA26  00                 	db	0
  2383  00FA27                     __end_of_spin:
  2384                           	opt callstack 0
  2385  00FA27  0000               	dw	0
  2386  00FA29  3F80               	dw	16256
  2387  00FA2B  0000               	dw	0
  2388  00FA2D  3FC0               	dw	16320
  2389  00FA2F                     __end_of_bp:
  2390                           	opt callstack 0
  2391  00FA2F                     ___gmt:
  2392                           	opt callstack 0
  2393  00FA2F  47                 	db	71
  2394  00FA30  4D                 	db	77
  2395  00FA31  54                 	db	84
  2396  00FA32  00                 	db	0
  2397  00FA33                     __end_of___gmt:
  2398                           	opt callstack 0
  2399  00FA33  AA00               	dw	43520
  2400  00FA35  3FB8               	dw	16312
  2401  00FA37                     __end_of_ivln2_h:
  2402                           	opt callstack 0
  2403  00FA37  23C6               	dw	9158
  2404  00FA39  B8F6               	dw	47350
  2405  00FA3B                     __end_of_cp_l:
  2406                           	opt callstack 0
  2407  00FA3B  4000               	dw	16384
  2408  00FA3D  3F76               	dw	16246
  2409  00FA3F                     __end_of_cp_h:
  2410                           	opt callstack 0
  2411  0000                     _IVTADL	set	14493
  2412  0000                     _IVTADH	set	14494
  2413  0000                     _IVTADU	set	14495
  2414  0000                     _CRCDATH	set	14689
  2415  0000                     _CRCDATL	set	14688
  2416  0000                     _CRCCON0bits	set	14696
  2417  0000                     _CRCCON1bits	set	14697
  2418  0000                     _CRCXORL	set	14694
  2419  0000                     _CRCXORH	set	14695
  2420  0000                     _SCANTRIG	set	14717
  2421  0000                     _SCANHADRL	set	14713
  2422  0000                     _SCANHADRH	set	14714
  2423  0000                     _SCANHADRU	set	14715
  2424  0000                     _SCANLADRL	set	14710
  2425  0000                     _SCANLADRH	set	14711
  2426  0000                     _SCANLADRU	set	14712
  2427  0000                     _SCANCON0	set	14716
  2428  0000                     _CRCACCH	set	14691
  2429  0000                     _CRCACCL	set	14690
  2430  0000                     _CRCCON1	set	14697
  2431  0000                     _CRCCON0	set	14696
  2432  0000                     _PIR6bits	set	14758
  2433  0000                     _PIR4bits	set	14756
  2434  0000                     _PIE8bits	set	14744
  2435  0000                     _PIR8bits	set	14760
  2436  0000                     _PIR0bits	set	14752
  2437  0000                     _NVMCON2	set	14822
  2438  0000                     _NVMDAT	set	14819
  2439  0000                     _NVMADRL	set	14816
  2440  0000                     _NVMADRH	set	14817
  2441  0000                     _NVMCON1bits	set	14821
  2442  0000                     _SCANPR	set	14839
  2443  0000                     _DMA2PR	set	14836
  2444  0000                     _DMA1PR	set	14835
  2445  0000                     _MAINPR	set	14834
  2446  0000                     _ISRPR	set	14833
  2447  0000                     _PIE2bits	set	14738
  2448  0000                     _PIR2bits	set	14754
  2449  0000                     _PIE9bits	set	14745
  2450  0000                     _PIR9bits	set	14761
  2451  0000                     _PIE6bits	set	14742
  2452  0000                     _PIE3bits	set	14739
  2453  0000                     _PMD7	set	14791
  2454  0000                     _PMD6	set	14790
  2455  0000                     _PMD5	set	14789
  2456  0000                     _PMD4	set	14788
  2457  0000                     _PMD3	set	14787
  2458  0000                     _PMD2	set	14786
  2459  0000                     _PMD1	set	14785
  2460  0000                     _PMD0	set	14784
  2461  0000                     _OSCTUNE	set	14814
  2462  0000                     _OSCFRQ	set	14815
  2463  0000                     _OSCEN	set	14813
  2464  0000                     _OSCCON3	set	14811
  2465  0000                     _OSCCON1	set	14809
  2466  0000                     _IPR8bits	set	14728
  2467  0000                     _IPR9bits	set	14729
  2468  0000                     _IPR5bits	set	14725
  2469  0000                     _IPR1bits	set	14721
  2470  0000                     _IPR3bits	set	14723
  2471  0000                     _IPR6bits	set	14726
  2472  0000                     _IPR2bits	set	14722
  2473  0000                     _PIE5bits	set	14741
  2474  0000                     _PIE1bits	set	14737
  2475  0000                     _PIR5bits	set	14757
  2476  0000                     _PIR1bits	set	14753
  2477  0000                     _PLLR	set	118496
  2478  0000                     _SPI1SDIPPS	set	15071
  2479  0000                     _U1RXPPS	set	15077
  2480  0000                     _RC6PPS	set	14870
  2481  0000                     _RC5PPS	set	14869
  2482  0000                     _INT1PPS	set	15041
  2483  0000                     _RD1PPS	set	14873
  2484  0000                     _INT0PPS	set	15040
  2485  0000                     _RC3PPS	set	14867
  2486  0000                     _RB6PPS	set	14862
  2487  0000                     _SPI1SCKPPS	set	15070
  2488  0000                     _U2RXPPS	set	15080
  2489  0000                     _SLRCONF	set	14995
  2490  0000                     _SLRCONE	set	14979
  2491  0000                     _SLRCOND	set	14963
  2492  0000                     _SLRCONC	set	14947
  2493  0000                     _SLRCONB	set	14931
  2494  0000                     _SLRCONA	set	14915
  2495  0000                     _ODCOND	set	14962
  2496  0000                     _ODCONC	set	14946
  2497  0000                     _ODCONB	set	14930
  2498  0000                     _ODCONA	set	14914
  2499  0000                     _ODCONF	set	14994
  2500  0000                     _ODCONE	set	14978
  2501  0000                     _WPUC	set	14945
  2502  0000                     _WPUA	set	14913
  2503  0000                     _WPUB	set	14929
  2504  0000                     _WPUE	set	14977
  2505  0000                     _WPUF	set	14993
  2506  0000                     _WPUD	set	14961
  2507  0000                     _ANSELA	set	14912
  2508  0000                     _ANSELF	set	14992
  2509  0000                     _ANSELE	set	14976
  2510  0000                     _ANSELB	set	14928
  2511  0000                     _ANSELC	set	14944
  2512  0000                     _ANSELD	set	14960
  2513  0000                     _DMA2SSA	set	15321
  2514  0000                     _DMA1SSA	set	15353
  2515  0000                     _DMA2DSZ	set	15310
  2516  0000                     _DMA2SSZ	set	15319
  2517  0000                     _DMA2DSA	set	15312
  2518  0000                     _DMA1DSZ	set	15342
  2519  0000                     _DMA1SSZ	set	15351
  2520  0000                     _DMA1DSA	set	15344
  2521  0000                     _DMA2CON0bits	set	15324
  2522  0000                     _DMA2CON1bits	set	15325
  2523  0000                     _DMA1CON0bits	set	15356
  2524  0000                     _DMA1CON1bits	set	15357
  2525  0000                     _DMA2CON0	set	15324
  2526  0000                     _DMA2AIRQ	set	15326
  2527  0000                     _DMA2SIRQ	set	15327
  2528  0000                     _DMA2CON1	set	15325
  2529  0000                     _DMA1CON0	set	15356
  2530  0000                     _DMA1AIRQ	set	15358
  2531  0000                     _DMA1SIRQ	set	15359
  2532  0000                     _DMA1CON1	set	15357
  2533  0000                     _CLKRCON	set	15589
  2534  0000                     _CLKRCLK	set	15590
  2535  0000                     _SPI1CON1bits	set	15637
  2536  0000                     _SPI1STATUSbits	set	15639
  2537  0000                     _SPI1INTFbits	set	15642
  2538  0000                     _SPI1CON0bits	set	15636
  2539  0000                     _SPI1RXB	set	15632
  2540  0000                     _SPI1TXB	set	15633
  2541  0000                     _SPI1TCNTL	set	15634
  2542  0000                     _SPI1CON0	set	15636
  2543  0000                     _SPI1CLK	set	15644
  2544  0000                     _SPI1BAUD	set	15641
  2545  0000                     _SPI1CON2	set	15638
  2546  0000                     _SPI1CON1	set	15637
  2547  0000                     _U2RXB	set	15824
  2548  0000                     _U2TXB	set	15826
  2549  0000                     _U2ERRIE	set	15842
  2550  0000                     _U2ERRIR	set	15841
  2551  0000                     _U2UIR	set	15840
  2552  0000                     _U2FIFO	set	15839
  2553  0000                     _U2BRGH	set	15838
  2554  0000                     _U2BRGL	set	15837
  2555  0000                     _U2CON2	set	15836
  2556  0000                     _U2CON1	set	15835
  2557  0000                     _U2CON0	set	15834
  2558  0000                     _U2P3L	set	15832
  2559  0000                     _U2P2L	set	15830
  2560  0000                     _U2P1L	set	15828
  2561  0000                     _U1RXB	set	15848
  2562  0000                     _U1ERRIE	set	15866
  2563  0000                     _U1ERRIR	set	15865
  2564  0000                     _U1UIR	set	15864
  2565  0000                     _U1FIFO	set	15863
  2566  0000                     _U1BRGH	set	15862
  2567  0000                     _U1BRGL	set	15861
  2568  0000                     _U1CON2	set	15860
  2569  0000                     _U1CON1	set	15859
  2570  0000                     _U1CON0	set	15858
  2571  0000                     _U1P3H	set	15857
  2572  0000                     _U1P3L	set	15856
  2573  0000                     _U1P2H	set	15855
  2574  0000                     _U1P2L	set	15854
  2575  0000                     _U1P1H	set	15853
  2576  0000                     _U1P1L	set	15852
  2577  0000                     _FVRCON	set	16065
  2578  0000                     _ADFLTRL	set	16102
  2579  0000                     _ADFLTRH	set	16103
  2580  0000                     _ADCON0bits	set	16120
  2581  0000                     _ADCON0	set	16120
  2582  0000                     _ADCLK	set	16127
  2583  0000                     _ADACT	set	16126
  2584  0000                     _ADREF	set	16125
  2585  0000                     _ADSTAT	set	16124
  2586  0000                     _ADCON3	set	16123
  2587  0000                     _ADCON2	set	16122
  2588  0000                     _ADCON1	set	16121
  2589  0000                     _ADPREH	set	16119
  2590  0000                     _ADPREL	set	16118
  2591  0000                     _ADCAP	set	16117
  2592  0000                     _ADACQH	set	16116
  2593  0000                     _ADACQL	set	16115
  2594  0000                     _ADPCH	set	16113
  2595  0000                     _ADRPT	set	16108
  2596  0000                     _ADACCU	set	16106
  2597  0000                     _ADSTPTH	set	16101
  2598  0000                     _ADSTPTL	set	16100
  2599  0000                     _ADUTHH	set	16097
  2600  0000                     _ADUTHL	set	16096
  2601  0000                     _ADLTHH	set	16095
  2602  0000                     _ADLTHL	set	16094
  2603  0000                     _CCPTMRS1bits	set	16223
  2604  0000                     _PORTDbits	set	16333
  2605  0000                     _PORTFbits	set	16335
  2606  0000                     _LATFbits	set	16319
  2607  0000                     _LATCbits	set	16316
  2608  0000                     _LATDbits	set	16317
  2609  0000                     _PORTBbits	set	16331
  2610  0000                     _T3CONbits	set	16294
  2611  0000                     _T3CON	set	16294
  2612  0000                     _TMR3L	set	16292
  2613  0000                     _TMR3H	set	16293
  2614  0000                     _T3CLK	set	16297
  2615  0000                     _T3GATE	set	16296
  2616  0000                     _T3GCON	set	16295
  2617  0000                     _T2CON	set	16300
  2618  0000                     _T2TMR	set	16298
  2619  0000                     _T2PR	set	16299
  2620  0000                     _T2RST	set	16303
  2621  0000                     _T2HLT	set	16301
  2622  0000                     _T2CLKCON	set	16302
  2623  0000                     _PWM8DCL	set	16224
  2624  0000                     _PWM8DCH	set	16225
  2625  0000                     _PWM8CON	set	16226
  2626  0000                     _LATEbits	set	16318
  2627  0000                     _T5CONbits	set	16282
  2628  0000                     _T5CON	set	16282
  2629  0000                     _TMR5L	set	16280
  2630  0000                     _TMR5H	set	16281
  2631  0000                     _T5CLK	set	16285
  2632  0000                     _T5GATE	set	16284
  2633  0000                     _T5GCON	set	16283
  2634  0000                     _T6CON	set	16276
  2635  0000                     _T6TMR	set	16274
  2636  0000                     _T6PR	set	16275
  2637  0000                     _T6RST	set	16279
  2638  0000                     _T6HLT	set	16277
  2639  0000                     _T6CLKCON	set	16278
  2640  0000                     _TRISD	set	16325
  2641  0000                     _TRISC	set	16324
  2642  0000                     _TRISB	set	16323
  2643  0000                     _TRISA	set	16322
  2644  0000                     _TRISF	set	16327
  2645  0000                     _TRISE	set	16326
  2646  0000                     _LATC	set	16316
  2647  0000                     _LATB	set	16315
  2648  0000                     _LATF	set	16319
  2649  0000                     _LATA	set	16314
  2650  0000                     _LATD	set	16317
  2651  0000                     _LATE	set	16318
  2652  0000                     _IVTLOCKbits	set	16340
  2653  0000                     _IVTLOCK	set	16340
  2654  0000                     _INTCON0bits	set	16338
  2655  0000                     _GIE	set	130711
  2656  00FA3F                     STR_90:
  2657                           
  2658                           ; BSR set to: 57
  2659  00FA3F  20                 	db	32
  2660  00FA40  25                 	db	37
  2661  00FA41  63                 	db	99	;'c'
  2662  00FA42  20                 	db	32
  2663  00FA43  2C                 	db	44
  2664  00FA44  25                 	db	37
  2665  00FA45  6C                 	db	108	;'l'
  2666  00FA46  75                 	db	117	;'u'
  2667  00FA47  2C                 	db	44
  2668  00FA48  25                 	db	37
  2669  00FA49  34                 	db	52	;'4'
  2670  00FA4A  2E                 	db	46
  2671  00FA4B  34                 	db	52	;'4'
  2672  00FA4C  66                 	db	102	;'f'
  2673  00FA4D  2C                 	db	44
  2674  00FA4E  25                 	db	37
  2675  00FA4F  34                 	db	52	;'4'
  2676  00FA50  2E                 	db	46
  2677  00FA51  34                 	db	52	;'4'
  2678  00FA52  66                 	db	102	;'f'
  2679  00FA53  2C                 	db	44
  2680  00FA54  25                 	db	37
  2681  00FA55  34                 	db	52	;'4'
  2682  00FA56  2E                 	db	46
  2683  00FA57  34                 	db	52	;'4'
  2684  00FA58  66                 	db	102	;'f'
  2685  00FA59  2C                 	db	44
  2686  00FA5A  25                 	db	37
  2687  00FA5B  34                 	db	52	;'4'
  2688  00FA5C  2E                 	db	46
  2689  00FA5D  34                 	db	52	;'4'
  2690  00FA5E  66                 	db	102	;'f'
  2691  00FA5F  2C                 	db	44
  2692  00FA60  25                 	db	37
  2693  00FA61  34                 	db	52	;'4'
  2694  00FA62  2E                 	db	46
  2695  00FA63  34                 	db	52	;'4'
  2696  00FA64  66                 	db	102	;'f'
  2697  00FA65  2C                 	db	44
  2698  00FA66  25                 	db	37
  2699  00FA67  34                 	db	52	;'4'
  2700  00FA68  2E                 	db	46
  2701  00FA69  33                 	db	51	;'3'
  2702  00FA6A  66                 	db	102	;'f'
  2703  00FA6B  2C                 	db	44
  2704  00FA6C  25                 	db	37
  2705  00FA6D  34                 	db	52	;'4'
  2706  00FA6E  2E                 	db	46
  2707  00FA6F  33                 	db	51	;'3'
  2708  00FA70  66                 	db	102	;'f'
  2709  00FA71  2C                 	db	44
  2710  00FA72  25                 	db	37
  2711  00FA73  34                 	db	52	;'4'
  2712  00FA74  2E                 	db	46
  2713  00FA75  33                 	db	51	;'3'
  2714  00FA76  66                 	db	102	;'f'
  2715  00FA77  2C                 	db	44
  2716  00FA78  25                 	db	37
  2717  00FA79  34                 	db	52	;'4'
  2718  00FA7A  2E                 	db	46
  2719  00FA7B  33                 	db	51	;'3'
  2720  00FA7C  66                 	db	102	;'f'
  2721  00FA7D  2C                 	db	44
  2722  00FA7E  25                 	db	37
  2723  00FA7F  34                 	db	52	;'4'
  2724  00FA80  2E                 	db	46
  2725  00FA81  33                 	db	51	;'3'
  2726  00FA82  66                 	db	102	;'f'
  2727  00FA83  2C                 	db	44
  2728  00FA84  25                 	db	37
  2729  00FA85  34                 	db	52	;'4'
  2730  00FA86  2E                 	db	46
  2731  00FA87  33                 	db	51	;'3'
  2732  00FA88  66                 	db	102	;'f'
  2733  00FA89  2C                 	db	44
  2734  00FA8A  25                 	db	37
  2735  00FA8B  64                 	db	100	;'d'
  2736  00FA8C  2C                 	db	44
  2737  00FA8D  25                 	db	37
  2738  00FA8E  64                 	db	100	;'d'
  2739  00FA8F  2C                 	db	44
  2740  00FA90  25                 	db	37
  2741  00FA91  32                 	db	50	;'2'
  2742  00FA92  2E                 	db	46
  2743  00FA93  36                 	db	54	;'6'
  2744  00FA94  66                 	db	102	;'f'
  2745  00FA95  2C                 	db	44
  2746  00FA96  25                 	db	37
  2747  00FA97  34                 	db	52	;'4'
  2748  00FA98  2E                 	db	46
  2749  00FA99  33                 	db	51	;'3'
  2750  00FA9A  66                 	db	102	;'f'
  2751  00FA9B  2C                 	db	44
  2752  00FA9C  25                 	db	37
  2753  00FA9D  64                 	db	100	;'d'
  2754  00FA9E  2C                 	db	44
  2755  00FA9F  25                 	db	37
  2756  00FAA0  64                 	db	100	;'d'
  2757  00FAA1  2C                 	db	44
  2758  00FAA2  25                 	db	37
  2759  00FAA3  6C                 	db	108	;'l'
  2760  00FAA4  75                 	db	117	;'u'
  2761  00FAA5  2C                 	db	44
  2762  00FAA6  25                 	db	37
  2763  00FAA7  6C                 	db	108	;'l'
  2764  00FAA8  75                 	db	117	;'u'
  2765  00FAA9  2C                 	db	44
  2766  00FAAA  25                 	db	37
  2767  00FAAB  34                 	db	52	;'4'
  2768  00FAAC  2E                 	db	46
  2769  00FAAD  33                 	db	51	;'3'
  2770  00FAAE  66                 	db	102	;'f'
  2771  00FAAF  2C                 	db	44
  2772  00FAB0  25                 	db	37
  2773  00FAB1  34                 	db	52	;'4'
  2774  00FAB2  2E                 	db	46
  2775  00FAB3  33                 	db	51	;'3'
  2776  00FAB4  66                 	db	102	;'f'
  2777  00FAB5  2C                 	db	44
  2778  00FAB6  25                 	db	37
  2779  00FAB7  34                 	db	52	;'4'
  2780  00FAB8  2E                 	db	46
  2781  00FAB9  33                 	db	51	;'3'
  2782  00FABA  66                 	db	102	;'f'
  2783  00FABB  0D                 	db	13
  2784  00FABC  0A                 	db	10
  2785  00FABD  00                 	db	0
  2786  00FABE                     STR_128:
  2787                           
  2788                           ; BSR set to: 57
  2789  00FABE  4A                 	db	74	;'J'
  2790  00FABF  61                 	db	97	;'a'
  2791  00FAC0  6E                 	db	110	;'n'
  2792  00FAC1  46                 	db	70	;'F'
  2793  00FAC2  65                 	db	101	;'e'
  2794  00FAC3  62                 	db	98	;'b'
  2795  00FAC4  4D                 	db	77	;'M'
  2796  00FAC5  61                 	db	97	;'a'
  2797  00FAC6  72                 	db	114	;'r'
  2798  00FAC7  41                 	db	65	;'A'
  2799  00FAC8  70                 	db	112	;'p'
  2800  00FAC9  72                 	db	114	;'r'
  2801  00FACA  4D                 	db	77	;'M'
  2802  00FACB  61                 	db	97	;'a'
  2803  00FACC  79                 	db	121	;'y'
  2804  00FACD  4A                 	db	74	;'J'
  2805  00FACE  75                 	db	117	;'u'
  2806  00FACF  6E                 	db	110	;'n'
  2807  00FAD0  4A                 	db	74	;'J'
  2808  00FAD1  75                 	db	117	;'u'
  2809  00FAD2  6C                 	db	108	;'l'
  2810  00FAD3  41                 	db	65	;'A'
  2811  00FAD4  75                 	db	117	;'u'
  2812  00FAD5  67                 	db	103	;'g'
  2813  00FAD6  53                 	db	83	;'S'
  2814  00FAD7  65                 	db	101	;'e'
  2815  00FAD8  70                 	db	112	;'p'
  2816  00FAD9  4F                 	db	79	;'O'
  2817  00FADA  63                 	db	99	;'c'
  2818  00FADB  74                 	db	116	;'t'
  2819  00FADC  4E                 	db	78	;'N'
  2820  00FADD  6F                 	db	111	;'o'
  2821  00FADE  76                 	db	118	;'v'
  2822  00FADF  44                 	db	68	;'D'
  2823  00FAE0  65                 	db	101	;'e'
  2824  00FAE1  63                 	db	99	;'c'
  2825  00FAE2  00                 	db	0
  2826  00FAE3                     STR_44:
  2827                           
  2828                           ; BSR set to: 57
  2829  00FAE3  53                 	db	83	;'S'
  2830  00FAE4  25                 	db	37
  2831  00FAE5  63                 	db	99	;'c'
  2832  00FAE6  43                 	db	67	;'C'
  2833  00FAE7  20                 	db	32
  2834  00FAE8  25                 	db	37
  2835  00FAE9  64                 	db	100	;'d'
  2836  00FAEA  20                 	db	32
  2837  00FAEB  52                 	db	82	;'R'
  2838  00FAEC  55                 	db	85	;'U'
  2839  00FAED  4E                 	db	78	;'N'
  2840  00FAEE  20                 	db	32
  2841  00FAEF  25                 	db	37
  2842  00FAF0  64                 	db	100	;'d'
  2843  00FAF1  20                 	db	32
  2844  00FAF2  56                 	db	86	;'V'
  2845  00FAF3  25                 	db	37
  2846  00FAF4  32                 	db	50	;'2'
  2847  00FAF5  2E                 	db	46
  2848  00FAF6  32                 	db	50	;'2'
  2849  00FAF7  66                 	db	102	;'f'
  2850  00FAF8  20                 	db	32
  2851  00FAF9  20                 	db	32
  2852  00FAFA  20                 	db	32
  2853  00FAFB  20                 	db	32
  2854  00FAFC  20                 	db	32
  2855  00FAFD  20                 	db	32
  2856  00FAFE  20                 	db	32
  2857  00FAFF  00                 	db	0
  2858  00FB00                     STR_22:
  2859                           
  2860                           ; BSR set to: 57
  2861  00FB00  52                 	db	82	;'R'
  2862  00FB01  31                 	db	49	;'1'
  2863  00FB02  20                 	db	32
  2864  00FB03  25                 	db	37
  2865  00FB04  32                 	db	50	;'2'
  2866  00FB05  2E                 	db	46
  2867  00FB06  33                 	db	51	;'3'
  2868  00FB07  66                 	db	102	;'f'
  2869  00FB08  20                 	db	32
  2870  00FB09  25                 	db	37
  2871  00FB0A  33                 	db	51	;'3'
  2872  00FB0B  2E                 	db	46
  2873  00FB0C  34                 	db	52	;'4'
  2874  00FB0D  66                 	db	102	;'f'
  2875  00FB0E  20                 	db	32
  2876  00FB0F  20                 	db	32
  2877  00FB10  20                 	db	32
  2878  00FB11  20                 	db	32
  2879  00FB12  20                 	db	32
  2880  00FB13  20                 	db	32
  2881  00FB14  20                 	db	32
  2882  00FB15  20                 	db	32
  2883  00FB16  20                 	db	32
  2884  00FB17  20                 	db	32
  2885  00FB18  20                 	db	32
  2886  00FB19  00                 	db	0
  2887  00FB1A                     STR_23:
  2888                           
  2889                           ; BSR set to: 57
  2890  00FB1A  52                 	db	82	;'R'
  2891  00FB1B  32                 	db	50	;'2'
  2892  00FB1C  20                 	db	32
  2893  00FB1D  25                 	db	37
  2894  00FB1E  32                 	db	50	;'2'
  2895  00FB1F  2E                 	db	46
  2896  00FB20  33                 	db	51	;'3'
  2897  00FB21  66                 	db	102	;'f'
  2898  00FB22  20                 	db	32
  2899  00FB23  25                 	db	37
  2900  00FB24  33                 	db	51	;'3'
  2901  00FB25  2E                 	db	46
  2902  00FB26  34                 	db	52	;'4'
  2903  00FB27  66                 	db	102	;'f'
  2904  00FB28  20                 	db	32
  2905  00FB29  20                 	db	32
  2906  00FB2A  20                 	db	32
  2907  00FB2B  20                 	db	32
  2908  00FB2C  20                 	db	32
  2909  00FB2D  20                 	db	32
  2910  00FB2E  20                 	db	32
  2911  00FB2F  20                 	db	32
  2912  00FB30  20                 	db	32
  2913  00FB31  20                 	db	32
  2914  00FB32  20                 	db	32
  2915  00FB33  00                 	db	0
  2916  00FB34                     STR_13:
  2917                           
  2918                           ; BSR set to: 57
  2919  00FB34  53                 	db	83	;'S'
  2920  00FB35  20                 	db	32
  2921  00FB36  53                 	db	83	;'S'
  2922  00FB37  25                 	db	37
  2923  00FB38  63                 	db	99	;'c'
  2924  00FB39  43                 	db	67	;'C'
  2925  00FB3A  20                 	db	32
  2926  00FB3B  25                 	db	37
  2927  00FB3C  64                 	db	100	;'d'
  2928  00FB3D  20                 	db	32
  2929  00FB3E  25                 	db	37
  2930  00FB3F  32                 	db	50	;'2'
  2931  00FB40  2E                 	db	46
  2932  00FB41  34                 	db	52	;'4'
  2933  00FB42  66                 	db	102	;'f'
  2934  00FB43  20                 	db	32
  2935  00FB44  20                 	db	32
  2936  00FB45  20                 	db	32
  2937  00FB46  20                 	db	32
  2938  00FB47  20                 	db	32
  2939  00FB48  20                 	db	32
  2940  00FB49  20                 	db	32
  2941  00FB4A  20                 	db	32
  2942  00FB4B  20                 	db	32
  2943  00FB4C  20                 	db	32
  2944  00FB4D  00                 	db	0
  2945  00FB4E                     
  2946                           ; BSR set to: 57
  2947  00FB4E  20                 	db	32
  2948  00FB4F  4D                 	db	77	;'M'
  2949  00FB50  65                 	db	101	;'e'
  2950  00FB51  73                 	db	115	;'s'
  2951  00FB52  67                 	db	103	;'g'
  2952  00FB53  20                 	db	32
  2953  00FB54  25                 	db	37
  2954  00FB55  64                 	db	100	;'d'
  2955  00FB56  20                 	db	32
  2956  00FB57  53                 	db	83	;'S'
  2957  00FB58  74                 	db	116	;'t'
  2958  00FB59  61                 	db	97	;'a'
  2959  00FB5A  63                 	db	99	;'c'
  2960  00FB5B  6B                 	db	107	;'k'
  2961  00FB5C  20                 	db	32
  2962  00FB5D  25                 	db	37
  2963  00FB5E  64                 	db	100	;'d'
  2964  00FB5F  20                 	db	32
  2965  00FB60  20                 	db	32
  2966  00FB61  20                 	db	32
  2967  00FB62  20                 	db	32
  2968  00FB63  20                 	db	32
  2969  00FB64  20                 	db	32
  2970  00FB65  00                 	db	0
  2971  00FB66                     STR_45:
  2972                           
  2973                           ; BSR set to: 57
  2974  00FB66  45                 	db	69	;'E'
  2975  00FB67  53                 	db	83	;'S'
  2976  00FB68  52                 	db	82	;'R'
  2977  00FB69  20                 	db	32
  2978  00FB6A  20                 	db	32
  2979  00FB6B  25                 	db	37
  2980  00FB6C  32                 	db	50	;'2'
  2981  00FB6D  2E                 	db	46
  2982  00FB6E  36                 	db	54	;'6'
  2983  00FB6F  66                 	db	102	;'f'
  2984  00FB70  20                 	db	32
  2985  00FB71  20                 	db	32
  2986  00FB72  20                 	db	32
  2987  00FB73  20                 	db	32
  2988  00FB74  20                 	db	32
  2989  00FB75  20                 	db	32
  2990  00FB76  20                 	db	32
  2991  00FB77  20                 	db	32
  2992  00FB78  20                 	db	32
  2993  00FB79  20                 	db	32
  2994  00FB7A  20                 	db	32
  2995  00FB7B  20                 	db	32
  2996  00FB7C  00                 	db	0
  2997  00FB7D                     STR_42:
  2998                           
  2999                           ; BSR set to: 57
  3000  00FB7D  42                 	db	66	;'B'
  3001  00FB7E  41                 	db	65	;'A'
  3002  00FB7F  54                 	db	84	;'T'
  3003  00FB80  54                 	db	84	;'T'
  3004  00FB81  20                 	db	32
  3005  00FB82  50                 	db	80	;'P'
  3006  00FB83  57                 	db	87	;'W'
  3007  00FB84  52                 	db	82	;'R'
  3008  00FB85  20                 	db	32
  3009  00FB86  25                 	db	37
  3010  00FB87  33                 	db	51	;'3'
  3011  00FB88  2E                 	db	46
  3012  00FB89  32                 	db	50	;'2'
  3013  00FB8A  66                 	db	102	;'f'
  3014  00FB8B  20                 	db	32
  3015  00FB8C  20                 	db	32
  3016  00FB8D  20                 	db	32
  3017  00FB8E  20                 	db	32
  3018  00FB8F  20                 	db	32
  3019  00FB90  20                 	db	32
  3020  00FB91  20                 	db	32
  3021  00FB92  20                 	db	32
  3022  00FB93  00                 	db	0
  3023  00FB94                     STR_46:
  3024                           
  3025                           ; BSR set to: 57
  3026  00FB94  52                 	db	82	;'R'
  3027  00FB95  31                 	db	49	;'1'
  3028  00FB96  20                 	db	32
  3029  00FB97  25                 	db	37
  3030  00FB98  32                 	db	50	;'2'
  3031  00FB99  2E                 	db	46
  3032  00FB9A  33                 	db	51	;'3'
  3033  00FB9B  66                 	db	102	;'f'
  3034  00FB9C  20                 	db	32
  3035  00FB9D  25                 	db	37
  3036  00FB9E  33                 	db	51	;'3'
  3037  00FB9F  2E                 	db	46
  3038  00FBA0  34                 	db	52	;'4'
  3039  00FBA1  66                 	db	102	;'f'
  3040  00FBA2  20                 	db	32
  3041  00FBA3  20                 	db	32
  3042  00FBA4  20                 	db	32
  3043  00FBA5  20                 	db	32
  3044  00FBA6  20                 	db	32
  3045  00FBA7  20                 	db	32
  3046  00FBA8  20                 	db	32
  3047  00FBA9  20                 	db	32
  3048  00FBAA  00                 	db	0
  3049  00FBAB                     STR_47:
  3050                           
  3051                           ; BSR set to: 57
  3052  00FBAB  52                 	db	82	;'R'
  3053  00FBAC  32                 	db	50	;'2'
  3054  00FBAD  20                 	db	32
  3055  00FBAE  25                 	db	37
  3056  00FBAF  32                 	db	50	;'2'
  3057  00FBB0  2E                 	db	46
  3058  00FBB1  33                 	db	51	;'3'
  3059  00FBB2  66                 	db	102	;'f'
  3060  00FBB3  20                 	db	32
  3061  00FBB4  25                 	db	37
  3062  00FBB5  33                 	db	51	;'3'
  3063  00FBB6  2E                 	db	46
  3064  00FBB7  34                 	db	52	;'4'
  3065  00FBB8  66                 	db	102	;'f'
  3066  00FBB9  20                 	db	32
  3067  00FBBA  20                 	db	32
  3068  00FBBB  20                 	db	32
  3069  00FBBC  20                 	db	32
  3070  00FBBD  20                 	db	32
  3071  00FBBE  20                 	db	32
  3072  00FBBF  20                 	db	32
  3073  00FBC0  20                 	db	32
  3074  00FBC1  00                 	db	0
  3075  00FBC2                     STR_43:
  3076                           
  3077                           ; BSR set to: 57
  3078  00FBC2  42                 	db	66	;'B'
  3079  00FBC3  41                 	db	65	;'A'
  3080  00FBC4  48                 	db	72	;'H'
  3081  00FBC5  20                 	db	32
  3082  00FBC6  25                 	db	37
  3083  00FBC7  33                 	db	51	;'3'
  3084  00FBC8  2E                 	db	46
  3085  00FBC9  32                 	db	50	;'2'
  3086  00FBCA  66                 	db	102	;'f'
  3087  00FBCB  20                 	db	32
  3088  00FBCC  50                 	db	80	;'P'
  3089  00FBCD  25                 	db	37
  3090  00FBCE  33                 	db	51	;'3'
  3091  00FBCF  2E                 	db	46
  3092  00FBD0  32                 	db	50	;'2'
  3093  00FBD1  66                 	db	102	;'f'
  3094  00FBD2  20                 	db	32
  3095  00FBD3  20                 	db	32
  3096  00FBD4  20                 	db	32
  3097  00FBD5  20                 	db	32
  3098  00FBD6  20                 	db	32
  3099  00FBD7  20                 	db	32
  3100  00FBD8  00                 	db	0
  3101  00FBD9                     STR_127:
  3102                           
  3103                           ; BSR set to: 57
  3104  00FBD9  53                 	db	83	;'S'
  3105  00FBDA  75                 	db	117	;'u'
  3106  00FBDB  6E                 	db	110	;'n'
  3107  00FBDC  4D                 	db	77	;'M'
  3108  00FBDD  6F                 	db	111	;'o'
  3109  00FBDE  6E                 	db	110	;'n'
  3110  00FBDF  54                 	db	84	;'T'
  3111  00FBE0  75                 	db	117	;'u'
  3112  00FBE1  65                 	db	101	;'e'
  3113  00FBE2  57                 	db	87	;'W'
  3114  00FBE3  65                 	db	101	;'e'
  3115  00FBE4  64                 	db	100	;'d'
  3116  00FBE5  54                 	db	84	;'T'
  3117  00FBE6  68                 	db	104	;'h'
  3118  00FBE7  75                 	db	117	;'u'
  3119  00FBE8  46                 	db	70	;'F'
  3120  00FBE9  72                 	db	114	;'r'
  3121  00FBEA  69                 	db	105	;'i'
  3122  00FBEB  53                 	db	83	;'S'
  3123  00FBEC  61                 	db	97	;'a'
  3124  00FBED  74                 	db	116	;'t'
  3125  00FBEE  00                 	db	0
  3126  00FBEF                     STR_16:
  3127                           
  3128                           ; BSR set to: 57
  3129  00FBEF  20                 	db	32
  3130  00FBF0  20                 	db	32
  3131  00FBF1  20                 	db	32
  3132  00FBF2  20                 	db	32
  3133  00FBF3  20                 	db	32
  3134  00FBF4  20                 	db	32
  3135  00FBF5  20                 	db	32
  3136  00FBF6  20                 	db	32
  3137  00FBF7  20                 	db	32
  3138  00FBF8  20                 	db	32
  3139  00FBF9  20                 	db	32
  3140  00FBFA  20                 	db	32
  3141  00FBFB  20                 	db	32
  3142  00FBFC  20                 	db	32
  3143  00FBFD  20                 	db	32
  3144  00FBFE  20                 	db	32
  3145  00FBFF  20                 	db	32
  3146  00FC00  20                 	db	32
  3147  00FC01  20                 	db	32
  3148  00FC02  20                 	db	32
  3149  00FC03  20                 	db	32
  3150  00FC04  00                 	db	0
  3151  00FC05                     STR_21:
  3152                           
  3153                           ; BSR set to: 57
  3154  00FC05  45                 	db	69	;'E'
  3155  00FC06  53                 	db	83	;'S'
  3156  00FC07  52                 	db	82	;'R'
  3157  00FC08  20                 	db	32
  3158  00FC09  20                 	db	32
  3159  00FC0A  25                 	db	37
  3160  00FC0B  32                 	db	50	;'2'
  3161  00FC0C  2E                 	db	46
  3162  00FC0D  36                 	db	54	;'6'
  3163  00FC0E  66                 	db	102	;'f'
  3164  00FC0F  20                 	db	32
  3165  00FC10  20                 	db	32
  3166  00FC11  20                 	db	32
  3167  00FC12  20                 	db	32
  3168  00FC13  20                 	db	32
  3169  00FC14  20                 	db	32
  3170  00FC15  20                 	db	32
  3171  00FC16  20                 	db	32
  3172  00FC17  20                 	db	32
  3173  00FC18  20                 	db	32
  3174  00FC19  20                 	db	32
  3175  00FC1A  00                 	db	0
  3176  00FC1B                     STR_14:
  3177                           
  3178                           ; BSR set to: 57
  3179  00FC1B  53                 	db	83	;'S'
  3180  00FC1C  74                 	db	116	;'t'
  3181  00FC1D  61                 	db	97	;'a'
  3182  00FC1E  74                 	db	116	;'t'
  3183  00FC1F  69                 	db	105	;'i'
  3184  00FC20  63                 	db	99	;'c'
  3185  00FC21  20                 	db	32
  3186  00FC22  53                 	db	83	;'S'
  3187  00FC23  4F                 	db	79	;'O'
  3188  00FC24  43                 	db	67	;'C'
  3189  00FC25  20                 	db	32
  3190  00FC26  25                 	db	37
  3191  00FC27  64                 	db	100	;'d'
  3192  00FC28  20                 	db	32
  3193  00FC29  20                 	db	32
  3194  00FC2A  20                 	db	32
  3195  00FC2B  20                 	db	32
  3196  00FC2C  20                 	db	32
  3197  00FC2D  20                 	db	32
  3198  00FC2E  20                 	db	32
  3199  00FC2F  20                 	db	32
  3200  00FC30  00                 	db	0
  3201  00FC31                     STR_39:
  3202                           
  3203                           ; BSR set to: 57
  3204  00FC31  42                 	db	66	;'B'
  3205  00FC32  41                 	db	65	;'A'
  3206  00FC33  54                 	db	84	;'T'
  3207  00FC34  20                 	db	32
  3208  00FC35  49                 	db	73	;'I'
  3209  00FC36  57                 	db	87	;'W'
  3210  00FC37  48                 	db	72	;'H'
  3211  00FC38  20                 	db	32
  3212  00FC39  25                 	db	37
  3213  00FC3A  34                 	db	52	;'4'
  3214  00FC3B  2E                 	db	46
  3215  00FC3C  31                 	db	49	;'1'
  3216  00FC3D  66                 	db	102	;'f'
  3217  00FC3E  20                 	db	32
  3218  00FC3F  20                 	db	32
  3219  00FC40  20                 	db	32
  3220  00FC41  20                 	db	32
  3221  00FC42  20                 	db	32
  3222  00FC43  20                 	db	32
  3223  00FC44  20                 	db	32
  3224  00FC45  20                 	db	32
  3225  00FC46  00                 	db	0
  3226  00FC47                     STR_40:
  3227                           
  3228                           ; BSR set to: 57
  3229  00FC47  42                 	db	66	;'B'
  3230  00FC48  41                 	db	65	;'A'
  3231  00FC49  54                 	db	84	;'T'
  3232  00FC4A  20                 	db	32
  3233  00FC4B  4F                 	db	79	;'O'
  3234  00FC4C  57                 	db	87	;'W'
  3235  00FC4D  48                 	db	72	;'H'
  3236  00FC4E  20                 	db	32
  3237  00FC4F  25                 	db	37
  3238  00FC50  34                 	db	52	;'4'
  3239  00FC51  2E                 	db	46
  3240  00FC52  31                 	db	49	;'1'
  3241  00FC53  66                 	db	102	;'f'
  3242  00FC54  20                 	db	32
  3243  00FC55  20                 	db	32
  3244  00FC56  20                 	db	32
  3245  00FC57  20                 	db	32
  3246  00FC58  20                 	db	32
  3247  00FC59  20                 	db	32
  3248  00FC5A  20                 	db	32
  3249  00FC5B  20                 	db	32
  3250  00FC5C  00                 	db	0
  3251  00FC5D                     STR_41:
  3252                           
  3253                           ; BSR set to: 57
  3254  00FC5D  42                 	db	66	;'B'
  3255  00FC5E  41                 	db	65	;'A'
  3256  00FC5F  54                 	db	84	;'T'
  3257  00FC60  20                 	db	32
  3258  00FC61  54                 	db	84	;'T'
  3259  00FC62  57                 	db	87	;'W'
  3260  00FC63  48                 	db	72	;'H'
  3261  00FC64  20                 	db	32
  3262  00FC65  25                 	db	37
  3263  00FC66  34                 	db	52	;'4'
  3264  00FC67  2E                 	db	46
  3265  00FC68  31                 	db	49	;'1'
  3266  00FC69  66                 	db	102	;'f'
  3267  00FC6A  20                 	db	32
  3268  00FC6B  20                 	db	32
  3269  00FC6C  20                 	db	32
  3270  00FC6D  20                 	db	32
  3271  00FC6E  20                 	db	32
  3272  00FC6F  20                 	db	32
  3273  00FC70  20                 	db	32
  3274  00FC71  20                 	db	32
  3275  00FC72  00                 	db	0
  3276  00FC73                     STR_35:
  3277                           
  3278                           ; BSR set to: 57
  3279  00FC73  49                 	db	73	;'I'
  3280  00FC74  4E                 	db	78	;'N'
  3281  00FC75  56                 	db	86	;'V'
  3282  00FC76  20                 	db	32
  3283  00FC77  20                 	db	32
  3284  00FC78  57                 	db	87	;'W'
  3285  00FC79  48                 	db	72	;'H'
  3286  00FC7A  20                 	db	32
  3287  00FC7B  25                 	db	37
  3288  00FC7C  33                 	db	51	;'3'
  3289  00FC7D  2E                 	db	46
  3290  00FC7E  32                 	db	50	;'2'
  3291  00FC7F  66                 	db	102	;'f'
  3292  00FC80  20                 	db	32
  3293  00FC81  20                 	db	32
  3294  00FC82  20                 	db	32
  3295  00FC83  20                 	db	32
  3296  00FC84  20                 	db	32
  3297  00FC85  20                 	db	32
  3298  00FC86  20                 	db	32
  3299  00FC87  20                 	db	32
  3300  00FC88  00                 	db	0
  3301  00FC89                     STR_34:
  3302                           
  3303                           ; BSR set to: 57
  3304  00FC89  4C                 	db	76	;'L'
  3305  00FC8A  4F                 	db	79	;'O'
  3306  00FC8B  41                 	db	65	;'A'
  3307  00FC8C  44                 	db	68	;'D'
  3308  00FC8D  20                 	db	32
  3309  00FC8E  57                 	db	87	;'W'
  3310  00FC8F  48                 	db	72	;'H'
  3311  00FC90  20                 	db	32
  3312  00FC91  25                 	db	37
  3313  00FC92  33                 	db	51	;'3'
  3314  00FC93  2E                 	db	46
  3315  00FC94  32                 	db	50	;'2'
  3316  00FC95  66                 	db	102	;'f'
  3317  00FC96  20                 	db	32
  3318  00FC97  20                 	db	32
  3319  00FC98  20                 	db	32
  3320  00FC99  20                 	db	32
  3321  00FC9A  20                 	db	32
  3322  00FC9B  20                 	db	32
  3323  00FC9C  20                 	db	32
  3324  00FC9D  20                 	db	32
  3325  00FC9E  00                 	db	0
  3326  00FC9F                     STR_33:
  3327                           
  3328                           ; BSR set to: 57
  3329  00FC9F  50                 	db	80	;'P'
  3330  00FCA0  56                 	db	86	;'V'
  3331  00FCA1  20                 	db	32
  3332  00FCA2  25                 	db	37
  3333  00FCA3  63                 	db	99	;'c'
  3334  00FCA4  20                 	db	32
  3335  00FCA5  57                 	db	87	;'W'
  3336  00FCA6  48                 	db	72	;'H'
  3337  00FCA7  20                 	db	32
  3338  00FCA8  25                 	db	37
  3339  00FCA9  33                 	db	51	;'3'
  3340  00FCAA  2E                 	db	46
  3341  00FCAB  32                 	db	50	;'2'
  3342  00FCAC  66                 	db	102	;'f'
  3343  00FCAD  20                 	db	32
  3344  00FCAE  20                 	db	32
  3345  00FCAF  20                 	db	32
  3346  00FCB0  20                 	db	32
  3347  00FCB1  20                 	db	32
  3348  00FCB2  20                 	db	32
  3349  00FCB3  20                 	db	32
  3350  00FCB4  00                 	db	0
  3351  00FCB5                     STR_32:
  3352                           
  3353                           ; BSR set to: 57
  3354  00FCB5  49                 	db	73	;'I'
  3355  00FCB6  4E                 	db	78	;'N'
  3356  00FCB7  56                 	db	86	;'V'
  3357  00FCB8  20                 	db	32
  3358  00FCB9  20                 	db	32
  3359  00FCBA  50                 	db	80	;'P'
  3360  00FCBB  57                 	db	87	;'W'
  3361  00FCBC  52                 	db	82	;'R'
  3362  00FCBD  20                 	db	32
  3363  00FCBE  25                 	db	37
  3364  00FCBF  33                 	db	51	;'3'
  3365  00FCC0  2E                 	db	46
  3366  00FCC1  32                 	db	50	;'2'
  3367  00FCC2  66                 	db	102	;'f'
  3368  00FCC3  20                 	db	32
  3369  00FCC4  20                 	db	32
  3370  00FCC5  20                 	db	32
  3371  00FCC6  20                 	db	32
  3372  00FCC7  20                 	db	32
  3373  00FCC8  20                 	db	32
  3374  00FCC9  20                 	db	32
  3375  00FCCA  00                 	db	0
  3376  00FCCB                     STR_31:
  3377                           
  3378                           ; BSR set to: 57
  3379  00FCCB  4C                 	db	76	;'L'
  3380  00FCCC  4F                 	db	79	;'O'
  3381  00FCCD  41                 	db	65	;'A'
  3382  00FCCE  44                 	db	68	;'D'
  3383  00FCCF  20                 	db	32
  3384  00FCD0  50                 	db	80	;'P'
  3385  00FCD1  57                 	db	87	;'W'
  3386  00FCD2  52                 	db	82	;'R'
  3387  00FCD3  20                 	db	32
  3388  00FCD4  25                 	db	37
  3389  00FCD5  33                 	db	51	;'3'
  3390  00FCD6  2E                 	db	46
  3391  00FCD7  32                 	db	50	;'2'
  3392  00FCD8  66                 	db	102	;'f'
  3393  00FCD9  20                 	db	32
  3394  00FCDA  20                 	db	32
  3395  00FCDB  20                 	db	32
  3396  00FCDC  20                 	db	32
  3397  00FCDD  20                 	db	32
  3398  00FCDE  20                 	db	32
  3399  00FCDF  20                 	db	32
  3400  00FCE0  00                 	db	0
  3401  00FCE1                     STR_30:
  3402                           
  3403                           ; BSR set to: 57
  3404  00FCE1  50                 	db	80	;'P'
  3405  00FCE2  56                 	db	86	;'V'
  3406  00FCE3  20                 	db	32
  3407  00FCE4  25                 	db	37
  3408  00FCE5  63                 	db	99	;'c'
  3409  00FCE6  20                 	db	32
  3410  00FCE7  50                 	db	80	;'P'
  3411  00FCE8  57                 	db	87	;'W'
  3412  00FCE9  52                 	db	82	;'R'
  3413  00FCEA  20                 	db	32
  3414  00FCEB  25                 	db	37
  3415  00FCEC  33                 	db	51	;'3'
  3416  00FCED  2E                 	db	46
  3417  00FCEE  32                 	db	50	;'2'
  3418  00FCEF  66                 	db	102	;'f'
  3419  00FCF0  20                 	db	32
  3420  00FCF1  20                 	db	32
  3421  00FCF2  20                 	db	32
  3422  00FCF3  20                 	db	32
  3423  00FCF4  20                 	db	32
  3424  00FCF5  20                 	db	32
  3425  00FCF6  00                 	db	0
  3426  00FCF7                     STR_15:
  3427                           
  3428                           ; BSR set to: 57
  3429  00FCF7  42                 	db	66	;'B'
  3430  00FCF8  61                 	db	97	;'a'
  3431  00FCF9  74                 	db	116	;'t'
  3432  00FCFA  74                 	db	116	;'t'
  3433  00FCFB  65                 	db	101	;'e'
  3434  00FCFC  72                 	db	114	;'r'
  3435  00FCFD  79                 	db	121	;'y'
  3436  00FCFE  20                 	db	32
  3437  00FCFF  41                 	db	65	;'A'
  3438  00FD00  68                 	db	104	;'h'
  3439  00FD01  20                 	db	32
  3440  00FD02  25                 	db	37
  3441  00FD03  33                 	db	51	;'3'
  3442  00FD04  2E                 	db	46
  3443  00FD05  32                 	db	50	;'2'
  3444  00FD06  66                 	db	102	;'f'
  3445  00FD07  20                 	db	32
  3446  00FD08  20                 	db	32
  3447  00FD09  20                 	db	32
  3448  00FD0A  20                 	db	32
  3449  00FD0B  20                 	db	32
  3450  00FD0C  00                 	db	0
  3451  00FD0D                     STR_37:
  3452                           
  3453                           ; BSR set to: 57
  3454  00FD0D  42                 	db	66	;'B'
  3455  00FD0E  56                 	db	86	;'V'
  3456  00FD0F  20                 	db	32
  3457  00FD10  25                 	db	37
  3458  00FD11  32                 	db	50	;'2'
  3459  00FD12  2E                 	db	46
  3460  00FD13  32                 	db	50	;'2'
  3461  00FD14  66                 	db	102	;'f'
  3462  00FD15  20                 	db	32
  3463  00FD16  42                 	db	66	;'B'
  3464  00FD17  41                 	db	65	;'A'
  3465  00FD18  20                 	db	32
  3466  00FD19  25                 	db	37
  3467  00FD1A  32                 	db	50	;'2'
  3468  00FD1B  2E                 	db	46
  3469  00FD1C  32                 	db	50	;'2'
  3470  00FD1D  66                 	db	102	;'f'
  3471  00FD1E  20                 	db	32
  3472  00FD1F  20                 	db	32
  3473  00FD20  20                 	db	32
  3474  00FD21  20                 	db	32
  3475  00FD22  00                 	db	0
  3476  00FD23                     STR_38:
  3477                           
  3478                           ; BSR set to: 57
  3479  00FD23  43                 	db	67	;'C'
  3480  00FD24  56                 	db	86	;'V'
  3481  00FD25  20                 	db	32
  3482  00FD26  25                 	db	37
  3483  00FD27  32                 	db	50	;'2'
  3484  00FD28  2E                 	db	46
  3485  00FD29  32                 	db	50	;'2'
  3486  00FD2A  66                 	db	102	;'f'
  3487  00FD2B  20                 	db	32
  3488  00FD2C  4C                 	db	76	;'L'
  3489  00FD2D  41                 	db	65	;'A'
  3490  00FD2E  20                 	db	32
  3491  00FD2F  25                 	db	37
  3492  00FD30  32                 	db	50	;'2'
  3493  00FD31  2E                 	db	46
  3494  00FD32  32                 	db	50	;'2'
  3495  00FD33  66                 	db	102	;'f'
  3496  00FD34  20                 	db	32
  3497  00FD35  20                 	db	32
  3498  00FD36  20                 	db	32
  3499  00FD37  20                 	db	32
  3500  00FD38  00                 	db	0
  3501  00FD39                     STR_36:
  3502                           
  3503                           ; BSR set to: 57
  3504  00FD39  50                 	db	80	;'P'
  3505  00FD3A  56                 	db	86	;'V'
  3506  00FD3B  20                 	db	32
  3507  00FD3C  25                 	db	37
  3508  00FD3D  32                 	db	50	;'2'
  3509  00FD3E  2E                 	db	46
  3510  00FD3F  32                 	db	50	;'2'
  3511  00FD40  66                 	db	102	;'f'
  3512  00FD41  20                 	db	32
  3513  00FD42  50                 	db	80	;'P'
  3514  00FD43  41                 	db	65	;'A'
  3515  00FD44  20                 	db	32
  3516  00FD45  25                 	db	37
  3517  00FD46  32                 	db	50	;'2'
  3518  00FD47  2E                 	db	46
  3519  00FD48  32                 	db	50	;'2'
  3520  00FD49  66                 	db	102	;'f'
  3521  00FD4A  20                 	db	32
  3522  00FD4B  20                 	db	32
  3523  00FD4C  20                 	db	32
  3524  00FD4D  20                 	db	32
  3525  00FD4E  00                 	db	0
  3526  00FD4F                     STR_48:
  3527                           
  3528                           ; BSR set to: 57
  3529  00FD4F  25                 	db	37
  3530  00FD50  64                 	db	100	;'d'
  3531  00FD51  20                 	db	32
  3532  00FD52  25                 	db	37
  3533  00FD53  32                 	db	50	;'2'
  3534  00FD54  2E                 	db	46
  3535  00FD55  34                 	db	52	;'4'
  3536  00FD56  66                 	db	102	;'f'
  3537  00FD57  2C                 	db	44
  3538  00FD58  20                 	db	32
  3539  00FD59  25                 	db	37
  3540  00FD5A  64                 	db	100	;'d'
  3541  00FD5B  20                 	db	32
  3542  00FD5C  20                 	db	32
  3543  00FD5D  54                 	db	84	;'T'
  3544  00FD5E  52                 	db	82	;'R'
  3545  00FD5F  49                 	db	73	;'I'
  3546  00FD60  4D                 	db	77	;'M'
  3547  00FD61  20                 	db	32
  3548  00FD62  20                 	db	32
  3549  00FD63  20                 	db	32
  3550  00FD64  00                 	db	0
  3551  00FD65                     STR_56:
  3552                           
  3553                           ; BSR set to: 57
  3554  00FD65  20                 	db	32
  3555  00FD66  25                 	db	37
  3556  00FD67  64                 	db	100	;'d'
  3557  00FD68  20                 	db	32
  3558  00FD69  25                 	db	37
  3559  00FD6A  64                 	db	100	;'d'
  3560  00FD6B  20                 	db	32
  3561  00FD6C  20                 	db	32
  3562  00FD6D  20                 	db	32
  3563  00FD6E  20                 	db	32
  3564  00FD6F  20                 	db	32
  3565  00FD70  20                 	db	32
  3566  00FD71  20                 	db	32
  3567  00FD72  20                 	db	32
  3568  00FD73  20                 	db	32
  3569  00FD74  20                 	db	32
  3570  00FD75  20                 	db	32
  3571  00FD76  20                 	db	32
  3572  00FD77  20                 	db	32
  3573  00FD78  20                 	db	32
  3574  00FD79  00                 	db	0
  3575  00FD7A                     STR_59:
  3576                           
  3577                           ; BSR set to: 57
  3578  00FD7A  20                 	db	32
  3579  00FD7B  25                 	db	37
  3580  00FD7C  6C                 	db	108	;'l'
  3581  00FD7D  64                 	db	100	;'d'
  3582  00FD7E  20                 	db	32
  3583  00FD7F  25                 	db	37
  3584  00FD80  6C                 	db	108	;'l'
  3585  00FD81  64                 	db	100	;'d'
  3586  00FD82  20                 	db	32
  3587  00FD83  20                 	db	32
  3588  00FD84  20                 	db	32
  3589  00FD85  20                 	db	32
  3590  00FD86  20                 	db	32
  3591  00FD87  20                 	db	32
  3592  00FD88  20                 	db	32
  3593  00FD89  20                 	db	32
  3594  00FD8A  20                 	db	32
  3595  00FD8B  20                 	db	32
  3596  00FD8C  20                 	db	32
  3597  00FD8D  20                 	db	32
  3598  00FD8E  00                 	db	0
  3599  00FD8F                     STR_12:
  3600                           
  3601                           ; BSR set to: 57
  3602  00FD8F  42                 	db	66	;'B'
  3603  00FD90  56                 	db	86	;'V'
  3604  00FD91  20                 	db	32
  3605  00FD92  25                 	db	37
  3606  00FD93  32                 	db	50	;'2'
  3607  00FD94  2E                 	db	46
  3608  00FD95  34                 	db	52	;'4'
  3609  00FD96  66                 	db	102	;'f'
  3610  00FD97  20                 	db	32
  3611  00FD98  20                 	db	32
  3612  00FD99  20                 	db	32
  3613  00FD9A  20                 	db	32
  3614  00FD9B  20                 	db	32
  3615  00FD9C  20                 	db	32
  3616  00FD9D  20                 	db	32
  3617  00FD9E  20                 	db	32
  3618  00FD9F  20                 	db	32
  3619  00FDA0  20                 	db	32
  3620  00FDA1  20                 	db	32
  3621  00FDA2  20                 	db	32
  3622  00FDA3  00                 	db	0
  3623  00FDA4                     STR_64:
  3624                           
  3625                           ; BSR set to: 57
  3626  00FDA4  48                 	db	72	;'H'
  3627  00FDA5  69                 	db	105	;'i'
  3628  00FDA6  73                 	db	115	;'s'
  3629  00FDA7  74                 	db	116	;'t'
  3630  00FDA8  6F                 	db	111	;'o'
  3631  00FDA9  72                 	db	114	;'r'
  3632  00FDAA  79                 	db	121	;'y'
  3633  00FDAB  20                 	db	32
  3634  00FDAC  33                 	db	51	;'3'
  3635  00FDAD  20                 	db	32
  3636  00FDAE  20                 	db	32
  3637  00FDAF  20                 	db	32
  3638  00FDB0  20                 	db	32
  3639  00FDB1  20                 	db	32
  3640  00FDB2  20                 	db	32
  3641  00FDB3  20                 	db	32
  3642  00FDB4  20                 	db	32
  3643  00FDB5  20                 	db	32
  3644  00FDB6  20                 	db	32
  3645  00FDB7  20                 	db	32
  3646  00FDB8  00                 	db	0
  3647  00FDB9                     STR_4:
  3648                           
  3649                           ; BSR set to: 57
  3650  00FDB9  20                 	db	32
  3651  00FDBA  4E                 	db	78	;'N'
  3652  00FDBB  53                 	db	83	;'S'
  3653  00FDBC  41                 	db	65	;'A'
  3654  00FDBD  53                 	db	83	;'S'
  3655  00FDBE  50                 	db	80	;'P'
  3656  00FDBF  4F                 	db	79	;'O'
  3657  00FDC0  4F                 	db	79	;'O'
  3658  00FDC1  4B                 	db	75	;'K'
  3659  00FDC2  20                 	db	32
  3660  00FDC3  20                 	db	32
  3661  00FDC4  20                 	db	32
  3662  00FDC5  20                 	db	32
  3663  00FDC6  20                 	db	32
  3664  00FDC7  20                 	db	32
  3665  00FDC8  20                 	db	32
  3666  00FDC9  20                 	db	32
  3667  00FDCA  20                 	db	32
  3668  00FDCB  20                 	db	32
  3669  00FDCC  20                 	db	32
  3670  00FDCD  00                 	db	0
  3671  00FDCE                     STR_25:
  3672                           
  3673                           ; BSR set to: 57
  3674  00FDCE  54                 	db	84	;'T'
  3675  00FDCF  6F                 	db	111	;'o'
  3676  00FDD0  20                 	db	32
  3677  00FDD1  45                 	db	69	;'E'
  3678  00FDD2  45                 	db	69	;'E'
  3679  00FDD3  50                 	db	80	;'P'
  3680  00FDD4  52                 	db	82	;'R'
  3681  00FDD5  4F                 	db	79	;'O'
  3682  00FDD6  4D                 	db	77	;'M'
  3683  00FDD7  20                 	db	32
  3684  00FDD8  20                 	db	32
  3685  00FDD9  20                 	db	32
  3686  00FDDA  20                 	db	32
  3687  00FDDB  20                 	db	32
  3688  00FDDC  20                 	db	32
  3689  00FDDD  20                 	db	32
  3690  00FDDE  20                 	db	32
  3691  00FDDF  20                 	db	32
  3692  00FDE0  20                 	db	32
  3693  00FDE1  20                 	db	32
  3694  00FDE2  00                 	db	0
  3695  00FDE3                     STR_17:
  3696                           
  3697                           ; BSR set to: 57
  3698  00FDE3  42                 	db	66	;'B'
  3699  00FDE4  61                 	db	97	;'a'
  3700  00FDE5  74                 	db	116	;'t'
  3701  00FDE6  74                 	db	116	;'t'
  3702  00FDE7  65                 	db	101	;'e'
  3703  00FDE8  72                 	db	114	;'r'
  3704  00FDE9  79                 	db	121	;'y'
  3705  00FDEA  20                 	db	32
  3706  00FDEB  45                 	db	69	;'E'
  3707  00FDEC  53                 	db	83	;'S'
  3708  00FDED  52                 	db	82	;'R'
  3709  00FDEE  20                 	db	32
  3710  00FDEF  20                 	db	32
  3711  00FDF0  20                 	db	32
  3712  00FDF1  20                 	db	32
  3713  00FDF2  20                 	db	32
  3714  00FDF3  20                 	db	32
  3715  00FDF4  20                 	db	32
  3716  00FDF5  20                 	db	32
  3717  00FDF6  20                 	db	32
  3718  00FDF7  00                 	db	0
  3719  00FDF8                     STR_18:
  3720                           
  3721                           ; BSR set to: 57
  3722  00FDF8  43                 	db	67	;'C'
  3723  00FDF9  61                 	db	97	;'a'
  3724  00FDFA  6C                 	db	108	;'l'
  3725  00FDFB  63                 	db	99	;'c'
  3726  00FDFC  75                 	db	117	;'u'
  3727  00FDFD  6C                 	db	108	;'l'
  3728  00FDFE  61                 	db	97	;'a'
  3729  00FDFF  74                 	db	116	;'t'
  3730  00FE00  69                 	db	105	;'i'
  3731  00FE01  6F                 	db	111	;'o'
  3732  00FE02  6E                 	db	110	;'n'
  3733  00FE03  20                 	db	32
  3734  00FE04  20                 	db	32
  3735  00FE05  20                 	db	32
  3736  00FE06  20                 	db	32
  3737  00FE07  20                 	db	32
  3738  00FE08  20                 	db	32
  3739  00FE09  20                 	db	32
  3740  00FE0A  20                 	db	32
  3741  00FE0B  20                 	db	32
  3742  00FE0C  00                 	db	0
  3743  00FE0D                     STR_53:
  3744                           
  3745                           ; BSR set to: 57
  3746  00FE0D  43                 	db	67	;'C'
  3747  00FE0E  61                 	db	97	;'a'
  3748  00FE0F  6C                 	db	108	;'l'
  3749  00FE10  69                 	db	105	;'i'
  3750  00FE11  62                 	db	98	;'b'
  3751  00FE12  72                 	db	114	;'r'
  3752  00FE13  61                 	db	97	;'a'
  3753  00FE14  74                 	db	116	;'t'
  3754  00FE15  69                 	db	105	;'i'
  3755  00FE16  6F                 	db	111	;'o'
  3756  00FE17  6E                 	db	110	;'n'
  3757  00FE18  20                 	db	32
  3758  00FE19  20                 	db	32
  3759  00FE1A  20                 	db	32
  3760  00FE1B  20                 	db	32
  3761  00FE1C  20                 	db	32
  3762  00FE1D  20                 	db	32
  3763  00FE1E  20                 	db	32
  3764  00FE1F  20                 	db	32
  3765  00FE20  20                 	db	32
  3766  00FE21  00                 	db	0
  3767  00FE22                     STR_52:
  3768                           
  3769                           ; BSR set to: 57
  3770  00FE22  53                 	db	83	;'S'
  3771  00FE23  65                 	db	101	;'e'
  3772  00FE24  6E                 	db	110	;'n'
  3773  00FE25  73                 	db	115	;'s'
  3774  00FE26  6F                 	db	111	;'o'
  3775  00FE27  72                 	db	114	;'r'
  3776  00FE28  20                 	db	32
  3777  00FE29  5A                 	db	90	;'Z'
  3778  00FE2A  65                 	db	101	;'e'
  3779  00FE2B  72                 	db	114	;'r'
  3780  00FE2C  6F                 	db	111	;'o'
  3781  00FE2D  20                 	db	32
  3782  00FE2E  20                 	db	32
  3783  00FE2F  20                 	db	32
  3784  00FE30  20                 	db	32
  3785  00FE31  20                 	db	32
  3786  00FE32  20                 	db	32
  3787  00FE33  20                 	db	32
  3788  00FE34  20                 	db	32
  3789  00FE35  20                 	db	32
  3790  00FE36  00                 	db	0
  3791  00FE37                     STR_2:
  3792                           
  3793                           ; BSR set to: 57
  3794  00FE37  20                 	db	32
  3795  00FE38  56                 	db	86	;'V'
  3796  00FE39  65                 	db	101	;'e'
  3797  00FE3A  72                 	db	114	;'r'
  3798  00FE3B  73                 	db	115	;'s'
  3799  00FE3C  69                 	db	105	;'i'
  3800  00FE3D  6F                 	db	111	;'o'
  3801  00FE3E  6E                 	db	110	;'n'
  3802  00FE3F  20                 	db	32
  3803  00FE40  25                 	db	37
  3804  00FE41  73                 	db	115	;'s'
  3805  00FE42  20                 	db	32
  3806  00FE43  20                 	db	32
  3807  00FE44  20                 	db	32
  3808  00FE45  20                 	db	32
  3809  00FE46  20                 	db	32
  3810  00FE47  20                 	db	32
  3811  00FE48  20                 	db	32
  3812  00FE49  20                 	db	32
  3813  00FE4A  20                 	db	32
  3814  00FE4B  00                 	db	0
  3815  00FE4C                     STR_60:
  3816                           
  3817                           ; BSR set to: 57
  3818  00FE4C  5A                 	db	90	;'Z'
  3819  00FE4D  65                 	db	101	;'e'
  3820  00FE4E  72                 	db	114	;'r'
  3821  00FE4F  6F                 	db	111	;'o'
  3822  00FE50  20                 	db	32
  3823  00FE51  43                 	db	67	;'C'
  3824  00FE52  61                 	db	97	;'a'
  3825  00FE53  6C                 	db	108	;'l'
  3826  00FE54  20                 	db	32
  3827  00FE55  53                 	db	83	;'S'
  3828  00FE56  65                 	db	101	;'e'
  3829  00FE57  74                 	db	116	;'t'
  3830  00FE58  20                 	db	32
  3831  00FE59  20                 	db	32
  3832  00FE5A  20                 	db	32
  3833  00FE5B  20                 	db	32
  3834  00FE5C  20                 	db	32
  3835  00FE5D  20                 	db	32
  3836  00FE5E  20                 	db	32
  3837  00FE5F  20                 	db	32
  3838  00FE60  00                 	db	0
  3839  00FE61                     STR_1:
  3840                           
  3841                           ; BSR set to: 57
  3842  00FE61  20                 	db	32
  3843  00FE62  4D                 	db	77	;'M'
  3844  00FE63  42                 	db	66	;'B'
  3845  00FE64  4D                 	db	77	;'M'
  3846  00FE65  43                 	db	67	;'C'
  3847  00FE66  20                 	db	32
  3848  00FE67  53                 	db	83	;'S'
  3849  00FE68  4F                 	db	79	;'O'
  3850  00FE69  4C                 	db	76	;'L'
  3851  00FE6A  41                 	db	65	;'A'
  3852  00FE6B  52                 	db	82	;'R'
  3853  00FE6C  4D                 	db	77	;'M'
  3854  00FE6D  4F                 	db	79	;'O'
  3855  00FE6E  4E                 	db	78	;'N'
  3856  00FE6F  20                 	db	32
  3857  00FE70  20                 	db	32
  3858  00FE71  20                 	db	32
  3859  00FE72  20                 	db	32
  3860  00FE73  20                 	db	32
  3861  00FE74  20                 	db	32
  3862  00FE75  00                 	db	0
  3863  00FE76                     STR_51:
  3864                           
  3865                           ; BSR set to: 57
  3866  00FE76  42                 	db	66	;'B'
  3867  00FE77  61                 	db	97	;'a'
  3868  00FE78  74                 	db	116	;'t'
  3869  00FE79  74                 	db	116	;'t'
  3870  00FE7A  65                 	db	101	;'e'
  3871  00FE7B  72                 	db	114	;'r'
  3872  00FE7C  79                 	db	121	;'y'
  3873  00FE7D  20                 	db	32
  3874  00FE7E  61                 	db	97	;'a'
  3875  00FE7F  6E                 	db	110	;'n'
  3876  00FE80  64                 	db	100	;'d'
  3877  00FE81  20                 	db	32
  3878  00FE82  50                 	db	80	;'P'
  3879  00FE83  56                 	db	86	;'V'
  3880  00FE84  20                 	db	32
  3881  00FE85  20                 	db	32
  3882  00FE86  20                 	db	32
  3883  00FE87  20                 	db	32
  3884  00FE88  20                 	db	32
  3885  00FE89  20                 	db	32
  3886  00FE8A  00                 	db	0
  3887  00FE8B                     STR_20:
  3888                           
  3889                           ; BSR set to: 57
  3890  00FE8B  43                 	db	67	;'C'
  3891  00FE8C  68                 	db	104	;'h'
  3892  00FE8D  65                 	db	101	;'e'
  3893  00FE8E  63                 	db	99	;'c'
  3894  00FE8F  6B                 	db	107	;'k'
  3895  00FE90  69                 	db	105	;'i'
  3896  00FE91  6E                 	db	110	;'n'
  3897  00FE92  67                 	db	103	;'g'
  3898  00FE93  20                 	db	32
  3899  00FE94  25                 	db	37
  3900  00FE95  63                 	db	99	;'c'
  3901  00FE96  20                 	db	32
  3902  00FE97  25                 	db	37
  3903  00FE98  63                 	db	99	;'c'
  3904  00FE99  20                 	db	32
  3905  00FE9A  20                 	db	32
  3906  00FE9B  20                 	db	32
  3907  00FE9C  20                 	db	32
  3908  00FE9D  20                 	db	32
  3909  00FE9E  20                 	db	32
  3910  00FE9F  00                 	db	0
  3911  00FEA0                     STR_26:
  3912                           
  3913                           ; BSR set to: 57
  3914  00FEA0  20                 	db	32
  3915  00FEA1  54                 	db	84	;'T'
  3916  00FEA2  69                 	db	105	;'i'
  3917  00FEA3  6D                 	db	109	;'m'
  3918  00FEA4  65                 	db	101	;'e'
  3919  00FEA5  20                 	db	32
  3920  00FEA6  25                 	db	37
  3921  00FEA7  6C                 	db	108	;'l'
  3922  00FEA8  75                 	db	117	;'u'
  3923  00FEA9  2C                 	db	44
  3924  00FEAA  20                 	db	32
  3925  00FEAB  25                 	db	37
  3926  00FEAC  6C                 	db	108	;'l'
  3927  00FEAD  75                 	db	117	;'u'
  3928  00FEAE  20                 	db	32
  3929  00FEAF  20                 	db	32
  3930  00FEB0  20                 	db	32
  3931  00FEB1  20                 	db	32
  3932  00FEB2  20                 	db	32
  3933  00FEB3  20                 	db	32
  3934  00FEB4  00                 	db	0
  3935  00FEB5                     STR_55:
  3936                           
  3937                           ; BSR set to: 57
  3938  00FEB5  53                 	db	83	;'S'
  3939  00FEB6  65                 	db	101	;'e'
  3940  00FEB7  6E                 	db	110	;'n'
  3941  00FEB8  73                 	db	115	;'s'
  3942  00FEB9  6F                 	db	111	;'o'
  3943  00FEBA  72                 	db	114	;'r'
  3944  00FEBB  20                 	db	32
  3945  00FEBC  52                 	db	82	;'R'
  3946  00FEBD  65                 	db	101	;'e'
  3947  00FEBE  61                 	db	97	;'a'
  3948  00FEBF  64                 	db	100	;'d'
  3949  00FEC0  69                 	db	105	;'i'
  3950  00FEC1  6E                 	db	110	;'n'
  3951  00FEC2  67                 	db	103	;'g'
  3952  00FEC3  73                 	db	115	;'s'
  3953  00FEC4  20                 	db	32
  3954  00FEC5  20                 	db	32
  3955  00FEC6  20                 	db	32
  3956  00FEC7  20                 	db	32
  3957  00FEC8  20                 	db	32
  3958  00FEC9  00                 	db	0
  3959  00FECA                     STR_10:
  3960                           
  3961                           ; BSR set to: 57
  3962  00FECA  52                 	db	82	;'R'
  3963  00FECB  65                 	db	101	;'e'
  3964  00FECC  61                 	db	97	;'a'
  3965  00FECD  64                 	db	100	;'d'
  3966  00FECE  20                 	db	32
  3967  00FECF  45                 	db	69	;'E'
  3968  00FED0  45                 	db	69	;'E'
  3969  00FED1  50                 	db	80	;'P'
  3970  00FED2  52                 	db	82	;'R'
  3971  00FED3  4F                 	db	79	;'O'
  3972  00FED4  4D                 	db	77	;'M'
  3973  00FED5  20                 	db	32
  3974  00FED6  44                 	db	68	;'D'
  3975  00FED7  41                 	db	65	;'A'
  3976  00FED8  54                 	db	84	;'T'
  3977  00FED9  41                 	db	65	;'A'
  3978  00FEDA  20                 	db	32
  3979  00FEDB  20                 	db	32
  3980  00FEDC  20                 	db	32
  3981  00FEDD  20                 	db	32
  3982  00FEDE  00                 	db	0
  3983  00FEDF                     STR_19:
  3984                           
  3985                           ; BSR set to: 57
  3986  00FEDF  43                 	db	67	;'C'
  3987  00FEE0  68                 	db	104	;'h'
  3988  00FEE1  65                 	db	101	;'e'
  3989  00FEE2  63                 	db	99	;'c'
  3990  00FEE3  6B                 	db	107	;'k'
  3991  00FEE4  20                 	db	32
  3992  00FEE5  33                 	db	51	;'3'
  3993  00FEE6  30                 	db	48	;'0'
  3994  00FEE7  20                 	db	32
  3995  00FEE8  73                 	db	115	;'s'
  3996  00FEE9  65                 	db	101	;'e'
  3997  00FEEA  63                 	db	99	;'c'
  3998  00FEEB  6F                 	db	111	;'o'
  3999  00FEEC  6E                 	db	110	;'n'
  4000  00FEED  64                 	db	100	;'d'
  4001  00FEEE  73                 	db	115	;'s'
  4002  00FEEF  20                 	db	32
  4003  00FEF0  20                 	db	32
  4004  00FEF1  20                 	db	32
  4005  00FEF2  20                 	db	32
  4006  00FEF3  00                 	db	0
  4007  00FEF4                     STR_63:
  4008                           
  4009                           ; BSR set to: 57
  4010  00FEF4  5A                 	db	90	;'Z'
  4011  00FEF5  65                 	db	101	;'e'
  4012  00FEF6  72                 	db	114	;'r'
  4013  00FEF7  6F                 	db	111	;'o'
  4014  00FEF8  20                 	db	32
  4015  00FEF9  4F                 	db	79	;'O'
  4016  00FEFA  75                 	db	117	;'u'
  4017  00FEFB  74                 	db	116	;'t'
  4018  00FEFC  20                 	db	32
  4019  00FEFD  4F                 	db	79	;'O'
  4020  00FEFE  66                 	db	102	;'f'
  4021  00FEFF  20                 	db	32
  4022  00FF00  52                 	db	82	;'R'
  4023  00FF01  61                 	db	97	;'a'
  4024  00FF02  6E                 	db	110	;'n'
  4025  00FF03  67                 	db	103	;'g'
  4026  00FF04  65                 	db	101	;'e'
  4027  00FF05  20                 	db	32
  4028  00FF06  20                 	db	32
  4029  00FF07  20                 	db	32
  4030  00FF08  00                 	db	0
  4031  00FF09                     STR_57:
  4032                           
  4033                           ; BSR set to: 57
  4034  00FF09  53                 	db	83	;'S'
  4035  00FF0A  74                 	db	116	;'t'
  4036  00FF0B  61                 	db	97	;'a'
  4037  00FF0C  62                 	db	98	;'b'
  4038  00FF0D  69                 	db	105	;'i'
  4039  00FF0E  6C                 	db	108	;'l'
  4040  00FF0F  69                 	db	105	;'i'
  4041  00FF10  74                 	db	116	;'t'
  4042  00FF11  79                 	db	121	;'y'
  4043  00FF12  20                 	db	32
  4044  00FF13  63                 	db	99	;'c'
  4045  00FF14  6C                 	db	108	;'l'
  4046  00FF15  6F                 	db	111	;'o'
  4047  00FF16  63                 	db	99	;'c'
  4048  00FF17  6B                 	db	107	;'k'
  4049  00FF18  20                 	db	32
  4050  00FF19  25                 	db	37
  4051  00FF1A  64                 	db	100	;'d'
  4052  00FF1B  20                 	db	32
  4053  00FF1C  20                 	db	32
  4054  00FF1D  00                 	db	0
  4055  00FF1E                     STR_11:
  4056                           
  4057                           ; BSR set to: 57
  4058  00FF1E  49                 	db	73	;'I'
  4059  00FF1F  6E                 	db	110	;'n'
  4060  00FF20  76                 	db	118	;'v'
  4061  00FF21  61                 	db	97	;'a'
  4062  00FF22  6C                 	db	108	;'l'
  4063  00FF23  69                 	db	105	;'i'
  4064  00FF24  64                 	db	100	;'d'
  4065  00FF25  20                 	db	32
  4066  00FF26  45                 	db	69	;'E'
  4067  00FF27  45                 	db	69	;'E'
  4068  00FF28  50                 	db	80	;'P'
  4069  00FF29  52                 	db	82	;'R'
  4070  00FF2A  4F                 	db	79	;'O'
  4071  00FF2B  4D                 	db	77	;'M'
  4072  00FF2C  20                 	db	32
  4073  00FF2D  44                 	db	68	;'D'
  4074  00FF2E  41                 	db	65	;'A'
  4075  00FF2F  54                 	db	84	;'T'
  4076  00FF30  41                 	db	65	;'A'
  4077  00FF31  20                 	db	32
  4078  00FF32  00                 	db	0
  4079  00FF33                     STR_24:
  4080                           
  4081                           ; BSR set to: 57
  4082  00FF33  48                 	db	72	;'H'
  4083  00FF34  69                 	db	105	;'i'
  4084  00FF35  73                 	db	115	;'s'
  4085  00FF36  74                 	db	116	;'t'
  4086  00FF37  6F                 	db	111	;'o'
  4087  00FF38  72                 	db	114	;'r'
  4088  00FF39  79                 	db	121	;'y'
  4089  00FF3A  20                 	db	32
  4090  00FF3B  44                 	db	68	;'D'
  4091  00FF3C  61                 	db	97	;'a'
  4092  00FF3D  74                 	db	116	;'t'
  4093  00FF3E  61                 	db	97	;'a'
  4094  00FF3F  20                 	db	32
  4095  00FF40  20                 	db	32
  4096  00FF41  53                 	db	83	;'S'
  4097  00FF42  61                 	db	97	;'a'
  4098  00FF43  76                 	db	118	;'v'
  4099  00FF44  65                 	db	101	;'e'
  4100  00FF45  64                 	db	100	;'d'
  4101  00FF46  20                 	db	32
  4102  00FF47  00                 	db	0
  4103  00FF48                     STR_54:
  4104                           
  4105                           ; BSR set to: 57
  4106  00FF48  52                 	db	82	;'R'
  4107  00FF49  65                 	db	101	;'e'
  4108  00FF4A  6C                 	db	108	;'l'
  4109  00FF4B  65                 	db	101	;'e'
  4110  00FF4C  61                 	db	97	;'a'
  4111  00FF4D  73                 	db	115	;'s'
  4112  00FF4E  65                 	db	101	;'e'
  4113  00FF4F  20                 	db	32
  4114  00FF50  62                 	db	98	;'b'
  4115  00FF51  75                 	db	117	;'u'
  4116  00FF52  74                 	db	116	;'t'
  4117  00FF53  74                 	db	116	;'t'
  4118  00FF54  6F                 	db	111	;'o'
  4119  00FF55  6E                 	db	110	;'n'
  4120  00FF56  20                 	db	32
  4121  00FF57  25                 	db	37
  4122  00FF58  63                 	db	99	;'c'
  4123  00FF59  20                 	db	32
  4124  00FF5A  20                 	db	32
  4125  00FF5B  00                 	db	0
  4126  00FF5C                     STR_72:
  4127                           
  4128                           ; BSR set to: 57
  4129  00FF5C  48                 	db	72	;'H'
  4130  00FF5D  45                 	db	69	;'E'
  4131  00FF5E  4C                 	db	76	;'L'
  4132  00FF5F  50                 	db	80	;'P'
  4133  00FF60  20                 	db	32
  4134  00FF61  25                 	db	37
  4135  00FF62  73                 	db	115	;'s'
  4136  00FF63  20                 	db	32
  4137  00FF64  20                 	db	32
  4138  00FF65  20                 	db	32
  4139  00FF66  20                 	db	32
  4140  00FF67  20                 	db	32
  4141  00FF68  20                 	db	32
  4142  00FF69  20                 	db	32
  4143  00FF6A  20                 	db	32
  4144  00FF6B  20                 	db	32
  4145  00FF6C  20                 	db	32
  4146  00FF6D  20                 	db	32
  4147  00FF6E  00                 	db	0
  4148  00FF6F                     
  4149                           ; BSR set to: 57
  4150  00FF6F  44                 	db	68	;'D'
  4151  00FF70  49                 	db	73	;'I'
  4152  00FF71  53                 	db	83	;'S'
  4153  00FF72  50                 	db	80	;'P'
  4154  00FF73  4C                 	db	76	;'L'
  4155  00FF74  41                 	db	65	;'A'
  4156  00FF75  59                 	db	89	;'Y'
  4157  00FF76  20                 	db	32
  4158  00FF77  25                 	db	37
  4159  00FF78  73                 	db	115	;'s'
  4160  00FF79  20                 	db	32
  4161  00FF7A  20                 	db	32
  4162  00FF7B  20                 	db	32
  4163  00FF7C  20                 	db	32
  4164  00FF7D  20                 	db	32
  4165  00FF7E  20                 	db	32
  4166  00FF7F  20                 	db	32
  4167  00FF80  20                 	db	32
  4168  00FF81  00                 	db	0
  4169  00FF82                     
  4170                           ; BSR set to: 57
  4171  00FF82  25                 	db	37
  4172  00FF83  64                 	db	100	;'d'
  4173  00FF84  20                 	db	32
  4174  00FF85  25                 	db	37
  4175  00FF86  32                 	db	50	;'2'
  4176  00FF87  2E                 	db	46
  4177  00FF88  34                 	db	52	;'4'
  4178  00FF89  66                 	db	102	;'f'
  4179  00FF8A  2C                 	db	44
  4180  00FF8B  20                 	db	32
  4181  00FF8C  25                 	db	37
  4182  00FF8D  64                 	db	100	;'d'
  4183  00FF8E  20                 	db	32
  4184  00FF8F  20                 	db	32
  4185  00FF90  20                 	db	32
  4186  00FF91  23                 	db	35
  4187  00FF92  00                 	db	0
  4188  00FF93                     STR_27:
  4189                           
  4190                           ; BSR set to: 57
  4191  00FF93  25                 	db	37
  4192  00FF94  64                 	db	100	;'d'
  4193  00FF95  20                 	db	32
  4194  00FF96  25                 	db	37
  4195  00FF97  32                 	db	50	;'2'
  4196  00FF98  2E                 	db	46
  4197  00FF99  34                 	db	52	;'4'
  4198  00FF9A  66                 	db	102	;'f'
  4199  00FF9B  20                 	db	32
  4200  00FF9C  20                 	db	32
  4201  00FF9D  20                 	db	32
  4202  00FF9E  25                 	db	37
  4203  00FF9F  64                 	db	100	;'d'
  4204  00FFA0  20                 	db	32
  4205  00FFA1  20                 	db	32
  4206  00FFA2  00                 	db	0
  4207  00FFA3                     STR_76:
  4208                           
  4209                           ; BSR set to: 57
  4210  00FFA3  76                 	db	118	;'v'
  4211  00FFA4  74                 	db	116	;'t'
  4212  00FFA5  65                 	db	101	;'e'
  4213  00FFA6  72                 	db	114	;'r'
  4214  00FFA7  6D                 	db	109	;'m'
  4215  00FFA8  20                 	db	32
  4216  00FFA9  25                 	db	37
  4217  00FFAA  78                 	db	120	;'x'
  4218  00FFAB  3A                 	db	58	;':'
  4219  00FFAC  25                 	db	37
  4220  00FFAD  78                 	db	120	;'x'
  4221  00FFAE  20                 	db	32
  4222  00FFAF  20                 	db	32
  4223  00FFB0  20                 	db	32
  4224  00FFB1  00                 	db	0
  4225  00FFB2                     STR_70:
  4226                           
  4227                           ; BSR set to: 57
  4228  00FFB2  46                 	db	70	;'F'
  4229  00FFB3  65                 	db	101	;'e'
  4230  00FFB4  62                 	db	98	;'b'
  4231  00FFB5  20                 	db	32
  4232  00FFB6  31                 	db	49	;'1'
  4233  00FFB7  35                 	db	53	;'5'
  4234  00FFB8  20                 	db	32
  4235  00FFB9  32                 	db	50	;'2'
  4236  00FFBA  30                 	db	48	;'0'
  4237  00FFBB  32                 	db	50	;'2'
  4238  00FFBC  30                 	db	48	;'0'
  4239  00FFBD  00                 	db	0
  4240  00FFBE                     STR_74:
  4241                           
  4242                           ; BSR set to: 57
  4243  00FFBE  25                 	db	37
  4244  00FFBF  73                 	db	115	;'s'
  4245  00FFC0  20                 	db	32
  4246  00FFC1  20                 	db	32
  4247  00FFC2  20                 	db	32
  4248  00FFC3  20                 	db	32
  4249  00FFC4  20                 	db	32
  4250  00FFC5  20                 	db	32
  4251  00FFC6  20                 	db	32
  4252  00FFC7  00                 	db	0
  4253  00FFC8                     STR_71:
  4254                           
  4255                           ; BSR set to: 57
  4256  00FFC8  32                 	db	50	;'2'
  4257  00FFC9  30                 	db	48	;'0'
  4258  00FFCA  3A                 	db	58	;':'
  4259  00FFCB  32                 	db	50	;'2'
  4260  00FFCC  32                 	db	50	;'2'
  4261  00FFCD  3A                 	db	58	;':'
  4262  00FFCE  31                 	db	49	;'1'
  4263  00FFCF  36                 	db	54	;'6'
  4264  00FFD0  00                 	db	0
  4265  00FFD1                     STR_3:
  4266                           
  4267                           ; BSR set to: 57
  4268  00FFD1  31                 	db	49	;'1'
  4269  00FFD2  2E                 	db	46
  4270  00FFD3  32                 	db	50	;'2'
  4271  00FFD4  33                 	db	51	;'3'
  4272  00FFD5  00                 	db	0
  4273  00FFD6                     STR_91:
  4274                           
  4275                           ; BSR set to: 57
  4276  00FFD6  49                 	db	73	;'I'
  4277  00FFD7  4E                 	db	78	;'N'
  4278  00FFD8  46                 	db	70	;'F'
  4279  00FFD9  00                 	db	0
  4280  00FFDA                     STR_95:
  4281                           
  4282                           ; BSR set to: 57
  4283  00FFDA  4E                 	db	78	;'N'
  4284  00FFDB  41                 	db	65	;'A'
  4285  00FFDC  4E                 	db	78	;'N'
  4286  00FFDD  00                 	db	0
  4287  00FFDE                     STR_92:
  4288                           
  4289                           ; BSR set to: 57
  4290  00FFDE  69                 	db	105	;'i'
  4291  00FFDF  6E                 	db	110	;'n'
  4292  00FFE0  66                 	db	102	;'f'
  4293  00FFE1  00                 	db	0
  4294  00FFE2                     STR_96:
  4295                           
  4296                           ; BSR set to: 57
  4297  00FFE2  6E                 	db	110	;'n'
  4298  00FFE3  61                 	db	97	;'a'
  4299  00FFE4  6E                 	db	110	;'n'
  4300  00FFE5  00                 	db	0
  4301  00FFE6                     STR_122:
  4302                           
  4303                           ; BSR set to: 57
  4304  00FFE6  6C                 	db	108	;'l'
  4305  00FFE7  58                 	db	88	;'X'
  4306  00FFE8  00                 	db	0
  4307  00FFE9                     STR_99:
  4308                           
  4309                           ; BSR set to: 57
  4310  00FFE9  6C                 	db	108	;'l'
  4311  00FFEA  64                 	db	100	;'d'
  4312  00FFEB  00                 	db	0
  4313  00FFEC                     STR_108:
  4314                           
  4315                           ; BSR set to: 57
  4316  00FFEC  6C                 	db	108	;'l'
  4317  00FFED  66                 	db	102	;'f'
  4318  00FFEE  00                 	db	0
  4319  00FFEF                     STR_103:
  4320                           
  4321                           ; BSR set to: 57
  4322  00FFEF  6C                 	db	108	;'l'
  4323  00FFF0  69                 	db	105	;'i'
  4324  00FFF1  00                 	db	0
  4325  00FFF2                     STR_113:
  4326                           
  4327                           ; BSR set to: 57
  4328  00FFF2  6C                 	db	108	;'l'
  4329  00FFF3  75                 	db	117	;'u'
  4330  00FFF4  00                 	db	0
  4331  00FFF5                     STR_118:
  4332                           
  4333                           ; BSR set to: 57
  4334  00FFF5  6C                 	db	108	;'l'
  4335  00FFF6  78                 	db	120	;'x'
  4336  00FFF7  00                 	db	0
  4337  00FFF8                     STR_69:
  4338                           
  4339                           ; BSR set to: 57
  4340  00FFF8  25                 	db	37
  4341  00FFF9  63                 	db	99	;'c'
  4342  00FFFA  00                 	db	0
  4343  00FFFB                     STR_68:
  4344                           
  4345                           ; BSR set to: 57
  4346  00FFFB  25                 	db	37
  4347  00FFFC  73                 	db	115	;'s'
  4348  00FFFD  00                 	db	0
  4349  0000                     
  4350                           ; #config settings
  4351  00FFFE  00                 	db	0	; dummy byte at the end
  4352  0000                     
  4353                           	psect	cinit
  4354  01F424                     __pcinit:
  4355                           	opt callstack 0
  4356  01F424                     start_initialization:
  4357                           	opt callstack 0
  4358  01F424                     __initialization:
  4359                           	opt callstack 0
  4360                           
  4361                           ; Initialize objects allocated to BIGRAM (848 bytes)
  4362                           ; load TBLPTR registers with __pidataBIGRAM
  4363  01F424  0E5A               	movlw	low __pidataBIGRAM
  4364  01F426  6EF6               	movwf	tblptrl,c
  4365  01F428  0EA1               	movlw	high __pidataBIGRAM
  4366  01F42A  6EF7               	movwf	tblptrh,c
  4367  01F42C  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  4368  01F42E  6EF8               	movwf	tblptru,c
  4369  01F430  EE01  F2FF         	lfsr	0,__pdataBIGRAM
  4370  01F434  EE20 F350          	lfsr	2,848
  4371  01F438                     copy_data0:
  4372  01F438  0009               	tblrd		*+
  4373  01F43A  006F FFD7 FFEE     	movff	tablat,postinc0
  4374  01F440  50DD               	movf	postdec2,w,c
  4375  01F442  50D9               	movf	fsr2l,w,c
  4376  01F444  E1F9               	bnz	copy_data0
  4377  01F446  50DA               	movf	fsr2h,w,c
  4378  01F448  E1F7               	bnz	copy_data0
  4379                           
  4380                           ; Initialize objects allocated to BANK2 (181 bytes)
  4381                           ; load TBLPTR registers with __pidataBANK2
  4382  01F44A  0EB6               	movlw	low __pidataBANK2
  4383  01F44C  6EF6               	movwf	tblptrl,c
  4384  01F44E  0E00               	movlw	high __pidataBANK2
  4385  01F450  6EF7               	movwf	tblptrh,c
  4386  01F452  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4387  01F454  6EF8               	movwf	tblptru,c
  4388  01F456  EE00  F200         	lfsr	0,__pdataBANK2
  4389  01F45A  EE20 F0B5          	lfsr	2,181
  4390  01F45E                     copy_data1:
  4391  01F45E  0009               	tblrd		*+
  4392  01F460  006F FFD7 FFEE     	movff	tablat,postinc0
  4393  01F466  50DD               	movf	postdec2,w,c
  4394  01F468  50D9               	movf	fsr2l,w,c
  4395  01F46A  E1F9               	bnz	copy_data1
  4396                           
  4397                           ; Initialize objects allocated to BANK1 (187 bytes)
  4398                           ; load TBLPTR registers with __pidataBANK1
  4399  01F46C  0EFC               	movlw	low __pidataBANK1
  4400  01F46E  6EF6               	movwf	tblptrl,c
  4401  01F470  0EFC               	movlw	high __pidataBANK1
  4402  01F472  6EF7               	movwf	tblptrh,c
  4403  01F474  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  4404  01F476  6EF8               	movwf	tblptru,c
  4405  01F478  EE00  F100         	lfsr	0,__pdataBANK1
  4406  01F47C  EE20 F0BB          	lfsr	2,187
  4407  01F480                     copy_data2:
  4408  01F480  0009               	tblrd		*+
  4409  01F482  006F FFD7 FFEE     	movff	tablat,postinc0
  4410  01F488  50DD               	movf	postdec2,w,c
  4411  01F48A  50D9               	movf	fsr2l,w,c
  4412  01F48C  E1F9               	bnz	copy_data2
  4413                           
  4414                           ; Clear objects allocated to BIGRAM (642 bytes)
  4415  01F48E  EE02  F24F         	lfsr	0,__pbssBIGRAM
  4416  01F492  EE20 F282          	lfsr	2,642
  4417  01F496                     clear_0:
  4418  01F496  6AEE               	clrf	postinc0,c
  4419  01F498  50DD               	movf	postdec2,w,c
  4420  01F49A  50D9               	movf	fsr2l,w,c
  4421  01F49C  E1FC               	bnz	clear_0
  4422  01F49E  50DA               	movf	fsr2h,w,c
  4423  01F4A0  E1FA               	bnz	clear_0
  4424                           
  4425                           ; Clear objects allocated to BANK6 (255 bytes)
  4426  01F4A2  EE01  F200         	lfsr	0,__pbssBANK6
  4427  01F4A6  EE20 F0FF          	lfsr	2,255
  4428  01F4AA                     clear_1:
  4429  01F4AA  6AEE               	clrf	postinc0,c
  4430  01F4AC  50DD               	movf	postdec2,w,c
  4431  01F4AE  50D9               	movf	fsr2l,w,c
  4432  01F4B0  E1FC               	bnz	clear_1
  4433  01F4B2  50DA               	movf	fsr2h,w,c
  4434  01F4B4  E1FA               	bnz	clear_1
  4435                           
  4436                           ; Clear objects allocated to BANK5 (171 bytes)
  4437  01F4B6  EE01  F100         	lfsr	0,__pbssBANK5
  4438  01F4BA  0EAB               	movlw	171
  4439  01F4BC                     clear_2:
  4440  01F4BC  6AEE               	clrf	postinc0,c
  4441  01F4BE  06E8               	decf	wreg,f,c
  4442  01F4C0  E1FD               	bnz	clear_2
  4443                           
  4444                           ; Clear objects allocated to BANK4 (198 bytes)
  4445  01F4C2  EE01  F000         	lfsr	0,__pbssBANK4
  4446  01F4C6  0EC6               	movlw	198
  4447  01F4C8                     clear_3:
  4448  01F4C8  6AEE               	clrf	postinc0,c
  4449  01F4CA  06E8               	decf	wreg,f,c
  4450  01F4CC  E1FD               	bnz	clear_3
  4451                           
  4452                           ; Clear objects allocated to BANK3 (247 bytes)
  4453  01F4CE  EE00  F300         	lfsr	0,__pbssBANK3
  4454  01F4D2  0EF7               	movlw	247
  4455  01F4D4                     clear_4:
  4456  01F4D4  6AEE               	clrf	postinc0,c
  4457  01F4D6  06E8               	decf	wreg,f,c
  4458  01F4D8  E1FD               	bnz	clear_4
  4459                           
  4460                           ; Clear objects allocated to BANK2 (52 bytes)
  4461  01F4DA  EE00  F2B5         	lfsr	0,__pbssBANK2
  4462  01F4DE  0E34               	movlw	52
  4463  01F4E0                     clear_5:
  4464  01F4E0  6AEE               	clrf	postinc0,c
  4465  01F4E2  06E8               	decf	wreg,f,c
  4466  01F4E4  E1FD               	bnz	clear_5
  4467                           
  4468                           ; Clear objects allocated to BANK1 (69 bytes)
  4469  01F4E6  EE00  F1BB         	lfsr	0,__pbssBANK1
  4470  01F4EA  0E45               	movlw	69
  4471  01F4EC                     clear_6:
  4472  01F4EC  6AEE               	clrf	postinc0,c
  4473  01F4EE  06E8               	decf	wreg,f,c
  4474  01F4F0  E1FD               	bnz	clear_6
  4475                           
  4476                           ; Clear objects allocated to BANK0 (135 bytes)
  4477  01F4F2  EE00  F060         	lfsr	0,__pbssBANK0
  4478  01F4F6  0E87               	movlw	135
  4479  01F4F8                     clear_7:
  4480  01F4F8  6AEE               	clrf	postinc0,c
  4481  01F4FA  06E8               	decf	wreg,f,c
  4482  01F4FC  E1FD               	bnz	clear_7
  4483                           
  4484                           ; Clear objects allocated to COMRAM (14 bytes)
  4485  01F4FE  EE00  F04A         	lfsr	0,__pbssCOMRAM
  4486  01F502  0E0E               	movlw	14
  4487  01F504                     clear_8:
  4488  01F504  6AEE               	clrf	postinc0,c
  4489  01F506  06E8               	decf	wreg,f,c
  4490  01F508  E1FD               	bnz	clear_8
  4491                           
  4492                           ;
  4493                           ; Setup IVTBASE
  4494                           ;
  4495  01F50A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4496  01F50C  6ED5               	movwf	213,c
  4497  01F50E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4498  01F510  6ED6               	movwf	214,c
  4499  01F512  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4500  01F514  6ED7               	movwf	215,c
  4501  01F516                     end_of_initialization:
  4502                           	opt callstack 0
  4503  01F516                     __end_of__initialization:
  4504                           	opt callstack 0
  4505  01F516  0100               	movlb	0
  4506  01F518  EF00  F080         	goto	_main	;jump to C main() function
  4507                           
  4508                           	psect	bssCOMRAM
  4509  00004A                     __pbssCOMRAM:
  4510                           	opt callstack 0
  4511  00004A                     _width:
  4512                           	opt callstack 0
  4513  00004A                     	ds	2
  4514  00004C                     _prec:
  4515                           	opt callstack 0
  4516  00004C                     	ds	2
  4517  00004E                     _flags:
  4518                           	opt callstack 0
  4519  00004E                     	ds	2
  4520  000050                     calc_bsoc@log_update_wait:
  4521                           	opt callstack 0
  4522  000050                     	ds	1
  4523  000051                     check_day_time@day_delay:
  4524                           	opt callstack 0
  4525  000051                     	ds	1
  4526  000052                     dac_spi_control@init:
  4527                           	opt callstack 0
  4528  000052                     	ds	1
  4529  000053                     display_history@bwait:
  4530                           	opt callstack 0
  4531  000053                     	ds	1
  4532  000054                     _uart2RxHead:
  4533                           	opt callstack 0
  4534  000054                     	ds	1
  4535  000055                     _uart2TxBufferRemaining:
  4536                           	opt callstack 0
  4537  000055                     	ds	1
  4538  000056                     _uart2TxTail:
  4539                           	opt callstack 0
  4540  000056                     	ds	1
  4541  000057                     _uart1RxHead:
  4542                           	opt callstack 0
  4543  000057                     	ds	1
  4544                           
  4545                           	psect	bssBANK0
  4546  000060                     __pbssBANK0:
  4547                           	opt callstack 0
  4548  000060                     _spi_link:
  4549                           	opt callstack 0
  4550  000060                     	ds	12
  4551  00006C                     spinners@s:
  4552                           	opt callstack 0
  4553  00006C                     	ds	6
  4554  000072                     ___tzname:
  4555                           	opt callstack 0
  4556  000072                     	ds	4
  4557  000076                     ___timezone:
  4558                           	opt callstack 0
  4559  000076                     	ds	4
  4560  00007A                     floorf@F524:
  4561                           	opt callstack 0
  4562  00007A                     	ds	4
  4563  00007E                     fabsf@F463:
  4564                           	opt callstack 0
  4565  00007E                     	ds	4
  4566  000082                     ___fpclassifyf@F463:
  4567                           	opt callstack 0
  4568  000082                     	ds	4
  4569  000086                     calc_ror_data@bcror:
  4570                           	opt callstack 0
  4571  000086                     	ds	4
  4572  00008A                     calc_ror_data@bvror:
  4573                           	opt callstack 0
  4574  00008A                     	ds	4
  4575  00008E                     calc_model_data@bcror:
  4576                           	opt callstack 0
  4577  00008E                     	ds	4
  4578  000092                     calc_model_data@bvror:
  4579                           	opt callstack 0
  4580  000092                     	ds	4
  4581  000096                     _utctime:
  4582                           	opt callstack 0
  4583  000096                     	ds	4
  4584  00009A                     wdtdelay@dcount:
  4585                           	opt callstack 0
  4586  00009A                     	ds	4
  4587  00009E                     _P:
  4588                           	opt callstack 0
  4589  00009E                     	ds	4
  4590  0000A2                     _TMR3_InterruptHandler:
  4591                           	opt callstack 0
  4592  0000A2                     	ds	3
  4593  0000A5                     _TMR5_InterruptHandler:
  4594                           	opt callstack 0
  4595  0000A5                     	ds	3
  4596  0000A8                     _TMR6_InterruptHandler:
  4597                           	opt callstack 0
  4598  0000A8                     	ds	3
  4599  0000AB                     _ADCC_ADTI_InterruptHandler:
  4600                           	opt callstack 0
  4601  0000AB                     	ds	3
  4602  0000AE                     _ADCC_ADI_InterruptHandler:
  4603                           	opt callstack 0
  4604  0000AE                     	ds	3
  4605  0000B1                     _UART1_RxInterruptHandler:
  4606                           	opt callstack 0
  4607  0000B1                     	ds	3
  4608  0000B4                     _UART2_TxInterruptHandler:
  4609                           	opt callstack 0
  4610  0000B4                     	ds	3
  4611  0000B7                     _UART2_RxInterruptHandler:
  4612                           	opt callstack 0
  4613  0000B7                     	ds	3
  4614  0000BA                     _INT1_InterruptHandler:
  4615                           	opt callstack 0
  4616  0000BA                     	ds	3
  4617  0000BD                     _INT0_InterruptHandler:
  4618                           	opt callstack 0
  4619  0000BD                     	ds	3
  4620  0000C0                     _dst_off:
  4621                           	opt callstack 0
  4622  0000C0                     	ds	2
  4623  0000C2                     ___daylight:
  4624                           	opt callstack 0
  4625  0000C2                     	ds	2
  4626  0000C4                     _nout:
  4627                           	opt callstack 0
  4628  0000C4                     	ds	2
  4629  0000C6                     _t_mbmc:
  4630                           	opt callstack 0
  4631  0000C6                     	ds	2
  4632  0000C8                     TMR3_ISR@CountCallBack:
  4633                           	opt callstack 0
  4634  0000C8                     	ds	2
  4635  0000CA                     _timer3ReloadVal:
  4636                           	opt callstack 0
  4637  0000CA                     	ds	2
  4638  0000CC                     TMR5_ISR@CountCallBack:
  4639                           	opt callstack 0
  4640  0000CC                     	ds	2
  4641  0000CE                     _timer5ReloadVal:
  4642                           	opt callstack 0
  4643  0000CE                     	ds	2
  4644  0000D0                     esr_check@esr_state:
  4645                           	opt callstack 0
  4646  0000D0                     	ds	1
  4647  0000D1                     dac_spi_control@SB:
  4648                           	opt callstack 0
  4649  0000D1                     	ds	1
  4650  0000D2                     dac_spi_control@SC:
  4651                           	opt callstack 0
  4652  0000D2                     	ds	1
  4653  0000D3                     dac_spi_control@S2:
  4654                           	opt callstack 0
  4655  0000D3                     	ds	1
  4656  0000D4                     dac_spi_control@S1:
  4657                           	opt callstack 0
  4658  0000D4                     	ds	1
  4659  0000D5                     dac_spi_control@S0:
  4660                           	opt callstack 0
  4661  0000D5                     	ds	1
  4662  0000D6                     _mode_sw:
  4663                           	opt callstack 0
  4664  0000D6                     	ds	1
  4665  0000D7                     _uart2RxCount:
  4666                           	opt callstack 0
  4667  0000D7                     	ds	1
  4668  0000D8                     _uart2RxTail:
  4669                           	opt callstack 0
  4670  0000D8                     	ds	1
  4671  0000D9                     _uart2TxHead:
  4672                           	opt callstack 0
  4673  0000D9                     	ds	1
  4674  0000DA                     _uart1RxCount:
  4675                           	opt callstack 0
  4676  0000DA                     	ds	1
  4677  0000DB                     _uart1RxTail:
  4678                           	opt callstack 0
  4679  0000DB                     	ds	1
  4680  0000DC                     time@current_time:
  4681                           	opt callstack 0
  4682  0000DC                     	ds	8
  4683  0000E4                     _crcObj:
  4684                           	opt callstack 0
  4685  0000E4                     	ds	3
  4686                           
  4687                           	psect	bssBANK1
  4688  0001BB                     __pbssBANK1:
  4689                           	opt callstack 0
  4690  0001BB                     _S:
  4691                           	opt callstack 0
  4692  0001BB                     	ds	41
  4693  0001E4                     _lock:
  4694                           	opt callstack 0
  4695  0001E4                     	ds	4
  4696  0001E8                     _r0:
  4697                           	opt callstack 0
  4698  0001E8                     	ds	10
  4699  0001F2                     _dst_name:
  4700                           	opt callstack 0
  4701  0001F2                     	ds	7
  4702  0001F9                     _std_name:
  4703                           	opt callstack 0
  4704  0001F9                     	ds	7
  4705                           
  4706                           	psect	dataBANK1
  4707  000100                     __pdataBANK1:
  4708                           	opt callstack 0
  4709  000100                     stoa@F1166:
  4710                           	opt callstack 0
  4711  000100                     	ds	7
  4712  000107                     _R:
  4713                           	opt callstack 0
  4714  000107                     	ds	171
  4715  0001B2                     _H:
  4716                           	opt callstack 0
  4717  0001B2                     	ds	9
  4718                           
  4719                           	psect	bssBANK2
  4720  0002B5                     __pbssBANK2:
  4721                           	opt callstack 0
  4722  0002B5                     _tickCount:
  4723                           	opt callstack 0
  4724  0002B5                     	ds	26
  4725  0002CF                     _uart1RxBuffer:
  4726                           	opt callstack 0
  4727  0002CF                     	ds	8
  4728  0002D7                     _r1:
  4729                           	opt callstack 0
  4730  0002D7                     	ds	10
  4731  0002E1                     _seed:
  4732                           	opt callstack 0
  4733  0002E1                     	ds	8
  4734                           
  4735                           	psect	dataBANK2
  4736  000200                     __pdataBANK2:
  4737                           	opt callstack 0
  4738  000200                     _V:
  4739                           	opt callstack 0
  4740  000200                     	ds	181
  4741                           
  4742                           	psect	bssBANK3
  4743  000300                     __pbssBANK3:
  4744                           	opt callstack 0
  4745  000300                     lp_filter@smooth:
  4746                           	opt callstack 0
  4747  000300                     	ds	84
  4748  000354                     _dbuf:
  4749                           	opt callstack 0
  4750  000354                     	ds	80
  4751  0003A4                     	ds	32
  4752  0003C4                     asctime@buf:
  4753                           	opt callstack 0
  4754  0003C4                     	ds	27
  4755  0003DF                     localtime@tm:
  4756                           	opt callstack 0
  4757  0003DF                     	ds	24
  4758                           
  4759                           	psect	bssBANK4
  4760  000400                     __pbssBANK4:
  4761                           	opt callstack 0
  4762  000400                     _uart2TxBuffer:
  4763                           	opt callstack 0
  4764  000400                     	ds	64
  4765  000440                     _ring_buf2:
  4766                           	opt callstack 0
  4767  000440                     	ds	67
  4768  000483                     _ring_buf1:
  4769                           	opt callstack 0
  4770  000483                     	ds	67
  4771                           
  4772                           	psect	bssBANK5
  4773  000500                     __pbssBANK5:
  4774                           	opt callstack 0
  4775  000500                     _r_cal:
  4776                           	opt callstack 0
  4777  000500                     	ds	171
  4778                           
  4779                           	psect	bssBANK6
  4780  000600                     __pbssBANK6:
  4781                           	opt callstack 0
  4782  000600                     _uart2RxBuffer:
  4783                           	opt callstack 0
  4784  000600                     	ds	255
  4785                           
  4786                           	psect	bssBIGRAM
  4787  000A4F                     __pbssBIGRAM:
  4788                           	opt callstack 0
  4789  000A4F                     _D:
  4790                           	opt callstack 0
  4791  000A4F                     	ds	642
  4792                           
  4793                           	psect	dataBIGRAM
  4794  0006FF                     __pdataBIGRAM:
  4795                           	opt callstack 0
  4796  0006FF                     _port_data:
  4797                           	opt callstack 0
  4798  0006FF                     	ds	512
  4799  0008FF                     _C:
  4800                           	opt callstack 0
  4801  0008FF                     	ds	336
  4802                           
  4803                           	psect	cstackBANK0
  4804  0000E7                     __pcstackBANK0:
  4805                           	opt callstack 0
  4806  0000E7                     ??_TMR3_ISR:
  4807                           
  4808                           ; 1 bytes @ 0x0
  4809  0000E7                     	ds	25
  4810                           
  4811                           	psect	cstackCOMRAM
  4812  000001                     __pcstackCOMRAM:
  4813                           	opt callstack 0
  4814  000001                     ??_ADCC_ThresholdISR:
  4815  000001                     
  4816                           ; 1 bytes @ 0x0
  4817  000001                     	ds	5
  4818  000006                     ??_TMR6_ISR:
  4819                           
  4820                           ; 1 bytes @ 0x5
  4821  000006                     	ds	1
  4822  000007                     ??_INT1_ISR:
  4823  000007                     
  4824                           ; 1 bytes @ 0x6
  4825  000007                     	ds	4
  4826  00000B                     ??_TMR5_ISR:
  4827                           
  4828                           ; 1 bytes @ 0xA
  4829  00000B                     	ds	31
  4830                           
  4831 ;;
  4832 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4833 ;;
  4834 ;; *************** function _main *****************
  4835 ;; Defined at:
  4836 ;;		line 197 in file "main.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;		None
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  esr_temp        4  [STACK] float 
  4841 ;;  i_esr           2  [STACK] unsigned short 
  4842 ;;  shape           1  [STACK] unsigned char 
  4843 ;;  inp_index       1  [STACK] unsigned char 
  4844 ;;  k               1  [STACK] unsigned char 
  4845 ;;  j               1  [STACK] unsigned char 
  4846 ;;  i               1  [STACK] unsigned char 
  4847 ;;  mode            1  [STACK] enum E17179
  4848 ;;  i_ror           1  [STACK] unsigned char 
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  1  [STACK] void 
  4851 ;; Registers used:
  4852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4862 ;;Total ram usage:        0 bytes
  4863 ;; Hardware stack levels required when called:   29
  4864 ;; This function calls:
  4865 ;;		_SYSTEM_Initialize
  4866 ;;		_StartTimer
  4867 ;;		_TimerDone
  4868 ;;		_WaitMs
  4869 ;;		___fladd
  4870 ;;		___flge
  4871 ;;		___fltol
  4872 ;;		_calc_model_data
  4873 ;;		_calc_ror_data
  4874 ;;		_check_adc_scan
  4875 ;;		_check_enter_button
  4876 ;;		_check_help
  4877 ;;		_clear_adc_scan
  4878 ;;		_clear_hid_pflags
  4879 ;;		_conv_raw_result
  4880 ;;		_convert_adc_data
  4881 ;;		_current_sensor_cal
  4882 ;;		_display_history
  4883 ;;		_eaDogM_WriteCommand
  4884 ;;		_esr_check
  4885 ;;		_fabsf
  4886 ;;		_get_raw_result
  4887 ;;		_get_switch
  4888 ;;		_get_vterm_ptr
  4889 ;;		_hid_display
  4890 ;;		_init_bsoc
  4891 ;;		_init_display
  4892 ;;		_init_port_dma
  4893 ;;		_load_hist_data
  4894 ;;		_lp_filter
  4895 ;;		_mode_lamp_dim
  4896 ;;		_read_cal_data
  4897 ;;		_set_dac
  4898 ;;		_set_dac_a
  4899 ;;		_set_dac_b
  4900 ;;		_set_display_info
  4901 ;;		_set_load_relay_one
  4902 ;;		_set_load_relay_two
  4903 ;;		_set_vterm
  4904 ;;		_spinners
  4905 ;;		_sprintf
  4906 ;;		_srand
  4907 ;;		_start_adc_scan
  4908 ;;		_start_switch_handler
  4909 ;;		_static_soc
  4910 ;;		_time
  4911 ;;		_update_cal_data
  4912 ;;		_update_hist_data
  4913 ;;		_update_lcd
  4914 ;;		_wait_lcd_done
  4915 ;;		_write_cal_data
  4916 ;; This function is called by:
  4917 ;;		Startup code after reset
  4918 ;; This function uses a reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text0
  4922  010000                     __ptext0:
  4923                           	opt callstack 0
  4924  010000                     _main:
  4925                           	opt callstack 0
  4926                           
  4927                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4928  010000  0E11               	movlw	17
  4929  010002  26E1               	addwf	fsr1l,f,c
  4930  010004  0E00               	movlw	0
  4931  010006  22E2               	addwfc	fsr1h,f,c
  4932                           
  4933                           ;main.c: 199:  UI_STATES mode;;main.c: 200:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4934                           ;stkvar	_inp_index @ sp[(-17)+11]
  4935                           
  4936                           ;incstack = 0
  4937  010008  0EFA               	movlw	-6
  4938  01000A  6AE3               	clrf	plusw1,c
  4939                           
  4940                           ;stkvar	_i @ sp[(-17)+14]
  4941  01000C  0EFD               	movlw	-3
  4942  01000E  6AE3               	clrf	plusw1,c
  4943                           
  4944                           ;stkvar	_j @ sp[(-17)+13]
  4945  010010  0EFC               	movlw	-4
  4946  010012  6AE3               	clrf	plusw1,c
  4947  010014  2AE3               	incf	plusw1,f,c
  4948                           
  4949                           ;stkvar	_k @ sp[(-17)+12]
  4950  010016  0EFB               	movlw	-5
  4951  010018  6AE3               	clrf	plusw1,c
  4952  01001A  82E3               	bsf	plusw1,1,c
  4953                           
  4954                           ;main.c: 203:  SYSTEM_Initialize();
  4955  01001C  EC02  F00A         	call	_SYSTEM_Initialize	;wreg free
  4956                           
  4957                           ; BSR set to: 60
  4958                           ;main.c: 206:  (INTCON0bits.GIEH = 1);
  4959  010020  8ED2               	bsf	210,7,c	;volatile
  4960                           
  4961                           ; BSR set to: 60
  4962                           ;main.c: 209:  (INTCON0bits.GIEL = 1);
  4963  010022  8CD2               	bsf	210,6,c	;volatile
  4964                           
  4965                           ; BSR set to: 60
  4966                           ;main.c: 211:  V.ui_state = UI_STATE_INIT;
  4967  010024  0102               	movlb	2	; () banked
  4968  010026  6B00               	clrf	_V& (0+255),b	;volatile
  4969                           
  4970                           ; BSR set to: 2
  4971                           ;main.c: 216:  WaitMs(300);
  4972  010028  0E2C               	movlw	44
  4973  01002A  6EE6               	movwf	postinc1,c
  4974  01002C  0E01               	movlw	1
  4975  01002E  6EE6               	movwf	postinc1,c
  4976  010030  ECC0  F00C         	call	_WaitMs	;wreg free
  4977                           
  4978                           ;main.c: 217:  if (PORTBbits.RB0) {
  4979  010034  A0CB               	btfss	203,0,c	;volatile
  4980  010036  D004               	goto	l17054
  4981                           
  4982                           ;main.c: 218:   mode = UI_STATE_HOST;
  4983                           ;stkvar	_mode @ sp[(-17)+15]
  4984  010038  0EFE               	movlw	-2
  4985  01003A  6AE3               	clrf	plusw1,c
  4986  01003C  2AE3               	incf	plusw1,f,c
  4987                           
  4988                           ;main.c: 219:  } else {
  4989  01003E  D004               	goto	l17056
  4990  010040                     l17054:
  4991                           
  4992                           ;main.c: 220:   mode = UI_STATE_LOG;
  4993                           ;stkvar	_mode @ sp[(-17)+15]
  4994  010040  0EFE               	movlw	-2
  4995  010042  6AE3               	clrf	plusw1,c
  4996  010044  80E3               	bsf	plusw1,0,c
  4997  010046  82E3               	bsf	plusw1,1,c	;indir
  4998  010048                     l17056:
  4999                           
  5000                           ;main.c: 223:  if (mode == UI_STATE_HOST) {
  5001                           ;stkvar	_mode @ sp[(-17)+15]
  5002  010048  0EFE               	movlw	-2
  5003  01004A  04E3               	decf	plusw1,w,c
  5004  01004C  A4D8               	btfss	status,2,c
  5005  01004E  D007               	goto	l1449
  5006                           
  5007                           ;main.c: 224:   do { LATDbits.LATD0 = 1; } while(0);
  5008  010050  80BD               	bsf	189,0,c	;volatile
  5009                           
  5010                           ;main.c: 225:   V.mode_pwm = 70;
  5011  010052  0E00               	movlw	0
  5012  010054  0102               	movlb	2	; () banked
  5013  010056  6F93               	movwf	(_V+147)& (0+255),b	;volatile
  5014  010058  0E46               	movlw	70
  5015  01005A  6F92               	movwf	(_V+146)& (0+255),b	;volatile
  5016                           
  5017                           ;main.c: 226:  } else {
  5018  01005C  D004               	goto	l17060
  5019  01005E                     l1449:
  5020  01005E  90BD               	bcf	189,0,c	;volatile
  5021                           
  5022                           ;main.c: 228:   V.mode_pwm = 0;
  5023  010060  0102               	movlb	2	; () banked
  5024  010062  6B92               	clrf	(_V+146)& (0+255),b	;volatile
  5025  010064  6B93               	clrf	(_V+147)& (0+255),b	;volatile
  5026  010066                     l17060:
  5027                           
  5028                           ; BSR set to: 2
  5029                           ;main.c: 230:  mode_lamp_dim(V.mode_pwm);
  5030  010066  0060  FA4B  FFE6   	movff	_V+146,postinc1
  5031  01006C  0060  FA4F  FFE6   	movff	_V+147,postinc1
  5032  010072  EC8B  F010         	call	_mode_lamp_dim	;wreg free
  5033  010076  D3CC               	goto	l17214
  5034  010078                     l17062:
  5035                           
  5036                           ; BSR set to: 2
  5037                           ;main.c: 238:    init_port_dma();
  5038  010078  EC5C  F00D         	call	_init_port_dma	;wreg free
  5039                           
  5040                           ; BSR set to: 59
  5041                           ;main.c: 240:    init_display();
  5042  01007C  ECF8  F0FB         	call	_init_display	;wreg free
  5043                           
  5044                           ; BSR set to: 61
  5045                           ;main.c: 241:    eaDogM_WriteCommand(0b00001100);
  5046  010080  0E0C               	movlw	12
  5047  010082  6EE6               	movwf	postinc1,c
  5048  010084  EC08  F011         	call	_eaDogM_WriteCommand	;wreg free
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;main.c: 242:    set_dac();
  5052  010088  EC95  F0FF         	call	_set_dac	;wreg free
  5053                           
  5054                           ;main.c: 246:    set_load_relay_one(1);
  5055  01008C  0E01               	movlw	1
  5056  01008E  6EE6               	movwf	postinc1,c
  5057  010090  ECE8  F010         	call	_set_load_relay_one	;wreg free
  5058                           
  5059                           ;main.c: 247:    set_load_relay_two(1);
  5060  010094  0E01               	movlw	1
  5061  010096  6EE6               	movwf	postinc1,c
  5062  010098  ECE0  F010         	call	_set_load_relay_two	;wreg free
  5063                           
  5064                           ;main.c: 249:    V.ui_state = mode;
  5065                           ;stkvar	_mode @ sp[(-17)+15]
  5066  01009C  0EFE               	movlw	-2
  5067  01009E  006F FF8C  F200    	movff	plusw1,_V	;volatile
  5068                           
  5069                           ;main.c: 250:    srand(1957);
  5070  0100A4  0EA5               	movlw	165
  5071  0100A6  6EE6               	movwf	postinc1,c
  5072  0100A8  0E07               	movlw	7
  5073  0100AA  6EE6               	movwf	postinc1,c
  5074  0100AC  ECDB  F00C         	call	_srand	;wreg free
  5075                           
  5076                           ; BSR set to: 2
  5077                           ;main.c: 251:    set_vterm(0);
  5078  0100B0  0E00               	movlw	0
  5079  0100B2  6EE6               	movwf	postinc1,c
  5080  0100B4  EC46  F010         	call	_set_vterm	;wreg free
  5081                           
  5082                           ;main.c: 252:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  5083  0100B8  0E61               	movlw	low STR_1
  5084  0100BA  6EE6               	movwf	postinc1,c
  5085  0100BC  0EFE               	movlw	high STR_1
  5086  0100BE  6EE6               	movwf	postinc1,c
  5087  0100C0  0E00               	movlw	0
  5088  0100C2  6EE6               	movwf	postinc1,c
  5089  0100C4  0E00               	movlw	0
  5090  0100C6  6EE6               	movwf	postinc1,c
  5091  0100C8  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5092  0100CC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5093  0100D2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5094  0100D8  0E04               	movlw	4
  5095  0100DA  6EE6               	movwf	postinc1,c
  5096  0100DC  EC8D  F0F9         	call	_sprintf	;wreg free
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;main.c: 253:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.23");
  5100  0100E0  0ED1               	movlw	low STR_3
  5101  0100E2  6EE6               	movwf	postinc1,c
  5102  0100E4  0EFF               	movlw	high STR_3
  5103  0100E6  6EE6               	movwf	postinc1,c
  5104  0100E8  0E37               	movlw	low STR_2
  5105  0100EA  6EE6               	movwf	postinc1,c
  5106  0100EC  0EFE               	movlw	high STR_2
  5107  0100EE  6EE6               	movwf	postinc1,c
  5108  0100F0  0E00               	movlw	0
  5109  0100F2  6EE6               	movwf	postinc1,c
  5110  0100F4  0E01               	movlw	1
  5111  0100F6  6EE6               	movwf	postinc1,c
  5112  0100F8  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5113  0100FC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5114  010102  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5115  010108  0E06               	movlw	6
  5116  01010A  6EE6               	movwf	postinc1,c
  5117  01010C  EC8D  F0F9         	call	_sprintf	;wreg free
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;main.c: 254:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  5121  010110  0EB9               	movlw	low STR_4
  5122  010112  6EE6               	movwf	postinc1,c
  5123  010114  0EFD               	movlw	high STR_4
  5124  010116  6EE6               	movwf	postinc1,c
  5125  010118  0E00               	movlw	0
  5126  01011A  6EE6               	movwf	postinc1,c
  5127  01011C  0E02               	movlw	2
  5128  01011E  6EE6               	movwf	postinc1,c
  5129  010120  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5130  010124  0060  F0AB  FFE6   	movff	btemp,postinc1
  5131  01012A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5132  010130  0E04               	movlw	4
  5133  010132  6EE6               	movwf	postinc1,c
  5134  010134  EC8D  F0F9         	call	_sprintf	;wreg free
  5135                           
  5136                           ; BSR set to: 0
  5137                           ;main.c: 255:    sprintf(get_vterm_ptr(3, 0), "                    ");
  5138  010138  0EF0               	movlw	low (STR_16+1)
  5139  01013A  6EE6               	movwf	postinc1,c
  5140  01013C  0EFB               	movlw	high (STR_16+1)
  5141  01013E  6EE6               	movwf	postinc1,c
  5142  010140  0E00               	movlw	0
  5143  010142  6EE6               	movwf	postinc1,c
  5144  010144  0E03               	movlw	3
  5145  010146  6EE6               	movwf	postinc1,c
  5146  010148  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5147  01014C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5148  010152  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5149  010158  0E04               	movlw	4
  5150  01015A  6EE6               	movwf	postinc1,c
  5151  01015C  EC8D  F0F9         	call	_sprintf	;wreg free
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;main.c: 256:    sprintf(get_vterm_ptr(0, 2), "                    ");
  5155  010160  0EF0               	movlw	low (STR_16+1)
  5156  010162  6EE6               	movwf	postinc1,c
  5157  010164  0EFB               	movlw	high (STR_16+1)
  5158  010166  6EE6               	movwf	postinc1,c
  5159  010168  0E02               	movlw	2
  5160  01016A  6EE6               	movwf	postinc1,c
  5161  01016C  0E00               	movlw	0
  5162  01016E  6EE6               	movwf	postinc1,c
  5163  010170  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5164  010174  0060  F0AB  FFE6   	movff	btemp,postinc1
  5165  01017A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5166  010180  0E04               	movlw	4
  5167  010182  6EE6               	movwf	postinc1,c
  5168  010184  EC8D  F0F9         	call	_sprintf	;wreg free
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;main.c: 257:    sprintf(get_vterm_ptr(1, 2), "                    ");
  5172  010188  0EF0               	movlw	low (STR_16+1)
  5173  01018A  6EE6               	movwf	postinc1,c
  5174  01018C  0EFB               	movlw	high (STR_16+1)
  5175  01018E  6EE6               	movwf	postinc1,c
  5176  010190  0E02               	movlw	2
  5177  010192  6EE6               	movwf	postinc1,c
  5178  010194  0E01               	movlw	1
  5179  010196  6EE6               	movwf	postinc1,c
  5180  010198  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5181  01019C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5182  0101A2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5183  0101A8  0E04               	movlw	4
  5184  0101AA  6EE6               	movwf	postinc1,c
  5185  0101AC  EC8D  F0F9         	call	_sprintf	;wreg free
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;main.c: 258:    sprintf(get_vterm_ptr(2, 2), "                    ");
  5189  0101B0  0EF0               	movlw	low (STR_16+1)
  5190  0101B2  6EE6               	movwf	postinc1,c
  5191  0101B4  0EFB               	movlw	high (STR_16+1)
  5192  0101B6  6EE6               	movwf	postinc1,c
  5193  0101B8  0E02               	movlw	2
  5194  0101BA  6EE6               	movwf	postinc1,c
  5195  0101BC  0E02               	movlw	2
  5196  0101BE  6EE6               	movwf	postinc1,c
  5197  0101C0  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5198  0101C4  0060  F0AB  FFE6   	movff	btemp,postinc1
  5199  0101CA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5200  0101D0  0E04               	movlw	4
  5201  0101D2  6EE6               	movwf	postinc1,c
  5202  0101D4  EC8D  F0F9         	call	_sprintf	;wreg free
  5203                           
  5204                           ; BSR set to: 0
  5205                           ;main.c: 259:    sprintf(get_vterm_ptr(3, 2), "                    ");
  5206  0101D8  0EF0               	movlw	low (STR_16+1)
  5207  0101DA  6EE6               	movwf	postinc1,c
  5208  0101DC  0EFB               	movlw	high (STR_16+1)
  5209  0101DE  6EE6               	movwf	postinc1,c
  5210  0101E0  0E02               	movlw	2
  5211  0101E2  6EE6               	movwf	postinc1,c
  5212  0101E4  0E03               	movlw	3
  5213  0101E6  6EE6               	movwf	postinc1,c
  5214  0101E8  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5215  0101EC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5216  0101F2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5217  0101F8  0E04               	movlw	4
  5218  0101FA  6EE6               	movwf	postinc1,c
  5219  0101FC  EC8D  F0F9         	call	_sprintf	;wreg free
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;main.c: 260:    update_lcd(0);
  5223  010200  0E00               	movlw	0
  5224  010202  6EE6               	movwf	postinc1,c
  5225  010204  EC3F  F0F2         	call	_update_lcd	;wreg free
  5226                           
  5227                           ;main.c: 261:    WaitMs(1000);
  5228  010208  0EE8               	movlw	232
  5229  01020A  6EE6               	movwf	postinc1,c
  5230  01020C  0E03               	movlw	3
  5231  01020E  6EE6               	movwf	postinc1,c
  5232  010210  ECC0  F00C         	call	_WaitMs	;wreg free
  5233                           
  5234                           ;main.c: 262:    StartTimer(TMR_DISPLAY, 250);
  5235  010214  0EFA               	movlw	250
  5236  010216  6EE6               	movwf	postinc1,c
  5237  010218  0E00               	movlw	0
  5238  01021A  6EE6               	movwf	postinc1,c
  5239  01021C  0E0A               	movlw	10
  5240  01021E  6EE6               	movwf	postinc1,c
  5241  010220  ECCE  F00B         	call	_StartTimer	;wreg free
  5242                           
  5243                           ;main.c: 263:    StartTimer(TMR_ADC, 200);
  5244  010224  0EC8               	movlw	200
  5245  010226  6EE6               	movwf	postinc1,c
  5246  010228  0E00               	movlw	0
  5247  01022A  6EE6               	movwf	postinc1,c
  5248  01022C  0E01               	movlw	1
  5249  01022E  6EE6               	movwf	postinc1,c
  5250  010230  ECCE  F00B         	call	_StartTimer	;wreg free
  5251                           
  5252                           ;main.c: 264:    StartTimer(TMR_INFO, 3000);
  5253  010234  0EB8               	movlw	184
  5254  010236  6EE6               	movwf	postinc1,c
  5255  010238  0E0B               	movlw	11
  5256  01023A  6EE6               	movwf	postinc1,c
  5257  01023C  0E07               	movlw	7
  5258  01023E  6EE6               	movwf	postinc1,c
  5259  010240  ECCE  F00B         	call	_StartTimer	;wreg free
  5260                           
  5261                           ;main.c: 265:    StartTimer(TMR_FLIPPER, 1500);
  5262  010244  0EDC               	movlw	220
  5263  010246  6EE6               	movwf	postinc1,c
  5264  010248  0E05               	movlw	5
  5265  01024A  6EE6               	movwf	postinc1,c
  5266  01024C  0E0B               	movlw	11
  5267  01024E  6EE6               	movwf	postinc1,c
  5268  010250  ECCE  F00B         	call	_StartTimer	;wreg free
  5269                           
  5270                           ;main.c: 266:    StartTimer(TMR_HELPDIS, 3000);
  5271  010254  0EB8               	movlw	184
  5272  010256  6EE6               	movwf	postinc1,c
  5273  010258  0E0B               	movlw	11
  5274  01025A  6EE6               	movwf	postinc1,c
  5275  01025C  0E09               	movlw	9
  5276  01025E  6EE6               	movwf	postinc1,c
  5277  010260  ECCE  F00B         	call	_StartTimer	;wreg free
  5278                           
  5279                           ;main.c: 268:    start_adc_scan();
  5280  010264  EC0B  F008         	call	_start_adc_scan	;wreg free
  5281                           
  5282                           ;main.c: 269:    start_switch_handler();
  5283  010268  ECF0  F0FF         	call	_start_switch_handler	;wreg free
  5284                           
  5285                           ; BSR set to: 57
  5286                           ;main.c: 270:    WaitMs(1000);
  5287  01026C  0EE8               	movlw	232
  5288  01026E  6EE6               	movwf	postinc1,c
  5289  010270  0E03               	movlw	3
  5290  010272  6EE6               	movwf	postinc1,c
  5291  010274  ECC0  F00C         	call	_WaitMs	;wreg free
  5292                           
  5293                           ;main.c: 275:    if (read_cal_data()) {
  5294  010278  EC65  F0E7         	call	_read_cal_data	;wreg free
  5295  01027C  502A               	movf	btemp^0,w,c
  5296  01027E  B4D8               	btfsc	status,2,c
  5297  010280  D01F               	goto	l17124
  5298                           
  5299                           ;main.c: 276:     update_cal_data();
  5300  010282  EC85  F009         	call	_update_cal_data	;wreg free
  5301                           
  5302                           ; BSR set to: 1
  5303                           ;main.c: 277:     update_hist_data(1, &C.hist[0]);
  5304  010286  0EB8               	movlw	low (_C+185)
  5305  010288  6EE6               	movwf	postinc1,c
  5306  01028A  0E09               	movlw	high (_C+185)
  5307  01028C  6EE6               	movwf	postinc1,c
  5308  01028E  0E01               	movlw	1
  5309  010290  6EE6               	movwf	postinc1,c
  5310  010292  EC68  F006         	call	_update_hist_data	;wreg free
  5311                           
  5312                           ;main.c: 278:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  5313  010296  0ECA               	movlw	low STR_10
  5314  010298  6EE6               	movwf	postinc1,c
  5315  01029A  0EFE               	movlw	high STR_10
  5316  01029C  6EE6               	movwf	postinc1,c
  5317  01029E  0E00               	movlw	0
  5318  0102A0  6EE6               	movwf	postinc1,c
  5319  0102A2  0E02               	movlw	2
  5320  0102A4  6EE6               	movwf	postinc1,c
  5321  0102A6  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5322  0102AA  0060  F0AB  FFE6   	movff	btemp,postinc1
  5323  0102B0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5324  0102B6  0E04               	movlw	4
  5325  0102B8  6EE6               	movwf	postinc1,c
  5326  0102BA  EC8D  F0F9         	call	_sprintf	;wreg free
  5327                           
  5328                           ;main.c: 279:    } else {
  5329  0102BE  D014               	goto	l1455
  5330  0102C0                     l17124:
  5331                           
  5332                           ;main.c: 280:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  5333  0102C0  0E1E               	movlw	low STR_11
  5334  0102C2  6EE6               	movwf	postinc1,c
  5335  0102C4  0EFF               	movlw	high STR_11
  5336  0102C6  6EE6               	movwf	postinc1,c
  5337  0102C8  0E00               	movlw	0
  5338  0102CA  6EE6               	movwf	postinc1,c
  5339  0102CC  0E02               	movlw	2
  5340  0102CE  6EE6               	movwf	postinc1,c
  5341  0102D0  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5342  0102D4  0060  F0AB  FFE6   	movff	btemp,postinc1
  5343  0102DA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5344  0102E0  0E04               	movlw	4
  5345  0102E2  6EE6               	movwf	postinc1,c
  5346  0102E4  EC8D  F0F9         	call	_sprintf	;wreg free
  5347  0102E8                     l1455:
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;main.c: 282:    update_lcd(0);
  5351  0102E8  0E00               	movlw	0
  5352  0102EA  6EE6               	movwf	postinc1,c
  5353  0102EC  EC3F  F0F2         	call	_update_lcd	;wreg free
  5354                           
  5355                           ;main.c: 283:    WaitMs(2000);
  5356  0102F0  0ED0               	movlw	208
  5357  0102F2  6EE6               	movwf	postinc1,c
  5358  0102F4  0E07               	movlw	7
  5359  0102F6  6EE6               	movwf	postinc1,c
  5360  0102F8  ECC0  F00C         	call	_WaitMs	;wreg free
  5361                           
  5362                           ;main.c: 285:    i_ror = 1;
  5363                           ;stkvar	_i_ror @ sp[(-17)+16]
  5364  0102FC  0EFF               	movlw	-1
  5365  0102FE  6AE3               	clrf	plusw1,c
  5366  010300  2AE3               	incf	plusw1,f,c
  5367  010302                     l17130:
  5368                           
  5369                           ;main.c: 287:     calc_ror_data();
  5370  010302  EC35  F0ED         	call	_calc_ror_data	;wreg free
  5371                           
  5372                           ;main.c: 288:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  5373  010306  0E00               	movlw	0
  5374  010308  6EE6               	movwf	postinc1,c
  5375  01030A  0E04               	movlw	4
  5376  01030C  6EE6               	movwf	postinc1,c
  5377  01030E  EC5B  F0C2         	call	_conv_raw_result	;wreg free
  5378  010312  0060  F0AB  FFE6   	movff	btemp,postinc1
  5379  010318  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5380  01031E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5381  010324  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5382  01032A  0E8F               	movlw	low STR_12
  5383  01032C  6EE6               	movwf	postinc1,c
  5384  01032E  0EFD               	movlw	high STR_12
  5385  010330  6EE6               	movwf	postinc1,c
  5386  010332  0E00               	movlw	0
  5387  010334  6EE6               	movwf	postinc1,c
  5388  010336  0E01               	movlw	1
  5389  010338  6EE6               	movwf	postinc1,c
  5390  01033A  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5391  01033E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5392  010344  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5393  01034A  0E08               	movlw	8
  5394  01034C  6EE6               	movwf	postinc1,c
  5395  01034E  EC8D  F0F9         	call	_sprintf	;wreg free
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;main.c: 289:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  5399  010352  EE22  F16B         	lfsr	2,_C+108	;volatile
  5400  010356  006F FF7B FFE6     	movff	postinc2,postinc1
  5401  01035C  006F FF7B FFE6     	movff	postinc2,postinc1
  5402  010362  006F FF7B FFE6     	movff	postinc2,postinc1
  5403  010368  006F FF7B FFE6     	movff	postinc2,postinc1
  5404                           
  5405                           ;stkvar	_i_ror @ sp[(-21)+16]
  5406  01036E  0EFB               	movlw	-5
  5407  010370  50E3               	movf	plusw1,w,c
  5408  010372  6EE6               	movwf	postinc1,c
  5409  010374  0E00               	movlw	0
  5410  010376  6EE6               	movwf	postinc1,c
  5411  010378  0E00               	movlw	0
  5412  01037A  6EE6               	movwf	postinc1,c
  5413  01037C  0E05               	movlw	5
  5414  01037E  6EE6               	movwf	postinc1,c
  5415  010380  EC6D  F0FC         	call	_spinners	;wreg free
  5416  010384  502A               	movf	btemp^0,w,c
  5417  010386  6EE6               	movwf	postinc1,c
  5418  010388  0E00               	movlw	0
  5419  01038A  6EE6               	movwf	postinc1,c
  5420  01038C  0E34               	movlw	low STR_13
  5421  01038E  6EE6               	movwf	postinc1,c
  5422  010390  0EFB               	movlw	high STR_13
  5423  010392  6EE6               	movwf	postinc1,c
  5424  010394  0E00               	movlw	0
  5425  010396  6EE6               	movwf	postinc1,c
  5426  010398  0E02               	movlw	2
  5427  01039A  6EE6               	movwf	postinc1,c
  5428  01039C  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5429  0103A0  0060  F0AB  FFE6   	movff	btemp,postinc1
  5430  0103A6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5431  0103AC  0E0C               	movlw	12
  5432  0103AE  6EE6               	movwf	postinc1,c
  5433  0103B0  EC8D  F0F9         	call	_sprintf	;wreg free
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;main.c: 290:     update_lcd(0);
  5437  0103B4  0E00               	movlw	0
  5438  0103B6  6EE6               	movwf	postinc1,c
  5439  0103B8  EC3F  F0F2         	call	_update_lcd	;wreg free
  5440                           
  5441                           ;main.c: 291:     clear_adc_scan();
  5442  0103BC  EC60  F011         	call	_clear_adc_scan	;wreg free
  5443                           
  5444                           ; BSR set to: 1
  5445                           ;main.c: 292:     start_adc_scan();
  5446  0103C0  EC0B  F008         	call	_start_adc_scan	;wreg free
  5447                           
  5448                           ;main.c: 293:     WaitMs(2000);
  5449  0103C4  0ED0               	movlw	208
  5450  0103C6  6EE6               	movwf	postinc1,c
  5451  0103C8  0E07               	movlw	7
  5452  0103CA  6EE6               	movwf	postinc1,c
  5453  0103CC  ECC0  F00C         	call	_WaitMs	;wreg free
  5454                           
  5455                           ;main.c: 296:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  5456                           ;stkvar	_i_ror @ sp[(-17)+16]
  5457  0103D0  0EFF               	movlw	-1
  5458  0103D2  006F FF8C  F035    	movff	plusw1,btemp+11
  5459  0103D8  2A35               	incf	(btemp+11)^0,f,c
  5460  0103DA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5461  0103E0  0635               	decf	(btemp+11)^0,f,c
  5462  0103E2  0E1E               	movlw	30
  5463  0103E4  6035               	cpfslt	(btemp+11)^0,c
  5464  0103E6  D01A               	goto	u16730
  5465  0103E8  EE22  F16B         	lfsr	2,_C+108	;volatile
  5466  0103EC  006F FF7B FFE6     	movff	postinc2,postinc1
  5467  0103F2  006F FF7B FFE6     	movff	postinc2,postinc1
  5468  0103F8  006F FF7B FFE6     	movff	postinc2,postinc1
  5469  0103FE  006F FF7B FFE6     	movff	postinc2,postinc1
  5470  010404  0E42               	movlw	66
  5471  010406  6EE6               	movwf	postinc1,c
  5472  010408  0E60               	movlw	96
  5473  01040A  6EE6               	movwf	postinc1,c
  5474  01040C  0E65               	movlw	101
  5475  01040E  6EE6               	movwf	postinc1,c
  5476  010410  0E3C               	movlw	60
  5477  010412  6EE6               	movwf	postinc1,c
  5478  010414  ECDD  F0F0         	call	___flge	;wreg free
  5479  010418  A02A               	btfss	btemp& (0+255),0,c
  5480  01041A  D773               	goto	l17130
  5481  01041C                     u16730:
  5482                           
  5483                           ;main.c: 298:    static_soc();
  5484  01041C  ECFE  F008         	call	_static_soc	;wreg free
  5485                           
  5486                           ;main.c: 299:    init_bsoc();
  5487  010420  ECE1  F0DF         	call	_init_bsoc	;wreg free
  5488                           
  5489                           ;main.c: 300:    set_load_relay_one(0);
  5490  010424  0E00               	movlw	0
  5491  010426  6EE6               	movwf	postinc1,c
  5492  010428  ECE8  F010         	call	_set_load_relay_one	;wreg free
  5493                           
  5494                           ;main.c: 301:    set_load_relay_two(0);
  5495  01042C  0E00               	movlw	0
  5496  01042E  6EE6               	movwf	postinc1,c
  5497  010430  ECE0  F010         	call	_set_load_relay_two	;wreg free
  5498                           
  5499                           ;main.c: 302:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  5500  010434  EE22  F1B5         	lfsr	2,_C+182	;volatile
  5501  010438  006F FF78  F034    	movff	postinc2,btemp+10
  5502  01043E  006F FF74  F035    	movff	postdec2,btemp+11
  5503  010444  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  5504  01044A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  5505  010450  0E1B               	movlw	low STR_14
  5506  010452  6EE6               	movwf	postinc1,c
  5507  010454  0EFC               	movlw	high STR_14
  5508  010456  6EE6               	movwf	postinc1,c
  5509  010458  0E00               	movlw	0
  5510  01045A  6EE6               	movwf	postinc1,c
  5511  01045C  0E00               	movlw	0
  5512  01045E  6EE6               	movwf	postinc1,c
  5513  010460  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5514  010464  0060  F0AB  FFE6   	movff	btemp,postinc1
  5515  01046A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5516  010470  0E06               	movlw	6
  5517  010472  6EE6               	movwf	postinc1,c
  5518  010474  EC8D  F0F9         	call	_sprintf	;wreg free
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;main.c: 303:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  5522  010478  EE22  F18F         	lfsr	2,_C+144	;volatile
  5523  01047C  006F FF7B FFE6     	movff	postinc2,postinc1
  5524  010482  006F FF7B FFE6     	movff	postinc2,postinc1
  5525  010488  006F FF7B FFE6     	movff	postinc2,postinc1
  5526  01048E  006F FF7B FFE6     	movff	postinc2,postinc1
  5527  010494  0EF7               	movlw	low STR_15
  5528  010496  6EE6               	movwf	postinc1,c
  5529  010498  0EFC               	movlw	high STR_15
  5530  01049A  6EE6               	movwf	postinc1,c
  5531  01049C  0E00               	movlw	0
  5532  01049E  6EE6               	movwf	postinc1,c
  5533  0104A0  0E01               	movlw	1
  5534  0104A2  6EE6               	movwf	postinc1,c
  5535  0104A4  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5536  0104A8  0060  F0AB  FFE6   	movff	btemp,postinc1
  5537  0104AE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5538  0104B4  0E08               	movlw	8
  5539  0104B6  6EE6               	movwf	postinc1,c
  5540  0104B8  EC8D  F0F9         	call	_sprintf	;wreg free
  5541                           
  5542                           ; BSR set to: 0
  5543                           ;main.c: 304:    sprintf(get_vterm_ptr(2, 0), "                     ");
  5544  0104BC  0EEF               	movlw	low STR_16
  5545  0104BE  6EE6               	movwf	postinc1,c
  5546  0104C0  0EFB               	movlw	high STR_16
  5547  0104C2  6EE6               	movwf	postinc1,c
  5548  0104C4  0E00               	movlw	0
  5549  0104C6  6EE6               	movwf	postinc1,c
  5550  0104C8  0E02               	movlw	2
  5551  0104CA  6EE6               	movwf	postinc1,c
  5552  0104CC  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5553  0104D0  0060  F0AB  FFE6   	movff	btemp,postinc1
  5554  0104D6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5555  0104DC  0E04               	movlw	4
  5556  0104DE  6EE6               	movwf	postinc1,c
  5557  0104E0  EC8D  F0F9         	call	_sprintf	;wreg free
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;main.c: 305:    update_lcd(0);
  5561  0104E4  0E00               	movlw	0
  5562  0104E6  6EE6               	movwf	postinc1,c
  5563  0104E8  EC3F  F0F2         	call	_update_lcd	;wreg free
  5564                           
  5565                           ;main.c: 306:    WaitMs(2000);
  5566  0104EC  0ED0               	movlw	208
  5567  0104EE  6EE6               	movwf	postinc1,c
  5568  0104F0  0E07               	movlw	7
  5569  0104F2  6EE6               	movwf	postinc1,c
  5570  0104F4  ECC0  F00C         	call	_WaitMs	;wreg free
  5571                           
  5572                           ;main.c: 307:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  5573  0104F8  0EE3               	movlw	low STR_17
  5574  0104FA  6EE6               	movwf	postinc1,c
  5575  0104FC  0EFD               	movlw	high STR_17
  5576  0104FE  6EE6               	movwf	postinc1,c
  5577  010500  0E00               	movlw	0
  5578  010502  6EE6               	movwf	postinc1,c
  5579  010504  0E00               	movlw	0
  5580  010506  6EE6               	movwf	postinc1,c
  5581  010508  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5582  01050C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5583  010512  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5584  010518  0E04               	movlw	4
  5585  01051A  6EE6               	movwf	postinc1,c
  5586  01051C  EC8D  F0F9         	call	_sprintf	;wreg free
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;main.c: 308:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  5590  010520  0EF8               	movlw	low STR_18
  5591  010522  6EE6               	movwf	postinc1,c
  5592  010524  0EFD               	movlw	high STR_18
  5593  010526  6EE6               	movwf	postinc1,c
  5594  010528  0E00               	movlw	0
  5595  01052A  6EE6               	movwf	postinc1,c
  5596  01052C  0E01               	movlw	1
  5597  01052E  6EE6               	movwf	postinc1,c
  5598  010530  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5599  010534  0060  F0AB  FFE6   	movff	btemp,postinc1
  5600  01053A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5601  010540  0E04               	movlw	4
  5602  010542  6EE6               	movwf	postinc1,c
  5603  010544  EC8D  F0F9         	call	_sprintf	;wreg free
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;main.c: 309:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  5607  010548  0EDF               	movlw	low STR_19
  5608  01054A  6EE6               	movwf	postinc1,c
  5609  01054C  0EFE               	movlw	high STR_19
  5610  01054E  6EE6               	movwf	postinc1,c
  5611  010550  0E00               	movlw	0
  5612  010552  6EE6               	movwf	postinc1,c
  5613  010554  0E02               	movlw	2
  5614  010556  6EE6               	movwf	postinc1,c
  5615  010558  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5616  01055C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5617  010562  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5618  010568  0E04               	movlw	4
  5619  01056A  6EE6               	movwf	postinc1,c
  5620  01056C  EC8D  F0F9         	call	_sprintf	;wreg free
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;main.c: 310:    update_lcd(0);
  5624  010570  0E00               	movlw	0
  5625  010572  6EE6               	movwf	postinc1,c
  5626  010574  EC3F  F0F2         	call	_update_lcd	;wreg free
  5627                           
  5628                           ;main.c: 311:    uint16_t i_esr = 1;
  5629  010578  0E01               	movlw	1
  5630  01057A  6E34               	movwf	(btemp+10)^0,c
  5631  01057C  0E00               	movlw	0
  5632  01057E  6E35               	movwf	(btemp+11)^0,c
  5633                           
  5634                           ;stkvar	_i_esr @ sp[(-17)+8]
  5635  010580  0EF7               	movlw	-9
  5636  010582  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  5637  010588  0EF8               	movlw	-8
  5638  01058A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5639                           
  5640                           ;main.c: 313:    float esr_temp;;main.c: 314:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5641  010590  D06D               	goto	l17190
  5642  010592                     l17178:
  5643                           
  5644                           ;main.c: 315:     WaitMs(110);
  5645  010592  0E6E               	movlw	110
  5646  010594  6EE6               	movwf	postinc1,c
  5647  010596  0E00               	movlw	0
  5648  010598  6EE6               	movwf	postinc1,c
  5649  01059A  ECC0  F00C         	call	_WaitMs	;wreg free
  5650                           
  5651                           ;main.c: 316:     shape = (uint8_t) fabsf(esr_temp);
  5652                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5653  01059E  0EF3               	movlw	-13
  5654  0105A0  006F FF8F FFE6     	movff	plusw1,postinc1
  5655  0105A6  006F FF8F FFE6     	movff	plusw1,postinc1
  5656  0105AC  006F FF8F FFE6     	movff	plusw1,postinc1
  5657  0105B2  006F FF8F FFE6     	movff	plusw1,postinc1
  5658  0105B8  ECB6  F000         	call	_fabsf	;wreg free
  5659  0105BC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5660  0105C2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5661  0105C8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5662  0105CE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5663  0105D4  EC71  F0EF         	call	___fltol	;wreg free
  5664  0105D8  0060  F0A8  F035   	movff	btemp,btemp+11
  5665                           
  5666                           ;stkvar	_shape @ sp[(-17)+10]
  5667  0105DE  0EF9               	movlw	-7
  5668  0105E0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5669                           
  5670                           ;main.c: 317:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  5671  0105E6  0E00               	movlw	0
  5672  0105E8  6EE6               	movwf	postinc1,c
  5673                           
  5674                           ;stkvar	_shape @ sp[(-18)+10]
  5675  0105EA  0EF8               	movlw	-8
  5676  0105EC  50E3               	movf	plusw1,w,c
  5677  0105EE  6EE6               	movwf	postinc1,c
  5678  0105F0  EC6D  F0FC         	call	_spinners	;wreg free
  5679  0105F4  502A               	movf	btemp^0,w,c
  5680  0105F6  6EE6               	movwf	postinc1,c
  5681  0105F8  0E00               	movlw	0
  5682  0105FA  6EE6               	movwf	postinc1,c
  5683  0105FC  0E00               	movlw	0
  5684  0105FE  6EE6               	movwf	postinc1,c
  5685  010600  0E00               	movlw	0
  5686  010602  6EE6               	movwf	postinc1,c
  5687  010604  EC6D  F0FC         	call	_spinners	;wreg free
  5688  010608  502A               	movf	btemp^0,w,c
  5689  01060A  6EE6               	movwf	postinc1,c
  5690  01060C  0E00               	movlw	0
  5691  01060E  6EE6               	movwf	postinc1,c
  5692  010610  0E8B               	movlw	low STR_20
  5693  010612  6EE6               	movwf	postinc1,c
  5694  010614  0EFE               	movlw	high STR_20
  5695  010616  6EE6               	movwf	postinc1,c
  5696  010618  0E00               	movlw	0
  5697  01061A  6EE6               	movwf	postinc1,c
  5698  01061C  0E02               	movlw	2
  5699  01061E  6EE6               	movwf	postinc1,c
  5700  010620  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5701  010624  0060  F0AB  FFE6   	movff	btemp,postinc1
  5702  01062A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5703  010630  0E08               	movlw	8
  5704  010632  6EE6               	movwf	postinc1,c
  5705  010634  EC8D  F0F9         	call	_sprintf	;wreg free
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;main.c: 318:     update_lcd(0);
  5709  010638  0E00               	movlw	0
  5710  01063A  6EE6               	movwf	postinc1,c
  5711  01063C  EC3F  F0F2         	call	_update_lcd	;wreg free
  5712                           
  5713                           ;main.c: 320:     if (i_esr++ > 512)
  5714                           ;stkvar	_i_esr @ sp[(-17)+8]
  5715  010640  50E1               	movf	fsr1l,w,c
  5716  010642  0FF7               	addlw	-9
  5717  010644  6ED9               	movwf	fsr2l,c
  5718  010646  50E2               	movf	fsr1h,w,c
  5719  010648  6EDA               	movwf	fsr2h,c
  5720  01064A  0EFF               	movlw	255
  5721  01064C  22DA               	addwfc	fsr2h,f,c
  5722  01064E  006F FF7C  F034    	movff	indf2,btemp+10
  5723  010654  0E01               	movlw	1
  5724  010656  26DE               	addwf	postinc2,f,c
  5725  010658  006F FF7C  F035    	movff	indf2,btemp+11
  5726  01065E  0E00               	movlw	0
  5727  010660  22DD               	addwfc	postdec2,f,c
  5728  010662  0434               	decf	(btemp+10)^0,w,c
  5729  010664  0E02               	movlw	2
  5730  010666  5835               	subwfb	(btemp+11)^0,w,c
  5731  010668  B0D8               	btfsc	status,0,c
  5732  01066A  D017               	goto	u16750
  5733  01066C                     l17190:
  5734                           
  5735                           ;main.c: 314:    while ((esr_temp = esr_check(0)) < 0.0) {
  5736  01066C  0E00               	movlw	0
  5737  01066E  6EE6               	movwf	postinc1,c
  5738  010670  ECE9  F0D6         	call	_esr_check	;wreg free
  5739                           
  5740                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5741  010674  0EF3               	movlw	-13
  5742  010676  0060  F0AB  FFE3   	movff	btemp,plusw1
  5743  01067C  0EF4               	movlw	-12
  5744  01067E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
  5745  010684  0EF5               	movlw	-11
  5746  010686  0060  F0B3  FFE3   	movff	btemp+2,plusw1
  5747  01068C  0EF6               	movlw	-10
  5748  01068E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
  5749  010694  0EF6               	movlw	-10
  5750  010696  BEE3               	btfsc	plusw1,7,c
  5751  010698  D77C               	goto	l17178
  5752  01069A                     u16750:
  5753                           
  5754                           ;main.c: 323:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  5755  01069A  EE22  F187         	lfsr	2,_C+136	;volatile
  5756  01069E  006F FF7B FFE6     	movff	postinc2,postinc1
  5757  0106A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5758  0106AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5759  0106B0  006F FF7B FFE6     	movff	postinc2,postinc1
  5760  0106B6  0E05               	movlw	low STR_21
  5761  0106B8  6EE6               	movwf	postinc1,c
  5762  0106BA  0EFC               	movlw	high STR_21
  5763  0106BC  6EE6               	movwf	postinc1,c
  5764  0106BE  0E00               	movlw	0
  5765  0106C0  6EE6               	movwf	postinc1,c
  5766  0106C2  0E00               	movlw	0
  5767  0106C4  6EE6               	movwf	postinc1,c
  5768  0106C6  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5769  0106CA  0060  F0AB  FFE6   	movff	btemp,postinc1
  5770  0106D0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5771  0106D6  0E08               	movlw	8
  5772  0106D8  6EE6               	movwf	postinc1,c
  5773  0106DA  EC8D  F0F9         	call	_sprintf	;wreg free
  5774                           
  5775                           ;main.c: 324:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  5776  0106DE  EE22  F229         	lfsr	2,_C+298	;volatile
  5777  0106E2  006F FF7B FFE6     	movff	postinc2,postinc1
  5778  0106E8  006F FF7B FFE6     	movff	postinc2,postinc1
  5779  0106EE  006F FF7B FFE6     	movff	postinc2,postinc1
  5780  0106F4  006F FF7B FFE6     	movff	postinc2,postinc1
  5781  0106FA  EE22  F235         	lfsr	2,_C+310	;volatile
  5782  0106FE  006F FF7B FFE6     	movff	postinc2,postinc1
  5783  010704  006F FF7B FFE6     	movff	postinc2,postinc1
  5784  01070A  006F FF7B FFE6     	movff	postinc2,postinc1
  5785  010710  006F FF7B FFE6     	movff	postinc2,postinc1
  5786  010716  0E00               	movlw	low STR_22
  5787  010718  6EE6               	movwf	postinc1,c
  5788  01071A  0EFB               	movlw	high STR_22
  5789  01071C  6EE6               	movwf	postinc1,c
  5790  01071E  0E00               	movlw	0
  5791  010720  6EE6               	movwf	postinc1,c
  5792  010722  0E01               	movlw	1
  5793  010724  6EE6               	movwf	postinc1,c
  5794  010726  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5795  01072A  0060  F0AB  FFE6   	movff	btemp,postinc1
  5796  010730  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5797  010736  0E0C               	movlw	12
  5798  010738  6EE6               	movwf	postinc1,c
  5799  01073A  EC8D  F0F9         	call	_sprintf	;wreg free
  5800                           
  5801                           ;main.c: 325:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  5802  01073E  EE22  F22D         	lfsr	2,_C+302	;volatile
  5803  010742  006F FF7B FFE6     	movff	postinc2,postinc1
  5804  010748  006F FF7B FFE6     	movff	postinc2,postinc1
  5805  01074E  006F FF7B FFE6     	movff	postinc2,postinc1
  5806  010754  006F FF7B FFE6     	movff	postinc2,postinc1
  5807  01075A  EE22  F239         	lfsr	2,_C+314	;volatile
  5808  01075E  006F FF7B FFE6     	movff	postinc2,postinc1
  5809  010764  006F FF7B FFE6     	movff	postinc2,postinc1
  5810  01076A  006F FF7B FFE6     	movff	postinc2,postinc1
  5811  010770  006F FF7B FFE6     	movff	postinc2,postinc1
  5812  010776  0E1A               	movlw	low STR_23
  5813  010778  6EE6               	movwf	postinc1,c
  5814  01077A  0EFB               	movlw	high STR_23
  5815  01077C  6EE6               	movwf	postinc1,c
  5816  01077E  0E00               	movlw	0
  5817  010780  6EE6               	movwf	postinc1,c
  5818  010782  0E02               	movlw	2
  5819  010784  6EE6               	movwf	postinc1,c
  5820  010786  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  5821  01078A  0060  F0AB  FFE6   	movff	btemp,postinc1
  5822  010790  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5823  010796  0E0C               	movlw	12
  5824  010798  6EE6               	movwf	postinc1,c
  5825  01079A  EC8D  F0F9         	call	_sprintf	;wreg free
  5826                           
  5827                           ;main.c: 326:    update_lcd(0);
  5828  01079E  0E00               	movlw	0
  5829  0107A0  6EE6               	movwf	postinc1,c
  5830  0107A2  EC3F  F0F2         	call	_update_lcd	;wreg free
  5831                           
  5832                           ;main.c: 327:    WaitMs(4000);
  5833  0107A6  0EA0               	movlw	160
  5834  0107A8  6EE6               	movwf	postinc1,c
  5835  0107AA  0E0F               	movlw	15
  5836  0107AC  6EE6               	movwf	postinc1,c
  5837  0107AE  ECC0  F00C         	call	_WaitMs	;wreg free
  5838                           
  5839                           ;main.c: 328:    V.sensor_set = get_switch(SCALIB);
  5840  0107B2  0E04               	movlw	4
  5841  0107B4  6EE6               	movwf	postinc1,c
  5842  0107B6  ECD3  F00D         	call	_get_switch	;wreg free
  5843  0107BA  502A               	movf	btemp^0,w,c
  5844  0107BC  B4D8               	btfsc	status,2,c
  5845  0107BE  D002               	goto	u16760
  5846  0107C0  0E01               	movlw	1
  5847  0107C2  D001               	goto	u16770
  5848  0107C4                     u16760:
  5849  0107C4  0E00               	movlw	0
  5850  0107C6                     u16770:
  5851  0107C6  0102               	movlb	2	; () banked
  5852  0107C8  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  5853                           
  5854                           ; BSR set to: 2
  5855                           ;main.c: 329:    WaitMs(1000);
  5856  0107CA  0EE8               	movlw	232
  5857  0107CC  6EE6               	movwf	postinc1,c
  5858  0107CE  0E03               	movlw	3
  5859  0107D0  6EE6               	movwf	postinc1,c
  5860  0107D2  ECC0  F00C         	call	_WaitMs	;wreg free
  5861                           
  5862                           ;main.c: 330:    if (V.sensor_set && get_switch(SCALIB)) {
  5863  0107D6  0102               	movlb	2	; () banked
  5864  0107D8  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  5865  0107DA  B4D8               	btfsc	status,2,c
  5866  0107DC  D00F               	goto	l17208
  5867                           
  5868                           ; BSR set to: 2
  5869  0107DE  0E04               	movlw	4
  5870  0107E0  6EE6               	movwf	postinc1,c
  5871  0107E2  ECD3  F00D         	call	_get_switch	;wreg free
  5872  0107E6  502A               	movf	btemp^0,w,c
  5873  0107E8  B4D8               	btfsc	status,2,c
  5874  0107EA  D008               	goto	l17208
  5875                           
  5876                           ;main.c: 331:     current_sensor_cal();
  5877  0107EC  ECF9  F0C6         	call	_current_sensor_cal	;wreg free
  5878                           
  5879                           ;main.c: 332:     WaitMs(4000);
  5880  0107F0  0EA0               	movlw	160
  5881  0107F2  6EE6               	movwf	postinc1,c
  5882  0107F4  0E0F               	movlw	15
  5883  0107F6  6EE6               	movwf	postinc1,c
  5884  0107F8  ECC0  F00C         	call	_WaitMs	;wreg free
  5885  0107FC                     l17208:
  5886                           
  5887                           ;main.c: 334:    V.sensor_set = 0;
  5888  0107FC  0102               	movlb	2	; () banked
  5889  0107FE  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  5890                           
  5891                           ; BSR set to: 2
  5892                           ;main.c: 335:    V.system_stable = 1;
  5893  010800  0E01               	movlw	1
  5894  010802  6FAC               	movwf	(_V+172)& (0+255),b	;volatile
  5895                           
  5896                           ;main.c: 336:    break;
  5897  010804  D01C               	goto	l17216
  5898  010806                     l1468:
  5899                           
  5900                           ; BSR set to: 2
  5901                           ;main.c: 342:    P.SYSTEM_STABLE = 1;
  5902  010806  0100               	movlb	0	; () banked
  5903  010808  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  5904                           
  5905                           ;main.c: 343:    break;
  5906  01080A  D019               	goto	l17216
  5907  01080C                     l1470:
  5908                           
  5909                           ; BSR set to: 2
  5910                           ;main.c: 346:    V.ui_state = UI_STATE_INIT;
  5911  01080C  6B00               	clrf	_V& (0+255),b	;volatile
  5912                           
  5913                           ;main.c: 347:    break;
  5914  01080E  D017               	goto	l17216
  5915  010810                     l17214:
  5916  010810  0102               	movlb	2	; () banked
  5917  010812  5100               	movf	_V& (0+255),w,b	;volatile
  5918  010814  6E34               	movwf	(btemp+10)^0,c
  5919  010816  6A35               	clrf	(btemp+11)^0,c
  5920                           
  5921                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5922                           ; Switch size 1, requested type "simple"
  5923                           ; Number of cases is 1, Range of values is 0 to 0
  5924                           ; switch strategies available:
  5925                           ; Name         Instructions Cycles
  5926                           ; simple_byte            4     3 (average)
  5927                           ;	Chosen strategy is simple_byte
  5928  010818  5035               	movf	(btemp+11)^0,w,c
  5929  01081A  0A00               	xorlw	0	; case 0
  5930  01081C  A4D8               	btfss	status,2,c
  5931  01081E  D7F6               	goto	l1470
  5932                           
  5933                           ; BSR set to: 2
  5934                           ; Switch size 1, requested type "simple"
  5935                           ; Number of cases is 5, Range of values is 0 to 5
  5936                           ; switch strategies available:
  5937                           ; Name         Instructions Cycles
  5938                           ; simple_byte           16     9 (average)
  5939                           ;	Chosen strategy is simple_byte
  5940  010820  5034               	movf	(btemp+10)^0,w,c
  5941  010822  0A00               	xorlw	0	; case 0
  5942  010824  B4D8               	btfsc	status,2,c
  5943  010826  D428               	goto	l17062
  5944  010828  0A01               	xorlw	1	; case 1
  5945  01082A  B4D8               	btfsc	status,2,c
  5946  01082C  D008               	goto	l17216
  5947  01082E  0A02               	xorlw	2	; case 3
  5948  010830  B4D8               	btfsc	status,2,c
  5949  010832  D005               	goto	l17216
  5950  010834  0A07               	xorlw	7	; case 4
  5951  010836  B4D8               	btfsc	status,2,c
  5952  010838  D7E6               	goto	l1468
  5953  01083A  0A01               	xorlw	1	; case 5
  5954  01083C  D7E7               	goto	l1470
  5955  01083E                     l17216:
  5956                           
  5957                           ;main.c: 350:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  5958  01083E  0E01               	movlw	1
  5959  010840  6EE6               	movwf	postinc1,c
  5960  010842  EC3F  F00E         	call	_TimerDone	;wreg free
  5961  010846  502A               	movf	btemp^0,w,c
  5962  010848  B4D8               	btfsc	status,2,c
  5963  01084A  D013               	goto	l17228
  5964  01084C  EC49  F011         	call	_check_adc_scan	;wreg free
  5965  010850  502A               	movf	btemp^0,w,c
  5966  010852  B4D8               	btfsc	status,2,c
  5967  010854  D00E               	goto	l17228
  5968                           
  5969                           ;main.c: 354:    convert_adc_data();
  5970  010856  EC39  F0FF         	call	_convert_adc_data	;wreg free
  5971                           
  5972                           ;main.c: 358:    clear_adc_scan();
  5973  01085A  EC60  F011         	call	_clear_adc_scan	;wreg free
  5974                           
  5975                           ; BSR set to: 1
  5976                           ;main.c: 359:    start_adc_scan();
  5977  01085E  EC0B  F008         	call	_start_adc_scan	;wreg free
  5978                           
  5979                           ;main.c: 360:    StartTimer(TMR_ADC, 200);
  5980  010862  0EC8               	movlw	200
  5981  010864  6EE6               	movwf	postinc1,c
  5982  010866  0E00               	movlw	0
  5983  010868  6EE6               	movwf	postinc1,c
  5984  01086A  0E01               	movlw	1
  5985  01086C  6EE6               	movwf	postinc1,c
  5986  01086E  ECCE  F00B         	call	_StartTimer	;wreg free
  5987  010872                     l17228:
  5988                           
  5989                           ;main.c: 363:   if (TimerDone(TMR_DISPLAY)) {
  5990  010872  0E0A               	movlw	10
  5991  010874  6EE6               	movwf	postinc1,c
  5992  010876  EC3F  F00E         	call	_TimerDone	;wreg free
  5993  01087A  502A               	movf	btemp^0,w,c
  5994  01087C  B4D8               	btfsc	status,2,c
  5995  01087E  EF95  F089         	goto	l17332
  5996                           
  5997                           ;main.c: 364:    if (TimerDone(TMR_HELPDIS)) {
  5998  010882  0E09               	movlw	9
  5999  010884  6EE6               	movwf	postinc1,c
  6000  010886  EC3F  F00E         	call	_TimerDone	;wreg free
  6001  01088A  502A               	movf	btemp^0,w,c
  6002  01088C  B4D8               	btfsc	status,2,c
  6003  01088E  D004               	goto	l17234
  6004                           
  6005                           ;main.c: 365:     set_display_info(DIS_STR);
  6006  010890  0E00               	movlw	0
  6007  010892  6EE6               	movwf	postinc1,c
  6008  010894  EC55  F010         	call	_set_display_info	;wreg free
  6009  010898                     l17234:
  6010                           
  6011                           ;main.c: 367:    calc_model_data();
  6012  010898  EC33  F0C9         	call	_calc_model_data	;wreg free
  6013                           
  6014                           ; BSR set to: 57
  6015                           ;main.c: 368:    if (C.dupdate) {
  6016  01089C  EE22  F23E         	lfsr	2,_C+319	;volatile
  6017  0108A0  50DF               	movf	indf2,w,c
  6018  0108A2  B4D8               	btfsc	status,2,c
  6019  0108A4  D0A2               	goto	l17258
  6020                           
  6021                           ; BSR set to: 57
  6022                           ;main.c: 369:     C.dupdate = 0;
  6023  0108A6  0E00               	movlw	0
  6024  0108A8  006F FFA0  FA3E    	movff	wreg,_C+319	;volatile
  6025                           
  6026                           ; BSR set to: 57
  6027                           ;main.c: 370:     load_hist_data();
  6028  0108AE  EC7F  F010         	call	_load_hist_data	;wreg free
  6029                           
  6030                           ; BSR set to: 57
  6031                           ;main.c: 371:     update_hist_data(0, &C.hist[0]);
  6032  0108B2  0EB8               	movlw	low (_C+185)
  6033  0108B4  6EE6               	movwf	postinc1,c
  6034  0108B6  0E09               	movlw	high (_C+185)
  6035  0108B8  6EE6               	movwf	postinc1,c
  6036  0108BA  0E00               	movlw	0
  6037  0108BC  6EE6               	movwf	postinc1,c
  6038  0108BE  EC68  F006         	call	_update_hist_data	;wreg free
  6039                           
  6040                           ;main.c: 372:     write_cal_data();
  6041  0108C2  EC9C  F0F3         	call	_write_cal_data	;wreg free
  6042                           
  6043                           ;main.c: 373:     sprintf(get_vterm_ptr(0, 0), "History Data  Saved ");
  6044  0108C6  0E33               	movlw	low STR_24
  6045  0108C8  6EE6               	movwf	postinc1,c
  6046  0108CA  0EFF               	movlw	high STR_24
  6047  0108CC  6EE6               	movwf	postinc1,c
  6048  0108CE  0E00               	movlw	0
  6049  0108D0  6EE6               	movwf	postinc1,c
  6050  0108D2  0E00               	movlw	0
  6051  0108D4  6EE6               	movwf	postinc1,c
  6052  0108D6  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6053  0108DA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6054  0108E0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6055  0108E6  0E04               	movlw	4
  6056  0108E8  6EE6               	movwf	postinc1,c
  6057  0108EA  EC8D  F0F9         	call	_sprintf	;wreg free
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;main.c: 374:     sprintf(get_vterm_ptr(1, 0), "To EEPROM           ");
  6061  0108EE  0ECE               	movlw	low STR_25
  6062  0108F0  6EE6               	movwf	postinc1,c
  6063  0108F2  0EFD               	movlw	high STR_25
  6064  0108F4  6EE6               	movwf	postinc1,c
  6065  0108F6  0E00               	movlw	0
  6066  0108F8  6EE6               	movwf	postinc1,c
  6067  0108FA  0E01               	movlw	1
  6068  0108FC  6EE6               	movwf	postinc1,c
  6069  0108FE  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6070  010902  0060  F0AB  FFE6   	movff	btemp,postinc1
  6071  010908  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6072  01090E  0E04               	movlw	4
  6073  010910  6EE6               	movwf	postinc1,c
  6074  010912  EC8D  F0F9         	call	_sprintf	;wreg free
  6075                           
  6076                           ; BSR set to: 0
  6077                           ;main.c: 375:     sprintf(get_vterm_ptr(2, 0), " Time %lu, %lu      ", time(((void*)0)),
      +                           C.hist[0].updates);
  6078  010916  EE22  F1E9         	lfsr	2,_C+234	;volatile
  6079  01091A  006F FF7B FFE6     	movff	postinc2,postinc1
  6080  010920  006F FF7B FFE6     	movff	postinc2,postinc1
  6081  010926  006F FF7B FFE6     	movff	postinc2,postinc1
  6082  01092C  006F FF7B FFE6     	movff	postinc2,postinc1
  6083  010932  0E00               	movlw	0
  6084  010934  6EE6               	movwf	postinc1,c
  6085  010936  0E00               	movlw	0
  6086  010938  6EE6               	movwf	postinc1,c
  6087  01093A  ECCF  F008         	call	_time	;wreg free
  6088  01093E  52E5               	movf	postdec1,f,c
  6089  010940  006F FF9C  F041    	movff	indf1,btemp+23
  6090  010946  52E5               	movf	postdec1,f,c
  6091  010948  006F FF9C  F040    	movff	indf1,btemp+22
  6092  01094E  52E5               	movf	postdec1,f,c
  6093  010950  006F FF9C  F03F    	movff	indf1,btemp+21
  6094  010956  52E5               	movf	postdec1,f,c
  6095  010958  006F FF9C  F03E    	movff	indf1,btemp+20
  6096  01095E  52E5               	movf	postdec1,f,c
  6097  010960  006F FF9C  F03D    	movff	indf1,btemp+19
  6098  010966  52E5               	movf	postdec1,f,c
  6099  010968  006F FF9C  F03C    	movff	indf1,btemp+18
  6100  01096E  52E5               	movf	postdec1,f,c
  6101  010970  006F FF9C  F03B    	movff	indf1,btemp+17
  6102  010976  52E5               	movf	postdec1,f,c
  6103  010978  006F FF9C  F03A    	movff	indf1,btemp+16
  6104  01097E  0060  F0EB  FFE6   	movff	btemp+16,postinc1
  6105  010984  0060  F0EF  FFE6   	movff	btemp+17,postinc1
  6106  01098A  0060  F0F3  FFE6   	movff	btemp+18,postinc1
  6107  010990  0060  F0F7  FFE6   	movff	btemp+19,postinc1
  6108  010996  0060  F0FB  FFE6   	movff	btemp+20,postinc1
  6109  01099C  0060  F0FF  FFE6   	movff	btemp+21,postinc1
  6110  0109A2  0060  F103  FFE6   	movff	btemp+22,postinc1
  6111  0109A8  0060  F107  FFE6   	movff	btemp+23,postinc1
  6112  0109AE  0EA0               	movlw	low STR_26
  6113  0109B0  6EE6               	movwf	postinc1,c
  6114  0109B2  0EFE               	movlw	high STR_26
  6115  0109B4  6EE6               	movwf	postinc1,c
  6116  0109B6  0E00               	movlw	0
  6117  0109B8  6EE6               	movwf	postinc1,c
  6118  0109BA  0E02               	movlw	2
  6119  0109BC  6EE6               	movwf	postinc1,c
  6120  0109BE  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6121  0109C2  0060  F0AB  FFE6   	movff	btemp,postinc1
  6122  0109C8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6123  0109CE  0E10               	movlw	16
  6124  0109D0  6EE6               	movwf	postinc1,c
  6125  0109D2  EC8D  F0F9         	call	_sprintf	;wreg free
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;main.c: 376:     update_lcd(0);
  6129  0109D6  0E00               	movlw	0
  6130  0109D8  6EE6               	movwf	postinc1,c
  6131  0109DA  EC3F  F0F2         	call	_update_lcd	;wreg free
  6132                           
  6133                           ;main.c: 377:     WaitMs(2000);
  6134  0109DE  0ED0               	movlw	208
  6135  0109E0  6EE6               	movwf	postinc1,c
  6136  0109E2  0E07               	movlw	7
  6137  0109E4  6EE6               	movwf	postinc1,c
  6138  0109E6  ECC0  F00C         	call	_WaitMs	;wreg free
  6139  0109EA                     l17258:
  6140                           
  6141                           ;main.c: 385:     hid_display(&H);
  6142  0109EA  0EB2               	movlw	low _H
  6143  0109EC  6EE6               	movwf	postinc1,c
  6144  0109EE  0E01               	movlw	high _H
  6145  0109F0  6EE6               	movwf	postinc1,c
  6146  0109F2  EC4C  F0E4         	call	_hid_display	;wreg free
  6147                           
  6148                           ;main.c: 386:     switch (H.hid_display) {
  6149  0109F6  EF26  F089         	goto	l17302
  6150  0109FA                     l1478:
  6151                           
  6152                           ; BSR set to: 1
  6153                           ;main.c: 388:      V.calib = 0;
  6154  0109FA  0102               	movlb	2	; () banked
  6155  0109FC  6BA9               	clrf	(_V+169)& (0+255),b	;volatile
  6156                           
  6157                           ; BSR set to: 2
  6158                           ;main.c: 389:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  6159  0109FE  EE22  F23D         	lfsr	2,_C+318	;volatile
  6160  010A02  50DF               	movf	indf2,w,c
  6161  010A04  A4D8               	btfss	status,2,c
  6162  010A06  D002               	goto	l17264
  6163                           
  6164                           ; BSR set to: 2
  6165  010A08  0E20               	movlw	32
  6166  010A0A  D001               	goto	L1
  6167  010A0C                     l17264:
  6168                           
  6169                           ; BSR set to: 2
  6170  010A0C  0E44               	movlw	68
  6171  010A0E                     L1:
  6172  010A0E  6E34               	movwf	(btemp+10)^0,c
  6173  010A10  0E00               	movlw	0
  6174  010A12  6E35               	movwf	(btemp+11)^0,c
  6175                           
  6176                           ;stkvar	_main$4020 @ sp[(-17)+2]
  6177  010A14  0EF1               	movlw	-15
  6178  010A16  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6179  010A1C  0EF2               	movlw	-14
  6180  010A1E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6181                           
  6182                           ; BSR set to: 2
  6183  010A24  EE22  F17B         	lfsr	2,_C+124	;volatile
  6184  010A28  006F FF7B FFE6     	movff	postinc2,postinc1
  6185  010A2E  006F FF7B FFE6     	movff	postinc2,postinc1
  6186  010A34  006F FF7B FFE6     	movff	postinc2,postinc1
  6187  010A3A  006F FF7B FFE6     	movff	postinc2,postinc1
  6188                           
  6189                           ;stkvar	_main$4020 @ sp[(-21)+2]
  6190  010A40  0EED               	movlw	-19
  6191  010A42  006F FF8F FFE6     	movff	plusw1,postinc1
  6192  010A48  006F FF8F FFE6     	movff	plusw1,postinc1
  6193  010A4E  0EE1               	movlw	low STR_30
  6194  010A50  6EE6               	movwf	postinc1,c
  6195  010A52  0EFC               	movlw	high STR_30
  6196  010A54  6EE6               	movwf	postinc1,c
  6197  010A56  0E00               	movlw	0
  6198  010A58  6EE6               	movwf	postinc1,c
  6199  010A5A  0E00               	movlw	0
  6200  010A5C  6EE6               	movwf	postinc1,c
  6201  010A5E  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6202  010A62  0060  F0AB  FFE6   	movff	btemp,postinc1
  6203  010A68  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6204  010A6E  0E0A               	movlw	10
  6205  010A70  6EE6               	movwf	postinc1,c
  6206  010A72  EC8D  F0F9         	call	_sprintf	;wreg free
  6207                           
  6208                           ; BSR set to: 0
  6209                           ;main.c: 390:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  6210  010A76  EE22  F173         	lfsr	2,_C+116	;volatile
  6211  010A7A  006F FF7B FFE6     	movff	postinc2,postinc1
  6212  010A80  006F FF7B FFE6     	movff	postinc2,postinc1
  6213  010A86  006F FF7B FFE6     	movff	postinc2,postinc1
  6214  010A8C  006F FF7B FFE6     	movff	postinc2,postinc1
  6215  010A92  0ECB               	movlw	low STR_31
  6216  010A94  6EE6               	movwf	postinc1,c
  6217  010A96  0EFC               	movlw	high STR_31
  6218  010A98  6EE6               	movwf	postinc1,c
  6219  010A9A  0E00               	movlw	0
  6220  010A9C  6EE6               	movwf	postinc1,c
  6221  010A9E  0E01               	movlw	1
  6222  010AA0  6EE6               	movwf	postinc1,c
  6223  010AA2  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6224  010AA6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6225  010AAC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6226  010AB2  0E08               	movlw	8
  6227  010AB4  6EE6               	movwf	postinc1,c
  6228  010AB6  EC8D  F0F9         	call	_sprintf	;wreg free
  6229                           
  6230                           ; BSR set to: 0
  6231                           ;main.c: 391:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  6232  010ABA  EE22  F177         	lfsr	2,_C+120	;volatile
  6233  010ABE  006F FF7B FFE6     	movff	postinc2,postinc1
  6234  010AC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6235  010ACA  006F FF7B FFE6     	movff	postinc2,postinc1
  6236  010AD0  006F FF7B FFE6     	movff	postinc2,postinc1
  6237  010AD6  0EB5               	movlw	low STR_32
  6238  010AD8  6EE6               	movwf	postinc1,c
  6239  010ADA  0EFC               	movlw	high STR_32
  6240  010ADC  6EE6               	movwf	postinc1,c
  6241  010ADE  0E00               	movlw	0
  6242  010AE0  6EE6               	movwf	postinc1,c
  6243  010AE2  0E02               	movlw	2
  6244  010AE4  6EE6               	movwf	postinc1,c
  6245  010AE6  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6246  010AEA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6247  010AF0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6248  010AF6  0E08               	movlw	8
  6249  010AF8  6EE6               	movwf	postinc1,c
  6250  010AFA  EC8D  F0F9         	call	_sprintf	;wreg free
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;main.c: 393:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  6254  010AFE  EE22  F23D         	lfsr	2,_C+318	;volatile
  6255  010B02  50DF               	movf	indf2,w,c
  6256  010B04  A4D8               	btfss	status,2,c
  6257  010B06  D002               	goto	l17276
  6258                           
  6259                           ; BSR set to: 0
  6260  010B08  0E20               	movlw	32
  6261  010B0A  D001               	goto	L2
  6262  010B0C                     l17276:
  6263                           
  6264                           ; BSR set to: 0
  6265  010B0C  0E44               	movlw	68
  6266  010B0E                     L2:
  6267  010B0E  6E34               	movwf	(btemp+10)^0,c
  6268  010B10  0E00               	movlw	0
  6269  010B12  6E35               	movwf	(btemp+11)^0,c
  6270                           
  6271                           ;stkvar	_main$4024 @ sp[(-17)+0]
  6272  010B14  0EEF               	movlw	-17
  6273  010B16  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6274  010B1C  0EF0               	movlw	-16
  6275  010B1E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6276                           
  6277                           ; BSR set to: 0
  6278  010B24  EE22  F1A7         	lfsr	2,_C+168	;volatile
  6279  010B28  006F FF7B FFE6     	movff	postinc2,postinc1
  6280  010B2E  006F FF7B FFE6     	movff	postinc2,postinc1
  6281  010B34  006F FF7B FFE6     	movff	postinc2,postinc1
  6282  010B3A  006F FF7B FFE6     	movff	postinc2,postinc1
  6283                           
  6284                           ;stkvar	_main$4024 @ sp[(-21)+0]
  6285  010B40  0EEB               	movlw	-21
  6286  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
  6287  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
  6288  010B4E  0E9F               	movlw	low STR_33
  6289  010B50  6EE6               	movwf	postinc1,c
  6290  010B52  0EFC               	movlw	high STR_33
  6291  010B54  6EE6               	movwf	postinc1,c
  6292  010B56  0E01               	movlw	1
  6293  010B58  6EE6               	movwf	postinc1,c
  6294  010B5A  0E00               	movlw	0
  6295  010B5C  6EE6               	movwf	postinc1,c
  6296  010B5E  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6297  010B62  0060  F0AB  FFE6   	movff	btemp,postinc1
  6298  010B68  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6299  010B6E  0E0A               	movlw	10
  6300  010B70  6EE6               	movwf	postinc1,c
  6301  010B72  EC8D  F0F9         	call	_sprintf	;wreg free
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;main.c: 394:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  6305  010B76  EE22  F1AF         	lfsr	2,_C+176	;volatile
  6306  010B7A  006F FF7B FFE6     	movff	postinc2,postinc1
  6307  010B80  006F FF7B FFE6     	movff	postinc2,postinc1
  6308  010B86  006F FF7B FFE6     	movff	postinc2,postinc1
  6309  010B8C  006F FF7B FFE6     	movff	postinc2,postinc1
  6310  010B92  0E89               	movlw	low STR_34
  6311  010B94  6EE6               	movwf	postinc1,c
  6312  010B96  0EFC               	movlw	high STR_34
  6313  010B98  6EE6               	movwf	postinc1,c
  6314  010B9A  0E01               	movlw	1
  6315  010B9C  6EE6               	movwf	postinc1,c
  6316  010B9E  0E01               	movlw	1
  6317  010BA0  6EE6               	movwf	postinc1,c
  6318  010BA2  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6319  010BA6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6320  010BAC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6321  010BB2  0E08               	movlw	8
  6322  010BB4  6EE6               	movwf	postinc1,c
  6323  010BB6  EC8D  F0F9         	call	_sprintf	;wreg free
  6324                           
  6325                           ; BSR set to: 0
  6326                           ;main.c: 395:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  6327  010BBA  EE22  F1AB         	lfsr	2,_C+172	;volatile
  6328  010BBE  006F FF7B FFE6     	movff	postinc2,postinc1
  6329  010BC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6330  010BCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6331  010BD0  006F FF7B FFE6     	movff	postinc2,postinc1
  6332  010BD6  0E73               	movlw	low STR_35
  6333  010BD8  6EE6               	movwf	postinc1,c
  6334  010BDA  0EFC               	movlw	high STR_35
  6335  010BDC  6EE6               	movwf	postinc1,c
  6336  010BDE  0E01               	movlw	1
  6337  010BE0  6EE6               	movwf	postinc1,c
  6338  010BE2  0E02               	movlw	2
  6339  010BE4  6EE6               	movwf	postinc1,c
  6340  010BE6  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6341  010BEA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6342  010BF0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6343  010BF6  0E08               	movlw	8
  6344  010BF8  6EE6               	movwf	postinc1,c
  6345  010BFA  EC8D  F0F9         	call	_sprintf	;wreg free
  6346                           
  6347                           ;main.c: 396:      break;
  6348  010BFE  D33C               	goto	l17304
  6349  010C00                     l1488:
  6350                           
  6351                           ; BSR set to: 1
  6352                           ;main.c: 398:      V.calib = 0;
  6353  010C00  0102               	movlb	2	; () banked
  6354  010C02  6BA9               	clrf	(_V+169)& (0+255),b	;volatile
  6355                           
  6356                           ; BSR set to: 2
  6357                           ;main.c: 399:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  6358  010C04  EE22  F103         	lfsr	2,_C+4	;volatile
  6359  010C08  006F FF7B FFE6     	movff	postinc2,postinc1
  6360  010C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  6361  010C14  006F FF7B FFE6     	movff	postinc2,postinc1
  6362  010C1A  006F FF7B FFE6     	movff	postinc2,postinc1
  6363  010C20  EE22  F113         	lfsr	2,_C+20	;volatile
  6364  010C24  006F FF7B FFE6     	movff	postinc2,postinc1
  6365  010C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  6366  010C30  006F FF7B FFE6     	movff	postinc2,postinc1
  6367  010C36  006F FF7B FFE6     	movff	postinc2,postinc1
  6368  010C3C  0E39               	movlw	low STR_36
  6369  010C3E  6EE6               	movwf	postinc1,c
  6370  010C40  0EFD               	movlw	high STR_36
  6371  010C42  6EE6               	movwf	postinc1,c
  6372  010C44  0E00               	movlw	0
  6373  010C46  6EE6               	movwf	postinc1,c
  6374  010C48  0E00               	movlw	0
  6375  010C4A  6EE6               	movwf	postinc1,c
  6376  010C4C  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6377  010C50  0060  F0AB  FFE6   	movff	btemp,postinc1
  6378  010C56  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6379  010C5C  0E0C               	movlw	12
  6380  010C5E  6EE6               	movwf	postinc1,c
  6381  010C60  EC8D  F0F9         	call	_sprintf	;wreg free
  6382                           
  6383                           ;main.c: 400:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  6384  010C64  EE22  F0FF         	lfsr	2,_C
  6385  010C68  006F FF7B FFE6     	movff	postinc2,postinc1
  6386  010C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  6387  010C74  006F FF7B FFE6     	movff	postinc2,postinc1
  6388  010C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  6389  010C80  EE22  F10F         	lfsr	2,_C+16	;volatile
  6390  010C84  006F FF7B FFE6     	movff	postinc2,postinc1
  6391  010C8A  006F FF7B FFE6     	movff	postinc2,postinc1
  6392  010C90  006F FF7B FFE6     	movff	postinc2,postinc1
  6393  010C96  006F FF7B FFE6     	movff	postinc2,postinc1
  6394  010C9C  0E0D               	movlw	low STR_37
  6395  010C9E  6EE6               	movwf	postinc1,c
  6396  010CA0  0EFD               	movlw	high STR_37
  6397  010CA2  6EE6               	movwf	postinc1,c
  6398  010CA4  0E00               	movlw	0
  6399  010CA6  6EE6               	movwf	postinc1,c
  6400  010CA8  0E01               	movlw	1
  6401  010CAA  6EE6               	movwf	postinc1,c
  6402  010CAC  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6403  010CB0  0060  F0AB  FFE6   	movff	btemp,postinc1
  6404  010CB6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6405  010CBC  0E0C               	movlw	12
  6406  010CBE  6EE6               	movwf	postinc1,c
  6407  010CC0  EC8D  F0F9         	call	_sprintf	;wreg free
  6408                           
  6409                           ;main.c: 401:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  6410  010CC4  EE22  F13F         	lfsr	2,_C+64	;volatile
  6411  010CC8  006F FF7B FFE6     	movff	postinc2,postinc1
  6412  010CCE  006F FF7B FFE6     	movff	postinc2,postinc1
  6413  010CD4  006F FF7B FFE6     	movff	postinc2,postinc1
  6414  010CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  6415  010CE0  EE22  F107         	lfsr	2,_C+8	;volatile
  6416  010CE4  006F FF7B FFE6     	movff	postinc2,postinc1
  6417  010CEA  006F FF7B FFE6     	movff	postinc2,postinc1
  6418  010CF0  006F FF7B FFE6     	movff	postinc2,postinc1
  6419  010CF6  006F FF7B FFE6     	movff	postinc2,postinc1
  6420  010CFC  0E23               	movlw	low STR_38
  6421  010CFE  6EE6               	movwf	postinc1,c
  6422  010D00  0EFD               	movlw	high STR_38
  6423  010D02  6EE6               	movwf	postinc1,c
  6424  010D04  0E00               	movlw	0
  6425  010D06  6EE6               	movwf	postinc1,c
  6426  010D08  0E02               	movlw	2
  6427  010D0A  6EE6               	movwf	postinc1,c
  6428  010D0C  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6429  010D10  0060  F0AB  FFE6   	movff	btemp,postinc1
  6430  010D16  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6431  010D1C  0E0C               	movlw	12
  6432  010D1E  6EE6               	movwf	postinc1,c
  6433  010D20  EC8D  F0F9         	call	_sprintf	;wreg free
  6434                           
  6435                           ;main.c: 403:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  6436  010D24  EE22  F19F         	lfsr	2,_C+160	;volatile
  6437  010D28  006F FF7B FFE6     	movff	postinc2,postinc1
  6438  010D2E  006F FF7B FFE6     	movff	postinc2,postinc1
  6439  010D34  006F FF7B FFE6     	movff	postinc2,postinc1
  6440  010D3A  006F FF7B FFE6     	movff	postinc2,postinc1
  6441  010D40  0E31               	movlw	low STR_39
  6442  010D42  6EE6               	movwf	postinc1,c
  6443  010D44  0EFC               	movlw	high STR_39
  6444  010D46  6EE6               	movwf	postinc1,c
  6445  010D48  0E01               	movlw	1
  6446  010D4A  6EE6               	movwf	postinc1,c
  6447  010D4C  0E00               	movlw	0
  6448  010D4E  6EE6               	movwf	postinc1,c
  6449  010D50  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6450  010D54  0060  F0AB  FFE6   	movff	btemp,postinc1
  6451  010D5A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6452  010D60  0E08               	movlw	8
  6453  010D62  6EE6               	movwf	postinc1,c
  6454  010D64  EC8D  F0F9         	call	_sprintf	;wreg free
  6455                           
  6456                           ;main.c: 404:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  6457  010D68  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6458  010D6C  006F FF7B FFE6     	movff	postinc2,postinc1
  6459  010D72  006F FF7B FFE6     	movff	postinc2,postinc1
  6460  010D78  006F FF7B FFE6     	movff	postinc2,postinc1
  6461  010D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  6462  010D84  0E47               	movlw	low STR_40
  6463  010D86  6EE6               	movwf	postinc1,c
  6464  010D88  0EFC               	movlw	high STR_40
  6465  010D8A  6EE6               	movwf	postinc1,c
  6466  010D8C  0E01               	movlw	1
  6467  010D8E  6EE6               	movwf	postinc1,c
  6468  010D90  0E01               	movlw	1
  6469  010D92  6EE6               	movwf	postinc1,c
  6470  010D94  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6471  010D98  0060  F0AB  FFE6   	movff	btemp,postinc1
  6472  010D9E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6473  010DA4  0E08               	movlw	8
  6474  010DA6  6EE6               	movwf	postinc1,c
  6475  010DA8  EC8D  F0F9         	call	_sprintf	;wreg free
  6476                           
  6477                           ;main.c: 405:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  6478  010DAC  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6479  010DB0  006F FF7B FFE6     	movff	postinc2,postinc1
  6480  010DB6  006F FF7B FFE6     	movff	postinc2,postinc1
  6481  010DBC  006F FF7B FFE6     	movff	postinc2,postinc1
  6482  010DC2  006F FF7B FFE6     	movff	postinc2,postinc1
  6483  010DC8  EE22  F19F         	lfsr	2,_C+160	;volatile
  6484  010DCC  006F FF7B FFE6     	movff	postinc2,postinc1
  6485  010DD2  006F FF7B FFE6     	movff	postinc2,postinc1
  6486  010DD8  006F FF7B FFE6     	movff	postinc2,postinc1
  6487  010DDE  006F FF7B FFE6     	movff	postinc2,postinc1
  6488  010DE4  ECD7  F0B5         	call	___fladd	;wreg free
  6489  010DE8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6490  010DEE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6491  010DF4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  6492  010DFA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  6493  010E00  0E5D               	movlw	low STR_41
  6494  010E02  6EE6               	movwf	postinc1,c
  6495  010E04  0EFC               	movlw	high STR_41
  6496  010E06  6EE6               	movwf	postinc1,c
  6497  010E08  0E01               	movlw	1
  6498  010E0A  6EE6               	movwf	postinc1,c
  6499  010E0C  0E02               	movlw	2
  6500  010E0E  6EE6               	movwf	postinc1,c
  6501  010E10  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6502  010E14  0060  F0AB  FFE6   	movff	btemp,postinc1
  6503  010E1A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6504  010E20  0E08               	movlw	8
  6505  010E22  6EE6               	movwf	postinc1,c
  6506  010E24  EC8D  F0F9         	call	_sprintf	;wreg free
  6507                           
  6508                           ;main.c: 406:      break;
  6509  010E28  D227               	goto	l17304
  6510  010E2A                     l1489:
  6511                           
  6512                           ; BSR set to: 1
  6513                           ;main.c: 408:      V.calib = 0;
  6514  010E2A  0102               	movlb	2	; () banked
  6515  010E2C  6BA9               	clrf	(_V+169)& (0+255),b	;volatile
  6516                           
  6517                           ; BSR set to: 2
  6518                           ;main.c: 409:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  6519  010E2E  EE22  F17F         	lfsr	2,_C+128	;volatile
  6520  010E32  006F FF7B FFE6     	movff	postinc2,postinc1
  6521  010E38  006F FF7B FFE6     	movff	postinc2,postinc1
  6522  010E3E  006F FF7B FFE6     	movff	postinc2,postinc1
  6523  010E44  006F FF7B FFE6     	movff	postinc2,postinc1
  6524  010E4A  0E7D               	movlw	low STR_42
  6525  010E4C  6EE6               	movwf	postinc1,c
  6526  010E4E  0EFB               	movlw	high STR_42
  6527  010E50  6EE6               	movwf	postinc1,c
  6528  010E52  0E00               	movlw	0
  6529  010E54  6EE6               	movwf	postinc1,c
  6530  010E56  0E00               	movlw	0
  6531  010E58  6EE6               	movwf	postinc1,c
  6532  010E5A  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6533  010E5E  0060  F0AB  FFE6   	movff	btemp,postinc1
  6534  010E64  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6535  010E6A  0E08               	movlw	8
  6536  010E6C  6EE6               	movwf	postinc1,c
  6537  010E6E  EC8D  F0F9         	call	_sprintf	;wreg free
  6538                           
  6539                           ;main.c: 410:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  6540  010E72  EE22  F193         	lfsr	2,_C+148	;volatile
  6541  010E76  006F FF7B FFE6     	movff	postinc2,postinc1
  6542  010E7C  006F FF7B FFE6     	movff	postinc2,postinc1
  6543  010E82  006F FF7B FFE6     	movff	postinc2,postinc1
  6544  010E88  006F FF7B FFE6     	movff	postinc2,postinc1
  6545  010E8E  EE22  F18F         	lfsr	2,_C+144	;volatile
  6546  010E92  006F FF7B FFE6     	movff	postinc2,postinc1
  6547  010E98  006F FF7B FFE6     	movff	postinc2,postinc1
  6548  010E9E  006F FF7B FFE6     	movff	postinc2,postinc1
  6549  010EA4  006F FF7B FFE6     	movff	postinc2,postinc1
  6550  010EAA  0EC2               	movlw	low STR_43
  6551  010EAC  6EE6               	movwf	postinc1,c
  6552  010EAE  0EFB               	movlw	high STR_43
  6553  010EB0  6EE6               	movwf	postinc1,c
  6554  010EB2  0E00               	movlw	0
  6555  010EB4  6EE6               	movwf	postinc1,c
  6556  010EB6  0E01               	movlw	1
  6557  010EB8  6EE6               	movwf	postinc1,c
  6558  010EBA  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6559  010EBE  0060  F0AB  FFE6   	movff	btemp,postinc1
  6560  010EC4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6561  010ECA  0E0C               	movlw	12
  6562  010ECC  6EE6               	movwf	postinc1,c
  6563  010ECE  EC8D  F0F9         	call	_sprintf	;wreg free
  6564                           
  6565                           ;main.c: 411:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  6566  010ED2  EE22  F10F         	lfsr	2,_C+16	;volatile
  6567  010ED6  006F FF7B FFE6     	movff	postinc2,postinc1
  6568  010EDC  006F FF7B FFE6     	movff	postinc2,postinc1
  6569  010EE2  006F FF7B FFE6     	movff	postinc2,postinc1
  6570  010EE8  006F FF7B FFE6     	movff	postinc2,postinc1
  6571  010EEE  EE22  F1B3         	lfsr	2,_C+180	;volatile
  6572  010EF2  006F FF78  F034    	movff	postinc2,btemp+10
  6573  010EF8  006F FF74  F035    	movff	postdec2,btemp+11
  6574  010EFE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6575  010F04  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6576  010F0A  EE22  F1B5         	lfsr	2,_C+182	;volatile
  6577  010F0E  006F FF78  F034    	movff	postinc2,btemp+10
  6578  010F14  006F FF74  F035    	movff	postdec2,btemp+11
  6579  010F1A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6580  010F20  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6581  010F26  0E00               	movlw	0
  6582  010F28  6EE6               	movwf	postinc1,c
  6583  010F2A  0E05               	movlw	5
  6584  010F2C  6EE6               	movwf	postinc1,c
  6585  010F2E  EC6D  F0FC         	call	_spinners	;wreg free
  6586  010F32  502A               	movf	btemp^0,w,c
  6587  010F34  6EE6               	movwf	postinc1,c
  6588  010F36  0E00               	movlw	0
  6589  010F38  6EE6               	movwf	postinc1,c
  6590  010F3A  0EE3               	movlw	low STR_44
  6591  010F3C  6EE6               	movwf	postinc1,c
  6592  010F3E  0EFA               	movlw	high STR_44
  6593  010F40  6EE6               	movwf	postinc1,c
  6594  010F42  0E00               	movlw	0
  6595  010F44  6EE6               	movwf	postinc1,c
  6596  010F46  0E02               	movlw	2
  6597  010F48  6EE6               	movwf	postinc1,c
  6598  010F4A  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6599  010F4E  0060  F0AB  FFE6   	movff	btemp,postinc1
  6600  010F54  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6601  010F5A  0E0E               	movlw	14
  6602  010F5C  6EE6               	movwf	postinc1,c
  6603  010F5E  EC8D  F0F9         	call	_sprintf	;wreg free
  6604                           
  6605                           ;main.c: 413:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  6606  010F62  EE22  F187         	lfsr	2,_C+136	;volatile
  6607  010F66  006F FF7B FFE6     	movff	postinc2,postinc1
  6608  010F6C  006F FF7B FFE6     	movff	postinc2,postinc1
  6609  010F72  006F FF7B FFE6     	movff	postinc2,postinc1
  6610  010F78  006F FF7B FFE6     	movff	postinc2,postinc1
  6611  010F7E  0E66               	movlw	low STR_45
  6612  010F80  6EE6               	movwf	postinc1,c
  6613  010F82  0EFB               	movlw	high STR_45
  6614  010F84  6EE6               	movwf	postinc1,c
  6615  010F86  0E01               	movlw	1
  6616  010F88  6EE6               	movwf	postinc1,c
  6617  010F8A  0E00               	movlw	0
  6618  010F8C  6EE6               	movwf	postinc1,c
  6619  010F8E  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6620  010F92  0060  F0AB  FFE6   	movff	btemp,postinc1
  6621  010F98  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6622  010F9E  0E08               	movlw	8
  6623  010FA0  6EE6               	movwf	postinc1,c
  6624  010FA2  EC8D  F0F9         	call	_sprintf	;wreg free
  6625                           
  6626                           ;main.c: 414:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  6627  010FA6  EE22  F229         	lfsr	2,_C+298	;volatile
  6628  010FAA  006F FF7B FFE6     	movff	postinc2,postinc1
  6629  010FB0  006F FF7B FFE6     	movff	postinc2,postinc1
  6630  010FB6  006F FF7B FFE6     	movff	postinc2,postinc1
  6631  010FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  6632  010FC2  EE22  F235         	lfsr	2,_C+310	;volatile
  6633  010FC6  006F FF7B FFE6     	movff	postinc2,postinc1
  6634  010FCC  006F FF7B FFE6     	movff	postinc2,postinc1
  6635  010FD2  006F FF7B FFE6     	movff	postinc2,postinc1
  6636  010FD8  006F FF7B FFE6     	movff	postinc2,postinc1
  6637  010FDE  0E94               	movlw	low STR_46
  6638  010FE0  6EE6               	movwf	postinc1,c
  6639  010FE2  0EFB               	movlw	high STR_46
  6640  010FE4  6EE6               	movwf	postinc1,c
  6641  010FE6  0E01               	movlw	1
  6642  010FE8  6EE6               	movwf	postinc1,c
  6643  010FEA  0E01               	movlw	1
  6644  010FEC  6EE6               	movwf	postinc1,c
  6645  010FEE  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6646  010FF2  0060  F0AB  FFE6   	movff	btemp,postinc1
  6647  010FF8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6648  010FFE  0E0C               	movlw	12
  6649  011000  6EE6               	movwf	postinc1,c
  6650  011002  EC8D  F0F9         	call	_sprintf	;wreg free
  6651                           
  6652                           ;main.c: 415:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  6653  011006  EE22  F22D         	lfsr	2,_C+302	;volatile
  6654  01100A  006F FF7B FFE6     	movff	postinc2,postinc1
  6655  011010  006F FF7B FFE6     	movff	postinc2,postinc1
  6656  011016  006F FF7B FFE6     	movff	postinc2,postinc1
  6657  01101C  006F FF7B FFE6     	movff	postinc2,postinc1
  6658  011022  EE22  F239         	lfsr	2,_C+314	;volatile
  6659  011026  006F FF7B FFE6     	movff	postinc2,postinc1
  6660  01102C  006F FF7B FFE6     	movff	postinc2,postinc1
  6661  011032  006F FF7B FFE6     	movff	postinc2,postinc1
  6662  011038  006F FF7B FFE6     	movff	postinc2,postinc1
  6663  01103E  0EAB               	movlw	low STR_47
  6664  011040  6EE6               	movwf	postinc1,c
  6665  011042  0EFB               	movlw	high STR_47
  6666  011044  6EE6               	movwf	postinc1,c
  6667  011046  0E01               	movlw	1
  6668  011048  6EE6               	movwf	postinc1,c
  6669  01104A  0E02               	movlw	2
  6670  01104C  6EE6               	movwf	postinc1,c
  6671  01104E  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6672  011052  0060  F0AB  FFE6   	movff	btemp,postinc1
  6673  011058  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6674  01105E  0E0C               	movlw	12
  6675  011060  6EE6               	movwf	postinc1,c
  6676  011062  EC8D  F0F9         	call	_sprintf	;wreg free
  6677                           
  6678                           ;main.c: 416:      break;
  6679  011066  D108               	goto	l17304
  6680  011068                     l17288:
  6681                           
  6682                           ; BSR set to: 1
  6683                           ;main.c: 418:      if (!V.calib) {
  6684  011068  0102               	movlb	2	; () banked
  6685  01106A  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
  6686  01106C  A4D8               	btfss	status,2,c
  6687  01106E  D02D               	goto	l17292
  6688                           
  6689                           ; BSR set to: 2
  6690                           ;main.c: 419:       lp_filter(0.0, i, -1);
  6691  011070  0EFF               	movlw	255
  6692  011072  6EE6               	movwf	postinc1,c
  6693                           
  6694                           ;stkvar	_i @ sp[(-18)+14]
  6695  011074  0EFC               	movlw	-4
  6696  011076  50E3               	movf	plusw1,w,c
  6697  011078  6EE6               	movwf	postinc1,c
  6698  01107A  0E00               	movlw	0
  6699  01107C  6EE6               	movwf	postinc1,c
  6700  01107E  0E00               	movlw	0
  6701  011080  6EE6               	movwf	postinc1,c
  6702  011082  0E00               	movlw	0
  6703  011084  6EE6               	movwf	postinc1,c
  6704  011086  0E00               	movlw	0
  6705  011088  6EE6               	movwf	postinc1,c
  6706  01108A  EC29  F0E9         	call	_lp_filter	;wreg free
  6707                           
  6708                           ;main.c: 420:       lp_filter(0.0, j, -1);
  6709  01108E  0EFF               	movlw	255
  6710  011090  6EE6               	movwf	postinc1,c
  6711                           
  6712                           ;stkvar	_j @ sp[(-18)+13]
  6713  011092  0EFB               	movlw	-5
  6714  011094  50E3               	movf	plusw1,w,c
  6715  011096  6EE6               	movwf	postinc1,c
  6716  011098  0E00               	movlw	0
  6717  01109A  6EE6               	movwf	postinc1,c
  6718  01109C  0E00               	movlw	0
  6719  01109E  6EE6               	movwf	postinc1,c
  6720  0110A0  0E00               	movlw	0
  6721  0110A2  6EE6               	movwf	postinc1,c
  6722  0110A4  0E00               	movlw	0
  6723  0110A6  6EE6               	movwf	postinc1,c
  6724  0110A8  EC29  F0E9         	call	_lp_filter	;wreg free
  6725                           
  6726                           ;main.c: 421:       lp_filter(0.0, k, -1);
  6727  0110AC  0EFF               	movlw	255
  6728  0110AE  6EE6               	movwf	postinc1,c
  6729                           
  6730                           ;stkvar	_k @ sp[(-18)+12]
  6731  0110B0  0EFA               	movlw	-6
  6732  0110B2  50E3               	movf	plusw1,w,c
  6733  0110B4  6EE6               	movwf	postinc1,c
  6734  0110B6  0E00               	movlw	0
  6735  0110B8  6EE6               	movwf	postinc1,c
  6736  0110BA  0E00               	movlw	0
  6737  0110BC  6EE6               	movwf	postinc1,c
  6738  0110BE  0E00               	movlw	0
  6739  0110C0  6EE6               	movwf	postinc1,c
  6740  0110C2  0E00               	movlw	0
  6741  0110C4  6EE6               	movwf	postinc1,c
  6742  0110C6  EC29  F0E9         	call	_lp_filter	;wreg free
  6743  0110CA                     l17292:
  6744                           
  6745                           ;main.c: 423:      V.calib = 1;
  6746  0110CA  0E01               	movlw	1
  6747  0110CC  0102               	movlb	2	; () banked
  6748  0110CE  6FA9               	movwf	(_V+169)& (0+255),b	;volatile
  6749                           
  6750                           ; BSR set to: 2
  6751                           ;main.c: 424:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  6752                           ;stkvar	_inp_index @ sp[(-17)+11]
  6753  0110D0  0EFA               	movlw	-6
  6754  0110D2  50E3               	movf	plusw1,w,c
  6755  0110D4  6EE6               	movwf	postinc1,c
  6756  0110D6  0E00               	movlw	0
  6757  0110D8  6EE6               	movwf	postinc1,c
  6758                           
  6759                           ;stkvar	_i @ sp[(-19)+14]
  6760  0110DA  0EFB               	movlw	-5
  6761  0110DC  50E3               	movf	plusw1,w,c
  6762  0110DE  0D04               	mullw	4
  6763  0110E0  0EFF               	movlw	low _C
  6764  0110E2  24F3               	addwf	243,w,c
  6765  0110E4  6ED9               	movwf	fsr2l,c
  6766  0110E6  0E08               	movlw	high _C
  6767  0110E8  20F4               	addwfc	prodh,w,c
  6768  0110EA  6EDA               	movwf	fsr2h,c
  6769  0110EC  006F FF7B FFE6     	movff	postinc2,postinc1
  6770  0110F2  006F FF7B FFE6     	movff	postinc2,postinc1
  6771  0110F8  006F FF7B FFE6     	movff	postinc2,postinc1
  6772  0110FE  006F FF7B FFE6     	movff	postinc2,postinc1
  6773                           
  6774                           ;stkvar	_i @ sp[(-23)+14]
  6775  011104  0EF7               	movlw	-9
  6776  011106  50E3               	movf	plusw1,w,c
  6777  011108  6EE6               	movwf	postinc1,c
  6778  01110A  ECD5  F00F         	call	_get_raw_result	;wreg free
  6779  01110E  0060  F0AB  FFE6   	movff	btemp,postinc1
  6780  011114  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6781  01111A  0E4F               	movlw	low STR_48
  6782  01111C  6EE6               	movwf	postinc1,c
  6783  01111E  0EFD               	movlw	high STR_48
  6784  011120  6EE6               	movwf	postinc1,c
  6785  011122  0E00               	movlw	0
  6786  011124  6EE6               	movwf	postinc1,c
  6787  011126  0E00               	movlw	0
  6788  011128  6EE6               	movwf	postinc1,c
  6789  01112A  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6790  01112E  0060  F0AB  FFE6   	movff	btemp,postinc1
  6791  011134  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6792  01113A  0E0C               	movlw	12
  6793  01113C  6EE6               	movwf	postinc1,c
  6794  01113E  EC8D  F0F9         	call	_sprintf	;wreg free
  6795                           
  6796                           ; BSR set to: 0
  6797                           ;main.c: 425:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  6798                           ;stkvar	_inp_index @ sp[(-17)+11]
  6799  011142  0EFA               	movlw	-6
  6800  011144  50E3               	movf	plusw1,w,c
  6801  011146  6E34               	movwf	(btemp+10)^0,c
  6802  011148  6A35               	clrf	(btemp+11)^0,c
  6803  01114A  0E01               	movlw	1
  6804  01114C  2634               	addwf	(btemp+10)^0,f,c
  6805  01114E  0E00               	movlw	0
  6806  011150  2235               	addwfc	(btemp+11)^0,f,c
  6807  011152  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6808  011158  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6809                           
  6810                           ;stkvar	_j @ sp[(-19)+13]
  6811  01115E  0EFA               	movlw	-6
  6812  011160  50E3               	movf	plusw1,w,c
  6813  011162  0D04               	mullw	4
  6814  011164  0EFF               	movlw	low _C
  6815  011166  24F3               	addwf	243,w,c
  6816  011168  6ED9               	movwf	fsr2l,c
  6817  01116A  0E08               	movlw	high _C
  6818  01116C  20F4               	addwfc	prodh,w,c
  6819  01116E  6EDA               	movwf	fsr2h,c
  6820  011170  006F FF7B FFE6     	movff	postinc2,postinc1
  6821  011176  006F FF7B FFE6     	movff	postinc2,postinc1
  6822  01117C  006F FF7B FFE6     	movff	postinc2,postinc1
  6823  011182  006F FF7B FFE6     	movff	postinc2,postinc1
  6824                           
  6825                           ;stkvar	_j @ sp[(-23)+13]
  6826  011188  0EF6               	movlw	-10
  6827  01118A  50E3               	movf	plusw1,w,c
  6828  01118C  6EE6               	movwf	postinc1,c
  6829  01118E  ECD5  F00F         	call	_get_raw_result	;wreg free
  6830  011192  0060  F0AB  FFE6   	movff	btemp,postinc1
  6831  011198  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6832  01119E  0E4F               	movlw	low STR_48
  6833  0111A0  6EE6               	movwf	postinc1,c
  6834  0111A2  0EFD               	movlw	high STR_48
  6835  0111A4  6EE6               	movwf	postinc1,c
  6836  0111A6  0E00               	movlw	0
  6837  0111A8  6EE6               	movwf	postinc1,c
  6838  0111AA  0E01               	movlw	1
  6839  0111AC  6EE6               	movwf	postinc1,c
  6840  0111AE  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6841  0111B2  0060  F0AB  FFE6   	movff	btemp,postinc1
  6842  0111B8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6843  0111BE  0E0C               	movlw	12
  6844  0111C0  6EE6               	movwf	postinc1,c
  6845  0111C2  EC8D  F0F9         	call	_sprintf	;wreg free
  6846                           
  6847                           ; BSR set to: 0
  6848                           ;main.c: 426:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  6849                           ;stkvar	_inp_index @ sp[(-17)+11]
  6850  0111C6  0EFA               	movlw	-6
  6851  0111C8  50E3               	movf	plusw1,w,c
  6852  0111CA  6E34               	movwf	(btemp+10)^0,c
  6853  0111CC  6A35               	clrf	(btemp+11)^0,c
  6854  0111CE  0E02               	movlw	2
  6855  0111D0  2634               	addwf	(btemp+10)^0,f,c
  6856  0111D2  0E00               	movlw	0
  6857  0111D4  2235               	addwfc	(btemp+11)^0,f,c
  6858  0111D6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6859  0111DC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6860                           
  6861                           ;stkvar	_k @ sp[(-19)+12]
  6862  0111E2  0EF9               	movlw	-7
  6863  0111E4  50E3               	movf	plusw1,w,c
  6864  0111E6  0D04               	mullw	4
  6865  0111E8  0EFF               	movlw	low _C
  6866  0111EA  24F3               	addwf	243,w,c
  6867  0111EC  6ED9               	movwf	fsr2l,c
  6868  0111EE  0E08               	movlw	high _C
  6869  0111F0  20F4               	addwfc	prodh,w,c
  6870  0111F2  6EDA               	movwf	fsr2h,c
  6871  0111F4  006F FF7B FFE6     	movff	postinc2,postinc1
  6872  0111FA  006F FF7B FFE6     	movff	postinc2,postinc1
  6873  011200  006F FF7B FFE6     	movff	postinc2,postinc1
  6874  011206  006F FF7B FFE6     	movff	postinc2,postinc1
  6875                           
  6876                           ;stkvar	_k @ sp[(-23)+12]
  6877  01120C  0EF5               	movlw	-11
  6878  01120E  50E3               	movf	plusw1,w,c
  6879  011210  6EE6               	movwf	postinc1,c
  6880  011212  ECD5  F00F         	call	_get_raw_result	;wreg free
  6881  011216  0060  F0AB  FFE6   	movff	btemp,postinc1
  6882  01121C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6883  011222  0E4F               	movlw	low STR_48
  6884  011224  6EE6               	movwf	postinc1,c
  6885  011226  0EFD               	movlw	high STR_48
  6886  011228  6EE6               	movwf	postinc1,c
  6887  01122A  0E00               	movlw	0
  6888  01122C  6EE6               	movwf	postinc1,c
  6889  01122E  0E02               	movlw	2
  6890  011230  6EE6               	movwf	postinc1,c
  6891  011232  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
  6892  011236  0060  F0AB  FFE6   	movff	btemp,postinc1
  6893  01123C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6894  011242  0E0C               	movlw	12
  6895  011244  6EE6               	movwf	postinc1,c
  6896  011246  EC8D  F0F9         	call	_sprintf	;wreg free
  6897                           
  6898                           ;main.c: 427:      break;
  6899  01124A  D016               	goto	l17304
  6900  01124C                     l17302:
  6901  01124C  0101               	movlb	1	; () banked
  6902  01124E  51B2               	movf	_H& (0+255),w,b
  6903  011250  6E34               	movwf	(btemp+10)^0,c
  6904  011252  6A35               	clrf	(btemp+11)^0,c
  6905                           
  6906                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6907                           ; Switch size 1, requested type "simple"
  6908                           ; Number of cases is 1, Range of values is 0 to 0
  6909                           ; switch strategies available:
  6910                           ; Name         Instructions Cycles
  6911                           ; simple_byte            4     3 (average)
  6912                           ;	Chosen strategy is simple_byte
  6913  011254  5035               	movf	(btemp+11)^0,w,c
  6914  011256  0A00               	xorlw	0	; case 0
  6915  011258  A4D8               	btfss	status,2,c
  6916  01125A  D00E               	goto	l17304
  6917                           
  6918                           ; BSR set to: 1
  6919                           ; Switch size 1, requested type "simple"
  6920                           ; Number of cases is 4, Range of values is 0 to 3
  6921                           ; switch strategies available:
  6922                           ; Name         Instructions Cycles
  6923                           ; simple_byte           13     7 (average)
  6924                           ;	Chosen strategy is simple_byte
  6925  01125C  5034               	movf	(btemp+10)^0,w,c
  6926  01125E  0A00               	xorlw	0	; case 0
  6927  011260  B4D8               	btfsc	status,2,c
  6928  011262  D4CE               	goto	l1488
  6929  011264  0A01               	xorlw	1	; case 1
  6930  011266  B4D8               	btfsc	status,2,c
  6931  011268  EFFD  F084         	goto	l1478
  6932  01126C  0A03               	xorlw	3	; case 2
  6933  01126E  B4D8               	btfsc	status,2,c
  6934  011270  D5DC               	goto	l1489
  6935  011272  0A01               	xorlw	1	; case 3
  6936  011274  B4D8               	btfsc	status,2,c
  6937  011276  D6F8               	goto	l17288
  6938  011278                     l17304:
  6939                           
  6940                           ;main.c: 431:     clear_hid_pflags(&H);
  6941  011278  0EB2               	movlw	low _H
  6942  01127A  6EE6               	movwf	postinc1,c
  6943  01127C  0E01               	movlw	high _H
  6944  01127E  6EE6               	movwf	postinc1,c
  6945  011280  EC73  F007         	call	_clear_hid_pflags	;wreg free
  6946                           
  6947                           ;main.c: 433:    StartTimer(TMR_DISPLAY, 250);
  6948  011284  0EFA               	movlw	250
  6949  011286  6EE6               	movwf	postinc1,c
  6950  011288  0E00               	movlw	0
  6951  01128A  6EE6               	movwf	postinc1,c
  6952  01128C  0E0A               	movlw	10
  6953  01128E  6EE6               	movwf	postinc1,c
  6954  011290  ECCE  F00B         	call	_StartTimer	;wreg free
  6955                           
  6956                           ;main.c: 434:    V.enter = check_enter_button(&H);
  6957  011294  0EB2               	movlw	low _H
  6958  011296  6EE6               	movwf	postinc1,c
  6959  011298  0E01               	movlw	high _H
  6960  01129A  6EE6               	movwf	postinc1,c
  6961  01129C  EC2F  F006         	call	_check_enter_button	;wreg free
  6962  0112A0  502A               	movf	btemp^0,w,c
  6963  0112A2  0102               	movlb	2	; () banked
  6964  0112A4  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  6965                           
  6966                           ; BSR set to: 2
  6967                           ;main.c: 435:    if (V.enter && (H.hid_display != HID_AUX)) {
  6968  0112A6  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  6969  0112A8  B4D8               	btfsc	status,2,c
  6970  0112AA  D013               	goto	l17318
  6971                           
  6972                           ; BSR set to: 2
  6973  0112AC  0E03               	movlw	3
  6974  0112AE  0101               	movlb	1	; () banked
  6975  0112B0  19B2               	xorwf	_H& (0+255),w,b
  6976  0112B2  B4D8               	btfsc	status,2,c
  6977  0112B4  D00E               	goto	l17318
  6978                           
  6979                           ; BSR set to: 1
  6980                           ;main.c: 436:     V.enter = 0;
  6981  0112B6  0102               	movlb	2	; () banked
  6982  0112B8  6BAA               	clrf	(_V+170)& (0+255),b	;volatile
  6983                           
  6984                           ; BSR set to: 2
  6985                           ;main.c: 437:     V.screen = ~V.screen;
  6986  0112BA  A199               	btfss	(_V+153)& (0+255),0,b	;volatile
  6987  0112BC  D002               	goto	u16900
  6988  0112BE  0E01               	movlw	1
  6989  0112C0  D001               	goto	u16906
  6990  0112C2                     u16900:
  6991  0112C2  0E00               	movlw	0
  6992  0112C4                     u16906:
  6993  0112C4  0AFF               	xorlw	255
  6994  0112C6  6E35               	movwf	(btemp+11)^0,c
  6995  0112C8  5199               	movf	(_V+153)& (0+255),w,b	;volatile
  6996  0112CA  1835               	xorwf	(btemp+11)^0,w,c
  6997  0112CC  0BFE               	andlw	-2
  6998  0112CE  1835               	xorwf	(btemp+11)^0,w,c
  6999  0112D0  6F99               	movwf	(_V+153)& (0+255),b	;volatile
  7000  0112D2                     l17318:
  7001                           
  7002                           ;main.c: 439:    set_vterm(V.screen);
  7003  0112D2  0102               	movlb	2	; () banked
  7004  0112D4  A199               	btfss	(_V+153)& (0+255),0,b	;volatile
  7005  0112D6  D002               	goto	u16910
  7006  0112D8  0E01               	movlw	1
  7007  0112DA  D001               	goto	u16916
  7008  0112DC                     u16910:
  7009  0112DC  0E00               	movlw	0
  7010  0112DE                     u16916:
  7011  0112DE  6EE6               	movwf	postinc1,c
  7012  0112E0  EC46  F010         	call	_set_vterm	;wreg free
  7013                           
  7014                           ;main.c: 440:    update_lcd(V.screen);
  7015  0112E4  0102               	movlb	2	; () banked
  7016  0112E6  A199               	btfss	(_V+153)& (0+255),0,b	;volatile
  7017  0112E8  D002               	goto	u16920
  7018  0112EA  0E01               	movlw	1
  7019  0112EC  D001               	goto	u16926
  7020  0112EE                     u16920:
  7021  0112EE  0E00               	movlw	0
  7022  0112F0                     u16926:
  7023  0112F0  6EE6               	movwf	postinc1,c
  7024  0112F2  EC3F  F0F2         	call	_update_lcd	;wreg free
  7025                           
  7026                           ;main.c: 441:    display_history();
  7027  0112F6  EC4A  F0E8         	call	_display_history	;wreg free
  7028                           
  7029                           ;main.c: 443:    wait_lcd_done();
  7030  0112FA  ECC4  F00F         	call	_wait_lcd_done	;wreg free
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;main.c: 444:    set_dac_a(3.333);
  7034  0112FE  0EDF               	movlw	223
  7035  011300  6EE6               	movwf	postinc1,c
  7036  011302  0E4F               	movlw	79
  7037  011304  6EE6               	movwf	postinc1,c
  7038  011306  0E55               	movlw	85
  7039  011308  6EE6               	movwf	postinc1,c
  7040  01130A  0E40               	movlw	64
  7041  01130C  6EE6               	movwf	postinc1,c
  7042  01130E  EC0F  F00D         	call	_set_dac_a	;wreg free
  7043                           
  7044                           ;main.c: 445:    set_dac_b(6.666);
  7045  011312  0EDF               	movlw	223
  7046  011314  6EE6               	movwf	postinc1,c
  7047  011316  0E4F               	movlw	79
  7048  011318  6EE6               	movwf	postinc1,c
  7049  01131A  0ED5               	movlw	213
  7050  01131C  6EE6               	movwf	postinc1,c
  7051  01131E  0E40               	movlw	64
  7052  011320  6EE6               	movwf	postinc1,c
  7053  011322  ECF5  F00C         	call	_set_dac_b	;wreg free
  7054                           
  7055                           ;main.c: 446:    set_dac();
  7056  011326  EC95  F0FF         	call	_set_dac	;wreg free
  7057  01132A                     l17332:
  7058                           
  7059                           ;main.c: 452:   check_help(V.flipper);
  7060  01132A  0102               	movlb	2	; () banked
  7061  01132C  51A8               	movf	(_V+168)& (0+255),w,b	;volatile
  7062  01132E  6EE6               	movwf	postinc1,c
  7063  011330  EC5A  F0E5         	call	_check_help	;wreg free
  7064                           
  7065                           ;main.c: 454:   if (V.enter) {
  7066  011334  0102               	movlb	2	; () banked
  7067  011336  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  7068  011338  B4D8               	btfsc	status,2,c
  7069  01133A  D062               	goto	l1494
  7070                           
  7071                           ; BSR set to: 2
  7072                           ;main.c: 455:    V.enter = 0;
  7073  01133C  6BAA               	clrf	(_V+170)& (0+255),b	;volatile
  7074                           
  7075                           ;main.c: 456:    V.calib = 0;
  7076  01133E  6BA9               	clrf	(_V+169)& (0+255),b	;volatile
  7077                           
  7078                           ; BSR set to: 2
  7079                           ;main.c: 457:    inp_index += 3;
  7080                           ;stkvar	_inp_index @ sp[(-17)+11]
  7081  011340  0EFA               	movlw	-6
  7082  011342  006F FF8C  F02A    	movff	plusw1,btemp
  7083  011348  0E03               	movlw	3
  7084  01134A  262A               	addwf	btemp^0,f,c
  7085  01134C  0EFA               	movlw	-6
  7086  01134E  0060  F0AB  FFE3   	movff	btemp,plusw1
  7087                           
  7088                           ;main.c: 458:    if (inp_index > 9)
  7089                           ;stkvar	_inp_index @ sp[(-17)+11]
  7090  011354  0EFA               	movlw	-6
  7091  011356  006F FF8C  F02A    	movff	plusw1,btemp
  7092  01135C  0E09               	movlw	9
  7093  01135E  642A               	cpfsgt	btemp^0,c
  7094  011360  D03A               	goto	l17360
  7095                           
  7096                           ; BSR set to: 2
  7097                           ;main.c: 459:     inp_index = 0;
  7098                           ;stkvar	_inp_index @ sp[(-17)+11]
  7099  011362  0EFA               	movlw	-6
  7100  011364  6AE3               	clrf	plusw1,c
  7101  011366  D037               	goto	l17360
  7102  011368                     l17342:
  7103                           
  7104                           ; BSR set to: 2
  7105                           ;main.c: 462:     i = C_BATT;
  7106                           ;stkvar	_i @ sp[(-17)+14]
  7107  011368  0EFD               	movlw	-3
  7108  01136A  6AE3               	clrf	plusw1,c
  7109                           
  7110                           ; BSR set to: 2
  7111                           ;main.c: 463:     j = C_PV;
  7112                           ;stkvar	_j @ sp[(-17)+13]
  7113  01136C  0EFC               	movlw	-4
  7114  01136E  6AE3               	clrf	plusw1,c
  7115  011370  2AE3               	incf	plusw1,f,c
  7116                           
  7117                           ; BSR set to: 2
  7118                           ;main.c: 464:     k = V_CC;
  7119                           ;stkvar	_k @ sp[(-17)+12]
  7120  011372  0EFB               	movlw	-5
  7121  011374  6AE3               	clrf	plusw1,c
  7122  011376  82E3               	bsf	plusw1,1,c
  7123                           
  7124                           ;main.c: 465:     break;
  7125  011378  D043               	goto	l1494
  7126  01137A                     l17348:
  7127                           
  7128                           ; BSR set to: 2
  7129                           ;main.c: 467:     i = V_BAT;
  7130                           ;stkvar	_i @ sp[(-17)+14]
  7131  01137A  0EFD               	movlw	-3
  7132  01137C  6AE3               	clrf	plusw1,c
  7133  01137E  84E3               	bsf	plusw1,2,c
  7134                           
  7135                           ;main.c: 468:     j = V_PV;
  7136                           ;stkvar	_j @ sp[(-17)+13]
  7137  011380  0EFC               	movlw	-4
  7138  011382  6AE3               	clrf	plusw1,c
  7139  011384  80E3               	bsf	plusw1,0,c
  7140  011386  84E3               	bsf	plusw1,2,c	;indir
  7141                           
  7142                           ;main.c: 469:     k = V_CBUS;
  7143                           ;stkvar	_k @ sp[(-17)+12]
  7144  011388  0EFB               	movlw	-5
  7145  01138A  6AE3               	clrf	plusw1,c
  7146  01138C  82E3               	bsf	plusw1,1,c
  7147  01138E  84E3               	bsf	plusw1,2,c	;indir
  7148                           
  7149                           ;main.c: 470:     break;
  7150  011390  D037               	goto	l1494
  7151  011392                     l17350:
  7152                           
  7153                           ; BSR set to: 2
  7154                           ;main.c: 472:     i = V_BBAT;
  7155                           ;stkvar	_i @ sp[(-17)+14]
  7156  011392  0EFD               	movlw	-3
  7157  011394  6AE3               	clrf	plusw1,c
  7158  011396  82E3               	bsf	plusw1,1,c
  7159  011398  86E3               	bsf	plusw1,3,c	;indir
  7160                           
  7161                           ; BSR set to: 2
  7162                           ;main.c: 473:     j = V_TEMP;
  7163  01139A  0E0B               	movlw	11
  7164  01139C  6E35               	movwf	(btemp+11)^0,c
  7165                           
  7166                           ;stkvar	_j @ sp[(-17)+13]
  7167  01139E  0EFC               	movlw	-4
  7168  0113A0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7169                           
  7170                           ; BSR set to: 2
  7171                           ;main.c: 474:     k = V_INVERTER;
  7172                           ;stkvar	_k @ sp[(-17)+12]
  7173  0113A6  0EFB               	movlw	-5
  7174  0113A8  6AE3               	clrf	plusw1,c
  7175  0113AA  84E3               	bsf	plusw1,2,c
  7176  0113AC  86E3               	bsf	plusw1,3,c	;indir
  7177                           
  7178                           ;main.c: 475:     break;
  7179  0113AE  D028               	goto	l1494
  7180  0113B0                     l17356:
  7181                           
  7182                           ; BSR set to: 2
  7183                           ;main.c: 477:     i = V_LIGHT_SENSOR;
  7184  0113B0  0E0D               	movlw	13
  7185  0113B2  6E35               	movwf	(btemp+11)^0,c
  7186                           
  7187                           ;stkvar	_i @ sp[(-17)+14]
  7188  0113B4  0EFD               	movlw	-3
  7189  0113B6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7190                           
  7191                           ;main.c: 478:     j = V_LIGHT_SENSOR;
  7192  0113BC  0E0D               	movlw	13
  7193  0113BE  6E35               	movwf	(btemp+11)^0,c
  7194                           
  7195                           ;stkvar	_j @ sp[(-17)+13]
  7196  0113C0  0EFC               	movlw	-4
  7197  0113C2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7198                           
  7199                           ;main.c: 479:     k = V_LIGHT_SENSOR;
  7200  0113C8  0E0D               	movlw	13
  7201  0113CA  6E35               	movwf	(btemp+11)^0,c
  7202                           
  7203                           ;stkvar	_k @ sp[(-17)+12]
  7204  0113CC  0EFB               	movlw	-5
  7205  0113CE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7206                           
  7207                           ;main.c: 480:     break;
  7208  0113D4  D015               	goto	l1494
  7209  0113D6                     l17360:
  7210                           
  7211                           ; BSR set to: 2
  7212                           ;stkvar	_inp_index @ sp[(-17)+11]
  7213  0113D6  0EFA               	movlw	-6
  7214  0113D8  50E3               	movf	plusw1,w,c
  7215  0113DA  6E34               	movwf	(btemp+10)^0,c
  7216  0113DC  6A35               	clrf	(btemp+11)^0,c
  7217                           
  7218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7219                           ; Switch size 1, requested type "simple"
  7220                           ; Number of cases is 1, Range of values is 0 to 0
  7221                           ; switch strategies available:
  7222                           ; Name         Instructions Cycles
  7223                           ; simple_byte            4     3 (average)
  7224                           ;	Chosen strategy is simple_byte
  7225  0113DE  5035               	movf	(btemp+11)^0,w,c
  7226  0113E0  0A00               	xorlw	0	; case 0
  7227  0113E2  A4D8               	btfss	status,2,c
  7228  0113E4  D00D               	goto	l1494
  7229                           
  7230                           ; BSR set to: 2
  7231                           ; Switch size 1, requested type "simple"
  7232                           ; Number of cases is 4, Range of values is 0 to 9
  7233                           ; switch strategies available:
  7234                           ; Name         Instructions Cycles
  7235                           ; simple_byte           13     7 (average)
  7236                           ;	Chosen strategy is simple_byte
  7237  0113E6  5034               	movf	(btemp+10)^0,w,c
  7238  0113E8  0A00               	xorlw	0	; case 0
  7239  0113EA  B4D8               	btfsc	status,2,c
  7240  0113EC  D7BD               	goto	l17342
  7241  0113EE  0A03               	xorlw	3	; case 3
  7242  0113F0  B4D8               	btfsc	status,2,c
  7243  0113F2  D7C3               	goto	l17348
  7244  0113F4  0A05               	xorlw	5	; case 6
  7245  0113F6  B4D8               	btfsc	status,2,c
  7246  0113F8  D7CC               	goto	l17350
  7247  0113FA  0A0F               	xorlw	15	; case 9
  7248  0113FC  B4D8               	btfsc	status,2,c
  7249  0113FE  D7D8               	goto	l17356
  7250  011400                     l1494:
  7251                           
  7252                           ; BSR set to: 2
  7253                           ;main.c: 489:   if (V.set_sequ) {
  7254  011400  A198               	btfss	(_V+152)& (0+255),0,b	;volatile
  7255  011402  EF08  F084         	goto	l17214
  7256                           
  7257                           ; BSR set to: 2
  7258                           ;main.c: 490:    if (TimerDone(TMR_INFO)) {
  7259  011406  0E07               	movlw	7
  7260  011408  6EE6               	movwf	postinc1,c
  7261  01140A  EC3F  F00E         	call	_TimerDone	;wreg free
  7262  01140E  502A               	movf	btemp^0,w,c
  7263  011410  B4D8               	btfsc	status,2,c
  7264  011412  D00C               	goto	l17370
  7265                           
  7266                           ;main.c: 491:     V.set_sequ = 0;
  7267  011414  0102               	movlb	2	; () banked
  7268  011416  9198               	bcf	(_V+152)& (0+255),0,b	;volatile
  7269                           
  7270                           ; BSR set to: 2
  7271                           ;main.c: 492:     set_vterm(0);
  7272  011418  0E00               	movlw	0
  7273  01141A  6EE6               	movwf	postinc1,c
  7274  01141C  EC46  F010         	call	_set_vterm	;wreg free
  7275                           
  7276                           ;main.c: 493:     update_lcd(0);
  7277  011420  0E00               	movlw	0
  7278  011422  6EE6               	movwf	postinc1,c
  7279  011424  EC3F  F0F2         	call	_update_lcd	;wreg free
  7280                           
  7281                           ;main.c: 494:    } else {
  7282  011428  EF08  F084         	goto	l17214
  7283  01142C                     l17370:
  7284                           
  7285                           ;main.c: 495:     set_vterm(2);
  7286  01142C  0E02               	movlw	2
  7287  01142E  6EE6               	movwf	postinc1,c
  7288  011430  EC46  F010         	call	_set_vterm	;wreg free
  7289                           
  7290                           ;main.c: 496:     update_lcd(2);
  7291  011434  0E02               	movlw	2
  7292  011436  6EE6               	movwf	postinc1,c
  7293  011438  EC3F  F0F2         	call	_update_lcd	;wreg free
  7294  01143C  EF08  F084         	goto	l17214
  7295  011440                     __end_of_main:
  7296                           	opt callstack 0
  7297                           
  7298 ;; *************** function _update_hist_data *****************
  7299 ;; Defined at:
  7300 ;;		line 454 in file "daq.c"
  7301 ;; Parameters:    Size  Location     Type
  7302 ;;  mode            1  [STACK] const _Bool 
  7303 ;;  hist            2  [STACK] PTR volatile struct hist
  7304 ;;		 -> C.hist(113), C(336), 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;		None
  7307 ;; Return value:  Size  Location     Type
  7308 ;;                  1  [STACK] void 
  7309 ;; Registers used:
  7310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
  7311 ;; Tracked objects:
  7312 ;;		On entry : 7/1
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7320 ;;Total ram usage:        0 bytes
  7321 ;; Hardware stack levels used:    1
  7322 ;; Hardware stack levels required when called:   15
  7323 ;; This function calls:
  7324 ;;		Nothing
  7325 ;; This function is called by:
  7326 ;;		_main
  7327 ;; This function uses a reentrant model
  7328 ;;
  7329                           
  7330                           	psect	text1
  7331  000CD0                     __ptext1:
  7332                           	opt callstack 0
  7333  000CD0                     _update_hist_data:
  7334                           	opt callstack 15
  7335                           
  7336                           ;daq.c: 454: void update_hist_data(const _Bool mode, volatile hist_type *hist);daq.c: 45
      +                          5: {;daq.c: 456:  if (hist == ((void*)0))
  7337                           ;stkvar	_hist @ sp[(0)+-3]
  7338                           
  7339                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7340                           ;incstack = 0
  7341  000CD0  0EFD               	movlw	-3
  7342  000CD2  006F FF8C  F02A    	movff	plusw1,btemp
  7343  000CD8  0EFE               	movlw	-2
  7344  000CDA  50E3               	movf	plusw1,w,c
  7345  000CDC  102A               	iorwf	btemp^0,w,c
  7346  000CDE  B4D8               	btfsc	status,2,c
  7347  000CE0  D02A               	goto	l2089
  7348                           
  7349                           ;daq.c: 459:  if (mode) {
  7350                           ;stkvar	_mode @ sp[(0)+-1]
  7351  000CE2  0EFF               	movlw	-1
  7352  000CE4  50E3               	movf	plusw1,w,c
  7353  000CE6  B4D8               	btfsc	status,2,c
  7354  000CE8  D014               	goto	l14104
  7355                           
  7356                           ;daq.c: 460:   if (R.hist_save)
  7357  000CEA  0101               	movlb	1	; () banked
  7358  000CEC  A1AE               	btfss	(_R+167)& (0+255),0,b	;volatile
  7359  000CEE  D023               	goto	l2089
  7360                           
  7361                           ; BSR set to: 1
  7362                           ;daq.c: 461:    R.H = *hist;
  7363                           ;stkvar	_hist @ sp[(0)+-3]
  7364  000CF0  0EFD               	movlw	-3
  7365  000CF2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7366  000CF8  0EFE               	movlw	-2
  7367  000CFA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7368  000D00  EE00  F13D         	lfsr	0,_R+54	;volatile
  7369  000D04  0E70               	movlw	112
  7370  000D06                     u13341:
  7371  000D06  006F FF6F FFEB     	movff	plusw2,plusw0
  7372  000D0C  06E8               	decf	wreg,f,c
  7373  000D0E  E2FB               	bc	u13341
  7374  000D10  D012               	goto	l2089
  7375  000D12                     l14104:
  7376                           
  7377                           ;daq.c: 463:   *hist = R.H;
  7378  000D12  EE20  F13D         	lfsr	2,_R+54	;volatile
  7379                           
  7380                           ;stkvar	_hist @ sp[(0)+-3]
  7381  000D16  0EFD               	movlw	-3
  7382  000D18  006F FF8F FFE9     	movff	plusw1,fsr0l
  7383  000D1E  0EFE               	movlw	-2
  7384  000D20  006F FF8F FFEA     	movff	plusw1,fsr0h
  7385  000D26  0E70               	movlw	112
  7386  000D28                     u13351:
  7387  000D28  006F FF6F FFEB     	movff	plusw2,plusw0
  7388  000D2E  06E8               	decf	wreg,f,c
  7389  000D30  E2FB               	bc	u13351
  7390                           
  7391                           ;daq.c: 464:   R.hist_save = 1;
  7392  000D32  0101               	movlb	1	; () banked
  7393  000D34  81AE               	bsf	(_R+167)& (0+255),0,b	;volatile
  7394  000D36                     l2089:
  7395                           
  7396                           ; _update_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  7397  000D36  52E5               	movf	postdec1,f,c
  7398  000D38  52E5               	movf	postdec1,f,c
  7399  000D3A  52E5               	movf	postdec1,f,c
  7400  000D3C  0012               	return		;funcret
  7401  000D3E                     __end_of_update_hist_data:
  7402                           	opt callstack 0
  7403                           
  7404 ;; *************** function _update_cal_data *****************
  7405 ;; Defined at:
  7406 ;;		line 435 in file "daq.c"
  7407 ;; Parameters:    Size  Location     Type
  7408 ;;		None
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;		None
  7411 ;; Return value:  Size  Location     Type
  7412 ;;                  1  [STACK] void 
  7413 ;; Registers used:
  7414 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7415 ;; Tracked objects:
  7416 ;;		On entry : 0/39
  7417 ;;		On exit  : 3F/1
  7418 ;;		Unchanged: 0/0
  7419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7424 ;;Total ram usage:        0 bytes
  7425 ;; Hardware stack levels used:    1
  7426 ;; Hardware stack levels required when called:   15
  7427 ;; This function calls:
  7428 ;;		Nothing
  7429 ;; This function is called by:
  7430 ;;		_main
  7431 ;; This function uses a reentrant model
  7432 ;;
  7433                           
  7434                           	psect	text2
  7435  00130A                     __ptext2:
  7436                           	opt callstack 0
  7437  00130A                     _update_cal_data:
  7438                           	opt callstack 15
  7439                           
  7440                           ;daq.c: 437:  R = r_cal;
  7441                           
  7442                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7443                           ;incstack = 0
  7444  00130A  EE21  F100         	lfsr	2,_r_cal
  7445  00130E  EE00  F107         	lfsr	0,_R	;volatile
  7446  001312  0EAA               	movlw	170
  7447  001314                     u13281:
  7448  001314  006F FF7B FFEE     	movff	postinc2,postinc0
  7449  00131A  06E8               	decf	wreg,f,c
  7450  00131C  E2FB               	bc	u13281
  7451  00131E  0EAB               	movlw	171
  7452  001320  5ED9               	subwf	fsr2l,f,c
  7453  001322  5EE9               	subwf	fsr0l,f,c
  7454                           
  7455                           ;daq.c: 438:  if (!R.c_zero_cal) {
  7456  001324  0101               	movlb	1	; () banked
  7457  001326  B3AE               	btfsc	(_R+167)& (0+255),1,b	;volatile
  7458  001328  D008               	goto	l14090
  7459                           
  7460                           ; BSR set to: 1
  7461                           ;daq.c: 439:   R.n_offset[0] = 3938;
  7462  00132A  0E0F               	movlw	15
  7463  00132C  6F2E               	movwf	(_R+39)& (0+255),b	;volatile
  7464  00132E  0E62               	movlw	98
  7465  001330  6F2D               	movwf	(_R+38)& (0+255),b	;volatile
  7466                           
  7467                           ;daq.c: 440:   R.n_offset[1] = 4004;
  7468  001332  0E0F               	movlw	15
  7469  001334  6F30               	movwf	(_R+41)& (0+255),b	;volatile
  7470  001336  0EA4               	movlw	164
  7471  001338  6F2F               	movwf	(_R+40)& (0+255),b	;volatile
  7472  00133A                     l14090:
  7473                           
  7474                           ; BSR set to: 1
  7475                           ;daq.c: 444:  if (!R.c_scale_cal) {
  7476  00133A  B5AE               	btfsc	(_R+167)& (0+255),2,b	;volatile
  7477  00133C  0012               	return	
  7478                           
  7479                           ; BSR set to: 1
  7480                           ;daq.c: 445:   R.n_scalar[0] = 0.0862000;
  7481  00133E  0EA0               	movlw	160
  7482  001340  6F31               	movwf	(_R+42)& (0+255),b	;volatile
  7483  001342  0E89               	movlw	137
  7484  001344  6F32               	movwf	(_R+43)& (0+255),b	;volatile
  7485  001346  0EB0               	movlw	176
  7486  001348  6F33               	movwf	(_R+44)& (0+255),b	;volatile
  7487  00134A  0E3D               	movlw	61
  7488  00134C  6F34               	movwf	(_R+45)& (0+255),b	;volatile
  7489                           
  7490                           ;daq.c: 446:   R.n_scalar[1] = 0.0361010;
  7491  00134E  0EA4               	movlw	164
  7492  001350  6F35               	movwf	(_R+46)& (0+255),b	;volatile
  7493  001352  0EDE               	movlw	222
  7494  001354  6F36               	movwf	(_R+47)& (0+255),b	;volatile
  7495  001356  0E13               	movlw	19
  7496  001358  6F37               	movwf	(_R+48)& (0+255),b	;volatile
  7497  00135A  0E3D               	movlw	61
  7498  00135C  6F38               	movwf	(_R+49)& (0+255),b	;volatile
  7499                           
  7500                           ; BSR set to: 1
  7501                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  7502  00135E  0012               	return		;funcret
  7503  001360                     __end_of_update_cal_data:
  7504                           	opt callstack 0
  7505                           
  7506 ;; *************** function _static_soc *****************
  7507 ;; Defined at:
  7508 ;;		line 118 in file "mbmc.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;		None
  7511 ;; Auto vars:     Size  Location     Type
  7512 ;;		None
  7513 ;; Return value:  Size  Location     Type
  7514 ;;                  1  [STACK] void 
  7515 ;; Registers used:
  7516 ;;		wreg, fsr2l, fsr2h
  7517 ;; Tracked objects:
  7518 ;;		On entry : 0/1
  7519 ;;		On exit  : 0/0
  7520 ;;		Unchanged: 0/0
  7521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7526 ;;Total ram usage:        0 bytes
  7527 ;; Hardware stack levels used:    1
  7528 ;; Hardware stack levels required when called:   15
  7529 ;; This function calls:
  7530 ;;		Nothing
  7531 ;; This function is called by:
  7532 ;;		_main
  7533 ;; This function uses a reentrant model
  7534 ;;
  7535                           
  7536                           	psect	text3
  7537  0011FC                     __ptext3:
  7538                           	opt callstack 0
  7539  0011FC                     _static_soc:
  7540                           	opt callstack 15
  7541                           
  7542                           ;mbmc.c: 120:  C.runtime = 120;
  7543                           
  7544                           ; BSR set to: 1
  7545                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7546                           ;incstack = 0
  7547  0011FC  0E78               	movlw	120
  7548  0011FE  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
  7549  001204  0E00               	movlw	0
  7550  001206  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
  7551                           
  7552                           ;mbmc.c: 121:  C.soc = 100;
  7553  00120C  0E64               	movlw	100
  7554  00120E  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
  7555  001214  0E00               	movlw	0
  7556  001216  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
  7557                           
  7558                           ;mbmc.c: 122:  C.dynamic_ah = C.bank_ah;
  7559  00121C  EE22  F18B         	lfsr	2,_C+140	;volatile
  7560  001220  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
  7561  001226  006F FF78  F990    	movff	postinc2,_C+145	;volatile
  7562  00122C  006F FF78  F991    	movff	postinc2,_C+146	;volatile
  7563  001232  006F FF74  F992    	movff	postdec2,_C+147	;volatile
  7564                           
  7565                           ;mbmc.c: 123:  C.dynamic_ah_adj = C.dynamic_ah;
  7566  001238  EE22  F18F         	lfsr	2,_C+144	;volatile
  7567  00123C  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  7568  001242  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  7569  001248  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  7570  00124E  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  7571                           
  7572                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7573  001254  0012               	return		;funcret
  7574  001256                     __end_of_static_soc:
  7575                           	opt callstack 0
  7576                           
  7577 ;; *************** function _start_switch_handler *****************
  7578 ;; Defined at:
  7579 ;;		line 125 in file "dio.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;		None
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;		None
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  1  [STACK] void 
  7586 ;; Registers used:
  7587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 3F/39
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7597 ;;Total ram usage:        0 bytes
  7598 ;; Hardware stack levels used:    1
  7599 ;; Hardware stack levels required when called:   16
  7600 ;; This function calls:
  7601 ;;		_INT1_SetInterruptHandler
  7602 ;; This function is called by:
  7603 ;;		_main
  7604 ;; This function uses a reentrant model
  7605 ;;
  7606                           
  7607                           	psect	text4
  7608  01FFE0                     __ptext4:
  7609                           	opt callstack 0
  7610  01FFE0                     _start_switch_handler:
  7611                           	opt callstack 14
  7612                           
  7613                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  7614                           
  7615                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7616                           ;incstack = 0
  7617  01FFE0  0139               	movlb	57	; () banked
  7618  01FFE2  9195               	bcf	149,0,b	;volatile
  7619                           
  7620                           ; BSR set to: 57
  7621                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  7622  01FFE4  0EDE               	movlw	low _switch_handler
  7623  01FFE6  6EE6               	movwf	postinc1,c
  7624  01FFE8  0EE9               	movlw	high _switch_handler
  7625  01FFEA  6EE6               	movwf	postinc1,c
  7626  01FFEC  0E01               	movlw	low (_switch_handler shr (0+16))
  7627  01FFEE  6EE6               	movwf	postinc1,c
  7628  01FFF0  ECCB  F00E         	call	_INT1_SetInterruptHandler	;wreg free
  7629                           
  7630                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  7631  01FFF4  0E02               	movlw	2
  7632  01FFF6  0101               	movlb	1	; () banked
  7633  01FFF8  6FDE               	movwf	(_S+35)& (0+255),b	;volatile
  7634                           
  7635                           ; BSR set to: 1
  7636                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  7637  01FFFA  0139               	movlb	57	; () banked
  7638  01FFFC  8195               	bsf	149,0,b	;volatile
  7639                           
  7640                           ; BSR set to: 57
  7641                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  7642  01FFFE  0012               	return		;funcret
  7643  020000                     __end_of_start_switch_handler:
  7644                           	opt callstack 0
  7645                           
  7646 ;; *************** function _srand *****************
  7647 ;; Defined at:
  7648 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;  s               2  [STACK] unsigned int 
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;		None
  7653 ;; Return value:  Size  Location     Type
  7654 ;;                  1  [STACK] void 
  7655 ;; Registers used:
  7656 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 3F/2
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7666 ;;Total ram usage:        0 bytes
  7667 ;; Hardware stack levels used:    1
  7668 ;; Hardware stack levels required when called:   15
  7669 ;; This function calls:
  7670 ;;		Nothing
  7671 ;; This function is called by:
  7672 ;;		_main
  7673 ;; This function uses a reentrant model
  7674 ;;
  7675                           
  7676                           	psect	text5
  7677  0019B6                     __ptext5:
  7678                           	opt callstack 0
  7679  0019B6                     _srand:
  7680                           	opt callstack 15
  7681                           
  7682                           ;stkvar	_s @ sp[(0)+-2]
  7683                           
  7684                           ; BSR set to: 57
  7685                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7686                           ;incstack = 0
  7687  0019B6  0EFE               	movlw	-2
  7688  0019B8  50E3               	movf	plusw1,w,c
  7689  0019BA  0FFF               	addlw	255
  7690  0019BC  6E34               	movwf	(btemp+10)^0,c
  7691  0019BE  0EFF               	movlw	-1
  7692  0019C0  006F FF8C  F035    	movff	plusw1,btemp+11
  7693  0019C6  0EFF               	movlw	255
  7694  0019C8  2235               	addwfc	(btemp+11)^0,f,c
  7695  0019CA  0060  F0D0  F2E1   	movff	btemp+10,_seed
  7696  0019D0  0060  F0D4  F2E2   	movff	btemp+11,_seed+1
  7697  0019D6  0102               	movlb	2	; () banked
  7698  0019D8  6BE3               	clrf	(_seed+2)& (0+255),b
  7699  0019DA  6BE4               	clrf	(_seed+3)& (0+255),b
  7700  0019DC  6BE5               	clrf	(_seed+4)& (0+255),b
  7701  0019DE  6BE6               	clrf	(_seed+5)& (0+255),b
  7702  0019E0  6BE7               	clrf	(_seed+6)& (0+255),b
  7703  0019E2  6BE8               	clrf	(_seed+7)& (0+255),b
  7704                           
  7705                           ; BSR set to: 2
  7706                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  7707  0019E4  52E5               	movf	postdec1,f,c
  7708  0019E6  52E5               	movf	postdec1,f,c
  7709  0019E8  0012               	return		;funcret
  7710  0019EA                     __end_of_srand:
  7711                           	opt callstack 0
  7712                           
  7713 ;; *************** function _set_dac_b *****************
  7714 ;; Defined at:
  7715 ;;		line 306 in file "daq.c"
  7716 ;; Parameters:    Size  Location     Type
  7717 ;;  voltage         4  [STACK] const float 
  7718 ;; Auto vars:     Size  Location     Type
  7719 ;;		None
  7720 ;; Return value:  Size  Location     Type
  7721 ;;                  2  [STACK] unsigned short 
  7722 ;; Registers used:
  7723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7724 ;; Tracked objects:
  7725 ;;		On entry : 0/0
  7726 ;;		On exit  : 0/0
  7727 ;;		Unchanged: 0/0
  7728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7733 ;;Total ram usage:        0 bytes
  7734 ;; Hardware stack levels used:    1
  7735 ;; Hardware stack levels required when called:   17
  7736 ;; This function calls:
  7737 ;;		_convert_dac_raw
  7738 ;; This function is called by:
  7739 ;;		_main
  7740 ;; This function uses a reentrant model
  7741 ;;
  7742                           
  7743                           	psect	text6
  7744  0019EA                     __ptext6:
  7745                           	opt callstack 0
  7746  0019EA                     _set_dac_b:
  7747                           	opt callstack 13
  7748                           
  7749                           ;daq.c: 306: uint16_t set_dac_b(const float voltage);daq.c: 307: {;daq.c: 308:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  7750                           ;stkvar	_voltage @ sp[(0)+-4]
  7751                           
  7752                           ; BSR set to: 2
  7753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7754                           ;incstack = 0
  7755  0019EA  0EFC               	movlw	-4
  7756  0019EC  006F FF8F FFE6     	movff	plusw1,postinc1
  7757  0019F2  006F FF8F FFE6     	movff	plusw1,postinc1
  7758  0019F8  006F FF8F FFE6     	movff	plusw1,postinc1
  7759  0019FE  006F FF8F FFE6     	movff	plusw1,postinc1
  7760  001A04  ECEB  F0F7         	call	_convert_dac_raw	;wreg free
  7761  001A08  0060  F0A8  F129   	movff	btemp,_R+34	;volatile
  7762  001A0E  0060  F0AC  F12A   	movff	btemp+1,_R+35	;volatile
  7763                           
  7764                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7765                           
  7766                           ;daq.c: 309:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  7767  001A14  52E5               	movf	postdec1,f,c
  7768  001A16  52E5               	movf	postdec1,f,c
  7769  001A18  52E5               	movf	postdec1,f,c
  7770  001A1A  52E5               	movf	postdec1,f,c
  7771  001A1C  0012               	return		;funcret
  7772  001A1E                     __end_of_set_dac_b:
  7773                           	opt callstack 0
  7774                           
  7775 ;; *************** function _set_dac_a *****************
  7776 ;; Defined at:
  7777 ;;		line 297 in file "daq.c"
  7778 ;; Parameters:    Size  Location     Type
  7779 ;;  voltage         4  [STACK] const float 
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;		None
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  2  [STACK] unsigned short 
  7784 ;; Registers used:
  7785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7786 ;; Tracked objects:
  7787 ;;		On entry : 3F/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7795 ;;Total ram usage:        0 bytes
  7796 ;; Hardware stack levels used:    1
  7797 ;; Hardware stack levels required when called:   17
  7798 ;; This function calls:
  7799 ;;		_convert_dac_raw
  7800 ;; This function is called by:
  7801 ;;		_main
  7802 ;; This function uses a reentrant model
  7803 ;;
  7804                           
  7805                           	psect	text7
  7806  001A1E                     __ptext7:
  7807                           	opt callstack 0
  7808  001A1E                     _set_dac_a:
  7809                           	opt callstack 13
  7810                           
  7811                           ;daq.c: 297: uint16_t set_dac_a(const float voltage);daq.c: 298: {;daq.c: 299:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  7812                           ;stkvar	_voltage @ sp[(0)+-4]
  7813                           
  7814                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7815                           ;incstack = 0
  7816  001A1E  0EFC               	movlw	-4
  7817  001A20  006F FF8F FFE6     	movff	plusw1,postinc1
  7818  001A26  006F FF8F FFE6     	movff	plusw1,postinc1
  7819  001A2C  006F FF8F FFE6     	movff	plusw1,postinc1
  7820  001A32  006F FF8F FFE6     	movff	plusw1,postinc1
  7821  001A38  ECEB  F0F7         	call	_convert_dac_raw	;wreg free
  7822  001A3C  0060  F0A8  F127   	movff	btemp,_R+32	;volatile
  7823  001A42  0060  F0AC  F128   	movff	btemp+1,_R+33	;volatile
  7824                           
  7825                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7826                           
  7827                           ;daq.c: 300:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  7828  001A48  52E5               	movf	postdec1,f,c
  7829  001A4A  52E5               	movf	postdec1,f,c
  7830  001A4C  52E5               	movf	postdec1,f,c
  7831  001A4E  52E5               	movf	postdec1,f,c
  7832  001A50  0012               	return		;funcret
  7833  001A52                     __end_of_set_dac_a:
  7834                           	opt callstack 0
  7835                           
  7836 ;; *************** function _convert_dac_raw *****************
  7837 ;; Defined at:
  7838 ;;		line 279 in file "daq.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;  voltage         4  [STACK] float 
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;		None
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  2  [STACK] unsigned short 
  7845 ;; Registers used:
  7846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7856 ;;Total ram usage:        0 bytes
  7857 ;; Hardware stack levels used:    1
  7858 ;; Hardware stack levels required when called:   16
  7859 ;; This function calls:
  7860 ;;		___fldiv
  7861 ;;		___flge
  7862 ;;		___fltol
  7863 ;; This function is called by:
  7864 ;;		_set_dac_a
  7865 ;;		_set_dac_b
  7866 ;; This function uses a reentrant model
  7867 ;;
  7868                           
  7869                           	psect	text8
  7870  01EFD6                     __ptext8:
  7871                           	opt callstack 0
  7872  01EFD6                     _convert_dac_raw:
  7873                           	opt callstack 13
  7874                           
  7875                           ;daq.c: 279: static uint16_t convert_dac_raw(float voltage);daq.c: 280: {;daq.c: 284:  i
      +                          f (voltage < 0.001)
  7876                           
  7877                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7878                           ;incstack = 0
  7879  01EFD6  0E6F               	movlw	111
  7880  01EFD8  6EE6               	movwf	postinc1,c
  7881  01EFDA  0E12               	movlw	18
  7882  01EFDC  6EE6               	movwf	postinc1,c
  7883  01EFDE  0E83               	movlw	131
  7884  01EFE0  6EE6               	movwf	postinc1,c
  7885  01EFE2  0E3A               	movlw	58
  7886  01EFE4  6EE6               	movwf	postinc1,c
  7887                           
  7888                           ;stkvar	_voltage @ sp[(-4)+-4]
  7889  01EFE6  0EF8               	movlw	-8
  7890  01EFE8  006F FF8F FFE6     	movff	plusw1,postinc1
  7891  01EFEE  006F FF8F FFE6     	movff	plusw1,postinc1
  7892  01EFF4  006F FF8F FFE6     	movff	plusw1,postinc1
  7893  01EFFA  006F FF8F FFE6     	movff	plusw1,postinc1
  7894  01F000  ECDD  F0F0         	call	___flge	;wreg free
  7895  01F004  B02A               	btfsc	btemp& (0+255),0,c
  7896  01F006  D018               	goto	l13624
  7897                           
  7898                           ;daq.c: 285:   voltage = 0.001;
  7899  01F008  0E6F               	movlw	111
  7900  01F00A  6E32               	movwf	(btemp+8)^0,c
  7901  01F00C  0E12               	movlw	18
  7902  01F00E  6E33               	movwf	(btemp+9)^0,c
  7903  01F010  0E83               	movlw	131
  7904  01F012  6E34               	movwf	(btemp+10)^0,c
  7905  01F014  0E3A               	movlw	58
  7906  01F016  6E35               	movwf	(btemp+11)^0,c
  7907                           
  7908                           ;stkvar	_voltage @ sp[(0)+-4]
  7909  01F018  0EFC               	movlw	-4
  7910  01F01A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  7911  01F020  0EFD               	movlw	-3
  7912  01F022  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  7913  01F028  0EFE               	movlw	-2
  7914  01F02A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  7915  01F030  0EFF               	movlw	-1
  7916  01F032  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7917  01F038                     l13624:
  7918                           
  7919                           ;daq.c: 286:  if (voltage > 10.0)
  7920                           ;stkvar	_voltage @ sp[(0)+-4]
  7921  01F038  0EFC               	movlw	-4
  7922  01F03A  006F FF8F FFE6     	movff	plusw1,postinc1
  7923  01F040  006F FF8F FFE6     	movff	plusw1,postinc1
  7924  01F046  006F FF8F FFE6     	movff	plusw1,postinc1
  7925  01F04C  006F FF8F FFE6     	movff	plusw1,postinc1
  7926  01F052  0E00               	movlw	0
  7927  01F054  6EE6               	movwf	postinc1,c
  7928  01F056  0E00               	movlw	0
  7929  01F058  6EE6               	movwf	postinc1,c
  7930  01F05A  0E20               	movlw	32
  7931  01F05C  6EE6               	movwf	postinc1,c
  7932  01F05E  0E41               	movlw	65
  7933  01F060  6EE6               	movwf	postinc1,c
  7934  01F062  ECDD  F0F0         	call	___flge	;wreg free
  7935  01F066  B02A               	btfsc	btemp& (0+255),0,c
  7936  01F068  D018               	goto	l13628
  7937                           
  7938                           ;daq.c: 287:   voltage = 10.0;
  7939  01F06A  0E00               	movlw	0
  7940  01F06C  6E32               	movwf	(btemp+8)^0,c
  7941  01F06E  0E00               	movlw	0
  7942  01F070  6E33               	movwf	(btemp+9)^0,c
  7943  01F072  0E20               	movlw	32
  7944  01F074  6E34               	movwf	(btemp+10)^0,c
  7945  01F076  0E41               	movlw	65
  7946  01F078  6E35               	movwf	(btemp+11)^0,c
  7947                           
  7948                           ;stkvar	_voltage @ sp[(0)+-4]
  7949  01F07A  0EFC               	movlw	-4
  7950  01F07C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  7951  01F082  0EFD               	movlw	-3
  7952  01F084  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  7953  01F08A  0EFE               	movlw	-2
  7954  01F08C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  7955  01F092  0EFF               	movlw	-1
  7956  01F094  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7957  01F09A                     l13628:
  7958                           
  7959                           ;daq.c: 291:  return(uint16_t) (voltage / 0.002442);
  7960  01F09A  0EF6               	movlw	246
  7961  01F09C  6EE6               	movwf	postinc1,c
  7962  01F09E  0E09               	movlw	9
  7963  01F0A0  6EE6               	movwf	postinc1,c
  7964  01F0A2  0E20               	movlw	32
  7965  01F0A4  6EE6               	movwf	postinc1,c
  7966  01F0A6  0E3B               	movlw	59
  7967  01F0A8  6EE6               	movwf	postinc1,c
  7968                           
  7969                           ;stkvar	_voltage @ sp[(-4)+-4]
  7970  01F0AA  0EF8               	movlw	-8
  7971  01F0AC  006F FF8F FFE6     	movff	plusw1,postinc1
  7972  01F0B2  006F FF8F FFE6     	movff	plusw1,postinc1
  7973  01F0B8  006F FF8F FFE6     	movff	plusw1,postinc1
  7974  01F0BE  006F FF8F FFE6     	movff	plusw1,postinc1
  7975  01F0C4  EC13  F0BD         	call	___fldiv	;wreg free
  7976  01F0C8  0060  F0AB  FFE6   	movff	btemp,postinc1
  7977  01F0CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7978  01F0D4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  7979  01F0DA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  7980  01F0E0  EC71  F0EF         	call	___fltol	;wreg free
  7981                           
  7982                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  7983  01F0E4  52E5               	movf	postdec1,f,c
  7984  01F0E6  52E5               	movf	postdec1,f,c
  7985  01F0E8  52E5               	movf	postdec1,f,c
  7986  01F0EA  52E5               	movf	postdec1,f,c
  7987  01F0EC  0012               	return		;funcret
  7988  01F0EE                     __end_of_convert_dac_raw:
  7989                           	opt callstack 0
  7990                           
  7991 ;; *************** function _set_dac *****************
  7992 ;; Defined at:
  7993 ;;		line 255 in file "daq.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;		None
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;		None
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  1  [STACK] void 
  8000 ;; Registers used:
  8001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8011 ;;Total ram usage:        0 bytes
  8012 ;; Hardware stack levels used:    1
  8013 ;; Hardware stack levels required when called:   16
  8014 ;; This function calls:
  8015 ;;		_SPI1_Exchange8bit
  8016 ;;		_dac_spi_control
  8017 ;; This function is called by:
  8018 ;;		_main
  8019 ;; This function uses a reentrant model
  8020 ;;
  8021                           
  8022                           	psect	text9
  8023  01FF2A                     __ptext9:
  8024                           	opt callstack 0
  8025  01FF2A                     _set_dac:
  8026                           	opt callstack 14
  8027                           
  8028                           ;daq.c: 257:  while (!SPI1STATUSbits.TXBE);
  8029                           
  8030                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8031                           ;incstack = 0
  8032  01FF2A  013D               	movlb	61	; () banked
  8033  01FF2C  AB17               	btfss	23,5,b	;volatile
  8034  01FF2E  D7FD               	goto	_set_dac
  8035                           
  8036                           ; BSR set to: 61
  8037                           
  8038                           ;daq.c: 258:  do { LATCbits.LATC2 = 1; } while(0);
  8039  01FF30  84BC               	bsf	188,2,c	;volatile
  8040                           
  8041                           ; BSR set to: 61
  8042                           
  8043                           ;daq.c: 259:  do { LATCbits.LATC0 = 1; } while(0);
  8044  01FF32  80BC               	bsf	188,0,c	;volatile
  8045                           
  8046                           ; BSR set to: 61
  8047                           ;daq.c: 260:  dac_spi_control(1);
  8048  01FF34  0E01               	movlw	1
  8049  01FF36  6EE6               	movwf	postinc1,c
  8050  01FF38  ECB6  F005         	call	_dac_spi_control	;wreg free
  8051                           
  8052                           ;daq.c: 261:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  8053  01FF3C  C127  F12B         	movff	_R+32,_R+36	;volatile
  8054                           
  8055                           ;daq.c: 262:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  8056  01FF40  EE20  F127         	lfsr	2,_R+32	;volatile
  8057  01FF44  006F FF78  F034    	movff	postinc2,btemp+10
  8058  01FF4A  006F FF74  F035    	movff	postdec2,btemp+11
  8059  01FF50  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8060  01FF56  6A35               	clrf	(btemp+11)^0,c
  8061  01FF58  0E0F               	movlw	15
  8062  01FF5A  1634               	andwf	(btemp+10)^0,f,c
  8063  01FF5C  0101               	movlb	1	; () banked
  8064  01FF5E  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  8065  01FF60  1834               	xorwf	(btemp+10)^0,w,c
  8066  01FF62  0BF0               	andlw	-16
  8067  01FF64  1834               	xorwf	(btemp+10)^0,w,c
  8068  01FF66  6F2C               	movwf	(_R+37)& (0+255),b	;volatile
  8069                           
  8070                           ; BSR set to: 1
  8071                           ;daq.c: 263:  R.max5322_cmd.map.cont = 0b0100;
  8072  01FF68  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  8073  01FF6A  0B0F               	andlw	-241
  8074  01FF6C  0940               	iorlw	64
  8075  01FF6E  6F2C               	movwf	(_R+37)& (0+255),b	;volatile
  8076                           
  8077                           ; BSR set to: 1
  8078  01FF70  90BF               	bcf	191,0,c	;volatile
  8079                           
  8080                           ; BSR set to: 1
  8081                           ;daq.c: 265:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8082  01FF72  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  8083  01FF74  6EE6               	movwf	postinc1,c
  8084  01FF76  EC28  F010         	call	_SPI1_Exchange8bit	;wreg free
  8085                           
  8086                           ; BSR set to: 57
  8087                           ;daq.c: 266:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8088  01FF7A  0101               	movlb	1	; () banked
  8089  01FF7C  512B               	movf	(_R+36)& (0+255),w,b	;volatile
  8090  01FF7E  6EE6               	movwf	postinc1,c
  8091  01FF80  EC28  F010         	call	_SPI1_Exchange8bit	;wreg free
  8092                           
  8093                           ; BSR set to: 57
  8094  01FF84  80BF               	bsf	191,0,c	;volatile
  8095                           
  8096                           ; BSR set to: 57
  8097                           ;daq.c: 268:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  8098  01FF86  C129  F12B         	movff	_R+34,_R+36	;volatile
  8099                           
  8100                           ; BSR set to: 57
  8101                           ;daq.c: 269:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  8102  01FF8A  EE20  F129         	lfsr	2,_R+34	;volatile
  8103  01FF8E  006F FF78  F034    	movff	postinc2,btemp+10
  8104  01FF94  006F FF74  F035    	movff	postdec2,btemp+11
  8105  01FF9A  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8106  01FFA0  6A35               	clrf	(btemp+11)^0,c
  8107  01FFA2  0E0F               	movlw	15
  8108  01FFA4  1634               	andwf	(btemp+10)^0,f,c
  8109  01FFA6  0101               	movlb	1	; () banked
  8110  01FFA8  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  8111  01FFAA  1834               	xorwf	(btemp+10)^0,w,c
  8112  01FFAC  0BF0               	andlw	-16
  8113  01FFAE  1834               	xorwf	(btemp+10)^0,w,c
  8114  01FFB0  6F2C               	movwf	(_R+37)& (0+255),b	;volatile
  8115                           
  8116                           ; BSR set to: 1
  8117                           ;daq.c: 270:  R.max5322_cmd.map.cont = 0b0101;
  8118  01FFB2  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  8119  01FFB4  0B0F               	andlw	-241
  8120  01FFB6  0950               	iorlw	80
  8121  01FFB8  6F2C               	movwf	(_R+37)& (0+255),b	;volatile
  8122                           
  8123                           ; BSR set to: 1
  8124  01FFBA  90BF               	bcf	191,0,c	;volatile
  8125                           
  8126                           ; BSR set to: 1
  8127                           ;daq.c: 272:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8128  01FFBC  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  8129  01FFBE  6EE6               	movwf	postinc1,c
  8130  01FFC0  EC28  F010         	call	_SPI1_Exchange8bit	;wreg free
  8131                           
  8132                           ; BSR set to: 57
  8133                           ;daq.c: 273:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8134  01FFC4  0101               	movlb	1	; () banked
  8135  01FFC6  512B               	movf	(_R+36)& (0+255),w,b	;volatile
  8136  01FFC8  6EE6               	movwf	postinc1,c
  8137  01FFCA  EC28  F010         	call	_SPI1_Exchange8bit	;wreg free
  8138  01FFCE                     l2026:
  8139  01FFCE  013D               	movlb	61	; () banked
  8140  01FFD0  AB17               	btfss	23,5,b	;volatile
  8141  01FFD2  D7FD               	goto	l2026
  8142                           
  8143                           ; BSR set to: 61
  8144                           
  8145                           ;daq.c: 275:  do { LATFbits.LATF0 = 1; } while(0);
  8146  01FFD4  80BF               	bsf	191,0,c	;volatile
  8147                           
  8148                           ; BSR set to: 61
  8149                           ;daq.c: 276:  dac_spi_control(0);
  8150  01FFD6  0E00               	movlw	0
  8151  01FFD8  6EE6               	movwf	postinc1,c
  8152  01FFDA  ECB6  F005         	call	_dac_spi_control	;wreg free
  8153                           
  8154                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  8155  01FFDE  0012               	return		;funcret
  8156  01FFE0                     __end_of_set_dac:
  8157                           	opt callstack 0
  8158                           
  8159 ;; *************** function _dac_spi_control *****************
  8160 ;; Defined at:
  8161 ;;		line 207 in file "daq.c"
  8162 ;; Parameters:    Size  Location     Type
  8163 ;;  set             1  [STACK] _Bool 
  8164 ;; Auto vars:     Size  Location     Type
  8165 ;;		None
  8166 ;; Return value:  Size  Location     Type
  8167 ;;                  1  [STACK] void 
  8168 ;; Registers used:
  8169 ;;		wreg, fsr1l, fsr1h, status,2
  8170 ;; Tracked objects:
  8171 ;;		On entry : 3F/3D
  8172 ;;		On exit  : 0/0
  8173 ;;		Unchanged: 0/0
  8174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8179 ;;Total ram usage:        0 bytes
  8180 ;; Hardware stack levels used:    1
  8181 ;; Hardware stack levels required when called:   15
  8182 ;; This function calls:
  8183 ;;		Nothing
  8184 ;; This function is called by:
  8185 ;;		_set_dac
  8186 ;; This function uses a reentrant model
  8187 ;;
  8188                           
  8189                           	psect	text10
  8190  000B6C                     __ptext10:
  8191                           	opt callstack 0
  8192  000B6C                     _dac_spi_control:
  8193                           	opt callstack 14
  8194                           
  8195                           ;daq.c: 207: void dac_spi_control(_Bool set);daq.c: 208: {;daq.c: 209:  static _Bool ini
      +                          t = 0;;daq.c: 210:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 212:  if (set) {
  8196                           ;stkvar	_set @ sp[(0)+-1]
  8197                           
  8198                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8199                           ;incstack = 0
  8200  000B6C  0EFF               	movlw	-1
  8201  000B6E  50E3               	movf	plusw1,w,c
  8202  000B70  B4D8               	btfsc	status,2,c
  8203  000B72  D022               	goto	l13616
  8204                           
  8205                           ;daq.c: 213:   SPI1CON0bits.EN = 0;
  8206  000B74  013D               	movlb	61	; () banked
  8207  000B76  9F14               	bcf	20,7,b	;volatile
  8208                           
  8209                           ; BSR set to: 61
  8210                           ;daq.c: 214:   if (!init) {
  8211  000B78  5052               	movf	dac_spi_control@init^0,w,c
  8212  000B7A  A4D8               	btfss	status,2,c
  8213  000B7C  D011               	goto	l13604
  8214                           
  8215                           ; BSR set to: 61
  8216                           ;daq.c: 215:    init = 1;
  8217  000B7E  0E01               	movlw	1
  8218  000B80  6E52               	movwf	dac_spi_control@init^0,c
  8219                           
  8220                           ; BSR set to: 61
  8221                           ;daq.c: 216:    S0 = SPI1CON0;
  8222  000B82  006F F450  F0D5    	movff	15636,dac_spi_control@S0	;volatile
  8223                           
  8224                           ; BSR set to: 61
  8225                           ;daq.c: 217:    S1 = SPI1CON1;
  8226  000B88  006F F454  F0D4    	movff	15637,dac_spi_control@S1	;volatile
  8227                           
  8228                           ; BSR set to: 61
  8229                           ;daq.c: 218:    S2 = SPI1CON2;
  8230  000B8E  006F F458  F0D3    	movff	15638,dac_spi_control@S2	;volatile
  8231                           
  8232                           ; BSR set to: 61
  8233                           ;daq.c: 219:    SC = SPI1CLK;
  8234  000B94  006F F470  F0D2    	movff	15644,dac_spi_control@SC	;volatile
  8235                           
  8236                           ; BSR set to: 61
  8237                           ;daq.c: 220:    SB = SPI1BAUD;
  8238  000B9A  006F F464  F0D1    	movff	15641,dac_spi_control@SB	;volatile
  8239  000BA0                     l13604:
  8240                           
  8241                           ; BSR set to: 61
  8242                           ;daq.c: 226:   SPI1CON1 = 0x00;
  8243  000BA0  6B15               	clrf	21,b	;volatile
  8244                           
  8245                           ; BSR set to: 61
  8246                           ;daq.c: 227:   SPI1CON1bits.CKE = 1;
  8247  000BA2  8D15               	bsf	21,6,b	;volatile
  8248                           
  8249                           ; BSR set to: 61
  8250                           ;daq.c: 228:   SPI1CON1bits.CKP = 0;
  8251  000BA4  9B15               	bcf	21,5,b	;volatile
  8252                           
  8253                           ; BSR set to: 61
  8254                           ;daq.c: 229:   SPI1CON1bits.SMP = 0;
  8255  000BA6  9F15               	bcf	21,7,b	;volatile
  8256                           
  8257                           ;daq.c: 231:   SPI1CON2 = 0x03;
  8258  000BA8  0E03               	movlw	3
  8259  000BAA  6F16               	movwf	22,b	;volatile
  8260                           
  8261                           ;daq.c: 233:   SPI1BAUD = 0x0f;
  8262  000BAC  0E0F               	movlw	15
  8263  000BAE  6F19               	movwf	25,b	;volatile
  8264                           
  8265                           ; BSR set to: 61
  8266                           ;daq.c: 235:   SPI1CLK = 0x00;
  8267  000BB0  6B1C               	clrf	28,b	;volatile
  8268                           
  8269                           ;daq.c: 237:   SPI1CON0 = 0x83;
  8270  000BB2  0E83               	movlw	131
  8271  000BB4  6F14               	movwf	20,b	;volatile
  8272  000BB6  D014               	goto	L3
  8273  000BB8                     l13616:
  8274                           
  8275                           ;daq.c: 240:   if (init) {
  8276  000BB8  5052               	movf	dac_spi_control@init^0,w,c
  8277  000BBA  B4D8               	btfsc	status,2,c
  8278  000BBC  D012               	goto	l2010
  8279                           
  8280                           ;daq.c: 244:    SPI1CON0bits.EN = 0;
  8281  000BBE  013D               	movlb	61	; () banked
  8282  000BC0  9F14               	bcf	20,7,b	;volatile
  8283                           
  8284                           ;daq.c: 245:    SPI1CON1 = S1;
  8285  000BC2  0060  F353  FD15   	movff	dac_spi_control@S1,15637	;volatile
  8286                           
  8287                           ;daq.c: 246:    SPI1CON2 = S2;
  8288  000BC8  0060  F34F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  8289                           
  8290                           ;daq.c: 247:    SPI1CLK = SC;
  8291  000BCE  0060  F34B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  8292                           
  8293                           ;daq.c: 248:    SPI1BAUD = SB;
  8294  000BD4  0060  F347  FD19   	movff	dac_spi_control@SB,15641	;volatile
  8295                           
  8296                           ;daq.c: 249:    SPI1CON0 = S0;
  8297  000BDA  0060  F357  FD14   	movff	dac_spi_control@S0,15636	;volatile
  8298  000BE0                     L3:
  8299                           
  8300                           ;daq.c: 250:    SPI1CON0bits.EN = 1;
  8301  000BE0  8F14               	bsf	20,7,b	;volatile
  8302  000BE2                     l2010:
  8303                           
  8304                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  8305  000BE2  52E5               	movf	postdec1,f,c
  8306  000BE4  0012               	return		;funcret
  8307  000BE6                     __end_of_dac_spi_control:
  8308                           	opt callstack 0
  8309                           
  8310 ;; *************** function _read_cal_data *****************
  8311 ;; Defined at:
  8312 ;;		line 368 in file "daq.c"
  8313 ;; Parameters:    Size  Location     Type
  8314 ;;		None
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;  x               2  [STACK] unsigned short 
  8317 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  8318 ;;		 -> r_cal(171), 
  8319 ;;  y               2  [STACK] unsigned short 
  8320 ;;  crcVal_save     1  [STACK] unsigned char 
  8321 ;; Return value:  Size  Location     Type
  8322 ;;                  1  [STACK] _Bool 
  8323 ;; Registers used:
  8324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  8325 ;; Tracked objects:
  8326 ;;		On entry : 0/39
  8327 ;;		On exit  : 0/0
  8328 ;;		Unchanged: 0/0
  8329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8334 ;;Total ram usage:        0 bytes
  8335 ;; Hardware stack levels used:    1
  8336 ;; Hardware stack levels required when called:   17
  8337 ;; This function calls:
  8338 ;;		_CRC_8BitDataWrite
  8339 ;;		_CRC_CalculatedResultGet
  8340 ;;		_CRC_Initialize
  8341 ;;		_CRC_IsBusy
  8342 ;;		_CRC_Start
  8343 ;;		_DATAEE_ReadByte
  8344 ;; This function is called by:
  8345 ;;		_main
  8346 ;; This function uses a reentrant model
  8347 ;;
  8348                           
  8349                           	psect	text11
  8350  01CECA                     __ptext11:
  8351                           	opt callstack 0
  8352  01CECA                     _read_cal_data:
  8353                           	opt callstack 0
  8354                           
  8355                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8356  01CECA  0E07               	movlw	7
  8357  01CECC  26E1               	addwf	fsr1l,f,c
  8358  01CECE  0E00               	movlw	0
  8359  01CED0  22E2               	addwfc	fsr1h,f,c
  8360                           
  8361                           ;daq.c: 370:  uint16_t x = 0, y;
  8362                           ;stkvar	_x @ sp[(-7)+0]
  8363                           
  8364                           ;incstack = 0
  8365  01CED2  0EF9               	movlw	-7
  8366  01CED4  6AE3               	clrf	plusw1,c
  8367  01CED6  0EFA               	movlw	-6
  8368  01CED8  6AE3               	clrf	plusw1,c
  8369                           
  8370                           ;daq.c: 371:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 373:  y = sizeof(r_cal);
  8371  01CEDA  0EAB               	movlw	171
  8372  01CEDC  6E34               	movwf	(btemp+10)^0,c
  8373  01CEDE  0E00               	movlw	0
  8374  01CEE0  6E35               	movwf	(btemp+11)^0,c
  8375                           
  8376                           ;stkvar	_y @ sp[(-7)+4]
  8377  01CEE2  0EFD               	movlw	-3
  8378  01CEE4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8379  01CEEA  0EFE               	movlw	-2
  8380  01CEEC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8381                           
  8382                           ;daq.c: 374:  r_cal_ptr = (uint8_t*) & r_cal;
  8383                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8384  01CEF2  0E05               	movlw	high _r_cal
  8385  01CEF4  6E2A               	movwf	btemp^0,c
  8386  01CEF6  0EFC               	movlw	-4
  8387  01CEF8  0060  F0AB  FFE3   	movff	btemp,plusw1
  8388  01CEFE  0E00               	movlw	low _r_cal
  8389  01CF00  6E2A               	movwf	btemp^0,c
  8390  01CF02  0EFB               	movlw	-5
  8391  01CF04  0060  F0AB  FFE3   	movff	btemp,plusw1
  8392                           
  8393                           ;daq.c: 376:  CRC_Initialize();
  8394  01CF0A  EC24  F004         	call	_CRC_Initialize	;wreg free
  8395                           
  8396                           ; BSR set to: 0
  8397                           ;daq.c: 379:  CRC_Start();
  8398  01CF0E  EC5D  F011         	call	_CRC_Start	;wreg free
  8399  01CF12                     l14050:
  8400                           
  8401                           ;daq.c: 382:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  8402                           ;stkvar	_x @ sp[(-7)+0]
  8403  01CF12  0EF9               	movlw	-7
  8404  01CF14  006F FF8F FFE6     	movff	plusw1,postinc1
  8405  01CF1A  006F FF8F FFE6     	movff	plusw1,postinc1
  8406  01CF20  EC43  F00D         	call	_DATAEE_ReadByte	;wreg free
  8407                           
  8408                           ;stkvar	_x @ sp[(-7)+0]
  8409  01CF24  0EF9               	movlw	-7
  8410  01CF26  006F FF8C  F034    	movff	plusw1,btemp+10
  8411  01CF2C  0EFA               	movlw	-6
  8412  01CF2E  006F FF8C  F035    	movff	plusw1,btemp+11
  8413                           
  8414                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8415  01CF34  0EFB               	movlw	-5
  8416  01CF36  006F FF8C  F032    	movff	plusw1,btemp+8
  8417  01CF3C  0EFC               	movlw	-4
  8418  01CF3E  006F FF8C  F033    	movff	plusw1,btemp+9
  8419  01CF44  5034               	movf	(btemp+10)^0,w,c
  8420  01CF46  2432               	addwf	(btemp+8)^0,w,c
  8421  01CF48  6ED9               	movwf	fsr2l,c
  8422  01CF4A  5035               	movf	(btemp+11)^0,w,c
  8423  01CF4C  2033               	addwfc	(btemp+9)^0,w,c
  8424  01CF4E  6EDA               	movwf	fsr2h,c
  8425  01CF50  0060  F0AB  FFDF   	movff	btemp,indf2
  8426                           
  8427                           ;daq.c: 383:  } while (++x < y);
  8428                           ;stkvar	_y @ sp[(-7)+4]
  8429  01CF56  0EFD               	movlw	-3
  8430  01CF58  006F FF8C  F034    	movff	plusw1,btemp+10
  8431  01CF5E  0EFE               	movlw	-2
  8432  01CF60  006F FF8C  F035    	movff	plusw1,btemp+11
  8433                           
  8434                           ;stkvar	_x @ sp[(-7)+0]
  8435  01CF66  0EF9               	movlw	-7
  8436  01CF68  50E3               	movf	plusw1,w,c
  8437  01CF6A  0F01               	addlw	1
  8438  01CF6C  6E2A               	movwf	btemp^0,c
  8439  01CF6E  0EF9               	movlw	-7
  8440  01CF70  0060  F0AB  FFE3   	movff	btemp,plusw1
  8441  01CF76  6A2A               	clrf	btemp^0,c
  8442  01CF78  0EFA               	movlw	-6
  8443  01CF7A  50E3               	movf	plusw1,w,c
  8444  01CF7C  202A               	addwfc	btemp^0,w,c
  8445  01CF7E  6E2A               	movwf	btemp^0,c
  8446  01CF80  0EFA               	movlw	-6
  8447  01CF82  0060  F0AB  FFE3   	movff	btemp,plusw1
  8448  01CF88  0EF9               	movlw	-7
  8449  01CF8A  006F FF8C  F032    	movff	plusw1,btemp+8
  8450  01CF90  0EFA               	movlw	-6
  8451  01CF92  006F FF8C  F033    	movff	plusw1,btemp+9
  8452  01CF98  5034               	movf	(btemp+10)^0,w,c
  8453  01CF9A  5C32               	subwf	(btemp+8)^0,w,c
  8454  01CF9C  5035               	movf	(btemp+11)^0,w,c
  8455  01CF9E  5833               	subwfb	(btemp+9)^0,w,c
  8456  01CFA0  A0D8               	btfss	status,0,c
  8457  01CFA2  D7B7               	goto	l14050
  8458                           
  8459                           ;daq.c: 384:  crcVal_save = r_cal.crc;
  8460                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8461  01CFA4  0EFF               	movlw	-1
  8462  01CFA6  0061  F6AB  FFE3   	movff	_r_cal+170,plusw1
  8463                           
  8464                           ;daq.c: 386:  if (r_cal.checkmark == 0x1957) {
  8465  01CFAC  0E57               	movlw	87
  8466  01CFAE  0105               	movlb	5	; () banked
  8467  01CFB0  19A8               	xorwf	(_r_cal+168)& (0+255),w,b
  8468  01CFB2  E163               	bnz	l14070
  8469  01CFB4  0E19               	movlw	25
  8470  01CFB6  19A9               	xorwf	(_r_cal+169)& (0+255),w,b
  8471  01CFB8  A4D8               	btfss	status,2,c
  8472  01CFBA  D05F               	goto	u13270
  8473                           
  8474                           ; BSR set to: 5
  8475                           ;daq.c: 387:   r_cal.crc = 0x42;
  8476  01CFBC  0E42               	movlw	66
  8477  01CFBE  6FAA               	movwf	(_r_cal+170)& (0+255),b
  8478                           
  8479                           ; BSR set to: 5
  8480                           ;daq.c: 388:   x = 0;
  8481                           ;stkvar	_x @ sp[(-7)+0]
  8482  01CFC0  0EF9               	movlw	-7
  8483  01CFC2  6AE3               	clrf	plusw1,c
  8484  01CFC4  0EFA               	movlw	-6
  8485  01CFC6  6AE3               	clrf	plusw1,c
  8486  01CFC8                     l14062:
  8487                           
  8488                           ;daq.c: 391:    CRC_8BitDataWrite(r_cal_ptr[x]);
  8489                           ;stkvar	_x @ sp[(-7)+0]
  8490  01CFC8  0EF9               	movlw	-7
  8491  01CFCA  006F FF8C  F034    	movff	plusw1,btemp+10
  8492  01CFD0  0EFA               	movlw	-6
  8493  01CFD2  006F FF8C  F035    	movff	plusw1,btemp+11
  8494                           
  8495                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8496  01CFD8  0EFB               	movlw	-5
  8497  01CFDA  006F FF8C  F032    	movff	plusw1,btemp+8
  8498  01CFE0  0EFC               	movlw	-4
  8499  01CFE2  006F FF8C  F033    	movff	plusw1,btemp+9
  8500  01CFE8  5034               	movf	(btemp+10)^0,w,c
  8501  01CFEA  2432               	addwf	(btemp+8)^0,w,c
  8502  01CFEC  6ED9               	movwf	fsr2l,c
  8503  01CFEE  5035               	movf	(btemp+11)^0,w,c
  8504  01CFF0  2033               	addwfc	(btemp+9)^0,w,c
  8505  01CFF2  6EDA               	movwf	fsr2h,c
  8506  01CFF4  50DF               	movf	indf2,w,c
  8507  01CFF6  6EE6               	movwf	postinc1,c
  8508  01CFF8  ECCE  F010         	call	_CRC_8BitDataWrite	;wreg free
  8509  01CFFC                     l14064:
  8510  01CFFC  ECF0  F010         	call	_CRC_IsBusy	;wreg free
  8511  01D000  502A               	movf	btemp^0,w,c
  8512  01D002  A4D8               	btfss	status,2,c
  8513  01D004  D7FB               	goto	l14064
  8514                           
  8515                           ;daq.c: 393:   } while (++x < y);
  8516                           ;stkvar	_y @ sp[(-7)+4]
  8517  01D006  0EFD               	movlw	-3
  8518  01D008  006F FF8C  F034    	movff	plusw1,btemp+10
  8519  01D00E  0EFE               	movlw	-2
  8520  01D010  006F FF8C  F035    	movff	plusw1,btemp+11
  8521                           
  8522                           ;stkvar	_x @ sp[(-7)+0]
  8523  01D016  0EF9               	movlw	-7
  8524  01D018  50E3               	movf	plusw1,w,c
  8525  01D01A  0F01               	addlw	1
  8526  01D01C  6E2A               	movwf	btemp^0,c
  8527  01D01E  0EF9               	movlw	-7
  8528  01D020  0060  F0AB  FFE3   	movff	btemp,plusw1
  8529  01D026  6A2A               	clrf	btemp^0,c
  8530  01D028  0EFA               	movlw	-6
  8531  01D02A  50E3               	movf	plusw1,w,c
  8532  01D02C  202A               	addwfc	btemp^0,w,c
  8533  01D02E  6E2A               	movwf	btemp^0,c
  8534  01D030  0EFA               	movlw	-6
  8535  01D032  0060  F0AB  FFE3   	movff	btemp,plusw1
  8536  01D038  0EF9               	movlw	-7
  8537  01D03A  006F FF8C  F032    	movff	plusw1,btemp+8
  8538  01D040  0EFA               	movlw	-6
  8539  01D042  006F FF8C  F033    	movff	plusw1,btemp+9
  8540  01D048  5034               	movf	(btemp+10)^0,w,c
  8541  01D04A  5C32               	subwf	(btemp+8)^0,w,c
  8542  01D04C  5035               	movf	(btemp+11)^0,w,c
  8543  01D04E  5833               	subwfb	(btemp+9)^0,w,c
  8544  01D050  A0D8               	btfss	status,0,c
  8545  01D052  D7BA               	goto	l14062
  8546                           
  8547                           ;daq.c: 394:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  8548  01D054  0E00               	movlw	0
  8549  01D056  6EE6               	movwf	postinc1,c
  8550  01D058  0E00               	movlw	0
  8551  01D05A  6EE6               	movwf	postinc1,c
  8552  01D05C  0E00               	movlw	0
  8553  01D05E  6EE6               	movwf	postinc1,c
  8554  01D060  ECB8  F0EE         	call	_CRC_CalculatedResultGet	;wreg free
  8555                           
  8556                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8557  01D064  0EFF               	movlw	-1
  8558  01D066  50E3               	movf	plusw1,w,c
  8559  01D068  6E34               	movwf	(btemp+10)^0,c
  8560  01D06A  6A35               	clrf	(btemp+11)^0,c
  8561  01D06C  5034               	movf	(btemp+10)^0,w,c
  8562  01D06E  182A               	xorwf	btemp^0,w,c
  8563  01D070  E104               	bnz	u13270
  8564  01D072  5035               	movf	(btemp+11)^0,w,c
  8565  01D074  182B               	xorwf	(btemp+1)^0,w,c
  8566  01D076  B4D8               	btfsc	status,2,c
  8567  01D078  D002               	goto	l14078
  8568  01D07A                     u13270:
  8569  01D07A                     l14070:
  8570                           
  8571                           ;daq.c: 395:    return 0;
  8572  01D07A  0E00               	movlw	0
  8573  01D07C  D005               	goto	L4
  8574  01D07E                     l14078:
  8575                           
  8576                           ;daq.c: 399:  r_cal.crc = crcVal_save;
  8577                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8578  01D07E  0EFF               	movlw	-1
  8579  01D080  006F FF8C  F5AA    	movff	plusw1,_r_cal+170
  8580                           
  8581                           ;daq.c: 400:  return 1;
  8582  01D086  0E01               	movlw	1
  8583  01D088                     L4:
  8584  01D088  6E2A               	movwf	btemp^0,c
  8585                           
  8586                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8587  01D08A  0EF9               	movlw	249
  8588  01D08C  26E1               	addwf	fsr1l,f,c
  8589  01D08E  0EFF               	movlw	255
  8590  01D090  22E2               	addwfc	fsr1h,f,c
  8591  01D092  0012               	return		;funcret
  8592  01D094                     __end_of_read_cal_data:
  8593                           	opt callstack 0
  8594                           
  8595 ;; *************** function _DATAEE_ReadByte *****************
  8596 ;; Defined at:
  8597 ;;		line 194 in file "mcc_generated_files/memory.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;  bAdd            2  [STACK] unsigned short 
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;		None
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  1  [STACK] unsigned char 
  8604 ;; Registers used:
  8605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/39
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8615 ;;Total ram usage:        0 bytes
  8616 ;; Hardware stack levels used:    1
  8617 ;; Hardware stack levels required when called:   15
  8618 ;; This function calls:
  8619 ;;		Nothing
  8620 ;; This function is called by:
  8621 ;;		_read_cal_data
  8622 ;; This function uses a reentrant model
  8623 ;;
  8624                           
  8625                           	psect	text12
  8626  001A86                     __ptext12:
  8627                           	opt callstack 0
  8628  001A86                     _DATAEE_ReadByte:
  8629                           	opt callstack 14
  8630                           
  8631                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  8632                           ;stkvar	_bAdd @ sp[(0)+-2]
  8633                           
  8634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8635                           ;incstack = 0
  8636  001A86  0EFF               	movlw	255
  8637  001A88  24E1               	addwf	fsr1l,w,c
  8638  001A8A  6ED9               	movwf	fsr2l,c
  8639  001A8C  0EFF               	movlw	255
  8640  001A8E  20E2               	addwfc	fsr1h,w,c
  8641  001A90  6EDA               	movwf	fsr2h,c
  8642  001A92  50DF               	movf	indf2,w,c
  8643  001A94  0B03               	andlw	3
  8644  001A96  0139               	movlb	57	; () banked
  8645  001A98  6FE1               	movwf	225,b	;volatile
  8646                           
  8647                           ; BSR set to: 57
  8648                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  8649                           ;stkvar	_bAdd @ sp[(0)+-2]
  8650  001A9A  0EFE               	movlw	-2
  8651  001A9C  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  8652                           
  8653                           ; BSR set to: 57
  8654                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  8655  001AA2  0E3F               	movlw	-193
  8656  001AA4  17E5               	andwf	229,f,b	;volsfr
  8657                           
  8658                           ; BSR set to: 57
  8659                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  8660  001AA6  81E5               	bsf	229,0,b	;volsfr
  8661                           
  8662                           ; BSR set to: 57
  8663                           ;mcc_generated_files/memory.c: 200:     __nop();
  8664  001AA8  F000               	nop	
  8665                           
  8666                           ;mcc_generated_files/memory.c: 201:     __nop();
  8667  001AAA  F000               	nop	
  8668                           
  8669                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  8670  001AAC  006E F78C  F02A    	movff	14819,btemp	;volatile
  8671                           
  8672                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  8673  001AB2  52E5               	movf	postdec1,f,c
  8674  001AB4  52E5               	movf	postdec1,f,c
  8675  001AB6  0012               	return		;funcret
  8676  001AB8                     __end_of_DATAEE_ReadByte:
  8677                           	opt callstack 0
  8678                           
  8679 ;; *************** function _load_hist_data *****************
  8680 ;; Defined at:
  8681 ;;		line 224 in file "mbmc.c"
  8682 ;; Parameters:    Size  Location     Type
  8683 ;;		None
  8684 ;; Auto vars:     Size  Location     Type
  8685 ;;		None
  8686 ;; Return value:  Size  Location     Type
  8687 ;;                  1  [STACK] void 
  8688 ;; Registers used:
  8689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, btemp+11
  8690 ;; Tracked objects:
  8691 ;;		On entry : 3F/39
  8692 ;;		On exit  : 3F/39
  8693 ;;		Unchanged: 0/0
  8694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8699 ;;Total ram usage:        0 bytes
  8700 ;; Hardware stack levels used:    1
  8701 ;; Hardware stack levels required when called:   16
  8702 ;; This function calls:
  8703 ;;		_start_bsoc
  8704 ;;		_stop_bsoc
  8705 ;; This function is called by:
  8706 ;;		_main
  8707 ;; This function uses a reentrant model
  8708 ;;
  8709                           
  8710                           	psect	text13
  8711  0020FE                     __ptext13:
  8712                           	opt callstack 0
  8713  0020FE                     _load_hist_data:
  8714                           	opt callstack 14
  8715                           
  8716                           ;mbmc.c: 226:  stop_bsoc();
  8717                           
  8718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8719                           ;incstack = 0
  8720  0020FE  EC69  F011         	call	_stop_bsoc	;wreg free
  8721                           
  8722                           ; BSR set to: 57
  8723                           ;mbmc.c: 227:  C.hist[0].updates++;
  8724  002102  EE22  F1E9         	lfsr	2,_C+234	;volatile
  8725  002106  2ADE               	incf	postinc2,f,c
  8726  002108  0E00               	movlw	0
  8727  00210A  22DE               	addwfc	postinc2,f,c
  8728  00210C  22DE               	addwfc	postinc2,f,c
  8729  00210E  22DE               	addwfc	postinc2,f,c
  8730                           
  8731                           ; BSR set to: 57
  8732                           ;mbmc.c: 228:  start_bsoc();
  8733  002110  ECE6  F00F         	call	_start_bsoc	;wreg free
  8734                           
  8735                           ; BSR set to: 57
  8736                           ; _load_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8737  002114  0012               	return		;funcret
  8738  002116                     __end_of_load_hist_data:
  8739                           	opt callstack 0
  8740                           
  8741 ;; *************** function _init_port_dma *****************
  8742 ;; Defined at:
  8743 ;;		line 104 in file "eadog.c"
  8744 ;; Parameters:    Size  Location     Type
  8745 ;;		None
  8746 ;; Auto vars:     Size  Location     Type
  8747 ;;		None
  8748 ;; Return value:  Size  Location     Type
  8749 ;;                  1  [STACK] void 
  8750 ;; Registers used:
  8751 ;;		wreg, status,2
  8752 ;; Tracked objects:
  8753 ;;		On entry : 0/2
  8754 ;;		On exit  : 3F/3B
  8755 ;;		Unchanged: 0/0
  8756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8761 ;;Total ram usage:        0 bytes
  8762 ;; Hardware stack levels used:    1
  8763 ;; Hardware stack levels required when called:   15
  8764 ;; This function calls:
  8765 ;;		Nothing
  8766 ;; This function is called by:
  8767 ;;		_main
  8768 ;; This function uses a reentrant model
  8769 ;;
  8770                           
  8771                           	psect	text14
  8772  001AB8                     __ptext14:
  8773                           	opt callstack 0
  8774  001AB8                     _init_port_dma:
  8775                           	opt callstack 15
  8776                           
  8777                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  8778                           
  8779                           ; BSR set to: 57
  8780                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8781                           ;incstack = 0
  8782  001AB8  0E3F               	movlw	-193
  8783  001ABA  013B               	movlb	59	; () banked
  8784  001ABC  17DD               	andwf	221,f,b	;volatile
  8785                           
  8786                           ; BSR set to: 59
  8787                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  8788  001ABE  9BDD               	bcf	221,5,b	;volatile
  8789                           
  8790                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  8791  001AC0  51DD               	movf	221,w,b	;volatile
  8792  001AC2  0BF9               	andlw	-7
  8793  001AC4  0902               	iorlw	2
  8794  001AC6  6FDD               	movwf	221,b	;volatile
  8795                           
  8796                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  8797  001AC8  0EE7               	movlw	-25
  8798  001ACA  17DD               	andwf	221,f,b	;volatile
  8799                           
  8800                           ; BSR set to: 59
  8801                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  8802  001ACC  81DD               	bsf	221,0,b	;volatile
  8803                           
  8804                           ; BSR set to: 59
  8805                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  8806  001ACE  9DDC               	bcf	220,6,b	;volatile
  8807                           
  8808                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  8809  001AD0  0E3D               	movlw	61
  8810  001AD2  6FD1               	movwf	209,b	;volatile
  8811  001AD4  0EEA               	movlw	234
  8812  001AD6  6FD0               	movwf	208,b	;volatile
  8813                           
  8814                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  8815  001AD8  0EFF               	movlw	low _port_data
  8816  001ADA  6FD9               	movwf	217,b	;volatile
  8817  001ADC  0E06               	movlw	high _port_data
  8818  001ADE  6FDA               	movwf	218,b	;volatile
  8819  001AE0  0E00               	movlw	low (_port_data shr (0+16))
  8820  001AE2  6FDB               	movwf	219,b	;volatile
  8821                           
  8822                           ; BSR set to: 59
  8823                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  8824  001AE4  9BDC               	bcf	220,5,b	;volatile
  8825                           
  8826                           ; BSR set to: 59
  8827                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8828  001AE6  0012               	return		;funcret
  8829  001AE8                     __end_of_init_port_dma:
  8830                           	opt callstack 0
  8831                           
  8832 ;; *************** function _init_display *****************
  8833 ;; Defined at:
  8834 ;;		line 38 in file "eadog.c"
  8835 ;; Parameters:    Size  Location     Type
  8836 ;;		None
  8837 ;; Auto vars:     Size  Location     Type
  8838 ;;		None
  8839 ;; Return value:  Size  Location     Type
  8840 ;;                  1  [STACK] void 
  8841 ;; Registers used:
  8842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8843 ;; Tracked objects:
  8844 ;;		On entry : 3F/3B
  8845 ;;		On exit  : 3F/3D
  8846 ;;		Unchanged: 0/0
  8847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8852 ;;Total ram usage:        0 bytes
  8853 ;; Hardware stack levels used:    1
  8854 ;; Hardware stack levels required when called:   17
  8855 ;; This function calls:
  8856 ;;		_ringBufS_init
  8857 ;;		_send_lcd_cmd
  8858 ;;		_send_lcd_cmd_long
  8859 ;;		_send_lcd_data
  8860 ;;		_wdtdelay
  8861 ;; This function is called by:
  8862 ;;		_main
  8863 ;; This function uses a reentrant model
  8864 ;;
  8865                           
  8866                           	psect	text15
  8867  01F7F0                     __ptext15:
  8868                           	opt callstack 0
  8869  01F7F0                     _init_display:
  8870                           	opt callstack 13
  8871                           
  8872                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  8873                           
  8874                           ; BSR set to: 59
  8875                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8876                           ;incstack = 0
  8877  01F7F0  0E83               	movlw	low _ring_buf1
  8878  01F7F2  0100               	movlb	0	; () banked
  8879  01F7F4  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  8880  01F7F6  0E04               	movlw	high _ring_buf1
  8881  01F7F8  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  8882                           
  8883                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  8884  01F7FA  0E40               	movlw	low _ring_buf2
  8885  01F7FC  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  8886  01F7FE  0E04               	movlw	high _ring_buf2
  8887  01F800  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  8891  01F802  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  8892  01F808  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  8893  01F80E  EC2B  F00E         	call	_ringBufS_init	;wreg free
  8894                           
  8895                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  8896  01F812  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  8897  01F818  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  8898  01F81E  EC2B  F00E         	call	_ringBufS_init	;wreg free
  8899                           
  8900                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  8901  01F822  84BE               	bsf	190,2,c	;volatile
  8902                           
  8903                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  8904  01F824  013D               	movlb	61	; () banked
  8905  01F826  9F14               	bcf	20,7,b	;volatile
  8906                           
  8907                           ; BSR set to: 61
  8908                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  8909  01F828  0E20               	movlw	32
  8910  01F82A  6F15               	movwf	21,b	;volatile
  8911                           
  8912                           ; BSR set to: 61
  8913                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  8914  01F82C  0E03               	movlw	3
  8915  01F82E  6F16               	movwf	22,b	;volatile
  8916                           
  8917                           ; BSR set to: 61
  8918                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  8919  01F830  0E04               	movlw	4
  8920  01F832  6F19               	movwf	25,b	;volatile
  8921                           
  8922                           ; BSR set to: 61
  8923                           ;eadog.c: 55:  SPI1CLK = 0x02;
  8924  01F834  0E02               	movlw	2
  8925  01F836  6F1C               	movwf	28,b	;volatile
  8926                           
  8927                           ; BSR set to: 61
  8928                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  8929  01F838  0E83               	movlw	131
  8930  01F83A  6F14               	movwf	20,b	;volatile
  8931                           
  8932                           ; BSR set to: 61
  8933                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  8934  01F83C  8F14               	bsf	20,7,b	;volatile
  8935                           
  8936                           ; BSR set to: 61
  8937                           ;eadog.c: 60:  wdtdelay(350000);
  8938  01F83E  0E30               	movlw	48
  8939  01F840  6EE6               	movwf	postinc1,c
  8940  01F842  0E57               	movlw	87
  8941  01F844  6EE6               	movwf	postinc1,c
  8942  01F846  0E05               	movlw	5
  8943  01F848  6EE6               	movwf	postinc1,c
  8944  01F84A  0E00               	movlw	0
  8945  01F84C  6EE6               	movwf	postinc1,c
  8946  01F84E  EC2B  F009         	call	_wdtdelay	;wreg free
  8947                           
  8948                           ; BSR set to: 0
  8949                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  8950  01F852  0E46               	movlw	70
  8951  01F854  6EE6               	movwf	postinc1,c
  8952  01F856  EC8E  F00B         	call	_send_lcd_cmd_long	;wreg free
  8953                           
  8954                           ; BSR set to: 0
  8955                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  8956  01F85A  0E41               	movlw	65
  8957  01F85C  6EE6               	movwf	postinc1,c
  8958  01F85E  ECAE  F00B         	call	_send_lcd_cmd	;wreg free
  8959                           
  8960                           ; BSR set to: 0
  8961                           ;eadog.c: 63:  wdtdelay(80);
  8962  01F862  0E50               	movlw	80
  8963  01F864  6EE6               	movwf	postinc1,c
  8964  01F866  0E00               	movlw	0
  8965  01F868  6EE6               	movwf	postinc1,c
  8966  01F86A  0E00               	movlw	0
  8967  01F86C  6EE6               	movwf	postinc1,c
  8968  01F86E  0E00               	movlw	0
  8969  01F870  6EE6               	movwf	postinc1,c
  8970  01F872  EC2B  F009         	call	_wdtdelay	;wreg free
  8971                           
  8972                           ; BSR set to: 0
  8973                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  8974  01F876  0E53               	movlw	83
  8975  01F878  6EE6               	movwf	postinc1,c
  8976  01F87A  ECAE  F00B         	call	_send_lcd_cmd	;wreg free
  8977                           
  8978                           ; BSR set to: 0
  8979                           ;eadog.c: 65:  send_lcd_data(2);
  8980  01F87E  0E02               	movlw	2
  8981  01F880  6EE6               	movwf	postinc1,c
  8982  01F882  EC58  F00F         	call	_send_lcd_data	;wreg free
  8983                           
  8984                           ; BSR set to: 0
  8985                           ;eadog.c: 66:  wdtdelay(80);
  8986  01F886  0E50               	movlw	80
  8987  01F888  6EE6               	movwf	postinc1,c
  8988  01F88A  0E00               	movlw	0
  8989  01F88C  6EE6               	movwf	postinc1,c
  8990  01F88E  0E00               	movlw	0
  8991  01F890  6EE6               	movwf	postinc1,c
  8992  01F892  0E00               	movlw	0
  8993  01F894  6EE6               	movwf	postinc1,c
  8994  01F896  EC2B  F009         	call	_wdtdelay	;wreg free
  8995                           
  8996                           ; BSR set to: 0
  8997                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  8998  01F89A  0E51               	movlw	81
  8999  01F89C  6EE6               	movwf	postinc1,c
  9000  01F89E  EC8E  F00B         	call	_send_lcd_cmd_long	;wreg free
  9001                           
  9002                           ; BSR set to: 0
  9003                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  9004  01F8A2  013D               	movlb	61	; () banked
  9005  01F8A4  9F14               	bcf	20,7,b	;volatile
  9006                           
  9007                           ; BSR set to: 61
  9008                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  9009  01F8A6  0E02               	movlw	2
  9010  01F8A8  6F16               	movwf	22,b	;volatile
  9011                           
  9012                           ; BSR set to: 61
  9013                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  9014  01F8AA  8F14               	bsf	20,7,b	;volatile
  9015                           
  9016                           ; BSR set to: 61
  9017                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  9018  01F8AC  931A               	bcf	26,1,b	;volatile
  9019                           
  9020                           ; BSR set to: 61
  9021                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  9022  01F8AE  0E3F               	movlw	-193
  9023  01F8B0  013B               	movlb	59	; () banked
  9024  01F8B2  17FD               	andwf	253,f,b	;volatile
  9025                           
  9026                           ; BSR set to: 59
  9027                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  9028  01F8B4  9BFD               	bcf	253,5,b	;volatile
  9029                           
  9030                           ; BSR set to: 59
  9031                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  9032  01F8B6  51FD               	movf	253,w,b	;volatile
  9033  01F8B8  0BF9               	andlw	-7
  9034  01F8BA  0902               	iorlw	2
  9035  01F8BC  6FFD               	movwf	253,b	;volatile
  9036                           
  9037                           ; BSR set to: 59
  9038                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  9039  01F8BE  0EE7               	movlw	-25
  9040  01F8C0  17FD               	andwf	253,f,b	;volatile
  9041                           
  9042                           ; BSR set to: 59
  9043                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  9044  01F8C2  81FD               	bsf	253,0,b	;volatile
  9045                           
  9046                           ; BSR set to: 59
  9047                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  9048  01F8C4  0E83               	movlw	low _ring_buf1
  9049  01F8C6  6FF9               	movwf	249,b	;volatile
  9050  01F8C8  0E04               	movlw	high _ring_buf1
  9051  01F8CA  6FFA               	movwf	250,b	;volatile
  9052  01F8CC  0E00               	movlw	low (_ring_buf1 shr (0+16))
  9053  01F8CE  6FFB               	movwf	251,b	;volatile
  9054                           
  9055                           ; BSR set to: 59
  9056                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  9057  01F8D0  9BFC               	bcf	252,5,b	;volatile
  9058                           
  9059                           ; BSR set to: 59
  9060                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  9061  01F8D2  013D               	movlb	61	; () banked
  9062  01F8D4  831A               	bsf	26,1,b	;volatile
  9063                           
  9064                           ; BSR set to: 61
  9065                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  9066  01F8D6  94BE               	bcf	190,2,c	;volatile
  9067                           
  9068                           ; BSR set to: 61
  9069                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9070  01F8D8  0012               	return		;funcret
  9071  01F8DA                     __end_of_init_display:
  9072                           	opt callstack 0
  9073                           
  9074 ;; *************** function _send_lcd_data *****************
  9075 ;; Defined at:
  9076 ;;		line 123 in file "eadog.c"
  9077 ;; Parameters:    Size  Location     Type
  9078 ;;  data            1  [STACK] const unsigned char 
  9079 ;; Auto vars:     Size  Location     Type
  9080 ;;		None
  9081 ;; Return value:  Size  Location     Type
  9082 ;;                  1  [STACK] void 
  9083 ;; Registers used:
  9084 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9085 ;; Tracked objects:
  9086 ;;		On entry : 3F/0
  9087 ;;		On exit  : 3F/0
  9088 ;;		Unchanged: 0/0
  9089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9094 ;;Total ram usage:        0 bytes
  9095 ;; Hardware stack levels used:    1
  9096 ;; Hardware stack levels required when called:   16
  9097 ;; This function calls:
  9098 ;;		_SPI1_Exchange8bit
  9099 ;;		_wdtdelay
  9100 ;; This function is called by:
  9101 ;;		_init_display
  9102 ;; This function uses a reentrant model
  9103 ;;
  9104                           
  9105                           	psect	text16
  9106  001EB0                     __ptext16:
  9107                           	opt callstack 0
  9108  001EB0                     _send_lcd_data:
  9109                           	opt callstack 13
  9110                           
  9111                           ; BSR set to: 61
  9112                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9113                           ;incstack = 0
  9114                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  9115  001EB0  94BC               	bcf	188,2,c	;volatile
  9116                           
  9117                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  9118                           ;stkvar	_data @ sp[(0)+-1]
  9119  001EB2  0EFF               	movlw	-1
  9120  001EB4  50E3               	movf	plusw1,w,c
  9121  001EB6  6EE6               	movwf	postinc1,c
  9122  001EB8  EC28  F010         	call	_SPI1_Exchange8bit	;wreg free
  9123                           
  9124                           ; BSR set to: 57
  9125                           ;eadog.c: 127:  wdtdelay(8);
  9126  001EBC  0E08               	movlw	8
  9127  001EBE  6EE6               	movwf	postinc1,c
  9128  001EC0  0E00               	movlw	0
  9129  001EC2  6EE6               	movwf	postinc1,c
  9130  001EC4  0E00               	movlw	0
  9131  001EC6  6EE6               	movwf	postinc1,c
  9132  001EC8  0E00               	movlw	0
  9133  001ECA  6EE6               	movwf	postinc1,c
  9134  001ECC  EC2B  F009         	call	_wdtdelay	;wreg free
  9135                           
  9136                           ; BSR set to: 0
  9137                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  9138  001ED0  52E5               	movf	postdec1,f,c
  9139  001ED2  0012               	return		;funcret
  9140  001ED4                     __end_of_send_lcd_data:
  9141                           	opt callstack 0
  9142                           
  9143 ;; *************** function _send_lcd_cmd_long *****************
  9144 ;; Defined at:
  9145 ;;		line 139 in file "eadog.c"
  9146 ;; Parameters:    Size  Location     Type
  9147 ;;  cmd             1  [STACK] const unsigned char 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;		None
  9150 ;; Return value:  Size  Location     Type
  9151 ;;                  1  [STACK] void 
  9152 ;; Registers used:
  9153 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9154 ;; Tracked objects:
  9155 ;;		On entry : 3F/0
  9156 ;;		On exit  : 3F/0
  9157 ;;		Unchanged: 0/0
  9158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9163 ;;Total ram usage:        0 bytes
  9164 ;; Hardware stack levels used:    1
  9165 ;; Hardware stack levels required when called:   16
  9166 ;; This function calls:
  9167 ;;		_SPI1_Exchange8bit
  9168 ;;		_wdtdelay
  9169 ;; This function is called by:
  9170 ;;		_init_display
  9171 ;; This function uses a reentrant model
  9172 ;;
  9173                           
  9174                           	psect	text17
  9175  00171C                     __ptext17:
  9176                           	opt callstack 0
  9177  00171C                     _send_lcd_cmd_long:
  9178                           	opt callstack 13
  9179                           
  9180                           ; BSR set to: 0
  9181                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9182                           ;incstack = 0
  9183                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  9184  00171C  94BC               	bcf	188,2,c	;volatile
  9185                           
  9186                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  9187  00171E  0EFE               	movlw	254
  9188  001720  6EE6               	movwf	postinc1,c
  9189  001722  EC28  F010         	call	_SPI1_Exchange8bit	;wreg free
  9190                           
  9191                           ; BSR set to: 57
  9192                           ;eadog.c: 143:  wdtdelay(8);
  9193  001726  0E08               	movlw	8
  9194  001728  6EE6               	movwf	postinc1,c
  9195  00172A  0E00               	movlw	0
  9196  00172C  6EE6               	movwf	postinc1,c
  9197  00172E  0E00               	movlw	0
  9198  001730  6EE6               	movwf	postinc1,c
  9199  001732  0E00               	movlw	0
  9200  001734  6EE6               	movwf	postinc1,c
  9201  001736  EC2B  F009         	call	_wdtdelay	;wreg free
  9202                           
  9203                           ; BSR set to: 0
  9204                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  9205                           ;stkvar	_cmd @ sp[(0)+-1]
  9206  00173A  0EFF               	movlw	-1
  9207  00173C  50E3               	movf	plusw1,w,c
  9208  00173E  6EE6               	movwf	postinc1,c
  9209  001740  EC28  F010         	call	_SPI1_Exchange8bit	;wreg free
  9210                           
  9211                           ;eadog.c: 145:  wdtdelay(800);
  9212  001744  0E20               	movlw	32
  9213  001746  6EE6               	movwf	postinc1,c
  9214  001748  0E03               	movlw	3
  9215  00174A  6EE6               	movwf	postinc1,c
  9216  00174C  0E00               	movlw	0
  9217  00174E  6EE6               	movwf	postinc1,c
  9218  001750  0E00               	movlw	0
  9219  001752  6EE6               	movwf	postinc1,c
  9220  001754  EC2B  F009         	call	_wdtdelay	;wreg free
  9221                           
  9222                           ; BSR set to: 0
  9223                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9224  001758  52E5               	movf	postdec1,f,c
  9225  00175A  0012               	return		;funcret
  9226  00175C                     __end_of_send_lcd_cmd_long:
  9227                           	opt callstack 0
  9228                           
  9229 ;; *************** function _send_lcd_cmd *****************
  9230 ;; Defined at:
  9231 ;;		line 130 in file "eadog.c"
  9232 ;; Parameters:    Size  Location     Type
  9233 ;;  cmd             1  [STACK] const unsigned char 
  9234 ;; Auto vars:     Size  Location     Type
  9235 ;;		None
  9236 ;; Return value:  Size  Location     Type
  9237 ;;                  1  [STACK] void 
  9238 ;; Registers used:
  9239 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9240 ;; Tracked objects:
  9241 ;;		On entry : 3F/0
  9242 ;;		On exit  : 3F/0
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9249 ;;Total ram usage:        0 bytes
  9250 ;; Hardware stack levels used:    1
  9251 ;; Hardware stack levels required when called:   16
  9252 ;; This function calls:
  9253 ;;		_SPI1_Exchange8bit
  9254 ;;		_wdtdelay
  9255 ;; This function is called by:
  9256 ;;		_init_display
  9257 ;; This function uses a reentrant model
  9258 ;;
  9259                           
  9260                           	psect	text18
  9261  00175C                     __ptext18:
  9262                           	opt callstack 0
  9263  00175C                     _send_lcd_cmd:
  9264                           	opt callstack 13
  9265                           
  9266                           ; BSR set to: 0
  9267                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9268                           ;incstack = 0
  9269                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  9270  00175C  94BC               	bcf	188,2,c	;volatile
  9271                           
  9272                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  9273  00175E  0EFE               	movlw	254
  9274  001760  6EE6               	movwf	postinc1,c
  9275  001762  EC28  F010         	call	_SPI1_Exchange8bit	;wreg free
  9276                           
  9277                           ; BSR set to: 57
  9278                           ;eadog.c: 134:  wdtdelay(8);
  9279  001766  0E08               	movlw	8
  9280  001768  6EE6               	movwf	postinc1,c
  9281  00176A  0E00               	movlw	0
  9282  00176C  6EE6               	movwf	postinc1,c
  9283  00176E  0E00               	movlw	0
  9284  001770  6EE6               	movwf	postinc1,c
  9285  001772  0E00               	movlw	0
  9286  001774  6EE6               	movwf	postinc1,c
  9287  001776  EC2B  F009         	call	_wdtdelay	;wreg free
  9288                           
  9289                           ; BSR set to: 0
  9290                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  9291                           ;stkvar	_cmd @ sp[(0)+-1]
  9292  00177A  0EFF               	movlw	-1
  9293  00177C  50E3               	movf	plusw1,w,c
  9294  00177E  6EE6               	movwf	postinc1,c
  9295  001780  EC28  F010         	call	_SPI1_Exchange8bit	;wreg free
  9296                           
  9297                           ;eadog.c: 136:  wdtdelay(8);
  9298  001784  0E08               	movlw	8
  9299  001786  6EE6               	movwf	postinc1,c
  9300  001788  0E00               	movlw	0
  9301  00178A  6EE6               	movwf	postinc1,c
  9302  00178C  0E00               	movlw	0
  9303  00178E  6EE6               	movwf	postinc1,c
  9304  001790  0E00               	movlw	0
  9305  001792  6EE6               	movwf	postinc1,c
  9306  001794  EC2B  F009         	call	_wdtdelay	;wreg free
  9307                           
  9308                           ; BSR set to: 0
  9309                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  9310  001798  52E5               	movf	postdec1,f,c
  9311  00179A  0012               	return		;funcret
  9312  00179C                     __end_of_send_lcd_cmd:
  9313                           	opt callstack 0
  9314                           
  9315 ;; *************** function _SPI1_Exchange8bit *****************
  9316 ;; Defined at:
  9317 ;;		line 79 in file "mcc_generated_files/spi1.c"
  9318 ;; Parameters:    Size  Location     Type
  9319 ;;  data            1  [STACK] unsigned char 
  9320 ;; Auto vars:     Size  Location     Type
  9321 ;;		None
  9322 ;; Return value:  Size  Location     Type
  9323 ;;                  1  [STACK] unsigned char 
  9324 ;; Registers used:
  9325 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  9326 ;; Tracked objects:
  9327 ;;		On entry : 0/1
  9328 ;;		On exit  : 3F/39
  9329 ;;		Unchanged: 0/0
  9330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9335 ;;Total ram usage:        0 bytes
  9336 ;; Hardware stack levels used:    1
  9337 ;; Hardware stack levels required when called:   15
  9338 ;; This function calls:
  9339 ;;		Nothing
  9340 ;; This function is called by:
  9341 ;;		_send_lcd_data
  9342 ;;		_send_lcd_cmd
  9343 ;;		_send_lcd_cmd_long
  9344 ;;		_set_dac
  9345 ;; This function uses a reentrant model
  9346 ;;
  9347                           
  9348                           	psect	text19
  9349  002050                     __ptext19:
  9350                           	opt callstack 0
  9351  002050                     _SPI1_Exchange8bit:
  9352                           	opt callstack 14
  9353                           
  9354                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  9355                           
  9356                           ; BSR set to: 0
  9357                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9358                           ;incstack = 0
  9359  002050  0E01               	movlw	1
  9360  002052  013D               	movlb	61	; () banked
  9361  002054  6F12               	movwf	18,b	;volatile
  9362                           
  9363                           ; BSR set to: 61
  9364                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  9365                           ;stkvar	_data @ sp[(0)+-1]
  9366  002056  0EFF               	movlw	-1
  9367  002058  006F FF8F FD11     	movff	plusw1,15633	;volatile
  9368  00205E                     l809:
  9369                           
  9370                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  9371  00205E  0139               	movlb	57	; () banked
  9372  002060  A9A2               	btfss	162,4,b	;volatile
  9373  002062  D7FD               	goto	l809
  9374                           
  9375                           ; BSR set to: 57
  9376                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  9377  002064  006F F440  F02A    	movff	15632,btemp	;volatile
  9378                           
  9379                           ; BSR set to: 57
  9380                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9381  00206A  52E5               	movf	postdec1,f,c
  9382  00206C  0012               	return		;funcret
  9383  00206E                     __end_of_SPI1_Exchange8bit:
  9384                           	opt callstack 0
  9385                           
  9386 ;; *************** function _ringBufS_init *****************
  9387 ;; Defined at:
  9388 ;;		line 22 in file "ringbufs.c"
  9389 ;; Parameters:    Size  Location     Type
  9390 ;;  _this           2  [STACK] PTR volatile struct ring
  9391 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9392 ;; Auto vars:     Size  Location     Type
  9393 ;;		None
  9394 ;; Return value:  Size  Location     Type
  9395 ;;                  1  [STACK] void 
  9396 ;; Registers used:
  9397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9398 ;; Tracked objects:
  9399 ;;		On entry : 0/0
  9400 ;;		On exit  : 0/0
  9401 ;;		Unchanged: 0/0
  9402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9407 ;;Total ram usage:        0 bytes
  9408 ;; Hardware stack levels used:    1
  9409 ;; Hardware stack levels required when called:   16
  9410 ;; This function calls:
  9411 ;;		_memset
  9412 ;; This function is called by:
  9413 ;;		_init_display
  9414 ;; This function uses a reentrant model
  9415 ;;
  9416                           
  9417                           	psect	text20
  9418  001C56                     __ptext20:
  9419                           	opt callstack 0
  9420  001C56                     _ringBufS_init:
  9421                           	opt callstack 13
  9422                           
  9423                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  9424                           
  9425                           ; BSR set to: 57
  9426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9427                           ;incstack = 0
  9428  001C56  0E43               	movlw	67
  9429  001C58  6EE6               	movwf	postinc1,c
  9430  001C5A  0E00               	movlw	0
  9431  001C5C  6EE6               	movwf	postinc1,c
  9432  001C5E  0E00               	movlw	0
  9433  001C60  6EE6               	movwf	postinc1,c
  9434  001C62  0E00               	movlw	0
  9435  001C64  6EE6               	movwf	postinc1,c
  9436                           
  9437                           ;stkvar	__this @ sp[(-4)+-2]
  9438  001C66  0EFA               	movlw	-6
  9439  001C68  006F FF8F FFE6     	movff	plusw1,postinc1
  9440  001C6E  006F FF8F FFE6     	movff	plusw1,postinc1
  9441  001C74  EC73  F0D5         	call	_memset	;wreg free
  9442                           
  9443                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9444  001C78  52E5               	movf	postdec1,f,c
  9445  001C7A  52E5               	movf	postdec1,f,c
  9446  001C7C  0012               	return		;funcret
  9447  001C7E                     __end_of_ringBufS_init:
  9448                           	opt callstack 0
  9449                           
  9450 ;; *************** function _init_bsoc *****************
  9451 ;; Defined at:
  9452 ;;		line 110 in file "bsoc.c"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;		None
  9455 ;; Auto vars:     Size  Location     Type
  9456 ;;		None
  9457 ;; Return value:  Size  Location     Type
  9458 ;;                  1  [STACK] void 
  9459 ;; Registers used:
  9460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9461 ;; Tracked objects:
  9462 ;;		On entry : 0/1
  9463 ;;		On exit  : 0/0
  9464 ;;		Unchanged: 0/0
  9465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9470 ;;Total ram usage:        0 bytes
  9471 ;; Hardware stack levels used:    1
  9472 ;; Hardware stack levels required when called:   18
  9473 ;; This function calls:
  9474 ;;		_TMR3_SetInterruptHandler
  9475 ;;		_Volts_to_SOC
  9476 ;;		___fldiv
  9477 ;;		___flmul
  9478 ;;		___fltol
  9479 ;;		___xxtofl
  9480 ;;		_conv_raw_result
  9481 ;; This function is called by:
  9482 ;;		_main
  9483 ;; This function uses a reentrant model
  9484 ;;
  9485                           
  9486                           	psect	text21
  9487  01BFC2                     __ptext21:
  9488                           	opt callstack 0
  9489  01BFC2                     _init_bsoc:
  9490                           	opt callstack 12
  9491                           
  9492                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  9493                           
  9494                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9495                           ;incstack = 0
  9496  01BFC2  0E00               	movlw	0
  9497  01BFC4  6EE6               	movwf	postinc1,c
  9498  01BFC6  0E00               	movlw	0
  9499  01BFC8  6EE6               	movwf	postinc1,c
  9500  01BFCA  0E7A               	movlw	122
  9501  01BFCC  6EE6               	movwf	postinc1,c
  9502  01BFCE  0E44               	movlw	68
  9503  01BFD0  6EE6               	movwf	postinc1,c
  9504  01BFD2  0E00               	movlw	0
  9505  01BFD4  6EE6               	movwf	postinc1,c
  9506  01BFD6  0E04               	movlw	4
  9507  01BFD8  6EE6               	movwf	postinc1,c
  9508  01BFDA  EC5B  F0C2         	call	_conv_raw_result	;wreg free
  9509  01BFDE  0060  F0AB  FFE6   	movff	btemp,postinc1
  9510  01BFE4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9511  01BFEA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9512  01BFF0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9513  01BFF6  EC71  F0EF         	call	___fltol	;wreg free
  9514  01BFFA  0060  F0AB  FFE6   	movff	btemp,postinc1
  9515  01C000  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9516  01C006  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9517  01C00C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9518  01C012  0E00               	movlw	0
  9519  01C014  6EE6               	movwf	postinc1,c
  9520  01C016  EC63  F0E6         	call	___xxtofl	;wreg free
  9521  01C01A  0060  F0AB  FFE6   	movff	btemp,postinc1
  9522  01C020  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9523  01C026  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9524  01C02C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9525  01C032  ECC2  F0B1         	call	___flmul	;wreg free
  9526  01C036  0060  F0AB  FFE6   	movff	btemp,postinc1
  9527  01C03C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9528  01C042  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9529  01C048  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9530  01C04E  EC71  F0EF         	call	___fltol	;wreg free
  9531  01C052  0060  F0AB  FFE6   	movff	btemp,postinc1
  9532  01C058  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9533  01C05E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9534  01C064  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9535  01C06A  ECDC  F0FE         	call	_Volts_to_SOC	;wreg free
  9536  01C06E  0060  F0A8  F9B5   	movff	btemp,_C+182	;volatile
  9537  01C074  0060  F0AC  F9B6   	movff	btemp+1,_C+183	;volatile
  9538                           
  9539                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  9540  01C07A  EE22  F18B         	lfsr	2,_C+140	;volatile
  9541  01C07E  006F FF7B FFE6     	movff	postinc2,postinc1
  9542  01C084  006F FF7B FFE6     	movff	postinc2,postinc1
  9543  01C08A  006F FF7B FFE6     	movff	postinc2,postinc1
  9544  01C090  006F FF7B FFE6     	movff	postinc2,postinc1
  9545  01C096  0E00               	movlw	0
  9546  01C098  6EE6               	movwf	postinc1,c
  9547  01C09A  0E00               	movlw	0
  9548  01C09C  6EE6               	movwf	postinc1,c
  9549  01C09E  0EC8               	movlw	200
  9550  01C0A0  6EE6               	movwf	postinc1,c
  9551  01C0A2  0E42               	movlw	66
  9552  01C0A4  6EE6               	movwf	postinc1,c
  9553  01C0A6  0E00               	movlw	0
  9554  01C0A8  6EE6               	movwf	postinc1,c
  9555  01C0AA  0E00               	movlw	0
  9556  01C0AC  6EE6               	movwf	postinc1,c
  9557  01C0AE  0E7A               	movlw	122
  9558  01C0B0  6EE6               	movwf	postinc1,c
  9559  01C0B2  0E44               	movlw	68
  9560  01C0B4  6EE6               	movwf	postinc1,c
  9561  01C0B6  0E00               	movlw	0
  9562  01C0B8  6EE6               	movwf	postinc1,c
  9563  01C0BA  0E04               	movlw	4
  9564  01C0BC  6EE6               	movwf	postinc1,c
  9565  01C0BE  EC5B  F0C2         	call	_conv_raw_result	;wreg free
  9566  01C0C2  0060  F0AB  FFE6   	movff	btemp,postinc1
  9567  01C0C8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9568  01C0CE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9569  01C0D4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9570  01C0DA  EC71  F0EF         	call	___fltol	;wreg free
  9571  01C0DE  0060  F0AB  FFE6   	movff	btemp,postinc1
  9572  01C0E4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9573  01C0EA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9574  01C0F0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9575  01C0F6  0E00               	movlw	0
  9576  01C0F8  6EE6               	movwf	postinc1,c
  9577  01C0FA  EC63  F0E6         	call	___xxtofl	;wreg free
  9578  01C0FE  0060  F0AB  FFE6   	movff	btemp,postinc1
  9579  01C104  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9580  01C10A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9581  01C110  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9582  01C116  ECC2  F0B1         	call	___flmul	;wreg free
  9583  01C11A  0060  F0AB  FFE6   	movff	btemp,postinc1
  9584  01C120  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9585  01C126  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9586  01C12C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9587  01C132  EC71  F0EF         	call	___fltol	;wreg free
  9588  01C136  0060  F0AB  FFE6   	movff	btemp,postinc1
  9589  01C13C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9590  01C142  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9591  01C148  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9592  01C14E  ECDC  F0FE         	call	_Volts_to_SOC	;wreg free
  9593  01C152  0060  F0A8  F034   	movff	btemp,btemp+10
  9594  01C158  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9595  01C15E  5034               	movf	(btemp+10)^0,w,c
  9596  01C160  6E2E               	movwf	(btemp+4)^0,c
  9597  01C162  5035               	movf	(btemp+11)^0,w,c
  9598  01C164  6E2F               	movwf	(btemp+5)^0,c
  9599  01C166  6A30               	clrf	(btemp+6)^0,c
  9600  01C168  6A31               	clrf	(btemp+7)^0,c
  9601  01C16A  0060  F0BB  FFE6   	movff	btemp+4,postinc1
  9602  01C170  0060  F0BF  FFE6   	movff	btemp+5,postinc1
  9603  01C176  0060  F0C3  FFE6   	movff	btemp+6,postinc1
  9604  01C17C  0060  F0C7  FFE6   	movff	btemp+7,postinc1
  9605  01C182  0E00               	movlw	0
  9606  01C184  6EE6               	movwf	postinc1,c
  9607  01C186  EC63  F0E6         	call	___xxtofl	;wreg free
  9608  01C18A  0060  F0AB  FFE6   	movff	btemp,postinc1
  9609  01C190  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9610  01C196  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9611  01C19C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9612  01C1A2  EC13  F0BD         	call	___fldiv	;wreg free
  9613  01C1A6  0060  F0AB  FFE6   	movff	btemp,postinc1
  9614  01C1AC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9615  01C1B2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9616  01C1B8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9617  01C1BE  ECC2  F0B1         	call	___flmul	;wreg free
  9618  01C1C2  0060  F0A8  F98F   	movff	btemp,_C+144	;volatile
  9619  01C1C8  0060  F0AC  F990   	movff	btemp+1,_C+145	;volatile
  9620  01C1CE  0060  F0B0  F991   	movff	btemp+2,_C+146	;volatile
  9621  01C1D4  0060  F0B4  F992   	movff	btemp+3,_C+147	;volatile
  9622                           
  9623                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  9624  01C1DA  EE22  F18F         	lfsr	2,_C+144	;volatile
  9625  01C1DE  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  9626  01C1E4  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  9627  01C1EA  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  9628  01C1F0  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  9629                           
  9630                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  9631  01C1F6  0E02               	movlw	low _calc_bsoc
  9632  01C1F8  6EE6               	movwf	postinc1,c
  9633  01C1FA  0E47               	movlw	high _calc_bsoc
  9634  01C1FC  6EE6               	movwf	postinc1,c
  9635  01C1FE  0E01               	movlw	low (_calc_bsoc shr (0+16))
  9636  01C200  6EE6               	movwf	postinc1,c
  9637  01C202  ECB7  F00E         	call	_TMR3_SetInterruptHandler	;wreg free
  9638                           
  9639                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9640  01C206  0012               	return		;funcret
  9641  01C208                     __end_of_init_bsoc:
  9642                           	opt callstack 0
  9643                           
  9644 ;; *************** function _Volts_to_SOC *****************
  9645 ;; Defined at:
  9646 ;;		line 175 in file "bsoc.c"
  9647 ;; Parameters:    Size  Location     Type
  9648 ;;  cvoltage        4  [STACK] const unsigned long 
  9649 ;; Auto vars:     Size  Location     Type
  9650 ;;  soc             2  [STACK] unsigned short 
  9651 ;;  slot            1  [STACK] unsigned char 
  9652 ;; Return value:  Size  Location     Type
  9653 ;;                  2  [STACK] unsigned short 
  9654 ;; Registers used:
  9655 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9656 ;; Tracked objects:
  9657 ;;		On entry : 0/1
  9658 ;;		On exit  : 0/0
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9665 ;;Total ram usage:        0 bytes
  9666 ;; Hardware stack levels used:    1
  9667 ;; Hardware stack levels required when called:   15
  9668 ;; This function calls:
  9669 ;;		Nothing
  9670 ;; This function is called by:
  9671 ;;		_init_bsoc
  9672 ;; This function uses a reentrant model
  9673 ;;
  9674                           
  9675                           	psect	text22
  9676  01FDB8                     __ptext22:
  9677                           	opt callstack 0
  9678  01FDB8                     _Volts_to_SOC:
  9679                           	opt callstack 0
  9680                           
  9681                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9682  01FDB8  52E6               	movf	postinc1,f,c
  9683  01FDBA  52E6               	movf	postinc1,f,c
  9684  01FDBC  52E6               	movf	postinc1,f,c
  9685                           
  9686                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  9687                           ;stkvar	_soc @ sp[(-3)+0]
  9688                           
  9689                           ;incstack = 0
  9690  01FDBE  0EFD               	movlw	-3
  9691  01FDC0  6AE3               	clrf	plusw1,c
  9692  01FDC2  0EFE               	movlw	-2
  9693  01FDC4  6AE3               	clrf	plusw1,c
  9694                           
  9695                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  9696                           ;stkvar	_slot @ sp[(-3)+2]
  9697  01FDC6  0EFF               	movlw	-1
  9698  01FDC8  6AE3               	clrf	plusw1,c
  9699  01FDCA                     l13792:
  9700                           
  9701                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  9702                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  9703                           ;stkvar	_slot @ sp[(-3)+2]
  9704  01FDCA  0EFF               	movlw	-1
  9705  01FDCC  50E3               	movf	plusw1,w,c
  9706  01FDCE  0D08               	mullw	8
  9707  01FDD0  0EF3               	movlw	low _BVSOC_TABLE
  9708  01FDD2  24F3               	addwf	243,w,c
  9709  01FDD4  6EF6               	movwf	tblptrl,c
  9710  01FDD6  0EF7               	movlw	high _BVSOC_TABLE
  9711  01FDD8  20F4               	addwfc	244,w,c
  9712  01FDDA  6EF7               	movwf	tblptrh,c
  9713  01FDDC                     	if	1	;There are 3 active tblptr bytes
  9714  01FDDC  6AF8               	clrf	tblptru,c
  9715  01FDDE  0E00               	movlw	low (__mediumconst shr (0+16))
  9716  01FDE0  22F8               	addwfc	tblptru,f,c
  9717  01FDE2                     	endif
  9718  01FDE2  0EF9               	movlw	-7
  9719  01FDE4  50E3               	movf	plusw1,w,c
  9720  01FDE6  0009               	tblrd		*+
  9721  01FDE8  5CF5               	subwf	tablat,w,c
  9722  01FDEA  0EFA               	movlw	-6
  9723  01FDEC  50E3               	movf	plusw1,w,c
  9724  01FDEE  0009               	tblrd		*+
  9725  01FDF0  58F5               	subwfb	tablat,w,c
  9726  01FDF2  0EFB               	movlw	-5
  9727  01FDF4  50E3               	movf	plusw1,w,c
  9728  01FDF6  0009               	tblrd		*+
  9729  01FDF8  58F5               	subwfb	tablat,w,c
  9730  01FDFA  0EFC               	movlw	-4
  9731  01FDFC  50E3               	movf	plusw1,w,c
  9732  01FDFE  0009               	tblrd		*+
  9733  01FE00  58F5               	subwfb	tablat,w,c
  9734  01FE02  B0D8               	btfsc	status,0,c
  9735  01FE04  D020               	goto	l13796
  9736                           
  9737                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  9738                           ;stkvar	_slot @ sp[(-3)+2]
  9739  01FE06  0EFF               	movlw	-1
  9740  01FE08  50E3               	movf	plusw1,w,c
  9741  01FE0A  0D08               	mullw	8
  9742  01FE0C  0E04               	movlw	4
  9743  01FE0E  26F3               	addwf	243,f,c
  9744  01FE10  0E00               	movlw	0
  9745  01FE12  22F4               	addwfc	244,f,c
  9746  01FE14  0EF3               	movlw	low _BVSOC_TABLE
  9747  01FE16  24F3               	addwf	243,w,c
  9748  01FE18  6EF6               	movwf	tblptrl,c
  9749  01FE1A  0EF7               	movlw	high _BVSOC_TABLE
  9750  01FE1C  20F4               	addwfc	244,w,c
  9751  01FE1E  6EF7               	movwf	tblptrh,c
  9752  01FE20                     	if	1	;There are 3 active tblptr bytes
  9753  01FE20  6AF8               	clrf	tblptru,c
  9754  01FE22  0E00               	movlw	low (__mediumconst shr (0+16))
  9755  01FE24  22F8               	addwfc	tblptru,f,c
  9756  01FE26                     	endif
  9757  01FE26  0009               	tblrd		*+
  9758  01FE28  006F FFD4  F034    	movff	tablat,btemp+10
  9759  01FE2E  0009               	tblrd		*+
  9760  01FE30  006F FFD4  F035    	movff	tablat,btemp+11
  9761                           
  9762                           ;stkvar	_soc @ sp[(-3)+0]
  9763  01FE36  0EFD               	movlw	-3
  9764  01FE38  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  9765  01FE3E  0EFE               	movlw	-2
  9766  01FE40  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  9767  01FE46                     l13796:
  9768                           
  9769                           ;bsoc.c: 187:  }
  9770                           ;stkvar	_slot @ sp[(-3)+2]
  9771  01FE46  0EFF               	movlw	-1
  9772  01FE48  2AE3               	incf	plusw1,f,c
  9773                           
  9774                           ;stkvar	_slot @ sp[(-3)+2]
  9775  01FE4A  0EFF               	movlw	-1
  9776  01FE4C  006F FF8C  F02A    	movff	plusw1,btemp
  9777  01FE52  0E19               	movlw	25
  9778  01FE54  642A               	cpfsgt	btemp^0,c
  9779  01FE56  D7B9               	goto	l13792
  9780                           
  9781                           ;bsoc.c: 188:  return soc;
  9782                           ;stkvar	_soc @ sp[(-3)+0]
  9783  01FE58  0EFD               	movlw	-3
  9784  01FE5A  006F FF8C  F02A    	movff	plusw1,btemp
  9785  01FE60  0EFE               	movlw	-2
  9786  01FE62  006F FF8C  F02B    	movff	plusw1,btemp+1
  9787                           
  9788                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  9789  01FE68  0EF9               	movlw	249
  9790  01FE6A  26E1               	addwf	fsr1l,f,c
  9791  01FE6C  0EFF               	movlw	255
  9792  01FE6E  22E2               	addwfc	fsr1h,f,c
  9793  01FE70  0012               	return		;funcret
  9794  01FE72                     __end_of_Volts_to_SOC:
  9795                           	opt callstack 0
  9796                           
  9797 ;; *************** function _hid_display *****************
  9798 ;; Defined at:
  9799 ;;		line 22 in file "hid.c"
  9800 ;; Parameters:    Size  Location     Type
  9801 ;;  h               2  [STACK] PTR struct H_data
  9802 ;;		 -> H(9), 
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;		None
  9805 ;; Return value:  Size  Location     Type
  9806 ;;                  2  [STACK] PTR struct H_data
  9807 ;; Registers used:
  9808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  9809 ;; Tracked objects:
  9810 ;;		On entry : 0/39
  9811 ;;		On exit  : 0/0
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9818 ;;Total ram usage:        0 bytes
  9819 ;; Hardware stack levels used:    1
  9820 ;; Hardware stack levels required when called:   17
  9821 ;; This function calls:
  9822 ;;		_hid_input
  9823 ;; This function is called by:
  9824 ;;		_main
  9825 ;; This function uses a reentrant model
  9826 ;;
  9827                           
  9828                           	psect	text23
  9829  01C898                     __ptext23:
  9830                           	opt callstack 0
  9831  01C898                     _hid_display:
  9832                           	opt callstack 13
  9833                           
  9834                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
  9835                           ;stkvar	_h @ sp[(0)+-2]
  9836                           
  9837                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9838                           ;incstack = 0
  9839  01C898  0EFE               	movlw	-2
  9840  01C89A  006F FF8F FFE6     	movff	plusw1,postinc1
  9841  01C8A0  006F FF8F FFE6     	movff	plusw1,postinc1
  9842  01C8A6  EC30  F0F6         	call	_hid_input	;wreg free
  9843                           
  9844                           ;hid.c: 26:  switch (h->h_state) {
  9845  01C8AA  D0E6               	goto	l16918
  9846  01C8AC                     l16892:
  9847                           
  9848                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
  9849                           ;stkvar	_h @ sp[(0)+-2]
  9850  01C8AC  0EFE               	movlw	-2
  9851  01C8AE  006F FF8C  F034    	movff	plusw1,btemp+10
  9852  01C8B4  0EFF               	movlw	-1
  9853  01C8B6  006F FF8C  F035    	movff	plusw1,btemp+11
  9854  01C8BC  0E01               	movlw	1
  9855  01C8BE  2434               	addwf	(btemp+10)^0,w,c
  9856  01C8C0  6ED9               	movwf	fsr2l,c
  9857  01C8C2  0E00               	movlw	0
  9858  01C8C4  2035               	addwfc	(btemp+11)^0,w,c
  9859  01C8C6  6EDA               	movwf	fsr2h,c
  9860  01C8C8  0E01               	movlw	1
  9861  01C8CA  6EDF               	movwf	indf2,c
  9862                           
  9863                           ;hid.c: 29:   h->hid_display = HID_MAIN;
  9864                           ;stkvar	_h @ sp[(0)+-2]
  9865  01C8CC  0EFE               	movlw	-2
  9866  01C8CE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9867  01C8D4  0EFF               	movlw	-1
  9868  01C8D6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9869  01C8DC  0E00               	movlw	0
  9870  01C8DE  6EDF               	movwf	indf2,c
  9871                           
  9872                           ;hid.c: 30:   h->wait_enter = 1;
  9873                           ;stkvar	_h @ sp[(0)+-2]
  9874  01C8E0  0EFE               	movlw	-2
  9875  01C8E2  006F FF8C  F034    	movff	plusw1,btemp+10
  9876  01C8E8  0EFF               	movlw	-1
  9877  01C8EA  006F FF8C  F035    	movff	plusw1,btemp+11
  9878  01C8F0  0E04               	movlw	4
  9879  01C8F2  2434               	addwf	(btemp+10)^0,w,c
  9880  01C8F4  6ED9               	movwf	fsr2l,c
  9881  01C8F6  0E00               	movlw	0
  9882  01C8F8  2035               	addwfc	(btemp+11)^0,w,c
  9883  01C8FA  6EDA               	movwf	fsr2h,c
  9884  01C8FC  0E01               	movlw	1
  9885  01C8FE  6EDF               	movwf	indf2,c
  9886                           
  9887                           ;hid.c: 31:   h->wait_select = 1;
  9888                           ;stkvar	_h @ sp[(0)+-2]
  9889  01C900  0EFE               	movlw	-2
  9890  01C902  006F FF8C  F034    	movff	plusw1,btemp+10
  9891  01C908  0EFF               	movlw	-1
  9892  01C90A  006F FF8C  F035    	movff	plusw1,btemp+11
  9893  01C910  0E02               	movlw	2
  9894  01C912  2434               	addwf	(btemp+10)^0,w,c
  9895  01C914  6ED9               	movwf	fsr2l,c
  9896  01C916  0E00               	movlw	0
  9897  01C918  2035               	addwfc	(btemp+11)^0,w,c
  9898  01C91A  6EDA               	movwf	fsr2h,c
  9899  01C91C  0E01               	movlw	1
  9900  01C91E  6EDF               	movwf	indf2,c
  9901                           
  9902                           ;hid.c: 32:   h->wait_calib = 1;
  9903                           ;stkvar	_h @ sp[(0)+-2]
  9904  01C920  0EFE               	movlw	-2
  9905  01C922  006F FF8C  F034    	movff	plusw1,btemp+10
  9906  01C928  0EFF               	movlw	-1
  9907  01C92A  006F FF8C  F035    	movff	plusw1,btemp+11
  9908  01C930  0E06               	movlw	6
  9909  01C932  2434               	addwf	(btemp+10)^0,w,c
  9910  01C934  6ED9               	movwf	fsr2l,c
  9911  01C936  0E00               	movlw	0
  9912  01C938  2035               	addwfc	(btemp+11)^0,w,c
  9913  01C93A  6EDA               	movwf	fsr2h,c
  9914  01C93C  0E01               	movlw	1
  9915  01C93E  6EDF               	movwf	indf2,c
  9916                           
  9917                           ;hid.c: 33:   h->select_p = SW_OFF;
  9918                           ;stkvar	_h @ sp[(0)+-2]
  9919  01C940  0EFE               	movlw	-2
  9920  01C942  006F FF8C  F034    	movff	plusw1,btemp+10
  9921  01C948  0EFF               	movlw	-1
  9922  01C94A  006F FF8C  F035    	movff	plusw1,btemp+11
  9923  01C950  0E03               	movlw	3
  9924  01C952  2434               	addwf	(btemp+10)^0,w,c
  9925  01C954  6ED9               	movwf	fsr2l,c
  9926  01C956  0E00               	movlw	0
  9927  01C958  2035               	addwfc	(btemp+11)^0,w,c
  9928  01C95A  6EDA               	movwf	fsr2h,c
  9929  01C95C  0E00               	movlw	0
  9930  01C95E  6EDF               	movwf	indf2,c
  9931                           
  9932                           ;hid.c: 34:   h->enter_p = SW_OFF;
  9933                           ;stkvar	_h @ sp[(0)+-2]
  9934  01C960  0EFE               	movlw	-2
  9935  01C962  006F FF8C  F034    	movff	plusw1,btemp+10
  9936  01C968  0EFF               	movlw	-1
  9937  01C96A  006F FF8C  F035    	movff	plusw1,btemp+11
  9938  01C970  0E05               	movlw	5
  9939  01C972  2434               	addwf	(btemp+10)^0,w,c
  9940  01C974  6ED9               	movwf	fsr2l,c
  9941  01C976  0E00               	movlw	0
  9942  01C978  2035               	addwfc	(btemp+11)^0,w,c
  9943  01C97A  6EDA               	movwf	fsr2h,c
  9944  01C97C  0E00               	movlw	0
  9945  01C97E  6EDF               	movwf	indf2,c
  9946                           
  9947                           ;hid.c: 35:   h->calib_p = SW_OFF;
  9948                           ;stkvar	_h @ sp[(0)+-2]
  9949  01C980  0EFE               	movlw	-2
  9950  01C982  006F FF8C  F034    	movff	plusw1,btemp+10
  9951  01C988  0EFF               	movlw	-1
  9952  01C98A  006F FF8C  F035    	movff	plusw1,btemp+11
  9953  01C990  0E07               	movlw	7
  9954  01C992  2434               	addwf	(btemp+10)^0,w,c
  9955  01C994  6ED9               	movwf	fsr2l,c
  9956  01C996  0E00               	movlw	0
  9957  01C998  2035               	addwfc	(btemp+11)^0,w,c
  9958  01C99A  6EDA               	movwf	fsr2h,c
  9959  01C99C  0E00               	movlw	0
  9960  01C99E  D06A               	goto	L5
  9961  01C9A0                     l16908:
  9962                           
  9963                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  9964                           ;stkvar	_h @ sp[(0)+-2]
  9965  01C9A0  0EFE               	movlw	-2
  9966  01C9A2  006F FF8C  F034    	movff	plusw1,btemp+10
  9967  01C9A8  0EFF               	movlw	-1
  9968  01C9AA  006F FF8C  F035    	movff	plusw1,btemp+11
  9969  01C9B0  0E02               	movlw	2
  9970  01C9B2  2434               	addwf	(btemp+10)^0,w,c
  9971  01C9B4  6ED9               	movwf	fsr2l,c
  9972  01C9B6  0E00               	movlw	0
  9973  01C9B8  2035               	addwfc	(btemp+11)^0,w,c
  9974  01C9BA  6EDA               	movwf	fsr2h,c
  9975  01C9BC  50DF               	movf	indf2,w,c
  9976  01C9BE  A4D8               	btfss	status,2,c
  9977  01C9C0  D076               	goto	l2276
  9978                           
  9979                           ;stkvar	_h @ sp[(0)+-2]
  9980  01C9C2  0EFE               	movlw	-2
  9981  01C9C4  006F FF8C  F034    	movff	plusw1,btemp+10
  9982  01C9CA  0EFF               	movlw	-1
  9983  01C9CC  006F FF8C  F035    	movff	plusw1,btemp+11
  9984  01C9D2  0E03               	movlw	3
  9985  01C9D4  2434               	addwf	(btemp+10)^0,w,c
  9986  01C9D6  6ED9               	movwf	fsr2l,c
  9987  01C9D8  0E00               	movlw	0
  9988  01C9DA  2035               	addwfc	(btemp+11)^0,w,c
  9989  01C9DC  6EDA               	movwf	fsr2h,c
  9990  01C9DE  50DF               	movf	indf2,w,c
  9991  01C9E0  A4D8               	btfss	status,2,c
  9992  01C9E2  D065               	goto	l2276
  9993                           
  9994                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
  9995                           ;stkvar	_h @ sp[(0)+-2]
  9996  01C9E4  0EFE               	movlw	-2
  9997  01C9E6  006F FF8C  F034    	movff	plusw1,btemp+10
  9998  01C9EC  0EFF               	movlw	-1
  9999  01C9EE  006F FF8C  F035    	movff	plusw1,btemp+11
 10000  01C9F4  0E08               	movlw	8
 10001  01C9F6  2434               	addwf	(btemp+10)^0,w,c
 10002  01C9F8  6ED9               	movwf	fsr2l,c
 10003  01C9FA  0E00               	movlw	0
 10004  01C9FC  2035               	addwfc	(btemp+11)^0,w,c
 10005  01C9FE  6EDA               	movwf	fsr2h,c
 10006                           
 10007                           ;stkvar	_h @ sp[(0)+-2]
 10008  01CA00  0EFE               	movlw	-2
 10009  01CA02  006F FF8C  F034    	movff	plusw1,btemp+10
 10010  01CA08  0EFF               	movlw	-1
 10011  01CA0A  006F FF8C  F035    	movff	plusw1,btemp+11
 10012  01CA10  0E08               	movlw	8
 10013  01CA12  2434               	addwf	(btemp+10)^0,w,c
 10014  01CA14  6EE9               	movwf	fsr0l,c
 10015  01CA16  0E00               	movlw	0
 10016  01CA18  2035               	addwfc	(btemp+11)^0,w,c
 10017  01CA1A  6EEA               	movwf	fsr0h,c
 10018  01CA1C  2AEF               	incf	indf0,f,c
 10019  01CA1E  50EF               	movf	indf0,w,c
 10020  01CA20  0B03               	andlw	3
 10021  01CA22  6EDF               	movwf	indf2,c
 10022                           
 10023                           ;hid.c: 41:    h->hid_display = h->sequence;
 10024                           ;stkvar	_h @ sp[(0)+-2]
 10025  01CA24  0EFE               	movlw	-2
 10026  01CA26  006F FF8C  F034    	movff	plusw1,btemp+10
 10027  01CA2C  0EFF               	movlw	-1
 10028  01CA2E  006F FF8C  F035    	movff	plusw1,btemp+11
 10029  01CA34  0E08               	movlw	8
 10030  01CA36  2434               	addwf	(btemp+10)^0,w,c
 10031  01CA38  6ED9               	movwf	fsr2l,c
 10032  01CA3A  0E00               	movlw	0
 10033  01CA3C  2035               	addwfc	(btemp+11)^0,w,c
 10034  01CA3E  6EDA               	movwf	fsr2h,c
 10035                           
 10036                           ;stkvar	_h @ sp[(0)+-2]
 10037  01CA40  0EFE               	movlw	-2
 10038  01CA42  006F FF8F FFE9     	movff	plusw1,fsr0l
 10039  01CA48  0EFF               	movlw	-1
 10040  01CA4A  006F FF8F FFEA     	movff	plusw1,fsr0h
 10041  01CA50  006F FF7F FFEF     	movff	indf2,indf0
 10042                           
 10043                           ;hid.c: 42:    h->wait_select = 1;
 10044                           ;stkvar	_h @ sp[(0)+-2]
 10045  01CA56  0EFE               	movlw	-2
 10046  01CA58  006F FF8C  F034    	movff	plusw1,btemp+10
 10047  01CA5E  0EFF               	movlw	-1
 10048  01CA60  006F FF8C  F035    	movff	plusw1,btemp+11
 10049  01CA66  0E02               	movlw	2
 10050  01CA68  2434               	addwf	(btemp+10)^0,w,c
 10051  01CA6A  6ED9               	movwf	fsr2l,c
 10052  01CA6C  0E00               	movlw	0
 10053  01CA6E  2035               	addwfc	(btemp+11)^0,w,c
 10054  01CA70  6EDA               	movwf	fsr2h,c
 10055  01CA72  0E01               	movlw	1
 10056  01CA74                     L5:
 10057  01CA74  6EDF               	movwf	indf2,c
 10058  01CA76  D01B               	goto	l2276
 10059  01CA78                     l16918:
 10060                           
 10061                           ;stkvar	_h @ sp[(0)+-2]
 10062  01CA78  0EFE               	movlw	-2
 10063  01CA7A  006F FF8C  F034    	movff	plusw1,btemp+10
 10064  01CA80  0EFF               	movlw	-1
 10065  01CA82  006F FF8C  F035    	movff	plusw1,btemp+11
 10066  01CA88  0E01               	movlw	1
 10067  01CA8A  2434               	addwf	(btemp+10)^0,w,c
 10068  01CA8C  6ED9               	movwf	fsr2l,c
 10069  01CA8E  0E00               	movlw	0
 10070  01CA90  2035               	addwfc	(btemp+11)^0,w,c
 10071  01CA92  6EDA               	movwf	fsr2h,c
 10072  01CA94  50DF               	movf	indf2,w,c
 10073  01CA96  6E34               	movwf	(btemp+10)^0,c
 10074  01CA98  6A35               	clrf	(btemp+11)^0,c
 10075                           
 10076                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10077                           ; Switch size 1, requested type "simple"
 10078                           ; Number of cases is 1, Range of values is 0 to 0
 10079                           ; switch strategies available:
 10080                           ; Name         Instructions Cycles
 10081                           ; simple_byte            4     3 (average)
 10082                           ;	Chosen strategy is simple_byte
 10083  01CA9A  5035               	movf	(btemp+11)^0,w,c
 10084  01CA9C  0A00               	xorlw	0	; case 0
 10085  01CA9E  A4D8               	btfss	status,2,c
 10086  01CAA0  D77F               	goto	l16908
 10087                           
 10088                           ; Switch size 1, requested type "simple"
 10089                           ; Number of cases is 2, Range of values is 0 to 1
 10090                           ; switch strategies available:
 10091                           ; Name         Instructions Cycles
 10092                           ; simple_byte            7     4 (average)
 10093                           ;	Chosen strategy is simple_byte
 10094  01CAA2  5034               	movf	(btemp+10)^0,w,c
 10095  01CAA4  0A00               	xorlw	0	; case 0
 10096  01CAA6  B4D8               	btfsc	status,2,c
 10097  01CAA8  D701               	goto	l16892
 10098  01CAAA  0A01               	xorlw	1	; case 1
 10099  01CAAC  D779               	goto	l16908
 10100  01CAAE                     l2276:
 10101                           
 10102                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
 10103  01CAAE  52E5               	movf	postdec1,f,c
 10104  01CAB0  52E5               	movf	postdec1,f,c
 10105  01CAB2  0012               	return		;funcret
 10106  01CAB4                     __end_of_hid_display:
 10107                           	opt callstack 0
 10108                           
 10109 ;; *************** function _hid_input *****************
 10110 ;; Defined at:
 10111 ;;		line 3 in file "hid.c"
 10112 ;; Parameters:    Size  Location     Type
 10113 ;;  h               2  [STACK] PTR struct H_data
 10114 ;;		 -> H(9), 
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;		None
 10117 ;; Return value:  Size  Location     Type
 10118 ;;                  2  [STACK] PTR struct H_data
 10119 ;; Registers used:
 10120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10121 ;; Tracked objects:
 10122 ;;		On entry : 0/39
 10123 ;;		On exit  : 0/0
 10124 ;;		Unchanged: 0/0
 10125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10130 ;;Total ram usage:        0 bytes
 10131 ;; Hardware stack levels used:    1
 10132 ;; Hardware stack levels required when called:   16
 10133 ;; This function calls:
 10134 ;;		_get_switch
 10135 ;; This function is called by:
 10136 ;;		_hid_display
 10137 ;; This function uses a reentrant model
 10138 ;;
 10139                           
 10140                           	psect	text24
 10141  01EC60                     __ptext24:
 10142                           	opt callstack 0
 10143  01EC60                     _hid_input:
 10144                           	opt callstack 13
 10145                           
 10146                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
 10147                           
 10148                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10149                           ;incstack = 0
 10150  01EC60  0E02               	movlw	2
 10151  01EC62  6EE6               	movwf	postinc1,c
 10152  01EC64  ECD3  F00D         	call	_get_switch	;wreg free
 10153  01EC68  502A               	movf	btemp^0,w,c
 10154  01EC6A  B4D8               	btfsc	status,2,c
 10155  01EC6C  D02C               	goto	l16654
 10156                           
 10157                           ;hid.c: 6:   h->wait_select = 0;
 10158                           ;stkvar	_h @ sp[(0)+-2]
 10159  01EC6E  0EFE               	movlw	-2
 10160  01EC70  006F FF8C  F034    	movff	plusw1,btemp+10
 10161  01EC76  0EFF               	movlw	-1
 10162  01EC78  006F FF8C  F035    	movff	plusw1,btemp+11
 10163  01EC7E  0E02               	movlw	2
 10164  01EC80  2434               	addwf	(btemp+10)^0,w,c
 10165  01EC82  6ED9               	movwf	fsr2l,c
 10166  01EC84  0E00               	movlw	0
 10167  01EC86  2035               	addwfc	(btemp+11)^0,w,c
 10168  01EC88  6EDA               	movwf	fsr2h,c
 10169  01EC8A  0E00               	movlw	0
 10170  01EC8C  6EDF               	movwf	indf2,c
 10171                           
 10172                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
 10173  01EC8E  0E02               	movlw	2
 10174  01EC90  6EE6               	movwf	postinc1,c
 10175  01EC92  ECD3  F00D         	call	_get_switch	;wreg free
 10176  01EC96  502A               	movf	btemp^0,w,c
 10177  01EC98  B4D8               	btfsc	status,2,c
 10178  01EC9A  D003               	goto	u16230
 10179  01EC9C  6A35               	clrf	(btemp+11)^0,c
 10180  01EC9E  2A35               	incf	(btemp+11)^0,f,c
 10181  01ECA0  D001               	goto	u16248
 10182  01ECA2                     u16230:
 10183  01ECA2  6A35               	clrf	(btemp+11)^0,c
 10184  01ECA4                     u16248:
 10185                           
 10186                           ;stkvar	_h @ sp[(0)+-2]
 10187  01ECA4  0EFE               	movlw	-2
 10188  01ECA6  006F FF8C  F032    	movff	plusw1,btemp+8
 10189  01ECAC  0EFF               	movlw	-1
 10190  01ECAE  006F FF8C  F033    	movff	plusw1,btemp+9
 10191  01ECB4  0E03               	movlw	3
 10192  01ECB6  2432               	addwf	(btemp+8)^0,w,c
 10193  01ECB8  6ED9               	movwf	fsr2l,c
 10194  01ECBA  0E00               	movlw	0
 10195  01ECBC  2033               	addwfc	(btemp+9)^0,w,c
 10196  01ECBE  6EDA               	movwf	fsr2h,c
 10197  01ECC0  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10198  01ECC6                     l16654:
 10199                           
 10200                           ;hid.c: 10:  if (get_switch(SENTER)) {
 10201  01ECC6  0E03               	movlw	3
 10202  01ECC8  6EE6               	movwf	postinc1,c
 10203  01ECCA  ECD3  F00D         	call	_get_switch	;wreg free
 10204  01ECCE  502A               	movf	btemp^0,w,c
 10205  01ECD0  B4D8               	btfsc	status,2,c
 10206  01ECD2  D02C               	goto	l16660
 10207                           
 10208                           ;hid.c: 11:   h->wait_enter = 0;
 10209                           ;stkvar	_h @ sp[(0)+-2]
 10210  01ECD4  0EFE               	movlw	-2
 10211  01ECD6  006F FF8C  F034    	movff	plusw1,btemp+10
 10212  01ECDC  0EFF               	movlw	-1
 10213  01ECDE  006F FF8C  F035    	movff	plusw1,btemp+11
 10214  01ECE4  0E04               	movlw	4
 10215  01ECE6  2434               	addwf	(btemp+10)^0,w,c
 10216  01ECE8  6ED9               	movwf	fsr2l,c
 10217  01ECEA  0E00               	movlw	0
 10218  01ECEC  2035               	addwfc	(btemp+11)^0,w,c
 10219  01ECEE  6EDA               	movwf	fsr2h,c
 10220  01ECF0  0E00               	movlw	0
 10221  01ECF2  6EDF               	movwf	indf2,c
 10222                           
 10223                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
 10224  01ECF4  0E03               	movlw	3
 10225  01ECF6  6EE6               	movwf	postinc1,c
 10226  01ECF8  ECD3  F00D         	call	_get_switch	;wreg free
 10227  01ECFC  502A               	movf	btemp^0,w,c
 10228  01ECFE  B4D8               	btfsc	status,2,c
 10229  01ED00  D003               	goto	u16260
 10230  01ED02  6A35               	clrf	(btemp+11)^0,c
 10231  01ED04  2A35               	incf	(btemp+11)^0,f,c
 10232  01ED06  D001               	goto	u16278
 10233  01ED08                     u16260:
 10234  01ED08  6A35               	clrf	(btemp+11)^0,c
 10235  01ED0A                     u16278:
 10236                           
 10237                           ;stkvar	_h @ sp[(0)+-2]
 10238  01ED0A  0EFE               	movlw	-2
 10239  01ED0C  006F FF8C  F032    	movff	plusw1,btemp+8
 10240  01ED12  0EFF               	movlw	-1
 10241  01ED14  006F FF8C  F033    	movff	plusw1,btemp+9
 10242  01ED1A  0E05               	movlw	5
 10243  01ED1C  2432               	addwf	(btemp+8)^0,w,c
 10244  01ED1E  6ED9               	movwf	fsr2l,c
 10245  01ED20  0E00               	movlw	0
 10246  01ED22  2033               	addwfc	(btemp+9)^0,w,c
 10247  01ED24  6EDA               	movwf	fsr2h,c
 10248  01ED26  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10249  01ED2C                     l16660:
 10250                           
 10251                           ;hid.c: 15:  if (get_switch(SCALIB)) {
 10252  01ED2C  0E04               	movlw	4
 10253  01ED2E  6EE6               	movwf	postinc1,c
 10254  01ED30  ECD3  F00D         	call	_get_switch	;wreg free
 10255  01ED34  502A               	movf	btemp^0,w,c
 10256  01ED36  B4D8               	btfsc	status,2,c
 10257  01ED38  D02C               	goto	l2267
 10258                           
 10259                           ;hid.c: 16:   h->wait_calib = 0;
 10260                           ;stkvar	_h @ sp[(0)+-2]
 10261  01ED3A  0EFE               	movlw	-2
 10262  01ED3C  006F FF8C  F034    	movff	plusw1,btemp+10
 10263  01ED42  0EFF               	movlw	-1
 10264  01ED44  006F FF8C  F035    	movff	plusw1,btemp+11
 10265  01ED4A  0E06               	movlw	6
 10266  01ED4C  2434               	addwf	(btemp+10)^0,w,c
 10267  01ED4E  6ED9               	movwf	fsr2l,c
 10268  01ED50  0E00               	movlw	0
 10269  01ED52  2035               	addwfc	(btemp+11)^0,w,c
 10270  01ED54  6EDA               	movwf	fsr2h,c
 10271  01ED56  0E00               	movlw	0
 10272  01ED58  6EDF               	movwf	indf2,c
 10273                           
 10274                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
 10275  01ED5A  0E04               	movlw	4
 10276  01ED5C  6EE6               	movwf	postinc1,c
 10277  01ED5E  ECD3  F00D         	call	_get_switch	;wreg free
 10278  01ED62  502A               	movf	btemp^0,w,c
 10279  01ED64  B4D8               	btfsc	status,2,c
 10280  01ED66  D003               	goto	u16290
 10281  01ED68  6A35               	clrf	(btemp+11)^0,c
 10282  01ED6A  2A35               	incf	(btemp+11)^0,f,c
 10283  01ED6C  D001               	goto	u16308
 10284  01ED6E                     u16290:
 10285  01ED6E  6A35               	clrf	(btemp+11)^0,c
 10286  01ED70                     u16308:
 10287                           
 10288                           ;stkvar	_h @ sp[(0)+-2]
 10289  01ED70  0EFE               	movlw	-2
 10290  01ED72  006F FF8C  F032    	movff	plusw1,btemp+8
 10291  01ED78  0EFF               	movlw	-1
 10292  01ED7A  006F FF8C  F033    	movff	plusw1,btemp+9
 10293  01ED80  0E07               	movlw	7
 10294  01ED82  2432               	addwf	(btemp+8)^0,w,c
 10295  01ED84  6ED9               	movwf	fsr2l,c
 10296  01ED86  0E00               	movlw	0
 10297  01ED88  2033               	addwfc	(btemp+9)^0,w,c
 10298  01ED8A  6EDA               	movwf	fsr2h,c
 10299  01ED8C  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10300  01ED92                     l2267:
 10301                           
 10302                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 10303  01ED92  52E5               	movf	postdec1,f,c
 10304  01ED94  52E5               	movf	postdec1,f,c
 10305  01ED96  0012               	return		;funcret
 10306  01ED98                     __end_of_hid_input:
 10307                           	opt callstack 0
 10308                           
 10309 ;; *************** function _esr_check *****************
 10310 ;; Defined at:
 10311 ;;		line 197 in file "bsoc.c"
 10312 ;; Parameters:    Size  Location     Type
 10313 ;;  fsm             1  [STACK] const unsigned char 
 10314 ;; Auto vars:     Size  Location     Type
 10315 ;;		None
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  4  [STACK] float 
 10318 ;; Registers used:
 10319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/0
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10329 ;;Total ram usage:        0 bytes
 10330 ;; Hardware stack levels used:    1
 10331 ;; Hardware stack levels required when called:   18
 10332 ;; This function calls:
 10333 ;;		_StartTimer
 10334 ;;		_TimerDone
 10335 ;;		___fldiv
 10336 ;;		___flsub
 10337 ;;		_conv_raw_result
 10338 ;;		_fabsf
 10339 ;;		_set_load_relay_one
 10340 ;;		_set_load_relay_two
 10341 ;;		_update_adc_result
 10342 ;; This function is called by:
 10343 ;;		_main
 10344 ;; This function uses a reentrant model
 10345 ;;
 10346                           
 10347                           	psect	text25
 10348  01ADD2                     __ptext25:
 10349                           	opt callstack 0
 10350  01ADD2                     _esr_check:
 10351                           	opt callstack 12
 10352                           
 10353                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
 10354                           ;stkvar	_fsm @ sp[(0)+-1]
 10355                           
 10356                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10357                           ;incstack = 0
 10358  01ADD2  0EFF               	movlw	-1
 10359  01ADD4  50E3               	movf	plusw1,w,c
 10360  01ADD6  B4D8               	btfsc	status,2,c
 10361  01ADD8  D149               	goto	l14202
 10362                           
 10363                           ;bsoc.c: 202:   esr_state = 0;
 10364  01ADDA  0100               	movlb	0	; () banked
 10365  01ADDC  6BD0               	clrf	esr_check@esr_state& (0+255),b
 10366                           
 10367                           ; BSR set to: 0
 10368                           ;bsoc.c: 203:   return -10.0;
 10369  01ADDE  0E00               	movlw	0
 10370  01ADE0  6E2A               	movwf	btemp^0,c
 10371  01ADE2  0E00               	movlw	0
 10372  01ADE4  6E2B               	movwf	(btemp+1)^0,c
 10373  01ADE6  0E20               	movlw	32
 10374  01ADE8  6E2C               	movwf	(btemp+2)^0,c
 10375  01ADEA  0EC1               	movlw	193
 10376  01ADEC  D15B               	goto	L6
 10377  01ADEE                     l14134:
 10378                           
 10379                           ; BSR set to: 0
 10380                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
 10381  01ADEE  0E10               	movlw	16
 10382  01ADF0  6EE6               	movwf	postinc1,c
 10383  01ADF2  0E27               	movlw	39
 10384  01ADF4  6EE6               	movwf	postinc1,c
 10385  01ADF6  0E0C               	movlw	12
 10386  01ADF8  6EE6               	movwf	postinc1,c
 10387  01ADFA  ECCE  F00B         	call	_StartTimer	;wreg free
 10388  01ADFE                     l14136:
 10389                           
 10390                           ;bsoc.c: 209:   esr_state++;
 10391  01ADFE  0100               	movlb	0	; () banked
 10392  01AE00  2BD0               	incf	esr_check@esr_state& (0+255),f,b
 10393                           
 10394                           ;bsoc.c: 210:   break;
 10395  01AE02  D149               	goto	l14204
 10396  01AE04                     l14138:
 10397                           
 10398                           ; BSR set to: 0
 10399                           ;bsoc.c: 215:   set_load_relay_one(0);
 10400  01AE04  0E00               	movlw	0
 10401  01AE06  6EE6               	movwf	postinc1,c
 10402  01AE08  ECE8  F010         	call	_set_load_relay_one	;wreg free
 10403                           
 10404                           ;bsoc.c: 216:   set_load_relay_two(0);
 10405  01AE0C  0E00               	movlw	0
 10406  01AE0E  6EE6               	movwf	postinc1,c
 10407  01AE10  ECE0  F010         	call	_set_load_relay_two	;wreg free
 10408                           
 10409                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
 10410  01AE14  0E0C               	movlw	12
 10411  01AE16  6EE6               	movwf	postinc1,c
 10412  01AE18  EC3F  F00E         	call	_TimerDone	;wreg free
 10413  01AE1C  502A               	movf	btemp^0,w,c
 10414  01AE1E  B4D8               	btfsc	status,2,c
 10415  01AE20  D009               	goto	l14144
 10416                           
 10417                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
 10418  01AE22  0E10               	movlw	16
 10419  01AE24  6EE6               	movwf	postinc1,c
 10420  01AE26  0E27               	movlw	39
 10421  01AE28  6EE6               	movwf	postinc1,c
 10422  01AE2A  0E0C               	movlw	12
 10423  01AE2C  6EE6               	movwf	postinc1,c
 10424  01AE2E  ECCE  F00B         	call	_StartTimer	;wreg free
 10425                           
 10426                           ;bsoc.c: 219:   } else {
 10427  01AE32  D006               	goto	l14148
 10428  01AE34                     l14144:
 10429                           
 10430                           ;bsoc.c: 220:    return -2.0;
 10431  01AE34  0E00               	movlw	0
 10432  01AE36  6E2A               	movwf	btemp^0,c
 10433  01AE38  0E00               	movlw	0
 10434  01AE3A  6E2B               	movwf	(btemp+1)^0,c
 10435  01AE3C  0E00               	movlw	0
 10436  01AE3E  D066               	goto	L8
 10437  01AE40                     l14148:
 10438                           
 10439                           ;bsoc.c: 225:   update_adc_result();
 10440  01AE40  EC6B  F00C         	call	_update_adc_result	;wreg free
 10441                           
 10442                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
 10443  01AE44  0E00               	movlw	0
 10444  01AE46  6EE6               	movwf	postinc1,c
 10445  01AE48  0E04               	movlw	4
 10446  01AE4A  6EE6               	movwf	postinc1,c
 10447  01AE4C  EC5B  F0C2         	call	_conv_raw_result	;wreg free
 10448  01AE50  0060  F0A8  FA31   	movff	btemp,_C+306	;volatile
 10449  01AE56  0060  F0AC  FA32   	movff	btemp+1,_C+307	;volatile
 10450  01AE5C  0060  F0B0  FA33   	movff	btemp+2,_C+308	;volatile
 10451  01AE62  0060  F0B4  FA34   	movff	btemp+3,_C+309	;volatile
 10452  01AE68  D7CA               	goto	l14136
 10453  01AE6A                     l14154:
 10454                           
 10455                           ; BSR set to: 0
 10456                           ;bsoc.c: 230:   set_load_relay_one(1);
 10457  01AE6A  0E01               	movlw	1
 10458  01AE6C  6EE6               	movwf	postinc1,c
 10459  01AE6E  ECE8  F010         	call	_set_load_relay_one	;wreg free
 10460                           
 10461                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
 10462  01AE72  0E0C               	movlw	12
 10463  01AE74  6EE6               	movwf	postinc1,c
 10464  01AE76  EC3F  F00E         	call	_TimerDone	;wreg free
 10465  01AE7A  502A               	movf	btemp^0,w,c
 10466  01AE7C  B4D8               	btfsc	status,2,c
 10467  01AE7E  D009               	goto	l14160
 10468                           
 10469                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
 10470  01AE80  0E10               	movlw	16
 10471  01AE82  6EE6               	movwf	postinc1,c
 10472  01AE84  0E27               	movlw	39
 10473  01AE86  6EE6               	movwf	postinc1,c
 10474  01AE88  0E0C               	movlw	12
 10475  01AE8A  6EE6               	movwf	postinc1,c
 10476  01AE8C  ECCE  F00B         	call	_StartTimer	;wreg free
 10477                           
 10478                           ;bsoc.c: 233:   } else {
 10479  01AE90  D006               	goto	l14164
 10480  01AE92                     l14160:
 10481                           
 10482                           ;bsoc.c: 234:    return -3.0;
 10483  01AE92  0E00               	movlw	0
 10484  01AE94  6E2A               	movwf	btemp^0,c
 10485  01AE96  0E00               	movlw	0
 10486  01AE98  6E2B               	movwf	(btemp+1)^0,c
 10487  01AE9A  0E40               	movlw	64
 10488  01AE9C  D037               	goto	L8
 10489  01AE9E                     l14164:
 10490                           
 10491                           ;bsoc.c: 237:   update_adc_result();
 10492  01AE9E  EC6B  F00C         	call	_update_adc_result	;wreg free
 10493                           
 10494                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
 10495  01AEA2  0E00               	movlw	0
 10496  01AEA4  6EE6               	movwf	postinc1,c
 10497  01AEA6  0E04               	movlw	4
 10498  01AEA8  6EE6               	movwf	postinc1,c
 10499  01AEAA  EC5B  F0C2         	call	_conv_raw_result	;wreg free
 10500  01AEAE  0060  F0A8  FA35   	movff	btemp,_C+310	;volatile
 10501  01AEB4  0060  F0AC  FA36   	movff	btemp+1,_C+311	;volatile
 10502  01AEBA  0060  F0B0  FA37   	movff	btemp+2,_C+312	;volatile
 10503  01AEC0  0060  F0B4  FA38   	movff	btemp+3,_C+313	;volatile
 10504                           
 10505                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
 10506  01AEC6  0E00               	movlw	0
 10507  01AEC8  6EE6               	movwf	postinc1,c
 10508  01AECA  0E00               	movlw	0
 10509  01AECC  6EE6               	movwf	postinc1,c
 10510  01AECE  EC5B  F0C2         	call	_conv_raw_result	;wreg free
 10511  01AED2  0060  F0A8  FA29   	movff	btemp,_C+298	;volatile
 10512  01AED8  0060  F0AC  FA2A   	movff	btemp+1,_C+299	;volatile
 10513  01AEDE  0060  F0B0  FA2B   	movff	btemp+2,_C+300	;volatile
 10514  01AEE4  0060  F0B4  FA2C   	movff	btemp+3,_C+301	;volatile
 10515  01AEEA  D789               	goto	l14136
 10516  01AEEC                     l14172:
 10517                           
 10518                           ; BSR set to: 0
 10519                           ;bsoc.c: 243:   set_load_relay_two(1);
 10520  01AEEC  0E01               	movlw	1
 10521  01AEEE  6EE6               	movwf	postinc1,c
 10522  01AEF0  ECE0  F010         	call	_set_load_relay_two	;wreg free
 10523                           
 10524                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
 10525  01AEF4  0E0C               	movlw	12
 10526  01AEF6  6EE6               	movwf	postinc1,c
 10527  01AEF8  EC3F  F00E         	call	_TimerDone	;wreg free
 10528  01AEFC  502A               	movf	btemp^0,w,c
 10529  01AEFE  A4D8               	btfss	status,2,c
 10530  01AF00  D008               	goto	l14180
 10531                           
 10532                           ;bsoc.c: 245:    return -4.0;
 10533  01AF02  0E00               	movlw	0
 10534  01AF04  6E2A               	movwf	btemp^0,c
 10535  01AF06  0E00               	movlw	0
 10536  01AF08  6E2B               	movwf	(btemp+1)^0,c
 10537  01AF0A  0E80               	movlw	128
 10538  01AF0C                     L8:
 10539  01AF0C  6E2C               	movwf	(btemp+2)^0,c
 10540  01AF0E  0EC0               	movlw	192
 10541  01AF10  D0C9               	goto	L6
 10542  01AF12                     l14180:
 10543                           
 10544                           ;bsoc.c: 247:   update_adc_result();
 10545  01AF12  EC6B  F00C         	call	_update_adc_result	;wreg free
 10546                           
 10547                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
 10548  01AF16  0E00               	movlw	0
 10549  01AF18  6EE6               	movwf	postinc1,c
 10550  01AF1A  0E04               	movlw	4
 10551  01AF1C  6EE6               	movwf	postinc1,c
 10552  01AF1E  EC5B  F0C2         	call	_conv_raw_result	;wreg free
 10553  01AF22  0060  F0A8  FA39   	movff	btemp,_C+314	;volatile
 10554  01AF28  0060  F0AC  FA3A   	movff	btemp+1,_C+315	;volatile
 10555  01AF2E  0060  F0B0  FA3B   	movff	btemp+2,_C+316	;volatile
 10556  01AF34  0060  F0B4  FA3C   	movff	btemp+3,_C+317	;volatile
 10557                           
 10558                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
 10559  01AF3A  0E00               	movlw	0
 10560  01AF3C  6EE6               	movwf	postinc1,c
 10561  01AF3E  0E00               	movlw	0
 10562  01AF40  6EE6               	movwf	postinc1,c
 10563  01AF42  EC5B  F0C2         	call	_conv_raw_result	;wreg free
 10564  01AF46  0060  F0A8  FA2D   	movff	btemp,_C+302	;volatile
 10565  01AF4C  0060  F0AC  FA2E   	movff	btemp+1,_C+303	;volatile
 10566  01AF52  0060  F0B0  FA2F   	movff	btemp+2,_C+304	;volatile
 10567  01AF58  0060  F0B4  FA30   	movff	btemp+3,_C+305	;volatile
 10568                           
 10569                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
 10570  01AF5E  EE22  F22D         	lfsr	2,_C+302	;volatile
 10571  01AF62  006F FF7B FFE6     	movff	postinc2,postinc1
 10572  01AF68  006F FF7B FFE6     	movff	postinc2,postinc1
 10573  01AF6E  006F FF7B FFE6     	movff	postinc2,postinc1
 10574  01AF74  006F FF7B FFE6     	movff	postinc2,postinc1
 10575  01AF7A  EE22  F229         	lfsr	2,_C+298	;volatile
 10576  01AF7E  006F FF7B FFE6     	movff	postinc2,postinc1
 10577  01AF84  006F FF7B FFE6     	movff	postinc2,postinc1
 10578  01AF8A  006F FF7B FFE6     	movff	postinc2,postinc1
 10579  01AF90  006F FF7B FFE6     	movff	postinc2,postinc1
 10580  01AF96  EC28  F00B         	call	___flsub	;wreg free
 10581  01AF9A  0060  F0AB  FFE6   	movff	btemp,postinc1
 10582  01AFA0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10583  01AFA6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10584  01AFAC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10585  01AFB2  EE22  F239         	lfsr	2,_C+314	;volatile
 10586  01AFB6  006F FF7B FFE6     	movff	postinc2,postinc1
 10587  01AFBC  006F FF7B FFE6     	movff	postinc2,postinc1
 10588  01AFC2  006F FF7B FFE6     	movff	postinc2,postinc1
 10589  01AFC8  006F FF7B FFE6     	movff	postinc2,postinc1
 10590  01AFCE  EE22  F235         	lfsr	2,_C+310	;volatile
 10591  01AFD2  006F FF7B FFE6     	movff	postinc2,postinc1
 10592  01AFD8  006F FF7B FFE6     	movff	postinc2,postinc1
 10593  01AFDE  006F FF7B FFE6     	movff	postinc2,postinc1
 10594  01AFE4  006F FF7B FFE6     	movff	postinc2,postinc1
 10595  01AFEA  EC28  F00B         	call	___flsub	;wreg free
 10596  01AFEE  0060  F0AB  FFE6   	movff	btemp,postinc1
 10597  01AFF4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10598  01AFFA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10599  01B000  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10600  01B006  EC13  F0BD         	call	___fldiv	;wreg free
 10601  01B00A  0060  F0AB  FFE6   	movff	btemp,postinc1
 10602  01B010  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10603  01B016  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10604  01B01C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10605  01B022  ECB6  F000         	call	_fabsf	;wreg free
 10606  01B026  0060  F0A8  F987   	movff	btemp,_C+136	;volatile
 10607  01B02C  0060  F0AC  F988   	movff	btemp+1,_C+137	;volatile
 10608  01B032  0060  F0B0  F989   	movff	btemp+2,_C+138	;volatile
 10609  01B038  0060  F0B4  F98A   	movff	btemp+3,_C+139	;volatile
 10610                           
 10611                           ;bsoc.c: 252:   set_load_relay_one(0);
 10612  01B03E  0E00               	movlw	0
 10613  01B040  6EE6               	movwf	postinc1,c
 10614  01B042  ECE8  F010         	call	_set_load_relay_one	;wreg free
 10615                           
 10616                           ;bsoc.c: 253:   set_load_relay_two(0);
 10617  01B046  0E00               	movlw	0
 10618  01B048  6EE6               	movwf	postinc1,c
 10619  01B04A  ECE0  F010         	call	_set_load_relay_two	;wreg free
 10620                           
 10621                           ;bsoc.c: 254:   esr_state = 0;
 10622  01B04E  0100               	movlb	0	; () banked
 10623  01B050  6BD0               	clrf	esr_check@esr_state& (0+255),b
 10624                           
 10625                           ; BSR set to: 0
 10626                           ;bsoc.c: 255:   return C.esr;
 10627  01B052  0062  F61C  F02A   	movff	_C+136,btemp	;volatile
 10628  01B058  0062  F620  F02B   	movff	_C+137,btemp+1	;volatile
 10629  01B05E  0062  F624  F02C   	movff	_C+138,btemp+2	;volatile
 10630  01B064  0062  F628  F02D   	movff	_C+139,btemp+3	;volatile
 10631  01B06A  D01D               	goto	l2392
 10632  01B06C                     l14202:
 10633  01B06C  0100               	movlb	0	; () banked
 10634  01B06E  51D0               	movf	esr_check@esr_state& (0+255),w,b
 10635  01B070  6E34               	movwf	(btemp+10)^0,c
 10636  01B072  6A35               	clrf	(btemp+11)^0,c
 10637                           
 10638                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10639                           ; Switch size 1, requested type "simple"
 10640                           ; Number of cases is 1, Range of values is 0 to 0
 10641                           ; switch strategies available:
 10642                           ; Name         Instructions Cycles
 10643                           ; simple_byte            4     3 (average)
 10644                           ;	Chosen strategy is simple_byte
 10645  01B074  5035               	movf	(btemp+11)^0,w,c
 10646  01B076  0A00               	xorlw	0	; case 0
 10647  01B078  A4D8               	btfss	status,2,c
 10648  01B07A  D00D               	goto	l14204
 10649                           
 10650                           ; BSR set to: 0
 10651                           ; Switch size 1, requested type "simple"
 10652                           ; Number of cases is 4, Range of values is 0 to 3
 10653                           ; switch strategies available:
 10654                           ; Name         Instructions Cycles
 10655                           ; simple_byte           13     7 (average)
 10656                           ;	Chosen strategy is simple_byte
 10657  01B07C  5034               	movf	(btemp+10)^0,w,c
 10658  01B07E  0A00               	xorlw	0	; case 0
 10659  01B080  B4D8               	btfsc	status,2,c
 10660  01B082  D6B5               	goto	l14134
 10661  01B084  0A01               	xorlw	1	; case 1
 10662  01B086  B4D8               	btfsc	status,2,c
 10663  01B088  D6BD               	goto	l14138
 10664  01B08A  0A03               	xorlw	3	; case 2
 10665  01B08C  B4D8               	btfsc	status,2,c
 10666  01B08E  D6ED               	goto	l14154
 10667  01B090  0A01               	xorlw	1	; case 3
 10668  01B092  B4D8               	btfsc	status,2,c
 10669  01B094  D72B               	goto	l14172
 10670  01B096                     l14204:
 10671                           
 10672                           ; BSR set to: 0
 10673                           ;bsoc.c: 260:  return -1.0;
 10674  01B096  0E00               	movlw	0
 10675  01B098  6E2A               	movwf	btemp^0,c
 10676  01B09A  0E00               	movlw	0
 10677  01B09C  6E2B               	movwf	(btemp+1)^0,c
 10678  01B09E  0E80               	movlw	128
 10679  01B0A0  6E2C               	movwf	(btemp+2)^0,c
 10680  01B0A2  0EBF               	movlw	191
 10681  01B0A4                     L6:
 10682  01B0A4  6E2D               	movwf	(btemp+3)^0,c
 10683  01B0A6                     l2392:
 10684                           
 10685                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 10686  01B0A6  52E5               	movf	postdec1,f,c
 10687  01B0A8  0012               	return		;funcret
 10688  01B0AA                     __end_of_esr_check:
 10689                           	opt callstack 0
 10690                           
 10691 ;; *************** function _update_adc_result *****************
 10692 ;; Defined at:
 10693 ;;		line 109 in file "daq.c"
 10694 ;; Parameters:    Size  Location     Type
 10695 ;;		None
 10696 ;; Auto vars:     Size  Location     Type
 10697 ;;		None
 10698 ;; Return value:  Size  Location     Type
 10699 ;;                  1  [STACK] _Bool 
 10700 ;; Registers used:
 10701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 10702 ;; Tracked objects:
 10703 ;;		On entry : 0/0
 10704 ;;		On exit  : 0/0
 10705 ;;		Unchanged: 0/0
 10706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10711 ;;Total ram usage:        0 bytes
 10712 ;; Hardware stack levels used:    1
 10713 ;; Hardware stack levels required when called:   17
 10714 ;; This function calls:
 10715 ;;		_StartTimer
 10716 ;;		_TimerDone
 10717 ;;		_check_adc_scan
 10718 ;;		_clear_adc_scan
 10719 ;;		_start_adc_scan
 10720 ;; This function is called by:
 10721 ;;		_esr_check
 10722 ;; This function uses a reentrant model
 10723 ;;
 10724                           
 10725                           	psect	text26
 10726  0018D6                     __ptext26:
 10727                           	opt callstack 0
 10728  0018D6                     _update_adc_result:
 10729                           	opt callstack 12
 10730                           
 10731                           ;daq.c: 111:  if (R.done) {
 10732                           
 10733                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10734                           ;incstack = 0
 10735  0018D6  0101               	movlb	1	; () banked
 10736  0018D8  513C               	movf	(_R+53)& (0+255),w,b	;volatile
 10737  0018DA  B4D8               	btfsc	status,2,c
 10738  0018DC  0012               	return	
 10739                           
 10740                           ; BSR set to: 1
 10741                           ;daq.c: 112:   clear_adc_scan();
 10742  0018DE  EC60  F011         	call	_clear_adc_scan	;wreg free
 10743                           
 10744                           ; BSR set to: 1
 10745                           ;daq.c: 113:   start_adc_scan();
 10746  0018E2  EC0B  F008         	call	_start_adc_scan	;wreg free
 10747                           
 10748                           ;daq.c: 114:   StartTimer(TMR_ADC, 200);
 10749  0018E6  0EC8               	movlw	200
 10750  0018E8  6EE6               	movwf	postinc1,c
 10751  0018EA  0E00               	movlw	0
 10752  0018EC  6EE6               	movwf	postinc1,c
 10753  0018EE  0E01               	movlw	1
 10754  0018F0  6EE6               	movwf	postinc1,c
 10755  0018F2  ECCE  F00B         	call	_StartTimer	;wreg free
 10756  0018F6                     l13580:
 10757  0018F6  0E01               	movlw	1
 10758  0018F8  6EE6               	movwf	postinc1,c
 10759  0018FA  EC3F  F00E         	call	_TimerDone	;wreg free
 10760  0018FE  502A               	movf	btemp^0,w,c
 10761  001900  A4D8               	btfss	status,2,c
 10762  001902  0012               	return	
 10763  001904  EC49  F011         	call	_check_adc_scan	;wreg free
 10764  001908  502A               	movf	btemp^0,w,c
 10765  00190A  A4D8               	btfss	status,2,c
 10766  00190C  0012               	return	
 10767  00190E  D7F3               	goto	l13580
 10768  001910                     __end_of_update_adc_result:
 10769                           	opt callstack 0
 10770                           
 10771 ;; *************** function _check_adc_scan *****************
 10772 ;; Defined at:
 10773 ;;		line 93 in file "daq.c"
 10774 ;; Parameters:    Size  Location     Type
 10775 ;;		None
 10776 ;; Auto vars:     Size  Location     Type
 10777 ;;		None
 10778 ;; Return value:  Size  Location     Type
 10779 ;;                  1  [STACK] _Bool 
 10780 ;; Registers used:
 10781 ;;		btemp
 10782 ;; Tracked objects:
 10783 ;;		On entry : 0/2
 10784 ;;		On exit  : 0/0
 10785 ;;		Unchanged: 0/0
 10786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10791 ;;Total ram usage:        0 bytes
 10792 ;; Hardware stack levels used:    1
 10793 ;; Hardware stack levels required when called:   15
 10794 ;; This function calls:
 10795 ;;		Nothing
 10796 ;; This function is called by:
 10797 ;;		_main
 10798 ;;		_update_adc_result
 10799 ;; This function uses a reentrant model
 10800 ;;
 10801                           
 10802                           	psect	text27
 10803  002292                     __ptext27:
 10804                           	opt callstack 0
 10805  002292                     _check_adc_scan:
 10806                           	opt callstack 13
 10807                           
 10808                           ;daq.c: 95:  return R.done;
 10809                           
 10810                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10811                           ;incstack = 0
 10812  002292  0060  F4F0  F02A   	movff	_R+53,btemp	;volatile
 10813                           
 10814                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10815  002298  0012               	return		;funcret
 10816  00229A                     __end_of_check_adc_scan:
 10817                           	opt callstack 0
 10818                           
 10819 ;; *************** function _set_load_relay_two *****************
 10820 ;; Defined at:
 10821 ;;		line 131 in file "mbmc.c"
 10822 ;; Parameters:    Size  Location     Type
 10823 ;;  mode            1  [STACK] const _Bool 
 10824 ;; Auto vars:     Size  Location     Type
 10825 ;;		None
 10826 ;; Return value:  Size  Location     Type
 10827 ;;                  1  [STACK] void 
 10828 ;; Registers used:
 10829 ;;		wreg, fsr1l, fsr1h
 10830 ;; Tracked objects:
 10831 ;;		On entry : 0/0
 10832 ;;		On exit  : 0/0
 10833 ;;		Unchanged: 0/0
 10834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10839 ;;Total ram usage:        0 bytes
 10840 ;; Hardware stack levels used:    1
 10841 ;; Hardware stack levels required when called:   15
 10842 ;; This function calls:
 10843 ;;		Nothing
 10844 ;; This function is called by:
 10845 ;;		_main
 10846 ;;		_esr_check
 10847 ;; This function uses a reentrant model
 10848 ;;
 10849                           
 10850                           	psect	text28
 10851  0021C0                     __ptext28:
 10852                           	opt callstack 0
 10853  0021C0                     _set_load_relay_two:
 10854                           	opt callstack 15
 10855                           
 10856                           ;mbmc.c: 131: void set_load_relay_two(const _Bool mode);mbmc.c: 132: {;mbmc.c: 133:  LAT
      +                          Dbits.LATD5 = mode;
 10857                           ;stkvar	_mode @ sp[(0)+-1]
 10858                           
 10859                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10860                           ;incstack = 0
 10861  0021C0  0EFF               	movlw	-1
 10862  0021C2  B0E3               	btfsc	plusw1,0,c
 10863  0021C4  D002               	bra	u12455
 10864  0021C6  9ABD               	bcf	189,5,c	;volatile
 10865  0021C8  D001               	bra	u12456
 10866  0021CA                     u12455:
 10867  0021CA  8ABD               	bsf	189,5,c	;volatile
 10868  0021CC                     u12456:
 10869                           
 10870                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 10871  0021CC  52E5               	movf	postdec1,f,c
 10872  0021CE  0012               	return		;funcret
 10873  0021D0                     __end_of_set_load_relay_two:
 10874                           	opt callstack 0
 10875                           
 10876 ;; *************** function _set_load_relay_one *****************
 10877 ;; Defined at:
 10878 ;;		line 126 in file "mbmc.c"
 10879 ;; Parameters:    Size  Location     Type
 10880 ;;  mode            1  [STACK] const _Bool 
 10881 ;; Auto vars:     Size  Location     Type
 10882 ;;		None
 10883 ;; Return value:  Size  Location     Type
 10884 ;;                  1  [STACK] void 
 10885 ;; Registers used:
 10886 ;;		wreg, fsr1l, fsr1h
 10887 ;; Tracked objects:
 10888 ;;		On entry : 0/0
 10889 ;;		On exit  : 0/0
 10890 ;;		Unchanged: 0/0
 10891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10896 ;;Total ram usage:        0 bytes
 10897 ;; Hardware stack levels used:    1
 10898 ;; Hardware stack levels required when called:   15
 10899 ;; This function calls:
 10900 ;;		Nothing
 10901 ;; This function is called by:
 10902 ;;		_main
 10903 ;;		_esr_check
 10904 ;; This function uses a reentrant model
 10905 ;;
 10906                           
 10907                           	psect	text29
 10908  0021D0                     __ptext29:
 10909                           	opt callstack 0
 10910  0021D0                     _set_load_relay_one:
 10911                           	opt callstack 15
 10912                           
 10913                           ;mbmc.c: 126: void set_load_relay_one(const _Bool mode);mbmc.c: 127: {;mbmc.c: 128:  LAT
      +                          Dbits.LATD4 = mode;
 10914                           ;stkvar	_mode @ sp[(0)+-1]
 10915                           
 10916                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10917                           ;incstack = 0
 10918  0021D0  0EFF               	movlw	-1
 10919  0021D2  B0E3               	btfsc	plusw1,0,c
 10920  0021D4  D002               	bra	u12445
 10921  0021D6  98BD               	bcf	189,4,c	;volatile
 10922  0021D8  D001               	bra	u12446
 10923  0021DA                     u12445:
 10924  0021DA  88BD               	bsf	189,4,c	;volatile
 10925  0021DC                     u12446:
 10926                           
 10927                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 10928  0021DC  52E5               	movf	postdec1,f,c
 10929  0021DE  0012               	return		;funcret
 10930  0021E0                     __end_of_set_load_relay_one:
 10931                           	opt callstack 0
 10932                           
 10933 ;; *************** function _eaDogM_WriteCommand *****************
 10934 ;; Defined at:
 10935 ;;		line 385 in file "eadog.c"
 10936 ;; Parameters:    Size  Location     Type
 10937 ;;  cmd             1  [STACK] const unsigned char 
 10938 ;; Auto vars:     Size  Location     Type
 10939 ;;		None
 10940 ;; Return value:  Size  Location     Type
 10941 ;;                  1  [STACK] void 
 10942 ;; Registers used:
 10943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10944 ;; Tracked objects:
 10945 ;;		On entry : 3F/3D
 10946 ;;		On exit  : 3F/0
 10947 ;;		Unchanged: 0/0
 10948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10953 ;;Total ram usage:        0 bytes
 10954 ;; Hardware stack levels used:    1
 10955 ;; Hardware stack levels required when called:   26
 10956 ;; This function calls:
 10957 ;;		_send_lcd_cmd_dma
 10958 ;; This function is called by:
 10959 ;;		_main
 10960 ;; This function uses a reentrant model
 10961 ;;
 10962                           
 10963                           	psect	text30
 10964  002210                     __ptext30:
 10965                           	opt callstack 0
 10966  002210                     _eaDogM_WriteCommand:
 10967                           	opt callstack 4
 10968                           
 10969                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
 10970                           ;stkvar	_cmd @ sp[(0)+-1]
 10971                           
 10972                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10973                           ;incstack = 0
 10974  002210  0EFF               	movlw	-1
 10975  002212  50E3               	movf	plusw1,w,c
 10976  002214  6EE6               	movwf	postinc1,c
 10977  002216  EC37  F010         	call	_send_lcd_cmd_dma	;wreg free
 10978                           
 10979                           ; BSR set to: 0
 10980                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 10981  00221A  52E5               	movf	postdec1,f,c
 10982  00221C  0012               	return		;funcret
 10983  00221E                     __end_of_eaDogM_WriteCommand:
 10984                           	opt callstack 0
 10985                           
 10986 ;; *************** function _display_history *****************
 10987 ;; Defined at:
 10988 ;;		line 610 in file "main.c"
 10989 ;; Parameters:    Size  Location     Type
 10990 ;;		None
 10991 ;; Auto vars:     Size  Location     Type
 10992 ;;  clock           8  [STACK] long long 
 10993 ;; Return value:  Size  Location     Type
 10994 ;;                  1  [STACK] _Bool 
 10995 ;; Registers used:
 10996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 10997 ;; Tracked objects:
 10998 ;;		On entry : 0/2
 10999 ;;		On exit  : 0/0
 11000 ;;		Unchanged: 0/0
 11001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11006 ;;Total ram usage:        0 bytes
 11007 ;; Hardware stack levels used:    1
 11008 ;; Hardware stack levels required when called:   28
 11009 ;; This function calls:
 11010 ;;		_WaitMs
 11011 ;;		_asctime
 11012 ;;		_get_switch
 11013 ;;		_get_vterm_ptr
 11014 ;;		_localtime
 11015 ;;		_sprintf
 11016 ;;		_time
 11017 ;;		_update_lcd
 11018 ;; This function is called by:
 11019 ;;		_main
 11020 ;; This function uses a reentrant model
 11021 ;;
 11022                           
 11023                           	psect	text31
 11024  01D094                     __ptext31:
 11025                           	opt callstack 0
 11026  01D094                     _display_history:
 11027                           	opt callstack 0
 11028                           
 11029                           ; BSR set to: 0
 11030                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11031  01D094  0E08               	movlw	8
 11032  01D096  26E1               	addwf	fsr1l,f,c
 11033  01D098  0E00               	movlw	0
 11034  01D09A  22E2               	addwfc	fsr1h,f,c
 11035                           
 11036                           ;main.c: 612:  static uint8_t bwait = 0;;main.c: 613:  time_t clock = time(((void*)0));
 11037                           
 11038                           ;incstack = 0
 11039  01D09C  0E00               	movlw	0
 11040  01D09E  6EE6               	movwf	postinc1,c
 11041  01D0A0  0E00               	movlw	0
 11042  01D0A2  6EE6               	movwf	postinc1,c
 11043  01D0A4  ECCF  F008         	call	_time	;wreg free
 11044  01D0A8  52E5               	movf	postdec1,f,c
 11045  01D0AA  006F FF9C  F041    	movff	indf1,btemp+23
 11046  01D0B0  52E5               	movf	postdec1,f,c
 11047  01D0B2  006F FF9C  F040    	movff	indf1,btemp+22
 11048  01D0B8  52E5               	movf	postdec1,f,c
 11049  01D0BA  006F FF9C  F03F    	movff	indf1,btemp+21
 11050  01D0C0  52E5               	movf	postdec1,f,c
 11051  01D0C2  006F FF9C  F03E    	movff	indf1,btemp+20
 11052  01D0C8  52E5               	movf	postdec1,f,c
 11053  01D0CA  006F FF9C  F03D    	movff	indf1,btemp+19
 11054  01D0D0  52E5               	movf	postdec1,f,c
 11055  01D0D2  006F FF9C  F03C    	movff	indf1,btemp+18
 11056  01D0D8  52E5               	movf	postdec1,f,c
 11057  01D0DA  006F FF9C  F03B    	movff	indf1,btemp+17
 11058  01D0E0  52E5               	movf	postdec1,f,c
 11059  01D0E2  006F FF9C  F03A    	movff	indf1,btemp+16
 11060                           
 11061                           ;stkvar	_clock @ sp[(-8)+0]
 11062  01D0E8  0EF8               	movlw	-8
 11063  01D0EA  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 11064  01D0F0  0EF9               	movlw	-7
 11065  01D0F2  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 11066  01D0F8  0EFA               	movlw	-6
 11067  01D0FA  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 11068  01D100  0EFB               	movlw	-5
 11069  01D102  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 11070  01D108  0EFC               	movlw	-4
 11071  01D10A  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 11072  01D110  0EFD               	movlw	-3
 11073  01D112  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 11074  01D118  0EFE               	movlw	-2
 11075  01D11A  0060  F103  FFE3   	movff	btemp+22,plusw1
 11076  01D120  0EFF               	movlw	-1
 11077  01D122  0060  F107  FFE3   	movff	btemp+23,plusw1
 11078                           
 11079                           ; BSR set to: 57
 11080                           ;main.c: 615:  if (get_switch(SCALIB) && (++bwait > 5)) {
 11081  01D128  0E04               	movlw	4
 11082  01D12A  6EE6               	movwf	postinc1,c
 11083  01D12C  ECD3  F00D         	call	_get_switch	;wreg free
 11084  01D130  502A               	movf	btemp^0,w,c
 11085  01D132  B4D8               	btfsc	status,2,c
 11086  01D134  D082               	goto	l16966
 11087  01D136  2A53               	incf	display_history@bwait^0,f,c
 11088  01D138  0E05               	movlw	5
 11089  01D13A  6453               	cpfsgt	display_history@bwait^0,c
 11090  01D13C  D07E               	goto	l16966
 11091                           
 11092                           ;main.c: 616:   t_mbmc = localtime(&clock);
 11093                           ;stkvar	_clock @ sp[(-8)+0]
 11094  01D13E  0EF8               	movlw	248
 11095  01D140  24E1               	addwf	fsr1l,w,c
 11096  01D142  6E2A               	movwf	btemp^0,c
 11097  01D144  0EFF               	movlw	255
 11098  01D146  20E2               	addwfc	fsr1h,w,c
 11099  01D148  6E2B               	movwf	(btemp+1)^0,c
 11100  01D14A  0060  F0AB  FFE6   	movff	btemp,postinc1
 11101  01D150  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11102  01D156  EC08  F010         	call	_localtime	;wreg free
 11103  01D15A  0060  F0A8  F0C6   	movff	btemp,_t_mbmc
 11104  01D160  0060  F0AC  F0C7   	movff	btemp+1,_t_mbmc+1
 11105                           
 11106                           ;main.c: 617:   sprintf(get_vterm_ptr(0, 0), "History 3           ");
 11107  01D166  0EA4               	movlw	low STR_64
 11108  01D168  6EE6               	movwf	postinc1,c
 11109  01D16A  0EFD               	movlw	high STR_64
 11110  01D16C  6EE6               	movwf	postinc1,c
 11111  01D16E  0E00               	movlw	0
 11112  01D170  6EE6               	movwf	postinc1,c
 11113  01D172  0E00               	movlw	0
 11114  01D174  6EE6               	movwf	postinc1,c
 11115  01D176  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 11116  01D17A  0060  F0AB  FFE6   	movff	btemp,postinc1
 11117  01D180  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11118  01D186  0E04               	movlw	4
 11119  01D188  6EE6               	movwf	postinc1,c
 11120  01D18A  EC8D  F0F9         	call	_sprintf	;wreg free
 11121                           
 11122                           ; BSR set to: 0
 11123                           ;main.c: 618:   sprintf(get_vterm_ptr(1, 0), "History 3           ");
 11124  01D18E  0EA4               	movlw	low STR_64
 11125  01D190  6EE6               	movwf	postinc1,c
 11126  01D192  0EFD               	movlw	high STR_64
 11127  01D194  6EE6               	movwf	postinc1,c
 11128  01D196  0E00               	movlw	0
 11129  01D198  6EE6               	movwf	postinc1,c
 11130  01D19A  0E01               	movlw	1
 11131  01D19C  6EE6               	movwf	postinc1,c
 11132  01D19E  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 11133  01D1A2  0060  F0AB  FFE6   	movff	btemp,postinc1
 11134  01D1A8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11135  01D1AE  0E04               	movlw	4
 11136  01D1B0  6EE6               	movwf	postinc1,c
 11137  01D1B2  EC8D  F0F9         	call	_sprintf	;wreg free
 11138                           
 11139                           ; BSR set to: 0
 11140                           ;main.c: 619:   sprintf(get_vterm_ptr(2, 0), "History 3           ");
 11141  01D1B6  0EA4               	movlw	low STR_64
 11142  01D1B8  6EE6               	movwf	postinc1,c
 11143  01D1BA  0EFD               	movlw	high STR_64
 11144  01D1BC  6EE6               	movwf	postinc1,c
 11145  01D1BE  0E00               	movlw	0
 11146  01D1C0  6EE6               	movwf	postinc1,c
 11147  01D1C2  0E02               	movlw	2
 11148  01D1C4  6EE6               	movwf	postinc1,c
 11149  01D1C6  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 11150  01D1CA  0060  F0AB  FFE6   	movff	btemp,postinc1
 11151  01D1D0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11152  01D1D6  0E04               	movlw	4
 11153  01D1D8  6EE6               	movwf	postinc1,c
 11154  01D1DA  EC8D  F0F9         	call	_sprintf	;wreg free
 11155                           
 11156                           ; BSR set to: 0
 11157                           ;main.c: 620:   sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
 11158  01D1DE  0060  F31B  FFE6   	movff	_t_mbmc,postinc1
 11159  01D1E4  0060  F31F  FFE6   	movff	_t_mbmc+1,postinc1
 11160  01D1EA  ECD0  F0BF         	call	_asctime	;wreg free
 11161  01D1EE  0060  F0AB  FFE6   	movff	btemp,postinc1
 11162  01D1F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11163  01D1FA  0E61               	movlw	low (STR_72+5)
 11164  01D1FC  6EE6               	movwf	postinc1,c
 11165  01D1FE  0EFF               	movlw	high (STR_72+5)
 11166  01D200  6EE6               	movwf	postinc1,c
 11167  01D202  0E00               	movlw	0
 11168  01D204  6EE6               	movwf	postinc1,c
 11169  01D206  0E03               	movlw	3
 11170  01D208  6EE6               	movwf	postinc1,c
 11171  01D20A  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 11172  01D20E  0060  F0AB  FFE6   	movff	btemp,postinc1
 11173  01D214  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11174  01D21A  0E06               	movlw	6
 11175  01D21C  6EE6               	movwf	postinc1,c
 11176  01D21E  EC8D  F0F9         	call	_sprintf	;wreg free
 11177                           
 11178                           ; BSR set to: 0
 11179                           ;main.c: 621:   update_lcd(0);
 11180  01D222  0E00               	movlw	0
 11181  01D224  6EE6               	movwf	postinc1,c
 11182  01D226  EC3F  F0F2         	call	_update_lcd	;wreg free
 11183                           
 11184                           ;main.c: 622:   WaitMs(2000);
 11185  01D22A  0ED0               	movlw	208
 11186  01D22C  6EE6               	movwf	postinc1,c
 11187  01D22E  0E07               	movlw	7
 11188  01D230  6EE6               	movwf	postinc1,c
 11189  01D232  ECC0  F00C         	call	_WaitMs	;wreg free
 11190  01D236                     l16960:
 11191                           
 11192                           ;main.c: 623:   bwait = 0;
 11193  01D236  6A53               	clrf	display_history@bwait^0,c
 11194  01D238  D007               	goto	l1524
 11195  01D23A                     l16966:
 11196                           
 11197                           ;main.c: 626:   if (!get_switch(SCALIB))
 11198  01D23A  0E04               	movlw	4
 11199  01D23C  6EE6               	movwf	postinc1,c
 11200  01D23E  ECD3  F00D         	call	_get_switch	;wreg free
 11201  01D242  502A               	movf	btemp^0,w,c
 11202  01D244  B4D8               	btfsc	status,2,c
 11203  01D246  D7F7               	goto	l16960
 11204  01D248                     l1524:
 11205                           
 11206                           ; _display_history: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11207  01D248  0EF8               	movlw	248
 11208  01D24A  26E1               	addwf	fsr1l,f,c
 11209  01D24C  0EFF               	movlw	255
 11210  01D24E  22E2               	addwfc	fsr1h,f,c
 11211  01D250  0012               	return		;funcret
 11212  01D252                     __end_of_display_history:
 11213                           	opt callstack 0
 11214                           
 11215 ;; *************** function _time *****************
 11216 ;; Defined at:
 11217 ;;		line 231 in file "mbmc.c"
 11218 ;; Parameters:    Size  Location     Type
 11219 ;;  t               2  [STACK] PTR long long 
 11220 ;;		 -> time@current_time(8), NULL(0), 
 11221 ;; Auto vars:     Size  Location     Type
 11222 ;;		None
 11223 ;; Return value:  Size  Location     Type
 11224 ;;                  8  [STACK] long long 
 11225 ;; Registers used:
 11226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
 11227 ;; Tracked objects:
 11228 ;;		On entry : 0/0
 11229 ;;		On exit  : 3F/39
 11230 ;;		Unchanged: 0/0
 11231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11236 ;;Total ram usage:        0 bytes
 11237 ;; Hardware stack levels used:    1
 11238 ;; Hardware stack levels required when called:   15
 11239 ;; This function calls:
 11240 ;;		Nothing
 11241 ;; This function is called by:
 11242 ;;		_main
 11243 ;;		_display_history
 11244 ;;		_check_day_time
 11245 ;; This function uses a reentrant model
 11246 ;;
 11247                           
 11248                           	psect	text32
 11249  00119E                     __ptext32:
 11250                           	opt callstack 0
 11251  00119E                     _time:
 11252                           	opt callstack 0
 11253                           
 11254                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 8 argfudge = 6
 11255  00119E  0E06               	movlw	6
 11256  0011A0  26E1               	addwf	fsr1l,f,c
 11257  0011A2  0E00               	movlw	0
 11258  0011A4  22E2               	addwfc	fsr1h,f,c
 11259                           
 11260                           ;mbmc.c: 231: time_t time(time_t * t);mbmc.c: 232: {;mbmc.c: 233:  static time_t current
      +                          _time;;mbmc.c: 234:  PIE8bits.TMR5IE = 0;
 11261                           
 11262                           ;incstack = 0
 11263 ;; hardware stack exceeded
 11264  0011A6  0139               	movlb	57	; () banked
 11265  0011A8  9D98               	bcf	152,6,b	;volatile
 11266                           
 11267                           ; BSR set to: 57
 11268                           ;mbmc.c: 235:  current_time = V.ticks;
 11269  0011AA  0102               	movlb	2	; () banked
 11270  0011AC  5181               	movf	(_V+129)& (0+255),w,b	;volatile
 11271  0011AE  0100               	movlb	0	; () banked
 11272  0011B0  6FDC               	movwf	time@current_time& (0+255),b
 11273  0011B2  0102               	movlb	2	; () banked
 11274  0011B4  5182               	movf	(_V+130)& (0+255),w,b	;volatile
 11275  0011B6  0100               	movlb	0	; () banked
 11276  0011B8  6FDD               	movwf	(time@current_time+1)& (0+255),b
 11277  0011BA  0102               	movlb	2	; () banked
 11278  0011BC  5183               	movf	(_V+131)& (0+255),w,b	;volatile
 11279  0011BE  0100               	movlb	0	; () banked
 11280  0011C0  6FDE               	movwf	(time@current_time+2)& (0+255),b
 11281  0011C2  0102               	movlb	2	; () banked
 11282  0011C4  5184               	movf	(_V+132)& (0+255),w,b	;volatile
 11283  0011C6  0100               	movlb	0	; () banked
 11284  0011C8  6FDF               	movwf	(time@current_time+3)& (0+255),b
 11285  0011CA  6BE0               	clrf	(time@current_time+4)& (0+255),b
 11286  0011CC  6BE1               	clrf	(time@current_time+5)& (0+255),b
 11287  0011CE  6BE2               	clrf	(time@current_time+6)& (0+255),b
 11288  0011D0  6BE3               	clrf	(time@current_time+7)& (0+255),b
 11289                           
 11290                           ; BSR set to: 0
 11291                           ;mbmc.c: 236:  PIE8bits.TMR5IE = 1;
 11292  0011D2  0139               	movlb	57	; () banked
 11293  0011D4  8D98               	bsf	152,6,b	;volatile
 11294                           
 11295                           ; BSR set to: 57
 11296                           ;mbmc.c: 237:  if (t) {
 11297                           ;stkvar	_t @ sp[(0)+-8]
 11298  0011D6  0EF8               	movlw	-8
 11299  0011D8  006F FF8C  F02A    	movff	plusw1,btemp
 11300  0011DE  0EF9               	movlw	-7
 11301  0011E0  50E3               	movf	plusw1,w,c
 11302  0011E2  102A               	iorwf	btemp^0,w,c
 11303                           
 11304                           ; BSR set to: 57
 11305                           ;mbmc.c: 240:  return current_time;
 11306                           
 11307                           ; BSR set to: 57
 11308  0011E4  EE20  F0DC         	lfsr	2,time@current_time
 11309                           
 11310                           ;stkvar	?_time @ sp[(0)+-8]
 11311  0011E8  0E08               	movlw	8
 11312  0011EA  6E2A               	movwf	btemp^0,c
 11313  0011EC  0EF8               	movlw	-8
 11314  0011EE                     us1167999:
 11315  0011EE  006F FF7B FFE3     	movff	postinc2,plusw1
 11316  0011F4  28E8               	incf	wreg,w,c
 11317  0011F6  2E2A               	decfsz	btemp^0,f,c
 11318  0011F8  D7FA               	bra	us1167999
 11319                           
 11320                           ; BSR set to: 57
 11321                           ; _time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize 
      +                          = 8, vargsize = 0
 11322  0011FA  0012               	return		;funcret
 11323  0011FC                     __end_of_time:
 11324                           	opt callstack 0
 11325                           
 11326 ;; *************** function _localtime *****************
 11327 ;; Defined at:
 11328 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime.c"
 11329 ;; Parameters:    Size  Location     Type
 11330 ;;  t               2  [STACK] PTR const long long 
 11331 ;;		 -> clock(8), 
 11332 ;; Auto vars:     Size  Location     Type
 11333 ;;		None
 11334 ;; Return value:  Size  Location     Type
 11335 ;;                  2  [STACK] PTR struct tm
 11336 ;; Registers used:
 11337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11338 ;; Tracked objects:
 11339 ;;		On entry : 0/39
 11340 ;;		On exit  : 0/0
 11341 ;;		Unchanged: 0/0
 11342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11347 ;;Total ram usage:        0 bytes
 11348 ;; Hardware stack levels used:    1
 11349 ;; Hardware stack levels required when called:   21
 11350 ;; This function calls:
 11351 ;;		___localtime_r
 11352 ;; This function is called by:
 11353 ;;		_display_history
 11354 ;; This function uses a reentrant model
 11355 ;;
 11356                           
 11357                           	psect	text33
 11358  002010                     __ptext33:
 11359                           	opt callstack 0
 11360  002010                     _localtime:
 11361                           	opt callstack 8
 11362                           
 11363                           ; BSR set to: 57
 11364                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11365                           ;incstack = 0
 11366  002010  0EDF               	movlw	low localtime@tm
 11367  002012  6EE6               	movwf	postinc1,c
 11368  002014  0E03               	movlw	high localtime@tm
 11369  002016  6EE6               	movwf	postinc1,c
 11370                           
 11371                           ;stkvar	_t @ sp[(-2)+-2]
 11372  002018  0EFC               	movlw	-4
 11373  00201A  006F FF8F FFE6     	movff	plusw1,postinc1
 11374  002020  006F FF8F FFE6     	movff	plusw1,postinc1
 11375  002026  ECAE  F0DE         	call	___localtime_r	;wreg free
 11376                           
 11377                           ; _localtime: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 11378  00202A  52E5               	movf	postdec1,f,c
 11379  00202C  52E5               	movf	postdec1,f,c
 11380  00202E  0012               	return		;funcret
 11381  002030                     __end_of_localtime:
 11382                           	opt callstack 0
 11383                           
 11384 ;; *************** function ___localtime_r *****************
 11385 ;; Defined at:
 11386 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime_r.c"
 11387 ;; Parameters:    Size  Location     Type
 11388 ;;  t               2  [STACK] PTR const long long 
 11389 ;;		 -> clock(8), 
 11390 ;;  tm              2  [STACK] PTR struct tm
 11391 ;;		 -> localtime@tm(24), 
 11392 ;; Auto vars:     Size  Location     Type
 11393 ;;		None
 11394 ;; Return value:  Size  Location     Type
 11395 ;;                  2  [STACK] PTR struct tm
 11396 ;; Registers used:
 11397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11398 ;; Tracked objects:
 11399 ;;		On entry : 0/39
 11400 ;;		On exit  : 0/0
 11401 ;;		Unchanged: 0/0
 11402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11407 ;;Total ram usage:        0 bytes
 11408 ;; Hardware stack levels used:    1
 11409 ;; Hardware stack levels required when called:   20
 11410 ;; This function calls:
 11411 ;;		___secs_to_tm
 11412 ;;		___secs_to_zone
 11413 ;; This function is called by:
 11414 ;;		_localtime
 11415 ;; This function uses a reentrant model
 11416 ;;
 11417                           
 11418                           	psect	text34
 11419  01BD5C                     __ptext34:
 11420                           	opt callstack 0
 11421  01BD5C                     ___localtime_r:
 11422                           	opt callstack 8
 11423                           
 11424                           ;stkvar	_t @ sp[(0)+-2]
 11425                           
 11426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11427                           ;incstack = 0
 11428  01BD5C  0EFE               	movlw	-2
 11429  01BD5E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11430  01BD64  0EFF               	movlw	-1
 11431  01BD66  006F FF8F FFDA     	movff	plusw1,fsr2h
 11432  01BD6C  0E07               	movlw	7
 11433  01BD6E  AEDB               	btfss	plusw2,7,c
 11434  01BD70  D010               	goto	u16170
 11435  01BD72  52DE               	movf	postinc2,f,c
 11436  01BD74  52DE               	movf	postinc2,f,c
 11437  01BD76  0E80               	movlw	128
 11438  01BD78  5CDE               	subwf	postinc2,w,c
 11439  01BD7A  0EBD               	movlw	189
 11440  01BD7C  58DE               	subwfb	postinc2,w,c
 11441  01BD7E  0E0E               	movlw	14
 11442  01BD80  58DE               	subwfb	postinc2,w,c
 11443  01BD82  0EFF               	movlw	255
 11444  01BD84  58DE               	subwfb	postinc2,w,c
 11445  01BD86  0EFF               	movlw	255
 11446  01BD88  58DE               	subwfb	postinc2,w,c
 11447  01BD8A  0EFF               	movlw	255
 11448  01BD8C  58DE               	subwfb	postinc2,w,c
 11449  01BD8E  A0D8               	btfss	status,0,c
 11450  01BD90  D01F               	goto	u16180
 11451  01BD92                     u16170:
 11452                           
 11453                           ;stkvar	_t @ sp[(0)+-2]
 11454  01BD92  0EFE               	movlw	-2
 11455  01BD94  006F FF8F FFD9     	movff	plusw1,fsr2l
 11456  01BD9A  0EFF               	movlw	-1
 11457  01BD9C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11458  01BDA2  0E07               	movlw	7
 11459  01BDA4  BEDB               	btfsc	plusw2,7,c
 11460  01BDA6  D019               	goto	l16524
 11461  01BDA8  0E07               	movlw	7
 11462  01BDAA  50DB               	movf	plusw2,w,c
 11463  01BDAC  E111               	bnz	u16180
 11464  01BDAE  0E06               	movlw	6
 11465  01BDB0  50DB               	movf	plusw2,w,c
 11466  01BDB2  E10E               	bnz	u16180
 11467  01BDB4  0E05               	movlw	5
 11468  01BDB6  50DB               	movf	plusw2,w,c
 11469  01BDB8  E10B               	bnz	u16180
 11470  01BDBA  04DE               	decf	postinc2,w,c
 11471  01BDBC  0E7B               	movlw	123
 11472  01BDBE  58DE               	subwfb	postinc2,w,c
 11473  01BDC0  0E9D               	movlw	157
 11474  01BDC2  58DE               	subwfb	postinc2,w,c
 11475  01BDC4  0E40               	movlw	64
 11476  01BDC6  58DE               	subwfb	postinc2,w,c
 11477  01BDC8  0EF1               	movlw	241
 11478  01BDCA  58DE               	subwfb	postinc2,w,c
 11479  01BDCC  A0D8               	btfss	status,0,c
 11480  01BDCE  D005               	goto	l16524
 11481  01BDD0                     u16180:
 11482  01BDD0  0E00               	movlw	0
 11483  01BDD2  6E2A               	movwf	btemp^0,c
 11484  01BDD4  0E00               	movlw	0
 11485  01BDD6  6E2B               	movwf	(btemp+1)^0,c
 11486  01BDD8  D0EF               	goto	l3501
 11487  01BDDA                     l16524:
 11488                           
 11489                           ;stkvar	_tm @ sp[(0)+-4]
 11490  01BDDA  0EFC               	movlw	-4
 11491  01BDDC  50E3               	movf	plusw1,w,c
 11492  01BDDE  0F16               	addlw	22
 11493  01BDE0  6E34               	movwf	(btemp+10)^0,c
 11494  01BDE2  0EFD               	movlw	-3
 11495  01BDE4  006F FF8C  F035    	movff	plusw1,btemp+11
 11496  01BDEA  0E00               	movlw	0
 11497  01BDEC  2235               	addwfc	(btemp+11)^0,f,c
 11498  01BDEE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11499  01BDF4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11500  01BDFA  0E00               	movlw	0
 11501  01BDFC  6EE6               	movwf	postinc1,c
 11502  01BDFE  0E00               	movlw	0
 11503  01BE00  6EE6               	movwf	postinc1,c
 11504                           
 11505                           ;stkvar	_tm @ sp[(-4)+-4]
 11506  01BE02  0EF8               	movlw	-8
 11507  01BE04  50E3               	movf	plusw1,w,c
 11508  01BE06  0F12               	addlw	18
 11509  01BE08  6E34               	movwf	(btemp+10)^0,c
 11510  01BE0A  0EF9               	movlw	-7
 11511  01BE0C  006F FF8C  F035    	movff	plusw1,btemp+11
 11512  01BE12  0E00               	movlw	0
 11513  01BE14  2235               	addwfc	(btemp+11)^0,f,c
 11514  01BE16  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11515  01BE1C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11516                           
 11517                           ;stkvar	_tm @ sp[(-6)+-4]
 11518  01BE22  0EF6               	movlw	-10
 11519  01BE24  50E3               	movf	plusw1,w,c
 11520  01BE26  0F10               	addlw	16
 11521  01BE28  6E34               	movwf	(btemp+10)^0,c
 11522  01BE2A  0EF7               	movlw	-9
 11523  01BE2C  006F FF8C  F035    	movff	plusw1,btemp+11
 11524  01BE32  0E00               	movlw	0
 11525  01BE34  2235               	addwfc	(btemp+11)^0,f,c
 11526  01BE36  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11527  01BE3C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11528  01BE42  0E00               	movlw	0
 11529  01BE44  6EE6               	movwf	postinc1,c
 11530  01BE46  0E00               	movlw	0
 11531  01BE48  6EE6               	movwf	postinc1,c
 11532                           
 11533                           ;stkvar	_t @ sp[(-10)+-2]
 11534  01BE4A  0EF4               	movlw	-12
 11535  01BE4C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11536  01BE52  0EF5               	movlw	-11
 11537  01BE54  006F FF8F FFDA     	movff	plusw1,fsr2h
 11538  01BE5A  006F FF7B FFE6     	movff	postinc2,postinc1
 11539  01BE60  006F FF7B FFE6     	movff	postinc2,postinc1
 11540  01BE66  006F FF7B FFE6     	movff	postinc2,postinc1
 11541  01BE6C  006F FF7B FFE6     	movff	postinc2,postinc1
 11542  01BE72  006F FF7B FFE6     	movff	postinc2,postinc1
 11543  01BE78  006F FF7B FFE6     	movff	postinc2,postinc1
 11544  01BE7E  006F FF7B FFE6     	movff	postinc2,postinc1
 11545  01BE84  006F FF7B FFE6     	movff	postinc2,postinc1
 11546  01BE8A  EC71  F0AD         	call	___secs_to_zone	;wreg free
 11547                           
 11548                           ;stkvar	_tm @ sp[(0)+-4]
 11549  01BE8E  0EFC               	movlw	-4
 11550  01BE90  006F FF8F FFE6     	movff	plusw1,postinc1
 11551  01BE96  006F FF8F FFE6     	movff	plusw1,postinc1
 11552                           
 11553                           ;stkvar	_t @ sp[(-2)+-2]
 11554  01BE9C  0EFC               	movlw	-4
 11555  01BE9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11556  01BEA4  0EFD               	movlw	-3
 11557  01BEA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11558  01BEAC  006F FF78  F03A    	movff	postinc2,btemp+16
 11559  01BEB2  006F FF78  F03B    	movff	postinc2,btemp+17
 11560  01BEB8  006F FF78  F03C    	movff	postinc2,btemp+18
 11561  01BEBE  006F FF78  F03D    	movff	postinc2,btemp+19
 11562  01BEC4  006F FF78  F03E    	movff	postinc2,btemp+20
 11563  01BECA  006F FF78  F03F    	movff	postinc2,btemp+21
 11564  01BED0  006F FF78  F040    	movff	postinc2,btemp+22
 11565  01BED6  006F FF78  F041    	movff	postinc2,btemp+23
 11566                           
 11567                           ;stkvar	_tm @ sp[(-2)+-4]
 11568  01BEDC  0EFA               	movlw	-6
 11569  01BEDE  006F FF8C  F034    	movff	plusw1,btemp+10
 11570  01BEE4  0EFB               	movlw	-5
 11571  01BEE6  006F FF8C  F035    	movff	plusw1,btemp+11
 11572  01BEEC  0E12               	movlw	18
 11573  01BEEE  2434               	addwf	(btemp+10)^0,w,c
 11574  01BEF0  6ED9               	movwf	fsr2l,c
 11575  01BEF2  0E00               	movlw	0
 11576  01BEF4  2035               	addwfc	(btemp+11)^0,w,c
 11577  01BEF6  6EDA               	movwf	fsr2h,c
 11578  01BEF8  006F FF78  F032    	movff	postinc2,btemp+8
 11579  01BEFE  006F FF78  F033    	movff	postinc2,btemp+9
 11580  01BF04  006F FF78  F034    	movff	postinc2,btemp+10
 11581  01BF0A  006F FF78  F035    	movff	postinc2,btemp+11
 11582  01BF10  0060  F0C8  F042   	movff	btemp+8,btemp+24
 11583  01BF16  0060  F0CC  F043   	movff	btemp+9,btemp+25
 11584  01BF1C  0060  F0D0  F044   	movff	btemp+10,btemp+26
 11585  01BF22  0060  F0D4  F045   	movff	btemp+11,btemp+27
 11586  01BF28  6A46               	clrf	(btemp+28)^0,c
 11587  01BF2A  BE45               	btfsc	(btemp+27)^0,7,c
 11588  01BF2C  6846               	setf	(btemp+28)^0,c
 11589  01BF2E  0060  F118  F047   	movff	btemp+28,btemp+29
 11590  01BF34  0060  F118  F048   	movff	btemp+28,btemp+30
 11591  01BF3A  0060  F118  F049   	movff	btemp+28,btemp+31
 11592  01BF40  503A               	movf	(btemp+16)^0,w,c
 11593  01BF42  2442               	addwf	(btemp+24)^0,w,c
 11594  01BF44  6E32               	movwf	(btemp+8)^0,c
 11595  01BF46  503B               	movf	(btemp+17)^0,w,c
 11596  01BF48  2043               	addwfc	(btemp+25)^0,w,c
 11597  01BF4A  6E33               	movwf	(btemp+9)^0,c
 11598  01BF4C  503C               	movf	(btemp+18)^0,w,c
 11599  01BF4E  2044               	addwfc	(btemp+26)^0,w,c
 11600  01BF50  6E34               	movwf	(btemp+10)^0,c
 11601  01BF52  503D               	movf	(btemp+19)^0,w,c
 11602  01BF54  2045               	addwfc	(btemp+27)^0,w,c
 11603  01BF56  6E35               	movwf	(btemp+11)^0,c
 11604  01BF58  503E               	movf	(btemp+20)^0,w,c
 11605  01BF5A  2046               	addwfc	(btemp+28)^0,w,c
 11606  01BF5C  6E36               	movwf	(btemp+12)^0,c
 11607  01BF5E  503F               	movf	(btemp+21)^0,w,c
 11608  01BF60  2047               	addwfc	(btemp+29)^0,w,c
 11609  01BF62  6E37               	movwf	(btemp+13)^0,c
 11610  01BF64  5040               	movf	(btemp+22)^0,w,c
 11611  01BF66  2048               	addwfc	(btemp+30)^0,w,c
 11612  01BF68  6E38               	movwf	(btemp+14)^0,c
 11613  01BF6A  5041               	movf	(btemp+23)^0,w,c
 11614  01BF6C  2049               	addwfc	(btemp+31)^0,w,c
 11615  01BF6E  6E39               	movwf	(btemp+15)^0,c
 11616  01BF70  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 11617  01BF76  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 11618  01BF7C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11619  01BF82  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11620  01BF88  0060  F0DB  FFE6   	movff	btemp+12,postinc1
 11621  01BF8E  0060  F0DF  FFE6   	movff	btemp+13,postinc1
 11622  01BF94  0060  F0E3  FFE6   	movff	btemp+14,postinc1
 11623  01BF9A  0060  F0E7  FFE6   	movff	btemp+15,postinc1
 11624  01BFA0  EC42  F093         	call	___secs_to_tm	;wreg free
 11625  01BFA4  BE2D               	btfsc	(btemp+3)^0,7,c
 11626  01BFA6  D714               	goto	u16180
 11627                           
 11628                           ;stkvar	_tm @ sp[(0)+-4]
 11629  01BFA8  0EFC               	movlw	-4
 11630  01BFAA  006F FF8C  F02A    	movff	plusw1,btemp
 11631  01BFB0  0EFD               	movlw	-3
 11632  01BFB2  006F FF8C  F02B    	movff	plusw1,btemp+1
 11633  01BFB8                     l3501:
 11634                           
 11635                           ; ___localtime_r: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 11636  01BFB8  52E5               	movf	postdec1,f,c
 11637  01BFBA  52E5               	movf	postdec1,f,c
 11638  01BFBC  52E5               	movf	postdec1,f,c
 11639  01BFBE  52E5               	movf	postdec1,f,c
 11640  01BFC0  0012               	return		;funcret
 11641  01BFC2                     __end_of___localtime_r:
 11642                           	opt callstack 0
 11643                           
 11644 ;; *************** function ___secs_to_zone *****************
 11645 ;; Defined at:
 11646 ;;		line 249 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 11647 ;; Parameters:    Size  Location     Type
 11648 ;;  t               8  [STACK] long long 
 11649 ;;  local           2  [STACK] int 
 11650 ;;  isdst           2  [STACK] PTR int 
 11651 ;;		 -> localtime@tm(24), 
 11652 ;;  offset          2  [STACK] PTR long 
 11653 ;;		 -> localtime@tm(24), 
 11654 ;;  oppoff          2  [STACK] PTR long 
 11655 ;;		 -> NULL(0), 
 11656 ;;  zonename        2  [STACK] PTR PTR const unsigned c
 11657 ;;		 -> localtime@tm(24), 
 11658 ;; Auto vars:     Size  Location     Type
 11659 ;;  alt             2  [STACK] unsigned int 
 11660 ;;  i               2    0        unsigned int 
 11661 ;;  y               8  [STACK] long long 
 11662 ;;  t1              8  [STACK] long long 
 11663 ;;  t0              8  [STACK] long long 
 11664 ;; Return value:  Size  Location     Type
 11665 ;;                  1  [STACK] void 
 11666 ;; Registers used:
 11667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11668 ;; Tracked objects:
 11669 ;;		On entry : 0/39
 11670 ;;		On exit  : 0/0
 11671 ;;		Unchanged: 0/0
 11672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11677 ;;Total ram usage:        0 bytes
 11678 ;; Hardware stack levels used:    1
 11679 ;; Hardware stack levels required when called:   19
 11680 ;; This function calls:
 11681 ;;		___aodiv
 11682 ;;		___year_to_secs
 11683 ;;		_do_tzset
 11684 ;;		_rule_to_secs
 11685 ;;		_scan_trans
 11686 ;;		_zi_read32
 11687 ;; This function is called by:
 11688 ;;		___localtime_r
 11689 ;; This function uses a reentrant model
 11690 ;;
 11691                           
 11692                           	psect	text35
 11693  015AE2                     __ptext35:
 11694                           	opt callstack 0
 11695  015AE2                     ___secs_to_zone:
 11696                           	opt callstack 0
 11697                           
 11698                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, argsize = 18 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 11699  015AE2  0E18               	movlw	24
 11700  015AE4  26E1               	addwf	fsr1l,f,c
 11701  015AE6  0E00               	movlw	0
 11702  015AE8  22E2               	addwfc	fsr1h,f,c
 11703                           
 11704                           ;incstack = 0
 11705  015AEA  ECB4  F0D9         	call	_do_tzset	;wreg free
 11706  015AEE  0100               	movlb	0	; () banked
 11707  015AF0  51C2               	movf	___daylight& (0+255),w,b
 11708  015AF2  11C3               	iorwf	(___daylight+1)& (0+255),w,b
 11709  015AF4  B4D8               	btfsc	status,2,c
 11710  015AF6  D356               	goto	u15960
 11711                           
 11712                           ; BSR set to: 0
 11713  015AF8  0E58               	movlw	88
 11714  015AFA  6EE6               	movwf	postinc1,c
 11715  015AFC  0E85               	movlw	133
 11716  015AFE  6EE6               	movwf	postinc1,c
 11717  015B00  0EE1               	movlw	225
 11718  015B02  6EE6               	movwf	postinc1,c
 11719  015B04  0E01               	movlw	1
 11720  015B06  6EE6               	movwf	postinc1,c
 11721  015B08  0E00               	movlw	0
 11722  015B0A  6EE6               	movwf	postinc1,c
 11723  015B0C  0E00               	movlw	0
 11724  015B0E  6EE6               	movwf	postinc1,c
 11725  015B10  0E00               	movlw	0
 11726  015B12  6EE6               	movwf	postinc1,c
 11727  015B14  0E00               	movlw	0
 11728  015B16  6EE6               	movwf	postinc1,c
 11729                           
 11730                           ;stkvar	_t @ sp[(-32)+-8]
 11731  015B18  50E1               	movf	fsr1l,w,c
 11732  015B1A  0FD8               	addlw	-40
 11733  015B1C  6ED9               	movwf	fsr2l,c
 11734  015B1E  50E2               	movf	fsr1h,w,c
 11735  015B20  6EDA               	movwf	fsr2h,c
 11736  015B22  0EFF               	movlw	255
 11737  015B24  22DA               	addwfc	fsr2h,f,c
 11738  015B26  006F FF7B FFE6     	movff	postinc2,postinc1
 11739  015B2C  006F FF7B FFE6     	movff	postinc2,postinc1
 11740  015B32  006F FF7B FFE6     	movff	postinc2,postinc1
 11741  015B38  006F FF7B FFE6     	movff	postinc2,postinc1
 11742  015B3E  006F FF7B FFE6     	movff	postinc2,postinc1
 11743  015B44  006F FF7B FFE6     	movff	postinc2,postinc1
 11744  015B4A  006F FF7B FFE6     	movff	postinc2,postinc1
 11745  015B50  006F FF7B FFE6     	movff	postinc2,postinc1
 11746  015B56  EC34  F0DC         	call	___aodiv	;wreg free
 11747  015B5A  52E5               	movf	postdec1,f,c
 11748  015B5C  006F FF9C  F041    	movff	indf1,btemp+23
 11749  015B62  52E5               	movf	postdec1,f,c
 11750  015B64  006F FF9C  F040    	movff	indf1,btemp+22
 11751  015B6A  52E5               	movf	postdec1,f,c
 11752  015B6C  006F FF9C  F03F    	movff	indf1,btemp+21
 11753  015B72  52E5               	movf	postdec1,f,c
 11754  015B74  006F FF9C  F03E    	movff	indf1,btemp+20
 11755  015B7A  52E5               	movf	postdec1,f,c
 11756  015B7C  006F FF9C  F03D    	movff	indf1,btemp+19
 11757  015B82  52E5               	movf	postdec1,f,c
 11758  015B84  006F FF9C  F03C    	movff	indf1,btemp+18
 11759  015B8A  52E5               	movf	postdec1,f,c
 11760  015B8C  006F FF9C  F03B    	movff	indf1,btemp+17
 11761  015B92  52E5               	movf	postdec1,f,c
 11762  015B94  006F FF9C  F03A    	movff	indf1,btemp+16
 11763  015B9A  0EF8               	movlw	248
 11764  015B9C  26E1               	addwf	fsr1l,f,c
 11765  015B9E  0EFF               	movlw	255
 11766  015BA0  22E2               	addwfc	fsr1h,f,c
 11767  015BA2  0E46               	movlw	70
 11768  015BA4  243A               	addwf	(btemp+16)^0,w,c
 11769  015BA6  6E42               	movwf	(btemp+24)^0,c
 11770  015BA8  0E00               	movlw	0
 11771  015BAA  203B               	addwfc	(btemp+17)^0,w,c
 11772  015BAC  6E43               	movwf	(btemp+25)^0,c
 11773  015BAE  0E00               	movlw	0
 11774  015BB0  203C               	addwfc	(btemp+18)^0,w,c
 11775  015BB2  6E44               	movwf	(btemp+26)^0,c
 11776  015BB4  0E00               	movlw	0
 11777  015BB6  203D               	addwfc	(btemp+19)^0,w,c
 11778  015BB8  6E45               	movwf	(btemp+27)^0,c
 11779  015BBA  0E00               	movlw	0
 11780  015BBC  203E               	addwfc	(btemp+20)^0,w,c
 11781  015BBE  6E46               	movwf	(btemp+28)^0,c
 11782  015BC0  0E00               	movlw	0
 11783  015BC2  203F               	addwfc	(btemp+21)^0,w,c
 11784  015BC4  6E47               	movwf	(btemp+29)^0,c
 11785  015BC6  0E00               	movlw	0
 11786  015BC8  2040               	addwfc	(btemp+22)^0,w,c
 11787  015BCA  6E48               	movwf	(btemp+30)^0,c
 11788  015BCC  0E00               	movlw	0
 11789  015BCE  2041               	addwfc	(btemp+23)^0,w,c
 11790  015BD0  6E49               	movwf	(btemp+31)^0,c
 11791                           
 11792                           ;stkvar	_y @ sp[(-24)+0]
 11793  015BD2  0EE8               	movlw	-24
 11794  015BD4  0060  F10B  FFE3   	movff	btemp+24,plusw1
 11795  015BDA  0EE9               	movlw	-23
 11796  015BDC  0060  F10F  FFE3   	movff	btemp+25,plusw1
 11797  015BE2  0EEA               	movlw	-22
 11798  015BE4  0060  F113  FFE3   	movff	btemp+26,plusw1
 11799  015BEA  0EEB               	movlw	-21
 11800  015BEC  0060  F117  FFE3   	movff	btemp+27,plusw1
 11801  015BF2  0EEC               	movlw	-20
 11802  015BF4  0060  F11B  FFE3   	movff	btemp+28,plusw1
 11803  015BFA  0EED               	movlw	-19
 11804  015BFC  0060  F11F  FFE3   	movff	btemp+29,plusw1
 11805  015C02  0EEE               	movlw	-18
 11806  015C04  0060  F123  FFE3   	movff	btemp+30,plusw1
 11807  015C0A  0EEF               	movlw	-17
 11808  015C0C  0060  F127  FFE3   	movff	btemp+31,plusw1
 11809  015C12  D010               	goto	l16294
 11810  015C14                     l16292:
 11811                           
 11812                           ;stkvar	_y @ sp[(-24)+0]
 11813  015C14  50E1               	movf	fsr1l,w,c
 11814  015C16  0FE8               	addlw	-24
 11815  015C18  6ED9               	movwf	fsr2l,c
 11816  015C1A  50E2               	movf	fsr1h,w,c
 11817  015C1C  6EDA               	movwf	fsr2h,c
 11818  015C1E  0EFF               	movlw	255
 11819  015C20  22DA               	addwfc	fsr2h,f,c
 11820  015C22  06DE               	decf	postinc2,f,c
 11821  015C24  0E00               	movlw	0
 11822  015C26  5ADE               	subwfb	postinc2,f,c
 11823  015C28  5ADE               	subwfb	postinc2,f,c
 11824  015C2A  5ADE               	subwfb	postinc2,f,c
 11825  015C2C  5ADE               	subwfb	postinc2,f,c
 11826  015C2E  5ADE               	subwfb	postinc2,f,c
 11827  015C30  5ADE               	subwfb	postinc2,f,c
 11828  015C32  5ADE               	subwfb	postinc2,f,c
 11829  015C34                     l16294:
 11830  015C34  0E00               	movlw	0
 11831  015C36  6EE6               	movwf	postinc1,c
 11832  015C38  0E00               	movlw	0
 11833  015C3A  6EE6               	movwf	postinc1,c
 11834                           
 11835                           ;stkvar	_y @ sp[(-26)+0]
 11836  015C3C  50E1               	movf	fsr1l,w,c
 11837  015C3E  0FE6               	addlw	-26
 11838  015C40  6ED9               	movwf	fsr2l,c
 11839  015C42  50E2               	movf	fsr1h,w,c
 11840  015C44  6EDA               	movwf	fsr2h,c
 11841  015C46  0EFF               	movlw	255
 11842  015C48  22DA               	addwfc	fsr2h,f,c
 11843  015C4A  006F FF7B FFE6     	movff	postinc2,postinc1
 11844  015C50  006F FF7B FFE6     	movff	postinc2,postinc1
 11845  015C56  006F FF7B FFE6     	movff	postinc2,postinc1
 11846  015C5C  006F FF7B FFE6     	movff	postinc2,postinc1
 11847  015C62  006F FF7B FFE6     	movff	postinc2,postinc1
 11848  015C68  006F FF7B FFE6     	movff	postinc2,postinc1
 11849  015C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 11850  015C74  006F FF7B FFE6     	movff	postinc2,postinc1
 11851  015C7A  ECB8  F0A8         	call	___year_to_secs	;wreg free
 11852  015C7E  52E5               	movf	postdec1,f,c
 11853  015C80  006F FF9C  F041    	movff	indf1,btemp+23
 11854  015C86  52E5               	movf	postdec1,f,c
 11855  015C88  006F FF9C  F040    	movff	indf1,btemp+22
 11856  015C8E  52E5               	movf	postdec1,f,c
 11857  015C90  006F FF9C  F03F    	movff	indf1,btemp+21
 11858  015C96  52E5               	movf	postdec1,f,c
 11859  015C98  006F FF9C  F03E    	movff	indf1,btemp+20
 11860  015C9E  52E5               	movf	postdec1,f,c
 11861  015CA0  006F FF9C  F03D    	movff	indf1,btemp+19
 11862  015CA6  52E5               	movf	postdec1,f,c
 11863  015CA8  006F FF9C  F03C    	movff	indf1,btemp+18
 11864  015CAE  52E5               	movf	postdec1,f,c
 11865  015CB0  006F FF9C  F03B    	movff	indf1,btemp+17
 11866  015CB6  52E5               	movf	postdec1,f,c
 11867  015CB8  006F FF9C  F03A    	movff	indf1,btemp+16
 11868  015CBE  52E5               	movf	postdec1,f,c
 11869  015CC0  52E5               	movf	postdec1,f,c
 11870                           
 11871                           ;stkvar	_t @ sp[(-24)+-8]
 11872  015CC2  0EE0               	movlw	-32
 11873  015CC4  006F FF8C  F02A    	movff	plusw1,btemp
 11874  015CCA  503A               	movf	(btemp+16)^0,w,c
 11875  015CCC  5C2A               	subwf	btemp^0,w,c
 11876  015CCE  0EE1               	movlw	-31
 11877  015CD0  006F FF8C  F02A    	movff	plusw1,btemp
 11878  015CD6  503B               	movf	(btemp+17)^0,w,c
 11879  015CD8  582A               	subwfb	btemp^0,w,c
 11880  015CDA  0EE2               	movlw	-30
 11881  015CDC  006F FF8C  F02A    	movff	plusw1,btemp
 11882  015CE2  503C               	movf	(btemp+18)^0,w,c
 11883  015CE4  582A               	subwfb	btemp^0,w,c
 11884  015CE6  0EE3               	movlw	-29
 11885  015CE8  006F FF8C  F02A    	movff	plusw1,btemp
 11886  015CEE  503D               	movf	(btemp+19)^0,w,c
 11887  015CF0  582A               	subwfb	btemp^0,w,c
 11888  015CF2  0EE4               	movlw	-28
 11889  015CF4  006F FF8C  F02A    	movff	plusw1,btemp
 11890  015CFA  503E               	movf	(btemp+20)^0,w,c
 11891  015CFC  582A               	subwfb	btemp^0,w,c
 11892  015CFE  0EE5               	movlw	-27
 11893  015D00  006F FF8C  F02A    	movff	plusw1,btemp
 11894  015D06  503F               	movf	(btemp+21)^0,w,c
 11895  015D08  582A               	subwfb	btemp^0,w,c
 11896  015D0A  0EE6               	movlw	-26
 11897  015D0C  006F FF8C  F02A    	movff	plusw1,btemp
 11898  015D12  5040               	movf	(btemp+22)^0,w,c
 11899  015D14  582A               	subwfb	btemp^0,w,c
 11900  015D16  0EE7               	movlw	-25
 11901  015D18  50E3               	movf	plusw1,w,c
 11902  015D1A  0A80               	xorlw	128
 11903  015D1C  6E2A               	movwf	btemp^0,c
 11904  015D1E  5041               	movf	(btemp+23)^0,w,c
 11905  015D20  0A80               	xorlw	128
 11906  015D22  582A               	subwfb	btemp^0,w,c
 11907  015D24  B0D8               	btfsc	status,0,c
 11908  015D26  D011               	goto	l16298
 11909  015D28  D775               	goto	l16292
 11910  015D2A                     l16296:
 11911                           
 11912                           ;stkvar	_y @ sp[(-24)+0]
 11913  015D2A  50E1               	movf	fsr1l,w,c
 11914  015D2C  0FE8               	addlw	-24
 11915  015D2E  6ED9               	movwf	fsr2l,c
 11916  015D30  50E2               	movf	fsr1h,w,c
 11917  015D32  6EDA               	movwf	fsr2h,c
 11918  015D34  0EFF               	movlw	255
 11919  015D36  22DA               	addwfc	fsr2h,f,c
 11920  015D38  2ADE               	incf	postinc2,f,c
 11921  015D3A  0E00               	movlw	0
 11922  015D3C  22DE               	addwfc	postinc2,f,c
 11923  015D3E  22DE               	addwfc	postinc2,f,c
 11924  015D40  22DE               	addwfc	postinc2,f,c
 11925  015D42  22DE               	addwfc	postinc2,f,c
 11926  015D44  22DE               	addwfc	postinc2,f,c
 11927  015D46  22DE               	addwfc	postinc2,f,c
 11928  015D48  22DE               	addwfc	postinc2,f,c
 11929  015D4A                     l16298:
 11930                           
 11931                           ;stkvar	_t @ sp[(-24)+-8]
 11932  015D4A  0E00               	movlw	0
 11933  015D4C  6EE6               	movwf	postinc1,c
 11934  015D4E  0E00               	movlw	0
 11935  015D50  6EE6               	movwf	postinc1,c
 11936                           
 11937                           ;stkvar	_y @ sp[(-26)+0]
 11938  015D52  0EE6               	movlw	-26
 11939  015D54  50E3               	movf	plusw1,w,c
 11940  015D56  0F01               	addlw	1
 11941  015D58  6E3A               	movwf	(btemp+16)^0,c
 11942  015D5A  0EE7               	movlw	-25
 11943  015D5C  006F FF8C  F03B    	movff	plusw1,btemp+17
 11944  015D62  0E00               	movlw	0
 11945  015D64  223B               	addwfc	(btemp+17)^0,f,c
 11946  015D66  0EE8               	movlw	-24
 11947  015D68  006F FF8C  F03C    	movff	plusw1,btemp+18
 11948  015D6E  0E00               	movlw	0
 11949  015D70  223C               	addwfc	(btemp+18)^0,f,c
 11950  015D72  0EE9               	movlw	-23
 11951  015D74  006F FF8C  F03D    	movff	plusw1,btemp+19
 11952  015D7A  0E00               	movlw	0
 11953  015D7C  223D               	addwfc	(btemp+19)^0,f,c
 11954  015D7E  0EEA               	movlw	-22
 11955  015D80  006F FF8C  F03E    	movff	plusw1,btemp+20
 11956  015D86  0E00               	movlw	0
 11957  015D88  223E               	addwfc	(btemp+20)^0,f,c
 11958  015D8A  0EEB               	movlw	-21
 11959  015D8C  006F FF8C  F03F    	movff	plusw1,btemp+21
 11960  015D92  0E00               	movlw	0
 11961  015D94  223F               	addwfc	(btemp+21)^0,f,c
 11962  015D96  0EEC               	movlw	-20
 11963  015D98  006F FF8C  F040    	movff	plusw1,btemp+22
 11964  015D9E  0E00               	movlw	0
 11965  015DA0  2240               	addwfc	(btemp+22)^0,f,c
 11966  015DA2  0EED               	movlw	-19
 11967  015DA4  006F FF8C  F041    	movff	plusw1,btemp+23
 11968  015DAA  0E00               	movlw	0
 11969  015DAC  2241               	addwfc	(btemp+23)^0,f,c
 11970  015DAE  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 11971  015DB4  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 11972  015DBA  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 11973  015DC0  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 11974  015DC6  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 11975  015DCC  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 11976  015DD2  0060  F103  FFE6   	movff	btemp+22,postinc1
 11977  015DD8  0060  F107  FFE6   	movff	btemp+23,postinc1
 11978  015DDE  ECB8  F0A8         	call	___year_to_secs	;wreg free
 11979  015DE2  52E5               	movf	postdec1,f,c
 11980  015DE4  006F FF9C  F041    	movff	indf1,btemp+23
 11981  015DEA  52E5               	movf	postdec1,f,c
 11982  015DEC  006F FF9C  F040    	movff	indf1,btemp+22
 11983  015DF2  52E5               	movf	postdec1,f,c
 11984  015DF4  006F FF9C  F03F    	movff	indf1,btemp+21
 11985  015DFA  52E5               	movf	postdec1,f,c
 11986  015DFC  006F FF9C  F03E    	movff	indf1,btemp+20
 11987  015E02  52E5               	movf	postdec1,f,c
 11988  015E04  006F FF9C  F03D    	movff	indf1,btemp+19
 11989  015E0A  52E5               	movf	postdec1,f,c
 11990  015E0C  006F FF9C  F03C    	movff	indf1,btemp+18
 11991  015E12  52E5               	movf	postdec1,f,c
 11992  015E14  006F FF9C  F03B    	movff	indf1,btemp+17
 11993  015E1A  52E5               	movf	postdec1,f,c
 11994  015E1C  006F FF9C  F03A    	movff	indf1,btemp+16
 11995  015E22  52E5               	movf	postdec1,f,c
 11996  015E24  52E5               	movf	postdec1,f,c
 11997  015E26  0EE0               	movlw	-32
 11998  015E28  50E3               	movf	plusw1,w,c
 11999  015E2A  5C3A               	subwf	(btemp+16)^0,w,c
 12000  015E2C  0EE1               	movlw	-31
 12001  015E2E  50E3               	movf	plusw1,w,c
 12002  015E30  583B               	subwfb	(btemp+17)^0,w,c
 12003  015E32  0EE2               	movlw	-30
 12004  015E34  50E3               	movf	plusw1,w,c
 12005  015E36  583C               	subwfb	(btemp+18)^0,w,c
 12006  015E38  0EE3               	movlw	-29
 12007  015E3A  50E3               	movf	plusw1,w,c
 12008  015E3C  583D               	subwfb	(btemp+19)^0,w,c
 12009  015E3E  0EE4               	movlw	-28
 12010  015E40  50E3               	movf	plusw1,w,c
 12011  015E42  583E               	subwfb	(btemp+20)^0,w,c
 12012  015E44  0EE5               	movlw	-27
 12013  015E46  50E3               	movf	plusw1,w,c
 12014  015E48  583F               	subwfb	(btemp+21)^0,w,c
 12015  015E4A  0EE6               	movlw	-26
 12016  015E4C  50E3               	movf	plusw1,w,c
 12017  015E4E  5840               	subwfb	(btemp+22)^0,w,c
 12018  015E50  5041               	movf	(btemp+23)^0,w,c
 12019  015E52  0A80               	xorlw	128
 12020  015E54  6E2A               	movwf	btemp^0,c
 12021  015E56  0EE7               	movlw	-25
 12022  015E58  50E3               	movf	plusw1,w,c
 12023  015E5A  0A80               	xorlw	128
 12024  015E5C  582A               	subwfb	btemp^0,w,c
 12025  015E5E  A0D8               	btfss	status,0,c
 12026  015E60  D764               	goto	l16296
 12027                           
 12028                           ;stkvar	_y @ sp[(-24)+0]
 12029  015E62  0EE8               	movlw	-24
 12030  015E64  006F FF8F FFE6     	movff	plusw1,postinc1
 12031  015E6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12032  015E70  0EE8               	movlw	low _r0
 12033  015E72  6EE6               	movwf	postinc1,c
 12034  015E74  0E01               	movlw	high _r0
 12035  015E76  6EE6               	movwf	postinc1,c
 12036  015E78  ECB5  F0B9         	call	_rule_to_secs	;wreg free
 12037  015E7C  52E5               	movf	postdec1,f,c
 12038  015E7E  006F FF9C  F041    	movff	indf1,btemp+23
 12039  015E84  52E5               	movf	postdec1,f,c
 12040  015E86  006F FF9C  F040    	movff	indf1,btemp+22
 12041  015E8C  52E5               	movf	postdec1,f,c
 12042  015E8E  006F FF9C  F03F    	movff	indf1,btemp+21
 12043  015E94  52E5               	movf	postdec1,f,c
 12044  015E96  006F FF9C  F03E    	movff	indf1,btemp+20
 12045  015E9C  52E5               	movf	postdec1,f,c
 12046  015E9E  006F FF9C  F03D    	movff	indf1,btemp+19
 12047  015EA4  52E5               	movf	postdec1,f,c
 12048  015EA6  006F FF9C  F03C    	movff	indf1,btemp+18
 12049  015EAC  52E5               	movf	postdec1,f,c
 12050  015EAE  006F FF9C  F03B    	movff	indf1,btemp+17
 12051  015EB4  52E5               	movf	postdec1,f,c
 12052  015EB6  006F FF9C  F03A    	movff	indf1,btemp+16
 12053                           
 12054                           ;stkvar	_t0 @ sp[(-24)+16]
 12055  015EBC  0EF8               	movlw	-8
 12056  015EBE  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12057  015EC4  0EF9               	movlw	-7
 12058  015EC6  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12059  015ECC  0EFA               	movlw	-6
 12060  015ECE  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12061  015ED4  0EFB               	movlw	-5
 12062  015ED6  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12063  015EDC  0EFC               	movlw	-4
 12064  015EDE  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12065  015EE4  0EFD               	movlw	-3
 12066  015EE6  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12067  015EEC  0EFE               	movlw	-2
 12068  015EEE  0060  F103  FFE3   	movff	btemp+22,plusw1
 12069  015EF4  0EFF               	movlw	-1
 12070  015EF6  0060  F107  FFE3   	movff	btemp+23,plusw1
 12071                           
 12072                           ;stkvar	_y @ sp[(-24)+0]
 12073  015EFC  0EE8               	movlw	-24
 12074  015EFE  006F FF8F FFE6     	movff	plusw1,postinc1
 12075  015F04  006F FF8F FFE6     	movff	plusw1,postinc1
 12076  015F0A  0ED7               	movlw	low _r1
 12077  015F0C  6EE6               	movwf	postinc1,c
 12078  015F0E  0E02               	movlw	high _r1
 12079  015F10  6EE6               	movwf	postinc1,c
 12080  015F12  ECB5  F0B9         	call	_rule_to_secs	;wreg free
 12081  015F16  52E5               	movf	postdec1,f,c
 12082  015F18  006F FF9C  F041    	movff	indf1,btemp+23
 12083  015F1E  52E5               	movf	postdec1,f,c
 12084  015F20  006F FF9C  F040    	movff	indf1,btemp+22
 12085  015F26  52E5               	movf	postdec1,f,c
 12086  015F28  006F FF9C  F03F    	movff	indf1,btemp+21
 12087  015F2E  52E5               	movf	postdec1,f,c
 12088  015F30  006F FF9C  F03E    	movff	indf1,btemp+20
 12089  015F36  52E5               	movf	postdec1,f,c
 12090  015F38  006F FF9C  F03D    	movff	indf1,btemp+19
 12091  015F3E  52E5               	movf	postdec1,f,c
 12092  015F40  006F FF9C  F03C    	movff	indf1,btemp+18
 12093  015F46  52E5               	movf	postdec1,f,c
 12094  015F48  006F FF9C  F03B    	movff	indf1,btemp+17
 12095  015F4E  52E5               	movf	postdec1,f,c
 12096  015F50  006F FF9C  F03A    	movff	indf1,btemp+16
 12097                           
 12098                           ;stkvar	_t1 @ sp[(-24)+8]
 12099  015F56  0EF0               	movlw	-16
 12100  015F58  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12101  015F5E  0EF1               	movlw	-15
 12102  015F60  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12103  015F66  0EF2               	movlw	-14
 12104  015F68  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12105  015F6E  0EF3               	movlw	-13
 12106  015F70  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12107  015F76  0EF4               	movlw	-12
 12108  015F78  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12109  015F7E  0EF5               	movlw	-11
 12110  015F80  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12111  015F86  0EF6               	movlw	-10
 12112  015F88  0060  F103  FFE3   	movff	btemp+22,plusw1
 12113  015F8E  0EF7               	movlw	-9
 12114  015F90  0060  F107  FFE3   	movff	btemp+23,plusw1
 12115                           
 12116                           ;stkvar	_local @ sp[(-24)+-10]
 12117  015F96  0EDE               	movlw	-34
 12118  015F98  006F FF8C  F02A    	movff	plusw1,btemp
 12119  015F9E  0EDF               	movlw	-33
 12120  015FA0  50E3               	movf	plusw1,w,c
 12121  015FA2  102A               	iorwf	btemp^0,w,c
 12122  015FA4  A4D8               	btfss	status,2,c
 12123  015FA6  D044               	goto	l16308
 12124  015FA8  0060  F1D8  F03A   	movff	___timezone,btemp+16
 12125  015FAE  0060  F1DC  F03B   	movff	___timezone+1,btemp+17
 12126  015FB4  0060  F1E0  F03C   	movff	___timezone+2,btemp+18
 12127  015FBA  0060  F1E4  F03D   	movff	___timezone+3,btemp+19
 12128  015FC0  6A3E               	clrf	(btemp+20)^0,c
 12129  015FC2  BE3D               	btfsc	(btemp+19)^0,7,c
 12130  015FC4  683E               	setf	(btemp+20)^0,c
 12131  015FC6  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 12132  015FCC  0060  F0F8  F040   	movff	btemp+20,btemp+22
 12133  015FD2  0060  F0F8  F041   	movff	btemp+20,btemp+23
 12134                           
 12135                           ;stkvar	_t0 @ sp[(-24)+16]
 12136  015FD8  50E1               	movf	fsr1l,w,c
 12137  015FDA  0FF8               	addlw	-8
 12138  015FDC  6ED9               	movwf	fsr2l,c
 12139  015FDE  50E2               	movf	fsr1h,w,c
 12140  015FE0  6EDA               	movwf	fsr2h,c
 12141  015FE2  0EFF               	movlw	255
 12142  015FE4  22DA               	addwfc	fsr2h,f,c
 12143  015FE6  503A               	movf	(btemp+16)^0,w,c
 12144  015FE8  26DE               	addwf	postinc2,f,c
 12145  015FEA  503B               	movf	(btemp+17)^0,w,c
 12146  015FEC  22DE               	addwfc	postinc2,f,c
 12147  015FEE  503C               	movf	(btemp+18)^0,w,c
 12148  015FF0  22DE               	addwfc	postinc2,f,c
 12149  015FF2  503D               	movf	(btemp+19)^0,w,c
 12150  015FF4  22DE               	addwfc	postinc2,f,c
 12151  015FF6  503E               	movf	(btemp+20)^0,w,c
 12152  015FF8  22DE               	addwfc	postinc2,f,c
 12153  015FFA  503F               	movf	(btemp+21)^0,w,c
 12154  015FFC  22DE               	addwfc	postinc2,f,c
 12155  015FFE  5040               	movf	(btemp+22)^0,w,c
 12156  016000  22DE               	addwfc	postinc2,f,c
 12157  016002  5041               	movf	(btemp+23)^0,w,c
 12158  016004  22DE               	addwfc	postinc2,f,c
 12159                           
 12160                           ;stkvar	_t1 @ sp[(-24)+8]
 12161  016006  50E1               	movf	fsr1l,w,c
 12162  016008  0FF0               	addlw	-16
 12163  01600A  6ED9               	movwf	fsr2l,c
 12164  01600C  50E2               	movf	fsr1h,w,c
 12165  01600E  6EDA               	movwf	fsr2h,c
 12166  016010  0EFF               	movlw	255
 12167  016012  22DA               	addwfc	fsr2h,f,c
 12168  016014  0100               	movlb	0	; () banked
 12169  016016  51C0               	movf	_dst_off& (0+255),w,b
 12170  016018  26DE               	addwf	postinc2,f,c
 12171  01601A  51C1               	movf	(_dst_off+1)& (0+255),w,b
 12172  01601C  22DE               	addwfc	postinc2,f,c
 12173  01601E  0E00               	movlw	0
 12174  016020  BFC1               	btfsc	(_dst_off+1)& (0+255),7,b
 12175  016022  0EFF               	movlw	255
 12176  016024  22DE               	addwfc	postinc2,f,c
 12177  016026  22DE               	addwfc	postinc2,f,c
 12178  016028  22DE               	addwfc	postinc2,f,c
 12179  01602A  22DE               	addwfc	postinc2,f,c
 12180  01602C  22DE               	addwfc	postinc2,f,c
 12181  01602E  22DE               	addwfc	postinc2,f,c
 12182  016030                     l16308:
 12183                           
 12184                           ;stkvar	_t1 @ sp[(-24)+8]
 12185                           ;stkvar	_t0 @ sp[(-24)+16]
 12186  016030  50E1               	movf	fsr1l,w,c
 12187  016032  0FF8               	addlw	-8
 12188  016034  6ED9               	movwf	fsr2l,c
 12189  016036  50E2               	movf	fsr1h,w,c
 12190  016038  6EDA               	movwf	fsr2h,c
 12191  01603A  0EFF               	movlw	255
 12192  01603C  22DA               	addwfc	fsr2h,f,c
 12193  01603E  0EF0               	movlw	-16
 12194  016040  50E3               	movf	plusw1,w,c
 12195  016042  5CDE               	subwf	postinc2,w,c
 12196  016044  0EF1               	movlw	-15
 12197  016046  50E3               	movf	plusw1,w,c
 12198  016048  58DE               	subwfb	postinc2,w,c
 12199  01604A  0EF2               	movlw	-14
 12200  01604C  50E3               	movf	plusw1,w,c
 12201  01604E  58DE               	subwfb	postinc2,w,c
 12202  016050  0EF3               	movlw	-13
 12203  016052  50E3               	movf	plusw1,w,c
 12204  016054  58DE               	subwfb	postinc2,w,c
 12205  016056  0EF4               	movlw	-12
 12206  016058  50E3               	movf	plusw1,w,c
 12207  01605A  58DE               	subwfb	postinc2,w,c
 12208  01605C  0EF5               	movlw	-11
 12209  01605E  50E3               	movf	plusw1,w,c
 12210  016060  58DE               	subwfb	postinc2,w,c
 12211  016062  0EF6               	movlw	-10
 12212  016064  50E3               	movf	plusw1,w,c
 12213  016066  58DE               	subwfb	postinc2,w,c
 12214  016068  50DE               	movf	postinc2,w,c
 12215  01606A  0A80               	xorlw	128
 12216  01606C  6E2A               	movwf	btemp^0,c
 12217  01606E  0EF7               	movlw	-9
 12218  016070  50E3               	movf	plusw1,w,c
 12219  016072  0A80               	xorlw	128
 12220  016074  582A               	subwfb	btemp^0,w,c
 12221  016076  B0D8               	btfsc	status,0,c
 12222  016078  D04B               	goto	l16318
 12223                           
 12224                           ;stkvar	_t0 @ sp[(-24)+16]
 12225                           ;stkvar	_t @ sp[(-24)+-8]
 12226  01607A  50E1               	movf	fsr1l,w,c
 12227  01607C  0FE0               	addlw	-32
 12228  01607E  6ED9               	movwf	fsr2l,c
 12229  016080  50E2               	movf	fsr1h,w,c
 12230  016082  6EDA               	movwf	fsr2h,c
 12231  016084  0EFF               	movlw	255
 12232  016086  22DA               	addwfc	fsr2h,f,c
 12233  016088  0EF8               	movlw	-8
 12234  01608A  50E3               	movf	plusw1,w,c
 12235  01608C  5CDE               	subwf	postinc2,w,c
 12236  01608E  0EF9               	movlw	-7
 12237  016090  50E3               	movf	plusw1,w,c
 12238  016092  58DE               	subwfb	postinc2,w,c
 12239  016094  0EFA               	movlw	-6
 12240  016096  50E3               	movf	plusw1,w,c
 12241  016098  58DE               	subwfb	postinc2,w,c
 12242  01609A  0EFB               	movlw	-5
 12243  01609C  50E3               	movf	plusw1,w,c
 12244  01609E  58DE               	subwfb	postinc2,w,c
 12245  0160A0  0EFC               	movlw	-4
 12246  0160A2  50E3               	movf	plusw1,w,c
 12247  0160A4  58DE               	subwfb	postinc2,w,c
 12248  0160A6  0EFD               	movlw	-3
 12249  0160A8  50E3               	movf	plusw1,w,c
 12250  0160AA  58DE               	subwfb	postinc2,w,c
 12251  0160AC  0EFE               	movlw	-2
 12252  0160AE  50E3               	movf	plusw1,w,c
 12253  0160B0  58DE               	subwfb	postinc2,w,c
 12254  0160B2  50DE               	movf	postinc2,w,c
 12255  0160B4  0A80               	xorlw	128
 12256  0160B6  6E2A               	movwf	btemp^0,c
 12257  0160B8  0EFF               	movlw	-1
 12258  0160BA  50E3               	movf	plusw1,w,c
 12259  0160BC  0A80               	xorlw	128
 12260  0160BE  582A               	subwfb	btemp^0,w,c
 12261  0160C0  A0D8               	btfss	status,0,c
 12262  0160C2  D070               	goto	u15960
 12263                           
 12264                           ;stkvar	_t1 @ sp[(-24)+8]
 12265                           ;stkvar	_t @ sp[(-24)+-8]
 12266  0160C4  50E1               	movf	fsr1l,w,c
 12267  0160C6  0FE0               	addlw	-32
 12268  0160C8  6ED9               	movwf	fsr2l,c
 12269  0160CA  50E2               	movf	fsr1h,w,c
 12270  0160CC  6EDA               	movwf	fsr2h,c
 12271  0160CE  0EFF               	movlw	255
 12272  0160D0  22DA               	addwfc	fsr2h,f,c
 12273  0160D2  0EF0               	movlw	-16
 12274  0160D4  50E3               	movf	plusw1,w,c
 12275  0160D6  5CDE               	subwf	postinc2,w,c
 12276  0160D8  0EF1               	movlw	-15
 12277  0160DA  50E3               	movf	plusw1,w,c
 12278  0160DC  58DE               	subwfb	postinc2,w,c
 12279  0160DE  0EF2               	movlw	-14
 12280  0160E0  50E3               	movf	plusw1,w,c
 12281  0160E2  58DE               	subwfb	postinc2,w,c
 12282  0160E4  0EF3               	movlw	-13
 12283  0160E6  50E3               	movf	plusw1,w,c
 12284  0160E8  58DE               	subwfb	postinc2,w,c
 12285  0160EA  0EF4               	movlw	-12
 12286  0160EC  50E3               	movf	plusw1,w,c
 12287  0160EE  58DE               	subwfb	postinc2,w,c
 12288  0160F0  0EF5               	movlw	-11
 12289  0160F2  50E3               	movf	plusw1,w,c
 12290  0160F4  58DE               	subwfb	postinc2,w,c
 12291  0160F6  0EF6               	movlw	-10
 12292  0160F8  50E3               	movf	plusw1,w,c
 12293  0160FA  58DE               	subwfb	postinc2,w,c
 12294  0160FC  50DE               	movf	postinc2,w,c
 12295  0160FE  0A80               	xorlw	128
 12296  016100  6E2A               	movwf	btemp^0,c
 12297  016102  0EF7               	movlw	-9
 12298  016104  50E3               	movf	plusw1,w,c
 12299  016106  0A80               	xorlw	128
 12300  016108  582A               	subwfb	btemp^0,w,c
 12301  01610A  A0D8               	btfss	status,0,c
 12302  01610C  D0C1               	goto	l16336
 12303  01610E  D04A               	goto	u15960
 12304  016110                     l16318:
 12305                           
 12306                           ;stkvar	_t1 @ sp[(-24)+8]
 12307                           ;stkvar	_t @ sp[(-24)+-8]
 12308  016110  50E1               	movf	fsr1l,w,c
 12309  016112  0FE0               	addlw	-32
 12310  016114  6ED9               	movwf	fsr2l,c
 12311  016116  50E2               	movf	fsr1h,w,c
 12312  016118  6EDA               	movwf	fsr2h,c
 12313  01611A  0EFF               	movlw	255
 12314  01611C  22DA               	addwfc	fsr2h,f,c
 12315  01611E  0EF0               	movlw	-16
 12316  016120  50E3               	movf	plusw1,w,c
 12317  016122  5CDE               	subwf	postinc2,w,c
 12318  016124  0EF1               	movlw	-15
 12319  016126  50E3               	movf	plusw1,w,c
 12320  016128  58DE               	subwfb	postinc2,w,c
 12321  01612A  0EF2               	movlw	-14
 12322  01612C  50E3               	movf	plusw1,w,c
 12323  01612E  58DE               	subwfb	postinc2,w,c
 12324  016130  0EF3               	movlw	-13
 12325  016132  50E3               	movf	plusw1,w,c
 12326  016134  58DE               	subwfb	postinc2,w,c
 12327  016136  0EF4               	movlw	-12
 12328  016138  50E3               	movf	plusw1,w,c
 12329  01613A  58DE               	subwfb	postinc2,w,c
 12330  01613C  0EF5               	movlw	-11
 12331  01613E  50E3               	movf	plusw1,w,c
 12332  016140  58DE               	subwfb	postinc2,w,c
 12333  016142  0EF6               	movlw	-10
 12334  016144  50E3               	movf	plusw1,w,c
 12335  016146  58DE               	subwfb	postinc2,w,c
 12336  016148  50DE               	movf	postinc2,w,c
 12337  01614A  0A80               	xorlw	128
 12338  01614C  6E2A               	movwf	btemp^0,c
 12339  01614E  0EF7               	movlw	-9
 12340  016150  50E3               	movf	plusw1,w,c
 12341  016152  0A80               	xorlw	128
 12342  016154  582A               	subwfb	btemp^0,w,c
 12343  016156  A0D8               	btfss	status,0,c
 12344  016158  D09B               	goto	l16336
 12345                           
 12346                           ;stkvar	_t0 @ sp[(-24)+16]
 12347                           ;stkvar	_t @ sp[(-24)+-8]
 12348  01615A  50E1               	movf	fsr1l,w,c
 12349  01615C  0FE0               	addlw	-32
 12350  01615E  6ED9               	movwf	fsr2l,c
 12351  016160  50E2               	movf	fsr1h,w,c
 12352  016162  6EDA               	movwf	fsr2h,c
 12353  016164  0EFF               	movlw	255
 12354  016166  22DA               	addwfc	fsr2h,f,c
 12355  016168  0EF8               	movlw	-8
 12356  01616A  50E3               	movf	plusw1,w,c
 12357  01616C  5CDE               	subwf	postinc2,w,c
 12358  01616E  0EF9               	movlw	-7
 12359  016170  50E3               	movf	plusw1,w,c
 12360  016172  58DE               	subwfb	postinc2,w,c
 12361  016174  0EFA               	movlw	-6
 12362  016176  50E3               	movf	plusw1,w,c
 12363  016178  58DE               	subwfb	postinc2,w,c
 12364  01617A  0EFB               	movlw	-5
 12365  01617C  50E3               	movf	plusw1,w,c
 12366  01617E  58DE               	subwfb	postinc2,w,c
 12367  016180  0EFC               	movlw	-4
 12368  016182  50E3               	movf	plusw1,w,c
 12369  016184  58DE               	subwfb	postinc2,w,c
 12370  016186  0EFD               	movlw	-3
 12371  016188  50E3               	movf	plusw1,w,c
 12372  01618A  58DE               	subwfb	postinc2,w,c
 12373  01618C  0EFE               	movlw	-2
 12374  01618E  50E3               	movf	plusw1,w,c
 12375  016190  58DE               	subwfb	postinc2,w,c
 12376  016192  50DE               	movf	postinc2,w,c
 12377  016194  0A80               	xorlw	128
 12378  016196  6E2A               	movwf	btemp^0,c
 12379  016198  0EFF               	movlw	-1
 12380  01619A  50E3               	movf	plusw1,w,c
 12381  01619C  0A80               	xorlw	128
 12382  01619E  582A               	subwfb	btemp^0,w,c
 12383  0161A0  B0D8               	btfsc	status,0,c
 12384  0161A2  D076               	goto	l16336
 12385  0161A4                     u15960:
 12386                           
 12387                           ;stkvar	_isdst @ sp[(-24)+-12]
 12388  0161A4  0EDC               	movlw	-36
 12389  0161A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12390  0161AC  0EDD               	movlw	-35
 12391  0161AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12392  0161B4  0E00               	movlw	0
 12393  0161B6  6EDE               	movwf	postinc2,c
 12394  0161B8  0E00               	movlw	0
 12395  0161BA  6EDD               	movwf	postdec2,c
 12396  0161BC  0060  F1D8  F032   	movff	___timezone,btemp+8
 12397  0161C2  0060  F1DC  F033   	movff	___timezone+1,btemp+9
 12398  0161C8  0060  F1E0  F034   	movff	___timezone+2,btemp+10
 12399  0161CE  0060  F1E4  F035   	movff	___timezone+3,btemp+11
 12400  0161D4  1E32               	comf	(btemp+8)^0,f,c
 12401  0161D6  1E33               	comf	(btemp+9)^0,f,c
 12402  0161D8  1E34               	comf	(btemp+10)^0,f,c
 12403  0161DA  1E35               	comf	(btemp+11)^0,f,c
 12404  0161DC  2A32               	incf	(btemp+8)^0,f,c
 12405  0161DE  0E00               	movlw	0
 12406  0161E0  2233               	addwfc	(btemp+9)^0,f,c
 12407  0161E2  2234               	addwfc	(btemp+10)^0,f,c
 12408  0161E4  2235               	addwfc	(btemp+11)^0,f,c
 12409                           
 12410                           ;stkvar	_offset @ sp[(-24)+-14]
 12411  0161E6  0EDA               	movlw	-38
 12412  0161E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12413  0161EE  0EDB               	movlw	-37
 12414  0161F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12415  0161F6  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 12416  0161FC  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 12417  016202  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 12418  016208  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 12419                           
 12420                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12421  01620E  0ED8               	movlw	-40
 12422  016210  006F FF8C  F02A    	movff	plusw1,btemp
 12423  016216  0ED9               	movlw	-39
 12424  016218  50E3               	movf	plusw1,w,c
 12425  01621A  102A               	iorwf	btemp^0,w,c
 12426  01621C  B4D8               	btfsc	status,2,c
 12427  01621E  D029               	goto	l16332
 12428  016220  0060  F300  F034   	movff	_dst_off,btemp+10
 12429  016226  0060  F304  F035   	movff	_dst_off+1,btemp+11
 12430  01622C  1E34               	comf	(btemp+10)^0,f,c
 12431  01622E  1E35               	comf	(btemp+11)^0,f,c
 12432  016230  4A34               	infsnz	(btemp+10)^0,f,c
 12433  016232  2A35               	incf	(btemp+11)^0,f,c
 12434  016234  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 12435  01623A  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 12436  016240  0E00               	movlw	0
 12437  016242  BE2F               	btfsc	(btemp+5)^0,7,c
 12438  016244  0EFF               	movlw	255
 12439  016246  6E30               	movwf	(btemp+6)^0,c
 12440  016248  6E31               	movwf	(btemp+7)^0,c
 12441                           
 12442                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12443  01624A  0ED8               	movlw	-40
 12444  01624C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12445  016252  0ED9               	movlw	-39
 12446  016254  006F FF8F FFDA     	movff	plusw1,fsr2h
 12447  01625A  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 12448  016260  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 12449  016266  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 12450  01626C  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 12451  016272                     l16332:
 12452                           
 12453                           ;stkvar	_zonename @ sp[(-24)+-18]
 12454  016272  0ED6               	movlw	-42
 12455  016274  006F FF8F FFD9     	movff	plusw1,fsr2l
 12456  01627A  0ED7               	movlw	-41
 12457  01627C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12458  016282  0060  F1CB  FFDE   	movff	___tzname,postinc2
 12459  016288  0060  F1CF  FFDD   	movff	___tzname+1,postdec2
 12460  01628E  D075               	goto	l4013
 12461  016290                     l16336:
 12462                           
 12463                           ;stkvar	_isdst @ sp[(-24)+-12]
 12464  016290  0EDC               	movlw	-36
 12465  016292  006F FF8F FFD9     	movff	plusw1,fsr2l
 12466  016298  0EDD               	movlw	-35
 12467  01629A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12468  0162A0  0E01               	movlw	1
 12469  0162A2  6EDE               	movwf	postinc2,c
 12470  0162A4  0E00               	movlw	0
 12471  0162A6  6EDD               	movwf	postdec2,c
 12472  0162A8  0060  F300  F034   	movff	_dst_off,btemp+10
 12473  0162AE  0060  F304  F035   	movff	_dst_off+1,btemp+11
 12474  0162B4  1E34               	comf	(btemp+10)^0,f,c
 12475  0162B6  1E35               	comf	(btemp+11)^0,f,c
 12476  0162B8  4A34               	infsnz	(btemp+10)^0,f,c
 12477  0162BA  2A35               	incf	(btemp+11)^0,f,c
 12478  0162BC  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 12479  0162C2  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 12480  0162C8  0E00               	movlw	0
 12481  0162CA  BE2F               	btfsc	(btemp+5)^0,7,c
 12482  0162CC  0EFF               	movlw	255
 12483  0162CE  6E30               	movwf	(btemp+6)^0,c
 12484  0162D0  6E31               	movwf	(btemp+7)^0,c
 12485                           
 12486                           ;stkvar	_offset @ sp[(-24)+-14]
 12487  0162D2  0EDA               	movlw	-38
 12488  0162D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12489  0162DA  0EDB               	movlw	-37
 12490  0162DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12491  0162E2  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 12492  0162E8  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 12493  0162EE  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 12494  0162F4  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 12495                           
 12496                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12497  0162FA  0ED8               	movlw	-40
 12498  0162FC  006F FF8C  F02A    	movff	plusw1,btemp
 12499  016302  0ED9               	movlw	-39
 12500  016304  50E3               	movf	plusw1,w,c
 12501  016306  102A               	iorwf	btemp^0,w,c
 12502  016308  B4D8               	btfsc	status,2,c
 12503  01630A  D029               	goto	l16344
 12504  01630C  0060  F1D8  F032   	movff	___timezone,btemp+8
 12505  016312  0060  F1DC  F033   	movff	___timezone+1,btemp+9
 12506  016318  0060  F1E0  F034   	movff	___timezone+2,btemp+10
 12507  01631E  0060  F1E4  F035   	movff	___timezone+3,btemp+11
 12508  016324  1E32               	comf	(btemp+8)^0,f,c
 12509  016326  1E33               	comf	(btemp+9)^0,f,c
 12510  016328  1E34               	comf	(btemp+10)^0,f,c
 12511  01632A  1E35               	comf	(btemp+11)^0,f,c
 12512  01632C  2A32               	incf	(btemp+8)^0,f,c
 12513  01632E  0E00               	movlw	0
 12514  016330  2233               	addwfc	(btemp+9)^0,f,c
 12515  016332  2234               	addwfc	(btemp+10)^0,f,c
 12516  016334  2235               	addwfc	(btemp+11)^0,f,c
 12517                           
 12518                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12519  016336  0ED8               	movlw	-40
 12520  016338  006F FF8F FFD9     	movff	plusw1,fsr2l
 12521  01633E  0ED9               	movlw	-39
 12522  016340  006F FF8F FFDA     	movff	plusw1,fsr2h
 12523  016346  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 12524  01634C  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 12525  016352  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 12526  016358  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 12527  01635E                     l16344:
 12528                           
 12529                           ;stkvar	_zonename @ sp[(-24)+-18]
 12530  01635E  0ED6               	movlw	-42
 12531  016360  006F FF8F FFD9     	movff	plusw1,fsr2l
 12532  016366  0ED7               	movlw	-41
 12533  016368  006F FF8F FFDA     	movff	plusw1,fsr2h
 12534  01636E  0060  F1D3  FFDE   	movff	___tzname+2,postinc2
 12535  016374  0060  F1D7  FFDD   	movff	___tzname+3,postdec2
 12536  01637A                     l4013:
 12537                           
 12538                           ; ___secs_to_zone: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          18, argsize = 18, vargsize = 0
 12539  01637A  0ED6               	movlw	214
 12540  01637C  26E1               	addwf	fsr1l,f,c
 12541  01637E  0EFF               	movlw	255
 12542  016380  22E2               	addwfc	fsr1h,f,c
 12543  016382  0012               	return		;funcret
 12544  016384                     __end_of___secs_to_zone:
 12545                           	opt callstack 0
 12546                           
 12547 ;; *************** function _scan_trans *****************
 12548 ;; Defined at:
 12549 ;;		line 145 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12550 ;; Parameters:    Size  Location     Type
 12551 ;;  t               8  [STACK] long long 
 12552 ;;  local           2  [STACK] int 
 12553 ;;  alt             2  [STACK] PTR unsigned int 
 12554 ;;		 -> alt(2), 
 12555 ;; Auto vars:     Size  Location     Type
 12556 ;;  x               8    0        unsigned long long 
 12557 ;;  a               2    0        unsigned int 
 12558 ;;  scale           2    0        int 
 12559 ;;  n               2    0        unsigned int 
 12560 ;;  m               2    0        unsigned int 
 12561 ;;  off             2    0        int 
 12562 ;; Return value:  Size  Location     Type
 12563 ;;                  2  [STACK] unsigned int 
 12564 ;; Registers used:
 12565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 12566 ;; Tracked objects:
 12567 ;;		On entry : 0/0
 12568 ;;		On exit  : 0/0
 12569 ;;		Unchanged: 0/0
 12570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12575 ;;Total ram usage:        0 bytes
 12576 ;; Hardware stack levels used:    1
 12577 ;; Hardware stack levels required when called:   16
 12578 ;; This function calls:
 12579 ;;		_zi_read32
 12580 ;; This function is called by:
 12581 ;;		___secs_to_zone
 12582 ;; This function uses a reentrant model
 12583 ;;
 12584                           
 12585                           	psect	text36
 12586  00189A                     __ptext36:
 12587                           	opt callstack 0
 12588  00189A                     _scan_trans:
 12589                           	opt callstack 10
 12590                           
 12591                           ;stkvar	_alt @ sp[(0)+-12]
 12592                           
 12593                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 12 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 12594                           ;incstack = 0
 12595  00189A  0EF4               	movlw	-12
 12596  00189C  006F FF8C  F02A    	movff	plusw1,btemp
 12597  0018A2  0EF5               	movlw	-11
 12598  0018A4  50E3               	movf	plusw1,w,c
 12599  0018A6  102A               	iorwf	btemp^0,w,c
 12600  0018A8  B4D8               	btfsc	status,2,c
 12601  0018AA  D00C               	goto	l12052
 12602                           
 12603                           ;stkvar	_alt @ sp[(0)+-12]
 12604  0018AC  0EF4               	movlw	-12
 12605  0018AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12606  0018B4  0EF5               	movlw	-11
 12607  0018B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12608  0018BC  0E00               	movlw	0
 12609  0018BE  6EDE               	movwf	postinc2,c
 12610  0018C0  0E00               	movlw	0
 12611  0018C2  6EDD               	movwf	postdec2,c
 12612  0018C4                     l12052:
 12613  0018C4  0E00               	movlw	0
 12614  0018C6  6E2A               	movwf	btemp^0,c
 12615  0018C8  0E00               	movlw	0
 12616  0018CA  6E2B               	movwf	(btemp+1)^0,c
 12617                           
 12618                           ; _scan_trans: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, a
      +                          rgsize = 12, vargsize = 0
 12619  0018CC  0EF4               	movlw	244
 12620  0018CE  26E1               	addwf	fsr1l,f,c
 12621  0018D0  0EFF               	movlw	255
 12622  0018D2  22E2               	addwfc	fsr1h,f,c
 12623  0018D4  0012               	return		;funcret
 12624  0018D6                     __end_of_scan_trans:
 12625                           	opt callstack 0
 12626                           
 12627 ;; *************** function _zi_read32 *****************
 12628 ;; Defined at:
 12629 ;;		line 100 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12630 ;; Parameters:    Size  Location     Type
 12631 ;;  z               2  [STACK] PTR const unsigned char 
 12632 ;;		 -> NULL(0), 
 12633 ;; Auto vars:     Size  Location     Type
 12634 ;;		None
 12635 ;; Return value:  Size  Location     Type
 12636 ;;                  4  [STACK] unsigned long 
 12637 ;; Registers used:
 12638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12639 ;; Tracked objects:
 12640 ;;		On entry : 0/0
 12641 ;;		On exit  : 0/0
 12642 ;;		Unchanged: 0/0
 12643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12648 ;;Total ram usage:        0 bytes
 12649 ;; Hardware stack levels used:    1
 12650 ;; Hardware stack levels required when called:   15
 12651 ;; This function calls:
 12652 ;;		Nothing
 12653 ;; This function is called by:
 12654 ;;		_scan_trans
 12655 ;;		___secs_to_zone
 12656 ;; This function uses a reentrant model
 12657 ;;
 12658                           
 12659                           	psect	text37
 12660  01F51C                     __ptext37:
 12661                           	opt callstack 0
 12662  01F51C                     _zi_read32:
 12663                           	opt callstack 11
 12664                           
 12665                           ;stkvar	_z @ sp[(0)+-2]
 12666                           
 12667                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12668                           ;incstack = 0
 12669  01F51C  0EFE               	movlw	-2
 12670  01F51E  006F FF8C  F034    	movff	plusw1,btemp+10
 12671  01F524  0EFF               	movlw	-1
 12672  01F526  006F FF8C  F035    	movff	plusw1,btemp+11
 12673  01F52C  0E02               	movlw	2
 12674  01F52E  2434               	addwf	(btemp+10)^0,w,c
 12675  01F530  6ED9               	movwf	fsr2l,c
 12676  01F532  0E00               	movlw	0
 12677  01F534  2035               	addwfc	(btemp+11)^0,w,c
 12678  01F536  6EDA               	movwf	fsr2h,c
 12679  01F538  50DF               	movf	indf2,w,c
 12680  01F53A  6E35               	movwf	(btemp+11)^0,c
 12681  01F53C  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 12682  01F542  6A2F               	clrf	(btemp+5)^0,c
 12683  01F544  6A30               	clrf	(btemp+6)^0,c
 12684  01F546  6A31               	clrf	(btemp+7)^0,c
 12685  01F548  0060  F0C0  F031   	movff	btemp+6,btemp+7
 12686  01F54E  0060  F0BC  F030   	movff	btemp+5,btemp+6
 12687  01F554  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 12688  01F55A  6A2E               	clrf	(btemp+4)^0,c
 12689                           
 12690                           ;stkvar	_z @ sp[(0)+-2]
 12691  01F55C  0EFE               	movlw	-2
 12692  01F55E  006F FF8C  F034    	movff	plusw1,btemp+10
 12693  01F564  0EFF               	movlw	-1
 12694  01F566  006F FF8C  F035    	movff	plusw1,btemp+11
 12695  01F56C  0E01               	movlw	1
 12696  01F56E  2434               	addwf	(btemp+10)^0,w,c
 12697  01F570  6ED9               	movwf	fsr2l,c
 12698  01F572  0E00               	movlw	0
 12699  01F574  2035               	addwfc	(btemp+11)^0,w,c
 12700  01F576  6EDA               	movwf	fsr2h,c
 12701  01F578  50DF               	movf	indf2,w,c
 12702  01F57A  6E35               	movwf	(btemp+11)^0,c
 12703  01F57C  0060  F0D4  F02A   	movff	btemp+11,btemp
 12704  01F582  6A2B               	clrf	(btemp+1)^0,c
 12705  01F584  6A2C               	clrf	(btemp+2)^0,c
 12706  01F586  6A2D               	clrf	(btemp+3)^0,c
 12707  01F588  0060  F0AC  F02D   	movff	btemp+1,btemp+3
 12708  01F58E  0060  F0A8  F02C   	movff	btemp,btemp+2
 12709  01F594  6A2B               	clrf	(btemp+1)^0,c
 12710  01F596  6A2A               	clrf	btemp^0,c
 12711                           
 12712                           ;stkvar	_z @ sp[(0)+-2]
 12713  01F598  0EFE               	movlw	-2
 12714  01F59A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12715  01F5A0  0EFF               	movlw	-1
 12716  01F5A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12717  01F5A8  50DF               	movf	indf2,w,c
 12718  01F5AA  6E32               	movwf	(btemp+8)^0,c
 12719  01F5AC  6A33               	clrf	(btemp+9)^0,c
 12720  01F5AE  6A34               	clrf	(btemp+10)^0,c
 12721  01F5B0  6A35               	clrf	(btemp+11)^0,c
 12722  01F5B2  0060  F0C8  F035   	movff	btemp+8,btemp+11
 12723  01F5B8  6A34               	clrf	(btemp+10)^0,c
 12724  01F5BA  6A33               	clrf	(btemp+9)^0,c
 12725  01F5BC  6A32               	clrf	(btemp+8)^0,c
 12726  01F5BE  502A               	movf	btemp^0,w,c
 12727  01F5C0  1232               	iorwf	(btemp+8)^0,f,c
 12728  01F5C2  502B               	movf	(btemp+1)^0,w,c
 12729  01F5C4  1233               	iorwf	(btemp+9)^0,f,c
 12730  01F5C6  502C               	movf	(btemp+2)^0,w,c
 12731  01F5C8  1234               	iorwf	(btemp+10)^0,f,c
 12732  01F5CA  502D               	movf	(btemp+3)^0,w,c
 12733  01F5CC  1235               	iorwf	(btemp+11)^0,f,c
 12734  01F5CE  502E               	movf	(btemp+4)^0,w,c
 12735  01F5D0  1232               	iorwf	(btemp+8)^0,f,c
 12736  01F5D2  502F               	movf	(btemp+5)^0,w,c
 12737  01F5D4  1233               	iorwf	(btemp+9)^0,f,c
 12738  01F5D6  5030               	movf	(btemp+6)^0,w,c
 12739  01F5D8  1234               	iorwf	(btemp+10)^0,f,c
 12740  01F5DA  5031               	movf	(btemp+7)^0,w,c
 12741  01F5DC  1235               	iorwf	(btemp+11)^0,f,c
 12742                           
 12743                           ;stkvar	_z @ sp[(0)+-2]
 12744  01F5DE  0EFE               	movlw	-2
 12745  01F5E0  006F FF8C  F030    	movff	plusw1,btemp+6
 12746  01F5E6  0EFF               	movlw	-1
 12747  01F5E8  006F FF8C  F031    	movff	plusw1,btemp+7
 12748  01F5EE  0E03               	movlw	3
 12749  01F5F0  2430               	addwf	(btemp+6)^0,w,c
 12750  01F5F2  6ED9               	movwf	fsr2l,c
 12751  01F5F4  0E00               	movlw	0
 12752  01F5F6  2031               	addwfc	(btemp+7)^0,w,c
 12753  01F5F8  6EDA               	movwf	fsr2h,c
 12754  01F5FA  50DF               	movf	indf2,w,c
 12755  01F5FC  1032               	iorwf	(btemp+8)^0,w,c
 12756  01F5FE  6E2A               	movwf	btemp^0,c
 12757  01F600  5033               	movf	(btemp+9)^0,w,c
 12758  01F602  6E2B               	movwf	(btemp+1)^0,c
 12759  01F604  5034               	movf	(btemp+10)^0,w,c
 12760  01F606  6E2C               	movwf	(btemp+2)^0,c
 12761  01F608  5035               	movf	(btemp+11)^0,w,c
 12762  01F60A  6E2D               	movwf	(btemp+3)^0,c
 12763                           
 12764                           ; _zi_read32: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 12765  01F60C  52E5               	movf	postdec1,f,c
 12766  01F60E  52E5               	movf	postdec1,f,c
 12767  01F610  0012               	return		;funcret
 12768  01F612                     __end_of_zi_read32:
 12769                           	opt callstack 0
 12770                           
 12771 ;; *************** function _rule_to_secs *****************
 12772 ;; Defined at:
 12773 ;;		line 218 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12774 ;; Parameters:    Size  Location     Type
 12775 ;;  rule            2  [STACK] PTR const int 
 12776 ;;		 -> r1(10), r0(10), 
 12777 ;;  year            2  [STACK] int 
 12778 ;; Auto vars:     Size  Location     Type
 12779 ;;  days            2  [STACK] int 
 12780 ;;  wday            2  [STACK] int 
 12781 ;;  t               8  [STACK] long long 
 12782 ;;  is_leap         2  [STACK] int 
 12783 ;;  n               2  [STACK] int 
 12784 ;;  x               2  [STACK] int 
 12785 ;;  m               2  [STACK] int 
 12786 ;;  d               2  [STACK] int 
 12787 ;; Return value:  Size  Location     Type
 12788 ;;                  8  [STACK] long long 
 12789 ;; Registers used:
 12790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12791 ;; Tracked objects:
 12792 ;;		On entry : 0/0
 12793 ;;		On exit  : 0/0
 12794 ;;		Unchanged: 0/0
 12795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12800 ;;Total ram usage:        0 bytes
 12801 ;; Hardware stack levels used:    1
 12802 ;; Hardware stack levels required when called:   17
 12803 ;; This function calls:
 12804 ;;		___aldiv
 12805 ;;		___aomod
 12806 ;;		___lmul
 12807 ;;		___month_to_secs
 12808 ;;		___year_to_secs
 12809 ;;		_days_in_month
 12810 ;; This function is called by:
 12811 ;;		___secs_to_zone
 12812 ;; This function uses a reentrant model
 12813 ;;
 12814                           
 12815                           	psect	text38
 12816  01736A                     __ptext38:
 12817                           	opt callstack 0
 12818  01736A                     _rule_to_secs:
 12819                           	opt callstack 0
 12820                           
 12821                           ; autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 8 argfudge = 4
 12822  01736A  0E1A               	movlw	26
 12823  01736C  26E1               	addwf	fsr1l,f,c
 12824  01736E  0E00               	movlw	0
 12825  017370  22E2               	addwfc	fsr1h,f,c
 12826                           
 12827                           ;stkvar	_is_leap @ sp[(-22)+12]
 12828                           
 12829                           ;incstack = 0
 12830  017372  0EF6               	movlw	246
 12831  017374  24E1               	addwf	fsr1l,w,c
 12832  017376  6E2A               	movwf	btemp^0,c
 12833  017378  0EFF               	movlw	255
 12834  01737A  20E2               	addwfc	fsr1h,w,c
 12835  01737C  6E2B               	movwf	(btemp+1)^0,c
 12836  01737E  0060  F0AB  FFE6   	movff	btemp,postinc1
 12837  017384  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12838                           
 12839                           ;stkvar	_year @ sp[(-24)+-8]
 12840  01738A  0EE0               	movlw	-32
 12841  01738C  006F FF8C  F03A    	movff	plusw1,btemp+16
 12842  017392  0EE1               	movlw	-31
 12843  017394  006F FF8C  F03B    	movff	plusw1,btemp+17
 12844  01739A  6A3C               	clrf	(btemp+18)^0,c
 12845  01739C  BE3B               	btfsc	(btemp+17)^0,7,c
 12846  01739E  683C               	setf	(btemp+18)^0,c
 12847  0173A0  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 12848  0173A6  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 12849  0173AC  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 12850  0173B2  0060  F0F0  F040   	movff	btemp+18,btemp+22
 12851  0173B8  0060  F0F0  F041   	movff	btemp+18,btemp+23
 12852  0173BE  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 12853  0173C4  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 12854  0173CA  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 12855  0173D0  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 12856  0173D6  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 12857  0173DC  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 12858  0173E2  0060  F103  FFE6   	movff	btemp+22,postinc1
 12859  0173E8  0060  F107  FFE6   	movff	btemp+23,postinc1
 12860  0173EE  ECB8  F0A8         	call	___year_to_secs	;wreg free
 12861  0173F2  52E5               	movf	postdec1,f,c
 12862  0173F4  006F FF9C  F041    	movff	indf1,btemp+23
 12863  0173FA  52E5               	movf	postdec1,f,c
 12864  0173FC  006F FF9C  F040    	movff	indf1,btemp+22
 12865  017402  52E5               	movf	postdec1,f,c
 12866  017404  006F FF9C  F03F    	movff	indf1,btemp+21
 12867  01740A  52E5               	movf	postdec1,f,c
 12868  01740C  006F FF9C  F03E    	movff	indf1,btemp+20
 12869  017412  52E5               	movf	postdec1,f,c
 12870  017414  006F FF9C  F03D    	movff	indf1,btemp+19
 12871  01741A  52E5               	movf	postdec1,f,c
 12872  01741C  006F FF9C  F03C    	movff	indf1,btemp+18
 12873  017422  52E5               	movf	postdec1,f,c
 12874  017424  006F FF9C  F03B    	movff	indf1,btemp+17
 12875  01742A  52E5               	movf	postdec1,f,c
 12876  01742C  006F FF9C  F03A    	movff	indf1,btemp+16
 12877  017432  52E5               	movf	postdec1,f,c
 12878  017434  52E5               	movf	postdec1,f,c
 12879                           
 12880                           ;stkvar	_t @ sp[(-22)+4]
 12881  017436  0EEE               	movlw	-18
 12882  017438  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12883  01743E  0EEF               	movlw	-17
 12884  017440  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12885  017446  0EF0               	movlw	-16
 12886  017448  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12887  01744E  0EF1               	movlw	-15
 12888  017450  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12889  017456  0EF2               	movlw	-14
 12890  017458  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12891  01745E  0EF3               	movlw	-13
 12892  017460  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12893  017466  0EF4               	movlw	-12
 12894  017468  0060  F103  FFE3   	movff	btemp+22,plusw1
 12895  01746E  0EF5               	movlw	-11
 12896  017470  0060  F107  FFE3   	movff	btemp+23,plusw1
 12897                           
 12898                           ;stkvar	_rule @ sp[(-22)+-6]
 12899  017476  0EE4               	movlw	-28
 12900  017478  006F FF8F FFD9     	movff	plusw1,fsr2l
 12901  01747E  0EE5               	movlw	-27
 12902  017480  006F FF8F FFDA     	movff	plusw1,fsr2h
 12903  017486  0E4D               	movlw	77
 12904  017488  18DE               	xorwf	postinc2,w,c
 12905  01748A  10DE               	iorwf	postinc2,w,c
 12906  01748C  B4D8               	btfsc	status,2,c
 12907  01748E  D074               	goto	l16206
 12908                           
 12909                           ;stkvar	_rule @ sp[(-22)+-6]
 12910  017490  0EE4               	movlw	-28
 12911  017492  006F FF8C  F034    	movff	plusw1,btemp+10
 12912  017498  0EE5               	movlw	-27
 12913  01749A  006F FF8C  F035    	movff	plusw1,btemp+11
 12914  0174A0  0E02               	movlw	2
 12915  0174A2  2434               	addwf	(btemp+10)^0,w,c
 12916  0174A4  6ED9               	movwf	fsr2l,c
 12917  0174A6  0E00               	movlw	0
 12918  0174A8  2035               	addwfc	(btemp+11)^0,w,c
 12919  0174AA  6EDA               	movwf	fsr2h,c
 12920  0174AC  006F FF78  F034    	movff	postinc2,btemp+10
 12921  0174B2  006F FF74  F035    	movff	postdec2,btemp+11
 12922                           
 12923                           ;stkvar	_x @ sp[(-22)+16]
 12924  0174B8  0EFA               	movlw	-6
 12925  0174BA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 12926  0174C0  0EFB               	movlw	-5
 12927  0174C2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 12928                           
 12929                           ;stkvar	_rule @ sp[(-22)+-6]
 12930  0174C8  0EE4               	movlw	-28
 12931  0174CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12932  0174D0  0EE5               	movlw	-27
 12933  0174D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12934  0174D8  0E4A               	movlw	74
 12935  0174DA  18DE               	xorwf	postinc2,w,c
 12936  0174DC  10DE               	iorwf	postinc2,w,c
 12937  0174DE  A4D8               	btfss	status,2,c
 12938  0174E0  D021               	goto	l16204
 12939                           
 12940                           ;stkvar	_x @ sp[(-22)+16]
 12941  0174E2  0EFB               	movlw	-5
 12942  0174E4  BEE3               	btfsc	plusw1,7,c
 12943  0174E6  D014               	goto	u15810
 12944  0174E8  0EFB               	movlw	-5
 12945  0174EA  50E3               	movf	plusw1,w,c
 12946  0174EC  E108               	bnz	u15800
 12947  0174EE  0EFA               	movlw	-6
 12948  0174F0  006F FF8C  F02A    	movff	plusw1,btemp
 12949  0174F6  0E3C               	movlw	60
 12950  0174F8  5E2A               	subwf	btemp^0,f,c
 12951  0174FA  A0D8               	btfss	status,0,c
 12952  0174FC  D009               	goto	u15810
 12953  0174FE                     u15800:
 12954                           
 12955                           ;stkvar	_is_leap @ sp[(-22)+12]
 12956  0174FE  0EF6               	movlw	-10
 12957  017500  006F FF8C  F02A    	movff	plusw1,btemp
 12958  017506  0EF7               	movlw	-9
 12959  017508  50E3               	movf	plusw1,w,c
 12960  01750A  102A               	iorwf	btemp^0,w,c
 12961  01750C  A4D8               	btfss	status,2,c
 12962  01750E  D00A               	goto	l16204
 12963  017510                     u15810:
 12964                           
 12965                           ;stkvar	_x @ sp[(-22)+16]
 12966  017510  50E1               	movf	fsr1l,w,c
 12967  017512  0FFA               	addlw	-6
 12968  017514  6ED9               	movwf	fsr2l,c
 12969  017516  50E2               	movf	fsr1h,w,c
 12970  017518  6EDA               	movwf	fsr2h,c
 12971  01751A  0EFF               	movlw	255
 12972  01751C  22DA               	addwfc	fsr2h,f,c
 12973  01751E  06DE               	decf	postinc2,f,c
 12974  017520  0E00               	movlw	0
 12975  017522  5ADD               	subwfb	postdec2,f,c
 12976  017524                     l16204:
 12977  017524  0E80               	movlw	128
 12978  017526  6EE6               	movwf	postinc1,c
 12979  017528  0E51               	movlw	81
 12980  01752A  6EE6               	movwf	postinc1,c
 12981  01752C  0E01               	movlw	1
 12982  01752E  6EE6               	movwf	postinc1,c
 12983  017530  0E00               	movlw	0
 12984  017532  6EE6               	movwf	postinc1,c
 12985                           
 12986                           ;stkvar	_x @ sp[(-26)+16]
 12987  017534  0EF6               	movlw	-10
 12988  017536  006F FF8C  F034    	movff	plusw1,btemp+10
 12989  01753C  0EF7               	movlw	-9
 12990  01753E  006F FF8C  F035    	movff	plusw1,btemp+11
 12991  017544  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 12992  01754A  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 12993  017550  0E00               	movlw	0
 12994  017552  BE2F               	btfsc	(btemp+5)^0,7,c
 12995  017554  0EFF               	movlw	255
 12996  017556  6E30               	movwf	(btemp+6)^0,c
 12997  017558  6E31               	movwf	(btemp+7)^0,c
 12998  01755A  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 12999  017560  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13000  017566  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13001  01756C  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13002  017572  ECE0  F0FC         	call	___lmul	;wreg free
 13003  017576  D1EC               	goto	L9
 13004  017578                     l16206:
 13005                           
 13006                           ;stkvar	_rule @ sp[(-22)+-6]
 13007  017578  0EE4               	movlw	-28
 13008  01757A  006F FF8C  F034    	movff	plusw1,btemp+10
 13009  017580  0EE5               	movlw	-27
 13010  017582  006F FF8C  F035    	movff	plusw1,btemp+11
 13011  017588  0E02               	movlw	2
 13012  01758A  2434               	addwf	(btemp+10)^0,w,c
 13013  01758C  6ED9               	movwf	fsr2l,c
 13014  01758E  0E00               	movlw	0
 13015  017590  2035               	addwfc	(btemp+11)^0,w,c
 13016  017592  6EDA               	movwf	fsr2h,c
 13017  017594  006F FF78  F034    	movff	postinc2,btemp+10
 13018  01759A  006F FF74  F035    	movff	postdec2,btemp+11
 13019                           
 13020                           ;stkvar	_m @ sp[(-22)+18]
 13021  0175A0  0EFC               	movlw	-4
 13022  0175A2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13023  0175A8  0EFD               	movlw	-3
 13024  0175AA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13025                           
 13026                           ;stkvar	_rule @ sp[(-22)+-6]
 13027  0175B0  0EE4               	movlw	-28
 13028  0175B2  006F FF8C  F034    	movff	plusw1,btemp+10
 13029  0175B8  0EE5               	movlw	-27
 13030  0175BA  006F FF8C  F035    	movff	plusw1,btemp+11
 13031  0175C0  0E04               	movlw	4
 13032  0175C2  2434               	addwf	(btemp+10)^0,w,c
 13033  0175C4  6ED9               	movwf	fsr2l,c
 13034  0175C6  0E00               	movlw	0
 13035  0175C8  2035               	addwfc	(btemp+11)^0,w,c
 13036  0175CA  6EDA               	movwf	fsr2h,c
 13037  0175CC  006F FF78  F034    	movff	postinc2,btemp+10
 13038  0175D2  006F FF74  F035    	movff	postdec2,btemp+11
 13039                           
 13040                           ;stkvar	_n @ sp[(-22)+14]
 13041  0175D8  0EF8               	movlw	-8
 13042  0175DA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13043  0175E0  0EF9               	movlw	-7
 13044  0175E2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13045                           
 13046                           ;stkvar	_rule @ sp[(-22)+-6]
 13047  0175E8  0EE4               	movlw	-28
 13048  0175EA  006F FF8C  F034    	movff	plusw1,btemp+10
 13049  0175F0  0EE5               	movlw	-27
 13050  0175F2  006F FF8C  F035    	movff	plusw1,btemp+11
 13051  0175F8  0E06               	movlw	6
 13052  0175FA  2434               	addwf	(btemp+10)^0,w,c
 13053  0175FC  6ED9               	movwf	fsr2l,c
 13054  0175FE  0E00               	movlw	0
 13055  017600  2035               	addwfc	(btemp+11)^0,w,c
 13056  017602  6EDA               	movwf	fsr2h,c
 13057  017604  006F FF78  F034    	movff	postinc2,btemp+10
 13058  01760A  006F FF74  F035    	movff	postdec2,btemp+11
 13059                           
 13060                           ;stkvar	_d @ sp[(-22)+20]
 13061  017610  0EFE               	movlw	-2
 13062  017612  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13063  017618  0EFF               	movlw	-1
 13064  01761A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13065                           
 13066                           ;stkvar	_is_leap @ sp[(-22)+12]
 13067  017620  0EF6               	movlw	-10
 13068  017622  006F FF8F FFE6     	movff	plusw1,postinc1
 13069  017628  006F FF8F FFE6     	movff	plusw1,postinc1
 13070                           
 13071                           ;stkvar	_m @ sp[(-24)+18]
 13072  01762E  0EFA               	movlw	-6
 13073  017630  50E3               	movf	plusw1,w,c
 13074  017632  0FFF               	addlw	255
 13075  017634  6E34               	movwf	(btemp+10)^0,c
 13076  017636  0EFB               	movlw	-5
 13077  017638  006F FF8C  F035    	movff	plusw1,btemp+11
 13078  01763E  0EFF               	movlw	255
 13079  017640  2235               	addwfc	(btemp+11)^0,f,c
 13080  017642  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 13081  017648  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 13082  01764E  EC82  F0FB         	call	___month_to_secs	;wreg free
 13083  017652  0060  F0A8  F03A   	movff	btemp,btemp+16
 13084  017658  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 13085  01765E  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 13086  017664  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 13087  01766A  6A3E               	clrf	(btemp+20)^0,c
 13088  01766C  BE3D               	btfsc	(btemp+19)^0,7,c
 13089  01766E  683E               	setf	(btemp+20)^0,c
 13090  017670  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 13091  017676  0060  F0F8  F040   	movff	btemp+20,btemp+22
 13092  01767C  0060  F0F8  F041   	movff	btemp+20,btemp+23
 13093                           
 13094                           ;stkvar	_t @ sp[(-22)+4]
 13095  017682  50E1               	movf	fsr1l,w,c
 13096  017684  0FEE               	addlw	-18
 13097  017686  6ED9               	movwf	fsr2l,c
 13098  017688  50E2               	movf	fsr1h,w,c
 13099  01768A  6EDA               	movwf	fsr2h,c
 13100  01768C  0EFF               	movlw	255
 13101  01768E  22DA               	addwfc	fsr2h,f,c
 13102  017690  503A               	movf	(btemp+16)^0,w,c
 13103  017692  26DE               	addwf	postinc2,f,c
 13104  017694  503B               	movf	(btemp+17)^0,w,c
 13105  017696  22DE               	addwfc	postinc2,f,c
 13106  017698  503C               	movf	(btemp+18)^0,w,c
 13107  01769A  22DE               	addwfc	postinc2,f,c
 13108  01769C  503D               	movf	(btemp+19)^0,w,c
 13109  01769E  22DE               	addwfc	postinc2,f,c
 13110  0176A0  503E               	movf	(btemp+20)^0,w,c
 13111  0176A2  22DE               	addwfc	postinc2,f,c
 13112  0176A4  503F               	movf	(btemp+21)^0,w,c
 13113  0176A6  22DE               	addwfc	postinc2,f,c
 13114  0176A8  5040               	movf	(btemp+22)^0,w,c
 13115  0176AA  22DE               	addwfc	postinc2,f,c
 13116  0176AC  5041               	movf	(btemp+23)^0,w,c
 13117  0176AE  22DE               	addwfc	postinc2,f,c
 13118  0176B0  0E80               	movlw	128
 13119  0176B2  6EE6               	movwf	postinc1,c
 13120  0176B4  0E51               	movlw	81
 13121  0176B6  6EE6               	movwf	postinc1,c
 13122  0176B8  0E01               	movlw	1
 13123  0176BA  6EE6               	movwf	postinc1,c
 13124  0176BC  0E00               	movlw	0
 13125  0176BE  6EE6               	movwf	postinc1,c
 13126  0176C0  0E80               	movlw	128
 13127  0176C2  6EE6               	movwf	postinc1,c
 13128  0176C4  0E3A               	movlw	58
 13129  0176C6  6EE6               	movwf	postinc1,c
 13130  0176C8  0E09               	movlw	9
 13131  0176CA  6EE6               	movwf	postinc1,c
 13132  0176CC  0E00               	movlw	0
 13133  0176CE  6EE6               	movwf	postinc1,c
 13134  0176D0  0E00               	movlw	0
 13135  0176D2  6EE6               	movwf	postinc1,c
 13136  0176D4  0E00               	movlw	0
 13137  0176D6  6EE6               	movwf	postinc1,c
 13138  0176D8  0E00               	movlw	0
 13139  0176DA  6EE6               	movwf	postinc1,c
 13140  0176DC  0E00               	movlw	0
 13141  0176DE  6EE6               	movwf	postinc1,c
 13142                           
 13143                           ;stkvar	_t @ sp[(-34)+4]
 13144  0176E0  0EE2               	movlw	-30
 13145  0176E2  50E3               	movf	plusw1,w,c
 13146  0176E4  0F00               	addlw	0
 13147  0176E6  6E3A               	movwf	(btemp+16)^0,c
 13148  0176E8  0EE3               	movlw	-29
 13149  0176EA  006F FF8C  F03B    	movff	plusw1,btemp+17
 13150  0176F0  0E46               	movlw	70
 13151  0176F2  223B               	addwfc	(btemp+17)^0,f,c
 13152  0176F4  0EE4               	movlw	-28
 13153  0176F6  006F FF8C  F03C    	movff	plusw1,btemp+18
 13154  0176FC  0E05               	movlw	5
 13155  0176FE  223C               	addwfc	(btemp+18)^0,f,c
 13156  017700  0EE5               	movlw	-27
 13157  017702  006F FF8C  F03D    	movff	plusw1,btemp+19
 13158  017708  0E00               	movlw	0
 13159  01770A  223D               	addwfc	(btemp+19)^0,f,c
 13160  01770C  0EE6               	movlw	-26
 13161  01770E  006F FF8C  F03E    	movff	plusw1,btemp+20
 13162  017714  0E00               	movlw	0
 13163  017716  223E               	addwfc	(btemp+20)^0,f,c
 13164  017718  0EE7               	movlw	-25
 13165  01771A  006F FF8C  F03F    	movff	plusw1,btemp+21
 13166  017720  0E00               	movlw	0
 13167  017722  223F               	addwfc	(btemp+21)^0,f,c
 13168  017724  0EE8               	movlw	-24
 13169  017726  006F FF8C  F040    	movff	plusw1,btemp+22
 13170  01772C  0E00               	movlw	0
 13171  01772E  2240               	addwfc	(btemp+22)^0,f,c
 13172  017730  0EE9               	movlw	-23
 13173  017732  006F FF8C  F041    	movff	plusw1,btemp+23
 13174  017738  0E00               	movlw	0
 13175  01773A  2241               	addwfc	(btemp+23)^0,f,c
 13176  01773C  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13177  017742  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13178  017748  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13179  01774E  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13180  017754  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13181  01775A  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13182  017760  0060  F103  FFE6   	movff	btemp+22,postinc1
 13183  017766  0060  F107  FFE6   	movff	btemp+23,postinc1
 13184  01776C  EC04  F0E1         	call	___aomod	;wreg free
 13185  017770  52E5               	movf	postdec1,f,c
 13186  017772  006F FF9C  F041    	movff	indf1,btemp+23
 13187  017778  52E5               	movf	postdec1,f,c
 13188  01777A  006F FF9C  F040    	movff	indf1,btemp+22
 13189  017780  52E5               	movf	postdec1,f,c
 13190  017782  006F FF9C  F03F    	movff	indf1,btemp+21
 13191  017788  52E5               	movf	postdec1,f,c
 13192  01778A  006F FF9C  F03E    	movff	indf1,btemp+20
 13193  017790  52E5               	movf	postdec1,f,c
 13194  017792  006F FF9C  F03D    	movff	indf1,btemp+19
 13195  017798  52E5               	movf	postdec1,f,c
 13196  01779A  006F FF9C  F03C    	movff	indf1,btemp+18
 13197  0177A0  52E5               	movf	postdec1,f,c
 13198  0177A2  006F FF9C  F03B    	movff	indf1,btemp+17
 13199  0177A8  52E5               	movf	postdec1,f,c
 13200  0177AA  006F FF9C  F03A    	movff	indf1,btemp+16
 13201  0177B0  0EF8               	movlw	248
 13202  0177B2  26E1               	addwf	fsr1l,f,c
 13203  0177B4  0EFF               	movlw	255
 13204  0177B6  22E2               	addwfc	fsr1h,f,c
 13205  0177B8  0060  F0E8  F034   	movff	btemp+16,btemp+10
 13206  0177BE  0060  F0EC  F035   	movff	btemp+17,btemp+11
 13207  0177C4  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13208  0177CA  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13209  0177D0  0E00               	movlw	0
 13210  0177D2  BE2F               	btfsc	(btemp+5)^0,7,c
 13211  0177D4  0EFF               	movlw	255
 13212  0177D6  6E30               	movwf	(btemp+6)^0,c
 13213  0177D8  6E31               	movwf	(btemp+7)^0,c
 13214  0177DA  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13215  0177E0  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13216  0177E6  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13217  0177EC  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13218  0177F2  ECA4  F0EB         	call	___aldiv	;wreg free
 13219  0177F6  0060  F0A8  F034   	movff	btemp,btemp+10
 13220  0177FC  0060  F0AC  F035   	movff	btemp+1,btemp+11
 13221                           
 13222                           ;stkvar	_wday @ sp[(-22)+2]
 13223  017802  0EEC               	movlw	-20
 13224  017804  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13225  01780A  0EED               	movlw	-19
 13226  01780C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13227                           
 13228                           ;stkvar	_wday @ sp[(-22)+2]
 13229                           ;stkvar	_d @ sp[(-22)+20]
 13230  017812  0EFE               	movlw	-2
 13231  017814  006F FF8C  F034    	movff	plusw1,btemp+10
 13232  01781A  0EFF               	movlw	-1
 13233  01781C  006F FF8C  F035    	movff	plusw1,btemp+11
 13234  017822  0EEC               	movlw	-20
 13235  017824  50E3               	movf	plusw1,w,c
 13236  017826  5E34               	subwf	(btemp+10)^0,f,c
 13237  017828  0EED               	movlw	-19
 13238  01782A  50E3               	movf	plusw1,w,c
 13239  01782C  5A35               	subwfb	(btemp+11)^0,f,c
 13240                           
 13241                           ;stkvar	_days @ sp[(-22)+0]
 13242  01782E  0EEA               	movlw	-22
 13243  017830  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13244  017836  0EEB               	movlw	-21
 13245  017838  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13246                           
 13247                           ;stkvar	_days @ sp[(-22)+0]
 13248  01783E  0EEB               	movlw	-21
 13249  017840  AEE3               	btfss	plusw1,7,c
 13250  017842  D011               	goto	l4005
 13251                           
 13252                           ;stkvar	_days @ sp[(-22)+0]
 13253  017844  0EEA               	movlw	-22
 13254  017846  50E3               	movf	plusw1,w,c
 13255  017848  0F07               	addlw	7
 13256  01784A  6E2A               	movwf	btemp^0,c
 13257  01784C  0EEA               	movlw	-22
 13258  01784E  0060  F0AB  FFE3   	movff	btemp,plusw1
 13259  017854  6A2A               	clrf	btemp^0,c
 13260  017856  0EEB               	movlw	-21
 13261  017858  50E3               	movf	plusw1,w,c
 13262  01785A  202A               	addwfc	btemp^0,w,c
 13263  01785C  6E2A               	movwf	btemp^0,c
 13264  01785E  0EEB               	movlw	-21
 13265  017860  0060  F0AB  FFE3   	movff	btemp,plusw1
 13266  017866                     l4005:
 13267                           
 13268                           ;stkvar	_n @ sp[(-22)+14]
 13269  017866  0EF8               	movlw	-8
 13270  017868  006F FF8C  F02A    	movff	plusw1,btemp
 13271  01786E  0E05               	movlw	5
 13272  017870  182A               	xorwf	btemp^0,w,c
 13273  017872  E134               	bnz	l16222
 13274  017874  0EF9               	movlw	-7
 13275  017876  50E3               	movf	plusw1,w,c
 13276  017878  A4D8               	btfss	status,2,c
 13277  01787A  D030               	goto	l16222
 13278                           
 13279                           ;stkvar	_is_leap @ sp[(-22)+12]
 13280  01787C  0EF6               	movlw	-10
 13281  01787E  006F FF8F FFE6     	movff	plusw1,postinc1
 13282  017884  006F FF8F FFE6     	movff	plusw1,postinc1
 13283                           
 13284                           ;stkvar	_m @ sp[(-24)+18]
 13285  01788A  0EFA               	movlw	-6
 13286  01788C  006F FF8F FFE6     	movff	plusw1,postinc1
 13287  017892  006F FF8F FFE6     	movff	plusw1,postinc1
 13288  017898  ECD9  F007         	call	_days_in_month	;wreg free
 13289                           
 13290                           ;stkvar	_days @ sp[(-22)+0]
 13291  01789C  0EEA               	movlw	-22
 13292  01789E  50E3               	movf	plusw1,w,c
 13293  0178A0  0F1C               	addlw	28
 13294  0178A2  6E34               	movwf	(btemp+10)^0,c
 13295  0178A4  0EEB               	movlw	-21
 13296  0178A6  006F FF8C  F035    	movff	plusw1,btemp+11
 13297  0178AC  0E00               	movlw	0
 13298  0178AE  2235               	addwfc	(btemp+11)^0,f,c
 13299  0178B0  502A               	movf	btemp^0,w,c
 13300  0178B2  5C34               	subwf	(btemp+10)^0,w,c
 13301  0178B4  5035               	movf	(btemp+11)^0,w,c
 13302  0178B6  0A80               	xorlw	128
 13303  0178B8  6E2C               	movwf	(btemp+2)^0,c
 13304  0178BA  502B               	movf	(btemp+1)^0,w,c
 13305  0178BC  0A80               	xorlw	128
 13306  0178BE  582C               	subwfb	(btemp+2)^0,w,c
 13307  0178C0  A0D8               	btfss	status,0,c
 13308  0178C2  D00C               	goto	l16222
 13309  0178C4  0E04               	movlw	4
 13310  0178C6  6E34               	movwf	(btemp+10)^0,c
 13311  0178C8  0E00               	movlw	0
 13312  0178CA  6E35               	movwf	(btemp+11)^0,c
 13313                           
 13314                           ;stkvar	_n @ sp[(-22)+14]
 13315  0178CC  0EF8               	movlw	-8
 13316  0178CE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13317  0178D4  0EF9               	movlw	-7
 13318  0178D6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13319  0178DC                     l16222:
 13320  0178DC  0E80               	movlw	128
 13321  0178DE  6EE6               	movwf	postinc1,c
 13322  0178E0  0E51               	movlw	81
 13323  0178E2  6EE6               	movwf	postinc1,c
 13324  0178E4  0E01               	movlw	1
 13325  0178E6  6EE6               	movwf	postinc1,c
 13326  0178E8  0E00               	movlw	0
 13327  0178EA  6EE6               	movwf	postinc1,c
 13328                           
 13329                           ;stkvar	_days @ sp[(-26)+0]
 13330                           ;stkvar	_n @ sp[(-26)+14]
 13331  0178EC  0EF4               	movlw	-12
 13332  0178EE  006F FF8C  F034    	movff	plusw1,btemp+10
 13333  0178F4  0EF5               	movlw	-11
 13334  0178F6  006F FF8C  F035    	movff	plusw1,btemp+11
 13335  0178FC  0E07               	movlw	7
 13336  0178FE  0234               	mulwf	(btemp+10)^0,c
 13337  017900  006F FFCC  F032    	movff	prodl,btemp+8
 13338  017906  006F FFD0  F033    	movff	prodh,btemp+9
 13339  01790C  0235               	mulwf	(btemp+11)^0,c
 13340  01790E  50F3               	movf	prodl,w,c
 13341  017910  2633               	addwf	(btemp+9)^0,f,c
 13342  017912  0EE6               	movlw	-26
 13343  017914  50E3               	movf	plusw1,w,c
 13344  017916  2632               	addwf	(btemp+8)^0,f,c
 13345  017918  0EE7               	movlw	-25
 13346  01791A  50E3               	movf	plusw1,w,c
 13347  01791C  2233               	addwfc	(btemp+9)^0,f,c
 13348  01791E  0EF9               	movlw	249
 13349  017920  2432               	addwf	(btemp+8)^0,w,c
 13350  017922  6E2E               	movwf	(btemp+4)^0,c
 13351  017924  0EFF               	movlw	255
 13352  017926  2033               	addwfc	(btemp+9)^0,w,c
 13353  017928  6E2F               	movwf	(btemp+5)^0,c
 13354  01792A  6A30               	clrf	(btemp+6)^0,c
 13355  01792C  BE2F               	btfsc	(btemp+5)^0,7,c
 13356  01792E  0630               	decf	(btemp+6)^0,f,c
 13357  017930  5030               	movf	(btemp+6)^0,w,c
 13358  017932  6E31               	movwf	(btemp+7)^0,c
 13359  017934  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13360  01793A  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13361  017940  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13362  017946  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13363  01794C  ECE0  F0FC         	call	___lmul	;wreg free
 13364  017950                     L9:
 13365  017950  0060  F0A8  F03A   	movff	btemp,btemp+16
 13366  017956  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 13367  01795C  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 13368  017962  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 13369  017968  6A3E               	clrf	(btemp+20)^0,c
 13370  01796A  BE3D               	btfsc	(btemp+19)^0,7,c
 13371  01796C  683E               	setf	(btemp+20)^0,c
 13372  01796E  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 13373  017974  0060  F0F8  F040   	movff	btemp+20,btemp+22
 13374  01797A  0060  F0F8  F041   	movff	btemp+20,btemp+23
 13375                           
 13376                           ;stkvar	_t @ sp[(-22)+4]
 13377  017980  50E1               	movf	fsr1l,w,c
 13378  017982  0FEE               	addlw	-18
 13379  017984  6ED9               	movwf	fsr2l,c
 13380  017986  50E2               	movf	fsr1h,w,c
 13381  017988  6EDA               	movwf	fsr2h,c
 13382  01798A  0EFF               	movlw	255
 13383  01798C  22DA               	addwfc	fsr2h,f,c
 13384  01798E  503A               	movf	(btemp+16)^0,w,c
 13385  017990  26DE               	addwf	postinc2,f,c
 13386  017992  503B               	movf	(btemp+17)^0,w,c
 13387  017994  22DE               	addwfc	postinc2,f,c
 13388  017996  503C               	movf	(btemp+18)^0,w,c
 13389  017998  22DE               	addwfc	postinc2,f,c
 13390  01799A  503D               	movf	(btemp+19)^0,w,c
 13391  01799C  22DE               	addwfc	postinc2,f,c
 13392  01799E  503E               	movf	(btemp+20)^0,w,c
 13393  0179A0  22DE               	addwfc	postinc2,f,c
 13394  0179A2  503F               	movf	(btemp+21)^0,w,c
 13395  0179A4  22DE               	addwfc	postinc2,f,c
 13396  0179A6  5040               	movf	(btemp+22)^0,w,c
 13397  0179A8  22DE               	addwfc	postinc2,f,c
 13398  0179AA  5041               	movf	(btemp+23)^0,w,c
 13399  0179AC  22DE               	addwfc	postinc2,f,c
 13400                           
 13401                           ;stkvar	_rule @ sp[(-22)+-6]
 13402  0179AE  0EE4               	movlw	-28
 13403  0179B0  006F FF8C  F034    	movff	plusw1,btemp+10
 13404  0179B6  0EE5               	movlw	-27
 13405  0179B8  006F FF8C  F035    	movff	plusw1,btemp+11
 13406  0179BE  0E08               	movlw	8
 13407  0179C0  2434               	addwf	(btemp+10)^0,w,c
 13408  0179C2  6ED9               	movwf	fsr2l,c
 13409  0179C4  0E00               	movlw	0
 13410  0179C6  2035               	addwfc	(btemp+11)^0,w,c
 13411  0179C8  6EDA               	movwf	fsr2h,c
 13412  0179CA  006F FF78  F034    	movff	postinc2,btemp+10
 13413  0179D0  006F FF74  F035    	movff	postdec2,btemp+11
 13414                           
 13415                           ;stkvar	_t @ sp[(-22)+4]
 13416  0179D6  50E1               	movf	fsr1l,w,c
 13417  0179D8  0FEE               	addlw	-18
 13418  0179DA  6ED9               	movwf	fsr2l,c
 13419  0179DC  50E2               	movf	fsr1h,w,c
 13420  0179DE  6EDA               	movwf	fsr2h,c
 13421  0179E0  0EFF               	movlw	255
 13422  0179E2  22DA               	addwfc	fsr2h,f,c
 13423  0179E4  5034               	movf	(btemp+10)^0,w,c
 13424  0179E6  26DE               	addwf	postinc2,f,c
 13425  0179E8  5035               	movf	(btemp+11)^0,w,c
 13426  0179EA  22DE               	addwfc	postinc2,f,c
 13427  0179EC  0E00               	movlw	0
 13428  0179EE  BE35               	btfsc	(btemp+11)^0,7,c
 13429  0179F0  0EFF               	movlw	255
 13430  0179F2  22DE               	addwfc	postinc2,f,c
 13431  0179F4  22DE               	addwfc	postinc2,f,c
 13432  0179F6  22DE               	addwfc	postinc2,f,c
 13433  0179F8  22DE               	addwfc	postinc2,f,c
 13434  0179FA  22DE               	addwfc	postinc2,f,c
 13435  0179FC  22DE               	addwfc	postinc2,f,c
 13436                           
 13437                           ;stkvar	_t @ sp[(-22)+4]
 13438  0179FE  0EEE               	movlw	238
 13439  017A00  24E1               	addwf	fsr1l,w,c
 13440  017A02  6ED9               	movwf	fsr2l,c
 13441  017A04  0EFF               	movlw	255
 13442  017A06  20E2               	addwfc	fsr1h,w,c
 13443  017A08  6EDA               	movwf	fsr2h,c
 13444                           
 13445                           ;stkvar	?_rule_to_secs @ sp[(-22)+-8]
 13446  017A0A  0E08               	movlw	8
 13447  017A0C  6E2A               	movwf	btemp^0,c
 13448  017A0E  0EE2               	movlw	-30
 13449  017A10                     us1585999:
 13450  017A10  006F FF7B FFE3     	movff	postinc2,plusw1
 13451  017A16  28E8               	incf	wreg,w,c
 13452  017A18  2E2A               	decfsz	btemp^0,f,c
 13453  017A1A  D7FA               	bra	us1585999
 13454                           
 13455                           ; _rule_to_secs: autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8,
      +                           argsize = 8, vargsize = 0
 13456  017A1C  0EEA               	movlw	234
 13457  017A1E  26E1               	addwf	fsr1l,f,c
 13458  017A20  0EFF               	movlw	255
 13459  017A22  22E2               	addwfc	fsr1h,f,c
 13460  017A24  0012               	return		;funcret
 13461  017A26                     __end_of_rule_to_secs:
 13462                           	opt callstack 0
 13463                           
 13464 ;; *************** function _days_in_month *****************
 13465 ;; Defined at:
 13466 ;;		line 210 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13467 ;; Parameters:    Size  Location     Type
 13468 ;;  m               2  [STACK] int 
 13469 ;;  is_leap         2  [STACK] int 
 13470 ;; Auto vars:     Size  Location     Type
 13471 ;;		None
 13472 ;; Return value:  Size  Location     Type
 13473 ;;                  2  [STACK] int 
 13474 ;; Registers used:
 13475 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13476 ;; Tracked objects:
 13477 ;;		On entry : 0/0
 13478 ;;		On exit  : 0/0
 13479 ;;		Unchanged: 0/0
 13480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13485 ;;Total ram usage:        0 bytes
 13486 ;; Hardware stack levels used:    1
 13487 ;; Hardware stack levels required when called:   15
 13488 ;; This function calls:
 13489 ;;		Nothing
 13490 ;; This function is called by:
 13491 ;;		_rule_to_secs
 13492 ;; This function uses a reentrant model
 13493 ;;
 13494                           
 13495                           	psect	text39
 13496  000FB2                     __ptext39:
 13497                           	opt callstack 0
 13498  000FB2                     _days_in_month:
 13499                           	opt callstack 10
 13500                           
 13501                           ;stkvar	_m @ sp[(0)+-2]
 13502                           
 13503                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13504                           ;incstack = 0
 13505  000FB2  0EFE               	movlw	-2
 13506  000FB4  006F FF8C  F02A    	movff	plusw1,btemp
 13507  000FBA  0E02               	movlw	2
 13508  000FBC  182A               	xorwf	btemp^0,w,c
 13509  000FBE  E10D               	bnz	l11574
 13510  000FC0  0EFF               	movlw	-1
 13511  000FC2  50E3               	movf	plusw1,w,c
 13512  000FC4  A4D8               	btfss	status,2,c
 13513  000FC6  D009               	goto	l11574
 13514                           
 13515                           ;stkvar	_is_leap @ sp[(0)+-4]
 13516  000FC8  0EFC               	movlw	-4
 13517  000FCA  50E3               	movf	plusw1,w,c
 13518  000FCC  0F1C               	addlw	28
 13519  000FCE  6E2A               	movwf	btemp^0,c
 13520  000FD0  0EFD               	movlw	-3
 13521  000FD2  006F FF8C  F02B    	movff	plusw1,btemp+1
 13522  000FD8  D017               	goto	L10
 13523  000FDA                     l11574:
 13524  000FDA  0EFF               	movlw	255
 13525  000FDC  6E35               	movwf	(btemp+11)^0,c
 13526                           
 13527                           ;stkvar	_m @ sp[(0)+-2]
 13528  000FDE  0EFE               	movlw	-2
 13529  000FE0  50E3               	movf	plusw1,w,c
 13530  000FE2  2435               	addwf	(btemp+11)^0,w,c
 13531  000FE4  6E34               	movwf	(btemp+10)^0,c
 13532  000FE6  0ED5               	movlw	213
 13533  000FE8  6E2A               	movwf	btemp^0,c
 13534  000FEA  0E0A               	movlw	10
 13535  000FEC  6E2B               	movwf	(btemp+1)^0,c
 13536  000FEE  2A34               	incf	(btemp+10)^0,f,c
 13537  000FF0  D003               	goto	u10664
 13538  000FF2                     u10665:
 13539  000FF2  342B               	rlcf	(btemp+1)^0,w,c
 13540  000FF4  322B               	rrcf	(btemp+1)^0,f,c
 13541  000FF6  322A               	rrcf	btemp^0,f,c
 13542  000FF8                     u10664:
 13543  000FF8  2E34               	decfsz	(btemp+10)^0,f,c
 13544  000FFA  D7FB               	goto	u10665
 13545  000FFC  0E01               	movlw	1
 13546  000FFE  162A               	andwf	btemp^0,f,c
 13547  001000  0E00               	movlw	0
 13548  001002  162B               	andwf	(btemp+1)^0,f,c
 13549  001004  0E1E               	movlw	30
 13550  001006  262A               	addwf	btemp^0,f,c
 13551  001008                     L10:
 13552  001008  0E00               	movlw	0
 13553  00100A  222B               	addwfc	(btemp+1)^0,f,c
 13554                           
 13555                           ; _days_in_month: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 13556  00100C  52E5               	movf	postdec1,f,c
 13557  00100E  52E5               	movf	postdec1,f,c
 13558  001010  52E5               	movf	postdec1,f,c
 13559  001012  52E5               	movf	postdec1,f,c
 13560  001014  0012               	return		;funcret
 13561  001016                     __end_of_days_in_month:
 13562                           	opt callstack 0
 13563                           
 13564 ;; *************** function ___year_to_secs *****************
 13565 ;; Defined at:
 13566 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__year_to_secs.c"
 13567 ;; Parameters:    Size  Location     Type
 13568 ;;  year            8  [STACK] long long 
 13569 ;;  is_leap         2  [STACK] PTR int 
 13570 ;;		 -> F5(2), is_leap(2), NULL(0), 
 13571 ;; Auto vars:     Size  Location     Type
 13572 ;;  y               2  [STACK] int 
 13573 ;;  leaps           2  [STACK] int 
 13574 ;;  rem             2  [STACK] int 
 13575 ;;  5               2  [STACK] int 
 13576 ;;  centuries       2  [STACK] int 
 13577 ;;  leaps           2  [STACK] int 
 13578 ;;  cycles          2  [STACK] int 
 13579 ;; Return value:  Size  Location     Type
 13580 ;;                  8  [STACK] long long 
 13581 ;; Registers used:
 13582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, prodl, prodh
 13583 ;; Tracked objects:
 13584 ;;		On entry : 0/0
 13585 ;;		On exit  : 0/0
 13586 ;;		Unchanged: 0/0
 13587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13592 ;;Total ram usage:        0 bytes
 13593 ;; Hardware stack levels used:    1
 13594 ;; Hardware stack levels required when called:   16
 13595 ;; This function calls:
 13596 ;;		___aodiv
 13597 ;;		___aomod
 13598 ;;		___lmul
 13599 ;;		___omul
 13600 ;; This function is called by:
 13601 ;;		_rule_to_secs
 13602 ;;		___secs_to_zone
 13603 ;; This function uses a reentrant model
 13604 ;;
 13605                           
 13606                           	psect	text40
 13607  015170                     __ptext40:
 13608                           	opt callstack 0
 13609  015170                     ___year_to_secs:
 13610                           	opt callstack 0
 13611                           
 13612                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 13613  015170  0E0E               	movlw	14
 13614  015172  26E1               	addwf	fsr1l,f,c
 13615  015174  0E00               	movlw	0
 13616  015176  22E2               	addwfc	fsr1h,f,c
 13617                           
 13618                           ;stkvar	_year @ sp[(-14)+-8]
 13619                           
 13620                           ;incstack = 0
 13621  015178  0EEA               	movlw	-22
 13622  01517A  50E3               	movf	plusw1,w,c
 13623  01517C  0FFE               	addlw	254
 13624  01517E  6E3A               	movwf	(btemp+16)^0,c
 13625  015180  0EEB               	movlw	-21
 13626  015182  006F FF8C  F03B    	movff	plusw1,btemp+17
 13627  015188  0EFF               	movlw	255
 13628  01518A  223B               	addwfc	(btemp+17)^0,f,c
 13629  01518C  0EEC               	movlw	-20
 13630  01518E  006F FF8C  F03C    	movff	plusw1,btemp+18
 13631  015194  0EFF               	movlw	255
 13632  015196  223C               	addwfc	(btemp+18)^0,f,c
 13633  015198  0EED               	movlw	-19
 13634  01519A  006F FF8C  F03D    	movff	plusw1,btemp+19
 13635  0151A0  0EFF               	movlw	255
 13636  0151A2  223D               	addwfc	(btemp+19)^0,f,c
 13637  0151A4  0EEE               	movlw	-18
 13638  0151A6  006F FF8C  F03E    	movff	plusw1,btemp+20
 13639  0151AC  0EFF               	movlw	255
 13640  0151AE  223E               	addwfc	(btemp+20)^0,f,c
 13641  0151B0  0EEF               	movlw	-17
 13642  0151B2  006F FF8C  F03F    	movff	plusw1,btemp+21
 13643  0151B8  0EFF               	movlw	255
 13644  0151BA  223F               	addwfc	(btemp+21)^0,f,c
 13645  0151BC  0EF0               	movlw	-16
 13646  0151BE  006F FF8C  F040    	movff	plusw1,btemp+22
 13647  0151C4  0EFF               	movlw	255
 13648  0151C6  2240               	addwfc	(btemp+22)^0,f,c
 13649  0151C8  0EF1               	movlw	-15
 13650  0151CA  006F FF8C  F041    	movff	plusw1,btemp+23
 13651  0151D0  0EFF               	movlw	255
 13652  0151D2  2241               	addwfc	(btemp+23)^0,f,c
 13653  0151D4  5041               	movf	(btemp+23)^0,w,c
 13654  0151D6  1040               	iorwf	(btemp+22)^0,w,c
 13655  0151D8  103F               	iorwf	(btemp+21)^0,w,c
 13656  0151DA  103E               	iorwf	(btemp+20)^0,w,c
 13657  0151DC  103D               	iorwf	(btemp+19)^0,w,c
 13658  0151DE  103C               	iorwf	(btemp+18)^0,w,c
 13659  0151E0  103B               	iorwf	(btemp+17)^0,w,c
 13660  0151E2  E103               	bnz	u10671
 13661  0151E4  0E89               	movlw	137
 13662  0151E6  5C3A               	subwf	(btemp+16)^0,w,c
 13663  0151E8  B0D8               	btfsc	status,0,c
 13664  0151EA                     u10671:
 13665  0151EA  D0E7               	goto	l11600
 13666                           
 13667                           ;stkvar	_year @ sp[(-14)+-8]
 13668                           ;stkvar	_y @ sp[(-14)+0]
 13669  0151EC  0EEA               	movlw	-22
 13670  0151EE  006F FF8C  F02A    	movff	plusw1,btemp
 13671  0151F4  0EF2               	movlw	-14
 13672  0151F6  0060  F0AB  FFE3   	movff	btemp,plusw1
 13673  0151FC  0EEB               	movlw	-21
 13674  0151FE  006F FF8C  F02A    	movff	plusw1,btemp
 13675  015204  0EF3               	movlw	-13
 13676  015206  0060  F0AB  FFE3   	movff	btemp,plusw1
 13677                           
 13678                           ;stkvar	_y @ sp[(-14)+0]
 13679  01520C  0EF2               	movlw	-14
 13680  01520E  50E3               	movf	plusw1,w,c
 13681  015210  0FBC               	addlw	188
 13682  015212  6E34               	movwf	(btemp+10)^0,c
 13683  015214  0EF3               	movlw	-13
 13684  015216  006F FF8C  F035    	movff	plusw1,btemp+11
 13685  01521C  0EFF               	movlw	255
 13686  01521E  2235               	addwfc	(btemp+11)^0,f,c
 13687  015220  3435               	rlcf	(btemp+11)^0,w,c
 13688  015222  3235               	rrcf	(btemp+11)^0,f,c
 13689  015224  3234               	rrcf	(btemp+10)^0,f,c
 13690  015226  3435               	rlcf	(btemp+11)^0,w,c
 13691  015228  3235               	rrcf	(btemp+11)^0,f,c
 13692  01522A  3234               	rrcf	(btemp+10)^0,f,c
 13693                           
 13694                           ;stkvar	_leaps @ sp[(-14)+2]
 13695  01522C  0EF4               	movlw	-12
 13696  01522E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13697  015234  0EF5               	movlw	-11
 13698  015236  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13699  01523C  0EBC               	movlw	188
 13700  01523E  6E35               	movwf	(btemp+11)^0,c
 13701                           
 13702                           ;stkvar	_y @ sp[(-14)+0]
 13703  015240  0EF2               	movlw	-14
 13704  015242  50E3               	movf	plusw1,w,c
 13705  015244  2435               	addwf	(btemp+11)^0,w,c
 13706  015246  6E34               	movwf	(btemp+10)^0,c
 13707  015248  0E03               	movlw	3
 13708  01524A  1634               	andwf	(btemp+10)^0,f,c
 13709  01524C  A4D8               	btfss	status,2,c
 13710  01524E  D01D               	goto	l11592
 13711                           
 13712                           ;stkvar	_leaps @ sp[(-14)+2]
 13713  015250  50E1               	movf	fsr1l,w,c
 13714  015252  0FF4               	addlw	-12
 13715  015254  6ED9               	movwf	fsr2l,c
 13716  015256  50E2               	movf	fsr1h,w,c
 13717  015258  6EDA               	movwf	fsr2h,c
 13718  01525A  0EFF               	movlw	255
 13719  01525C  22DA               	addwfc	fsr2h,f,c
 13720  01525E  06DE               	decf	postinc2,f,c
 13721  015260  0E00               	movlw	0
 13722  015262  5ADD               	subwfb	postdec2,f,c
 13723                           
 13724                           ;stkvar	_is_leap @ sp[(-14)+-10]
 13725  015264  0EE8               	movlw	-24
 13726  015266  006F FF8C  F02A    	movff	plusw1,btemp
 13727  01526C  0EE9               	movlw	-23
 13728  01526E  50E3               	movf	plusw1,w,c
 13729  015270  102A               	iorwf	btemp^0,w,c
 13730  015272  B4D8               	btfsc	status,2,c
 13731  015274  D01F               	goto	l11596
 13732                           
 13733                           ;stkvar	_is_leap @ sp[(-14)+-10]
 13734  015276  0EE8               	movlw	-24
 13735  015278  006F FF8F FFD9     	movff	plusw1,fsr2l
 13736  01527E  0EE9               	movlw	-23
 13737  015280  006F FF8F FFDA     	movff	plusw1,fsr2h
 13738  015286  0E01               	movlw	1
 13739  015288  D012               	goto	L11
 13740  01528A                     l11592:
 13741                           
 13742                           ;stkvar	_is_leap @ sp[(-14)+-10]
 13743  01528A  0EE8               	movlw	-24
 13744  01528C  006F FF8C  F02A    	movff	plusw1,btemp
 13745  015292  0EE9               	movlw	-23
 13746  015294  50E3               	movf	plusw1,w,c
 13747  015296  102A               	iorwf	btemp^0,w,c
 13748  015298  B4D8               	btfsc	status,2,c
 13749  01529A  D00C               	goto	l11596
 13750                           
 13751                           ;stkvar	_is_leap @ sp[(-14)+-10]
 13752  01529C  0EE8               	movlw	-24
 13753  01529E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13754  0152A4  0EE9               	movlw	-23
 13755  0152A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13756  0152AC  0E00               	movlw	0
 13757  0152AE                     L11:
 13758  0152AE  6EDE               	movwf	postinc2,c
 13759  0152B0  0E00               	movlw	0
 13760  0152B2  6EDD               	movwf	postdec2,c
 13761  0152B4                     l11596:
 13762  0152B4  0E80               	movlw	128
 13763  0152B6  6EE6               	movwf	postinc1,c
 13764  0152B8  0E33               	movlw	51
 13765  0152BA  6EE6               	movwf	postinc1,c
 13766  0152BC  0EE1               	movlw	225
 13767  0152BE  6EE6               	movwf	postinc1,c
 13768  0152C0  0E01               	movlw	1
 13769  0152C2  6EE6               	movwf	postinc1,c
 13770                           
 13771                           ;stkvar	_y @ sp[(-18)+0]
 13772  0152C4  0EEE               	movlw	-18
 13773  0152C6  006F FF8C  F034    	movff	plusw1,btemp+10
 13774  0152CC  0EEF               	movlw	-17
 13775  0152CE  006F FF8C  F035    	movff	plusw1,btemp+11
 13776  0152D4  0EBA               	movlw	186
 13777  0152D6  2434               	addwf	(btemp+10)^0,w,c
 13778  0152D8  6E2E               	movwf	(btemp+4)^0,c
 13779  0152DA  0EFF               	movlw	255
 13780  0152DC  2035               	addwfc	(btemp+11)^0,w,c
 13781  0152DE  6E2F               	movwf	(btemp+5)^0,c
 13782  0152E0  6A30               	clrf	(btemp+6)^0,c
 13783  0152E2  BE2F               	btfsc	(btemp+5)^0,7,c
 13784  0152E4  0630               	decf	(btemp+6)^0,f,c
 13785  0152E6  5030               	movf	(btemp+6)^0,w,c
 13786  0152E8  6E31               	movwf	(btemp+7)^0,c
 13787  0152EA  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13788  0152F0  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13789  0152F6  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13790  0152FC  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13791  015302  ECE0  F0FC         	call	___lmul	;wreg free
 13792  015306  0060  F0A8  F032   	movff	btemp,btemp+8
 13793  01530C  0060  F0AC  F033   	movff	btemp+1,btemp+9
 13794  015312  0060  F0B0  F034   	movff	btemp+2,btemp+10
 13795  015318  0060  F0B4  F035   	movff	btemp+3,btemp+11
 13796  01531E  0E80               	movlw	128
 13797  015320  6EE6               	movwf	postinc1,c
 13798  015322  0E51               	movlw	81
 13799  015324  6EE6               	movwf	postinc1,c
 13800  015326  0E01               	movlw	1
 13801  015328  6EE6               	movwf	postinc1,c
 13802  01532A  0E00               	movlw	0
 13803  01532C  6EE6               	movwf	postinc1,c
 13804                           
 13805                           ;stkvar	_leaps @ sp[(-18)+2]
 13806  01532E  0EF0               	movlw	-16
 13807  015330  006F FF8C  F030    	movff	plusw1,btemp+6
 13808  015336  0EF1               	movlw	-15
 13809  015338  006F FF8C  F031    	movff	plusw1,btemp+7
 13810  01533E  0060  F0C0  F02A   	movff	btemp+6,btemp
 13811  015344  0060  F0C4  F02B   	movff	btemp+7,btemp+1
 13812  01534A  0E00               	movlw	0
 13813  01534C  BE2B               	btfsc	(btemp+1)^0,7,c
 13814  01534E  0EFF               	movlw	255
 13815  015350  6E2C               	movwf	(btemp+2)^0,c
 13816  015352  6E2D               	movwf	(btemp+3)^0,c
 13817  015354  0060  F0AB  FFE6   	movff	btemp,postinc1
 13818  01535A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 13819  015360  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 13820  015366  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 13821  01536C  ECE0  F0FC         	call	___lmul	;wreg free
 13822  015370  502A               	movf	btemp^0,w,c
 13823  015372  2432               	addwf	(btemp+8)^0,w,c
 13824  015374  6E2E               	movwf	(btemp+4)^0,c
 13825  015376  502B               	movf	(btemp+1)^0,w,c
 13826  015378  2033               	addwfc	(btemp+9)^0,w,c
 13827  01537A  6E2F               	movwf	(btemp+5)^0,c
 13828  01537C  502C               	movf	(btemp+2)^0,w,c
 13829  01537E  2034               	addwfc	(btemp+10)^0,w,c
 13830  015380  6E30               	movwf	(btemp+6)^0,c
 13831  015382  502D               	movf	(btemp+3)^0,w,c
 13832  015384  2035               	addwfc	(btemp+11)^0,w,c
 13833  015386  6E31               	movwf	(btemp+7)^0,c
 13834  015388  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 13835  01538E  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 13836  015394  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 13837  01539A  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 13838  0153A0  6A3E               	clrf	(btemp+20)^0,c
 13839  0153A2  BE3D               	btfsc	(btemp+19)^0,7,c
 13840  0153A4  683E               	setf	(btemp+20)^0,c
 13841  0153A6  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 13842  0153AC  0060  F0F8  F040   	movff	btemp+20,btemp+22
 13843  0153B2  0060  F0F8  F041   	movff	btemp+20,btemp+23
 13844  0153B8  D36F               	goto	L12
 13845  0153BA                     l11600:
 13846                           
 13847                           ;stkvar	_is_leap @ sp[(-14)+-10]
 13848  0153BA  0EE8               	movlw	-24
 13849  0153BC  006F FF8C  F02A    	movff	plusw1,btemp
 13850  0153C2  0EE9               	movlw	-23
 13851  0153C4  50E3               	movf	plusw1,w,c
 13852  0153C6  102A               	iorwf	btemp^0,w,c
 13853  0153C8  A4D8               	btfss	status,2,c
 13854  0153CA  D012               	goto	l11606
 13855                           
 13856                           ;stkvar	F5 @ sp[(-14)+6]
 13857  0153CC  0EF8               	movlw	-8
 13858  0153CE  6AE3               	clrf	plusw1,c
 13859  0153D0  0EF9               	movlw	-7
 13860  0153D2  6AE3               	clrf	plusw1,c
 13861                           
 13862                           ;stkvar	F5 @ sp[(-14)+6]
 13863  0153D4  0EF8               	movlw	248
 13864  0153D6  24E1               	addwf	fsr1l,w,c
 13865  0153D8  6E34               	movwf	(btemp+10)^0,c
 13866  0153DA  0EFF               	movlw	255
 13867  0153DC  20E2               	addwfc	fsr1h,w,c
 13868  0153DE  6E35               	movwf	(btemp+11)^0,c
 13869                           
 13870                           ;stkvar	_is_leap @ sp[(-14)+-10]
 13871  0153E0  0EE9               	movlw	-23
 13872  0153E2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13873  0153E8  0EE8               	movlw	-24
 13874  0153EA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13875  0153F0                     l11606:
 13876  0153F0  0E90               	movlw	144
 13877  0153F2  6EE6               	movwf	postinc1,c
 13878  0153F4  0E01               	movlw	1
 13879  0153F6  6EE6               	movwf	postinc1,c
 13880  0153F8  0E00               	movlw	0
 13881  0153FA  6EE6               	movwf	postinc1,c
 13882  0153FC  0E00               	movlw	0
 13883  0153FE  6EE6               	movwf	postinc1,c
 13884  015400  0E00               	movlw	0
 13885  015402  6EE6               	movwf	postinc1,c
 13886  015404  0E00               	movlw	0
 13887  015406  6EE6               	movwf	postinc1,c
 13888  015408  0E00               	movlw	0
 13889  01540A  6EE6               	movwf	postinc1,c
 13890  01540C  0E00               	movlw	0
 13891  01540E  6EE6               	movwf	postinc1,c
 13892                           
 13893                           ;stkvar	_year @ sp[(-22)+-8]
 13894  015410  0EE2               	movlw	-30
 13895  015412  50E3               	movf	plusw1,w,c
 13896  015414  0F9C               	addlw	156
 13897  015416  6E3A               	movwf	(btemp+16)^0,c
 13898  015418  0EE3               	movlw	-29
 13899  01541A  006F FF8C  F03B    	movff	plusw1,btemp+17
 13900  015420  0EFF               	movlw	255
 13901  015422  223B               	addwfc	(btemp+17)^0,f,c
 13902  015424  0EE4               	movlw	-28
 13903  015426  006F FF8C  F03C    	movff	plusw1,btemp+18
 13904  01542C  0EFF               	movlw	255
 13905  01542E  223C               	addwfc	(btemp+18)^0,f,c
 13906  015430  0EE5               	movlw	-27
 13907  015432  006F FF8C  F03D    	movff	plusw1,btemp+19
 13908  015438  0EFF               	movlw	255
 13909  01543A  223D               	addwfc	(btemp+19)^0,f,c
 13910  01543C  0EE6               	movlw	-26
 13911  01543E  006F FF8C  F03E    	movff	plusw1,btemp+20
 13912  015444  0EFF               	movlw	255
 13913  015446  223E               	addwfc	(btemp+20)^0,f,c
 13914  015448  0EE7               	movlw	-25
 13915  01544A  006F FF8C  F03F    	movff	plusw1,btemp+21
 13916  015450  0EFF               	movlw	255
 13917  015452  223F               	addwfc	(btemp+21)^0,f,c
 13918  015454  0EE8               	movlw	-24
 13919  015456  006F FF8C  F040    	movff	plusw1,btemp+22
 13920  01545C  0EFF               	movlw	255
 13921  01545E  2240               	addwfc	(btemp+22)^0,f,c
 13922  015460  0EE9               	movlw	-23
 13923  015462  006F FF8C  F041    	movff	plusw1,btemp+23
 13924  015468  0EFF               	movlw	255
 13925  01546A  2241               	addwfc	(btemp+23)^0,f,c
 13926  01546C  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13927  015472  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13928  015478  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13929  01547E  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13930  015484  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13931  01548A  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13932  015490  0060  F103  FFE6   	movff	btemp+22,postinc1
 13933  015496  0060  F107  FFE6   	movff	btemp+23,postinc1
 13934  01549C  EC34  F0DC         	call	___aodiv	;wreg free
 13935  0154A0  52E5               	movf	postdec1,f,c
 13936  0154A2  006F FF9C  F041    	movff	indf1,btemp+23
 13937  0154A8  52E5               	movf	postdec1,f,c
 13938  0154AA  006F FF9C  F040    	movff	indf1,btemp+22
 13939  0154B0  52E5               	movf	postdec1,f,c
 13940  0154B2  006F FF9C  F03F    	movff	indf1,btemp+21
 13941  0154B8  52E5               	movf	postdec1,f,c
 13942  0154BA  006F FF9C  F03E    	movff	indf1,btemp+20
 13943  0154C0  52E5               	movf	postdec1,f,c
 13944  0154C2  006F FF9C  F03D    	movff	indf1,btemp+19
 13945  0154C8  52E5               	movf	postdec1,f,c
 13946  0154CA  006F FF9C  F03C    	movff	indf1,btemp+18
 13947  0154D0  52E5               	movf	postdec1,f,c
 13948  0154D2  006F FF9C  F03B    	movff	indf1,btemp+17
 13949  0154D8  52E5               	movf	postdec1,f,c
 13950  0154DA  006F FF9C  F03A    	movff	indf1,btemp+16
 13951  0154E0  0EF8               	movlw	248
 13952  0154E2  26E1               	addwf	fsr1l,f,c
 13953  0154E4  0EFF               	movlw	255
 13954  0154E6  22E2               	addwfc	fsr1h,f,c
 13955  0154E8  0060  F0E8  F034   	movff	btemp+16,btemp+10
 13956  0154EE  0060  F0EC  F035   	movff	btemp+17,btemp+11
 13957                           
 13958                           ;stkvar	_cycles @ sp[(-14)+12]
 13959  0154F4  0EFE               	movlw	-2
 13960  0154F6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13961  0154FC  0EFF               	movlw	-1
 13962  0154FE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13963  015504  0E90               	movlw	144
 13964  015506  6EE6               	movwf	postinc1,c
 13965  015508  0E01               	movlw	1
 13966  01550A  6EE6               	movwf	postinc1,c
 13967  01550C  0E00               	movlw	0
 13968  01550E  6EE6               	movwf	postinc1,c
 13969  015510  0E00               	movlw	0
 13970  015512  6EE6               	movwf	postinc1,c
 13971  015514  0E00               	movlw	0
 13972  015516  6EE6               	movwf	postinc1,c
 13973  015518  0E00               	movlw	0
 13974  01551A  6EE6               	movwf	postinc1,c
 13975  01551C  0E00               	movlw	0
 13976  01551E  6EE6               	movwf	postinc1,c
 13977  015520  0E00               	movlw	0
 13978  015522  6EE6               	movwf	postinc1,c
 13979                           
 13980                           ;stkvar	_year @ sp[(-22)+-8]
 13981  015524  0EE2               	movlw	-30
 13982  015526  50E3               	movf	plusw1,w,c
 13983  015528  0F9C               	addlw	156
 13984  01552A  6E3A               	movwf	(btemp+16)^0,c
 13985  01552C  0EE3               	movlw	-29
 13986  01552E  006F FF8C  F03B    	movff	plusw1,btemp+17
 13987  015534  0EFF               	movlw	255
 13988  015536  223B               	addwfc	(btemp+17)^0,f,c
 13989  015538  0EE4               	movlw	-28
 13990  01553A  006F FF8C  F03C    	movff	plusw1,btemp+18
 13991  015540  0EFF               	movlw	255
 13992  015542  223C               	addwfc	(btemp+18)^0,f,c
 13993  015544  0EE5               	movlw	-27
 13994  015546  006F FF8C  F03D    	movff	plusw1,btemp+19
 13995  01554C  0EFF               	movlw	255
 13996  01554E  223D               	addwfc	(btemp+19)^0,f,c
 13997  015550  0EE6               	movlw	-26
 13998  015552  006F FF8C  F03E    	movff	plusw1,btemp+20
 13999  015558  0EFF               	movlw	255
 14000  01555A  223E               	addwfc	(btemp+20)^0,f,c
 14001  01555C  0EE7               	movlw	-25
 14002  01555E  006F FF8C  F03F    	movff	plusw1,btemp+21
 14003  015564  0EFF               	movlw	255
 14004  015566  223F               	addwfc	(btemp+21)^0,f,c
 14005  015568  0EE8               	movlw	-24
 14006  01556A  006F FF8C  F040    	movff	plusw1,btemp+22
 14007  015570  0EFF               	movlw	255
 14008  015572  2240               	addwfc	(btemp+22)^0,f,c
 14009  015574  0EE9               	movlw	-23
 14010  015576  006F FF8C  F041    	movff	plusw1,btemp+23
 14011  01557C  0EFF               	movlw	255
 14012  01557E  2241               	addwfc	(btemp+23)^0,f,c
 14013  015580  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14014  015586  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14015  01558C  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14016  015592  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14017  015598  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14018  01559E  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14019  0155A4  0060  F103  FFE6   	movff	btemp+22,postinc1
 14020  0155AA  0060  F107  FFE6   	movff	btemp+23,postinc1
 14021  0155B0  EC04  F0E1         	call	___aomod	;wreg free
 14022  0155B4  52E5               	movf	postdec1,f,c
 14023  0155B6  006F FF9C  F041    	movff	indf1,btemp+23
 14024  0155BC  52E5               	movf	postdec1,f,c
 14025  0155BE  006F FF9C  F040    	movff	indf1,btemp+22
 14026  0155C4  52E5               	movf	postdec1,f,c
 14027  0155C6  006F FF9C  F03F    	movff	indf1,btemp+21
 14028  0155CC  52E5               	movf	postdec1,f,c
 14029  0155CE  006F FF9C  F03E    	movff	indf1,btemp+20
 14030  0155D4  52E5               	movf	postdec1,f,c
 14031  0155D6  006F FF9C  F03D    	movff	indf1,btemp+19
 14032  0155DC  52E5               	movf	postdec1,f,c
 14033  0155DE  006F FF9C  F03C    	movff	indf1,btemp+18
 14034  0155E4  52E5               	movf	postdec1,f,c
 14035  0155E6  006F FF9C  F03B    	movff	indf1,btemp+17
 14036  0155EC  52E5               	movf	postdec1,f,c
 14037  0155EE  006F FF9C  F03A    	movff	indf1,btemp+16
 14038  0155F4  0EF8               	movlw	248
 14039  0155F6  26E1               	addwf	fsr1l,f,c
 14040  0155F8  0EFF               	movlw	255
 14041  0155FA  22E2               	addwfc	fsr1h,f,c
 14042  0155FC  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14043  015602  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14044                           
 14045                           ;stkvar	_rem @ sp[(-14)+4]
 14046  015608  0EF6               	movlw	-10
 14047  01560A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14048  015610  0EF7               	movlw	-9
 14049  015612  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14050                           
 14051                           ;stkvar	_rem @ sp[(-14)+4]
 14052  015618  0EF7               	movlw	-9
 14053  01561A  AEE3               	btfss	plusw1,7,c
 14054  01561C  D015               	goto	l11616
 14055                           
 14056                           ;stkvar	_cycles @ sp[(-14)+12]
 14057  01561E  50E1               	movf	fsr1l,w,c
 14058  015620  0FFE               	addlw	-2
 14059  015622  6ED9               	movwf	fsr2l,c
 14060  015624  50E2               	movf	fsr1h,w,c
 14061  015626  6EDA               	movwf	fsr2h,c
 14062  015628  0EFF               	movlw	255
 14063  01562A  22DA               	addwfc	fsr2h,f,c
 14064  01562C  06DE               	decf	postinc2,f,c
 14065  01562E  0E00               	movlw	0
 14066  015630  5ADD               	subwfb	postdec2,f,c
 14067                           
 14068                           ;stkvar	_rem @ sp[(-14)+4]
 14069  015632  50E1               	movf	fsr1l,w,c
 14070  015634  0FF6               	addlw	-10
 14071  015636  6ED9               	movwf	fsr2l,c
 14072  015638  50E2               	movf	fsr1h,w,c
 14073  01563A  6EDA               	movwf	fsr2h,c
 14074  01563C  0EFF               	movlw	255
 14075  01563E  22DA               	addwfc	fsr2h,f,c
 14076  015640  0E90               	movlw	144
 14077  015642  26DE               	addwf	postinc2,f,c
 14078  015644  0E01               	movlw	1
 14079  015646  22DD               	addwfc	postdec2,f,c
 14080  015648                     l11616:
 14081                           
 14082                           ;stkvar	_rem @ sp[(-14)+4]
 14083  015648  0EF6               	movlw	-10
 14084  01564A  006F FF8C  F02A    	movff	plusw1,btemp
 14085  015650  0EF7               	movlw	-9
 14086  015652  50E3               	movf	plusw1,w,c
 14087  015654  102A               	iorwf	btemp^0,w,c
 14088  015656  A4D8               	btfss	status,2,c
 14089  015658  D015               	goto	l11624
 14090                           
 14091                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14092  01565A  0EE8               	movlw	-24
 14093  01565C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14094  015662  0EE9               	movlw	-23
 14095  015664  006F FF8F FFDA     	movff	plusw1,fsr2h
 14096  01566A  0E01               	movlw	1
 14097  01566C  6EDE               	movwf	postinc2,c
 14098  01566E  0E00               	movlw	0
 14099  015670  6EDD               	movwf	postdec2,c
 14100                           
 14101                           ;stkvar	_centuries @ sp[(-14)+8]
 14102  015672  0EFA               	movlw	-6
 14103  015674  6AE3               	clrf	plusw1,c
 14104  015676  0EFB               	movlw	-5
 14105  015678  6AE3               	clrf	plusw1,c
 14106  01567A                     l11622:
 14107                           
 14108                           ;stkvar	_leaps @ sp[(-14)+10]
 14109  01567A  0EFC               	movlw	-4
 14110  01567C  6AE3               	clrf	plusw1,c
 14111  01567E  0EFD               	movlw	-3
 14112  015680  6AE3               	clrf	plusw1,c
 14113  015682  D0D6               	goto	l11656
 14114  015684                     l11624:
 14115                           
 14116                           ;stkvar	_rem @ sp[(-14)+4]
 14117  015684  0EF7               	movlw	-9
 14118  015686  BEE3               	btfsc	plusw1,7,c
 14119  015688  D04A               	goto	l11636
 14120  01568A  0EF7               	movlw	-9
 14121  01568C  50E3               	movf	plusw1,w,c
 14122  01568E  E108               	bnz	u10740
 14123  015690  0EF6               	movlw	-10
 14124  015692  006F FF8C  F02A    	movff	plusw1,btemp
 14125  015698  0EC8               	movlw	200
 14126  01569A  5E2A               	subwf	btemp^0,f,c
 14127  01569C  A0D8               	btfss	status,0,c
 14128  01569E  D03F               	goto	l11636
 14129  0156A0                     u10740:
 14130                           
 14131                           ;stkvar	_rem @ sp[(-14)+4]
 14132  0156A0  0EF7               	movlw	-9
 14133  0156A2  BEE3               	btfsc	plusw1,7,c
 14134  0156A4  D025               	goto	l11632
 14135  0156A6  0EF6               	movlw	-10
 14136  0156A8  006F FF8C  F02A    	movff	plusw1,btemp
 14137  0156AE  0E2C               	movlw	44
 14138  0156B0  5E2A               	subwf	btemp^0,f,c
 14139  0156B2  0EF7               	movlw	-9
 14140  0156B4  006F FF8C  F02A    	movff	plusw1,btemp
 14141  0156BA  0E01               	movlw	1
 14142  0156BC  5A2A               	subwfb	btemp^0,f,c
 14143  0156BE  A0D8               	btfss	status,0,c
 14144  0156C0  D017               	goto	l11632
 14145  0156C2  0E03               	movlw	3
 14146  0156C4  6E34               	movwf	(btemp+10)^0,c
 14147  0156C6  0E00               	movlw	0
 14148  0156C8  6E35               	movwf	(btemp+11)^0,c
 14149                           
 14150                           ;stkvar	_centuries @ sp[(-14)+8]
 14151  0156CA  0EFA               	movlw	-6
 14152  0156CC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14153  0156D2  0EFB               	movlw	-5
 14154  0156D4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14155                           
 14156                           ;stkvar	_rem @ sp[(-14)+4]
 14157  0156DA  50E1               	movf	fsr1l,w,c
 14158  0156DC  0FF6               	addlw	-10
 14159  0156DE  6ED9               	movwf	fsr2l,c
 14160  0156E0  50E2               	movf	fsr1h,w,c
 14161  0156E2  6EDA               	movwf	fsr2h,c
 14162  0156E4  0EFF               	movlw	255
 14163  0156E6  22DA               	addwfc	fsr2h,f,c
 14164  0156E8  0ED4               	movlw	212
 14165  0156EA  26DE               	addwf	postinc2,f,c
 14166  0156EC  0EFE               	movlw	254
 14167  0156EE  D015               	goto	L13
 14168  0156F0                     l11632:
 14169  0156F0  0E02               	movlw	2
 14170  0156F2  6E34               	movwf	(btemp+10)^0,c
 14171  0156F4  0E00               	movlw	0
 14172  0156F6  6E35               	movwf	(btemp+11)^0,c
 14173                           
 14174                           ;stkvar	_centuries @ sp[(-14)+8]
 14175  0156F8  0EFA               	movlw	-6
 14176  0156FA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14177  015700  0EFB               	movlw	-5
 14178  015702  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14179                           
 14180                           ;stkvar	_rem @ sp[(-14)+4]
 14181  015708  50E1               	movf	fsr1l,w,c
 14182  01570A  0FF6               	addlw	-10
 14183  01570C  6ED9               	movwf	fsr2l,c
 14184  01570E  50E2               	movf	fsr1h,w,c
 14185  015710  6EDA               	movwf	fsr2h,c
 14186  015712  0EFF               	movlw	255
 14187  015714  22DA               	addwfc	fsr2h,f,c
 14188  015716  0E38               	movlw	56
 14189  015718  D024               	goto	L14
 14190  01571A                     L13:
 14191  01571A  22DD               	addwfc	postdec2,f,c
 14192  01571C  D029               	goto	l11644
 14193  01571E                     l11636:
 14194                           
 14195                           ;stkvar	_rem @ sp[(-14)+4]
 14196  01571E  0EF7               	movlw	-9
 14197  015720  BEE3               	btfsc	plusw1,7,c
 14198  015722  D022               	goto	l11642
 14199  015724  0EF7               	movlw	-9
 14200  015726  50E3               	movf	plusw1,w,c
 14201  015728  E108               	bnz	u10760
 14202  01572A  0EF6               	movlw	-10
 14203  01572C  006F FF8C  F02A    	movff	plusw1,btemp
 14204  015732  0E64               	movlw	100
 14205  015734  5E2A               	subwf	btemp^0,f,c
 14206  015736  A0D8               	btfss	status,0,c
 14207  015738  D017               	goto	l11642
 14208  01573A                     u10760:
 14209  01573A  0E01               	movlw	1
 14210  01573C  6E34               	movwf	(btemp+10)^0,c
 14211  01573E  0E00               	movlw	0
 14212  015740  6E35               	movwf	(btemp+11)^0,c
 14213                           
 14214                           ;stkvar	_centuries @ sp[(-14)+8]
 14215  015742  0EFA               	movlw	-6
 14216  015744  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14217  01574A  0EFB               	movlw	-5
 14218  01574C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14219                           
 14220                           ;stkvar	_rem @ sp[(-14)+4]
 14221  015752  50E1               	movf	fsr1l,w,c
 14222  015754  0FF6               	addlw	-10
 14223  015756  6ED9               	movwf	fsr2l,c
 14224  015758  50E2               	movf	fsr1h,w,c
 14225  01575A  6EDA               	movwf	fsr2h,c
 14226  01575C  0EFF               	movlw	255
 14227  01575E  22DA               	addwfc	fsr2h,f,c
 14228  015760  0E9C               	movlw	156
 14229  015762                     L14:
 14230  015762  26DE               	addwf	postinc2,f,c
 14231  015764  0EFF               	movlw	255
 14232  015766  D7D9               	goto	L13
 14233  015768                     l11642:
 14234                           
 14235                           ;stkvar	_centuries @ sp[(-14)+8]
 14236  015768  0EFA               	movlw	-6
 14237  01576A  6AE3               	clrf	plusw1,c
 14238  01576C  0EFB               	movlw	-5
 14239  01576E  6AE3               	clrf	plusw1,c
 14240  015770                     l11644:
 14241                           
 14242                           ;stkvar	_rem @ sp[(-14)+4]
 14243  015770  0EF6               	movlw	-10
 14244  015772  006F FF8C  F02A    	movff	plusw1,btemp
 14245  015778  0EF7               	movlw	-9
 14246  01577A  50E3               	movf	plusw1,w,c
 14247  01577C  102A               	iorwf	btemp^0,w,c
 14248  01577E  A4D8               	btfss	status,2,c
 14249  015780  D00D               	goto	l11650
 14250                           
 14251                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14252  015782  0EE8               	movlw	-24
 14253  015784  006F FF8F FFD9     	movff	plusw1,fsr2l
 14254  01578A  0EE9               	movlw	-23
 14255  01578C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14256  015792  0E00               	movlw	0
 14257  015794  6EDE               	movwf	postinc2,c
 14258  015796  0E00               	movlw	0
 14259  015798  6EDD               	movwf	postdec2,c
 14260  01579A  D76F               	goto	l11622
 14261  01579C                     l11650:
 14262                           
 14263                           ;stkvar	_rem @ sp[(-14)+4]
 14264  01579C  0EF6               	movlw	-10
 14265  01579E  006F FF8C  F034    	movff	plusw1,btemp+10
 14266  0157A4  0EF7               	movlw	-9
 14267  0157A6  006F FF8C  F035    	movff	plusw1,btemp+11
 14268  0157AC  90D8               	bcf	status,0,c
 14269  0157AE  3235               	rrcf	(btemp+11)^0,f,c
 14270  0157B0  3234               	rrcf	(btemp+10)^0,f,c
 14271  0157B2  90D8               	bcf	status,0,c
 14272  0157B4  3235               	rrcf	(btemp+11)^0,f,c
 14273  0157B6  3234               	rrcf	(btemp+10)^0,f,c
 14274                           
 14275                           ;stkvar	_leaps @ sp[(-14)+10]
 14276  0157B8  0EFC               	movlw	-4
 14277  0157BA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14278  0157C0  0EFD               	movlw	-3
 14279  0157C2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14280  0157C8  0E03               	movlw	3
 14281  0157CA  6E34               	movwf	(btemp+10)^0,c
 14282  0157CC  0E00               	movlw	0
 14283  0157CE  6E35               	movwf	(btemp+11)^0,c
 14284                           
 14285                           ;stkvar	_rem @ sp[(-14)+4]
 14286  0157D0  0EF6               	movlw	-10
 14287  0157D2  006F FF8C  F02A    	movff	plusw1,btemp
 14288  0157D8  5034               	movf	(btemp+10)^0,w,c
 14289  0157DA  162A               	andwf	btemp^0,f,c
 14290  0157DC  0EF6               	movlw	-10
 14291  0157DE  0060  F0AB  FFE3   	movff	btemp,plusw1
 14292  0157E4  0EF7               	movlw	-9
 14293  0157E6  006F FF8C  F02A    	movff	plusw1,btemp
 14294  0157EC  5035               	movf	(btemp+11)^0,w,c
 14295  0157EE  162A               	andwf	btemp^0,f,c
 14296  0157F0  0EF7               	movlw	-9
 14297  0157F2  0060  F0AB  FFE3   	movff	btemp,plusw1
 14298                           
 14299                           ;stkvar	_rem @ sp[(-14)+4]
 14300  0157F8  0EF6               	movlw	-10
 14301  0157FA  006F FF8C  F02A    	movff	plusw1,btemp
 14302  015800  0EF7               	movlw	-9
 14303  015802  50E3               	movf	plusw1,w,c
 14304  015804  102A               	iorwf	btemp^0,w,c
 14305  015806  A4D8               	btfss	status,2,c
 14306  015808  D002               	goto	u10780
 14307  01580A  0E01               	movlw	1
 14308  01580C  D001               	goto	u10790
 14309  01580E                     u10780:
 14310  01580E  0E00               	movlw	0
 14311  015810                     u10790:
 14312  015810  6E34               	movwf	(btemp+10)^0,c
 14313  015812  6A35               	clrf	(btemp+11)^0,c
 14314                           
 14315                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14316  015814  0EE8               	movlw	-24
 14317  015816  006F FF8F FFD9     	movff	plusw1,fsr2l
 14318  01581C  0EE9               	movlw	-23
 14319  01581E  006F FF8F FFDA     	movff	plusw1,fsr2h
 14320  015824  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 14321  01582A  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 14322  015830                     l11656:
 14323                           
 14324                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14325  015830  0EE8               	movlw	-24
 14326  015832  006F FF8F FFD9     	movff	plusw1,fsr2l
 14327  015838  0EE9               	movlw	-23
 14328  01583A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14329  015840  006F FF78  F034    	movff	postinc2,btemp+10
 14330  015846  006F FF74  F035    	movff	postdec2,btemp+11
 14331                           
 14332                           ;stkvar	_centuries @ sp[(-14)+8]
 14333  01584C  0EFA               	movlw	-6
 14334  01584E  006F FF8C  F032    	movff	plusw1,btemp+8
 14335  015854  0EFB               	movlw	-5
 14336  015856  006F FF8C  F033    	movff	plusw1,btemp+9
 14337  01585C  0E18               	movlw	24
 14338  01585E  0232               	mulwf	(btemp+8)^0,c
 14339  015860  006F FFCC  F030    	movff	prodl,btemp+6
 14340  015866  006F FFD0  F031    	movff	prodh,btemp+7
 14341  01586C  0233               	mulwf	(btemp+9)^0,c
 14342  01586E  50F3               	movf	prodl,w,c
 14343  015870  2631               	addwf	(btemp+7)^0,f,c
 14344                           
 14345                           ;stkvar	_cycles @ sp[(-14)+12]
 14346  015872  0EFE               	movlw	-2
 14347  015874  006F FF8C  F032    	movff	plusw1,btemp+8
 14348  01587A  0EFF               	movlw	-1
 14349  01587C  006F FF8C  F033    	movff	plusw1,btemp+9
 14350  015882  0E61               	movlw	97
 14351  015884  0232               	mulwf	(btemp+8)^0,c
 14352  015886  006F FFCC  F02E    	movff	prodl,btemp+4
 14353  01588C  006F FFD0  F02F    	movff	prodh,btemp+5
 14354  015892  0233               	mulwf	(btemp+9)^0,c
 14355  015894  50F3               	movf	prodl,w,c
 14356  015896  262F               	addwf	(btemp+5)^0,f,c
 14357  015898  5030               	movf	(btemp+6)^0,w,c
 14358  01589A  262E               	addwf	(btemp+4)^0,f,c
 14359  01589C  5031               	movf	(btemp+7)^0,w,c
 14360  01589E  222F               	addwfc	(btemp+5)^0,f,c
 14361  0158A0  5034               	movf	(btemp+10)^0,w,c
 14362  0158A2  5E2E               	subwf	(btemp+4)^0,f,c
 14363  0158A4  5035               	movf	(btemp+11)^0,w,c
 14364  0158A6  5A2F               	subwfb	(btemp+5)^0,f,c
 14365                           
 14366                           ;stkvar	_leaps @ sp[(-14)+10]
 14367  0158A8  50E1               	movf	fsr1l,w,c
 14368  0158AA  0FFC               	addlw	-4
 14369  0158AC  6ED9               	movwf	fsr2l,c
 14370  0158AE  50E2               	movf	fsr1h,w,c
 14371  0158B0  6EDA               	movwf	fsr2h,c
 14372  0158B2  0EFF               	movlw	255
 14373  0158B4  22DA               	addwfc	fsr2h,f,c
 14374  0158B6  502E               	movf	(btemp+4)^0,w,c
 14375  0158B8  26DE               	addwf	postinc2,f,c
 14376  0158BA  502F               	movf	(btemp+5)^0,w,c
 14377  0158BC  22DD               	addwfc	postdec2,f,c
 14378  0158BE  0E80               	movlw	128
 14379  0158C0  6EE6               	movwf	postinc1,c
 14380  0158C2  0E51               	movlw	81
 14381  0158C4  6EE6               	movwf	postinc1,c
 14382  0158C6  0E01               	movlw	1
 14383  0158C8  6EE6               	movwf	postinc1,c
 14384  0158CA  0E00               	movlw	0
 14385  0158CC  6EE6               	movwf	postinc1,c
 14386  0158CE  0E00               	movlw	0
 14387  0158D0  6EE6               	movwf	postinc1,c
 14388  0158D2  0E00               	movlw	0
 14389  0158D4  6EE6               	movwf	postinc1,c
 14390  0158D6  0E00               	movlw	0
 14391  0158D8  6EE6               	movwf	postinc1,c
 14392  0158DA  0E00               	movlw	0
 14393  0158DC  6EE6               	movwf	postinc1,c
 14394                           
 14395                           ;stkvar	_leaps @ sp[(-22)+10]
 14396  0158DE  0EF4               	movlw	-12
 14397  0158E0  006F FF8C  F03A    	movff	plusw1,btemp+16
 14398  0158E6  0EF5               	movlw	-11
 14399  0158E8  006F FF8C  F03B    	movff	plusw1,btemp+17
 14400  0158EE  6A3C               	clrf	(btemp+18)^0,c
 14401  0158F0  BE3B               	btfsc	(btemp+17)^0,7,c
 14402  0158F2  683C               	setf	(btemp+18)^0,c
 14403  0158F4  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 14404  0158FA  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 14405  015900  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 14406  015906  0060  F0F0  F040   	movff	btemp+18,btemp+22
 14407  01590C  0060  F0F0  F041   	movff	btemp+18,btemp+23
 14408  015912  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14409  015918  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14410  01591E  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14411  015924  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14412  01592A  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14413  015930  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14414  015936  0060  F103  FFE6   	movff	btemp+22,postinc1
 14415  01593C  0060  F107  FFE6   	movff	btemp+23,postinc1
 14416  015942  ECEF  F0F2         	call	___omul	;wreg free
 14417  015946  52E5               	movf	postdec1,f,c
 14418  015948  006F FF9C  F041    	movff	indf1,btemp+23
 14419  01594E  52E5               	movf	postdec1,f,c
 14420  015950  006F FF9C  F040    	movff	indf1,btemp+22
 14421  015956  52E5               	movf	postdec1,f,c
 14422  015958  006F FF9C  F03F    	movff	indf1,btemp+21
 14423  01595E  52E5               	movf	postdec1,f,c
 14424  015960  006F FF9C  F03E    	movff	indf1,btemp+20
 14425  015966  52E5               	movf	postdec1,f,c
 14426  015968  006F FF9C  F03D    	movff	indf1,btemp+19
 14427  01596E  52E5               	movf	postdec1,f,c
 14428  015970  006F FF9C  F03C    	movff	indf1,btemp+18
 14429  015976  52E5               	movf	postdec1,f,c
 14430  015978  006F FF9C  F03B    	movff	indf1,btemp+17
 14431  01597E  52E5               	movf	postdec1,f,c
 14432  015980  006F FF9C  F03A    	movff	indf1,btemp+16
 14433  015986  0EF8               	movlw	248
 14434  015988  26E1               	addwf	fsr1l,f,c
 14435  01598A  0EFF               	movlw	255
 14436  01598C  22E2               	addwfc	fsr1h,f,c
 14437  01598E  0E80               	movlw	128
 14438  015990  6EE6               	movwf	postinc1,c
 14439  015992  0E33               	movlw	51
 14440  015994  6EE6               	movwf	postinc1,c
 14441  015996  0EE1               	movlw	225
 14442  015998  6EE6               	movwf	postinc1,c
 14443  01599A  0E01               	movlw	1
 14444  01599C  6EE6               	movwf	postinc1,c
 14445  01599E  0E00               	movlw	0
 14446  0159A0  6EE6               	movwf	postinc1,c
 14447  0159A2  0E00               	movlw	0
 14448  0159A4  6EE6               	movwf	postinc1,c
 14449  0159A6  0E00               	movlw	0
 14450  0159A8  6EE6               	movwf	postinc1,c
 14451  0159AA  0E00               	movlw	0
 14452  0159AC  6EE6               	movwf	postinc1,c
 14453                           
 14454                           ;stkvar	_year @ sp[(-22)+-8]
 14455  0159AE  50E1               	movf	fsr1l,w,c
 14456  0159B0  0FE2               	addlw	-30
 14457  0159B2  6ED9               	movwf	fsr2l,c
 14458  0159B4  50E2               	movf	fsr1h,w,c
 14459  0159B6  6EDA               	movwf	fsr2h,c
 14460  0159B8  0EFF               	movlw	255
 14461  0159BA  22DA               	addwfc	fsr2h,f,c
 14462  0159BC  006F FF7B FFE6     	movff	postinc2,postinc1
 14463  0159C2  006F FF7B FFE6     	movff	postinc2,postinc1
 14464  0159C8  006F FF7B FFE6     	movff	postinc2,postinc1
 14465  0159CE  006F FF7B FFE6     	movff	postinc2,postinc1
 14466  0159D4  006F FF7B FFE6     	movff	postinc2,postinc1
 14467  0159DA  006F FF7B FFE6     	movff	postinc2,postinc1
 14468  0159E0  006F FF7B FFE6     	movff	postinc2,postinc1
 14469  0159E6  006F FF7B FFE6     	movff	postinc2,postinc1
 14470  0159EC  ECEF  F0F2         	call	___omul	;wreg free
 14471  0159F0  52E5               	movf	postdec1,f,c
 14472  0159F2  006F FF9C  F049    	movff	indf1,btemp+31
 14473  0159F8  52E5               	movf	postdec1,f,c
 14474  0159FA  006F FF9C  F048    	movff	indf1,btemp+30
 14475  015A00  52E5               	movf	postdec1,f,c
 14476  015A02  006F FF9C  F047    	movff	indf1,btemp+29
 14477  015A08  52E5               	movf	postdec1,f,c
 14478  015A0A  006F FF9C  F046    	movff	indf1,btemp+28
 14479  015A10  52E5               	movf	postdec1,f,c
 14480  015A12  006F FF9C  F045    	movff	indf1,btemp+27
 14481  015A18  52E5               	movf	postdec1,f,c
 14482  015A1A  006F FF9C  F044    	movff	indf1,btemp+26
 14483  015A20  52E5               	movf	postdec1,f,c
 14484  015A22  006F FF9C  F043    	movff	indf1,btemp+25
 14485  015A28  52E5               	movf	postdec1,f,c
 14486  015A2A  006F FF9C  F042    	movff	indf1,btemp+24
 14487  015A30  0EF8               	movlw	248
 14488  015A32  26E1               	addwf	fsr1l,f,c
 14489  015A34  0EFF               	movlw	255
 14490  015A36  22E2               	addwfc	fsr1h,f,c
 14491  015A38  503A               	movf	(btemp+16)^0,w,c
 14492  015A3A  2442               	addwf	(btemp+24)^0,w,c
 14493  015A3C  6E32               	movwf	(btemp+8)^0,c
 14494  015A3E  503B               	movf	(btemp+17)^0,w,c
 14495  015A40  2043               	addwfc	(btemp+25)^0,w,c
 14496  015A42  6E33               	movwf	(btemp+9)^0,c
 14497  015A44  503C               	movf	(btemp+18)^0,w,c
 14498  015A46  2044               	addwfc	(btemp+26)^0,w,c
 14499  015A48  6E34               	movwf	(btemp+10)^0,c
 14500  015A4A  503D               	movf	(btemp+19)^0,w,c
 14501  015A4C  2045               	addwfc	(btemp+27)^0,w,c
 14502  015A4E  6E35               	movwf	(btemp+11)^0,c
 14503  015A50  503E               	movf	(btemp+20)^0,w,c
 14504  015A52  2046               	addwfc	(btemp+28)^0,w,c
 14505  015A54  6E36               	movwf	(btemp+12)^0,c
 14506  015A56  503F               	movf	(btemp+21)^0,w,c
 14507  015A58  2047               	addwfc	(btemp+29)^0,w,c
 14508  015A5A  6E37               	movwf	(btemp+13)^0,c
 14509  015A5C  5040               	movf	(btemp+22)^0,w,c
 14510  015A5E  2048               	addwfc	(btemp+30)^0,w,c
 14511  015A60  6E38               	movwf	(btemp+14)^0,c
 14512  015A62  5041               	movf	(btemp+23)^0,w,c
 14513  015A64  2049               	addwfc	(btemp+31)^0,w,c
 14514  015A66  6E39               	movwf	(btemp+15)^0,c
 14515  015A68  0E00               	movlw	0
 14516  015A6A  2432               	addwf	(btemp+8)^0,w,c
 14517  015A6C  6E3A               	movwf	(btemp+16)^0,c
 14518  015A6E  0E77               	movlw	119
 14519  015A70  2033               	addwfc	(btemp+9)^0,w,c
 14520  015A72  6E3B               	movwf	(btemp+17)^0,c
 14521  015A74  0E76               	movlw	118
 14522  015A76  2034               	addwfc	(btemp+10)^0,w,c
 14523  015A78  6E3C               	movwf	(btemp+18)^0,c
 14524  015A7A  0E7C               	movlw	124
 14525  015A7C  2035               	addwfc	(btemp+11)^0,w,c
 14526  015A7E  6E3D               	movwf	(btemp+19)^0,c
 14527  015A80  0EFF               	movlw	255
 14528  015A82  2036               	addwfc	(btemp+12)^0,w,c
 14529  015A84  6E3E               	movwf	(btemp+20)^0,c
 14530  015A86  0EFF               	movlw	255
 14531  015A88  2037               	addwfc	(btemp+13)^0,w,c
 14532  015A8A  6E3F               	movwf	(btemp+21)^0,c
 14533  015A8C  0EFF               	movlw	255
 14534  015A8E  2038               	addwfc	(btemp+14)^0,w,c
 14535  015A90  6E40               	movwf	(btemp+22)^0,c
 14536  015A92  0EFF               	movlw	255
 14537  015A94  2039               	addwfc	(btemp+15)^0,w,c
 14538  015A96  6E41               	movwf	(btemp+23)^0,c
 14539  015A98                     L12:
 14540                           
 14541                           ;stkvar	?___year_to_secs @ sp[(-14)+-8]
 14542  015A98  0EEA               	movlw	-22
 14543  015A9A  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 14544  015AA0  0EEB               	movlw	-21
 14545  015AA2  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 14546  015AA8  0EEC               	movlw	-20
 14547  015AAA  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 14548  015AB0  0EED               	movlw	-19
 14549  015AB2  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 14550  015AB8  0EEE               	movlw	-18
 14551  015ABA  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 14552  015AC0  0EEF               	movlw	-17
 14553  015AC2  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 14554  015AC8  0EF0               	movlw	-16
 14555  015ACA  0060  F103  FFE3   	movff	btemp+22,plusw1
 14556  015AD0  0EF1               	movlw	-15
 14557  015AD2  0060  F107  FFE3   	movff	btemp+23,plusw1
 14558                           
 14559                           ; ___year_to_secs: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          10, argsize = 10, vargsize = 0
 14560  015AD8  0EF2               	movlw	242
 14561  015ADA  26E1               	addwf	fsr1l,f,c
 14562  015ADC  0EFF               	movlw	255
 14563  015ADE  22E2               	addwfc	fsr1h,f,c
 14564  015AE0  0012               	return		;funcret
 14565  015AE2                     __end_of___year_to_secs:
 14566                           	opt callstack 0
 14567                           
 14568 ;; *************** function ___month_to_secs *****************
 14569 ;; Defined at:
 14570 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__month_to_secs.c"
 14571 ;; Parameters:    Size  Location     Type
 14572 ;;  month           2  [STACK] int 
 14573 ;;  is_leap         2  [STACK] int 
 14574 ;; Auto vars:     Size  Location     Type
 14575 ;;  t               4  [STACK] long 
 14576 ;; Return value:  Size  Location     Type
 14577 ;;                  4  [STACK] long 
 14578 ;; Registers used:
 14579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl
 14580 ;; Tracked objects:
 14581 ;;		On entry : 0/0
 14582 ;;		On exit  : 0/0
 14583 ;;		Unchanged: 0/0
 14584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14589 ;;Total ram usage:        0 bytes
 14590 ;; Hardware stack levels used:    1
 14591 ;; Hardware stack levels required when called:   15
 14592 ;; This function calls:
 14593 ;;		Nothing
 14594 ;; This function is called by:
 14595 ;;		_rule_to_secs
 14596 ;; This function uses a reentrant model
 14597 ;;
 14598                           
 14599                           	psect	text41
 14600  01F704                     __ptext41:
 14601                           	opt callstack 0
 14602  01F704                     ___month_to_secs:
 14603                           	opt callstack 0
 14604                           
 14605                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14606  01F704  52E6               	movf	postinc1,f,c
 14607  01F706  52E6               	movf	postinc1,f,c
 14608  01F708  52E6               	movf	postinc1,f,c
 14609  01F70A  52E6               	movf	postinc1,f,c
 14610                           
 14611                           ;stkvar	_month @ sp[(-4)+-2]
 14612                           
 14613                           ;incstack = 0
 14614  01F70C  0EFA               	movlw	-6
 14615  01F70E  006F FF8C  F034    	movff	plusw1,btemp+10
 14616  01F714  0EFB               	movlw	-5
 14617  01F716  006F FF8C  F035    	movff	plusw1,btemp+11
 14618  01F71C  90D8               	bcf	status,0,c
 14619  01F71E  3634               	rlcf	(btemp+10)^0,f,c
 14620  01F720  3635               	rlcf	(btemp+11)^0,f,c
 14621  01F722  90D8               	bcf	status,0,c
 14622  01F724  3634               	rlcf	(btemp+10)^0,f,c
 14623  01F726  3635               	rlcf	(btemp+11)^0,f,c
 14624  01F728  0EC3               	movlw	low ___month_to_secs@secs_through_month
 14625  01F72A  2434               	addwf	(btemp+10)^0,w,c
 14626  01F72C  6EF6               	movwf	tblptrl,c
 14627  01F72E  0EF8               	movlw	high ___month_to_secs@secs_through_month
 14628  01F730  2035               	addwfc	(btemp+11)^0,w,c
 14629  01F732  6EF7               	movwf	tblptrh,c
 14630  01F734                     	if	1	;There are 3 active tblptr bytes
 14631  01F734  6AF8               	clrf	tblptru,c
 14632  01F736  0E00               	movlw	low (__mediumconst shr (0+16))
 14633  01F738  22F8               	addwfc	tblptru,f,c
 14634  01F73A                     	endif
 14635  01F73A  0009               	tblrd		*+
 14636  01F73C  006F FFD4  F032    	movff	tablat,btemp+8
 14637  01F742  0009               	tblrd		*+
 14638  01F744  006F FFD4  F033    	movff	tablat,btemp+9
 14639  01F74A  0009               	tblrd		*+
 14640  01F74C  006F FFD4  F034    	movff	tablat,btemp+10
 14641  01F752  0009               	tblrd		*+
 14642  01F754  006F FFD4  F035    	movff	tablat,btemp+11
 14643                           
 14644                           ;stkvar	_t @ sp[(-4)+0]
 14645  01F75A  0EFC               	movlw	-4
 14646  01F75C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 14647  01F762  0EFD               	movlw	-3
 14648  01F764  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 14649  01F76A  0EFE               	movlw	-2
 14650  01F76C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14651  01F772  0EFF               	movlw	-1
 14652  01F774  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14653                           
 14654                           ;stkvar	_is_leap @ sp[(-4)+-4]
 14655  01F77A  0EF8               	movlw	-8
 14656  01F77C  006F FF8C  F02A    	movff	plusw1,btemp
 14657  01F782  0EF9               	movlw	-7
 14658  01F784  50E3               	movf	plusw1,w,c
 14659  01F786  102A               	iorwf	btemp^0,w,c
 14660  01F788  B4D8               	btfsc	status,2,c
 14661  01F78A  D01D               	goto	l11670
 14662                           
 14663                           ;stkvar	_month @ sp[(-4)+-2]
 14664  01F78C  0EFB               	movlw	-5
 14665  01F78E  BEE3               	btfsc	plusw1,7,c
 14666  01F790  D01A               	goto	l11670
 14667  01F792  0EFB               	movlw	-5
 14668  01F794  50E3               	movf	plusw1,w,c
 14669  01F796  E108               	bnz	u10810
 14670  01F798  0EFA               	movlw	-6
 14671  01F79A  006F FF8C  F02A    	movff	plusw1,btemp
 14672  01F7A0  0E02               	movlw	2
 14673  01F7A2  5E2A               	subwf	btemp^0,f,c
 14674  01F7A4  A0D8               	btfss	status,0,c
 14675  01F7A6  D00F               	goto	l11670
 14676  01F7A8                     u10810:
 14677                           
 14678                           ;stkvar	_t @ sp[(-4)+0]
 14679  01F7A8  50E1               	movf	fsr1l,w,c
 14680  01F7AA  0FFC               	addlw	-4
 14681  01F7AC  6ED9               	movwf	fsr2l,c
 14682  01F7AE  50E2               	movf	fsr1h,w,c
 14683  01F7B0  6EDA               	movwf	fsr2h,c
 14684  01F7B2  0EFF               	movlw	255
 14685  01F7B4  22DA               	addwfc	fsr2h,f,c
 14686  01F7B6  0E80               	movlw	128
 14687  01F7B8  26DE               	addwf	postinc2,f,c
 14688  01F7BA  0E51               	movlw	81
 14689  01F7BC  22DE               	addwfc	postinc2,f,c
 14690  01F7BE  0E01               	movlw	1
 14691  01F7C0  22DE               	addwfc	postinc2,f,c
 14692  01F7C2  0E00               	movlw	0
 14693  01F7C4  22DE               	addwfc	postinc2,f,c
 14694  01F7C6                     l11670:
 14695                           
 14696                           ;stkvar	_t @ sp[(-4)+0]
 14697  01F7C6  0EFC               	movlw	-4
 14698  01F7C8  006F FF8C  F02A    	movff	plusw1,btemp
 14699  01F7CE  0EFD               	movlw	-3
 14700  01F7D0  006F FF8C  F02B    	movff	plusw1,btemp+1
 14701  01F7D6  0EFE               	movlw	-2
 14702  01F7D8  006F FF8C  F02C    	movff	plusw1,btemp+2
 14703  01F7DE  0EFF               	movlw	-1
 14704  01F7E0  006F FF8C  F02D    	movff	plusw1,btemp+3
 14705                           
 14706                           ; ___month_to_secs: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
 14707  01F7E6  0EF8               	movlw	248
 14708  01F7E8  26E1               	addwf	fsr1l,f,c
 14709  01F7EA  0EFF               	movlw	255
 14710  01F7EC  22E2               	addwfc	fsr1h,f,c
 14711  01F7EE  0012               	return		;funcret
 14712  01F7F0                     __end_of___month_to_secs:
 14713                           	opt callstack 0
 14714                           
 14715 ;; *************** function _do_tzset *****************
 14716 ;; Defined at:
 14717 ;;		line 118 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 14718 ;; Parameters:    Size  Location     Type
 14719 ;;		None
 14720 ;; Auto vars:     Size  Location     Type
 14721 ;;  s               2  [STACK] PTR const unsigned char 
 14722 ;;		 -> __gmt(4), 
 14723 ;; Return value:  Size  Location     Type
 14724 ;;                  1  [STACK] void 
 14725 ;; Registers used:
 14726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 14727 ;; Tracked objects:
 14728 ;;		On entry : 0/39
 14729 ;;		On exit  : 0/0
 14730 ;;		Unchanged: 0/0
 14731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14736 ;;Total ram usage:        0 bytes
 14737 ;; Hardware stack levels used:    1
 14738 ;; Hardware stack levels required when called:   18
 14739 ;; This function calls:
 14740 ;;		_getname
 14741 ;;		_getoff
 14742 ;;		_getrule
 14743 ;; This function is called by:
 14744 ;;		___secs_to_zone
 14745 ;; This function uses a reentrant model
 14746 ;;
 14747                           
 14748                           	psect	text42
 14749  01B368                     __ptext42:
 14750                           	opt callstack 0
 14751  01B368                     _do_tzset:
 14752                           	opt callstack 0
 14753                           
 14754                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14755  01B368  52E6               	movf	postinc1,f,c
 14756  01B36A  52E6               	movf	postinc1,f,c
 14757                           
 14758                           ;stkvar	_s @ sp[(-2)+0]
 14759                           
 14760                           ;incstack = 0
 14761  01B36C  0EFA               	movlw	high ___gmt
 14762  01B36E  6E2A               	movwf	btemp^0,c
 14763  01B370  0EFF               	movlw	-1
 14764  01B372  0060  F0AB  FFE3   	movff	btemp,plusw1
 14765  01B378  0E2F               	movlw	low ___gmt
 14766  01B37A  6E2A               	movwf	btemp^0,c
 14767  01B37C  0EFE               	movlw	-2
 14768  01B37E  0060  F0AB  FFE3   	movff	btemp,plusw1
 14769                           
 14770                           ;stkvar	_s @ sp[(-2)+0]
 14771  01B384  0EFE               	movlw	254
 14772  01B386  24E1               	addwf	fsr1l,w,c
 14773  01B388  6E2A               	movwf	btemp^0,c
 14774  01B38A  0EFF               	movlw	255
 14775  01B38C  20E2               	addwfc	fsr1h,w,c
 14776  01B38E  6E2B               	movwf	(btemp+1)^0,c
 14777  01B390  0060  F0AB  FFE6   	movff	btemp,postinc1
 14778  01B396  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 14779  01B39C  0EF9               	movlw	low _std_name
 14780  01B39E  6EE6               	movwf	postinc1,c
 14781  01B3A0  0E01               	movlw	high _std_name
 14782  01B3A2  6EE6               	movwf	postinc1,c
 14783  01B3A4  ECF5  F0D3         	call	_getname	;wreg free
 14784  01B3A8  0EF9               	movlw	low _std_name
 14785  01B3AA  0100               	movlb	0	; () banked
 14786  01B3AC  6F72               	movwf	___tzname& (0+255),b
 14787  01B3AE  0E01               	movlw	high _std_name
 14788  01B3B0  6F73               	movwf	(___tzname+1)& (0+255),b
 14789                           
 14790                           ; BSR set to: 0
 14791                           ;stkvar	_s @ sp[(-2)+0]
 14792  01B3B2  0EFE               	movlw	254
 14793  01B3B4  24E1               	addwf	fsr1l,w,c
 14794  01B3B6  6E2A               	movwf	btemp^0,c
 14795  01B3B8  0EFF               	movlw	255
 14796  01B3BA  20E2               	addwfc	fsr1h,w,c
 14797  01B3BC  6E2B               	movwf	(btemp+1)^0,c
 14798  01B3BE  0060  F0AB  FFE6   	movff	btemp,postinc1
 14799  01B3C4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 14800  01B3CA  EC24  F0E2         	call	_getoff	;wreg free
 14801  01B3CE  0060  F0A8  F076   	movff	btemp,___timezone
 14802  01B3D4  0060  F0AC  F077   	movff	btemp+1,___timezone+1
 14803  01B3DA  0100               	movlb	0	; () banked
 14804  01B3DC  0E00               	movlw	0
 14805  01B3DE  BF77               	btfsc	(___timezone+1)& (0+255),7,b
 14806  01B3E0  0EFF               	movlw	-1
 14807  01B3E2  6F78               	movwf	(___timezone+2)& (0+255),b
 14808  01B3E4  6F79               	movwf	(___timezone+3)& (0+255),b
 14809                           
 14810                           ; BSR set to: 0
 14811                           ;stkvar	_s @ sp[(-2)+0]
 14812  01B3E6  0EFE               	movlw	254
 14813  01B3E8  24E1               	addwf	fsr1l,w,c
 14814  01B3EA  6E2A               	movwf	btemp^0,c
 14815  01B3EC  0EFF               	movlw	255
 14816  01B3EE  20E2               	addwfc	fsr1h,w,c
 14817  01B3F0  6E2B               	movwf	(btemp+1)^0,c
 14818  01B3F2  0060  F0AB  FFE6   	movff	btemp,postinc1
 14819  01B3F8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 14820  01B3FE  0EF2               	movlw	low _dst_name
 14821  01B400  6EE6               	movwf	postinc1,c
 14822  01B402  0E01               	movlw	high _dst_name
 14823  01B404  6EE6               	movwf	postinc1,c
 14824  01B406  ECF5  F0D3         	call	_getname	;wreg free
 14825  01B40A  0EF2               	movlw	low _dst_name
 14826  01B40C  0100               	movlb	0	; () banked
 14827  01B40E  6F74               	movwf	(___tzname+2)& (0+255),b
 14828  01B410  0E01               	movlw	high _dst_name
 14829  01B412  6F75               	movwf	(___tzname+3)& (0+255),b
 14830                           
 14831                           ; BSR set to: 0
 14832  01B414  0101               	movlb	1	; () banked
 14833  01B416  51F2               	movf	_dst_name& (0+255),w,b
 14834  01B418  B4D8               	btfsc	status,2,c
 14835  01B41A  D070               	goto	l3953
 14836                           
 14837                           ; BSR set to: 1
 14838  01B41C  0E00               	movlw	0
 14839  01B41E  0100               	movlb	0	; () banked
 14840  01B420  6FC3               	movwf	(___daylight+1)& (0+255),b
 14841  01B422  0E01               	movlw	1
 14842  01B424  6FC2               	movwf	___daylight& (0+255),b
 14843                           
 14844                           ; BSR set to: 0
 14845                           ;stkvar	_s @ sp[(-2)+0]
 14846  01B426  50E1               	movf	fsr1l,w,c
 14847  01B428  0FFE               	addlw	-2
 14848  01B42A  6ED9               	movwf	fsr2l,c
 14849  01B42C  50E2               	movf	fsr1h,w,c
 14850  01B42E  6EDA               	movwf	fsr2h,c
 14851  01B430  0EFF               	movlw	255
 14852  01B432  22DA               	addwfc	fsr2h,f,c
 14853  01B434  006F FF7B FFF6     	movff	postinc2,tblptrl
 14854  01B43A  006F FF77 FFF7     	movff	postdec2,tblptrh
 14855  01B440                     	if	0	;tblptru may be non-zero
 14856  01B440                     	endif
 14857  01B440                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14858  01B440  0E00               	movlw	low (__mediumconst shr (0+16))
 14859  01B442  6EF8               	movwf	tblptru,c
 14860  01B444                     	endif
 14861  01B444  0008               	tblrd		*
 14862  01B446  50F5               	movf	tablat,w,c
 14863  01B448  0A2B               	xorlw	43
 14864  01B44A  B4D8               	btfsc	status,2,c
 14865  01B44C  D035               	goto	u15750
 14866                           
 14867                           ; BSR set to: 0
 14868                           ;stkvar	_s @ sp[(-2)+0]
 14869  01B44E  50E1               	movf	fsr1l,w,c
 14870  01B450  0FFE               	addlw	-2
 14871  01B452  6ED9               	movwf	fsr2l,c
 14872  01B454  50E2               	movf	fsr1h,w,c
 14873  01B456  6EDA               	movwf	fsr2h,c
 14874  01B458  0EFF               	movlw	255
 14875  01B45A  22DA               	addwfc	fsr2h,f,c
 14876  01B45C  006F FF7B FFF6     	movff	postinc2,tblptrl
 14877  01B462  006F FF77 FFF7     	movff	postdec2,tblptrh
 14878  01B468                     	if	0	;tblptru may be non-zero
 14879  01B468                     	endif
 14880  01B468                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14881  01B468  0E00               	movlw	low (__mediumconst shr (0+16))
 14882  01B46A  6EF8               	movwf	tblptru,c
 14883  01B46C                     	endif
 14884  01B46C  0008               	tblrd		*
 14885  01B46E  50F5               	movf	tablat,w,c
 14886  01B470  0A2D               	xorlw	45
 14887  01B472  B4D8               	btfsc	status,2,c
 14888  01B474  D021               	goto	u15750
 14889                           
 14890                           ; BSR set to: 0
 14891  01B476  0ED0               	movlw	208
 14892  01B478  6E34               	movwf	(btemp+10)^0,c
 14893  01B47A  0EFF               	movlw	255
 14894  01B47C  6E35               	movwf	(btemp+11)^0,c
 14895                           
 14896                           ;stkvar	_s @ sp[(-2)+0]
 14897  01B47E  50E1               	movf	fsr1l,w,c
 14898  01B480  0FFE               	addlw	-2
 14899  01B482  6ED9               	movwf	fsr2l,c
 14900  01B484  50E2               	movf	fsr1h,w,c
 14901  01B486  6EDA               	movwf	fsr2h,c
 14902  01B488  0EFF               	movlw	255
 14903  01B48A  22DA               	addwfc	fsr2h,f,c
 14904  01B48C  006F FF7B FFF6     	movff	postinc2,tblptrl
 14905  01B492  006F FF77 FFF7     	movff	postdec2,tblptrh
 14906  01B498                     	if	0	;tblptru may be non-zero
 14907  01B498                     	endif
 14908  01B498                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14909  01B498  0E00               	movlw	low (__mediumconst shr (0+16))
 14910  01B49A  6EF8               	movwf	tblptru,c
 14911  01B49C                     	endif
 14912  01B49C  0008               	tblrd		*
 14913  01B49E  50F5               	movf	tablat,w,c
 14914  01B4A0  6E32               	movwf	(btemp+8)^0,c
 14915  01B4A2  6A33               	clrf	(btemp+9)^0,c
 14916  01B4A4  5034               	movf	(btemp+10)^0,w,c
 14917  01B4A6  2632               	addwf	(btemp+8)^0,f,c
 14918  01B4A8  5035               	movf	(btemp+11)^0,w,c
 14919  01B4AA  2233               	addwfc	(btemp+9)^0,f,c
 14920  01B4AC  5033               	movf	(btemp+9)^0,w,c
 14921  01B4AE  E119               	bnz	l16176
 14922  01B4B0  0E0A               	movlw	10
 14923  01B4B2  5C32               	subwf	(btemp+8)^0,w,c
 14924  01B4B4  B0D8               	btfsc	status,0,c
 14925  01B4B6  D015               	goto	l16176
 14926  01B4B8                     u15750:
 14927                           
 14928                           ; BSR set to: 0
 14929                           ;stkvar	_s @ sp[(-2)+0]
 14930  01B4B8  0EFE               	movlw	254
 14931  01B4BA  24E1               	addwf	fsr1l,w,c
 14932  01B4BC  6E2A               	movwf	btemp^0,c
 14933  01B4BE  0EFF               	movlw	255
 14934  01B4C0  20E2               	addwfc	fsr1h,w,c
 14935  01B4C2  6E2B               	movwf	(btemp+1)^0,c
 14936  01B4C4  0060  F0AB  FFE6   	movff	btemp,postinc1
 14937  01B4CA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 14938  01B4D0  EC24  F0E2         	call	_getoff	;wreg free
 14939  01B4D4  0060  F0A8  F0C0   	movff	btemp,_dst_off
 14940  01B4DA  0060  F0AC  F0C1   	movff	btemp+1,_dst_off+1
 14941  01B4E0  D012               	goto	l16178
 14942  01B4E2                     l16176:
 14943                           
 14944                           ; BSR set to: 0
 14945  01B4E2  0060  F1D8  F034   	movff	___timezone,btemp+10
 14946  01B4E8  0060  F1DC  F035   	movff	___timezone+1,btemp+11
 14947  01B4EE  0EF0               	movlw	240
 14948  01B4F0  2434               	addwf	(btemp+10)^0,w,c
 14949  01B4F2  6FC0               	movwf	_dst_off& (0+255),b
 14950  01B4F4  0EF1               	movlw	241
 14951  01B4F6  2035               	addwfc	(btemp+11)^0,w,c
 14952  01B4F8  6FC1               	movwf	(_dst_off+1)& (0+255),b
 14953  01B4FA  D005               	goto	l16178
 14954  01B4FC                     l3953:
 14955                           
 14956                           ; BSR set to: 1
 14957  01B4FC  0100               	movlb	0	; () banked
 14958  01B4FE  6BC2               	clrf	___daylight& (0+255),b
 14959  01B500  6BC3               	clrf	(___daylight+1)& (0+255),b
 14960  01B502  6BC0               	clrf	_dst_off& (0+255),b
 14961  01B504  6BC1               	clrf	(_dst_off+1)& (0+255),b
 14962  01B506                     l16178:
 14963                           
 14964                           ;stkvar	_s @ sp[(-2)+0]
 14965  01B506  50E1               	movf	fsr1l,w,c
 14966  01B508  0FFE               	addlw	-2
 14967  01B50A  6ED9               	movwf	fsr2l,c
 14968  01B50C  50E2               	movf	fsr1h,w,c
 14969  01B50E  6EDA               	movwf	fsr2h,c
 14970  01B510  0EFF               	movlw	255
 14971  01B512  22DA               	addwfc	fsr2h,f,c
 14972  01B514  006F FF7B FFF6     	movff	postinc2,tblptrl
 14973  01B51A  006F FF77 FFF7     	movff	postdec2,tblptrh
 14974  01B520                     	if	0	;tblptru may be non-zero
 14975  01B520                     	endif
 14976  01B520                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14977  01B520  0E00               	movlw	low (__mediumconst shr (0+16))
 14978  01B522  6EF8               	movwf	tblptru,c
 14979  01B524                     	endif
 14980  01B524  0008               	tblrd		*
 14981  01B526  50F5               	movf	tablat,w,c
 14982  01B528  0A2C               	xorlw	44
 14983  01B52A  A4D8               	btfss	status,2,c
 14984  01B52C  D023               	goto	l16184
 14985                           
 14986                           ;stkvar	_s @ sp[(-2)+0]
 14987  01B52E  0EFE               	movlw	-2
 14988  01B530  50E3               	movf	plusw1,w,c
 14989  01B532  0F01               	addlw	1
 14990  01B534  6E2A               	movwf	btemp^0,c
 14991  01B536  0EFE               	movlw	-2
 14992  01B538  0060  F0AB  FFE3   	movff	btemp,plusw1
 14993  01B53E  6A2A               	clrf	btemp^0,c
 14994  01B540  0EFF               	movlw	-1
 14995  01B542  50E3               	movf	plusw1,w,c
 14996  01B544  202A               	addwfc	btemp^0,w,c
 14997  01B546  6E2A               	movwf	btemp^0,c
 14998  01B548  0EFF               	movlw	-1
 14999  01B54A  0060  F0AB  FFE3   	movff	btemp,plusw1
 15000  01B550  0EE8               	movlw	low _r0
 15001  01B552  6EE6               	movwf	postinc1,c
 15002  01B554  0E01               	movlw	high _r0
 15003  01B556  6EE6               	movwf	postinc1,c
 15004                           
 15005                           ;stkvar	_s @ sp[(-4)+0]
 15006  01B558  0EFC               	movlw	252
 15007  01B55A  24E1               	addwf	fsr1l,w,c
 15008  01B55C  6E2A               	movwf	btemp^0,c
 15009  01B55E  0EFF               	movlw	255
 15010  01B560  20E2               	addwfc	fsr1h,w,c
 15011  01B562  6E2B               	movwf	(btemp+1)^0,c
 15012  01B564  0060  F0AB  FFE6   	movff	btemp,postinc1
 15013  01B56A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15014  01B570  ECF4  F0DA         	call	_getrule	;wreg free
 15015  01B574                     l16184:
 15016                           
 15017                           ;stkvar	_s @ sp[(-2)+0]
 15018  01B574  50E1               	movf	fsr1l,w,c
 15019  01B576  0FFE               	addlw	-2
 15020  01B578  6ED9               	movwf	fsr2l,c
 15021  01B57A  50E2               	movf	fsr1h,w,c
 15022  01B57C  6EDA               	movwf	fsr2h,c
 15023  01B57E  0EFF               	movlw	255
 15024  01B580  22DA               	addwfc	fsr2h,f,c
 15025  01B582  006F FF7B FFF6     	movff	postinc2,tblptrl
 15026  01B588  006F FF77 FFF7     	movff	postdec2,tblptrh
 15027  01B58E                     	if	0	;tblptru may be non-zero
 15028  01B58E                     	endif
 15029  01B58E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15030  01B58E  0E00               	movlw	low (__mediumconst shr (0+16))
 15031  01B590  6EF8               	movwf	tblptru,c
 15032  01B592                     	endif
 15033  01B592  0008               	tblrd		*
 15034  01B594  50F5               	movf	tablat,w,c
 15035  01B596  0A2C               	xorlw	44
 15036  01B598  A4D8               	btfss	status,2,c
 15037  01B59A  D023               	goto	l3961
 15038                           
 15039                           ;stkvar	_s @ sp[(-2)+0]
 15040  01B59C  0EFE               	movlw	-2
 15041  01B59E  50E3               	movf	plusw1,w,c
 15042  01B5A0  0F01               	addlw	1
 15043  01B5A2  6E2A               	movwf	btemp^0,c
 15044  01B5A4  0EFE               	movlw	-2
 15045  01B5A6  0060  F0AB  FFE3   	movff	btemp,plusw1
 15046  01B5AC  6A2A               	clrf	btemp^0,c
 15047  01B5AE  0EFF               	movlw	-1
 15048  01B5B0  50E3               	movf	plusw1,w,c
 15049  01B5B2  202A               	addwfc	btemp^0,w,c
 15050  01B5B4  6E2A               	movwf	btemp^0,c
 15051  01B5B6  0EFF               	movlw	-1
 15052  01B5B8  0060  F0AB  FFE3   	movff	btemp,plusw1
 15053  01B5BE  0ED7               	movlw	low _r1
 15054  01B5C0  6EE6               	movwf	postinc1,c
 15055  01B5C2  0E02               	movlw	high _r1
 15056  01B5C4  6EE6               	movwf	postinc1,c
 15057                           
 15058                           ;stkvar	_s @ sp[(-4)+0]
 15059  01B5C6  0EFC               	movlw	252
 15060  01B5C8  24E1               	addwf	fsr1l,w,c
 15061  01B5CA  6E2A               	movwf	btemp^0,c
 15062  01B5CC  0EFF               	movlw	255
 15063  01B5CE  20E2               	addwfc	fsr1h,w,c
 15064  01B5D0  6E2B               	movwf	(btemp+1)^0,c
 15065  01B5D2  0060  F0AB  FFE6   	movff	btemp,postinc1
 15066  01B5D8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15067  01B5DE  ECF4  F0DA         	call	_getrule	;wreg free
 15068  01B5E2                     l3961:
 15069                           
 15070                           ; _do_tzset: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 15071  01B5E2  52E5               	movf	postdec1,f,c
 15072  01B5E4  52E5               	movf	postdec1,f,c
 15073  01B5E6  0012               	return		;funcret
 15074  01B5E8                     __end_of_do_tzset:
 15075                           	opt callstack 0
 15076                           
 15077 ;; *************** function _getrule *****************
 15078 ;; Defined at:
 15079 ;;		line 60 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15080 ;; Parameters:    Size  Location     Type
 15081 ;;  p               2  [STACK] PTR PTR const unsigned c
 15082 ;;		 -> s(2), 
 15083 ;;  rule            2  [STACK] PTR int 
 15084 ;;		 -> r1(10), r0(10), 
 15085 ;; Auto vars:     Size  Location     Type
 15086 ;;  r               2  [STACK] int 
 15087 ;; Return value:  Size  Location     Type
 15088 ;;                  1  [STACK] void 
 15089 ;; Registers used:
 15090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15091 ;; Tracked objects:
 15092 ;;		On entry : 0/0
 15093 ;;		On exit  : 0/0
 15094 ;;		Unchanged: 0/0
 15095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15100 ;;Total ram usage:        0 bytes
 15101 ;; Hardware stack levels used:    1
 15102 ;; Hardware stack levels required when called:   17
 15103 ;; This function calls:
 15104 ;;		_getint
 15105 ;;		_getoff
 15106 ;; This function is called by:
 15107 ;;		_do_tzset
 15108 ;; This function uses a reentrant model
 15109 ;;
 15110                           
 15111                           	psect	text43
 15112  01B5E8                     __ptext43:
 15113                           	opt callstack 0
 15114  01B5E8                     _getrule:
 15115                           	opt callstack 0
 15116                           
 15117                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15118  01B5E8  52E6               	movf	postinc1,f,c
 15119  01B5EA  52E6               	movf	postinc1,f,c
 15120                           
 15121                           ;stkvar	_p @ sp[(-2)+-2]
 15122                           
 15123                           ;incstack = 0
 15124  01B5EC  0EFC               	movlw	-4
 15125  01B5EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15126  01B5F4  0EFD               	movlw	-3
 15127  01B5F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15128  01B5FC  006F FF7B FFF6     	movff	postinc2,tblptrl
 15129  01B602  006F FF77 FFF7     	movff	postdec2,tblptrh
 15130  01B608                     	if	0	;tblptru may be non-zero
 15131  01B608                     	endif
 15132  01B608                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15133  01B608  0E00               	movlw	low (__mediumconst shr (0+16))
 15134  01B60A  6EF8               	movwf	tblptru,c
 15135  01B60C                     	endif
 15136  01B60C  0008               	tblrd		*
 15137  01B60E  50F5               	movf	tablat,w,c
 15138  01B610  6E34               	movwf	(btemp+10)^0,c
 15139  01B612  6A35               	clrf	(btemp+11)^0,c
 15140                           
 15141                           ;stkvar	_rule @ sp[(-2)+-4]
 15142  01B614  0EFA               	movlw	-6
 15143  01B616  006F FF8F FFD9     	movff	plusw1,fsr2l
 15144  01B61C  0EFB               	movlw	-5
 15145  01B61E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15146  01B624  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 15147  01B62A  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 15148  01B630  006F FF78  F034    	movff	postinc2,btemp+10
 15149  01B636  006F FF74  F035    	movff	postdec2,btemp+11
 15150                           
 15151                           ;stkvar	_r @ sp[(-2)+0]
 15152  01B63C  0EFE               	movlw	-2
 15153  01B63E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15154  01B644  0EFF               	movlw	-1
 15155  01B646  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15156                           
 15157                           ;stkvar	_r @ sp[(-2)+0]
 15158  01B64C  0EFE               	movlw	-2
 15159  01B64E  006F FF8C  F02A    	movff	plusw1,btemp
 15160  01B654  0E4D               	movlw	77
 15161  01B656  182A               	xorwf	btemp^0,w,c
 15162  01B658  E104               	bnz	u15330
 15163  01B65A  0EFF               	movlw	-1
 15164  01B65C  50E3               	movf	plusw1,w,c
 15165  01B65E  B4D8               	btfsc	status,2,c
 15166  01B660  D036               	goto	l15880
 15167  01B662                     u15330:
 15168                           
 15169                           ;stkvar	_r @ sp[(-2)+0]
 15170  01B662  0EFE               	movlw	-2
 15171  01B664  006F FF8C  F02A    	movff	plusw1,btemp
 15172  01B66A  0E4A               	movlw	74
 15173  01B66C  182A               	xorwf	btemp^0,w,c
 15174  01B66E  E110               	bnz	l15876
 15175  01B670  0EFF               	movlw	-1
 15176  01B672  50E3               	movf	plusw1,w,c
 15177  01B674  A4D8               	btfss	status,2,c
 15178  01B676  D00C               	goto	l15876
 15179                           
 15180                           ;stkvar	_p @ sp[(-2)+-2]
 15181  01B678  0EFC               	movlw	-4
 15182  01B67A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15183  01B680  0EFD               	movlw	-3
 15184  01B682  006F FF8F FFDA     	movff	plusw1,fsr2h
 15185  01B688  2ADE               	incf	postinc2,f,c
 15186  01B68A  0E00               	movlw	0
 15187  01B68C  22DD               	addwfc	postdec2,f,c
 15188  01B68E  D00C               	goto	l15878
 15189  01B690                     l15876:
 15190                           
 15191                           ;stkvar	_rule @ sp[(-2)+-4]
 15192  01B690  0EFA               	movlw	-6
 15193  01B692  006F FF8F FFD9     	movff	plusw1,fsr2l
 15194  01B698  0EFB               	movlw	-5
 15195  01B69A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15196  01B6A0  0E00               	movlw	0
 15197  01B6A2  6EDE               	movwf	postinc2,c
 15198  01B6A4  0E00               	movlw	0
 15199  01B6A6  6EDD               	movwf	postdec2,c
 15200  01B6A8                     l15878:
 15201                           
 15202                           ;stkvar	_p @ sp[(-2)+-2]
 15203  01B6A8  0EFC               	movlw	-4
 15204  01B6AA  006F FF8F FFE6     	movff	plusw1,postinc1
 15205  01B6B0  006F FF8F FFE6     	movff	plusw1,postinc1
 15206  01B6B6  EC09  F0FB         	call	_getint	;wreg free
 15207                           
 15208                           ;stkvar	_rule @ sp[(-2)+-4]
 15209  01B6BA  0EFA               	movlw	-6
 15210  01B6BC  006F FF8C  F034    	movff	plusw1,btemp+10
 15211  01B6C2  0EFB               	movlw	-5
 15212  01B6C4  006F FF8C  F035    	movff	plusw1,btemp+11
 15213  01B6CA  0E02               	movlw	2
 15214  01B6CC  D06D               	goto	L15
 15215  01B6CE                     l15880:
 15216                           
 15217                           ;stkvar	_p @ sp[(-2)+-2]
 15218  01B6CE  0EFC               	movlw	-4
 15219  01B6D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15220  01B6D6  0EFD               	movlw	-3
 15221  01B6D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15222  01B6DE  2ADE               	incf	postinc2,f,c
 15223  01B6E0  0E00               	movlw	0
 15224  01B6E2  22DD               	addwfc	postdec2,f,c
 15225                           
 15226                           ;stkvar	_p @ sp[(-2)+-2]
 15227  01B6E4  0EFC               	movlw	-4
 15228  01B6E6  006F FF8F FFE6     	movff	plusw1,postinc1
 15229  01B6EC  006F FF8F FFE6     	movff	plusw1,postinc1
 15230  01B6F2  EC09  F0FB         	call	_getint	;wreg free
 15231                           
 15232                           ;stkvar	_rule @ sp[(-2)+-4]
 15233  01B6F6  0EFA               	movlw	-6
 15234  01B6F8  006F FF8C  F034    	movff	plusw1,btemp+10
 15235  01B6FE  0EFB               	movlw	-5
 15236  01B700  006F FF8C  F035    	movff	plusw1,btemp+11
 15237  01B706  0E02               	movlw	2
 15238  01B708  2434               	addwf	(btemp+10)^0,w,c
 15239  01B70A  6ED9               	movwf	fsr2l,c
 15240  01B70C  0E00               	movlw	0
 15241  01B70E  2035               	addwfc	(btemp+11)^0,w,c
 15242  01B710  6EDA               	movwf	fsr2h,c
 15243  01B712  0060  F0AB  FFDE   	movff	btemp,postinc2
 15244  01B718  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15245                           
 15246                           ;stkvar	_p @ sp[(-2)+-2]
 15247  01B71E  0EFC               	movlw	-4
 15248  01B720  006F FF8F FFD9     	movff	plusw1,fsr2l
 15249  01B726  0EFD               	movlw	-3
 15250  01B728  006F FF8F FFDA     	movff	plusw1,fsr2h
 15251  01B72E  2ADE               	incf	postinc2,f,c
 15252  01B730  0E00               	movlw	0
 15253  01B732  22DD               	addwfc	postdec2,f,c
 15254                           
 15255                           ;stkvar	_p @ sp[(-2)+-2]
 15256  01B734  0EFC               	movlw	-4
 15257  01B736  006F FF8F FFE6     	movff	plusw1,postinc1
 15258  01B73C  006F FF8F FFE6     	movff	plusw1,postinc1
 15259  01B742  EC09  F0FB         	call	_getint	;wreg free
 15260                           
 15261                           ;stkvar	_rule @ sp[(-2)+-4]
 15262  01B746  0EFA               	movlw	-6
 15263  01B748  006F FF8C  F034    	movff	plusw1,btemp+10
 15264  01B74E  0EFB               	movlw	-5
 15265  01B750  006F FF8C  F035    	movff	plusw1,btemp+11
 15266  01B756  0E04               	movlw	4
 15267  01B758  2434               	addwf	(btemp+10)^0,w,c
 15268  01B75A  6ED9               	movwf	fsr2l,c
 15269  01B75C  0E00               	movlw	0
 15270  01B75E  2035               	addwfc	(btemp+11)^0,w,c
 15271  01B760  6EDA               	movwf	fsr2h,c
 15272  01B762  0060  F0AB  FFDE   	movff	btemp,postinc2
 15273  01B768  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15274                           
 15275                           ;stkvar	_p @ sp[(-2)+-2]
 15276  01B76E  0EFC               	movlw	-4
 15277  01B770  006F FF8F FFD9     	movff	plusw1,fsr2l
 15278  01B776  0EFD               	movlw	-3
 15279  01B778  006F FF8F FFDA     	movff	plusw1,fsr2h
 15280  01B77E  2ADE               	incf	postinc2,f,c
 15281  01B780  0E00               	movlw	0
 15282  01B782  22DD               	addwfc	postdec2,f,c
 15283                           
 15284                           ;stkvar	_p @ sp[(-2)+-2]
 15285  01B784  0EFC               	movlw	-4
 15286  01B786  006F FF8F FFE6     	movff	plusw1,postinc1
 15287  01B78C  006F FF8F FFE6     	movff	plusw1,postinc1
 15288  01B792  EC09  F0FB         	call	_getint	;wreg free
 15289                           
 15290                           ;stkvar	_rule @ sp[(-2)+-4]
 15291  01B796  0EFA               	movlw	-6
 15292  01B798  006F FF8C  F034    	movff	plusw1,btemp+10
 15293  01B79E  0EFB               	movlw	-5
 15294  01B7A0  006F FF8C  F035    	movff	plusw1,btemp+11
 15295  01B7A6  0E06               	movlw	6
 15296  01B7A8                     L15:
 15297  01B7A8  2434               	addwf	(btemp+10)^0,w,c
 15298  01B7AA  6ED9               	movwf	fsr2l,c
 15299  01B7AC  0E00               	movlw	0
 15300  01B7AE  2035               	addwfc	(btemp+11)^0,w,c
 15301  01B7B0  6EDA               	movwf	fsr2h,c
 15302  01B7B2  0060  F0AB  FFDE   	movff	btemp,postinc2
 15303  01B7B8  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15304                           
 15305                           ;stkvar	_p @ sp[(-2)+-2]
 15306  01B7BE  0EFC               	movlw	-4
 15307  01B7C0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15308  01B7C6  0EFD               	movlw	-3
 15309  01B7C8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15310  01B7CE  006F FF7B FFF6     	movff	postinc2,tblptrl
 15311  01B7D4  006F FF77 FFF7     	movff	postdec2,tblptrh
 15312  01B7DA                     	if	0	;tblptru may be non-zero
 15313  01B7DA                     	endif
 15314  01B7DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15315  01B7DA  0E00               	movlw	low (__mediumconst shr (0+16))
 15316  01B7DC  6EF8               	movwf	tblptru,c
 15317  01B7DE                     	endif
 15318  01B7DE  0008               	tblrd		*
 15319  01B7E0  50F5               	movf	tablat,w,c
 15320  01B7E2  0A2F               	xorlw	47
 15321  01B7E4  A4D8               	btfss	status,2,c
 15322  01B7E6  D029               	goto	l15896
 15323                           
 15324                           ;stkvar	_p @ sp[(-2)+-2]
 15325  01B7E8  0EFC               	movlw	-4
 15326  01B7EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15327  01B7F0  0EFD               	movlw	-3
 15328  01B7F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15329  01B7F8  2ADE               	incf	postinc2,f,c
 15330  01B7FA  0E00               	movlw	0
 15331  01B7FC  22DD               	addwfc	postdec2,f,c
 15332                           
 15333                           ;stkvar	_p @ sp[(-2)+-2]
 15334  01B7FE  0EFC               	movlw	-4
 15335  01B800  006F FF8F FFE6     	movff	plusw1,postinc1
 15336  01B806  006F FF8F FFE6     	movff	plusw1,postinc1
 15337  01B80C  EC24  F0E2         	call	_getoff	;wreg free
 15338                           
 15339                           ;stkvar	_rule @ sp[(-2)+-4]
 15340  01B810  0EFA               	movlw	-6
 15341  01B812  006F FF8C  F034    	movff	plusw1,btemp+10
 15342  01B818  0EFB               	movlw	-5
 15343  01B81A  006F FF8C  F035    	movff	plusw1,btemp+11
 15344  01B820  0E08               	movlw	8
 15345  01B822  2434               	addwf	(btemp+10)^0,w,c
 15346  01B824  6ED9               	movwf	fsr2l,c
 15347  01B826  0E00               	movlw	0
 15348  01B828  2035               	addwfc	(btemp+11)^0,w,c
 15349  01B82A  6EDA               	movwf	fsr2h,c
 15350  01B82C  0060  F0AB  FFDE   	movff	btemp,postinc2
 15351  01B832  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15352  01B838  D012               	goto	l3926
 15353  01B83A                     l15896:
 15354                           
 15355                           ;stkvar	_rule @ sp[(-2)+-4]
 15356  01B83A  0EFA               	movlw	-6
 15357  01B83C  006F FF8C  F034    	movff	plusw1,btemp+10
 15358  01B842  0EFB               	movlw	-5
 15359  01B844  006F FF8C  F035    	movff	plusw1,btemp+11
 15360  01B84A  0E08               	movlw	8
 15361  01B84C  2434               	addwf	(btemp+10)^0,w,c
 15362  01B84E  6ED9               	movwf	fsr2l,c
 15363  01B850  0E00               	movlw	0
 15364  01B852  2035               	addwfc	(btemp+11)^0,w,c
 15365  01B854  6EDA               	movwf	fsr2h,c
 15366  01B856  0E20               	movlw	32
 15367  01B858  6EDE               	movwf	postinc2,c
 15368  01B85A  0E1C               	movlw	28
 15369  01B85C  6EDD               	movwf	postdec2,c
 15370  01B85E                     l3926:
 15371                           
 15372                           ; _getrule: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15373  01B85E  0EFA               	movlw	250
 15374  01B860  26E1               	addwf	fsr1l,f,c
 15375  01B862  0EFF               	movlw	255
 15376  01B864  22E2               	addwfc	fsr1h,f,c
 15377  01B866  0012               	return		;funcret
 15378  01B868                     __end_of_getrule:
 15379                           	opt callstack 0
 15380                           
 15381 ;; *************** function _getoff *****************
 15382 ;; Defined at:
 15383 ;;		line 39 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15384 ;; Parameters:    Size  Location     Type
 15385 ;;  p               2  [STACK] PTR PTR const unsigned c
 15386 ;;		 -> s(2), 
 15387 ;; Auto vars:     Size  Location     Type
 15388 ;;  off             2  [STACK] int 
 15389 ;;  neg             2  [STACK] int 
 15390 ;; Return value:  Size  Location     Type
 15391 ;;                  2  [STACK] int 
 15392 ;; Registers used:
 15393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15394 ;; Tracked objects:
 15395 ;;		On entry : 0/0
 15396 ;;		On exit  : 0/0
 15397 ;;		Unchanged: 0/0
 15398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15403 ;;Total ram usage:        0 bytes
 15404 ;; Hardware stack levels used:    1
 15405 ;; Hardware stack levels required when called:   16
 15406 ;; This function calls:
 15407 ;;		_getint
 15408 ;; This function is called by:
 15409 ;;		_getrule
 15410 ;;		_do_tzset
 15411 ;; This function uses a reentrant model
 15412 ;;
 15413                           
 15414                           	psect	text44
 15415  01C448                     __ptext44:
 15416                           	opt callstack 0
 15417  01C448                     _getoff:
 15418                           	opt callstack 0
 15419                           
 15420                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15421  01C448  52E6               	movf	postinc1,f,c
 15422  01C44A  52E6               	movf	postinc1,f,c
 15423  01C44C  52E6               	movf	postinc1,f,c
 15424  01C44E  52E6               	movf	postinc1,f,c
 15425                           
 15426                           ;stkvar	_neg @ sp[(-4)+2]
 15427                           
 15428                           ;incstack = 0
 15429  01C450  0EFE               	movlw	-2
 15430  01C452  6AE3               	clrf	plusw1,c
 15431  01C454  0EFF               	movlw	-1
 15432  01C456  6AE3               	clrf	plusw1,c
 15433                           
 15434                           ;stkvar	_p @ sp[(-4)+-2]
 15435  01C458  0EFA               	movlw	-6
 15436  01C45A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15437  01C460  0EFB               	movlw	-5
 15438  01C462  006F FF8F FFDA     	movff	plusw1,fsr2h
 15439  01C468  006F FF7B FFF6     	movff	postinc2,tblptrl
 15440  01C46E  006F FF77 FFF7     	movff	postdec2,tblptrh
 15441  01C474                     	if	0	;tblptru may be non-zero
 15442  01C474                     	endif
 15443  01C474                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15444  01C474  0E00               	movlw	low (__mediumconst shr (0+16))
 15445  01C476  6EF8               	movwf	tblptru,c
 15446  01C478                     	endif
 15447  01C478  0008               	tblrd		*
 15448  01C47A  50F5               	movf	tablat,w,c
 15449  01C47C  0A2D               	xorlw	45
 15450  01C47E  A4D8               	btfss	status,2,c
 15451  01C480  D018               	goto	l10790
 15452                           
 15453                           ;stkvar	_p @ sp[(-4)+-2]
 15454  01C482  0EFA               	movlw	-6
 15455  01C484  006F FF8F FFD9     	movff	plusw1,fsr2l
 15456  01C48A  0EFB               	movlw	-5
 15457  01C48C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15458  01C492  2ADE               	incf	postinc2,f,c
 15459  01C494  0E00               	movlw	0
 15460  01C496  22DD               	addwfc	postdec2,f,c
 15461  01C498  0E01               	movlw	1
 15462  01C49A  6E34               	movwf	(btemp+10)^0,c
 15463  01C49C  0E00               	movlw	0
 15464  01C49E  6E35               	movwf	(btemp+11)^0,c
 15465                           
 15466                           ;stkvar	_neg @ sp[(-4)+2]
 15467  01C4A0  0EFE               	movlw	-2
 15468  01C4A2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15469  01C4A8  0EFF               	movlw	-1
 15470  01C4AA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15471  01C4B0  D020               	goto	l10794
 15472  01C4B2                     l10790:
 15473                           
 15474                           ;stkvar	_p @ sp[(-4)+-2]
 15475  01C4B2  0EFA               	movlw	-6
 15476  01C4B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 15477  01C4BA  0EFB               	movlw	-5
 15478  01C4BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 15479  01C4C2  006F FF7B FFF6     	movff	postinc2,tblptrl
 15480  01C4C8  006F FF77 FFF7     	movff	postdec2,tblptrh
 15481  01C4CE                     	if	0	;tblptru may be non-zero
 15482  01C4CE                     	endif
 15483  01C4CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15484  01C4CE  0E00               	movlw	low (__mediumconst shr (0+16))
 15485  01C4D0  6EF8               	movwf	tblptru,c
 15486  01C4D2                     	endif
 15487  01C4D2  0008               	tblrd		*
 15488  01C4D4  50F5               	movf	tablat,w,c
 15489  01C4D6  0A2B               	xorlw	43
 15490  01C4D8  A4D8               	btfss	status,2,c
 15491  01C4DA  D00B               	goto	l10794
 15492                           
 15493                           ;stkvar	_p @ sp[(-4)+-2]
 15494  01C4DC  0EFA               	movlw	-6
 15495  01C4DE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15496  01C4E4  0EFB               	movlw	-5
 15497  01C4E6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15498  01C4EC  2ADE               	incf	postinc2,f,c
 15499  01C4EE  0E00               	movlw	0
 15500  01C4F0  22DD               	addwfc	postdec2,f,c
 15501  01C4F2                     l10794:
 15502                           
 15503                           ;stkvar	_p @ sp[(-4)+-2]
 15504  01C4F2  0EFA               	movlw	-6
 15505  01C4F4  006F FF8F FFE6     	movff	plusw1,postinc1
 15506  01C4FA  006F FF8F FFE6     	movff	plusw1,postinc1
 15507  01C500  EC09  F0FB         	call	_getint	;wreg free
 15508  01C504  0060  F0A8  F034   	movff	btemp,btemp+10
 15509  01C50A  0060  F0AC  F035   	movff	btemp+1,btemp+11
 15510  01C510  0E10               	movlw	16
 15511  01C512  0234               	mulwf	(btemp+10)^0,c
 15512  01C514  006F FFCC  F032    	movff	prodl,btemp+8
 15513  01C51A  006F FFD0  F033    	movff	prodh,btemp+9
 15514  01C520  0235               	mulwf	(btemp+11)^0,c
 15515  01C522  50F3               	movf	prodl,w,c
 15516  01C524  2633               	addwf	(btemp+9)^0,f,c
 15517  01C526  0E0E               	movlw	14
 15518  01C528  0234               	mulwf	(btemp+10)^0,c
 15519  01C52A  50F3               	movf	prodl,w,c
 15520  01C52C  2633               	addwf	(btemp+9)^0,f,c
 15521                           
 15522                           ;stkvar	_off @ sp[(-4)+0]
 15523  01C52E  0EFC               	movlw	-4
 15524  01C530  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 15525  01C536  0EFD               	movlw	-3
 15526  01C538  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 15527                           
 15528                           ;stkvar	_p @ sp[(-4)+-2]
 15529  01C53E  0EFA               	movlw	-6
 15530  01C540  006F FF8F FFD9     	movff	plusw1,fsr2l
 15531  01C546  0EFB               	movlw	-5
 15532  01C548  006F FF8F FFDA     	movff	plusw1,fsr2h
 15533  01C54E  006F FF7B FFF6     	movff	postinc2,tblptrl
 15534  01C554  006F FF77 FFF7     	movff	postdec2,tblptrh
 15535  01C55A                     	if	0	;tblptru may be non-zero
 15536  01C55A                     	endif
 15537  01C55A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15538  01C55A  0E00               	movlw	low (__mediumconst shr (0+16))
 15539  01C55C  6EF8               	movwf	tblptru,c
 15540  01C55E                     	endif
 15541  01C55E  0008               	tblrd		*
 15542  01C560  50F5               	movf	tablat,w,c
 15543  01C562  0A3A               	xorlw	58
 15544  01C564  A4D8               	btfss	status,2,c
 15545  01C566  D064               	goto	l10808
 15546                           
 15547                           ;stkvar	_p @ sp[(-4)+-2]
 15548  01C568  0EFA               	movlw	-6
 15549  01C56A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15550  01C570  0EFB               	movlw	-5
 15551  01C572  006F FF8F FFDA     	movff	plusw1,fsr2h
 15552  01C578  2ADE               	incf	postinc2,f,c
 15553  01C57A  0E00               	movlw	0
 15554  01C57C  22DD               	addwfc	postdec2,f,c
 15555                           
 15556                           ;stkvar	_p @ sp[(-4)+-2]
 15557  01C57E  0EFA               	movlw	-6
 15558  01C580  006F FF8F FFE6     	movff	plusw1,postinc1
 15559  01C586  006F FF8F FFE6     	movff	plusw1,postinc1
 15560  01C58C  EC09  F0FB         	call	_getint	;wreg free
 15561  01C590  0060  F0A8  F034   	movff	btemp,btemp+10
 15562  01C596  0060  F0AC  F035   	movff	btemp+1,btemp+11
 15563  01C59C  0E3C               	movlw	60
 15564  01C59E  0234               	mulwf	(btemp+10)^0,c
 15565  01C5A0  006F FFCC  F032    	movff	prodl,btemp+8
 15566  01C5A6  006F FFD0  F033    	movff	prodh,btemp+9
 15567  01C5AC  0235               	mulwf	(btemp+11)^0,c
 15568  01C5AE  50F3               	movf	prodl,w,c
 15569  01C5B0  2633               	addwf	(btemp+9)^0,f,c
 15570                           
 15571                           ;stkvar	_off @ sp[(-4)+0]
 15572  01C5B2  50E1               	movf	fsr1l,w,c
 15573  01C5B4  0FFC               	addlw	-4
 15574  01C5B6  6ED9               	movwf	fsr2l,c
 15575  01C5B8  50E2               	movf	fsr1h,w,c
 15576  01C5BA  6EDA               	movwf	fsr2h,c
 15577  01C5BC  0EFF               	movlw	255
 15578  01C5BE  22DA               	addwfc	fsr2h,f,c
 15579  01C5C0  5032               	movf	(btemp+8)^0,w,c
 15580  01C5C2  26DE               	addwf	postinc2,f,c
 15581  01C5C4  5033               	movf	(btemp+9)^0,w,c
 15582  01C5C6  22DD               	addwfc	postdec2,f,c
 15583                           
 15584                           ;stkvar	_p @ sp[(-4)+-2]
 15585  01C5C8  0EFA               	movlw	-6
 15586  01C5CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15587  01C5D0  0EFB               	movlw	-5
 15588  01C5D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15589  01C5D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 15590  01C5DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 15591  01C5E4                     	if	0	;tblptru may be non-zero
 15592  01C5E4                     	endif
 15593  01C5E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15594  01C5E4  0E00               	movlw	low (__mediumconst shr (0+16))
 15595  01C5E6  6EF8               	movwf	tblptru,c
 15596  01C5E8                     	endif
 15597  01C5E8  0008               	tblrd		*
 15598  01C5EA  50F5               	movf	tablat,w,c
 15599  01C5EC  0A3A               	xorlw	58
 15600  01C5EE  A4D8               	btfss	status,2,c
 15601  01C5F0  D01F               	goto	l10808
 15602                           
 15603                           ;stkvar	_p @ sp[(-4)+-2]
 15604  01C5F2  0EFA               	movlw	-6
 15605  01C5F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 15606  01C5FA  0EFB               	movlw	-5
 15607  01C5FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 15608  01C602  2ADE               	incf	postinc2,f,c
 15609  01C604  0E00               	movlw	0
 15610  01C606  22DD               	addwfc	postdec2,f,c
 15611                           
 15612                           ;stkvar	_p @ sp[(-4)+-2]
 15613  01C608  0EFA               	movlw	-6
 15614  01C60A  006F FF8F FFE6     	movff	plusw1,postinc1
 15615  01C610  006F FF8F FFE6     	movff	plusw1,postinc1
 15616  01C616  EC09  F0FB         	call	_getint	;wreg free
 15617                           
 15618                           ;stkvar	_off @ sp[(-4)+0]
 15619  01C61A  50E1               	movf	fsr1l,w,c
 15620  01C61C  0FFC               	addlw	-4
 15621  01C61E  6ED9               	movwf	fsr2l,c
 15622  01C620  50E2               	movf	fsr1h,w,c
 15623  01C622  6EDA               	movwf	fsr2h,c
 15624  01C624  0EFF               	movlw	255
 15625  01C626  22DA               	addwfc	fsr2h,f,c
 15626  01C628  502A               	movf	btemp^0,w,c
 15627  01C62A  26DE               	addwf	postinc2,f,c
 15628  01C62C  502B               	movf	(btemp+1)^0,w,c
 15629  01C62E  22DD               	addwfc	postdec2,f,c
 15630  01C630                     l10808:
 15631                           
 15632                           ;stkvar	_neg @ sp[(-4)+2]
 15633  01C630  0EFE               	movlw	-2
 15634  01C632  006F FF8C  F02A    	movff	plusw1,btemp
 15635  01C638  0EFF               	movlw	-1
 15636  01C63A  50E3               	movf	plusw1,w,c
 15637  01C63C  102A               	iorwf	btemp^0,w,c
 15638  01C63E  A4D8               	btfss	status,2,c
 15639  01C640  D009               	goto	l10812
 15640                           
 15641                           ;stkvar	_off @ sp[(-4)+0]
 15642  01C642  0EFC               	movlw	-4
 15643  01C644  006F FF8C  F02A    	movff	plusw1,btemp
 15644  01C64A  0EFD               	movlw	-3
 15645  01C64C  006F FF8C  F02B    	movff	plusw1,btemp+1
 15646  01C652  D00D               	goto	l3917
 15647  01C654                     l10812:
 15648                           
 15649                           ;stkvar	_off @ sp[(-4)+0]
 15650  01C654  0EFC               	movlw	-4
 15651  01C656  006F FF8C  F02A    	movff	plusw1,btemp
 15652  01C65C  1E2A               	comf	btemp^0,f,c
 15653  01C65E  0EFD               	movlw	-3
 15654  01C660  006F FF8C  F02B    	movff	plusw1,btemp+1
 15655  01C666  1E2B               	comf	(btemp+1)^0,f,c
 15656  01C668  2A2A               	incf	btemp^0,f,c
 15657  01C66A  B4D8               	btfsc	status,2,c
 15658  01C66C  2A2B               	incf	(btemp+1)^0,f,c
 15659  01C66E                     l3917:
 15660                           
 15661                           ; _getoff: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 15662  01C66E  0EFA               	movlw	250
 15663  01C670  26E1               	addwf	fsr1l,f,c
 15664  01C672  0EFF               	movlw	255
 15665  01C674  22E2               	addwfc	fsr1h,f,c
 15666  01C676  0012               	return		;funcret
 15667  01C678                     __end_of_getoff:
 15668                           	opt callstack 0
 15669                           
 15670 ;; *************** function _getint *****************
 15671 ;; Defined at:
 15672 ;;		line 32 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15673 ;; Parameters:    Size  Location     Type
 15674 ;;  p               2  [STACK] PTR PTR const unsigned c
 15675 ;;		 -> s(2), 
 15676 ;; Auto vars:     Size  Location     Type
 15677 ;;  x               2  [STACK] unsigned int 
 15678 ;; Return value:  Size  Location     Type
 15679 ;;                  2  [STACK] int 
 15680 ;; Registers used:
 15681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15682 ;; Tracked objects:
 15683 ;;		On entry : 0/0
 15684 ;;		On exit  : 0/0
 15685 ;;		Unchanged: 0/0
 15686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15691 ;;Total ram usage:        0 bytes
 15692 ;; Hardware stack levels used:    1
 15693 ;; Hardware stack levels required when called:   15
 15694 ;; This function calls:
 15695 ;;		Nothing
 15696 ;; This function is called by:
 15697 ;;		_getoff
 15698 ;;		_getrule
 15699 ;; This function uses a reentrant model
 15700 ;;
 15701                           
 15702                           	psect	text45
 15703  01F612                     __ptext45:
 15704                           	opt callstack 0
 15705  01F612                     _getint:
 15706                           	opt callstack 0
 15707                           
 15708                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15709  01F612  52E6               	movf	postinc1,f,c
 15710  01F614  52E6               	movf	postinc1,f,c
 15711                           
 15712                           ;stkvar	_x @ sp[(-2)+0]
 15713                           
 15714                           ;incstack = 0
 15715  01F616  0EFE               	movlw	-2
 15716  01F618  6AE3               	clrf	plusw1,c
 15717  01F61A  0EFF               	movlw	-1
 15718  01F61C  6AE3               	clrf	plusw1,c
 15719  01F61E  D043               	goto	l9946
 15720  01F620                     l9942:
 15721  01F620  0ED0               	movlw	208
 15722  01F622  6E34               	movwf	(btemp+10)^0,c
 15723  01F624  0EFF               	movlw	255
 15724  01F626  6E35               	movwf	(btemp+11)^0,c
 15725                           
 15726                           ;stkvar	_x @ sp[(-2)+0]
 15727  01F628  0EFE               	movlw	-2
 15728  01F62A  006F FF8C  F032    	movff	plusw1,btemp+8
 15729  01F630  0EFF               	movlw	-1
 15730  01F632  006F FF8C  F033    	movff	plusw1,btemp+9
 15731  01F638  0E0A               	movlw	10
 15732  01F63A  0232               	mulwf	(btemp+8)^0,c
 15733  01F63C  006F FFCC  F030    	movff	prodl,btemp+6
 15734  01F642  006F FFD0  F031    	movff	prodh,btemp+7
 15735  01F648  0233               	mulwf	(btemp+9)^0,c
 15736  01F64A  50F3               	movf	prodl,w,c
 15737  01F64C  2631               	addwf	(btemp+7)^0,f,c
 15738                           
 15739                           ;stkvar	_p @ sp[(-2)+-2]
 15740  01F64E  0EFC               	movlw	-4
 15741  01F650  006F FF8F FFD9     	movff	plusw1,fsr2l
 15742  01F656  0EFD               	movlw	-3
 15743  01F658  006F FF8F FFDA     	movff	plusw1,fsr2h
 15744  01F65E  006F FF7B FFF6     	movff	postinc2,tblptrl
 15745  01F664  006F FF77 FFF7     	movff	postdec2,tblptrh
 15746  01F66A                     	if	0	;tblptru may be non-zero
 15747  01F66A                     	endif
 15748  01F66A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15749  01F66A  0E00               	movlw	low (__mediumconst shr (0+16))
 15750  01F66C  6EF8               	movwf	tblptru,c
 15751  01F66E                     	endif
 15752  01F66E  0008               	tblrd		*
 15753  01F670  50F5               	movf	tablat,w,c
 15754  01F672  2630               	addwf	(btemp+6)^0,f,c
 15755  01F674  0E00               	movlw	0
 15756  01F676  2231               	addwfc	(btemp+7)^0,f,c
 15757  01F678  5034               	movf	(btemp+10)^0,w,c
 15758  01F67A  2630               	addwf	(btemp+6)^0,f,c
 15759  01F67C  5035               	movf	(btemp+11)^0,w,c
 15760  01F67E  2231               	addwfc	(btemp+7)^0,f,c
 15761                           
 15762                           ;stkvar	_x @ sp[(-2)+0]
 15763  01F680  0EFE               	movlw	-2
 15764  01F682  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 15765  01F688  0EFF               	movlw	-1
 15766  01F68A  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 15767                           
 15768                           ;stkvar	_p @ sp[(-2)+-2]
 15769  01F690  0EFC               	movlw	-4
 15770  01F692  006F FF8F FFD9     	movff	plusw1,fsr2l
 15771  01F698  0EFD               	movlw	-3
 15772  01F69A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15773  01F6A0  2ADE               	incf	postinc2,f,c
 15774  01F6A2  0E00               	movlw	0
 15775  01F6A4  22DD               	addwfc	postdec2,f,c
 15776  01F6A6                     l9946:
 15777  01F6A6  0ED0               	movlw	208
 15778  01F6A8  6E34               	movwf	(btemp+10)^0,c
 15779  01F6AA  0EFF               	movlw	255
 15780  01F6AC  6E35               	movwf	(btemp+11)^0,c
 15781                           
 15782                           ;stkvar	_p @ sp[(-2)+-2]
 15783  01F6AE  0EFC               	movlw	-4
 15784  01F6B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15785  01F6B6  0EFD               	movlw	-3
 15786  01F6B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15787  01F6BE  006F FF7B FFF6     	movff	postinc2,tblptrl
 15788  01F6C4  006F FF77 FFF7     	movff	postdec2,tblptrh
 15789  01F6CA                     	if	0	;tblptru may be non-zero
 15790  01F6CA                     	endif
 15791  01F6CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15792  01F6CA  0E00               	movlw	low (__mediumconst shr (0+16))
 15793  01F6CC  6EF8               	movwf	tblptru,c
 15794  01F6CE                     	endif
 15795  01F6CE  0008               	tblrd		*
 15796  01F6D0  50F5               	movf	tablat,w,c
 15797  01F6D2  6E32               	movwf	(btemp+8)^0,c
 15798  01F6D4  6A33               	clrf	(btemp+9)^0,c
 15799  01F6D6  5034               	movf	(btemp+10)^0,w,c
 15800  01F6D8  2632               	addwf	(btemp+8)^0,f,c
 15801  01F6DA  5035               	movf	(btemp+11)^0,w,c
 15802  01F6DC  2233               	addwfc	(btemp+9)^0,f,c
 15803  01F6DE  5033               	movf	(btemp+9)^0,w,c
 15804  01F6E0  E104               	bnz	u7590
 15805  01F6E2  0E0A               	movlw	10
 15806  01F6E4  5C32               	subwf	(btemp+8)^0,w,c
 15807  01F6E6  A0D8               	btfss	status,0,c
 15808  01F6E8  D79B               	goto	l9942
 15809  01F6EA                     u7590:
 15810                           
 15811                           ;stkvar	_x @ sp[(-2)+0]
 15812  01F6EA  0EFE               	movlw	-2
 15813  01F6EC  006F FF8C  F02A    	movff	plusw1,btemp
 15814  01F6F2  0EFF               	movlw	-1
 15815  01F6F4  006F FF8C  F02B    	movff	plusw1,btemp+1
 15816                           
 15817                           ; _getint: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 15818  01F6FA  52E5               	movf	postdec1,f,c
 15819  01F6FC  52E5               	movf	postdec1,f,c
 15820  01F6FE  52E5               	movf	postdec1,f,c
 15821  01F700  52E5               	movf	postdec1,f,c
 15822  01F702  0012               	return		;funcret
 15823  01F704                     __end_of_getint:
 15824                           	opt callstack 0
 15825                           
 15826 ;; *************** function _getname *****************
 15827 ;; Defined at:
 15828 ;;		line 82 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15829 ;; Parameters:    Size  Location     Type
 15830 ;;  d               2  [STACK] PTR unsigned char 
 15831 ;;		 -> dst_name(7), std_name(7), 
 15832 ;;  p               2  [STACK] PTR PTR const unsigned c
 15833 ;;		 -> s(2), 
 15834 ;; Auto vars:     Size  Location     Type
 15835 ;;  i               2  [STACK] int 
 15836 ;; Return value:  Size  Location     Type
 15837 ;;                  1  [STACK] void 
 15838 ;; Registers used:
 15839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11,
      + tblptrl, tblptrh, tblptru
 15840 ;; Tracked objects:
 15841 ;;		On entry : 0/39
 15842 ;;		On exit  : 0/0
 15843 ;;		Unchanged: 0/0
 15844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15849 ;;Total ram usage:        0 bytes
 15850 ;; Hardware stack levels used:    1
 15851 ;; Hardware stack levels required when called:   15
 15852 ;; This function calls:
 15853 ;;		Nothing
 15854 ;; This function is called by:
 15855 ;;		_do_tzset
 15856 ;; This function uses a reentrant model
 15857 ;;
 15858                           
 15859                           	psect	text46
 15860  01A7EA                     __ptext46:
 15861                           	opt callstack 0
 15862  01A7EA                     _getname:
 15863                           	opt callstack 0
 15864                           
 15865                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15866  01A7EA  52E6               	movf	postinc1,f,c
 15867  01A7EC  52E6               	movf	postinc1,f,c
 15868                           
 15869                           ;stkvar	_p @ sp[(-2)+-4]
 15870                           
 15871                           ;incstack = 0
 15872  01A7EE  0EFA               	movlw	-6
 15873  01A7F0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15874  01A7F6  0EFB               	movlw	-5
 15875  01A7F8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15876  01A7FE  006F FF7B FFF6     	movff	postinc2,tblptrl
 15877  01A804  006F FF77 FFF7     	movff	postdec2,tblptrh
 15878  01A80A                     	if	0	;tblptru may be non-zero
 15879  01A80A                     	endif
 15880  01A80A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15881  01A80A  0E00               	movlw	low (__mediumconst shr (0+16))
 15882  01A80C  6EF8               	movwf	tblptru,c
 15883  01A80E                     	endif
 15884  01A80E  0008               	tblrd		*
 15885  01A810  50F5               	movf	tablat,w,c
 15886  01A812  0A3C               	xorlw	60
 15887  01A814  A4D8               	btfss	status,2,c
 15888  01A816  D09E               	goto	l15914
 15889                           
 15890                           ;stkvar	_p @ sp[(-2)+-4]
 15891  01A818  0EFA               	movlw	-6
 15892  01A81A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15893  01A820  0EFB               	movlw	-5
 15894  01A822  006F FF8F FFDA     	movff	plusw1,fsr2h
 15895  01A828  2ADE               	incf	postinc2,f,c
 15896  01A82A  0E00               	movlw	0
 15897  01A82C  22DD               	addwfc	postdec2,f,c
 15898                           
 15899                           ;stkvar	_i @ sp[(-2)+0]
 15900  01A82E  0EFE               	movlw	-2
 15901  01A830  6AE3               	clrf	plusw1,c
 15902  01A832  0EFF               	movlw	-1
 15903  01A834  6AE3               	clrf	plusw1,c
 15904  01A836  D04D               	goto	l15908
 15905  01A838                     l15904:
 15906                           
 15907                           ;stkvar	_i @ sp[(-2)+0]
 15908  01A838  0EFE               	movlw	-2
 15909  01A83A  006F FF8C  F034    	movff	plusw1,btemp+10
 15910  01A840  0EFF               	movlw	-1
 15911  01A842  006F FF8C  F035    	movff	plusw1,btemp+11
 15912                           
 15913                           ;stkvar	_p @ sp[(-2)+-4]
 15914  01A848  0EFA               	movlw	-6
 15915  01A84A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15916  01A850  0EFB               	movlw	-5
 15917  01A852  006F FF8F FFDA     	movff	plusw1,fsr2h
 15918  01A858  006F FF78  F032    	movff	postinc2,btemp+8
 15919  01A85E  006F FF74  F033    	movff	postdec2,btemp+9
 15920  01A864  5034               	movf	(btemp+10)^0,w,c
 15921  01A866  2632               	addwf	(btemp+8)^0,f,c
 15922  01A868  5035               	movf	(btemp+11)^0,w,c
 15923  01A86A  2233               	addwfc	(btemp+9)^0,f,c
 15924  01A86C  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 15925  01A872  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 15926  01A878                     	if	0	;tblptru may be non-zero
 15927  01A878                     	endif
 15928  01A878                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15929  01A878  0E00               	movlw	low (__mediumconst shr (0+16))
 15930  01A87A  6EF8               	movwf	tblptru,c
 15931  01A87C                     	endif
 15932                           
 15933                           ;stkvar	_i @ sp[(-2)+0]
 15934  01A87C  0EFE               	movlw	-2
 15935  01A87E  006F FF8C  F034    	movff	plusw1,btemp+10
 15936  01A884  0EFF               	movlw	-1
 15937  01A886  006F FF8C  F035    	movff	plusw1,btemp+11
 15938                           
 15939                           ;stkvar	_d @ sp[(-2)+-2]
 15940  01A88C  0EFC               	movlw	-4
 15941  01A88E  006F FF8C  F032    	movff	plusw1,btemp+8
 15942  01A894  0EFD               	movlw	-3
 15943  01A896  006F FF8C  F033    	movff	plusw1,btemp+9
 15944  01A89C  5034               	movf	(btemp+10)^0,w,c
 15945  01A89E  2432               	addwf	(btemp+8)^0,w,c
 15946  01A8A0  6ED9               	movwf	fsr2l,c
 15947  01A8A2  5035               	movf	(btemp+11)^0,w,c
 15948  01A8A4  2033               	addwfc	(btemp+9)^0,w,c
 15949  01A8A6  6EDA               	movwf	fsr2h,c
 15950  01A8A8  0008               	tblrd		*
 15951  01A8AA  006F FFD7 FFDF     	movff	tablat,indf2
 15952                           
 15953                           ;stkvar	_i @ sp[(-2)+0]
 15954  01A8B0  0EFE               	movlw	-2
 15955  01A8B2  50E3               	movf	plusw1,w,c
 15956  01A8B4  0F01               	addlw	1
 15957  01A8B6  6E2A               	movwf	btemp^0,c
 15958  01A8B8  0EFE               	movlw	-2
 15959  01A8BA  0060  F0AB  FFE3   	movff	btemp,plusw1
 15960  01A8C0  6A2A               	clrf	btemp^0,c
 15961  01A8C2  0EFF               	movlw	-1
 15962  01A8C4  50E3               	movf	plusw1,w,c
 15963  01A8C6  202A               	addwfc	btemp^0,w,c
 15964  01A8C8  6E2A               	movwf	btemp^0,c
 15965  01A8CA  0EFF               	movlw	-1
 15966  01A8CC  0060  F0AB  FFE3   	movff	btemp,plusw1
 15967  01A8D2                     l15908:
 15968                           
 15969                           ;stkvar	_i @ sp[(-2)+0]
 15970  01A8D2  0EFE               	movlw	-2
 15971  01A8D4  006F FF8C  F034    	movff	plusw1,btemp+10
 15972  01A8DA  0EFF               	movlw	-1
 15973  01A8DC  006F FF8C  F035    	movff	plusw1,btemp+11
 15974                           
 15975                           ;stkvar	_p @ sp[(-2)+-4]
 15976  01A8E2  0EFA               	movlw	-6
 15977  01A8E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 15978  01A8EA  0EFB               	movlw	-5
 15979  01A8EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 15980  01A8F2  006F FF78  F032    	movff	postinc2,btemp+8
 15981  01A8F8  006F FF74  F033    	movff	postdec2,btemp+9
 15982  01A8FE  5034               	movf	(btemp+10)^0,w,c
 15983  01A900  2632               	addwf	(btemp+8)^0,f,c
 15984  01A902  5035               	movf	(btemp+11)^0,w,c
 15985  01A904  2233               	addwfc	(btemp+9)^0,f,c
 15986  01A906  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 15987  01A90C  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 15988  01A912                     	if	0	;tblptru may be non-zero
 15989  01A912                     	endif
 15990  01A912                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15991  01A912  0E00               	movlw	low (__mediumconst shr (0+16))
 15992  01A914  6EF8               	movwf	tblptru,c
 15993  01A916                     	endif
 15994  01A916  0008               	tblrd		*
 15995  01A918  50F5               	movf	tablat,w,c
 15996  01A91A  0A3E               	xorlw	62
 15997  01A91C  B4D8               	btfsc	status,2,c
 15998  01A91E  D00E               	goto	u15380
 15999                           
 16000                           ;stkvar	_i @ sp[(-2)+0]
 16001  01A920  0EFF               	movlw	-1
 16002  01A922  BEE3               	btfsc	plusw1,7,c
 16003  01A924  D789               	goto	l15904
 16004  01A926  0EFF               	movlw	-1
 16005  01A928  50E3               	movf	plusw1,w,c
 16006  01A92A  E108               	bnz	u15380
 16007  01A92C  0EFE               	movlw	-2
 16008  01A92E  006F FF8C  F02A    	movff	plusw1,btemp
 16009  01A934  0E06               	movlw	6
 16010  01A936  5E2A               	subwf	btemp^0,f,c
 16011  01A938  A0D8               	btfss	status,0,c
 16012  01A93A  D77E               	goto	l15904
 16013  01A93C                     u15380:
 16014                           
 16015                           ;stkvar	_p @ sp[(-2)+-4]
 16016  01A93C  0EFA               	movlw	-6
 16017  01A93E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16018  01A944  0EFB               	movlw	-5
 16019  01A946  006F FF8F FFDA     	movff	plusw1,fsr2h
 16020  01A94C  2ADE               	incf	postinc2,f,c
 16021  01A94E  0E00               	movlw	0
 16022  01A950  22DD               	addwfc	postdec2,f,c
 16023  01A952  D098               	goto	u15400
 16024  01A954                     l15914:
 16025                           
 16026                           ;stkvar	_i @ sp[(-2)+0]
 16027  01A954  0EFE               	movlw	-2
 16028  01A956  6AE3               	clrf	plusw1,c
 16029  01A958  0EFF               	movlw	-1
 16030  01A95A  6AE3               	clrf	plusw1,c
 16031  01A95C  D04D               	goto	l15920
 16032  01A95E                     l15916:
 16033                           
 16034                           ;stkvar	_i @ sp[(-2)+0]
 16035  01A95E  0EFE               	movlw	-2
 16036  01A960  006F FF8C  F034    	movff	plusw1,btemp+10
 16037  01A966  0EFF               	movlw	-1
 16038  01A968  006F FF8C  F035    	movff	plusw1,btemp+11
 16039                           
 16040                           ;stkvar	_p @ sp[(-2)+-4]
 16041  01A96E  0EFA               	movlw	-6
 16042  01A970  006F FF8F FFD9     	movff	plusw1,fsr2l
 16043  01A976  0EFB               	movlw	-5
 16044  01A978  006F FF8F FFDA     	movff	plusw1,fsr2h
 16045  01A97E  006F FF78  F032    	movff	postinc2,btemp+8
 16046  01A984  006F FF74  F033    	movff	postdec2,btemp+9
 16047  01A98A  5034               	movf	(btemp+10)^0,w,c
 16048  01A98C  2632               	addwf	(btemp+8)^0,f,c
 16049  01A98E  5035               	movf	(btemp+11)^0,w,c
 16050  01A990  2233               	addwfc	(btemp+9)^0,f,c
 16051  01A992  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16052  01A998  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16053  01A99E                     	if	0	;tblptru may be non-zero
 16054  01A99E                     	endif
 16055  01A99E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16056  01A99E  0E00               	movlw	low (__mediumconst shr (0+16))
 16057  01A9A0  6EF8               	movwf	tblptru,c
 16058  01A9A2                     	endif
 16059                           
 16060                           ;stkvar	_i @ sp[(-2)+0]
 16061  01A9A2  0EFE               	movlw	-2
 16062  01A9A4  006F FF8C  F034    	movff	plusw1,btemp+10
 16063  01A9AA  0EFF               	movlw	-1
 16064  01A9AC  006F FF8C  F035    	movff	plusw1,btemp+11
 16065                           
 16066                           ;stkvar	_d @ sp[(-2)+-2]
 16067  01A9B2  0EFC               	movlw	-4
 16068  01A9B4  006F FF8C  F032    	movff	plusw1,btemp+8
 16069  01A9BA  0EFD               	movlw	-3
 16070  01A9BC  006F FF8C  F033    	movff	plusw1,btemp+9
 16071  01A9C2  5034               	movf	(btemp+10)^0,w,c
 16072  01A9C4  2432               	addwf	(btemp+8)^0,w,c
 16073  01A9C6  6ED9               	movwf	fsr2l,c
 16074  01A9C8  5035               	movf	(btemp+11)^0,w,c
 16075  01A9CA  2033               	addwfc	(btemp+9)^0,w,c
 16076  01A9CC  6EDA               	movwf	fsr2h,c
 16077  01A9CE  0008               	tblrd		*
 16078  01A9D0  006F FFD7 FFDF     	movff	tablat,indf2
 16079                           
 16080                           ;stkvar	_i @ sp[(-2)+0]
 16081  01A9D6  0EFE               	movlw	-2
 16082  01A9D8  50E3               	movf	plusw1,w,c
 16083  01A9DA  0F01               	addlw	1
 16084  01A9DC  6E2A               	movwf	btemp^0,c
 16085  01A9DE  0EFE               	movlw	-2
 16086  01A9E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 16087  01A9E6  6A2A               	clrf	btemp^0,c
 16088  01A9E8  0EFF               	movlw	-1
 16089  01A9EA  50E3               	movf	plusw1,w,c
 16090  01A9EC  202A               	addwfc	btemp^0,w,c
 16091  01A9EE  6E2A               	movwf	btemp^0,c
 16092  01A9F0  0EFF               	movlw	-1
 16093  01A9F2  0060  F0AB  FFE3   	movff	btemp,plusw1
 16094  01A9F8                     l15920:
 16095  01A9F8  0E9F               	movlw	159
 16096  01A9FA  6E34               	movwf	(btemp+10)^0,c
 16097  01A9FC  0EFF               	movlw	255
 16098  01A9FE  6E35               	movwf	(btemp+11)^0,c
 16099                           
 16100                           ;stkvar	_i @ sp[(-2)+0]
 16101  01AA00  0EFE               	movlw	-2
 16102  01AA02  006F FF8C  F032    	movff	plusw1,btemp+8
 16103  01AA08  0EFF               	movlw	-1
 16104  01AA0A  006F FF8C  F033    	movff	plusw1,btemp+9
 16105                           
 16106                           ;stkvar	_p @ sp[(-2)+-4]
 16107  01AA10  0EFA               	movlw	-6
 16108  01AA12  006F FF8F FFD9     	movff	plusw1,fsr2l
 16109  01AA18  0EFB               	movlw	-5
 16110  01AA1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16111  01AA20  006F FF78  F030    	movff	postinc2,btemp+6
 16112  01AA26  006F FF74  F031    	movff	postdec2,btemp+7
 16113  01AA2C  5032               	movf	(btemp+8)^0,w,c
 16114  01AA2E  2630               	addwf	(btemp+6)^0,f,c
 16115  01AA30  5033               	movf	(btemp+9)^0,w,c
 16116  01AA32  2231               	addwfc	(btemp+7)^0,f,c
 16117  01AA34  0060  F0C3  FFF6   	movff	btemp+6,tblptrl
 16118  01AA3A  0060  F0C7  FFF7   	movff	btemp+7,tblptrh
 16119  01AA40                     	if	0	;tblptru may be non-zero
 16120  01AA40                     	endif
 16121  01AA40                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16122  01AA40  0E00               	movlw	low (__mediumconst shr (0+16))
 16123  01AA42  6EF8               	movwf	tblptru,c
 16124  01AA44                     	endif
 16125  01AA44  0008               	tblrd		*
 16126  01AA46  50F5               	movf	tablat,w,c
 16127  01AA48  6E32               	movwf	(btemp+8)^0,c
 16128  01AA4A  6A33               	clrf	(btemp+9)^0,c
 16129  01AA4C  0E20               	movlw	32
 16130  01AA4E  1232               	iorwf	(btemp+8)^0,f,c
 16131  01AA50  0E00               	movlw	0
 16132  01AA52  1233               	iorwf	(btemp+9)^0,f,c
 16133  01AA54  5034               	movf	(btemp+10)^0,w,c
 16134  01AA56  2632               	addwf	(btemp+8)^0,f,c
 16135  01AA58  5035               	movf	(btemp+11)^0,w,c
 16136  01AA5A  2233               	addwfc	(btemp+9)^0,f,c
 16137  01AA5C  5033               	movf	(btemp+9)^0,w,c
 16138  01AA5E  E112               	bnz	l15924
 16139  01AA60  0E1A               	movlw	26
 16140  01AA62  5C32               	subwf	(btemp+8)^0,w,c
 16141  01AA64  B0D8               	btfsc	status,0,c
 16142  01AA66  D00E               	goto	u15400
 16143                           
 16144                           ;stkvar	_i @ sp[(-2)+0]
 16145  01AA68  0EFF               	movlw	-1
 16146  01AA6A  BEE3               	btfsc	plusw1,7,c
 16147  01AA6C  D778               	goto	l15916
 16148  01AA6E  0EFF               	movlw	-1
 16149  01AA70  50E3               	movf	plusw1,w,c
 16150  01AA72  E108               	bnz	u15400
 16151  01AA74  0EFE               	movlw	-2
 16152  01AA76  006F FF8C  F02A    	movff	plusw1,btemp
 16153  01AA7C  0E06               	movlw	6
 16154  01AA7E  5E2A               	subwf	btemp^0,f,c
 16155  01AA80  A0D8               	btfss	status,0,c
 16156  01AA82  D76D               	goto	l15916
 16157  01AA84                     u15400:
 16158  01AA84                     l15924:
 16159                           
 16160                           ;stkvar	_i @ sp[(-2)+0]
 16161  01AA84  0EFE               	movlw	-2
 16162  01AA86  006F FF8C  F034    	movff	plusw1,btemp+10
 16163  01AA8C  0EFF               	movlw	-1
 16164  01AA8E  006F FF8C  F035    	movff	plusw1,btemp+11
 16165                           
 16166                           ;stkvar	_p @ sp[(-2)+-4]
 16167  01AA94  0EFA               	movlw	-6
 16168  01AA96  006F FF8F FFD9     	movff	plusw1,fsr2l
 16169  01AA9C  0EFB               	movlw	-5
 16170  01AA9E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16171  01AAA4  5034               	movf	(btemp+10)^0,w,c
 16172  01AAA6  26DE               	addwf	postinc2,f,c
 16173  01AAA8  5035               	movf	(btemp+11)^0,w,c
 16174  01AAAA  22DD               	addwfc	postdec2,f,c
 16175                           
 16176                           ;stkvar	_i @ sp[(-2)+0]
 16177  01AAAC  0EFE               	movlw	-2
 16178  01AAAE  006F FF8C  F034    	movff	plusw1,btemp+10
 16179  01AAB4  0EFF               	movlw	-1
 16180  01AAB6  006F FF8C  F035    	movff	plusw1,btemp+11
 16181                           
 16182                           ;stkvar	_d @ sp[(-2)+-2]
 16183  01AABC  0EFC               	movlw	-4
 16184  01AABE  006F FF8C  F032    	movff	plusw1,btemp+8
 16185  01AAC4  0EFD               	movlw	-3
 16186  01AAC6  006F FF8C  F033    	movff	plusw1,btemp+9
 16187  01AACC  5034               	movf	(btemp+10)^0,w,c
 16188  01AACE  2432               	addwf	(btemp+8)^0,w,c
 16189  01AAD0  6ED9               	movwf	fsr2l,c
 16190  01AAD2  5035               	movf	(btemp+11)^0,w,c
 16191  01AAD4  2033               	addwfc	(btemp+9)^0,w,c
 16192  01AAD6  6EDA               	movwf	fsr2h,c
 16193  01AAD8  0E00               	movlw	0
 16194  01AADA  6EDF               	movwf	indf2,c
 16195                           
 16196                           ; _getname: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16197  01AADC  0EFA               	movlw	250
 16198  01AADE  26E1               	addwf	fsr1l,f,c
 16199  01AAE0  0EFF               	movlw	255
 16200  01AAE2  22E2               	addwfc	fsr1h,f,c
 16201  01AAE4  0012               	return		;funcret
 16202  01AAE6                     __end_of_getname:
 16203                           	opt callstack 0
 16204                           
 16205 ;; *************** function ___secs_to_tm *****************
 16206 ;; Defined at:
 16207 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__secs_to_tm.c"
 16208 ;; Parameters:    Size  Location     Type
 16209 ;;  t               8  [STACK] long long 
 16210 ;;  tm              2  [STACK] PTR struct tm
 16211 ;;		 -> localtime@tm(24), 
 16212 ;; Auto vars:     Size  Location     Type
 16213 ;;  years           8  [STACK] long long 
 16214 ;;  days            8  [STACK] long long 
 16215 ;;  secs            8  [STACK] long long 
 16216 ;;  remdays         4  [STACK] long 
 16217 ;;  q_cycles        4  [STACK] long 
 16218 ;;  c_cycles        4  [STACK] long 
 16219 ;;  remyears        4  [STACK] long 
 16220 ;;  remsecs         4  [STACK] long 
 16221 ;;  qc_cycles       4  [STACK] long 
 16222 ;;  months          2  [STACK] int 
 16223 ;;  leap            2  [STACK] int 
 16224 ;;  yday            2  [STACK] int 
 16225 ;;  wday            2  [STACK] int 
 16226 ;; Return value:  Size  Location     Type
 16227 ;;                  4  [STACK] long 
 16228 ;; Registers used:
 16229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru
 16230 ;; Tracked objects:
 16231 ;;		On entry : 0/39
 16232 ;;		On exit  : 0/0
 16233 ;;		Unchanged: 0/0
 16234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16239 ;;Total ram usage:        0 bytes
 16240 ;; Hardware stack levels used:    1
 16241 ;; Hardware stack levels required when called:   16
 16242 ;; This function calls:
 16243 ;;		___aldiv
 16244 ;;		___almod
 16245 ;;		___aodiv
 16246 ;;		___aomod
 16247 ;;		___lmul
 16248 ;;		___omul
 16249 ;; This function is called by:
 16250 ;;		___localtime_r
 16251 ;; This function uses a reentrant model
 16252 ;;
 16253                           
 16254                           	psect	text47
 16255  012684                     __ptext47:
 16256                           	opt callstack 0
 16257  012684                     ___secs_to_tm:
 16258                           	opt callstack 0
 16259                           
 16260                           ; autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16261  012684  0E39               	movlw	57
 16262  012686  26E1               	addwf	fsr1l,f,c
 16263  012688  0E00               	movlw	0
 16264  01268A  22E2               	addwfc	fsr1h,f,c
 16265                           
 16266                           ;stkvar	_t @ sp[(-57)+-8]
 16267                           
 16268                           ;incstack = 0
 16269  01268C  0EC6               	movlw	-58
 16270  01268E  AEE3               	btfss	plusw1,7,c
 16271  012690  D026               	goto	u15990
 16272  012692  0EC1               	movlw	-63
 16273  012694  006F FF8C  F02A    	movff	plusw1,btemp
 16274  01269A  0E80               	movlw	128
 16275  01269C  5E2A               	subwf	btemp^0,f,c
 16276  01269E  0EC2               	movlw	-62
 16277  0126A0  006F FF8C  F02A    	movff	plusw1,btemp
 16278  0126A6  0EBD               	movlw	189
 16279  0126A8  5A2A               	subwfb	btemp^0,f,c
 16280  0126AA  0EC3               	movlw	-61
 16281  0126AC  006F FF8C  F02A    	movff	plusw1,btemp
 16282  0126B2  0E0E               	movlw	14
 16283  0126B4  5A2A               	subwfb	btemp^0,f,c
 16284  0126B6  0EC4               	movlw	-60
 16285  0126B8  006F FF8C  F02A    	movff	plusw1,btemp
 16286  0126BE  0EFF               	movlw	255
 16287  0126C0  5A2A               	subwfb	btemp^0,f,c
 16288  0126C2  0EC5               	movlw	-59
 16289  0126C4  006F FF8C  F02A    	movff	plusw1,btemp
 16290  0126CA  0EFF               	movlw	255
 16291  0126CC  5A2A               	subwfb	btemp^0,f,c
 16292  0126CE  0EC6               	movlw	-58
 16293  0126D0  006F FF8C  F02A    	movff	plusw1,btemp
 16294  0126D6  0EFF               	movlw	255
 16295  0126D8  5A2A               	subwfb	btemp^0,f,c
 16296  0126DA  A0D8               	btfss	status,0,c
 16297  0126DC  D028               	goto	u16000
 16298  0126DE                     u15990:
 16299                           
 16300                           ;stkvar	_t @ sp[(-57)+-8]
 16301  0126DE  0EC6               	movlw	-58
 16302  0126E0  BEE3               	btfsc	plusw1,7,c
 16303  0126E2  D02F               	goto	l16354
 16304  0126E4  0EC6               	movlw	-58
 16305  0126E6  50E3               	movf	plusw1,w,c
 16306  0126E8  E122               	bnz	u16000
 16307  0126EA  0EC5               	movlw	-59
 16308  0126EC  50E3               	movf	plusw1,w,c
 16309  0126EE  E11F               	bnz	u16000
 16310  0126F0  0EC4               	movlw	-60
 16311  0126F2  50E3               	movf	plusw1,w,c
 16312  0126F4  E11C               	bnz	u16000
 16313  0126F6  0EBF               	movlw	-65
 16314  0126F8  04E3               	decf	plusw1,w,c
 16315  0126FA  0EC0               	movlw	-64
 16316  0126FC  006F FF8C  F02A    	movff	plusw1,btemp
 16317  012702  0E7B               	movlw	123
 16318  012704  5A2A               	subwfb	btemp^0,f,c
 16319  012706  0EC1               	movlw	-63
 16320  012708  006F FF8C  F02A    	movff	plusw1,btemp
 16321  01270E  0E9D               	movlw	157
 16322  012710  5A2A               	subwfb	btemp^0,f,c
 16323  012712  0EC2               	movlw	-62
 16324  012714  006F FF8C  F02A    	movff	plusw1,btemp
 16325  01271A  0E40               	movlw	64
 16326  01271C  5A2A               	subwfb	btemp^0,f,c
 16327  01271E  0EC3               	movlw	-61
 16328  012720  006F FF8C  F02A    	movff	plusw1,btemp
 16329  012726  0EF1               	movlw	241
 16330  012728  5A2A               	subwfb	btemp^0,f,c
 16331  01272A  A0D8               	btfss	status,0,c
 16332  01272C  D00A               	goto	l16354
 16333  01272E                     u16000:
 16334  01272E  0EFF               	movlw	255
 16335  012730  6E2A               	movwf	btemp^0,c
 16336  012732  0EFF               	movlw	255
 16337  012734  6E2B               	movwf	(btemp+1)^0,c
 16338  012736  0EFF               	movlw	255
 16339  012738  6E2C               	movwf	(btemp+2)^0,c
 16340  01273A  0EFF               	movlw	255
 16341  01273C  6E2D               	movwf	(btemp+3)^0,c
 16342  01273E  EFA6  F09B         	goto	l3833
 16343  012742                     l16354:
 16344                           
 16345                           ;stkvar	_t @ sp[(-57)+-8]
 16346  012742  0EBF               	movlw	-65
 16347  012744  50E3               	movf	plusw1,w,c
 16348  012746  0F80               	addlw	128
 16349  012748  6E3A               	movwf	(btemp+16)^0,c
 16350  01274A  0EC0               	movlw	-64
 16351  01274C  006F FF8C  F03B    	movff	plusw1,btemp+17
 16352  012752  0EA2               	movlw	162
 16353  012754  223B               	addwfc	(btemp+17)^0,f,c
 16354  012756  0EC1               	movlw	-63
 16355  012758  006F FF8C  F03C    	movff	plusw1,btemp+18
 16356  01275E  0E43               	movlw	67
 16357  012760  223C               	addwfc	(btemp+18)^0,f,c
 16358  012762  0EC2               	movlw	-62
 16359  012764  006F FF8C  F03D    	movff	plusw1,btemp+19
 16360  01276A  0EC7               	movlw	199
 16361  01276C  223D               	addwfc	(btemp+19)^0,f,c
 16362  01276E  0EC3               	movlw	-61
 16363  012770  006F FF8C  F03E    	movff	plusw1,btemp+20
 16364  012776  0EFF               	movlw	255
 16365  012778  223E               	addwfc	(btemp+20)^0,f,c
 16366  01277A  0EC4               	movlw	-60
 16367  01277C  006F FF8C  F03F    	movff	plusw1,btemp+21
 16368  012782  0EFF               	movlw	255
 16369  012784  223F               	addwfc	(btemp+21)^0,f,c
 16370  012786  0EC5               	movlw	-59
 16371  012788  006F FF8C  F040    	movff	plusw1,btemp+22
 16372  01278E  0EFF               	movlw	255
 16373  012790  2240               	addwfc	(btemp+22)^0,f,c
 16374  012792  0EC6               	movlw	-58
 16375  012794  006F FF8C  F041    	movff	plusw1,btemp+23
 16376  01279A  0EFF               	movlw	255
 16377  01279C  2241               	addwfc	(btemp+23)^0,f,c
 16378                           
 16379                           ;stkvar	_secs @ sp[(-57)+17]
 16380  01279E  0ED8               	movlw	-40
 16381  0127A0  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 16382  0127A6  0ED9               	movlw	-39
 16383  0127A8  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 16384  0127AE  0EDA               	movlw	-38
 16385  0127B0  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 16386  0127B6  0EDB               	movlw	-37
 16387  0127B8  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 16388  0127BE  0EDC               	movlw	-36
 16389  0127C0  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 16390  0127C6  0EDD               	movlw	-35
 16391  0127C8  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 16392  0127CE  0EDE               	movlw	-34
 16393  0127D0  0060  F103  FFE3   	movff	btemp+22,plusw1
 16394  0127D6  0EDF               	movlw	-33
 16395  0127D8  0060  F107  FFE3   	movff	btemp+23,plusw1
 16396  0127DE  0E80               	movlw	128
 16397  0127E0  6EE6               	movwf	postinc1,c
 16398  0127E2  0E51               	movlw	81
 16399  0127E4  6EE6               	movwf	postinc1,c
 16400  0127E6  0E01               	movlw	1
 16401  0127E8  6EE6               	movwf	postinc1,c
 16402  0127EA  0E00               	movlw	0
 16403  0127EC  6EE6               	movwf	postinc1,c
 16404  0127EE  0E00               	movlw	0
 16405  0127F0  6EE6               	movwf	postinc1,c
 16406  0127F2  0E00               	movlw	0
 16407  0127F4  6EE6               	movwf	postinc1,c
 16408  0127F6  0E00               	movlw	0
 16409  0127F8  6EE6               	movwf	postinc1,c
 16410  0127FA  0E00               	movlw	0
 16411  0127FC  6EE6               	movwf	postinc1,c
 16412                           
 16413                           ;stkvar	_secs @ sp[(-65)+17]
 16414  0127FE  50E1               	movf	fsr1l,w,c
 16415  012800  0FD0               	addlw	-48
 16416  012802  6ED9               	movwf	fsr2l,c
 16417  012804  50E2               	movf	fsr1h,w,c
 16418  012806  6EDA               	movwf	fsr2h,c
 16419  012808  0EFF               	movlw	255
 16420  01280A  22DA               	addwfc	fsr2h,f,c
 16421  01280C  006F FF7B FFE6     	movff	postinc2,postinc1
 16422  012812  006F FF7B FFE6     	movff	postinc2,postinc1
 16423  012818  006F FF7B FFE6     	movff	postinc2,postinc1
 16424  01281E  006F FF7B FFE6     	movff	postinc2,postinc1
 16425  012824  006F FF7B FFE6     	movff	postinc2,postinc1
 16426  01282A  006F FF7B FFE6     	movff	postinc2,postinc1
 16427  012830  006F FF7B FFE6     	movff	postinc2,postinc1
 16428  012836  006F FF7B FFE6     	movff	postinc2,postinc1
 16429  01283C  EC34  F0DC         	call	___aodiv	;wreg free
 16430  012840  52E5               	movf	postdec1,f,c
 16431  012842  006F FF9C  F041    	movff	indf1,btemp+23
 16432  012848  52E5               	movf	postdec1,f,c
 16433  01284A  006F FF9C  F040    	movff	indf1,btemp+22
 16434  012850  52E5               	movf	postdec1,f,c
 16435  012852  006F FF9C  F03F    	movff	indf1,btemp+21
 16436  012858  52E5               	movf	postdec1,f,c
 16437  01285A  006F FF9C  F03E    	movff	indf1,btemp+20
 16438  012860  52E5               	movf	postdec1,f,c
 16439  012862  006F FF9C  F03D    	movff	indf1,btemp+19
 16440  012868  52E5               	movf	postdec1,f,c
 16441  01286A  006F FF9C  F03C    	movff	indf1,btemp+18
 16442  012870  52E5               	movf	postdec1,f,c
 16443  012872  006F FF9C  F03B    	movff	indf1,btemp+17
 16444  012878  52E5               	movf	postdec1,f,c
 16445  01287A  006F FF9C  F03A    	movff	indf1,btemp+16
 16446  012880  0EF8               	movlw	248
 16447  012882  26E1               	addwf	fsr1l,f,c
 16448  012884  0EFF               	movlw	255
 16449  012886  22E2               	addwfc	fsr1h,f,c
 16450                           
 16451                           ;stkvar	_days @ sp[(-57)+9]
 16452  012888  0ED0               	movlw	-48
 16453  01288A  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 16454  012890  0ED1               	movlw	-47
 16455  012892  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 16456  012898  0ED2               	movlw	-46
 16457  01289A  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 16458  0128A0  0ED3               	movlw	-45
 16459  0128A2  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 16460  0128A8  0ED4               	movlw	-44
 16461  0128AA  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 16462  0128B0  0ED5               	movlw	-43
 16463  0128B2  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 16464  0128B8  0ED6               	movlw	-42
 16465  0128BA  0060  F103  FFE3   	movff	btemp+22,plusw1
 16466  0128C0  0ED7               	movlw	-41
 16467  0128C2  0060  F107  FFE3   	movff	btemp+23,plusw1
 16468  0128C8  0E80               	movlw	128
 16469  0128CA  6EE6               	movwf	postinc1,c
 16470  0128CC  0E51               	movlw	81
 16471  0128CE  6EE6               	movwf	postinc1,c
 16472  0128D0  0E01               	movlw	1
 16473  0128D2  6EE6               	movwf	postinc1,c
 16474  0128D4  0E00               	movlw	0
 16475  0128D6  6EE6               	movwf	postinc1,c
 16476  0128D8  0E00               	movlw	0
 16477  0128DA  6EE6               	movwf	postinc1,c
 16478  0128DC  0E00               	movlw	0
 16479  0128DE  6EE6               	movwf	postinc1,c
 16480  0128E0  0E00               	movlw	0
 16481  0128E2  6EE6               	movwf	postinc1,c
 16482  0128E4  0E00               	movlw	0
 16483  0128E6  6EE6               	movwf	postinc1,c
 16484                           
 16485                           ;stkvar	_secs @ sp[(-65)+17]
 16486  0128E8  50E1               	movf	fsr1l,w,c
 16487  0128EA  0FD0               	addlw	-48
 16488  0128EC  6ED9               	movwf	fsr2l,c
 16489  0128EE  50E2               	movf	fsr1h,w,c
 16490  0128F0  6EDA               	movwf	fsr2h,c
 16491  0128F2  0EFF               	movlw	255
 16492  0128F4  22DA               	addwfc	fsr2h,f,c
 16493  0128F6  006F FF7B FFE6     	movff	postinc2,postinc1
 16494  0128FC  006F FF7B FFE6     	movff	postinc2,postinc1
 16495  012902  006F FF7B FFE6     	movff	postinc2,postinc1
 16496  012908  006F FF7B FFE6     	movff	postinc2,postinc1
 16497  01290E  006F FF7B FFE6     	movff	postinc2,postinc1
 16498  012914  006F FF7B FFE6     	movff	postinc2,postinc1
 16499  01291A  006F FF7B FFE6     	movff	postinc2,postinc1
 16500  012920  006F FF7B FFE6     	movff	postinc2,postinc1
 16501  012926  EC04  F0E1         	call	___aomod	;wreg free
 16502  01292A  52E5               	movf	postdec1,f,c
 16503  01292C  006F FF9C  F041    	movff	indf1,btemp+23
 16504  012932  52E5               	movf	postdec1,f,c
 16505  012934  006F FF9C  F040    	movff	indf1,btemp+22
 16506  01293A  52E5               	movf	postdec1,f,c
 16507  01293C  006F FF9C  F03F    	movff	indf1,btemp+21
 16508  012942  52E5               	movf	postdec1,f,c
 16509  012944  006F FF9C  F03E    	movff	indf1,btemp+20
 16510  01294A  52E5               	movf	postdec1,f,c
 16511  01294C  006F FF9C  F03D    	movff	indf1,btemp+19
 16512  012952  52E5               	movf	postdec1,f,c
 16513  012954  006F FF9C  F03C    	movff	indf1,btemp+18
 16514  01295A  52E5               	movf	postdec1,f,c
 16515  01295C  006F FF9C  F03B    	movff	indf1,btemp+17
 16516  012962  52E5               	movf	postdec1,f,c
 16517  012964  006F FF9C  F03A    	movff	indf1,btemp+16
 16518  01296A  0EF8               	movlw	248
 16519  01296C  26E1               	addwf	fsr1l,f,c
 16520  01296E  0EFF               	movlw	255
 16521  012970  22E2               	addwfc	fsr1h,f,c
 16522  012972  0060  F0E8  F032   	movff	btemp+16,btemp+8
 16523  012978  0060  F0EC  F033   	movff	btemp+17,btemp+9
 16524  01297E  0060  F0F0  F034   	movff	btemp+18,btemp+10
 16525  012984  0060  F0F4  F035   	movff	btemp+19,btemp+11
 16526                           
 16527                           ;stkvar	_remsecs @ sp[(-57)+41]
 16528  01298A  0EF0               	movlw	-16
 16529  01298C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 16530  012992  0EF1               	movlw	-15
 16531  012994  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 16532  01299A  0EF2               	movlw	-14
 16533  01299C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16534  0129A2  0EF3               	movlw	-13
 16535  0129A4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16536                           
 16537                           ;stkvar	_remsecs @ sp[(-57)+41]
 16538  0129AA  0EF3               	movlw	-13
 16539  0129AC  AEE3               	btfss	plusw1,7,c
 16540  0129AE  D01F               	goto	l16366
 16541                           
 16542                           ;stkvar	_remsecs @ sp[(-57)+41]
 16543  0129B0  50E1               	movf	fsr1l,w,c
 16544  0129B2  0FF0               	addlw	-16
 16545  0129B4  6ED9               	movwf	fsr2l,c
 16546  0129B6  50E2               	movf	fsr1h,w,c
 16547  0129B8  6EDA               	movwf	fsr2h,c
 16548  0129BA  0EFF               	movlw	255
 16549  0129BC  22DA               	addwfc	fsr2h,f,c
 16550  0129BE  0E80               	movlw	128
 16551  0129C0  26DE               	addwf	postinc2,f,c
 16552  0129C2  0E51               	movlw	81
 16553  0129C4  22DE               	addwfc	postinc2,f,c
 16554  0129C6  0E01               	movlw	1
 16555  0129C8  22DE               	addwfc	postinc2,f,c
 16556  0129CA  0E00               	movlw	0
 16557  0129CC  22DE               	addwfc	postinc2,f,c
 16558                           
 16559                           ;stkvar	_days @ sp[(-57)+9]
 16560  0129CE  50E1               	movf	fsr1l,w,c
 16561  0129D0  0FD0               	addlw	-48
 16562  0129D2  6ED9               	movwf	fsr2l,c
 16563  0129D4  50E2               	movf	fsr1h,w,c
 16564  0129D6  6EDA               	movwf	fsr2h,c
 16565  0129D8  0EFF               	movlw	255
 16566  0129DA  22DA               	addwfc	fsr2h,f,c
 16567  0129DC  06DE               	decf	postinc2,f,c
 16568  0129DE  0E00               	movlw	0
 16569  0129E0  5ADE               	subwfb	postinc2,f,c
 16570  0129E2  5ADE               	subwfb	postinc2,f,c
 16571  0129E4  5ADE               	subwfb	postinc2,f,c
 16572  0129E6  5ADE               	subwfb	postinc2,f,c
 16573  0129E8  5ADE               	subwfb	postinc2,f,c
 16574  0129EA  5ADE               	subwfb	postinc2,f,c
 16575  0129EC  5ADE               	subwfb	postinc2,f,c
 16576  0129EE                     l16366:
 16577  0129EE  0E07               	movlw	7
 16578  0129F0  6EE6               	movwf	postinc1,c
 16579  0129F2  0E00               	movlw	0
 16580  0129F4  6EE6               	movwf	postinc1,c
 16581  0129F6  0E00               	movlw	0
 16582  0129F8  6EE6               	movwf	postinc1,c
 16583  0129FA  0E00               	movlw	0
 16584  0129FC  6EE6               	movwf	postinc1,c
 16585  0129FE  0E00               	movlw	0
 16586  012A00  6EE6               	movwf	postinc1,c
 16587  012A02  0E00               	movlw	0
 16588  012A04  6EE6               	movwf	postinc1,c
 16589  012A06  0E00               	movlw	0
 16590  012A08  6EE6               	movwf	postinc1,c
 16591  012A0A  0E00               	movlw	0
 16592  012A0C  6EE6               	movwf	postinc1,c
 16593                           
 16594                           ;stkvar	_days @ sp[(-65)+9]
 16595  012A0E  0EC8               	movlw	-56
 16596  012A10  50E3               	movf	plusw1,w,c
 16597  012A12  0F03               	addlw	3
 16598  012A14  6E3A               	movwf	(btemp+16)^0,c
 16599  012A16  0EC9               	movlw	-55
 16600  012A18  006F FF8C  F03B    	movff	plusw1,btemp+17
 16601  012A1E  0E00               	movlw	0
 16602  012A20  223B               	addwfc	(btemp+17)^0,f,c
 16603  012A22  0ECA               	movlw	-54
 16604  012A24  006F FF8C  F03C    	movff	plusw1,btemp+18
 16605  012A2A  0E00               	movlw	0
 16606  012A2C  223C               	addwfc	(btemp+18)^0,f,c
 16607  012A2E  0ECB               	movlw	-53
 16608  012A30  006F FF8C  F03D    	movff	plusw1,btemp+19
 16609  012A36  0E00               	movlw	0
 16610  012A38  223D               	addwfc	(btemp+19)^0,f,c
 16611  012A3A  0ECC               	movlw	-52
 16612  012A3C  006F FF8C  F03E    	movff	plusw1,btemp+20
 16613  012A42  0E00               	movlw	0
 16614  012A44  223E               	addwfc	(btemp+20)^0,f,c
 16615  012A46  0ECD               	movlw	-51
 16616  012A48  006F FF8C  F03F    	movff	plusw1,btemp+21
 16617  012A4E  0E00               	movlw	0
 16618  012A50  223F               	addwfc	(btemp+21)^0,f,c
 16619  012A52  0ECE               	movlw	-50
 16620  012A54  006F FF8C  F040    	movff	plusw1,btemp+22
 16621  012A5A  0E00               	movlw	0
 16622  012A5C  2240               	addwfc	(btemp+22)^0,f,c
 16623  012A5E  0ECF               	movlw	-49
 16624  012A60  006F FF8C  F041    	movff	plusw1,btemp+23
 16625  012A66  0E00               	movlw	0
 16626  012A68  2241               	addwfc	(btemp+23)^0,f,c
 16627  012A6A  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 16628  012A70  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 16629  012A76  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 16630  012A7C  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 16631  012A82  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 16632  012A88  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 16633  012A8E  0060  F103  FFE6   	movff	btemp+22,postinc1
 16634  012A94  0060  F107  FFE6   	movff	btemp+23,postinc1
 16635  012A9A  EC04  F0E1         	call	___aomod	;wreg free
 16636  012A9E  52E5               	movf	postdec1,f,c
 16637  012AA0  006F FF9C  F041    	movff	indf1,btemp+23
 16638  012AA6  52E5               	movf	postdec1,f,c
 16639  012AA8  006F FF9C  F040    	movff	indf1,btemp+22
 16640  012AAE  52E5               	movf	postdec1,f,c
 16641  012AB0  006F FF9C  F03F    	movff	indf1,btemp+21
 16642  012AB6  52E5               	movf	postdec1,f,c
 16643  012AB8  006F FF9C  F03E    	movff	indf1,btemp+20
 16644  012ABE  52E5               	movf	postdec1,f,c
 16645  012AC0  006F FF9C  F03D    	movff	indf1,btemp+19
 16646  012AC6  52E5               	movf	postdec1,f,c
 16647  012AC8  006F FF9C  F03C    	movff	indf1,btemp+18
 16648  012ACE  52E5               	movf	postdec1,f,c
 16649  012AD0  006F FF9C  F03B    	movff	indf1,btemp+17
 16650  012AD6  52E5               	movf	postdec1,f,c
 16651  012AD8  006F FF9C  F03A    	movff	indf1,btemp+16
 16652  012ADE  0EF8               	movlw	248
 16653  012AE0  26E1               	addwf	fsr1l,f,c
 16654  012AE2  0EFF               	movlw	255
 16655  012AE4  22E2               	addwfc	fsr1h,f,c
 16656  012AE6  0060  F0E8  F034   	movff	btemp+16,btemp+10
 16657  012AEC  0060  F0EC  F035   	movff	btemp+17,btemp+11
 16658                           
 16659                           ;stkvar	_wday @ sp[(-57)+55]
 16660  012AF2  0EFE               	movlw	-2
 16661  012AF4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16662  012AFA  0EFF               	movlw	-1
 16663  012AFC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16664                           
 16665                           ;stkvar	_wday @ sp[(-57)+55]
 16666  012B02  0EFF               	movlw	-1
 16667  012B04  AEE3               	btfss	plusw1,7,c
 16668  012B06  D011               	goto	l16372
 16669                           
 16670                           ;stkvar	_wday @ sp[(-57)+55]
 16671  012B08  0EFE               	movlw	-2
 16672  012B0A  50E3               	movf	plusw1,w,c
 16673  012B0C  0F07               	addlw	7
 16674  012B0E  6E2A               	movwf	btemp^0,c
 16675  012B10  0EFE               	movlw	-2
 16676  012B12  0060  F0AB  FFE3   	movff	btemp,plusw1
 16677  012B18  6A2A               	clrf	btemp^0,c
 16678  012B1A  0EFF               	movlw	-1
 16679  012B1C  50E3               	movf	plusw1,w,c
 16680  012B1E  202A               	addwfc	btemp^0,w,c
 16681  012B20  6E2A               	movwf	btemp^0,c
 16682  012B22  0EFF               	movlw	-1
 16683  012B24  0060  F0AB  FFE3   	movff	btemp,plusw1
 16684  012B2A                     l16372:
 16685  012B2A  0EB1               	movlw	177
 16686  012B2C  6EE6               	movwf	postinc1,c
 16687  012B2E  0E3A               	movlw	58
 16688  012B30  6EE6               	movwf	postinc1,c
 16689  012B32  0E02               	movlw	2
 16690  012B34  6EE6               	movwf	postinc1,c
 16691  012B36  0E00               	movlw	0
 16692  012B38  6EE6               	movwf	postinc1,c
 16693  012B3A  0E00               	movlw	0
 16694  012B3C  6EE6               	movwf	postinc1,c
 16695  012B3E  0E00               	movlw	0
 16696  012B40  6EE6               	movwf	postinc1,c
 16697  012B42  0E00               	movlw	0
 16698  012B44  6EE6               	movwf	postinc1,c
 16699  012B46  0E00               	movlw	0
 16700  012B48  6EE6               	movwf	postinc1,c
 16701                           
 16702                           ;stkvar	_days @ sp[(-65)+9]
 16703  012B4A  50E1               	movf	fsr1l,w,c
 16704  012B4C  0FC8               	addlw	-56
 16705  012B4E  6ED9               	movwf	fsr2l,c
 16706  012B50  50E2               	movf	fsr1h,w,c
 16707  012B52  6EDA               	movwf	fsr2h,c
 16708  012B54  0EFF               	movlw	255
 16709  012B56  22DA               	addwfc	fsr2h,f,c
 16710  012B58  006F FF7B FFE6     	movff	postinc2,postinc1
 16711  012B5E  006F FF7B FFE6     	movff	postinc2,postinc1
 16712  012B64  006F FF7B FFE6     	movff	postinc2,postinc1
 16713  012B6A  006F FF7B FFE6     	movff	postinc2,postinc1
 16714  012B70  006F FF7B FFE6     	movff	postinc2,postinc1
 16715  012B76  006F FF7B FFE6     	movff	postinc2,postinc1
 16716  012B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 16717  012B82  006F FF7B FFE6     	movff	postinc2,postinc1
 16718  012B88  EC34  F0DC         	call	___aodiv	;wreg free
 16719  012B8C  52E5               	movf	postdec1,f,c
 16720  012B8E  006F FF9C  F041    	movff	indf1,btemp+23
 16721  012B94  52E5               	movf	postdec1,f,c
 16722  012B96  006F FF9C  F040    	movff	indf1,btemp+22
 16723  012B9C  52E5               	movf	postdec1,f,c
 16724  012B9E  006F FF9C  F03F    	movff	indf1,btemp+21
 16725  012BA4  52E5               	movf	postdec1,f,c
 16726  012BA6  006F FF9C  F03E    	movff	indf1,btemp+20
 16727  012BAC  52E5               	movf	postdec1,f,c
 16728  012BAE  006F FF9C  F03D    	movff	indf1,btemp+19
 16729  012BB4  52E5               	movf	postdec1,f,c
 16730  012BB6  006F FF9C  F03C    	movff	indf1,btemp+18
 16731  012BBC  52E5               	movf	postdec1,f,c
 16732  012BBE  006F FF9C  F03B    	movff	indf1,btemp+17
 16733  012BC4  52E5               	movf	postdec1,f,c
 16734  012BC6  006F FF9C  F03A    	movff	indf1,btemp+16
 16735  012BCC  0EF8               	movlw	248
 16736  012BCE  26E1               	addwf	fsr1l,f,c
 16737  012BD0  0EFF               	movlw	255
 16738  012BD2  22E2               	addwfc	fsr1h,f,c
 16739  012BD4  0060  F0E8  F032   	movff	btemp+16,btemp+8
 16740  012BDA  0060  F0EC  F033   	movff	btemp+17,btemp+9
 16741  012BE0  0060  F0F0  F034   	movff	btemp+18,btemp+10
 16742  012BE6  0060  F0F4  F035   	movff	btemp+19,btemp+11
 16743                           
 16744                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 16745  012BEC  0EF4               	movlw	-12
 16746  012BEE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 16747  012BF4  0EF5               	movlw	-11
 16748  012BF6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 16749  012BFC  0EF6               	movlw	-10
 16750  012BFE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16751  012C04  0EF7               	movlw	-9
 16752  012C06  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16753  012C0C  0EB1               	movlw	177
 16754  012C0E  6EE6               	movwf	postinc1,c
 16755  012C10  0E3A               	movlw	58
 16756  012C12  6EE6               	movwf	postinc1,c
 16757  012C14  0E02               	movlw	2
 16758  012C16  6EE6               	movwf	postinc1,c
 16759  012C18  0E00               	movlw	0
 16760  012C1A  6EE6               	movwf	postinc1,c
 16761  012C1C  0E00               	movlw	0
 16762  012C1E  6EE6               	movwf	postinc1,c
 16763  012C20  0E00               	movlw	0
 16764  012C22  6EE6               	movwf	postinc1,c
 16765  012C24  0E00               	movlw	0
 16766  012C26  6EE6               	movwf	postinc1,c
 16767  012C28  0E00               	movlw	0
 16768  012C2A  6EE6               	movwf	postinc1,c
 16769                           
 16770                           ;stkvar	_days @ sp[(-65)+9]
 16771  012C2C  50E1               	movf	fsr1l,w,c
 16772  012C2E  0FC8               	addlw	-56
 16773  012C30  6ED9               	movwf	fsr2l,c
 16774  012C32  50E2               	movf	fsr1h,w,c
 16775  012C34  6EDA               	movwf	fsr2h,c
 16776  012C36  0EFF               	movlw	255
 16777  012C38  22DA               	addwfc	fsr2h,f,c
 16778  012C3A  006F FF7B FFE6     	movff	postinc2,postinc1
 16779  012C40  006F FF7B FFE6     	movff	postinc2,postinc1
 16780  012C46  006F FF7B FFE6     	movff	postinc2,postinc1
 16781  012C4C  006F FF7B FFE6     	movff	postinc2,postinc1
 16782  012C52  006F FF7B FFE6     	movff	postinc2,postinc1
 16783  012C58  006F FF7B FFE6     	movff	postinc2,postinc1
 16784  012C5E  006F FF7B FFE6     	movff	postinc2,postinc1
 16785  012C64  006F FF7B FFE6     	movff	postinc2,postinc1
 16786  012C6A  EC04  F0E1         	call	___aomod	;wreg free
 16787  012C6E  52E5               	movf	postdec1,f,c
 16788  012C70  006F FF9C  F041    	movff	indf1,btemp+23
 16789  012C76  52E5               	movf	postdec1,f,c
 16790  012C78  006F FF9C  F040    	movff	indf1,btemp+22
 16791  012C7E  52E5               	movf	postdec1,f,c
 16792  012C80  006F FF9C  F03F    	movff	indf1,btemp+21
 16793  012C86  52E5               	movf	postdec1,f,c
 16794  012C88  006F FF9C  F03E    	movff	indf1,btemp+20
 16795  012C8E  52E5               	movf	postdec1,f,c
 16796  012C90  006F FF9C  F03D    	movff	indf1,btemp+19
 16797  012C96  52E5               	movf	postdec1,f,c
 16798  012C98  006F FF9C  F03C    	movff	indf1,btemp+18
 16799  012C9E  52E5               	movf	postdec1,f,c
 16800  012CA0  006F FF9C  F03B    	movff	indf1,btemp+17
 16801  012CA6  52E5               	movf	postdec1,f,c
 16802  012CA8  006F FF9C  F03A    	movff	indf1,btemp+16
 16803  012CAE  0EF8               	movlw	248
 16804  012CB0  26E1               	addwf	fsr1l,f,c
 16805  012CB2  0EFF               	movlw	255
 16806  012CB4  22E2               	addwfc	fsr1h,f,c
 16807  012CB6  0060  F0E8  F032   	movff	btemp+16,btemp+8
 16808  012CBC  0060  F0EC  F033   	movff	btemp+17,btemp+9
 16809  012CC2  0060  F0F0  F034   	movff	btemp+18,btemp+10
 16810  012CC8  0060  F0F4  F035   	movff	btemp+19,btemp+11
 16811                           
 16812                           ;stkvar	_remdays @ sp[(-57)+25]
 16813  012CCE  0EE0               	movlw	-32
 16814  012CD0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 16815  012CD6  0EE1               	movlw	-31
 16816  012CD8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 16817  012CDE  0EE2               	movlw	-30
 16818  012CE0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16819  012CE6  0EE3               	movlw	-29
 16820  012CE8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16821                           
 16822                           ;stkvar	_remdays @ sp[(-57)+25]
 16823  012CEE  0EE3               	movlw	-29
 16824  012CF0  AEE3               	btfss	plusw1,7,c
 16825  012CF2  D01B               	goto	l16380
 16826                           
 16827                           ;stkvar	_remdays @ sp[(-57)+25]
 16828  012CF4  50E1               	movf	fsr1l,w,c
 16829  012CF6  0FE0               	addlw	-32
 16830  012CF8  6ED9               	movwf	fsr2l,c
 16831  012CFA  50E2               	movf	fsr1h,w,c
 16832  012CFC  6EDA               	movwf	fsr2h,c
 16833  012CFE  0EFF               	movlw	255
 16834  012D00  22DA               	addwfc	fsr2h,f,c
 16835  012D02  0EB1               	movlw	177
 16836  012D04  26DE               	addwf	postinc2,f,c
 16837  012D06  0E3A               	movlw	58
 16838  012D08  22DE               	addwfc	postinc2,f,c
 16839  012D0A  0E02               	movlw	2
 16840  012D0C  22DE               	addwfc	postinc2,f,c
 16841  012D0E  0E00               	movlw	0
 16842  012D10  22DE               	addwfc	postinc2,f,c
 16843                           
 16844                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 16845  012D12  50E1               	movf	fsr1l,w,c
 16846  012D14  0FF4               	addlw	-12
 16847  012D16  6ED9               	movwf	fsr2l,c
 16848  012D18  50E2               	movf	fsr1h,w,c
 16849  012D1A  6EDA               	movwf	fsr2h,c
 16850  012D1C  0EFF               	movlw	255
 16851  012D1E  22DA               	addwfc	fsr2h,f,c
 16852  012D20  06DE               	decf	postinc2,f,c
 16853  012D22  0E00               	movlw	0
 16854  012D24  5ADE               	subwfb	postinc2,f,c
 16855  012D26  5ADE               	subwfb	postinc2,f,c
 16856  012D28  5ADE               	subwfb	postinc2,f,c
 16857  012D2A                     l16380:
 16858  012D2A  0EAC               	movlw	172
 16859  012D2C  6EE6               	movwf	postinc1,c
 16860  012D2E  0E8E               	movlw	142
 16861  012D30  6EE6               	movwf	postinc1,c
 16862  012D32  0E00               	movlw	0
 16863  012D34  6EE6               	movwf	postinc1,c
 16864  012D36  0E00               	movlw	0
 16865  012D38  6EE6               	movwf	postinc1,c
 16866                           
 16867                           ;stkvar	_remdays @ sp[(-61)+25]
 16868  012D3A  0EDC               	movlw	-36
 16869  012D3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16870  012D42  006F FF8F FFE6     	movff	plusw1,postinc1
 16871  012D48  006F FF8F FFE6     	movff	plusw1,postinc1
 16872  012D4E  006F FF8F FFE6     	movff	plusw1,postinc1
 16873  012D54  ECA4  F0EB         	call	___aldiv	;wreg free
 16874                           
 16875                           ;stkvar	_c_cycles @ sp[(-57)+33]
 16876  012D58  0EE8               	movlw	-24
 16877  012D5A  0060  F0AB  FFE3   	movff	btemp,plusw1
 16878  012D60  0EE9               	movlw	-23
 16879  012D62  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 16880  012D68  0EEA               	movlw	-22
 16881  012D6A  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 16882  012D70  0EEB               	movlw	-21
 16883  012D72  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 16884                           
 16885                           ;stkvar	_c_cycles @ sp[(-57)+33]
 16886  012D78  0EE8               	movlw	-24
 16887  012D7A  006F FF8C  F02A    	movff	plusw1,btemp
 16888  012D80  0E04               	movlw	4
 16889  012D82  182A               	xorwf	btemp^0,w,c
 16890  012D84  E116               	bnz	l16386
 16891  012D86  0EE9               	movlw	-23
 16892  012D88  50E3               	movf	plusw1,w,c
 16893  012D8A  E113               	bnz	l16386
 16894  012D8C  0EEA               	movlw	-22
 16895  012D8E  50E3               	movf	plusw1,w,c
 16896  012D90  E110               	bnz	l16386
 16897  012D92  0EEB               	movlw	-21
 16898  012D94  50E3               	movf	plusw1,w,c
 16899  012D96  A4D8               	btfss	status,2,c
 16900  012D98  D00C               	goto	l16386
 16901                           
 16902                           ;stkvar	_c_cycles @ sp[(-57)+33]
 16903  012D9A  50E1               	movf	fsr1l,w,c
 16904  012D9C  0FE8               	addlw	-24
 16905  012D9E  6ED9               	movwf	fsr2l,c
 16906  012DA0  50E2               	movf	fsr1h,w,c
 16907  012DA2  6EDA               	movwf	fsr2h,c
 16908  012DA4  0EFF               	movlw	255
 16909  012DA6  22DA               	addwfc	fsr2h,f,c
 16910  012DA8  06DE               	decf	postinc2,f,c
 16911  012DAA  0E00               	movlw	0
 16912  012DAC  5ADE               	subwfb	postinc2,f,c
 16913  012DAE  5ADE               	subwfb	postinc2,f,c
 16914  012DB0  5ADE               	subwfb	postinc2,f,c
 16915  012DB2                     l16386:
 16916  012DB2  0EAC               	movlw	172
 16917  012DB4  6EE6               	movwf	postinc1,c
 16918  012DB6  0E8E               	movlw	142
 16919  012DB8  6EE6               	movwf	postinc1,c
 16920  012DBA  0E00               	movlw	0
 16921  012DBC  6EE6               	movwf	postinc1,c
 16922  012DBE  0E00               	movlw	0
 16923  012DC0  6EE6               	movwf	postinc1,c
 16924                           
 16925                           ;stkvar	_c_cycles @ sp[(-61)+33]
 16926  012DC2  0EE4               	movlw	-28
 16927  012DC4  006F FF8F FFE6     	movff	plusw1,postinc1
 16928  012DCA  006F FF8F FFE6     	movff	plusw1,postinc1
 16929  012DD0  006F FF8F FFE6     	movff	plusw1,postinc1
 16930  012DD6  006F FF8F FFE6     	movff	plusw1,postinc1
 16931  012DDC  ECE0  F0FC         	call	___lmul	;wreg free
 16932                           
 16933                           ;stkvar	_remdays @ sp[(-57)+25]
 16934  012DE0  50E1               	movf	fsr1l,w,c
 16935  012DE2  0FE0               	addlw	-32
 16936  012DE4  6ED9               	movwf	fsr2l,c
 16937  012DE6  50E2               	movf	fsr1h,w,c
 16938  012DE8  6EDA               	movwf	fsr2h,c
 16939  012DEA  0EFF               	movlw	255
 16940  012DEC  22DA               	addwfc	fsr2h,f,c
 16941  012DEE  502A               	movf	btemp^0,w,c
 16942  012DF0  5EDE               	subwf	postinc2,f,c
 16943  012DF2  502B               	movf	(btemp+1)^0,w,c
 16944  012DF4  5ADE               	subwfb	postinc2,f,c
 16945  012DF6  502C               	movf	(btemp+2)^0,w,c
 16946  012DF8  5ADE               	subwfb	postinc2,f,c
 16947  012DFA  502D               	movf	(btemp+3)^0,w,c
 16948  012DFC  5ADE               	subwfb	postinc2,f,c
 16949  012DFE  0EB5               	movlw	181
 16950  012E00  6EE6               	movwf	postinc1,c
 16951  012E02  0E05               	movlw	5
 16952  012E04  6EE6               	movwf	postinc1,c
 16953  012E06  0E00               	movlw	0
 16954  012E08  6EE6               	movwf	postinc1,c
 16955  012E0A  0E00               	movlw	0
 16956  012E0C  6EE6               	movwf	postinc1,c
 16957                           
 16958                           ;stkvar	_remdays @ sp[(-61)+25]
 16959  012E0E  0EDC               	movlw	-36
 16960  012E10  006F FF8F FFE6     	movff	plusw1,postinc1
 16961  012E16  006F FF8F FFE6     	movff	plusw1,postinc1
 16962  012E1C  006F FF8F FFE6     	movff	plusw1,postinc1
 16963  012E22  006F FF8F FFE6     	movff	plusw1,postinc1
 16964  012E28  ECA4  F0EB         	call	___aldiv	;wreg free
 16965                           
 16966                           ;stkvar	_q_cycles @ sp[(-57)+29]
 16967  012E2C  0EE4               	movlw	-28
 16968  012E2E  0060  F0AB  FFE3   	movff	btemp,plusw1
 16969  012E34  0EE5               	movlw	-27
 16970  012E36  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 16971  012E3C  0EE6               	movlw	-26
 16972  012E3E  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 16973  012E44  0EE7               	movlw	-25
 16974  012E46  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 16975                           
 16976                           ;stkvar	_q_cycles @ sp[(-57)+29]
 16977  012E4C  0EE4               	movlw	-28
 16978  012E4E  006F FF8C  F02A    	movff	plusw1,btemp
 16979  012E54  0E19               	movlw	25
 16980  012E56  182A               	xorwf	btemp^0,w,c
 16981  012E58  E116               	bnz	l16394
 16982  012E5A  0EE5               	movlw	-27
 16983  012E5C  50E3               	movf	plusw1,w,c
 16984  012E5E  E113               	bnz	l16394
 16985  012E60  0EE6               	movlw	-26
 16986  012E62  50E3               	movf	plusw1,w,c
 16987  012E64  E110               	bnz	l16394
 16988  012E66  0EE7               	movlw	-25
 16989  012E68  50E3               	movf	plusw1,w,c
 16990  012E6A  A4D8               	btfss	status,2,c
 16991  012E6C  D00C               	goto	l16394
 16992                           
 16993                           ;stkvar	_q_cycles @ sp[(-57)+29]
 16994  012E6E  50E1               	movf	fsr1l,w,c
 16995  012E70  0FE4               	addlw	-28
 16996  012E72  6ED9               	movwf	fsr2l,c
 16997  012E74  50E2               	movf	fsr1h,w,c
 16998  012E76  6EDA               	movwf	fsr2h,c
 16999  012E78  0EFF               	movlw	255
 17000  012E7A  22DA               	addwfc	fsr2h,f,c
 17001  012E7C  06DE               	decf	postinc2,f,c
 17002  012E7E  0E00               	movlw	0
 17003  012E80  5ADE               	subwfb	postinc2,f,c
 17004  012E82  5ADE               	subwfb	postinc2,f,c
 17005  012E84  5ADE               	subwfb	postinc2,f,c
 17006  012E86                     l16394:
 17007  012E86  0EB5               	movlw	181
 17008  012E88  6EE6               	movwf	postinc1,c
 17009  012E8A  0E05               	movlw	5
 17010  012E8C  6EE6               	movwf	postinc1,c
 17011  012E8E  0E00               	movlw	0
 17012  012E90  6EE6               	movwf	postinc1,c
 17013  012E92  0E00               	movlw	0
 17014  012E94  6EE6               	movwf	postinc1,c
 17015                           
 17016                           ;stkvar	_q_cycles @ sp[(-61)+29]
 17017  012E96  0EE0               	movlw	-32
 17018  012E98  006F FF8F FFE6     	movff	plusw1,postinc1
 17019  012E9E  006F FF8F FFE6     	movff	plusw1,postinc1
 17020  012EA4  006F FF8F FFE6     	movff	plusw1,postinc1
 17021  012EAA  006F FF8F FFE6     	movff	plusw1,postinc1
 17022  012EB0  ECE0  F0FC         	call	___lmul	;wreg free
 17023                           
 17024                           ;stkvar	_remdays @ sp[(-57)+25]
 17025  012EB4  50E1               	movf	fsr1l,w,c
 17026  012EB6  0FE0               	addlw	-32
 17027  012EB8  6ED9               	movwf	fsr2l,c
 17028  012EBA  50E2               	movf	fsr1h,w,c
 17029  012EBC  6EDA               	movwf	fsr2h,c
 17030  012EBE  0EFF               	movlw	255
 17031  012EC0  22DA               	addwfc	fsr2h,f,c
 17032  012EC2  502A               	movf	btemp^0,w,c
 17033  012EC4  5EDE               	subwf	postinc2,f,c
 17034  012EC6  502B               	movf	(btemp+1)^0,w,c
 17035  012EC8  5ADE               	subwfb	postinc2,f,c
 17036  012ECA  502C               	movf	(btemp+2)^0,w,c
 17037  012ECC  5ADE               	subwfb	postinc2,f,c
 17038  012ECE  502D               	movf	(btemp+3)^0,w,c
 17039  012ED0  5ADE               	subwfb	postinc2,f,c
 17040  012ED2  0E6D               	movlw	109
 17041  012ED4  6EE6               	movwf	postinc1,c
 17042  012ED6  0E01               	movlw	1
 17043  012ED8  6EE6               	movwf	postinc1,c
 17044  012EDA  0E00               	movlw	0
 17045  012EDC  6EE6               	movwf	postinc1,c
 17046  012EDE  0E00               	movlw	0
 17047  012EE0  6EE6               	movwf	postinc1,c
 17048                           
 17049                           ;stkvar	_remdays @ sp[(-61)+25]
 17050  012EE2  0EDC               	movlw	-36
 17051  012EE4  006F FF8F FFE6     	movff	plusw1,postinc1
 17052  012EEA  006F FF8F FFE6     	movff	plusw1,postinc1
 17053  012EF0  006F FF8F FFE6     	movff	plusw1,postinc1
 17054  012EF6  006F FF8F FFE6     	movff	plusw1,postinc1
 17055  012EFC  ECA4  F0EB         	call	___aldiv	;wreg free
 17056                           
 17057                           ;stkvar	_remyears @ sp[(-57)+37]
 17058  012F00  0EEC               	movlw	-20
 17059  012F02  0060  F0AB  FFE3   	movff	btemp,plusw1
 17060  012F08  0EED               	movlw	-19
 17061  012F0A  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17062  012F10  0EEE               	movlw	-18
 17063  012F12  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17064  012F18  0EEF               	movlw	-17
 17065  012F1A  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17066                           
 17067                           ;stkvar	_remyears @ sp[(-57)+37]
 17068  012F20  0EEC               	movlw	-20
 17069  012F22  006F FF8C  F02A    	movff	plusw1,btemp
 17070  012F28  0E04               	movlw	4
 17071  012F2A  182A               	xorwf	btemp^0,w,c
 17072  012F2C  E116               	bnz	l16402
 17073  012F2E  0EED               	movlw	-19
 17074  012F30  50E3               	movf	plusw1,w,c
 17075  012F32  E113               	bnz	l16402
 17076  012F34  0EEE               	movlw	-18
 17077  012F36  50E3               	movf	plusw1,w,c
 17078  012F38  E110               	bnz	l16402
 17079  012F3A  0EEF               	movlw	-17
 17080  012F3C  50E3               	movf	plusw1,w,c
 17081  012F3E  A4D8               	btfss	status,2,c
 17082  012F40  D00C               	goto	l16402
 17083                           
 17084                           ;stkvar	_remyears @ sp[(-57)+37]
 17085  012F42  50E1               	movf	fsr1l,w,c
 17086  012F44  0FEC               	addlw	-20
 17087  012F46  6ED9               	movwf	fsr2l,c
 17088  012F48  50E2               	movf	fsr1h,w,c
 17089  012F4A  6EDA               	movwf	fsr2h,c
 17090  012F4C  0EFF               	movlw	255
 17091  012F4E  22DA               	addwfc	fsr2h,f,c
 17092  012F50  06DE               	decf	postinc2,f,c
 17093  012F52  0E00               	movlw	0
 17094  012F54  5ADE               	subwfb	postinc2,f,c
 17095  012F56  5ADE               	subwfb	postinc2,f,c
 17096  012F58  5ADE               	subwfb	postinc2,f,c
 17097  012F5A                     l16402:
 17098  012F5A  0E6D               	movlw	109
 17099  012F5C  6EE6               	movwf	postinc1,c
 17100  012F5E  0E01               	movlw	1
 17101  012F60  6EE6               	movwf	postinc1,c
 17102  012F62  0E00               	movlw	0
 17103  012F64  6EE6               	movwf	postinc1,c
 17104  012F66  0E00               	movlw	0
 17105  012F68  6EE6               	movwf	postinc1,c
 17106                           
 17107                           ;stkvar	_remyears @ sp[(-61)+37]
 17108  012F6A  0EE8               	movlw	-24
 17109  012F6C  006F FF8F FFE6     	movff	plusw1,postinc1
 17110  012F72  006F FF8F FFE6     	movff	plusw1,postinc1
 17111  012F78  006F FF8F FFE6     	movff	plusw1,postinc1
 17112  012F7E  006F FF8F FFE6     	movff	plusw1,postinc1
 17113  012F84  ECE0  F0FC         	call	___lmul	;wreg free
 17114                           
 17115                           ;stkvar	_remdays @ sp[(-57)+25]
 17116  012F88  50E1               	movf	fsr1l,w,c
 17117  012F8A  0FE0               	addlw	-32
 17118  012F8C  6ED9               	movwf	fsr2l,c
 17119  012F8E  50E2               	movf	fsr1h,w,c
 17120  012F90  6EDA               	movwf	fsr2h,c
 17121  012F92  0EFF               	movlw	255
 17122  012F94  22DA               	addwfc	fsr2h,f,c
 17123  012F96  502A               	movf	btemp^0,w,c
 17124  012F98  5EDE               	subwf	postinc2,f,c
 17125  012F9A  502B               	movf	(btemp+1)^0,w,c
 17126  012F9C  5ADE               	subwfb	postinc2,f,c
 17127  012F9E  502C               	movf	(btemp+2)^0,w,c
 17128  012FA0  5ADE               	subwfb	postinc2,f,c
 17129  012FA2  502D               	movf	(btemp+3)^0,w,c
 17130  012FA4  5ADE               	subwfb	postinc2,f,c
 17131                           
 17132                           ;stkvar	___secs_to_tm$7845 @ sp[(-57)+0]
 17133  012FA6  0EC7               	movlw	-57
 17134  012FA8  6AE3               	clrf	plusw1,c
 17135                           
 17136                           ;stkvar	_remyears @ sp[(-57)+37]
 17137  012FAA  0EEC               	movlw	-20
 17138  012FAC  50E3               	movf	plusw1,w,c
 17139  012FAE  E127               	bnz	l16414
 17140  012FB0  0EED               	movlw	-19
 17141  012FB2  50E3               	movf	plusw1,w,c
 17142  012FB4  E124               	bnz	l16414
 17143  012FB6  0EEE               	movlw	-18
 17144  012FB8  50E3               	movf	plusw1,w,c
 17145  012FBA  E121               	bnz	l16414
 17146  012FBC  0EEF               	movlw	-17
 17147  012FBE  50E3               	movf	plusw1,w,c
 17148  012FC0  A4D8               	btfss	status,2,c
 17149  012FC2  D01D               	goto	l16414
 17150                           
 17151                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17152  012FC4  0EE4               	movlw	-28
 17153  012FC6  50E3               	movf	plusw1,w,c
 17154  012FC8  E117               	bnz	l16412
 17155  012FCA  0EE5               	movlw	-27
 17156  012FCC  50E3               	movf	plusw1,w,c
 17157  012FCE  E114               	bnz	l16412
 17158  012FD0  0EE6               	movlw	-26
 17159  012FD2  50E3               	movf	plusw1,w,c
 17160  012FD4  E111               	bnz	l16412
 17161  012FD6  0EE7               	movlw	-25
 17162  012FD8  50E3               	movf	plusw1,w,c
 17163  012FDA  A4D8               	btfss	status,2,c
 17164  012FDC  D00D               	goto	u16090
 17165                           
 17166                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17167  012FDE  0EE8               	movlw	-24
 17168  012FE0  50E3               	movf	plusw1,w,c
 17169  012FE2  E10D               	bnz	l16414
 17170  012FE4  0EE9               	movlw	-23
 17171  012FE6  50E3               	movf	plusw1,w,c
 17172  012FE8  E10A               	bnz	l16414
 17173  012FEA  0EEA               	movlw	-22
 17174  012FEC  50E3               	movf	plusw1,w,c
 17175  012FEE  E107               	bnz	l16414
 17176  012FF0  0EEB               	movlw	-21
 17177  012FF2  50E3               	movf	plusw1,w,c
 17178  012FF4  A4D8               	btfss	status,2,c
 17179  012FF6  D003               	goto	l16414
 17180  012FF8                     u16090:
 17181  012FF8                     l16412:
 17182                           
 17183                           ;stkvar	___secs_to_tm$7845 @ sp[(-57)+0]
 17184  012FF8  0EC7               	movlw	-57
 17185  012FFA  6AE3               	clrf	plusw1,c
 17186  012FFC  2AE3               	incf	plusw1,f,c
 17187  012FFE                     l16414:
 17188                           
 17189                           ;stkvar	___secs_to_tm$7845 @ sp[(-57)+0]
 17190  012FFE  0EC7               	movlw	-57
 17191  013000  50E3               	movf	plusw1,w,c
 17192  013002  6E34               	movwf	(btemp+10)^0,c
 17193  013004  6A35               	clrf	(btemp+11)^0,c
 17194                           
 17195                           ;stkvar	_leap @ sp[(-57)+51]
 17196  013006  0EFA               	movlw	-6
 17197  013008  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17198  01300E  0EFB               	movlw	-5
 17199  013010  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17200                           
 17201                           ;stkvar	_remdays @ sp[(-57)+25]
 17202                           ;stkvar	_leap @ sp[(-57)+51]
 17203  013016  0EFA               	movlw	-6
 17204  013018  006F FF8C  F034    	movff	plusw1,btemp+10
 17205  01301E  0EFB               	movlw	-5
 17206  013020  006F FF8C  F035    	movff	plusw1,btemp+11
 17207  013026  0EE0               	movlw	-32
 17208  013028  50E3               	movf	plusw1,w,c
 17209  01302A  2634               	addwf	(btemp+10)^0,f,c
 17210  01302C  0EE1               	movlw	-31
 17211  01302E  50E3               	movf	plusw1,w,c
 17212  013030  2235               	addwfc	(btemp+11)^0,f,c
 17213  013032  0E3B               	movlw	59
 17214  013034  2634               	addwf	(btemp+10)^0,f,c
 17215  013036  0E00               	movlw	0
 17216  013038  2235               	addwfc	(btemp+11)^0,f,c
 17217                           
 17218                           ;stkvar	_yday @ sp[(-57)+53]
 17219  01303A  0EFC               	movlw	-4
 17220  01303C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17221  013042  0EFD               	movlw	-3
 17222  013044  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17223                           
 17224                           ;stkvar	_leap @ sp[(-57)+51]
 17225  01304A  0EFA               	movlw	-6
 17226  01304C  50E3               	movf	plusw1,w,c
 17227  01304E  0F6D               	addlw	109
 17228  013050  6E34               	movwf	(btemp+10)^0,c
 17229  013052  0EFB               	movlw	-5
 17230  013054  006F FF8C  F035    	movff	plusw1,btemp+11
 17231  01305A  0E01               	movlw	1
 17232  01305C  2235               	addwfc	(btemp+11)^0,f,c
 17233                           
 17234                           ;stkvar	_yday @ sp[(-57)+53]
 17235  01305E  0EFC               	movlw	-4
 17236  013060  006F FF8C  F02A    	movff	plusw1,btemp
 17237  013066  5034               	movf	(btemp+10)^0,w,c
 17238  013068  5C2A               	subwf	btemp^0,w,c
 17239  01306A  0EFD               	movlw	-3
 17240  01306C  50E3               	movf	plusw1,w,c
 17241  01306E  0A80               	xorlw	128
 17242  013070  6E2A               	movwf	btemp^0,c
 17243  013072  5035               	movf	(btemp+11)^0,w,c
 17244  013074  0A80               	xorlw	128
 17245  013076  582A               	subwfb	btemp^0,w,c
 17246  013078  A0D8               	btfss	status,0,c
 17247  01307A  D01E               	goto	l16422
 17248                           
 17249                           ;stkvar	_leap @ sp[(-57)+51]
 17250  01307C  0EFA               	movlw	-6
 17251  01307E  50E3               	movf	plusw1,w,c
 17252  013080  0F6D               	addlw	109
 17253  013082  6E34               	movwf	(btemp+10)^0,c
 17254  013084  0EFB               	movlw	-5
 17255  013086  006F FF8C  F035    	movff	plusw1,btemp+11
 17256  01308C  0E01               	movlw	1
 17257  01308E  2235               	addwfc	(btemp+11)^0,f,c
 17258                           
 17259                           ;stkvar	_yday @ sp[(-57)+53]
 17260  013090  0EFC               	movlw	-4
 17261  013092  006F FF8C  F02A    	movff	plusw1,btemp
 17262  013098  5034               	movf	(btemp+10)^0,w,c
 17263  01309A  5E2A               	subwf	btemp^0,f,c
 17264  01309C  0EFC               	movlw	-4
 17265  01309E  0060  F0AB  FFE3   	movff	btemp,plusw1
 17266  0130A4  0EFD               	movlw	-3
 17267  0130A6  006F FF8C  F02A    	movff	plusw1,btemp
 17268  0130AC  5035               	movf	(btemp+11)^0,w,c
 17269  0130AE  5A2A               	subwfb	btemp^0,f,c
 17270  0130B0  0EFD               	movlw	-3
 17271  0130B2  0060  F0AB  FFE3   	movff	btemp,plusw1
 17272  0130B8                     l16422:
 17273                           
 17274                           ;stkvar	_remyears @ sp[(-57)+37]
 17275                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17276  0130B8  0EE4               	movlw	-28
 17277  0130BA  006F FF8C  F032    	movff	plusw1,btemp+8
 17278  0130C0  0EE5               	movlw	-27
 17279  0130C2  006F FF8C  F033    	movff	plusw1,btemp+9
 17280  0130C8  0EE6               	movlw	-26
 17281  0130CA  006F FF8C  F034    	movff	plusw1,btemp+10
 17282  0130D0  0EE7               	movlw	-25
 17283  0130D2  006F FF8C  F035    	movff	plusw1,btemp+11
 17284  0130D8  0E02               	movlw	2
 17285  0130DA                     u16115:
 17286  0130DA  90D8               	bcf	status,0,c
 17287  0130DC  3632               	rlcf	(btemp+8)^0,f,c
 17288  0130DE  3633               	rlcf	(btemp+9)^0,f,c
 17289  0130E0  3634               	rlcf	(btemp+10)^0,f,c
 17290  0130E2  3635               	rlcf	(btemp+11)^0,f,c
 17291  0130E4  2EE8               	decfsz	wreg,f,c
 17292  0130E6  D7F9               	goto	u16115
 17293  0130E8  0E64               	movlw	100
 17294  0130EA  6EE6               	movwf	postinc1,c
 17295  0130EC  0E00               	movlw	0
 17296  0130EE  6EE6               	movwf	postinc1,c
 17297  0130F0  0E00               	movlw	0
 17298  0130F2  6EE6               	movwf	postinc1,c
 17299  0130F4  0E00               	movlw	0
 17300  0130F6  6EE6               	movwf	postinc1,c
 17301                           
 17302                           ;stkvar	_c_cycles @ sp[(-61)+33]
 17303  0130F8  0EE4               	movlw	-28
 17304  0130FA  006F FF8F FFE6     	movff	plusw1,postinc1
 17305  013100  006F FF8F FFE6     	movff	plusw1,postinc1
 17306  013106  006F FF8F FFE6     	movff	plusw1,postinc1
 17307  01310C  006F FF8F FFE6     	movff	plusw1,postinc1
 17308  013112  ECE0  F0FC         	call	___lmul	;wreg free
 17309  013116  5032               	movf	(btemp+8)^0,w,c
 17310  013118  242A               	addwf	btemp^0,w,c
 17311  01311A  6E2E               	movwf	(btemp+4)^0,c
 17312  01311C  5033               	movf	(btemp+9)^0,w,c
 17313  01311E  202B               	addwfc	(btemp+1)^0,w,c
 17314  013120  6E2F               	movwf	(btemp+5)^0,c
 17315  013122  5034               	movf	(btemp+10)^0,w,c
 17316  013124  202C               	addwfc	(btemp+2)^0,w,c
 17317  013126  6E30               	movwf	(btemp+6)^0,c
 17318  013128  5035               	movf	(btemp+11)^0,w,c
 17319  01312A  202D               	addwfc	(btemp+3)^0,w,c
 17320  01312C  6E31               	movwf	(btemp+7)^0,c
 17321  01312E  0EEC               	movlw	-20
 17322  013130  50E3               	movf	plusw1,w,c
 17323  013132  262E               	addwf	(btemp+4)^0,f,c
 17324  013134  0EED               	movlw	-19
 17325  013136  50E3               	movf	plusw1,w,c
 17326  013138  222F               	addwfc	(btemp+5)^0,f,c
 17327  01313A  0EEE               	movlw	-18
 17328  01313C  50E3               	movf	plusw1,w,c
 17329  01313E  2230               	addwfc	(btemp+6)^0,f,c
 17330  013140  0EEF               	movlw	-17
 17331  013142  50E3               	movf	plusw1,w,c
 17332  013144  2231               	addwfc	(btemp+7)^0,f,c
 17333  013146  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 17334  01314C  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 17335  013152  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 17336  013158  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 17337  01315E  6A3E               	clrf	(btemp+20)^0,c
 17338  013160  BE3D               	btfsc	(btemp+19)^0,7,c
 17339  013162  683E               	setf	(btemp+20)^0,c
 17340  013164  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 17341  01316A  0060  F0F8  F040   	movff	btemp+20,btemp+22
 17342  013170  0060  F0F8  F041   	movff	btemp+20,btemp+23
 17343  013176  0E90               	movlw	144
 17344  013178  6EE6               	movwf	postinc1,c
 17345  01317A  0E01               	movlw	1
 17346  01317C  6EE6               	movwf	postinc1,c
 17347  01317E  0E00               	movlw	0
 17348  013180  6EE6               	movwf	postinc1,c
 17349  013182  0E00               	movlw	0
 17350  013184  6EE6               	movwf	postinc1,c
 17351  013186  0E00               	movlw	0
 17352  013188  6EE6               	movwf	postinc1,c
 17353  01318A  0E00               	movlw	0
 17354  01318C  6EE6               	movwf	postinc1,c
 17355  01318E  0E00               	movlw	0
 17356  013190  6EE6               	movwf	postinc1,c
 17357  013192  0E00               	movlw	0
 17358  013194  6EE6               	movwf	postinc1,c
 17359                           
 17360                           ;stkvar	_qc_cycles @ sp[(-65)+45]
 17361  013196  0EEC               	movlw	-20
 17362  013198  006F FF8C  F042    	movff	plusw1,btemp+24
 17363  01319E  0EED               	movlw	-19
 17364  0131A0  006F FF8C  F043    	movff	plusw1,btemp+25
 17365  0131A6  0EEE               	movlw	-18
 17366  0131A8  006F FF8C  F044    	movff	plusw1,btemp+26
 17367  0131AE  0EEF               	movlw	-17
 17368  0131B0  006F FF8C  F045    	movff	plusw1,btemp+27
 17369  0131B6  6A46               	clrf	(btemp+28)^0,c
 17370  0131B8  BE45               	btfsc	(btemp+27)^0,7,c
 17371  0131BA  6846               	setf	(btemp+28)^0,c
 17372  0131BC  0060  F118  F047   	movff	btemp+28,btemp+29
 17373  0131C2  0060  F118  F048   	movff	btemp+28,btemp+30
 17374  0131C8  0060  F118  F049   	movff	btemp+28,btemp+31
 17375  0131CE  0060  F10B  FFE6   	movff	btemp+24,postinc1
 17376  0131D4  0060  F10F  FFE6   	movff	btemp+25,postinc1
 17377  0131DA  0060  F113  FFE6   	movff	btemp+26,postinc1
 17378  0131E0  0060  F117  FFE6   	movff	btemp+27,postinc1
 17379  0131E6  0060  F11B  FFE6   	movff	btemp+28,postinc1
 17380  0131EC  0060  F11F  FFE6   	movff	btemp+29,postinc1
 17381  0131F2  0060  F123  FFE6   	movff	btemp+30,postinc1
 17382  0131F8  0060  F127  FFE6   	movff	btemp+31,postinc1
 17383  0131FE  ECEF  F0F2         	call	___omul	;wreg free
 17384  013202  52E5               	movf	postdec1,f,c
 17385  013204  006F FF9C  F049    	movff	indf1,btemp+31
 17386  01320A  52E5               	movf	postdec1,f,c
 17387  01320C  006F FF9C  F048    	movff	indf1,btemp+30
 17388  013212  52E5               	movf	postdec1,f,c
 17389  013214  006F FF9C  F047    	movff	indf1,btemp+29
 17390  01321A  52E5               	movf	postdec1,f,c
 17391  01321C  006F FF9C  F046    	movff	indf1,btemp+28
 17392  013222  52E5               	movf	postdec1,f,c
 17393  013224  006F FF9C  F045    	movff	indf1,btemp+27
 17394  01322A  52E5               	movf	postdec1,f,c
 17395  01322C  006F FF9C  F044    	movff	indf1,btemp+26
 17396  013232  52E5               	movf	postdec1,f,c
 17397  013234  006F FF9C  F043    	movff	indf1,btemp+25
 17398  01323A  52E5               	movf	postdec1,f,c
 17399  01323C  006F FF9C  F042    	movff	indf1,btemp+24
 17400  013242  0EF8               	movlw	248
 17401  013244  26E1               	addwf	fsr1l,f,c
 17402  013246  0EFF               	movlw	255
 17403  013248  22E2               	addwfc	fsr1h,f,c
 17404  01324A  503A               	movf	(btemp+16)^0,w,c
 17405  01324C  2442               	addwf	(btemp+24)^0,w,c
 17406  01324E  6E32               	movwf	(btemp+8)^0,c
 17407  013250  503B               	movf	(btemp+17)^0,w,c
 17408  013252  2043               	addwfc	(btemp+25)^0,w,c
 17409  013254  6E33               	movwf	(btemp+9)^0,c
 17410  013256  503C               	movf	(btemp+18)^0,w,c
 17411  013258  2044               	addwfc	(btemp+26)^0,w,c
 17412  01325A  6E34               	movwf	(btemp+10)^0,c
 17413  01325C  503D               	movf	(btemp+19)^0,w,c
 17414  01325E  2045               	addwfc	(btemp+27)^0,w,c
 17415  013260  6E35               	movwf	(btemp+11)^0,c
 17416  013262  503E               	movf	(btemp+20)^0,w,c
 17417  013264  2046               	addwfc	(btemp+28)^0,w,c
 17418  013266  6E36               	movwf	(btemp+12)^0,c
 17419  013268  503F               	movf	(btemp+21)^0,w,c
 17420  01326A  2047               	addwfc	(btemp+29)^0,w,c
 17421  01326C  6E37               	movwf	(btemp+13)^0,c
 17422  01326E  5040               	movf	(btemp+22)^0,w,c
 17423  013270  2048               	addwfc	(btemp+30)^0,w,c
 17424  013272  6E38               	movwf	(btemp+14)^0,c
 17425  013274  5041               	movf	(btemp+23)^0,w,c
 17426  013276  2049               	addwfc	(btemp+31)^0,w,c
 17427  013278  6E39               	movwf	(btemp+15)^0,c
 17428                           
 17429                           ;stkvar	_years @ sp[(-57)+1]
 17430  01327A  0EC8               	movlw	-56
 17431  01327C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17432  013282  0EC9               	movlw	-55
 17433  013284  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17434  01328A  0ECA               	movlw	-54
 17435  01328C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17436  013292  0ECB               	movlw	-53
 17437  013294  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17438  01329A  0ECC               	movlw	-52
 17439  01329C  0060  F0DB  FFE3   	movff	btemp+12,plusw1
 17440  0132A2  0ECD               	movlw	-51
 17441  0132A4  0060  F0DF  FFE3   	movff	btemp+13,plusw1
 17442  0132AA  0ECE               	movlw	-50
 17443  0132AC  0060  F0E3  FFE3   	movff	btemp+14,plusw1
 17444  0132B2  0ECF               	movlw	-49
 17445  0132B4  0060  F0E7  FFE3   	movff	btemp+15,plusw1
 17446                           
 17447                           ;stkvar	_months @ sp[(-57)+49]
 17448  0132BA  0EF8               	movlw	-8
 17449  0132BC  6AE3               	clrf	plusw1,c
 17450  0132BE  0EF9               	movlw	-7
 17451  0132C0  6AE3               	clrf	plusw1,c
 17452  0132C2  D030               	goto	l16430
 17453  0132C4                     l16426:
 17454                           
 17455                           ;stkvar	_remdays @ sp[(-57)+25]
 17456  0132C4  50E1               	movf	fsr1l,w,c
 17457  0132C6  0FE0               	addlw	-32
 17458  0132C8  6ED9               	movwf	fsr2l,c
 17459  0132CA  50E2               	movf	fsr1h,w,c
 17460  0132CC  6EDA               	movwf	fsr2h,c
 17461  0132CE  0EFF               	movlw	255
 17462  0132D0  22DA               	addwfc	fsr2h,f,c
 17463                           
 17464                           ;stkvar	_months @ sp[(-57)+49]
 17465  0132D2  0EF8               	movlw	-8
 17466  0132D4  006F FF8C  F034    	movff	plusw1,btemp+10
 17467  0132DA  0EF9               	movlw	-7
 17468  0132DC  006F FF8C  F035    	movff	plusw1,btemp+11
 17469  0132E2  0EF3               	movlw	low ___secs_to_tm@days_in_month
 17470  0132E4  2434               	addwf	(btemp+10)^0,w,c
 17471  0132E6  6EF6               	movwf	tblptrl,c
 17472  0132E8  0EF8               	movlw	high ___secs_to_tm@days_in_month
 17473  0132EA  2035               	addwfc	(btemp+11)^0,w,c
 17474  0132EC  6EF7               	movwf	tblptrh,c
 17475  0132EE                     	if	1	;There are 3 active tblptr bytes
 17476  0132EE  6AF8               	clrf	tblptru,c
 17477  0132F0  0E00               	movlw	low (__mediumconst shr (0+16))
 17478  0132F2  22F8               	addwfc	tblptru,f,c
 17479  0132F4                     	endif
 17480  0132F4  0008               	tblrd		*
 17481  0132F6  50F5               	movf	tablat,w,c
 17482  0132F8  5EDE               	subwf	postinc2,f,c
 17483  0132FA  0E00               	movlw	0
 17484  0132FC  5ADE               	subwfb	postinc2,f,c
 17485  0132FE  5ADE               	subwfb	postinc2,f,c
 17486  013300  5ADE               	subwfb	postinc2,f,c
 17487                           
 17488                           ;stkvar	_months @ sp[(-57)+49]
 17489  013302  0EF8               	movlw	-8
 17490  013304  50E3               	movf	plusw1,w,c
 17491  013306  0F01               	addlw	1
 17492  013308  6E2A               	movwf	btemp^0,c
 17493  01330A  0EF8               	movlw	-8
 17494  01330C  0060  F0AB  FFE3   	movff	btemp,plusw1
 17495  013312  6A2A               	clrf	btemp^0,c
 17496  013314  0EF9               	movlw	-7
 17497  013316  50E3               	movf	plusw1,w,c
 17498  013318  202A               	addwfc	btemp^0,w,c
 17499  01331A  6E2A               	movwf	btemp^0,c
 17500  01331C  0EF9               	movlw	-7
 17501  01331E  0060  F0AB  FFE3   	movff	btemp,plusw1
 17502  013324                     l16430:
 17503                           
 17504                           ;stkvar	_months @ sp[(-57)+49]
 17505  013324  0EF8               	movlw	-8
 17506  013326  006F FF8C  F034    	movff	plusw1,btemp+10
 17507  01332C  0EF9               	movlw	-7
 17508  01332E  006F FF8C  F035    	movff	plusw1,btemp+11
 17509  013334  0EF3               	movlw	low ___secs_to_tm@days_in_month
 17510  013336  2434               	addwf	(btemp+10)^0,w,c
 17511  013338  6EF6               	movwf	tblptrl,c
 17512  01333A  0EF8               	movlw	high ___secs_to_tm@days_in_month
 17513  01333C  2035               	addwfc	(btemp+11)^0,w,c
 17514  01333E  6EF7               	movwf	tblptrh,c
 17515  013340                     	if	1	;There are 3 active tblptr bytes
 17516  013340  6AF8               	clrf	tblptru,c
 17517  013342  0E00               	movlw	low (__mediumconst shr (0+16))
 17518  013344  22F8               	addwfc	tblptru,f,c
 17519  013346                     	endif
 17520  013346  0008               	tblrd		*
 17521  013348  006F FFD4  F035    	movff	tablat,btemp+11
 17522  01334E  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 17523  013354  6A2F               	clrf	(btemp+5)^0,c
 17524  013356  6A30               	clrf	(btemp+6)^0,c
 17525  013358  6A31               	clrf	(btemp+7)^0,c
 17526                           
 17527                           ;stkvar	_remdays @ sp[(-57)+25]
 17528  01335A  0EE0               	movlw	-32
 17529  01335C  006F FF8C  F02A    	movff	plusw1,btemp
 17530  013362  502E               	movf	(btemp+4)^0,w,c
 17531  013364  5C2A               	subwf	btemp^0,w,c
 17532  013366  0EE1               	movlw	-31
 17533  013368  006F FF8C  F02A    	movff	plusw1,btemp
 17534  01336E  502F               	movf	(btemp+5)^0,w,c
 17535  013370  582A               	subwfb	btemp^0,w,c
 17536  013372  0EE2               	movlw	-30
 17537  013374  006F FF8C  F02A    	movff	plusw1,btemp
 17538  01337A  5030               	movf	(btemp+6)^0,w,c
 17539  01337C  582A               	subwfb	btemp^0,w,c
 17540  01337E  0EE3               	movlw	-29
 17541  013380  50E3               	movf	plusw1,w,c
 17542  013382  0A80               	xorlw	128
 17543  013384  6E2A               	movwf	btemp^0,c
 17544  013386  5031               	movf	(btemp+7)^0,w,c
 17545  013388  0A80               	xorlw	128
 17546  01338A  582A               	subwfb	btemp^0,w,c
 17547  01338C  B0D8               	btfsc	status,0,c
 17548  01338E  D79A               	goto	l16426
 17549                           
 17550                           ;stkvar	_months @ sp[(-57)+49]
 17551  013390  0EF9               	movlw	-7
 17552  013392  BEE3               	btfsc	plusw1,7,c
 17553  013394  D026               	goto	l16438
 17554  013396  0EF9               	movlw	-7
 17555  013398  50E3               	movf	plusw1,w,c
 17556  01339A  E108               	bnz	u16130
 17557  01339C  0EF8               	movlw	-8
 17558  01339E  006F FF8C  F02A    	movff	plusw1,btemp
 17559  0133A4  0E0A               	movlw	10
 17560  0133A6  5E2A               	subwf	btemp^0,f,c
 17561  0133A8  A0D8               	btfss	status,0,c
 17562  0133AA  D01B               	goto	l16438
 17563  0133AC                     u16130:
 17564                           
 17565                           ;stkvar	_months @ sp[(-57)+49]
 17566  0133AC  50E1               	movf	fsr1l,w,c
 17567  0133AE  0FF8               	addlw	-8
 17568  0133B0  6ED9               	movwf	fsr2l,c
 17569  0133B2  50E2               	movf	fsr1h,w,c
 17570  0133B4  6EDA               	movwf	fsr2h,c
 17571  0133B6  0EFF               	movlw	255
 17572  0133B8  22DA               	addwfc	fsr2h,f,c
 17573  0133BA  0EF4               	movlw	244
 17574  0133BC  26DE               	addwf	postinc2,f,c
 17575  0133BE  0EFF               	movlw	255
 17576  0133C0  22DD               	addwfc	postdec2,f,c
 17577                           
 17578                           ;stkvar	_years @ sp[(-57)+1]
 17579  0133C2  50E1               	movf	fsr1l,w,c
 17580  0133C4  0FC8               	addlw	-56
 17581  0133C6  6ED9               	movwf	fsr2l,c
 17582  0133C8  50E2               	movf	fsr1h,w,c
 17583  0133CA  6EDA               	movwf	fsr2h,c
 17584  0133CC  0EFF               	movlw	255
 17585  0133CE  22DA               	addwfc	fsr2h,f,c
 17586  0133D0  2ADE               	incf	postinc2,f,c
 17587  0133D2  0E00               	movlw	0
 17588  0133D4  22DE               	addwfc	postinc2,f,c
 17589  0133D6  22DE               	addwfc	postinc2,f,c
 17590  0133D8  22DE               	addwfc	postinc2,f,c
 17591  0133DA  22DE               	addwfc	postinc2,f,c
 17592  0133DC  22DE               	addwfc	postinc2,f,c
 17593  0133DE  22DE               	addwfc	postinc2,f,c
 17594  0133E0  22DE               	addwfc	postinc2,f,c
 17595  0133E2                     l16438:
 17596                           
 17597                           ;stkvar	_years @ sp[(-57)+1]
 17598  0133E2  0EC8               	movlw	-56
 17599  0133E4  50E3               	movf	plusw1,w,c
 17600  0133E6  0F64               	addlw	100
 17601  0133E8  6E3A               	movwf	(btemp+16)^0,c
 17602  0133EA  0EC9               	movlw	-55
 17603  0133EC  006F FF8C  F03B    	movff	plusw1,btemp+17
 17604  0133F2  0E00               	movlw	0
 17605  0133F4  223B               	addwfc	(btemp+17)^0,f,c
 17606  0133F6  0ECA               	movlw	-54
 17607  0133F8  006F FF8C  F03C    	movff	plusw1,btemp+18
 17608  0133FE  0E00               	movlw	0
 17609  013400  223C               	addwfc	(btemp+18)^0,f,c
 17610  013402  0ECB               	movlw	-53
 17611  013404  006F FF8C  F03D    	movff	plusw1,btemp+19
 17612  01340A  0E00               	movlw	0
 17613  01340C  223D               	addwfc	(btemp+19)^0,f,c
 17614  01340E  0ECC               	movlw	-52
 17615  013410  006F FF8C  F03E    	movff	plusw1,btemp+20
 17616  013416  0E00               	movlw	0
 17617  013418  223E               	addwfc	(btemp+20)^0,f,c
 17618  01341A  0ECD               	movlw	-51
 17619  01341C  006F FF8C  F03F    	movff	plusw1,btemp+21
 17620  013422  0E00               	movlw	0
 17621  013424  223F               	addwfc	(btemp+21)^0,f,c
 17622  013426  0ECE               	movlw	-50
 17623  013428  006F FF8C  F040    	movff	plusw1,btemp+22
 17624  01342E  0E00               	movlw	0
 17625  013430  2240               	addwfc	(btemp+22)^0,f,c
 17626  013432  0ECF               	movlw	-49
 17627  013434  006F FF8C  F041    	movff	plusw1,btemp+23
 17628  01343A  0E00               	movlw	0
 17629  01343C  2241               	addwfc	(btemp+23)^0,f,c
 17630  01343E  BE41               	btfsc	(btemp+23)^0,7,c
 17631  013440  D00C               	goto	u16140
 17632  013442  5041               	movf	(btemp+23)^0,w,c
 17633  013444  1040               	iorwf	(btemp+22)^0,w,c
 17634  013446  103F               	iorwf	(btemp+21)^0,w,c
 17635  013448  103E               	iorwf	(btemp+20)^0,w,c
 17636  01344A  103D               	iorwf	(btemp+19)^0,w,c
 17637  01344C  103C               	iorwf	(btemp+18)^0,w,c
 17638  01344E  E103               	bnz	u16141
 17639  013450  0E80               	movlw	128
 17640  013452  5C3B               	subwf	(btemp+17)^0,w,c
 17641  013454  B0D8               	btfsc	status,0,c
 17642  013456                     u16141:
 17643  013456  EF97  F093         	goto	u16000
 17644  01345A                     u16140:
 17645                           
 17646                           ;stkvar	_years @ sp[(-57)+1]
 17647  01345A  0EC8               	movlw	-56
 17648  01345C  50E3               	movf	plusw1,w,c
 17649  01345E  0F64               	addlw	100
 17650  013460  6E3A               	movwf	(btemp+16)^0,c
 17651  013462  0EC9               	movlw	-55
 17652  013464  006F FF8C  F03B    	movff	plusw1,btemp+17
 17653  01346A  0E00               	movlw	0
 17654  01346C  223B               	addwfc	(btemp+17)^0,f,c
 17655  01346E  0ECA               	movlw	-54
 17656  013470  006F FF8C  F03C    	movff	plusw1,btemp+18
 17657  013476  0E00               	movlw	0
 17658  013478  223C               	addwfc	(btemp+18)^0,f,c
 17659  01347A  0ECB               	movlw	-53
 17660  01347C  006F FF8C  F03D    	movff	plusw1,btemp+19
 17661  013482  0E00               	movlw	0
 17662  013484  223D               	addwfc	(btemp+19)^0,f,c
 17663  013486  0ECC               	movlw	-52
 17664  013488  006F FF8C  F03E    	movff	plusw1,btemp+20
 17665  01348E  0E00               	movlw	0
 17666  013490  223E               	addwfc	(btemp+20)^0,f,c
 17667  013492  0ECD               	movlw	-51
 17668  013494  006F FF8C  F03F    	movff	plusw1,btemp+21
 17669  01349A  0E00               	movlw	0
 17670  01349C  223F               	addwfc	(btemp+21)^0,f,c
 17671  01349E  0ECE               	movlw	-50
 17672  0134A0  006F FF8C  F040    	movff	plusw1,btemp+22
 17673  0134A6  0E00               	movlw	0
 17674  0134A8  2240               	addwfc	(btemp+22)^0,f,c
 17675  0134AA  0ECF               	movlw	-49
 17676  0134AC  006F FF8C  F041    	movff	plusw1,btemp+23
 17677  0134B2  0E00               	movlw	0
 17678  0134B4  2241               	addwfc	(btemp+23)^0,f,c
 17679  0134B6  AE41               	btfss	(btemp+23)^0,7,c
 17680  0134B8  D011               	goto	l16446
 17681  0134BA  0E80               	movlw	128
 17682  0134BC  5C3B               	subwf	(btemp+17)^0,w,c
 17683  0134BE  0EFF               	movlw	255
 17684  0134C0  583C               	subwfb	(btemp+18)^0,w,c
 17685  0134C2  0EFF               	movlw	255
 17686  0134C4  583D               	subwfb	(btemp+19)^0,w,c
 17687  0134C6  0EFF               	movlw	255
 17688  0134C8  583E               	subwfb	(btemp+20)^0,w,c
 17689  0134CA  0EFF               	movlw	255
 17690  0134CC  583F               	subwfb	(btemp+21)^0,w,c
 17691  0134CE  0EFF               	movlw	255
 17692  0134D0  5840               	subwfb	(btemp+22)^0,w,c
 17693  0134D2  0EFF               	movlw	255
 17694  0134D4  5841               	subwfb	(btemp+23)^0,w,c
 17695  0134D6  A0D8               	btfss	status,0,c
 17696  0134D8  EF97  F093         	goto	u16000
 17697  0134DC                     l16446:
 17698                           
 17699                           ;stkvar	_years @ sp[(-57)+1]
 17700  0134DC  0EC8               	movlw	-56
 17701  0134DE  50E3               	movf	plusw1,w,c
 17702  0134E0  0F64               	addlw	100
 17703  0134E2  6E34               	movwf	(btemp+10)^0,c
 17704  0134E4  0EC9               	movlw	-55
 17705  0134E6  006F FF8C  F035    	movff	plusw1,btemp+11
 17706  0134EC  0E00               	movlw	0
 17707  0134EE  2235               	addwfc	(btemp+11)^0,f,c
 17708                           
 17709                           ;stkvar	_tm @ sp[(-57)+-10]
 17710  0134F0  0EBD               	movlw	-67
 17711  0134F2  006F FF8C  F032    	movff	plusw1,btemp+8
 17712  0134F8  0EBE               	movlw	-66
 17713  0134FA  006F FF8C  F033    	movff	plusw1,btemp+9
 17714  013500  0E0A               	movlw	10
 17715  013502  2432               	addwf	(btemp+8)^0,w,c
 17716  013504  6ED9               	movwf	fsr2l,c
 17717  013506  0E00               	movlw	0
 17718  013508  2033               	addwfc	(btemp+9)^0,w,c
 17719  01350A  6EDA               	movwf	fsr2h,c
 17720  01350C  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 17721  013512  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 17722                           
 17723                           ;stkvar	_months @ sp[(-57)+49]
 17724  013518  0EF8               	movlw	-8
 17725  01351A  50E3               	movf	plusw1,w,c
 17726  01351C  0F02               	addlw	2
 17727  01351E  6E34               	movwf	(btemp+10)^0,c
 17728  013520  0EF9               	movlw	-7
 17729  013522  006F FF8C  F035    	movff	plusw1,btemp+11
 17730  013528  0E00               	movlw	0
 17731  01352A  2235               	addwfc	(btemp+11)^0,f,c
 17732                           
 17733                           ;stkvar	_tm @ sp[(-57)+-10]
 17734  01352C  0EBD               	movlw	-67
 17735  01352E  006F FF8C  F032    	movff	plusw1,btemp+8
 17736  013534  0EBE               	movlw	-66
 17737  013536  006F FF8C  F033    	movff	plusw1,btemp+9
 17738  01353C  0E08               	movlw	8
 17739  01353E  2432               	addwf	(btemp+8)^0,w,c
 17740  013540  6ED9               	movwf	fsr2l,c
 17741  013542  0E00               	movlw	0
 17742  013544  2033               	addwfc	(btemp+9)^0,w,c
 17743  013546  6EDA               	movwf	fsr2h,c
 17744  013548  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 17745  01354E  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 17746                           
 17747                           ;stkvar	_remdays @ sp[(-57)+25]
 17748  013554  0EE0               	movlw	-32
 17749  013556  50E3               	movf	plusw1,w,c
 17750  013558  0F01               	addlw	1
 17751  01355A  6E34               	movwf	(btemp+10)^0,c
 17752  01355C  0EE1               	movlw	-31
 17753  01355E  006F FF8C  F035    	movff	plusw1,btemp+11
 17754  013564  0E00               	movlw	0
 17755  013566  2235               	addwfc	(btemp+11)^0,f,c
 17756                           
 17757                           ;stkvar	_tm @ sp[(-57)+-10]
 17758  013568  0EBD               	movlw	-67
 17759  01356A  006F FF8C  F032    	movff	plusw1,btemp+8
 17760  013570  0EBE               	movlw	-66
 17761  013572  006F FF8C  F033    	movff	plusw1,btemp+9
 17762  013578  0E06               	movlw	6
 17763  01357A  2432               	addwf	(btemp+8)^0,w,c
 17764  01357C  6ED9               	movwf	fsr2l,c
 17765  01357E  0E00               	movlw	0
 17766  013580  2033               	addwfc	(btemp+9)^0,w,c
 17767  013582  6EDA               	movwf	fsr2h,c
 17768  013584  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 17769  01358A  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 17770                           
 17771                           ;stkvar	_wday @ sp[(-57)+55]
 17772  013590  50E1               	movf	fsr1l,w,c
 17773  013592  0FFE               	addlw	-2
 17774  013594  6ED9               	movwf	fsr2l,c
 17775  013596  50E2               	movf	fsr1h,w,c
 17776  013598  6EDA               	movwf	fsr2h,c
 17777  01359A  0EFF               	movlw	255
 17778  01359C  22DA               	addwfc	fsr2h,f,c
 17779                           
 17780                           ;stkvar	_tm @ sp[(-57)+-10]
 17781  01359E  0EBD               	movlw	-67
 17782  0135A0  006F FF8C  F034    	movff	plusw1,btemp+10
 17783  0135A6  0EBE               	movlw	-66
 17784  0135A8  006F FF8C  F035    	movff	plusw1,btemp+11
 17785  0135AE  0E0C               	movlw	12
 17786  0135B0  2434               	addwf	(btemp+10)^0,w,c
 17787  0135B2  6EE9               	movwf	fsr0l,c
 17788  0135B4  0E00               	movlw	0
 17789  0135B6  2035               	addwfc	(btemp+11)^0,w,c
 17790  0135B8  6EEA               	movwf	fsr0h,c
 17791  0135BA  006F FF7B FFEE     	movff	postinc2,postinc0
 17792  0135C0  006F FF77 FFED     	movff	postdec2,postdec0
 17793                           
 17794                           ;stkvar	_yday @ sp[(-57)+53]
 17795  0135C6  50E1               	movf	fsr1l,w,c
 17796  0135C8  0FFC               	addlw	-4
 17797  0135CA  6ED9               	movwf	fsr2l,c
 17798  0135CC  50E2               	movf	fsr1h,w,c
 17799  0135CE  6EDA               	movwf	fsr2h,c
 17800  0135D0  0EFF               	movlw	255
 17801  0135D2  22DA               	addwfc	fsr2h,f,c
 17802                           
 17803                           ;stkvar	_tm @ sp[(-57)+-10]
 17804  0135D4  0EBD               	movlw	-67
 17805  0135D6  006F FF8C  F034    	movff	plusw1,btemp+10
 17806  0135DC  0EBE               	movlw	-66
 17807  0135DE  006F FF8C  F035    	movff	plusw1,btemp+11
 17808  0135E4  0E0E               	movlw	14
 17809  0135E6  2434               	addwf	(btemp+10)^0,w,c
 17810  0135E8  6EE9               	movwf	fsr0l,c
 17811  0135EA  0E00               	movlw	0
 17812  0135EC  2035               	addwfc	(btemp+11)^0,w,c
 17813  0135EE  6EEA               	movwf	fsr0h,c
 17814  0135F0  006F FF7B FFEE     	movff	postinc2,postinc0
 17815  0135F6  006F FF77 FFED     	movff	postdec2,postdec0
 17816  0135FC  0E10               	movlw	16
 17817  0135FE  6EE6               	movwf	postinc1,c
 17818  013600  0E0E               	movlw	14
 17819  013602  6EE6               	movwf	postinc1,c
 17820  013604  0E00               	movlw	0
 17821  013606  6EE6               	movwf	postinc1,c
 17822  013608  0E00               	movlw	0
 17823  01360A  6EE6               	movwf	postinc1,c
 17824                           
 17825                           ;stkvar	_remsecs @ sp[(-61)+41]
 17826  01360C  0EEC               	movlw	-20
 17827  01360E  006F FF8F FFE6     	movff	plusw1,postinc1
 17828  013614  006F FF8F FFE6     	movff	plusw1,postinc1
 17829  01361A  006F FF8F FFE6     	movff	plusw1,postinc1
 17830  013620  006F FF8F FFE6     	movff	plusw1,postinc1
 17831  013626  ECA4  F0EB         	call	___aldiv	;wreg free
 17832  01362A  0060  F0A8  F034   	movff	btemp,btemp+10
 17833  013630  0060  F0AC  F035   	movff	btemp+1,btemp+11
 17834                           
 17835                           ;stkvar	_tm @ sp[(-57)+-10]
 17836  013636  0EBD               	movlw	-67
 17837  013638  006F FF8C  F032    	movff	plusw1,btemp+8
 17838  01363E  0EBE               	movlw	-66
 17839  013640  006F FF8C  F033    	movff	plusw1,btemp+9
 17840  013646  0E04               	movlw	4
 17841  013648  2432               	addwf	(btemp+8)^0,w,c
 17842  01364A  6ED9               	movwf	fsr2l,c
 17843  01364C  0E00               	movlw	0
 17844  01364E  2033               	addwfc	(btemp+9)^0,w,c
 17845  013650  6EDA               	movwf	fsr2h,c
 17846  013652  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 17847  013658  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 17848  01365E  0E3C               	movlw	60
 17849  013660  6EE6               	movwf	postinc1,c
 17850  013662  0E00               	movlw	0
 17851  013664  6EE6               	movwf	postinc1,c
 17852  013666  0E00               	movlw	0
 17853  013668  6EE6               	movwf	postinc1,c
 17854  01366A  0E00               	movlw	0
 17855  01366C  6EE6               	movwf	postinc1,c
 17856  01366E  0E3C               	movlw	60
 17857  013670  6EE6               	movwf	postinc1,c
 17858  013672  0E00               	movlw	0
 17859  013674  6EE6               	movwf	postinc1,c
 17860  013676  0E00               	movlw	0
 17861  013678  6EE6               	movwf	postinc1,c
 17862  01367A  0E00               	movlw	0
 17863  01367C  6EE6               	movwf	postinc1,c
 17864                           
 17865                           ;stkvar	_remsecs @ sp[(-65)+41]
 17866  01367E  0EE8               	movlw	-24
 17867  013680  006F FF8F FFE6     	movff	plusw1,postinc1
 17868  013686  006F FF8F FFE6     	movff	plusw1,postinc1
 17869  01368C  006F FF8F FFE6     	movff	plusw1,postinc1
 17870  013692  006F FF8F FFE6     	movff	plusw1,postinc1
 17871  013698  ECA4  F0EB         	call	___aldiv	;wreg free
 17872  01369C  0060  F0AB  FFE6   	movff	btemp,postinc1
 17873  0136A2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 17874  0136A8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 17875  0136AE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 17876  0136B4  EC2A  F0F0         	call	___almod	;wreg free
 17877  0136B8  0060  F0A8  F034   	movff	btemp,btemp+10
 17878  0136BE  0060  F0AC  F035   	movff	btemp+1,btemp+11
 17879                           
 17880                           ;stkvar	_tm @ sp[(-57)+-10]
 17881  0136C4  0EBD               	movlw	-67
 17882  0136C6  006F FF8C  F032    	movff	plusw1,btemp+8
 17883  0136CC  0EBE               	movlw	-66
 17884  0136CE  006F FF8C  F033    	movff	plusw1,btemp+9
 17885  0136D4  0E02               	movlw	2
 17886  0136D6  2432               	addwf	(btemp+8)^0,w,c
 17887  0136D8  6ED9               	movwf	fsr2l,c
 17888  0136DA  0E00               	movlw	0
 17889  0136DC  2033               	addwfc	(btemp+9)^0,w,c
 17890  0136DE  6EDA               	movwf	fsr2h,c
 17891  0136E0  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 17892  0136E6  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 17893  0136EC  0E3C               	movlw	60
 17894  0136EE  6EE6               	movwf	postinc1,c
 17895  0136F0  0E00               	movlw	0
 17896  0136F2  6EE6               	movwf	postinc1,c
 17897  0136F4  0E00               	movlw	0
 17898  0136F6  6EE6               	movwf	postinc1,c
 17899  0136F8  0E00               	movlw	0
 17900  0136FA  6EE6               	movwf	postinc1,c
 17901                           
 17902                           ;stkvar	_remsecs @ sp[(-61)+41]
 17903  0136FC  0EEC               	movlw	-20
 17904  0136FE  006F FF8F FFE6     	movff	plusw1,postinc1
 17905  013704  006F FF8F FFE6     	movff	plusw1,postinc1
 17906  01370A  006F FF8F FFE6     	movff	plusw1,postinc1
 17907  013710  006F FF8F FFE6     	movff	plusw1,postinc1
 17908  013716  EC2A  F0F0         	call	___almod	;wreg free
 17909  01371A  0060  F0A8  F034   	movff	btemp,btemp+10
 17910  013720  0060  F0AC  F035   	movff	btemp+1,btemp+11
 17911                           
 17912                           ;stkvar	_tm @ sp[(-57)+-10]
 17913  013726  0EBD               	movlw	-67
 17914  013728  006F FF8F FFD9     	movff	plusw1,fsr2l
 17915  01372E  0EBE               	movlw	-66
 17916  013730  006F FF8F FFDA     	movff	plusw1,fsr2h
 17917  013736  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 17918  01373C  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 17919  013742  0E00               	movlw	0
 17920  013744  6E2A               	movwf	btemp^0,c
 17921  013746  6A2B               	clrf	(btemp+1)^0,c
 17922  013748  6A2C               	clrf	(btemp+2)^0,c
 17923  01374A  6A2D               	clrf	(btemp+3)^0,c
 17924  01374C                     l3833:
 17925                           
 17926                           ; ___secs_to_tm: autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10
      +                          , argsize = 10, vargsize = 0
 17927  01374C  0EBD               	movlw	189
 17928  01374E  26E1               	addwf	fsr1l,f,c
 17929  013750  0EFF               	movlw	255
 17930  013752  22E2               	addwfc	fsr1h,f,c
 17931  013754  0012               	return		;funcret
 17932  013756                     __end_of___secs_to_tm:
 17933                           	opt callstack 0
 17934                           
 17935 ;; *************** function ___omul *****************
 17936 ;; Defined at:
 17937 ;;		line 91 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul64.c"
 17938 ;; Parameters:    Size  Location     Type
 17939 ;;  multiplier      8  [STACK] unsigned long long 
 17940 ;;  multiplicand    8  [STACK] unsigned long long 
 17941 ;; Auto vars:     Size  Location     Type
 17942 ;;  product         8  [STACK] unsigned long long 
 17943 ;; Return value:  Size  Location     Type
 17944 ;;                  8  [STACK] unsigned long long 
 17945 ;; Registers used:
 17946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17947 ;; Tracked objects:
 17948 ;;		On entry : 0/0
 17949 ;;		On exit  : 0/0
 17950 ;;		Unchanged: 0/0
 17951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17956 ;;Total ram usage:        0 bytes
 17957 ;; Hardware stack levels used:    1
 17958 ;; Hardware stack levels required when called:   15
 17959 ;; This function calls:
 17960 ;;		Nothing
 17961 ;; This function is called by:
 17962 ;;		___secs_to_tm
 17963 ;;		___year_to_secs
 17964 ;; This function uses a reentrant model
 17965 ;;
 17966                           
 17967                           	psect	text48
 17968  01E5DE                     __ptext48:
 17969                           	opt callstack 0
 17970  01E5DE                     ___omul:
 17971                           	opt callstack 0
 17972                           
 17973                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17974  01E5DE  0E08               	movlw	8
 17975  01E5E0  26E1               	addwf	fsr1l,f,c
 17976  01E5E2  0E00               	movlw	0
 17977  01E5E4  22E2               	addwfc	fsr1h,f,c
 17978                           
 17979                           ;stkvar	_product @ sp[(-8)+0]
 17980                           
 17981                           ;incstack = 0
 17982  01E5E6  0E07               	movlw	7
 17983  01E5E8  6E2A               	movwf	btemp^0,c
 17984  01E5EA  0EF8               	movlw	-8
 17985  01E5EC                     u8011:
 17986  01E5EC  6AE3               	clrf	plusw1,c
 17987  01E5EE  2AE8               	incf	wreg,f,c
 17988  01E5F0  062A               	decf	btemp^0,f,c
 17989  01E5F2  E2FC               	bc	u8011
 17990  01E5F4                     l10140:
 17991                           
 17992                           ;stkvar	_multiplier @ sp[(-8)+-8]
 17993  01E5F4  0EF0               	movlw	-16
 17994  01E5F6  A0E3               	btfss	plusw1,0,c
 17995  01E5F8  D050               	goto	l10144
 17996                           
 17997                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 17998                           ;stkvar	_product @ sp[(-8)+0]
 17999  01E5FA  0EF8               	movlw	-8
 18000  01E5FC  50E3               	movf	plusw1,w,c
 18001  01E5FE  6E2A               	movwf	btemp^0,c
 18002  01E600  0EE8               	movlw	-24
 18003  01E602  50E3               	movf	plusw1,w,c
 18004  01E604  262A               	addwf	btemp^0,f,c
 18005  01E606  0EF8               	movlw	-8
 18006  01E608  0060  F0AB  FFE3   	movff	btemp,plusw1
 18007  01E60E  0EF9               	movlw	-7
 18008  01E610  50E3               	movf	plusw1,w,c
 18009  01E612  6E2A               	movwf	btemp^0,c
 18010  01E614  0EE9               	movlw	-23
 18011  01E616  50E3               	movf	plusw1,w,c
 18012  01E618  222A               	addwfc	btemp^0,f,c
 18013  01E61A  0EF9               	movlw	-7
 18014  01E61C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18015  01E622  0EFA               	movlw	-6
 18016  01E624  50E3               	movf	plusw1,w,c
 18017  01E626  6E2A               	movwf	btemp^0,c
 18018  01E628  0EEA               	movlw	-22
 18019  01E62A  50E3               	movf	plusw1,w,c
 18020  01E62C  222A               	addwfc	btemp^0,f,c
 18021  01E62E  0EFA               	movlw	-6
 18022  01E630  0060  F0AB  FFE3   	movff	btemp,plusw1
 18023  01E636  0EFB               	movlw	-5
 18024  01E638  50E3               	movf	plusw1,w,c
 18025  01E63A  6E2A               	movwf	btemp^0,c
 18026  01E63C  0EEB               	movlw	-21
 18027  01E63E  50E3               	movf	plusw1,w,c
 18028  01E640  222A               	addwfc	btemp^0,f,c
 18029  01E642  0EFB               	movlw	-5
 18030  01E644  0060  F0AB  FFE3   	movff	btemp,plusw1
 18031  01E64A  0EFC               	movlw	-4
 18032  01E64C  50E3               	movf	plusw1,w,c
 18033  01E64E  6E2A               	movwf	btemp^0,c
 18034  01E650  0EEC               	movlw	-20
 18035  01E652  50E3               	movf	plusw1,w,c
 18036  01E654  222A               	addwfc	btemp^0,f,c
 18037  01E656  0EFC               	movlw	-4
 18038  01E658  0060  F0AB  FFE3   	movff	btemp,plusw1
 18039  01E65E  0EFD               	movlw	-3
 18040  01E660  50E3               	movf	plusw1,w,c
 18041  01E662  6E2A               	movwf	btemp^0,c
 18042  01E664  0EED               	movlw	-19
 18043  01E666  50E3               	movf	plusw1,w,c
 18044  01E668  222A               	addwfc	btemp^0,f,c
 18045  01E66A  0EFD               	movlw	-3
 18046  01E66C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18047  01E672  0EFE               	movlw	-2
 18048  01E674  50E3               	movf	plusw1,w,c
 18049  01E676  6E2A               	movwf	btemp^0,c
 18050  01E678  0EEE               	movlw	-18
 18051  01E67A  50E3               	movf	plusw1,w,c
 18052  01E67C  222A               	addwfc	btemp^0,f,c
 18053  01E67E  0EFE               	movlw	-2
 18054  01E680  0060  F0AB  FFE3   	movff	btemp,plusw1
 18055  01E686  0EFF               	movlw	-1
 18056  01E688  50E3               	movf	plusw1,w,c
 18057  01E68A  6E2A               	movwf	btemp^0,c
 18058  01E68C  0EEF               	movlw	-17
 18059  01E68E  50E3               	movf	plusw1,w,c
 18060  01E690  222A               	addwfc	btemp^0,f,c
 18061  01E692  0EFF               	movlw	-1
 18062  01E694  0060  F0AB  FFE3   	movff	btemp,plusw1
 18063  01E69A                     l10144:
 18064                           
 18065                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18066  01E69A  90D8               	bcf	status,0,c
 18067  01E69C  0EE8               	movlw	-24
 18068  01E69E  36E3               	rlcf	plusw1,f,c
 18069  01E6A0  0EE9               	movlw	-23
 18070  01E6A2  36E3               	rlcf	plusw1,f,c
 18071  01E6A4  0EEA               	movlw	-22
 18072  01E6A6  36E3               	rlcf	plusw1,f,c
 18073  01E6A8  0EEB               	movlw	-21
 18074  01E6AA  36E3               	rlcf	plusw1,f,c
 18075  01E6AC  0EEC               	movlw	-20
 18076  01E6AE  36E3               	rlcf	plusw1,f,c
 18077  01E6B0  0EED               	movlw	-19
 18078  01E6B2  36E3               	rlcf	plusw1,f,c
 18079  01E6B4  0EEE               	movlw	-18
 18080  01E6B6  36E3               	rlcf	plusw1,f,c
 18081  01E6B8  0EEF               	movlw	-17
 18082  01E6BA  36E3               	rlcf	plusw1,f,c
 18083                           
 18084                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18085  01E6BC  90D8               	bcf	status,0,c
 18086  01E6BE  0EF7               	movlw	-9
 18087  01E6C0  32E3               	rrcf	plusw1,f,c
 18088  01E6C2  0EF6               	movlw	-10
 18089  01E6C4  32E3               	rrcf	plusw1,f,c
 18090  01E6C6  0EF5               	movlw	-11
 18091  01E6C8  32E3               	rrcf	plusw1,f,c
 18092  01E6CA  0EF4               	movlw	-12
 18093  01E6CC  32E3               	rrcf	plusw1,f,c
 18094  01E6CE  0EF3               	movlw	-13
 18095  01E6D0  32E3               	rrcf	plusw1,f,c
 18096  01E6D2  0EF2               	movlw	-14
 18097  01E6D4  32E3               	rrcf	plusw1,f,c
 18098  01E6D6  0EF1               	movlw	-15
 18099  01E6D8  32E3               	rrcf	plusw1,f,c
 18100  01E6DA  0EF0               	movlw	-16
 18101  01E6DC  32E3               	rrcf	plusw1,f,c
 18102                           
 18103                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18104  01E6DE  0EF0               	movlw	-16
 18105  01E6E0  50E3               	movf	plusw1,w,c
 18106  01E6E2  E188               	bnz	l10140
 18107  01E6E4  0EF1               	movlw	-15
 18108  01E6E6  50E3               	movf	plusw1,w,c
 18109  01E6E8  E185               	bnz	l10140
 18110  01E6EA  0EF2               	movlw	-14
 18111  01E6EC  50E3               	movf	plusw1,w,c
 18112  01E6EE  E182               	bnz	l10140
 18113  01E6F0  0EF3               	movlw	-13
 18114  01E6F2  50E3               	movf	plusw1,w,c
 18115  01E6F4  E10C               	bnz	u8031
 18116  01E6F6  0EF4               	movlw	-12
 18117  01E6F8  50E3               	movf	plusw1,w,c
 18118  01E6FA  E109               	bnz	u8031
 18119  01E6FC  0EF5               	movlw	-11
 18120  01E6FE  50E3               	movf	plusw1,w,c
 18121  01E700  E106               	bnz	u8031
 18122  01E702  0EF6               	movlw	-10
 18123  01E704  50E3               	movf	plusw1,w,c
 18124  01E706  E103               	bnz	u8031
 18125  01E708  0EF7               	movlw	-9
 18126  01E70A  50E3               	movf	plusw1,w,c
 18127  01E70C  A4D8               	btfss	status,2,c
 18128  01E70E                     u8031:
 18129  01E70E  D772               	goto	l10140
 18130                           
 18131                           ;stkvar	_product @ sp[(-8)+0]
 18132  01E710  0EF8               	movlw	248
 18133  01E712  24E1               	addwf	fsr1l,w,c
 18134  01E714  6ED9               	movwf	fsr2l,c
 18135  01E716  0EFF               	movlw	255
 18136  01E718  20E2               	addwfc	fsr1h,w,c
 18137  01E71A  6EDA               	movwf	fsr2h,c
 18138                           
 18139                           ;stkvar	?___omul @ sp[(-8)+-8]
 18140  01E71C  0E08               	movlw	8
 18141  01E71E  6E2A               	movwf	btemp^0,c
 18142  01E720  0EF0               	movlw	-16
 18143  01E722                     us804999:
 18144  01E722  006F FF7B FFE3     	movff	postinc2,plusw1
 18145  01E728  28E8               	incf	wreg,w,c
 18146  01E72A  2E2A               	decfsz	btemp^0,f,c
 18147  01E72C  D7FA               	bra	us804999
 18148                           
 18149                           ; ___omul: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsi
      +                          ze = 16, vargsize = 0
 18150  01E72E  0EF8               	movlw	248
 18151  01E730  26E1               	addwf	fsr1l,f,c
 18152  01E732  0EFF               	movlw	255
 18153  01E734  22E2               	addwfc	fsr1h,f,c
 18154  01E736  0012               	return		;funcret
 18155  01E738                     __end_of___omul:
 18156                           	opt callstack 0
 18157                           
 18158 ;; *************** function ___lmul *****************
 18159 ;; Defined at:
 18160 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 18161 ;; Parameters:    Size  Location     Type
 18162 ;;  multiplier      4  [STACK] unsigned long 
 18163 ;;  multiplicand    4  [STACK] unsigned long 
 18164 ;; Auto vars:     Size  Location     Type
 18165 ;;  product         4  [STACK] unsigned long 
 18166 ;; Return value:  Size  Location     Type
 18167 ;;                  4  [STACK] unsigned long 
 18168 ;; Registers used:
 18169 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18170 ;; Tracked objects:
 18171 ;;		On entry : 0/0
 18172 ;;		On exit  : 0/0
 18173 ;;		Unchanged: 0/0
 18174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18179 ;;Total ram usage:        0 bytes
 18180 ;; Hardware stack levels used:    1
 18181 ;; Hardware stack levels required when called:   15
 18182 ;; This function calls:
 18183 ;;		Nothing
 18184 ;; This function is called by:
 18185 ;;		___secs_to_tm
 18186 ;;		_rule_to_secs
 18187 ;;		___year_to_secs
 18188 ;; This function uses a reentrant model
 18189 ;;
 18190                           
 18191                           	psect	text49
 18192  01F9C0                     __ptext49:
 18193                           	opt callstack 0
 18194  01F9C0                     ___lmul:
 18195                           	opt callstack 0
 18196                           
 18197                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18198  01F9C0  52E6               	movf	postinc1,f,c
 18199  01F9C2  52E6               	movf	postinc1,f,c
 18200  01F9C4  52E6               	movf	postinc1,f,c
 18201  01F9C6  52E6               	movf	postinc1,f,c
 18202                           
 18203                           ;stkvar	_product @ sp[(-4)+0]
 18204                           
 18205                           ;incstack = 0
 18206  01F9C8  0EFC               	movlw	-4
 18207  01F9CA  6AE3               	clrf	plusw1,c
 18208  01F9CC  0EFD               	movlw	-3
 18209  01F9CE  6AE3               	clrf	plusw1,c
 18210  01F9D0  0EFE               	movlw	-2
 18211  01F9D2  6AE3               	clrf	plusw1,c
 18212  01F9D4  0EFF               	movlw	-1
 18213  01F9D6  6AE3               	clrf	plusw1,c
 18214  01F9D8                     l2717:
 18215                           
 18216                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18217  01F9D8  0EF8               	movlw	-8
 18218  01F9DA  A0E3               	btfss	plusw1,0,c
 18219  01F9DC  D028               	goto	l10130
 18220                           
 18221                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 18222                           ;stkvar	_product @ sp[(-4)+0]
 18223  01F9DE  0EFC               	movlw	-4
 18224  01F9E0  50E3               	movf	plusw1,w,c
 18225  01F9E2  6E2A               	movwf	btemp^0,c
 18226  01F9E4  0EF4               	movlw	-12
 18227  01F9E6  50E3               	movf	plusw1,w,c
 18228  01F9E8  262A               	addwf	btemp^0,f,c
 18229  01F9EA  0EFC               	movlw	-4
 18230  01F9EC  0060  F0AB  FFE3   	movff	btemp,plusw1
 18231  01F9F2  0EFD               	movlw	-3
 18232  01F9F4  50E3               	movf	plusw1,w,c
 18233  01F9F6  6E2A               	movwf	btemp^0,c
 18234  01F9F8  0EF5               	movlw	-11
 18235  01F9FA  50E3               	movf	plusw1,w,c
 18236  01F9FC  222A               	addwfc	btemp^0,f,c
 18237  01F9FE  0EFD               	movlw	-3
 18238  01FA00  0060  F0AB  FFE3   	movff	btemp,plusw1
 18239  01FA06  0EFE               	movlw	-2
 18240  01FA08  50E3               	movf	plusw1,w,c
 18241  01FA0A  6E2A               	movwf	btemp^0,c
 18242  01FA0C  0EF6               	movlw	-10
 18243  01FA0E  50E3               	movf	plusw1,w,c
 18244  01FA10  222A               	addwfc	btemp^0,f,c
 18245  01FA12  0EFE               	movlw	-2
 18246  01FA14  0060  F0AB  FFE3   	movff	btemp,plusw1
 18247  01FA1A  0EFF               	movlw	-1
 18248  01FA1C  50E3               	movf	plusw1,w,c
 18249  01FA1E  6E2A               	movwf	btemp^0,c
 18250  01FA20  0EF7               	movlw	-9
 18251  01FA22  50E3               	movf	plusw1,w,c
 18252  01FA24  222A               	addwfc	btemp^0,f,c
 18253  01FA26  0EFF               	movlw	-1
 18254  01FA28  0060  F0AB  FFE3   	movff	btemp,plusw1
 18255  01FA2E                     l10130:
 18256                           
 18257                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 18258  01FA2E  90D8               	bcf	status,0,c
 18259  01FA30  0EF4               	movlw	-12
 18260  01FA32  36E3               	rlcf	plusw1,f,c
 18261  01FA34  0EF5               	movlw	-11
 18262  01FA36  36E3               	rlcf	plusw1,f,c
 18263  01FA38  0EF6               	movlw	-10
 18264  01FA3A  36E3               	rlcf	plusw1,f,c
 18265  01FA3C  0EF7               	movlw	-9
 18266  01FA3E  36E3               	rlcf	plusw1,f,c
 18267                           
 18268                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18269  01FA40  90D8               	bcf	status,0,c
 18270  01FA42  0EFB               	movlw	-5
 18271  01FA44  32E3               	rrcf	plusw1,f,c
 18272  01FA46  0EFA               	movlw	-6
 18273  01FA48  32E3               	rrcf	plusw1,f,c
 18274  01FA4A  0EF9               	movlw	-7
 18275  01FA4C  32E3               	rrcf	plusw1,f,c
 18276  01FA4E  0EF8               	movlw	-8
 18277  01FA50  32E3               	rrcf	plusw1,f,c
 18278                           
 18279                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18280  01FA52  0EF8               	movlw	-8
 18281  01FA54  50E3               	movf	plusw1,w,c
 18282  01FA56  E1C0               	bnz	l2717
 18283  01FA58  0EF9               	movlw	-7
 18284  01FA5A  50E3               	movf	plusw1,w,c
 18285  01FA5C  E1BD               	bnz	l2717
 18286  01FA5E  0EFA               	movlw	-6
 18287  01FA60  50E3               	movf	plusw1,w,c
 18288  01FA62  E1BA               	bnz	l2717
 18289  01FA64  0EFB               	movlw	-5
 18290  01FA66  50E3               	movf	plusw1,w,c
 18291  01FA68  A4D8               	btfss	status,2,c
 18292  01FA6A  D7B6               	goto	l2717
 18293                           
 18294                           ;stkvar	_product @ sp[(-4)+0]
 18295  01FA6C  0EFC               	movlw	-4
 18296  01FA6E  006F FF8C  F02A    	movff	plusw1,btemp
 18297  01FA74  0EFD               	movlw	-3
 18298  01FA76  006F FF8C  F02B    	movff	plusw1,btemp+1
 18299  01FA7C  0EFE               	movlw	-2
 18300  01FA7E  006F FF8C  F02C    	movff	plusw1,btemp+2
 18301  01FA84  0EFF               	movlw	-1
 18302  01FA86  006F FF8C  F02D    	movff	plusw1,btemp+3
 18303                           
 18304                           ; ___lmul: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18305  01FA8C  0EF4               	movlw	244
 18306  01FA8E  26E1               	addwf	fsr1l,f,c
 18307  01FA90  0EFF               	movlw	255
 18308  01FA92  22E2               	addwfc	fsr1h,f,c
 18309  01FA94  0012               	return		;funcret
 18310  01FA96                     __end_of___lmul:
 18311                           	opt callstack 0
 18312                           
 18313 ;; *************** function ___almod *****************
 18314 ;; Defined at:
 18315 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/almod.c"
 18316 ;; Parameters:    Size  Location     Type
 18317 ;;  dividend        4  [STACK] long 
 18318 ;;  divisor         4  [STACK] long 
 18319 ;; Auto vars:     Size  Location     Type
 18320 ;;  sign            1  [STACK] unsigned char 
 18321 ;;  counter         1  [STACK] unsigned char 
 18322 ;; Return value:  Size  Location     Type
 18323 ;;                  4  [STACK] long 
 18324 ;; Registers used:
 18325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18326 ;; Tracked objects:
 18327 ;;		On entry : 0/39
 18328 ;;		On exit  : 0/0
 18329 ;;		Unchanged: 0/0
 18330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18335 ;;Total ram usage:        0 bytes
 18336 ;; Hardware stack levels used:    1
 18337 ;; Hardware stack levels required when called:   15
 18338 ;; This function calls:
 18339 ;;		Nothing
 18340 ;; This function is called by:
 18341 ;;		___secs_to_tm
 18342 ;; This function uses a reentrant model
 18343 ;;
 18344                           
 18345                           	psect	text50
 18346  01E054                     __ptext50:
 18347                           	opt callstack 0
 18348  01E054                     ___almod:
 18349                           	opt callstack 0
 18350                           
 18351                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18352  01E054  52E6               	movf	postinc1,f,c
 18353  01E056  52E6               	movf	postinc1,f,c
 18354                           
 18355                           ;stkvar	_sign @ sp[(-2)+0]
 18356                           
 18357                           ;incstack = 0
 18358  01E058  0EFE               	movlw	-2
 18359  01E05A  6AE3               	clrf	plusw1,c
 18360                           
 18361                           ;stkvar	_dividend @ sp[(-2)+-4]
 18362  01E05C  0EFD               	movlw	-3
 18363  01E05E  AEE3               	btfss	plusw1,7,c
 18364  01E060  D014               	goto	l11920
 18365                           
 18366                           ;stkvar	_dividend @ sp[(-2)+-4]
 18367                           ;stkvar	_dividend @ sp[(-2)+-4]
 18368  01E062  0EFA               	movlw	-6
 18369  01E064  6CE3               	negf	plusw1,c
 18370  01E066  0EFB               	movlw	-5
 18371  01E068  1EE3               	comf	plusw1,f,c
 18372  01E06A  0EFC               	movlw	-4
 18373  01E06C  1EE3               	comf	plusw1,f,c
 18374  01E06E  0EFD               	movlw	-3
 18375  01E070  1EE3               	comf	plusw1,f,c
 18376  01E072  E308               	bnc	u11160
 18377  01E074  0EFB               	movlw	-5
 18378  01E076  2AE3               	incf	plusw1,f,c
 18379  01E078  E305               	bnc	u11160
 18380  01E07A  0EFC               	movlw	-4
 18381  01E07C  2AE3               	incf	plusw1,f,c
 18382  01E07E  E302               	bnc	u11160
 18383  01E080  0EFD               	movlw	-3
 18384  01E082  2AE3               	incf	plusw1,f,c
 18385  01E084                     u11160:
 18386                           
 18387                           ;stkvar	_sign @ sp[(-2)+0]
 18388  01E084  0EFE               	movlw	-2
 18389  01E086  6AE3               	clrf	plusw1,c
 18390  01E088  2AE3               	incf	plusw1,f,c
 18391  01E08A                     l11920:
 18392                           
 18393                           ;stkvar	_divisor @ sp[(-2)+-8]
 18394  01E08A  0EF9               	movlw	-7
 18395  01E08C  AEE3               	btfss	plusw1,7,c
 18396  01E08E  D011               	goto	u11180
 18397                           
 18398                           ;stkvar	_divisor @ sp[(-2)+-8]
 18399                           ;stkvar	_divisor @ sp[(-2)+-8]
 18400  01E090  0EF6               	movlw	-10
 18401  01E092  6CE3               	negf	plusw1,c
 18402  01E094  0EF7               	movlw	-9
 18403  01E096  1EE3               	comf	plusw1,f,c
 18404  01E098  0EF8               	movlw	-8
 18405  01E09A  1EE3               	comf	plusw1,f,c
 18406  01E09C  0EF9               	movlw	-7
 18407  01E09E  1EE3               	comf	plusw1,f,c
 18408  01E0A0  E308               	bnc	u11180
 18409  01E0A2  0EF7               	movlw	-9
 18410  01E0A4  2AE3               	incf	plusw1,f,c
 18411  01E0A6  E305               	bnc	u11180
 18412  01E0A8  0EF8               	movlw	-8
 18413  01E0AA  2AE3               	incf	plusw1,f,c
 18414  01E0AC  E302               	bnc	u11180
 18415  01E0AE  0EF9               	movlw	-7
 18416  01E0B0  2AE3               	incf	plusw1,f,c
 18417  01E0B2                     u11180:
 18418                           
 18419                           ;stkvar	_divisor @ sp[(-2)+-8]
 18420  01E0B2  0EF6               	movlw	-10
 18421  01E0B4  50E3               	movf	plusw1,w,c
 18422  01E0B6  E10A               	bnz	u11190
 18423  01E0B8  0EF7               	movlw	-9
 18424  01E0BA  50E3               	movf	plusw1,w,c
 18425  01E0BC  E107               	bnz	u11190
 18426  01E0BE  0EF8               	movlw	-8
 18427  01E0C0  50E3               	movf	plusw1,w,c
 18428  01E0C2  E104               	bnz	u11190
 18429  01E0C4  0EF9               	movlw	-7
 18430  01E0C6  50E3               	movf	plusw1,w,c
 18431  01E0C8  B4D8               	btfsc	status,2,c
 18432  01E0CA  D04D               	goto	u11220
 18433  01E0CC                     u11190:
 18434                           
 18435                           ;stkvar	_counter @ sp[(-2)+1]
 18436  01E0CC  0EFF               	movlw	-1
 18437  01E0CE  6AE3               	clrf	plusw1,c
 18438  01E0D0  D00A               	goto	L16
 18439  01E0D2                     l11928:
 18440                           
 18441                           ;stkvar	_divisor @ sp[(-2)+-8]
 18442  01E0D2  90D8               	bcf	status,0,c
 18443  01E0D4  0EF6               	movlw	-10
 18444  01E0D6  36E3               	rlcf	plusw1,f,c
 18445  01E0D8  0EF7               	movlw	-9
 18446  01E0DA  36E3               	rlcf	plusw1,f,c
 18447  01E0DC  0EF8               	movlw	-8
 18448  01E0DE  36E3               	rlcf	plusw1,f,c
 18449  01E0E0  0EF9               	movlw	-7
 18450  01E0E2  36E3               	rlcf	plusw1,f,c
 18451                           
 18452                           ;stkvar	_counter @ sp[(-2)+1]
 18453  01E0E4  0EFF               	movlw	-1
 18454  01E0E6                     L16:
 18455  01E0E6  2AE3               	incf	plusw1,f,c
 18456                           
 18457                           ;stkvar	_divisor @ sp[(-2)+-8]
 18458  01E0E8  0EF9               	movlw	-7
 18459  01E0EA  AEE3               	btfss	plusw1,7,c
 18460  01E0EC  D7F2               	goto	l11928
 18461  01E0EE                     u11200:
 18462                           
 18463                           ;stkvar	_divisor @ sp[(-2)+-8]
 18464                           ;stkvar	_dividend @ sp[(-2)+-4]
 18465  01E0EE  50E1               	movf	fsr1l,w,c
 18466  01E0F0  0FFA               	addlw	-6
 18467  01E0F2  6ED9               	movwf	fsr2l,c
 18468  01E0F4  50E2               	movf	fsr1h,w,c
 18469  01E0F6  6EDA               	movwf	fsr2h,c
 18470  01E0F8  0EFF               	movlw	255
 18471  01E0FA  22DA               	addwfc	fsr2h,f,c
 18472  01E0FC  0EF6               	movlw	-10
 18473  01E0FE  50E3               	movf	plusw1,w,c
 18474  01E100  5CDE               	subwf	postinc2,w,c
 18475  01E102  0EF7               	movlw	-9
 18476  01E104  50E3               	movf	plusw1,w,c
 18477  01E106  58DE               	subwfb	postinc2,w,c
 18478  01E108  0EF8               	movlw	-8
 18479  01E10A  50E3               	movf	plusw1,w,c
 18480  01E10C  58DE               	subwfb	postinc2,w,c
 18481  01E10E  0EF9               	movlw	-7
 18482  01E110  50E3               	movf	plusw1,w,c
 18483  01E112  58DE               	subwfb	postinc2,w,c
 18484  01E114  A0D8               	btfss	status,0,c
 18485  01E116  D013               	goto	l11936
 18486                           
 18487                           ;stkvar	_divisor @ sp[(-2)+-8]
 18488                           ;stkvar	_dividend @ sp[(-2)+-4]
 18489  01E118  50E1               	movf	fsr1l,w,c
 18490  01E11A  0FFA               	addlw	-6
 18491  01E11C  6ED9               	movwf	fsr2l,c
 18492  01E11E  50E2               	movf	fsr1h,w,c
 18493  01E120  6EDA               	movwf	fsr2h,c
 18494  01E122  0EFF               	movlw	255
 18495  01E124  22DA               	addwfc	fsr2h,f,c
 18496  01E126  0EF6               	movlw	-10
 18497  01E128  50E3               	movf	plusw1,w,c
 18498  01E12A  5EDE               	subwf	postinc2,f,c
 18499  01E12C  0EF7               	movlw	-9
 18500  01E12E  50E3               	movf	plusw1,w,c
 18501  01E130  5ADE               	subwfb	postinc2,f,c
 18502  01E132  0EF8               	movlw	-8
 18503  01E134  50E3               	movf	plusw1,w,c
 18504  01E136  5ADE               	subwfb	postinc2,f,c
 18505  01E138  0EF9               	movlw	-7
 18506  01E13A  50E3               	movf	plusw1,w,c
 18507  01E13C  5ADE               	subwfb	postinc2,f,c
 18508  01E13E                     l11936:
 18509                           
 18510                           ;stkvar	_divisor @ sp[(-2)+-8]
 18511  01E13E  90D8               	bcf	status,0,c
 18512  01E140  0EF9               	movlw	-7
 18513  01E142  32E3               	rrcf	plusw1,f,c
 18514  01E144  0EF8               	movlw	-8
 18515  01E146  32E3               	rrcf	plusw1,f,c
 18516  01E148  0EF7               	movlw	-9
 18517  01E14A  32E3               	rrcf	plusw1,f,c
 18518  01E14C  0EF6               	movlw	-10
 18519  01E14E  32E3               	rrcf	plusw1,f,c
 18520                           
 18521                           ;stkvar	_counter @ sp[(-2)+1]
 18522  01E150  0EFF               	movlw	-1
 18523  01E152  50E3               	movf	plusw1,w,c
 18524  01E154  6E2A               	movwf	btemp^0,c
 18525  01E156  0E01               	movlw	1
 18526  01E158  5E2A               	subwf	btemp^0,f,c
 18527  01E15A  0EFF               	movlw	-1
 18528  01E15C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18529  01E162  A4D8               	btfss	status,2,c
 18530  01E164  D7C4               	goto	u11200
 18531  01E166                     u11220:
 18532                           
 18533                           ;stkvar	_sign @ sp[(-2)+0]
 18534  01E166  0EFE               	movlw	-2
 18535  01E168  50E3               	movf	plusw1,w,c
 18536  01E16A  B4D8               	btfsc	status,2,c
 18537  01E16C  D011               	goto	u11240
 18538                           
 18539                           ;stkvar	_dividend @ sp[(-2)+-4]
 18540                           ;stkvar	_dividend @ sp[(-2)+-4]
 18541  01E16E  0EFA               	movlw	-6
 18542  01E170  6CE3               	negf	plusw1,c
 18543  01E172  0EFB               	movlw	-5
 18544  01E174  1EE3               	comf	plusw1,f,c
 18545  01E176  0EFC               	movlw	-4
 18546  01E178  1EE3               	comf	plusw1,f,c
 18547  01E17A  0EFD               	movlw	-3
 18548  01E17C  1EE3               	comf	plusw1,f,c
 18549  01E17E  E308               	bnc	u11240
 18550  01E180  0EFB               	movlw	-5
 18551  01E182  2AE3               	incf	plusw1,f,c
 18552  01E184  E305               	bnc	u11240
 18553  01E186  0EFC               	movlw	-4
 18554  01E188  2AE3               	incf	plusw1,f,c
 18555  01E18A  E302               	bnc	u11240
 18556  01E18C  0EFD               	movlw	-3
 18557  01E18E  2AE3               	incf	plusw1,f,c
 18558  01E190                     u11240:
 18559                           
 18560                           ;stkvar	_dividend @ sp[(-2)+-4]
 18561  01E190  0EFA               	movlw	-6
 18562  01E192  006F FF8C  F02A    	movff	plusw1,btemp
 18563  01E198  0EFB               	movlw	-5
 18564  01E19A  006F FF8C  F02B    	movff	plusw1,btemp+1
 18565  01E1A0  0EFC               	movlw	-4
 18566  01E1A2  006F FF8C  F02C    	movff	plusw1,btemp+2
 18567  01E1A8  0EFD               	movlw	-3
 18568  01E1AA  006F FF8C  F02D    	movff	plusw1,btemp+3
 18569                           
 18570                           ; ___almod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 18571  01E1B0  0EF6               	movlw	246
 18572  01E1B2  26E1               	addwf	fsr1l,f,c
 18573  01E1B4  0EFF               	movlw	255
 18574  01E1B6  22E2               	addwfc	fsr1h,f,c
 18575  01E1B8  0012               	return		;funcret
 18576  01E1BA                     __end_of___almod:
 18577                           	opt callstack 0
 18578                           
 18579 ;; *************** function ___aldiv *****************
 18580 ;; Defined at:
 18581 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 18582 ;; Parameters:    Size  Location     Type
 18583 ;;  dividend        4  [STACK] long 
 18584 ;;  divisor         4  [STACK] long 
 18585 ;; Auto vars:     Size  Location     Type
 18586 ;;  quotient        4  [STACK] long 
 18587 ;;  sign            1  [STACK] unsigned char 
 18588 ;;  counter         1  [STACK] unsigned char 
 18589 ;; Return value:  Size  Location     Type
 18590 ;;                  4  [STACK] long 
 18591 ;; Registers used:
 18592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18593 ;; Tracked objects:
 18594 ;;		On entry : 0/0
 18595 ;;		On exit  : 0/0
 18596 ;;		Unchanged: 0/0
 18597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18602 ;;Total ram usage:        0 bytes
 18603 ;; Hardware stack levels used:    1
 18604 ;; Hardware stack levels required when called:   15
 18605 ;; This function calls:
 18606 ;;		Nothing
 18607 ;; This function is called by:
 18608 ;;		___secs_to_tm
 18609 ;;		_rule_to_secs
 18610 ;; This function uses a reentrant model
 18611 ;;
 18612                           
 18613                           	psect	text51
 18614  01D748                     __ptext51:
 18615                           	opt callstack 0
 18616  01D748                     ___aldiv:
 18617                           	opt callstack 0
 18618                           
 18619                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18620  01D748  0E06               	movlw	6
 18621  01D74A  26E1               	addwf	fsr1l,f,c
 18622  01D74C  0E00               	movlw	0
 18623  01D74E  22E2               	addwfc	fsr1h,f,c
 18624                           
 18625                           ;stkvar	_sign @ sp[(-6)+4]
 18626                           
 18627                           ;incstack = 0
 18628  01D750  0EFE               	movlw	-2
 18629  01D752  6AE3               	clrf	plusw1,c
 18630                           
 18631                           ;stkvar	_divisor @ sp[(-6)+-8]
 18632  01D754  0EF5               	movlw	-11
 18633  01D756  AEE3               	btfss	plusw1,7,c
 18634  01D758  D014               	goto	l11466
 18635                           
 18636                           ;stkvar	_divisor @ sp[(-6)+-8]
 18637                           ;stkvar	_divisor @ sp[(-6)+-8]
 18638  01D75A  0EF2               	movlw	-14
 18639  01D75C  6CE3               	negf	plusw1,c
 18640  01D75E  0EF3               	movlw	-13
 18641  01D760  1EE3               	comf	plusw1,f,c
 18642  01D762  0EF4               	movlw	-12
 18643  01D764  1EE3               	comf	plusw1,f,c
 18644  01D766  0EF5               	movlw	-11
 18645  01D768  1EE3               	comf	plusw1,f,c
 18646  01D76A  E308               	bnc	u10480
 18647  01D76C  0EF3               	movlw	-13
 18648  01D76E  2AE3               	incf	plusw1,f,c
 18649  01D770  E305               	bnc	u10480
 18650  01D772  0EF4               	movlw	-12
 18651  01D774  2AE3               	incf	plusw1,f,c
 18652  01D776  E302               	bnc	u10480
 18653  01D778  0EF5               	movlw	-11
 18654  01D77A  2AE3               	incf	plusw1,f,c
 18655  01D77C                     u10480:
 18656                           
 18657                           ;stkvar	_sign @ sp[(-6)+4]
 18658  01D77C  0EFE               	movlw	-2
 18659  01D77E  6AE3               	clrf	plusw1,c
 18660  01D780  2AE3               	incf	plusw1,f,c
 18661  01D782                     l11466:
 18662                           
 18663                           ;stkvar	_dividend @ sp[(-6)+-4]
 18664  01D782  0EF9               	movlw	-7
 18665  01D784  AEE3               	btfss	plusw1,7,c
 18666  01D786  D013               	goto	l11472
 18667                           
 18668                           ;stkvar	_dividend @ sp[(-6)+-4]
 18669                           ;stkvar	_dividend @ sp[(-6)+-4]
 18670  01D788  0EF6               	movlw	-10
 18671  01D78A  6CE3               	negf	plusw1,c
 18672  01D78C  0EF7               	movlw	-9
 18673  01D78E  1EE3               	comf	plusw1,f,c
 18674  01D790  0EF8               	movlw	-8
 18675  01D792  1EE3               	comf	plusw1,f,c
 18676  01D794  0EF9               	movlw	-7
 18677  01D796  1EE3               	comf	plusw1,f,c
 18678  01D798  E308               	bnc	u10500
 18679  01D79A  0EF7               	movlw	-9
 18680  01D79C  2AE3               	incf	plusw1,f,c
 18681  01D79E  E305               	bnc	u10500
 18682  01D7A0  0EF8               	movlw	-8
 18683  01D7A2  2AE3               	incf	plusw1,f,c
 18684  01D7A4  E302               	bnc	u10500
 18685  01D7A6  0EF9               	movlw	-7
 18686  01D7A8  2AE3               	incf	plusw1,f,c
 18687  01D7AA                     u10500:
 18688                           
 18689                           ;stkvar	_sign @ sp[(-6)+4]
 18690  01D7AA  0EFE               	movlw	-2
 18691  01D7AC  70E3               	btg	plusw1,0,c
 18692  01D7AE                     l11472:
 18693                           
 18694                           ;stkvar	_quotient @ sp[(-6)+0]
 18695  01D7AE  0EFA               	movlw	-6
 18696  01D7B0  6AE3               	clrf	plusw1,c
 18697  01D7B2  0EFB               	movlw	-5
 18698  01D7B4  6AE3               	clrf	plusw1,c
 18699  01D7B6  0EFC               	movlw	-4
 18700  01D7B8  6AE3               	clrf	plusw1,c
 18701  01D7BA  0EFD               	movlw	-3
 18702  01D7BC  6AE3               	clrf	plusw1,c
 18703                           
 18704                           ;stkvar	_divisor @ sp[(-6)+-8]
 18705  01D7BE  0EF2               	movlw	-14
 18706  01D7C0  50E3               	movf	plusw1,w,c
 18707  01D7C2  E10A               	bnz	u10510
 18708  01D7C4  0EF3               	movlw	-13
 18709  01D7C6  50E3               	movf	plusw1,w,c
 18710  01D7C8  E107               	bnz	u10510
 18711  01D7CA  0EF4               	movlw	-12
 18712  01D7CC  50E3               	movf	plusw1,w,c
 18713  01D7CE  E104               	bnz	u10510
 18714  01D7D0  0EF5               	movlw	-11
 18715  01D7D2  50E3               	movf	plusw1,w,c
 18716  01D7D4  B4D8               	btfsc	status,2,c
 18717  01D7D6  D058               	goto	u10540
 18718  01D7D8                     u10510:
 18719                           
 18720                           ;stkvar	_counter @ sp[(-6)+5]
 18721  01D7D8  0EFF               	movlw	-1
 18722  01D7DA  6AE3               	clrf	plusw1,c
 18723  01D7DC  D00A               	goto	L17
 18724  01D7DE                     l11478:
 18725                           
 18726                           ;stkvar	_divisor @ sp[(-6)+-8]
 18727  01D7DE  90D8               	bcf	status,0,c
 18728  01D7E0  0EF2               	movlw	-14
 18729  01D7E2  36E3               	rlcf	plusw1,f,c
 18730  01D7E4  0EF3               	movlw	-13
 18731  01D7E6  36E3               	rlcf	plusw1,f,c
 18732  01D7E8  0EF4               	movlw	-12
 18733  01D7EA  36E3               	rlcf	plusw1,f,c
 18734  01D7EC  0EF5               	movlw	-11
 18735  01D7EE  36E3               	rlcf	plusw1,f,c
 18736                           
 18737                           ;stkvar	_counter @ sp[(-6)+5]
 18738  01D7F0  0EFF               	movlw	-1
 18739  01D7F2                     L17:
 18740  01D7F2  2AE3               	incf	plusw1,f,c
 18741                           
 18742                           ;stkvar	_divisor @ sp[(-6)+-8]
 18743  01D7F4  0EF5               	movlw	-11
 18744  01D7F6  AEE3               	btfss	plusw1,7,c
 18745  01D7F8  D7F2               	goto	l11478
 18746  01D7FA                     u10520:
 18747                           
 18748                           ;stkvar	_quotient @ sp[(-6)+0]
 18749  01D7FA  90D8               	bcf	status,0,c
 18750  01D7FC  0EFA               	movlw	-6
 18751  01D7FE  36E3               	rlcf	plusw1,f,c
 18752  01D800  0EFB               	movlw	-5
 18753  01D802  36E3               	rlcf	plusw1,f,c
 18754  01D804  0EFC               	movlw	-4
 18755  01D806  36E3               	rlcf	plusw1,f,c
 18756  01D808  0EFD               	movlw	-3
 18757  01D80A  36E3               	rlcf	plusw1,f,c
 18758                           
 18759                           ;stkvar	_divisor @ sp[(-6)+-8]
 18760                           ;stkvar	_dividend @ sp[(-6)+-4]
 18761  01D80C  50E1               	movf	fsr1l,w,c
 18762  01D80E  0FF6               	addlw	-10
 18763  01D810  6ED9               	movwf	fsr2l,c
 18764  01D812  50E2               	movf	fsr1h,w,c
 18765  01D814  6EDA               	movwf	fsr2h,c
 18766  01D816  0EFF               	movlw	255
 18767  01D818  22DA               	addwfc	fsr2h,f,c
 18768  01D81A  0EF2               	movlw	-14
 18769  01D81C  50E3               	movf	plusw1,w,c
 18770  01D81E  5CDE               	subwf	postinc2,w,c
 18771  01D820  0EF3               	movlw	-13
 18772  01D822  50E3               	movf	plusw1,w,c
 18773  01D824  58DE               	subwfb	postinc2,w,c
 18774  01D826  0EF4               	movlw	-12
 18775  01D828  50E3               	movf	plusw1,w,c
 18776  01D82A  58DE               	subwfb	postinc2,w,c
 18777  01D82C  0EF5               	movlw	-11
 18778  01D82E  50E3               	movf	plusw1,w,c
 18779  01D830  58DE               	subwfb	postinc2,w,c
 18780  01D832  A0D8               	btfss	status,0,c
 18781  01D834  D015               	goto	l11490
 18782                           
 18783                           ;stkvar	_divisor @ sp[(-6)+-8]
 18784                           ;stkvar	_dividend @ sp[(-6)+-4]
 18785  01D836  50E1               	movf	fsr1l,w,c
 18786  01D838  0FF6               	addlw	-10
 18787  01D83A  6ED9               	movwf	fsr2l,c
 18788  01D83C  50E2               	movf	fsr1h,w,c
 18789  01D83E  6EDA               	movwf	fsr2h,c
 18790  01D840  0EFF               	movlw	255
 18791  01D842  22DA               	addwfc	fsr2h,f,c
 18792  01D844  0EF2               	movlw	-14
 18793  01D846  50E3               	movf	plusw1,w,c
 18794  01D848  5EDE               	subwf	postinc2,f,c
 18795  01D84A  0EF3               	movlw	-13
 18796  01D84C  50E3               	movf	plusw1,w,c
 18797  01D84E  5ADE               	subwfb	postinc2,f,c
 18798  01D850  0EF4               	movlw	-12
 18799  01D852  50E3               	movf	plusw1,w,c
 18800  01D854  5ADE               	subwfb	postinc2,f,c
 18801  01D856  0EF5               	movlw	-11
 18802  01D858  50E3               	movf	plusw1,w,c
 18803  01D85A  5ADE               	subwfb	postinc2,f,c
 18804                           
 18805                           ;stkvar	_quotient @ sp[(-6)+0]
 18806  01D85C  0EFA               	movlw	-6
 18807  01D85E  80E3               	bsf	plusw1,0,c
 18808  01D860                     l11490:
 18809                           
 18810                           ;stkvar	_divisor @ sp[(-6)+-8]
 18811  01D860  90D8               	bcf	status,0,c
 18812  01D862  0EF5               	movlw	-11
 18813  01D864  32E3               	rrcf	plusw1,f,c
 18814  01D866  0EF4               	movlw	-12
 18815  01D868  32E3               	rrcf	plusw1,f,c
 18816  01D86A  0EF3               	movlw	-13
 18817  01D86C  32E3               	rrcf	plusw1,f,c
 18818  01D86E  0EF2               	movlw	-14
 18819  01D870  32E3               	rrcf	plusw1,f,c
 18820                           
 18821                           ;stkvar	_counter @ sp[(-6)+5]
 18822  01D872  0EFF               	movlw	-1
 18823  01D874  50E3               	movf	plusw1,w,c
 18824  01D876  6E2A               	movwf	btemp^0,c
 18825  01D878  0E01               	movlw	1
 18826  01D87A  5E2A               	subwf	btemp^0,f,c
 18827  01D87C  0EFF               	movlw	-1
 18828  01D87E  0060  F0AB  FFE3   	movff	btemp,plusw1
 18829  01D884  A4D8               	btfss	status,2,c
 18830  01D886  D7B9               	goto	u10520
 18831  01D888                     u10540:
 18832                           
 18833                           ;stkvar	_sign @ sp[(-6)+4]
 18834  01D888  0EFE               	movlw	-2
 18835  01D88A  50E3               	movf	plusw1,w,c
 18836  01D88C  B4D8               	btfsc	status,2,c
 18837  01D88E  D011               	goto	u10560
 18838                           
 18839                           ;stkvar	_quotient @ sp[(-6)+0]
 18840                           ;stkvar	_quotient @ sp[(-6)+0]
 18841  01D890  0EFA               	movlw	-6
 18842  01D892  6CE3               	negf	plusw1,c
 18843  01D894  0EFB               	movlw	-5
 18844  01D896  1EE3               	comf	plusw1,f,c
 18845  01D898  0EFC               	movlw	-4
 18846  01D89A  1EE3               	comf	plusw1,f,c
 18847  01D89C  0EFD               	movlw	-3
 18848  01D89E  1EE3               	comf	plusw1,f,c
 18849  01D8A0  E308               	bnc	u10560
 18850  01D8A2  0EFB               	movlw	-5
 18851  01D8A4  2AE3               	incf	plusw1,f,c
 18852  01D8A6  E305               	bnc	u10560
 18853  01D8A8  0EFC               	movlw	-4
 18854  01D8AA  2AE3               	incf	plusw1,f,c
 18855  01D8AC  E302               	bnc	u10560
 18856  01D8AE  0EFD               	movlw	-3
 18857  01D8B0  2AE3               	incf	plusw1,f,c
 18858  01D8B2                     u10560:
 18859                           
 18860                           ;stkvar	_quotient @ sp[(-6)+0]
 18861  01D8B2  0EFA               	movlw	-6
 18862  01D8B4  006F FF8C  F02A    	movff	plusw1,btemp
 18863  01D8BA  0EFB               	movlw	-5
 18864  01D8BC  006F FF8C  F02B    	movff	plusw1,btemp+1
 18865  01D8C2  0EFC               	movlw	-4
 18866  01D8C4  006F FF8C  F02C    	movff	plusw1,btemp+2
 18867  01D8CA  0EFD               	movlw	-3
 18868  01D8CC  006F FF8C  F02D    	movff	plusw1,btemp+3
 18869                           
 18870                           ; ___aldiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 18871  01D8D2  0EF2               	movlw	242
 18872  01D8D4  26E1               	addwf	fsr1l,f,c
 18873  01D8D6  0EFF               	movlw	255
 18874  01D8D8  22E2               	addwfc	fsr1h,f,c
 18875  01D8DA  0012               	return		;funcret
 18876  01D8DC                     __end_of___aldiv:
 18877                           	opt callstack 0
 18878                           
 18879 ;; *************** function _asctime *****************
 18880 ;; Defined at:
 18881 ;;		line 19 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 18882 ;; Parameters:    Size  Location     Type
 18883 ;;  tim             2  [STACK] PTR const struct tm
 18884 ;;		 -> localtime@tm(24), NULL(0), 
 18885 ;; Auto vars:     Size  Location     Type
 18886 ;;  cp              2  [STACK] PTR unsigned char 
 18887 ;;		 -> asctime@buf(27), 
 18888 ;;  s               2  [STACK] PTR const unsigned char 
 18889 ;;		 -> STR_128(37), STR_127(22), 
 18890 ;; Return value:  Size  Location     Type
 18891 ;;                  2  [STACK] PTR unsigned char 
 18892 ;; Registers used:
 18893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 18894 ;; Tracked objects:
 18895 ;;		On entry : 3F/0
 18896 ;;		On exit  : 0/0
 18897 ;;		Unchanged: 0/0
 18898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18903 ;;Total ram usage:        0 bytes
 18904 ;; Hardware stack levels used:    1
 18905 ;; Hardware stack levels required when called:   17
 18906 ;; This function calls:
 18907 ;;		___awdiv
 18908 ;;		___awmod
 18909 ;;		_put2d
 18910 ;; This function is called by:
 18911 ;;		_display_history
 18912 ;; This function uses a reentrant model
 18913 ;;
 18914                           
 18915                           	psect	text52
 18916  017FA0                     __ptext52:
 18917                           	opt callstack 0
 18918  017FA0                     _asctime:
 18919                           	opt callstack 0
 18920                           
 18921                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18922  017FA0  52E6               	movf	postinc1,f,c
 18923  017FA2  52E6               	movf	postinc1,f,c
 18924  017FA4  52E6               	movf	postinc1,f,c
 18925  017FA6  52E6               	movf	postinc1,f,c
 18926                           
 18927                           ;stkvar	_tim @ sp[(-4)+-2]
 18928                           
 18929                           ;incstack = 0
 18930  017FA8  0EFA               	movlw	-6
 18931  017FAA  006F FF8C  F034    	movff	plusw1,btemp+10
 18932  017FB0  0EFB               	movlw	-5
 18933  017FB2  006F FF8C  F035    	movff	plusw1,btemp+11
 18934  017FB8  0E0C               	movlw	12
 18935  017FBA  2434               	addwf	(btemp+10)^0,w,c
 18936  017FBC  6ED9               	movwf	fsr2l,c
 18937  017FBE  0E00               	movlw	0
 18938  017FC0  2035               	addwfc	(btemp+11)^0,w,c
 18939  017FC2  6EDA               	movwf	fsr2h,c
 18940  017FC4  006F FF78  F034    	movff	postinc2,btemp+10
 18941  017FCA  006F FF74  F035    	movff	postdec2,btemp+11
 18942  017FD0  0E03               	movlw	3
 18943  017FD2  0234               	mulwf	(btemp+10)^0,c
 18944  017FD4  006F FFCC  F032    	movff	prodl,btemp+8
 18945  017FDA  006F FFD0  F033    	movff	prodh,btemp+9
 18946  017FE0  0235               	mulwf	(btemp+11)^0,c
 18947  017FE2  50F3               	movf	prodl,w,c
 18948  017FE4  2633               	addwf	(btemp+9)^0,f,c
 18949  017FE6  0ED9               	movlw	low STR_127
 18950  017FE8  6E34               	movwf	(btemp+10)^0,c
 18951  017FEA  0EFB               	movlw	high STR_127
 18952  017FEC  6E35               	movwf	(btemp+11)^0,c
 18953  017FEE  5032               	movf	(btemp+8)^0,w,c
 18954  017FF0  2634               	addwf	(btemp+10)^0,f,c
 18955  017FF2  5033               	movf	(btemp+9)^0,w,c
 18956  017FF4  2235               	addwfc	(btemp+11)^0,f,c
 18957                           
 18958                           ;stkvar	_s @ sp[(-4)+2]
 18959  017FF6  0EFF               	movlw	-1
 18960  017FF8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18961  017FFE  0EFE               	movlw	-2
 18962  018000  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18963                           
 18964                           ;stkvar	_cp @ sp[(-4)+0]
 18965  018006  0E03               	movlw	high asctime@buf
 18966  018008  6E2A               	movwf	btemp^0,c
 18967  01800A  0EFD               	movlw	-3
 18968  01800C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18969  018012  0EC4               	movlw	low asctime@buf
 18970  018014  6E2A               	movwf	btemp^0,c
 18971  018016  0EFC               	movlw	-4
 18972  018018  0060  F0AB  FFE3   	movff	btemp,plusw1
 18973                           
 18974                           ;stkvar	_s @ sp[(-4)+2]
 18975  01801E  50E1               	movf	fsr1l,w,c
 18976  018020  0FFE               	addlw	-2
 18977  018022  6ED9               	movwf	fsr2l,c
 18978  018024  50E2               	movf	fsr1h,w,c
 18979  018026  6EDA               	movwf	fsr2h,c
 18980  018028  0EFF               	movlw	255
 18981  01802A  22DA               	addwfc	fsr2h,f,c
 18982  01802C  006F FF7B FFF6     	movff	postinc2,tblptrl
 18983  018032  006F FF77 FFF7     	movff	postdec2,tblptrh
 18984  018038                     	if	0	;tblptru may be non-zero
 18985  018038                     	endif
 18986  018038                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18987  018038  0E00               	movlw	low (__mediumconst shr (0+16))
 18988  01803A  6EF8               	movwf	tblptru,c
 18989  01803C                     	endif
 18990                           
 18991                           ;stkvar	_cp @ sp[(-4)+0]
 18992  01803C  0EFC               	movlw	-4
 18993  01803E  006F FF8F FFD9     	movff	plusw1,fsr2l
 18994  018044  0EFD               	movlw	-3
 18995  018046  006F FF8F FFDA     	movff	plusw1,fsr2h
 18996  01804C  0008               	tblrd		*
 18997  01804E  006F FFD7 FFDF     	movff	tablat,indf2
 18998                           
 18999                           ;stkvar	_s @ sp[(-4)+2]
 19000  018054  0EFE               	movlw	-2
 19001  018056  50E3               	movf	plusw1,w,c
 19002  018058  0F01               	addlw	1
 19003  01805A  6E2A               	movwf	btemp^0,c
 19004  01805C  0EFE               	movlw	-2
 19005  01805E  0060  F0AB  FFE3   	movff	btemp,plusw1
 19006  018064  6A2A               	clrf	btemp^0,c
 19007  018066  0EFF               	movlw	-1
 19008  018068  50E3               	movf	plusw1,w,c
 19009  01806A  202A               	addwfc	btemp^0,w,c
 19010  01806C  6E2A               	movwf	btemp^0,c
 19011  01806E  0EFF               	movlw	-1
 19012  018070  0060  F0AB  FFE3   	movff	btemp,plusw1
 19013                           
 19014                           ;stkvar	_cp @ sp[(-4)+0]
 19015  018076  0EFC               	movlw	-4
 19016  018078  50E3               	movf	plusw1,w,c
 19017  01807A  0F01               	addlw	1
 19018  01807C  6E2A               	movwf	btemp^0,c
 19019  01807E  0EFC               	movlw	-4
 19020  018080  0060  F0AB  FFE3   	movff	btemp,plusw1
 19021  018086  6A2A               	clrf	btemp^0,c
 19022  018088  0EFD               	movlw	-3
 19023  01808A  50E3               	movf	plusw1,w,c
 19024  01808C  202A               	addwfc	btemp^0,w,c
 19025  01808E  6E2A               	movwf	btemp^0,c
 19026  018090  0EFD               	movlw	-3
 19027  018092  0060  F0AB  FFE3   	movff	btemp,plusw1
 19028                           
 19029                           ;stkvar	_s @ sp[(-4)+2]
 19030  018098  50E1               	movf	fsr1l,w,c
 19031  01809A  0FFE               	addlw	-2
 19032  01809C  6ED9               	movwf	fsr2l,c
 19033  01809E  50E2               	movf	fsr1h,w,c
 19034  0180A0  6EDA               	movwf	fsr2h,c
 19035  0180A2  0EFF               	movlw	255
 19036  0180A4  22DA               	addwfc	fsr2h,f,c
 19037  0180A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 19038  0180AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 19039  0180B2                     	if	0	;tblptru may be non-zero
 19040  0180B2                     	endif
 19041  0180B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19042  0180B2  0E00               	movlw	low (__mediumconst shr (0+16))
 19043  0180B4  6EF8               	movwf	tblptru,c
 19044  0180B6                     	endif
 19045                           
 19046                           ;stkvar	_cp @ sp[(-4)+0]
 19047  0180B6  0EFC               	movlw	-4
 19048  0180B8  006F FF8F FFD9     	movff	plusw1,fsr2l
 19049  0180BE  0EFD               	movlw	-3
 19050  0180C0  006F FF8F FFDA     	movff	plusw1,fsr2h
 19051  0180C6  0008               	tblrd		*
 19052  0180C8  006F FFD7 FFDF     	movff	tablat,indf2
 19053                           
 19054                           ;stkvar	_s @ sp[(-4)+2]
 19055  0180CE  0EFE               	movlw	-2
 19056  0180D0  50E3               	movf	plusw1,w,c
 19057  0180D2  0F01               	addlw	1
 19058  0180D4  6E2A               	movwf	btemp^0,c
 19059  0180D6  0EFE               	movlw	-2
 19060  0180D8  0060  F0AB  FFE3   	movff	btemp,plusw1
 19061  0180DE  6A2A               	clrf	btemp^0,c
 19062  0180E0  0EFF               	movlw	-1
 19063  0180E2  50E3               	movf	plusw1,w,c
 19064  0180E4  202A               	addwfc	btemp^0,w,c
 19065  0180E6  6E2A               	movwf	btemp^0,c
 19066  0180E8  0EFF               	movlw	-1
 19067  0180EA  0060  F0AB  FFE3   	movff	btemp,plusw1
 19068                           
 19069                           ;stkvar	_cp @ sp[(-4)+0]
 19070  0180F0  0EFC               	movlw	-4
 19071  0180F2  50E3               	movf	plusw1,w,c
 19072  0180F4  0F01               	addlw	1
 19073  0180F6  6E2A               	movwf	btemp^0,c
 19074  0180F8  0EFC               	movlw	-4
 19075  0180FA  0060  F0AB  FFE3   	movff	btemp,plusw1
 19076  018100  6A2A               	clrf	btemp^0,c
 19077  018102  0EFD               	movlw	-3
 19078  018104  50E3               	movf	plusw1,w,c
 19079  018106  202A               	addwfc	btemp^0,w,c
 19080  018108  6E2A               	movwf	btemp^0,c
 19081  01810A  0EFD               	movlw	-3
 19082  01810C  0060  F0AB  FFE3   	movff	btemp,plusw1
 19083                           
 19084                           ;stkvar	_s @ sp[(-4)+2]
 19085  018112  50E1               	movf	fsr1l,w,c
 19086  018114  0FFE               	addlw	-2
 19087  018116  6ED9               	movwf	fsr2l,c
 19088  018118  50E2               	movf	fsr1h,w,c
 19089  01811A  6EDA               	movwf	fsr2h,c
 19090  01811C  0EFF               	movlw	255
 19091  01811E  22DA               	addwfc	fsr2h,f,c
 19092  018120  006F FF7B FFF6     	movff	postinc2,tblptrl
 19093  018126  006F FF77 FFF7     	movff	postdec2,tblptrh
 19094  01812C                     	if	0	;tblptru may be non-zero
 19095  01812C                     	endif
 19096  01812C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19097  01812C  0E00               	movlw	low (__mediumconst shr (0+16))
 19098  01812E  6EF8               	movwf	tblptru,c
 19099  018130                     	endif
 19100                           
 19101                           ;stkvar	_cp @ sp[(-4)+0]
 19102  018130  0EFC               	movlw	-4
 19103  018132  006F FF8F FFD9     	movff	plusw1,fsr2l
 19104  018138  0EFD               	movlw	-3
 19105  01813A  006F FF8F FFDA     	movff	plusw1,fsr2h
 19106  018140  0008               	tblrd		*
 19107  018142  006F FFD7 FFDF     	movff	tablat,indf2
 19108                           
 19109                           ;stkvar	_cp @ sp[(-4)+0]
 19110  018148  0EFC               	movlw	-4
 19111  01814A  50E3               	movf	plusw1,w,c
 19112  01814C  0F01               	addlw	1
 19113  01814E  6E2A               	movwf	btemp^0,c
 19114  018150  0EFC               	movlw	-4
 19115  018152  0060  F0AB  FFE3   	movff	btemp,plusw1
 19116  018158  6A2A               	clrf	btemp^0,c
 19117  01815A  0EFD               	movlw	-3
 19118  01815C  50E3               	movf	plusw1,w,c
 19119  01815E  202A               	addwfc	btemp^0,w,c
 19120  018160  6E2A               	movwf	btemp^0,c
 19121  018162  0EFD               	movlw	-3
 19122  018164  0060  F0AB  FFE3   	movff	btemp,plusw1
 19123                           
 19124                           ;stkvar	_cp @ sp[(-4)+0]
 19125  01816A  0EFC               	movlw	-4
 19126  01816C  006F FF8F FFD9     	movff	plusw1,fsr2l
 19127  018172  0EFD               	movlw	-3
 19128  018174  006F FF8F FFDA     	movff	plusw1,fsr2h
 19129  01817A  0E20               	movlw	32
 19130  01817C  6EDF               	movwf	indf2,c
 19131                           
 19132                           ;stkvar	_cp @ sp[(-4)+0]
 19133  01817E  0EFC               	movlw	-4
 19134  018180  50E3               	movf	plusw1,w,c
 19135  018182  0F01               	addlw	1
 19136  018184  6E2A               	movwf	btemp^0,c
 19137  018186  0EFC               	movlw	-4
 19138  018188  0060  F0AB  FFE3   	movff	btemp,plusw1
 19139  01818E  6A2A               	clrf	btemp^0,c
 19140  018190  0EFD               	movlw	-3
 19141  018192  50E3               	movf	plusw1,w,c
 19142  018194  202A               	addwfc	btemp^0,w,c
 19143  018196  6E2A               	movwf	btemp^0,c
 19144  018198  0EFD               	movlw	-3
 19145  01819A  0060  F0AB  FFE3   	movff	btemp,plusw1
 19146                           
 19147                           ;stkvar	_tim @ sp[(-4)+-2]
 19148  0181A0  0EFA               	movlw	-6
 19149  0181A2  006F FF8C  F034    	movff	plusw1,btemp+10
 19150  0181A8  0EFB               	movlw	-5
 19151  0181AA  006F FF8C  F035    	movff	plusw1,btemp+11
 19152  0181B0  0E08               	movlw	8
 19153  0181B2  2434               	addwf	(btemp+10)^0,w,c
 19154  0181B4  6ED9               	movwf	fsr2l,c
 19155  0181B6  0E00               	movlw	0
 19156  0181B8  2035               	addwfc	(btemp+11)^0,w,c
 19157  0181BA  6EDA               	movwf	fsr2h,c
 19158  0181BC  006F FF78  F034    	movff	postinc2,btemp+10
 19159  0181C2  006F FF74  F035    	movff	postdec2,btemp+11
 19160  0181C8  0E03               	movlw	3
 19161  0181CA  0234               	mulwf	(btemp+10)^0,c
 19162  0181CC  006F FFCC  F032    	movff	prodl,btemp+8
 19163  0181D2  006F FFD0  F033    	movff	prodh,btemp+9
 19164  0181D8  0235               	mulwf	(btemp+11)^0,c
 19165  0181DA  50F3               	movf	prodl,w,c
 19166  0181DC  2633               	addwf	(btemp+9)^0,f,c
 19167  0181DE  0EBE               	movlw	low STR_128
 19168  0181E0  6E34               	movwf	(btemp+10)^0,c
 19169  0181E2  0EFA               	movlw	high STR_128
 19170  0181E4  6E35               	movwf	(btemp+11)^0,c
 19171  0181E6  5032               	movf	(btemp+8)^0,w,c
 19172  0181E8  2634               	addwf	(btemp+10)^0,f,c
 19173  0181EA  5033               	movf	(btemp+9)^0,w,c
 19174  0181EC  2235               	addwfc	(btemp+11)^0,f,c
 19175                           
 19176                           ;stkvar	_s @ sp[(-4)+2]
 19177  0181EE  0EFF               	movlw	-1
 19178  0181F0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19179  0181F6  0EFE               	movlw	-2
 19180  0181F8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 19181                           
 19182                           ;stkvar	_s @ sp[(-4)+2]
 19183  0181FE  50E1               	movf	fsr1l,w,c
 19184  018200  0FFE               	addlw	-2
 19185  018202  6ED9               	movwf	fsr2l,c
 19186  018204  50E2               	movf	fsr1h,w,c
 19187  018206  6EDA               	movwf	fsr2h,c
 19188  018208  0EFF               	movlw	255
 19189  01820A  22DA               	addwfc	fsr2h,f,c
 19190  01820C  006F FF7B FFF6     	movff	postinc2,tblptrl
 19191  018212  006F FF77 FFF7     	movff	postdec2,tblptrh
 19192  018218                     	if	0	;tblptru may be non-zero
 19193  018218                     	endif
 19194  018218                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19195  018218  0E00               	movlw	low (__mediumconst shr (0+16))
 19196  01821A  6EF8               	movwf	tblptru,c
 19197  01821C                     	endif
 19198                           
 19199                           ;stkvar	_cp @ sp[(-4)+0]
 19200  01821C  0EFC               	movlw	-4
 19201  01821E  006F FF8F FFD9     	movff	plusw1,fsr2l
 19202  018224  0EFD               	movlw	-3
 19203  018226  006F FF8F FFDA     	movff	plusw1,fsr2h
 19204  01822C  0008               	tblrd		*
 19205  01822E  006F FFD7 FFDF     	movff	tablat,indf2
 19206                           
 19207                           ;stkvar	_s @ sp[(-4)+2]
 19208  018234  0EFE               	movlw	-2
 19209  018236  50E3               	movf	plusw1,w,c
 19210  018238  0F01               	addlw	1
 19211  01823A  6E2A               	movwf	btemp^0,c
 19212  01823C  0EFE               	movlw	-2
 19213  01823E  0060  F0AB  FFE3   	movff	btemp,plusw1
 19214  018244  6A2A               	clrf	btemp^0,c
 19215  018246  0EFF               	movlw	-1
 19216  018248  50E3               	movf	plusw1,w,c
 19217  01824A  202A               	addwfc	btemp^0,w,c
 19218  01824C  6E2A               	movwf	btemp^0,c
 19219  01824E  0EFF               	movlw	-1
 19220  018250  0060  F0AB  FFE3   	movff	btemp,plusw1
 19221                           
 19222                           ;stkvar	_cp @ sp[(-4)+0]
 19223  018256  0EFC               	movlw	-4
 19224  018258  50E3               	movf	plusw1,w,c
 19225  01825A  0F01               	addlw	1
 19226  01825C  6E2A               	movwf	btemp^0,c
 19227  01825E  0EFC               	movlw	-4
 19228  018260  0060  F0AB  FFE3   	movff	btemp,plusw1
 19229  018266  6A2A               	clrf	btemp^0,c
 19230  018268  0EFD               	movlw	-3
 19231  01826A  50E3               	movf	plusw1,w,c
 19232  01826C  202A               	addwfc	btemp^0,w,c
 19233  01826E  6E2A               	movwf	btemp^0,c
 19234  018270  0EFD               	movlw	-3
 19235  018272  0060  F0AB  FFE3   	movff	btemp,plusw1
 19236                           
 19237                           ;stkvar	_s @ sp[(-4)+2]
 19238  018278  50E1               	movf	fsr1l,w,c
 19239  01827A  0FFE               	addlw	-2
 19240  01827C  6ED9               	movwf	fsr2l,c
 19241  01827E  50E2               	movf	fsr1h,w,c
 19242  018280  6EDA               	movwf	fsr2h,c
 19243  018282  0EFF               	movlw	255
 19244  018284  22DA               	addwfc	fsr2h,f,c
 19245  018286  006F FF7B FFF6     	movff	postinc2,tblptrl
 19246  01828C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19247  018292                     	if	0	;tblptru may be non-zero
 19248  018292                     	endif
 19249  018292                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19250  018292  0E00               	movlw	low (__mediumconst shr (0+16))
 19251  018294  6EF8               	movwf	tblptru,c
 19252  018296                     	endif
 19253                           
 19254                           ;stkvar	_cp @ sp[(-4)+0]
 19255  018296  0EFC               	movlw	-4
 19256  018298  006F FF8F FFD9     	movff	plusw1,fsr2l
 19257  01829E  0EFD               	movlw	-3
 19258  0182A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 19259  0182A6  0008               	tblrd		*
 19260  0182A8  006F FFD7 FFDF     	movff	tablat,indf2
 19261                           
 19262                           ;stkvar	_s @ sp[(-4)+2]
 19263  0182AE  0EFE               	movlw	-2
 19264  0182B0  50E3               	movf	plusw1,w,c
 19265  0182B2  0F01               	addlw	1
 19266  0182B4  6E2A               	movwf	btemp^0,c
 19267  0182B6  0EFE               	movlw	-2
 19268  0182B8  0060  F0AB  FFE3   	movff	btemp,plusw1
 19269  0182BE  6A2A               	clrf	btemp^0,c
 19270  0182C0  0EFF               	movlw	-1
 19271  0182C2  50E3               	movf	plusw1,w,c
 19272  0182C4  202A               	addwfc	btemp^0,w,c
 19273  0182C6  6E2A               	movwf	btemp^0,c
 19274  0182C8  0EFF               	movlw	-1
 19275  0182CA  0060  F0AB  FFE3   	movff	btemp,plusw1
 19276                           
 19277                           ;stkvar	_cp @ sp[(-4)+0]
 19278  0182D0  0EFC               	movlw	-4
 19279  0182D2  50E3               	movf	plusw1,w,c
 19280  0182D4  0F01               	addlw	1
 19281  0182D6  6E2A               	movwf	btemp^0,c
 19282  0182D8  0EFC               	movlw	-4
 19283  0182DA  0060  F0AB  FFE3   	movff	btemp,plusw1
 19284  0182E0  6A2A               	clrf	btemp^0,c
 19285  0182E2  0EFD               	movlw	-3
 19286  0182E4  50E3               	movf	plusw1,w,c
 19287  0182E6  202A               	addwfc	btemp^0,w,c
 19288  0182E8  6E2A               	movwf	btemp^0,c
 19289  0182EA  0EFD               	movlw	-3
 19290  0182EC  0060  F0AB  FFE3   	movff	btemp,plusw1
 19291                           
 19292                           ;stkvar	_s @ sp[(-4)+2]
 19293  0182F2  50E1               	movf	fsr1l,w,c
 19294  0182F4  0FFE               	addlw	-2
 19295  0182F6  6ED9               	movwf	fsr2l,c
 19296  0182F8  50E2               	movf	fsr1h,w,c
 19297  0182FA  6EDA               	movwf	fsr2h,c
 19298  0182FC  0EFF               	movlw	255
 19299  0182FE  22DA               	addwfc	fsr2h,f,c
 19300  018300  006F FF7B FFF6     	movff	postinc2,tblptrl
 19301  018306  006F FF77 FFF7     	movff	postdec2,tblptrh
 19302  01830C                     	if	0	;tblptru may be non-zero
 19303  01830C                     	endif
 19304  01830C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19305  01830C  0E00               	movlw	low (__mediumconst shr (0+16))
 19306  01830E  6EF8               	movwf	tblptru,c
 19307  018310                     	endif
 19308                           
 19309                           ;stkvar	_cp @ sp[(-4)+0]
 19310  018310  0EFC               	movlw	-4
 19311  018312  006F FF8F FFD9     	movff	plusw1,fsr2l
 19312  018318  0EFD               	movlw	-3
 19313  01831A  006F FF8F FFDA     	movff	plusw1,fsr2h
 19314  018320  0008               	tblrd		*
 19315  018322  006F FFD7 FFDF     	movff	tablat,indf2
 19316  018328  0E20               	movlw	32
 19317  01832A  0103               	movlb	3	; () banked
 19318  01832C  6FCB               	movwf	(asctime@buf+7)& (0+255),b
 19319                           
 19320                           ; BSR set to: 3
 19321  01832E  0E20               	movlw	32
 19322  018330  6EE6               	movwf	postinc1,c
 19323  018332  0E20               	movlw	32
 19324  018334  6EE6               	movwf	postinc1,c
 19325                           
 19326                           ;stkvar	_tim @ sp[(-6)+-2]
 19327  018336  0EF8               	movlw	-8
 19328  018338  006F FF8C  F034    	movff	plusw1,btemp+10
 19329  01833E  0EF9               	movlw	-7
 19330  018340  006F FF8C  F035    	movff	plusw1,btemp+11
 19331  018346  0E06               	movlw	6
 19332  018348  2434               	addwf	(btemp+10)^0,w,c
 19333  01834A  6ED9               	movwf	fsr2l,c
 19334  01834C  0E00               	movlw	0
 19335  01834E  2035               	addwfc	(btemp+11)^0,w,c
 19336  018350  6EDA               	movwf	fsr2h,c
 19337  018352  50DF               	movf	indf2,w,c
 19338  018354  6EE6               	movwf	postinc1,c
 19339  018356  0ECE               	movlw	low (asctime@buf+10)
 19340  018358  6EE6               	movwf	postinc1,c
 19341  01835A  0E03               	movlw	high (asctime@buf+10)
 19342  01835C  6EE6               	movwf	postinc1,c
 19343  01835E  EC5E  F0F7         	call	_put2d	;wreg free
 19344  018362  0E3A               	movlw	58
 19345  018364  6EE6               	movwf	postinc1,c
 19346  018366  0E30               	movlw	48
 19347  018368  6EE6               	movwf	postinc1,c
 19348                           
 19349                           ;stkvar	_tim @ sp[(-6)+-2]
 19350  01836A  0EF8               	movlw	-8
 19351  01836C  006F FF8C  F034    	movff	plusw1,btemp+10
 19352  018372  0EF9               	movlw	-7
 19353  018374  006F FF8C  F035    	movff	plusw1,btemp+11
 19354  01837A  0E04               	movlw	4
 19355  01837C  2434               	addwf	(btemp+10)^0,w,c
 19356  01837E  6ED9               	movwf	fsr2l,c
 19357  018380  0E00               	movlw	0
 19358  018382  2035               	addwfc	(btemp+11)^0,w,c
 19359  018384  6EDA               	movwf	fsr2h,c
 19360  018386  50DF               	movf	indf2,w,c
 19361  018388  6EE6               	movwf	postinc1,c
 19362  01838A  0ED1               	movlw	low (asctime@buf+13)
 19363  01838C  6EE6               	movwf	postinc1,c
 19364  01838E  0E03               	movlw	high (asctime@buf+13)
 19365  018390  6EE6               	movwf	postinc1,c
 19366  018392  EC5E  F0F7         	call	_put2d	;wreg free
 19367  018396  0E3A               	movlw	58
 19368  018398  6EE6               	movwf	postinc1,c
 19369  01839A  0E30               	movlw	48
 19370  01839C  6EE6               	movwf	postinc1,c
 19371                           
 19372                           ;stkvar	_tim @ sp[(-6)+-2]
 19373  01839E  0EF8               	movlw	-8
 19374  0183A0  006F FF8C  F034    	movff	plusw1,btemp+10
 19375  0183A6  0EF9               	movlw	-7
 19376  0183A8  006F FF8C  F035    	movff	plusw1,btemp+11
 19377  0183AE  0E02               	movlw	2
 19378  0183B0  2434               	addwf	(btemp+10)^0,w,c
 19379  0183B2  6ED9               	movwf	fsr2l,c
 19380  0183B4  0E00               	movlw	0
 19381  0183B6  2035               	addwfc	(btemp+11)^0,w,c
 19382  0183B8  6EDA               	movwf	fsr2h,c
 19383  0183BA  50DF               	movf	indf2,w,c
 19384  0183BC  6EE6               	movwf	postinc1,c
 19385  0183BE  0ED4               	movlw	low (asctime@buf+16)
 19386  0183C0  6EE6               	movwf	postinc1,c
 19387  0183C2  0E03               	movlw	high (asctime@buf+16)
 19388  0183C4  6EE6               	movwf	postinc1,c
 19389  0183C6  EC5E  F0F7         	call	_put2d	;wreg free
 19390  0183CA  0E20               	movlw	32
 19391  0183CC  6EE6               	movwf	postinc1,c
 19392  0183CE  0E30               	movlw	48
 19393  0183D0  6EE6               	movwf	postinc1,c
 19394                           
 19395                           ;stkvar	_tim @ sp[(-6)+-2]
 19396  0183D2  0EF8               	movlw	-8
 19397  0183D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 19398  0183DA  0EF9               	movlw	-7
 19399  0183DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 19400  0183E2  50DF               	movf	indf2,w,c
 19401  0183E4  6EE6               	movwf	postinc1,c
 19402  0183E6  0ED7               	movlw	low (asctime@buf+19)
 19403  0183E8  6EE6               	movwf	postinc1,c
 19404  0183EA  0E03               	movlw	high (asctime@buf+19)
 19405  0183EC  6EE6               	movwf	postinc1,c
 19406  0183EE  EC5E  F0F7         	call	_put2d	;wreg free
 19407  0183F2  0E00               	movlw	0
 19408  0183F4  6EE6               	movwf	postinc1,c
 19409  0183F6  0E20               	movlw	32
 19410  0183F8  6EE6               	movwf	postinc1,c
 19411  0183FA  0E64               	movlw	100
 19412  0183FC  6EE6               	movwf	postinc1,c
 19413  0183FE  0E00               	movlw	0
 19414  018400  6EE6               	movwf	postinc1,c
 19415                           
 19416                           ;stkvar	_tim @ sp[(-8)+-2]
 19417  018402  0EF6               	movlw	-10
 19418  018404  006F FF8C  F034    	movff	plusw1,btemp+10
 19419  01840A  0EF7               	movlw	-9
 19420  01840C  006F FF8C  F035    	movff	plusw1,btemp+11
 19421  018412  0E0A               	movlw	10
 19422  018414  2434               	addwf	(btemp+10)^0,w,c
 19423  018416  6ED9               	movwf	fsr2l,c
 19424  018418  0E00               	movlw	0
 19425  01841A  2035               	addwfc	(btemp+11)^0,w,c
 19426  01841C  6EDA               	movwf	fsr2h,c
 19427  01841E  006F FF78  F034    	movff	postinc2,btemp+10
 19428  018424  006F FF74  F035    	movff	postdec2,btemp+11
 19429  01842A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 19430  018430  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 19431  018436  EC48  F0F4         	call	___awdiv	;wreg free
 19432  01843A  502A               	movf	btemp^0,w,c
 19433  01843C  0F13               	addlw	19
 19434  01843E  6EE6               	movwf	postinc1,c
 19435  018440  0EDA               	movlw	low (asctime@buf+22)
 19436  018442  6EE6               	movwf	postinc1,c
 19437  018444  0E03               	movlw	high (asctime@buf+22)
 19438  018446  6EE6               	movwf	postinc1,c
 19439  018448  EC5E  F0F7         	call	_put2d	;wreg free
 19440  01844C  0E0A               	movlw	10
 19441  01844E  6EE6               	movwf	postinc1,c
 19442  018450  0E30               	movlw	48
 19443  018452  6EE6               	movwf	postinc1,c
 19444  018454  0E64               	movlw	100
 19445  018456  6EE6               	movwf	postinc1,c
 19446  018458  0E00               	movlw	0
 19447  01845A  6EE6               	movwf	postinc1,c
 19448                           
 19449                           ;stkvar	_tim @ sp[(-8)+-2]
 19450  01845C  0EF6               	movlw	-10
 19451  01845E  006F FF8C  F034    	movff	plusw1,btemp+10
 19452  018464  0EF7               	movlw	-9
 19453  018466  006F FF8C  F035    	movff	plusw1,btemp+11
 19454  01846C  0E0A               	movlw	10
 19455  01846E  2434               	addwf	(btemp+10)^0,w,c
 19456  018470  6ED9               	movwf	fsr2l,c
 19457  018472  0E00               	movlw	0
 19458  018474  2035               	addwfc	(btemp+11)^0,w,c
 19459  018476  6EDA               	movwf	fsr2h,c
 19460  018478  006F FF78  F034    	movff	postinc2,btemp+10
 19461  01847E  006F FF74  F035    	movff	postdec2,btemp+11
 19462  018484  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 19463  01848A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 19464  018490  EC77  F0F8         	call	___awmod	;wreg free
 19465  018494  502A               	movf	btemp^0,w,c
 19466  018496  6EE6               	movwf	postinc1,c
 19467  018498  0EDC               	movlw	low (asctime@buf+24)
 19468  01849A  6EE6               	movwf	postinc1,c
 19469  01849C  0E03               	movlw	high (asctime@buf+24)
 19470  01849E  6EE6               	movwf	postinc1,c
 19471  0184A0  EC5E  F0F7         	call	_put2d	;wreg free
 19472  0184A4  0EC4               	movlw	low asctime@buf
 19473  0184A6  6E2A               	movwf	btemp^0,c
 19474  0184A8  0E03               	movlw	high asctime@buf
 19475  0184AA  6E2B               	movwf	(btemp+1)^0,c
 19476                           
 19477                           ; _asctime: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19478  0184AC  0EFA               	movlw	250
 19479  0184AE  26E1               	addwf	fsr1l,f,c
 19480  0184B0  0EFF               	movlw	255
 19481  0184B2  22E2               	addwfc	fsr1h,f,c
 19482  0184B4  0012               	return		;funcret
 19483  0184B6                     __end_of_asctime:
 19484                           	opt callstack 0
 19485                           
 19486 ;; *************** function _put2d *****************
 19487 ;; Defined at:
 19488 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 19489 ;; Parameters:    Size  Location     Type
 19490 ;;  cp              2  [STACK] PTR unsigned char 
 19491 ;;		 -> asctime@buf(27), 
 19492 ;;  i               1  [STACK] unsigned char 
 19493 ;;  cl              1  [STACK] unsigned char 
 19494 ;;  ct              1  [STACK] unsigned char 
 19495 ;; Auto vars:     Size  Location     Type
 19496 ;;		None
 19497 ;; Return value:  Size  Location     Type
 19498 ;;                  1  [STACK] void 
 19499 ;; Registers used:
 19500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19501 ;; Tracked objects:
 19502 ;;		On entry : 0/3
 19503 ;;		On exit  : 0/0
 19504 ;;		Unchanged: 0/0
 19505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19510 ;;Total ram usage:        0 bytes
 19511 ;; Hardware stack levels used:    1
 19512 ;; Hardware stack levels required when called:   16
 19513 ;; This function calls:
 19514 ;;		___awdiv
 19515 ;;		___lbmod
 19516 ;; This function is called by:
 19517 ;;		_asctime
 19518 ;; This function uses a reentrant model
 19519 ;;
 19520                           
 19521                           	psect	text53
 19522  01EEBC                     __ptext53:
 19523                           	opt callstack 0
 19524  01EEBC                     _put2d:
 19525                           	opt callstack 12
 19526                           
 19527                           ;stkvar	_ct @ sp[(0)+-5]
 19528                           ;stkvar	_cp @ sp[(0)+-2]
 19529                           
 19530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19531                           ;incstack = 0
 19532  01EEBC  0EFE               	movlw	-2
 19533  01EEBE  006F FF8F FFD9     	movff	plusw1,fsr2l
 19534  01EEC4  0EFF               	movlw	-1
 19535  01EEC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 19536  01EECC  0EFB               	movlw	-5
 19537  01EECE  006F FF8F FFDF     	movff	plusw1,indf2
 19538  01EED4  0E0A               	movlw	10
 19539  01EED6  6EE6               	movwf	postinc1,c
 19540                           
 19541                           ;stkvar	_i @ sp[(-1)+-3]
 19542  01EED8  0EFC               	movlw	-4
 19543  01EEDA  50E3               	movf	plusw1,w,c
 19544  01EEDC  6EE6               	movwf	postinc1,c
 19545  01EEDE  ECB0  F002         	call	___lbmod	;wreg free
 19546  01EEE2  0E30               	movlw	48
 19547  01EEE4  262A               	addwf	btemp^0,f,c
 19548                           
 19549                           ;stkvar	_cp @ sp[(0)+-2]
 19550  01EEE6  0EFE               	movlw	-2
 19551  01EEE8  006F FF8C  F02B    	movff	plusw1,btemp+1
 19552  01EEEE  0E01               	movlw	1
 19553  01EEF0  5E2B               	subwf	(btemp+1)^0,f,c
 19554  01EEF2  0EFE               	movlw	-2
 19555  01EEF4  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 19556  01EEFA  0EFF               	movlw	-1
 19557  01EEFC  006F FF8C  F02B    	movff	plusw1,btemp+1
 19558  01EF02  0E00               	movlw	0
 19559  01EF04  5A2B               	subwfb	(btemp+1)^0,f,c
 19560  01EF06  0EFF               	movlw	-1
 19561  01EF08  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 19562  01EF0E  0EFE               	movlw	-2
 19563  01EF10  006F FF8F FFD9     	movff	plusw1,fsr2l
 19564  01EF16  0EFF               	movlw	-1
 19565  01EF18  006F FF8F FFDA     	movff	plusw1,fsr2h
 19566  01EF1E  0060  F0AB  FFDF   	movff	btemp,indf2
 19567  01EF24  0E0A               	movlw	10
 19568  01EF26  6EE6               	movwf	postinc1,c
 19569  01EF28  0E00               	movlw	0
 19570  01EF2A  6EE6               	movwf	postinc1,c
 19571                           
 19572                           ;stkvar	_i @ sp[(-2)+-3]
 19573  01EF2C  0EFB               	movlw	-5
 19574  01EF2E  50E3               	movf	plusw1,w,c
 19575  01EF30  6EE6               	movwf	postinc1,c
 19576  01EF32  0E00               	movlw	0
 19577  01EF34  6EE6               	movwf	postinc1,c
 19578  01EF36  EC48  F0F4         	call	___awdiv	;wreg free
 19579                           
 19580                           ;stkvar	_i @ sp[(0)+-3]
 19581  01EF3A  0EFD               	movlw	-3
 19582  01EF3C  0060  F0AB  FFE3   	movff	btemp,plusw1
 19583  01EF42  0EFD               	movlw	-3
 19584  01EF44  50E3               	movf	plusw1,w,c
 19585  01EF46  B4D8               	btfsc	status,2,c
 19586  01EF48  D021               	goto	l16514
 19587                           
 19588                           ;stkvar	_cp @ sp[(0)+-2]
 19589  01EF4A  0EFE               	movlw	-2
 19590  01EF4C  006F FF8C  F02A    	movff	plusw1,btemp
 19591  01EF52  0E01               	movlw	1
 19592  01EF54  5E2A               	subwf	btemp^0,f,c
 19593  01EF56  0EFE               	movlw	-2
 19594  01EF58  0060  F0AB  FFE3   	movff	btemp,plusw1
 19595  01EF5E  0EFF               	movlw	-1
 19596  01EF60  006F FF8C  F02A    	movff	plusw1,btemp
 19597  01EF66  0E00               	movlw	0
 19598  01EF68  5A2A               	subwfb	btemp^0,f,c
 19599  01EF6A  0EFF               	movlw	-1
 19600  01EF6C  0060  F0AB  FFE3   	movff	btemp,plusw1
 19601  01EF72  0EFE               	movlw	-2
 19602  01EF74  006F FF8F FFD9     	movff	plusw1,fsr2l
 19603  01EF7A  0EFF               	movlw	-1
 19604  01EF7C  006F FF8F FFDA     	movff	plusw1,fsr2h
 19605                           
 19606                           ;stkvar	_i @ sp[(0)+-3]
 19607  01EF82  0EFD               	movlw	-3
 19608  01EF84  50E3               	movf	plusw1,w,c
 19609  01EF86  0F30               	addlw	48
 19610  01EF88  6EDF               	movwf	indf2,c
 19611  01EF8A  D020               	goto	l3402
 19612  01EF8C                     l16514:
 19613                           
 19614                           ;stkvar	_cl @ sp[(0)+-4]
 19615                           ;stkvar	_cp @ sp[(0)+-2]
 19616  01EF8C  0EFE               	movlw	-2
 19617  01EF8E  006F FF8C  F02A    	movff	plusw1,btemp
 19618  01EF94  0E01               	movlw	1
 19619  01EF96  5E2A               	subwf	btemp^0,f,c
 19620  01EF98  0EFE               	movlw	-2
 19621  01EF9A  0060  F0AB  FFE3   	movff	btemp,plusw1
 19622  01EFA0  0EFF               	movlw	-1
 19623  01EFA2  006F FF8C  F02A    	movff	plusw1,btemp
 19624  01EFA8  0E00               	movlw	0
 19625  01EFAA  5A2A               	subwfb	btemp^0,f,c
 19626  01EFAC  0EFF               	movlw	-1
 19627  01EFAE  0060  F0AB  FFE3   	movff	btemp,plusw1
 19628  01EFB4  0EFE               	movlw	-2
 19629  01EFB6  006F FF8F FFD9     	movff	plusw1,fsr2l
 19630  01EFBC  0EFF               	movlw	-1
 19631  01EFBE  006F FF8F FFDA     	movff	plusw1,fsr2h
 19632  01EFC4  0EFC               	movlw	-4
 19633  01EFC6  006F FF8F FFDF     	movff	plusw1,indf2
 19634  01EFCC                     l3402:
 19635                           
 19636                           ; _put2d: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize
      +                           = 5, vargsize = 0
 19637  01EFCC  0EFB               	movlw	251
 19638  01EFCE  26E1               	addwf	fsr1l,f,c
 19639  01EFD0  0EFF               	movlw	255
 19640  01EFD2  22E2               	addwfc	fsr1h,f,c
 19641  01EFD4  0012               	return		;funcret
 19642  01EFD6                     __end_of_put2d:
 19643                           	opt callstack 0
 19644                           
 19645 ;; *************** function ___lbmod *****************
 19646 ;; Defined at:
 19647 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lbmod.c"
 19648 ;; Parameters:    Size  Location     Type
 19649 ;;  dividend        1  [STACK] unsigned char 
 19650 ;;  divisor         1  [STACK] unsigned char 
 19651 ;; Auto vars:     Size  Location     Type
 19652 ;;  rem             1  [STACK] unsigned char 
 19653 ;;  counter         1  [STACK] unsigned char 
 19654 ;; Return value:  Size  Location     Type
 19655 ;;                  1  [STACK] unsigned char 
 19656 ;; Registers used:
 19657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 19658 ;; Tracked objects:
 19659 ;;		On entry : 0/3
 19660 ;;		On exit  : 0/0
 19661 ;;		Unchanged: 0/0
 19662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19667 ;;Total ram usage:        0 bytes
 19668 ;; Hardware stack levels used:    1
 19669 ;; Hardware stack levels required when called:   15
 19670 ;; This function calls:
 19671 ;;		Nothing
 19672 ;; This function is called by:
 19673 ;;		_put2d
 19674 ;; This function uses a reentrant model
 19675 ;;
 19676                           
 19677                           	psect	text54
 19678  000560                     __ptext54:
 19679                           	opt callstack 0
 19680  000560                     ___lbmod:
 19681                           	opt callstack 0
 19682                           
 19683                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19684  000560  52E6               	movf	postinc1,f,c
 19685  000562  52E6               	movf	postinc1,f,c
 19686                           
 19687                           ;stkvar	_counter @ sp[(-2)+1]
 19688                           
 19689                           ;incstack = 0
 19690  000564  0EFF               	movlw	-1
 19691  000566  6AE3               	clrf	plusw1,c
 19692  000568  86E3               	bsf	plusw1,3,c
 19693                           
 19694                           ;stkvar	_rem @ sp[(-2)+0]
 19695  00056A  0EFE               	movlw	-2
 19696  00056C  6AE3               	clrf	plusw1,c
 19697  00056E                     l12352:
 19698                           
 19699                           ;stkvar	_dividend @ sp[(-2)+-1]
 19700  00056E  0EFD               	movlw	-3
 19701  000570  006F FF8C  F035    	movff	plusw1,btemp+11
 19702                           
 19703                           ;stkvar	_rem @ sp[(-2)+0]
 19704  000576  0EFE               	movlw	-2
 19705  000578  006F FF8C  F034    	movff	plusw1,btemp+10
 19706  00057E  90D8               	bcf	status,0,c
 19707  000580  3435               	rlcf	(btemp+11)^0,w,c
 19708  000582  3434               	rlcf	(btemp+10)^0,w,c
 19709  000584  6E35               	movwf	(btemp+11)^0,c
 19710                           
 19711                           ;stkvar	_rem @ sp[(-2)+0]
 19712  000586  0EFE               	movlw	-2
 19713  000588  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19714                           
 19715                           ;stkvar	_dividend @ sp[(-2)+-1]
 19716  00058E  50E1               	movf	fsr1l,w,c
 19717  000590  0FFD               	addlw	-3
 19718  000592  6ED9               	movwf	fsr2l,c
 19719  000594  50E2               	movf	fsr1h,w,c
 19720  000596  6EDA               	movwf	fsr2h,c
 19721  000598  0EFF               	movlw	255
 19722  00059A  22DA               	addwfc	fsr2h,f,c
 19723  00059C  90D8               	bcf	status,0,c
 19724  00059E  36DF               	rlcf	indf2,f,c
 19725                           
 19726                           ;stkvar	_divisor @ sp[(-2)+-2]
 19727                           ;stkvar	_rem @ sp[(-2)+0]
 19728  0005A0  50E1               	movf	fsr1l,w,c
 19729  0005A2  0FFE               	addlw	-2
 19730  0005A4  6ED9               	movwf	fsr2l,c
 19731  0005A6  50E2               	movf	fsr1h,w,c
 19732  0005A8  6EDA               	movwf	fsr2h,c
 19733  0005AA  0EFF               	movlw	255
 19734  0005AC  22DA               	addwfc	fsr2h,f,c
 19735  0005AE  0EFC               	movlw	-4
 19736  0005B0  50E3               	movf	plusw1,w,c
 19737  0005B2  5CDE               	subwf	postinc2,w,c
 19738  0005B4  A0D8               	btfss	status,0,c
 19739  0005B6  D00D               	goto	l12360
 19740                           
 19741                           ;stkvar	_divisor @ sp[(-2)+-2]
 19742  0005B8  0EFC               	movlw	-4
 19743  0005BA  006F FF8C  F035    	movff	plusw1,btemp+11
 19744                           
 19745                           ;stkvar	_rem @ sp[(-2)+0]
 19746  0005C0  50E1               	movf	fsr1l,w,c
 19747  0005C2  0FFE               	addlw	-2
 19748  0005C4  6ED9               	movwf	fsr2l,c
 19749  0005C6  50E2               	movf	fsr1h,w,c
 19750  0005C8  6EDA               	movwf	fsr2h,c
 19751  0005CA  0EFF               	movlw	255
 19752  0005CC  22DA               	addwfc	fsr2h,f,c
 19753  0005CE  5035               	movf	(btemp+11)^0,w,c
 19754  0005D0  5EDF               	subwf	indf2,f,c
 19755  0005D2                     l12360:
 19756                           
 19757                           ;stkvar	_counter @ sp[(-2)+1]
 19758  0005D2  0EFF               	movlw	-1
 19759  0005D4  50E3               	movf	plusw1,w,c
 19760  0005D6  6E2A               	movwf	btemp^0,c
 19761  0005D8  0E01               	movlw	1
 19762  0005DA  5E2A               	subwf	btemp^0,f,c
 19763  0005DC  0EFF               	movlw	-1
 19764  0005DE  0060  F0AB  FFE3   	movff	btemp,plusw1
 19765  0005E4  A4D8               	btfss	status,2,c
 19766  0005E6  D7C3               	goto	l12352
 19767                           
 19768                           ;stkvar	_rem @ sp[(-2)+0]
 19769  0005E8  0EFE               	movlw	-2
 19770  0005EA  006F FF8C  F02A    	movff	plusw1,btemp
 19771                           
 19772                           ; ___lbmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19773  0005F0  52E5               	movf	postdec1,f,c
 19774  0005F2  52E5               	movf	postdec1,f,c
 19775  0005F4  52E5               	movf	postdec1,f,c
 19776  0005F6  52E5               	movf	postdec1,f,c
 19777  0005F8  0012               	return		;funcret
 19778  0005FA                     __end_of___lbmod:
 19779                           	opt callstack 0
 19780                           
 19781 ;; *************** function _current_sensor_cal *****************
 19782 ;; Defined at:
 19783 ;;		line 502 in file "main.c"
 19784 ;; Parameters:    Size  Location     Type
 19785 ;;		None
 19786 ;; Auto vars:     Size  Location     Type
 19787 ;;  cp              4  [STACK] unsigned long 
 19788 ;;  cb              4  [STACK] unsigned long 
 19789 ;;  x               1  [STACK] unsigned char 
 19790 ;; Return value:  Size  Location     Type
 19791 ;;                  1  [STACK] _Bool 
 19792 ;; Registers used:
 19793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 19794 ;; Tracked objects:
 19795 ;;		On entry : 0/2
 19796 ;;		On exit  : 0/0
 19797 ;;		Unchanged: 0/0
 19798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19803 ;;Total ram usage:        0 bytes
 19804 ;; Hardware stack levels used:    1
 19805 ;; Hardware stack levels required when called:   28
 19806 ;; This function calls:
 19807 ;;		_WaitMs
 19808 ;;		_cal_current_zero
 19809 ;;		_clear_adc_scan
 19810 ;;		_get_raw_result
 19811 ;;		_get_switch
 19812 ;;		_get_vterm_ptr
 19813 ;;		_spinners
 19814 ;;		_sprintf
 19815 ;;		_start_adc_scan
 19816 ;;		_update_lcd
 19817 ;;		_write_cal_data
 19818 ;; This function is called by:
 19819 ;;		_main
 19820 ;; This function uses a reentrant model
 19821 ;;
 19822                           
 19823                           	psect	text55
 19824  018DF2                     __ptext55:
 19825                           	opt callstack 0
 19826  018DF2                     _current_sensor_cal:
 19827                           	opt callstack 0
 19828                           
 19829                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19830  018DF2  0E09               	movlw	9
 19831  018DF4  26E1               	addwf	fsr1l,f,c
 19832  018DF6  0E00               	movlw	0
 19833  018DF8  22E2               	addwfc	fsr1h,f,c
 19834                           
 19835                           ;main.c: 504:  uint8_t x = 0;
 19836                           ;stkvar	_x @ sp[(-9)+8]
 19837                           
 19838                           ;incstack = 0
 19839  018DFA  0EFF               	movlw	-1
 19840  018DFC  6AE3               	clrf	plusw1,c
 19841                           
 19842                           ;main.c: 505:  uint32_t cb = 0, cp = 0;
 19843                           ;stkvar	_cb @ sp[(-9)+4]
 19844  018DFE  0EFB               	movlw	-5
 19845  018E00  6AE3               	clrf	plusw1,c
 19846  018E02  0EFC               	movlw	-4
 19847  018E04  6AE3               	clrf	plusw1,c
 19848  018E06  0EFD               	movlw	-3
 19849  018E08  6AE3               	clrf	plusw1,c
 19850  018E0A  0EFE               	movlw	-2
 19851  018E0C  6AE3               	clrf	plusw1,c
 19852                           
 19853                           ;stkvar	_cp @ sp[(-9)+0]
 19854  018E0E  0EF7               	movlw	-9
 19855  018E10  6AE3               	clrf	plusw1,c
 19856  018E12  0EF8               	movlw	-8
 19857  018E14  6AE3               	clrf	plusw1,c
 19858  018E16  0EF9               	movlw	-7
 19859  018E18  6AE3               	clrf	plusw1,c
 19860  018E1A  0EFA               	movlw	-6
 19861  018E1C  6AE3               	clrf	plusw1,c
 19862                           
 19863                           ;main.c: 507:  sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 19864  018E1E  0E76               	movlw	low STR_51
 19865  018E20  6EE6               	movwf	postinc1,c
 19866  018E22  0EFE               	movlw	high STR_51
 19867  018E24  6EE6               	movwf	postinc1,c
 19868  018E26  0E00               	movlw	0
 19869  018E28  6EE6               	movwf	postinc1,c
 19870  018E2A  0E00               	movlw	0
 19871  018E2C  6EE6               	movwf	postinc1,c
 19872  018E2E  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 19873  018E32  0060  F0AB  FFE6   	movff	btemp,postinc1
 19874  018E38  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 19875  018E3E  0E04               	movlw	4
 19876  018E40  6EE6               	movwf	postinc1,c
 19877  018E42  EC8D  F0F9         	call	_sprintf	;wreg free
 19878                           
 19879                           ; BSR set to: 0
 19880                           ;main.c: 508:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero         ");
 19881  018E46  0E22               	movlw	low STR_52
 19882  018E48  6EE6               	movwf	postinc1,c
 19883  018E4A  0EFE               	movlw	high STR_52
 19884  018E4C  6EE6               	movwf	postinc1,c
 19885  018E4E  0E00               	movlw	0
 19886  018E50  6EE6               	movwf	postinc1,c
 19887  018E52  0E01               	movlw	1
 19888  018E54  6EE6               	movwf	postinc1,c
 19889  018E56  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 19890  018E5A  0060  F0AB  FFE6   	movff	btemp,postinc1
 19891  018E60  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 19892  018E66  0E04               	movlw	4
 19893  018E68  6EE6               	movwf	postinc1,c
 19894  018E6A  EC8D  F0F9         	call	_sprintf	;wreg free
 19895                           
 19896                           ; BSR set to: 0
 19897                           ;main.c: 509:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 19898  018E6E  0E0D               	movlw	low STR_53
 19899  018E70  6EE6               	movwf	postinc1,c
 19900  018E72  0EFE               	movlw	high STR_53
 19901  018E74  6EE6               	movwf	postinc1,c
 19902  018E76  0E00               	movlw	0
 19903  018E78  6EE6               	movwf	postinc1,c
 19904  018E7A  0E02               	movlw	2
 19905  018E7C  6EE6               	movwf	postinc1,c
 19906  018E7E  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 19907  018E82  0060  F0AB  FFE6   	movff	btemp,postinc1
 19908  018E88  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 19909  018E8E  0E04               	movlw	4
 19910  018E90  6EE6               	movwf	postinc1,c
 19911  018E92  EC8D  F0F9         	call	_sprintf	;wreg free
 19912                           
 19913                           ; BSR set to: 0
 19914                           ;main.c: 510:  update_lcd(0);
 19915  018E96  0E00               	movlw	0
 19916  018E98  6EE6               	movwf	postinc1,c
 19917  018E9A  EC3F  F0F2         	call	_update_lcd	;wreg free
 19918                           
 19919                           ;main.c: 511:  WaitMs(2000);
 19920  018E9E  0ED0               	movlw	208
 19921  018EA0  6EE6               	movwf	postinc1,c
 19922  018EA2  0E07               	movlw	7
 19923  018EA4  6EE6               	movwf	postinc1,c
 19924  018EA6  ECC0  F00C         	call	_WaitMs	;wreg free
 19925  018EAA                     l16834:
 19926                           
 19927                           ;main.c: 513:   if (++x > 64)
 19928                           ;stkvar	_x @ sp[(-9)+8]
 19929  018EAA  0EFF               	movlw	-1
 19930  018EAC  2AE3               	incf	plusw1,f,c
 19931  018EAE  0EFF               	movlw	-1
 19932  018EB0  006F FF8C  F02A    	movff	plusw1,btemp
 19933  018EB6  0E40               	movlw	64
 19934  018EB8  642A               	cpfsgt	btemp^0,c
 19935  018EBA  D001               	goto	l16838
 19936  018EBC  D1CF               	goto	l1513
 19937  018EBE                     l16838:
 19938                           
 19939                           ;main.c: 515:   sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 19940  018EBE  0E00               	movlw	0
 19941  018EC0  6EE6               	movwf	postinc1,c
 19942  018EC2  0E04               	movlw	4
 19943  018EC4  6EE6               	movwf	postinc1,c
 19944  018EC6  EC6D  F0FC         	call	_spinners	;wreg free
 19945  018ECA  502A               	movf	btemp^0,w,c
 19946  018ECC  6EE6               	movwf	postinc1,c
 19947  018ECE  0E00               	movlw	0
 19948  018ED0  6EE6               	movwf	postinc1,c
 19949  018ED2  0E48               	movlw	low STR_54
 19950  018ED4  6EE6               	movwf	postinc1,c
 19951  018ED6  0EFF               	movlw	high STR_54
 19952  018ED8  6EE6               	movwf	postinc1,c
 19953  018EDA  0E00               	movlw	0
 19954  018EDC  6EE6               	movwf	postinc1,c
 19955  018EDE  0E02               	movlw	2
 19956  018EE0  6EE6               	movwf	postinc1,c
 19957  018EE2  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 19958  018EE6  0060  F0AB  FFE6   	movff	btemp,postinc1
 19959  018EEC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 19960  018EF2  0E06               	movlw	6
 19961  018EF4  6EE6               	movwf	postinc1,c
 19962  018EF6  EC8D  F0F9         	call	_sprintf	;wreg free
 19963                           
 19964                           ;main.c: 516:   update_lcd(0);
 19965  018EFA  0E00               	movlw	0
 19966  018EFC  6EE6               	movwf	postinc1,c
 19967  018EFE  EC3F  F0F2         	call	_update_lcd	;wreg free
 19968                           
 19969                           ;main.c: 517:   WaitMs(100);
 19970  018F02  0E64               	movlw	100
 19971  018F04  6EE6               	movwf	postinc1,c
 19972  018F06  0E00               	movlw	0
 19973  018F08  6EE6               	movwf	postinc1,c
 19974  018F0A  ECC0  F00C         	call	_WaitMs	;wreg free
 19975                           
 19976                           ;main.c: 518:  } while (get_switch(SCALIB));
 19977  018F0E  0E04               	movlw	4
 19978  018F10  6EE6               	movwf	postinc1,c
 19979  018F12  ECD3  F00D         	call	_get_switch	;wreg free
 19980  018F16  502A               	movf	btemp^0,w,c
 19981  018F18  A4D8               	btfss	status,2,c
 19982  018F1A  D7C7               	goto	l16834
 19983                           
 19984                           ;main.c: 520:  x = 0;
 19985                           ;stkvar	_x @ sp[(-9)+8]
 19986  018F1C  0EFF               	movlw	-1
 19987  018F1E  6AE3               	clrf	plusw1,c
 19988  018F20                     l16846:
 19989                           
 19990                           ;main.c: 522:   cb += get_raw_result(C_BATT);
 19991  018F20  0E00               	movlw	0
 19992  018F22  6EE6               	movwf	postinc1,c
 19993  018F24  ECD5  F00F         	call	_get_raw_result	;wreg free
 19994                           
 19995                           ;stkvar	_cb @ sp[(-9)+4]
 19996  018F28  50E1               	movf	fsr1l,w,c
 19997  018F2A  0FFB               	addlw	-5
 19998  018F2C  6ED9               	movwf	fsr2l,c
 19999  018F2E  50E2               	movf	fsr1h,w,c
 20000  018F30  6EDA               	movwf	fsr2h,c
 20001  018F32  0EFF               	movlw	255
 20002  018F34  22DA               	addwfc	fsr2h,f,c
 20003  018F36  502A               	movf	btemp^0,w,c
 20004  018F38  26DE               	addwf	postinc2,f,c
 20005  018F3A  502B               	movf	(btemp+1)^0,w,c
 20006  018F3C  22DE               	addwfc	postinc2,f,c
 20007  018F3E  0E00               	movlw	0
 20008  018F40  22DE               	addwfc	postinc2,f,c
 20009  018F42  22DE               	addwfc	postinc2,f,c
 20010                           
 20011                           ;main.c: 523:   cp += get_raw_result(C_PV);
 20012  018F44  0E01               	movlw	1
 20013  018F46  6EE6               	movwf	postinc1,c
 20014  018F48  ECD5  F00F         	call	_get_raw_result	;wreg free
 20015                           
 20016                           ;stkvar	_cp @ sp[(-9)+0]
 20017  018F4C  50E1               	movf	fsr1l,w,c
 20018  018F4E  0FF7               	addlw	-9
 20019  018F50  6ED9               	movwf	fsr2l,c
 20020  018F52  50E2               	movf	fsr1h,w,c
 20021  018F54  6EDA               	movwf	fsr2h,c
 20022  018F56  0EFF               	movlw	255
 20023  018F58  22DA               	addwfc	fsr2h,f,c
 20024  018F5A  502A               	movf	btemp^0,w,c
 20025  018F5C  26DE               	addwf	postinc2,f,c
 20026  018F5E  502B               	movf	(btemp+1)^0,w,c
 20027  018F60  22DE               	addwfc	postinc2,f,c
 20028  018F62  0E00               	movlw	0
 20029  018F64  22DE               	addwfc	postinc2,f,c
 20030  018F66  22DE               	addwfc	postinc2,f,c
 20031                           
 20032                           ;main.c: 524:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
 20033  018F68  0EB5               	movlw	low STR_55
 20034  018F6A  6EE6               	movwf	postinc1,c
 20035  018F6C  0EFE               	movlw	high STR_55
 20036  018F6E  6EE6               	movwf	postinc1,c
 20037  018F70  0E00               	movlw	0
 20038  018F72  6EE6               	movwf	postinc1,c
 20039  018F74  0E00               	movlw	0
 20040  018F76  6EE6               	movwf	postinc1,c
 20041  018F78  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 20042  018F7C  0060  F0AB  FFE6   	movff	btemp,postinc1
 20043  018F82  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20044  018F88  0E04               	movlw	4
 20045  018F8A  6EE6               	movwf	postinc1,c
 20046  018F8C  EC8D  F0F9         	call	_sprintf	;wreg free
 20047                           
 20048                           ; BSR set to: 0
 20049                           ;main.c: 525:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 20050  018F90  0E01               	movlw	1
 20051  018F92  6EE6               	movwf	postinc1,c
 20052  018F94  ECD5  F00F         	call	_get_raw_result	;wreg free
 20053  018F98  0060  F0AB  FFE6   	movff	btemp,postinc1
 20054  018F9E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20055  018FA4  0E00               	movlw	0
 20056  018FA6  6EE6               	movwf	postinc1,c
 20057  018FA8  ECD5  F00F         	call	_get_raw_result	;wreg free
 20058  018FAC  0060  F0AB  FFE6   	movff	btemp,postinc1
 20059  018FB2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20060  018FB8  0E65               	movlw	low STR_56
 20061  018FBA  6EE6               	movwf	postinc1,c
 20062  018FBC  0EFD               	movlw	high STR_56
 20063  018FBE  6EE6               	movwf	postinc1,c
 20064  018FC0  0E00               	movlw	0
 20065  018FC2  6EE6               	movwf	postinc1,c
 20066  018FC4  0E01               	movlw	1
 20067  018FC6  6EE6               	movwf	postinc1,c
 20068  018FC8  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 20069  018FCC  0060  F0AB  FFE6   	movff	btemp,postinc1
 20070  018FD2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20071  018FD8  0E08               	movlw	8
 20072  018FDA  6EE6               	movwf	postinc1,c
 20073  018FDC  EC8D  F0F9         	call	_sprintf	;wreg free
 20074                           
 20075                           ; BSR set to: 0
 20076                           ;main.c: 526:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
 20077                           ;stkvar	_x @ sp[(-9)+8]
 20078  018FE0  0EFF               	movlw	-1
 20079  018FE2  50E3               	movf	plusw1,w,c
 20080  018FE4  6EE6               	movwf	postinc1,c
 20081  018FE6  0E00               	movlw	0
 20082  018FE8  6EE6               	movwf	postinc1,c
 20083  018FEA  0E09               	movlw	low STR_57
 20084  018FEC  6EE6               	movwf	postinc1,c
 20085  018FEE  0EFF               	movlw	high STR_57
 20086  018FF0  6EE6               	movwf	postinc1,c
 20087  018FF2  0E00               	movlw	0
 20088  018FF4  6EE6               	movwf	postinc1,c
 20089  018FF6  0E02               	movlw	2
 20090  018FF8  6EE6               	movwf	postinc1,c
 20091  018FFA  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 20092  018FFE  0060  F0AB  FFE6   	movff	btemp,postinc1
 20093  019004  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20094  01900A  0E06               	movlw	6
 20095  01900C  6EE6               	movwf	postinc1,c
 20096  01900E  EC8D  F0F9         	call	_sprintf	;wreg free
 20097                           
 20098                           ; BSR set to: 0
 20099                           ;main.c: 527:   update_lcd(0);
 20100  019012  0E00               	movlw	0
 20101  019014  6EE6               	movwf	postinc1,c
 20102  019016  EC3F  F0F2         	call	_update_lcd	;wreg free
 20103                           
 20104                           ;main.c: 528:   clear_adc_scan();
 20105  01901A  EC60  F011         	call	_clear_adc_scan	;wreg free
 20106                           
 20107                           ; BSR set to: 1
 20108                           ;main.c: 529:   start_adc_scan();
 20109  01901E  EC0B  F008         	call	_start_adc_scan	;wreg free
 20110                           
 20111                           ;main.c: 530:   WaitMs(100);
 20112  019022  0E64               	movlw	100
 20113  019024  6EE6               	movwf	postinc1,c
 20114  019026  0E00               	movlw	0
 20115  019028  6EE6               	movwf	postinc1,c
 20116  01902A  ECC0  F00C         	call	_WaitMs	;wreg free
 20117                           
 20118                           ;main.c: 531:  } while (++x < 64);
 20119                           ;stkvar	_x @ sp[(-9)+8]
 20120  01902E  0EFF               	movlw	-1
 20121  019030  2AE3               	incf	plusw1,f,c
 20122  019032  0EFF               	movlw	-1
 20123  019034  006F FF8C  F02A    	movff	plusw1,btemp
 20124  01903A  0E3F               	movlw	63
 20125  01903C  642A               	cpfsgt	btemp^0,c
 20126  01903E  D770               	goto	l16846
 20127                           
 20128                           ;main.c: 532:  cb = cb >> 6;
 20129  019040  0E06               	movlw	6
 20130  019042  6E35               	movwf	(btemp+11)^0,c
 20131                           
 20132                           ;stkvar	_cb @ sp[(-9)+4]
 20133  019044  50E1               	movf	fsr1l,w,c
 20134  019046  0FFB               	addlw	-5
 20135  019048  6ED9               	movwf	fsr2l,c
 20136  01904A  50E2               	movf	fsr1h,w,c
 20137  01904C  6EDA               	movwf	fsr2h,c
 20138  01904E  0EFF               	movlw	255
 20139  019050  22DA               	addwfc	fsr2h,f,c
 20140  019052  2835               	incf	(btemp+11)^0,w,c
 20141  019054  52DE               	movf	postinc2,f,c
 20142  019056  D007               	goto	u16500
 20143  019058                     u16505:
 20144  019058  52DE               	movf	postinc2,f,c
 20145  01905A  52DE               	movf	postinc2,f,c
 20146  01905C  90D8               	bcf	status,0,c
 20147  01905E  32DD               	rrcf	postdec2,f,c
 20148  019060  32DD               	rrcf	postdec2,f,c
 20149  019062  32DD               	rrcf	postdec2,f,c
 20150  019064  32DE               	rrcf	postinc2,f,c
 20151  019066                     u16500:
 20152  019066  2EE8               	decfsz	wreg,f,c
 20153  019068  D7F7               	goto	u16505
 20154                           
 20155                           ;main.c: 533:  cp = cp >> 6;
 20156  01906A  0E06               	movlw	6
 20157  01906C  6E35               	movwf	(btemp+11)^0,c
 20158                           
 20159                           ;stkvar	_cp @ sp[(-9)+0]
 20160  01906E  50E1               	movf	fsr1l,w,c
 20161  019070  0FF7               	addlw	-9
 20162  019072  6ED9               	movwf	fsr2l,c
 20163  019074  50E2               	movf	fsr1h,w,c
 20164  019076  6EDA               	movwf	fsr2h,c
 20165  019078  0EFF               	movlw	255
 20166  01907A  22DA               	addwfc	fsr2h,f,c
 20167  01907C  2835               	incf	(btemp+11)^0,w,c
 20168  01907E  52DE               	movf	postinc2,f,c
 20169  019080  D007               	goto	u16510
 20170  019082                     u16515:
 20171  019082  52DE               	movf	postinc2,f,c
 20172  019084  52DE               	movf	postinc2,f,c
 20173  019086  90D8               	bcf	status,0,c
 20174  019088  32DD               	rrcf	postdec2,f,c
 20175  01908A  32DD               	rrcf	postdec2,f,c
 20176  01908C  32DD               	rrcf	postdec2,f,c
 20177  01908E  32DE               	rrcf	postinc2,f,c
 20178  019090                     u16510:
 20179  019090  2EE8               	decfsz	wreg,f,c
 20180  019092  D7F7               	goto	u16515
 20181                           
 20182                           ;main.c: 535:  if (cal_current_zero(0, cb, cp)) {
 20183                           ;stkvar	_cp @ sp[(-9)+0]
 20184  019094  0EF7               	movlw	-9
 20185  019096  006F FF8F FFE6     	movff	plusw1,postinc1
 20186  01909C  006F FF8F FFE6     	movff	plusw1,postinc1
 20187                           
 20188                           ;stkvar	_cb @ sp[(-11)+4]
 20189  0190A2  0EF9               	movlw	-7
 20190  0190A4  006F FF8F FFE6     	movff	plusw1,postinc1
 20191  0190AA  006F FF8F FFE6     	movff	plusw1,postinc1
 20192  0190B0  0E00               	movlw	0
 20193  0190B2  6EE6               	movwf	postinc1,c
 20194  0190B4  EC49  F003         	call	_cal_current_zero	;wreg free
 20195  0190B8  502A               	movf	btemp^0,w,c
 20196  0190BA  B4D8               	btfsc	status,2,c
 20197  0190BC  D075               	goto	l16884
 20198                           
 20199                           ;main.c: 536:   cal_current_zero(1, cb, cp);
 20200                           ;stkvar	_cp @ sp[(-9)+0]
 20201  0190BE  0EF7               	movlw	-9
 20202  0190C0  006F FF8F FFE6     	movff	plusw1,postinc1
 20203  0190C6  006F FF8F FFE6     	movff	plusw1,postinc1
 20204                           
 20205                           ;stkvar	_cb @ sp[(-11)+4]
 20206  0190CC  0EF9               	movlw	-7
 20207  0190CE  006F FF8F FFE6     	movff	plusw1,postinc1
 20208  0190D4  006F FF8F FFE6     	movff	plusw1,postinc1
 20209  0190DA  0E01               	movlw	1
 20210  0190DC  6EE6               	movwf	postinc1,c
 20211  0190DE  EC49  F003         	call	_cal_current_zero	;wreg free
 20212                           
 20213                           ;main.c: 537:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 20214  0190E2  0E76               	movlw	low STR_51
 20215  0190E4  6EE6               	movwf	postinc1,c
 20216  0190E6  0EFE               	movlw	high STR_51
 20217  0190E8  6EE6               	movwf	postinc1,c
 20218  0190EA  0E00               	movlw	0
 20219  0190EC  6EE6               	movwf	postinc1,c
 20220  0190EE  0E00               	movlw	0
 20221  0190F0  6EE6               	movwf	postinc1,c
 20222  0190F2  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 20223  0190F6  0060  F0AB  FFE6   	movff	btemp,postinc1
 20224  0190FC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20225  019102  0E04               	movlw	4
 20226  019104  6EE6               	movwf	postinc1,c
 20227  019106  EC8D  F0F9         	call	_sprintf	;wreg free
 20228                           
 20229                           ; BSR set to: 0
 20230                           ;main.c: 538:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", cb, cp);
 20231                           ;stkvar	_cp @ sp[(-9)+0]
 20232  01910A  0EF7               	movlw	-9
 20233  01910C  006F FF8F FFE6     	movff	plusw1,postinc1
 20234  019112  006F FF8F FFE6     	movff	plusw1,postinc1
 20235  019118  006F FF8F FFE6     	movff	plusw1,postinc1
 20236  01911E  006F FF8F FFE6     	movff	plusw1,postinc1
 20237                           
 20238                           ;stkvar	_cb @ sp[(-13)+4]
 20239  019124  0EF7               	movlw	-9
 20240  019126  006F FF8F FFE6     	movff	plusw1,postinc1
 20241  01912C  006F FF8F FFE6     	movff	plusw1,postinc1
 20242  019132  006F FF8F FFE6     	movff	plusw1,postinc1
 20243  019138  006F FF8F FFE6     	movff	plusw1,postinc1
 20244  01913E  0E7A               	movlw	low STR_59
 20245  019140  6EE6               	movwf	postinc1,c
 20246  019142  0EFD               	movlw	high STR_59
 20247  019144  6EE6               	movwf	postinc1,c
 20248  019146  0E00               	movlw	0
 20249  019148  6EE6               	movwf	postinc1,c
 20250  01914A  0E01               	movlw	1
 20251  01914C  6EE6               	movwf	postinc1,c
 20252  01914E  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 20253  019152  0060  F0AB  FFE6   	movff	btemp,postinc1
 20254  019158  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20255  01915E  0E0C               	movlw	12
 20256  019160  6EE6               	movwf	postinc1,c
 20257  019162  EC8D  F0F9         	call	_sprintf	;wreg free
 20258                           
 20259                           ; BSR set to: 0
 20260                           ;main.c: 539:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set        ");
 20261  019166  0E4C               	movlw	low STR_60
 20262  019168  6EE6               	movwf	postinc1,c
 20263  01916A  0EFE               	movlw	high STR_60
 20264  01916C  6EE6               	movwf	postinc1,c
 20265  01916E  0E00               	movlw	0
 20266  019170  6EE6               	movwf	postinc1,c
 20267  019172  0E02               	movlw	2
 20268  019174  6EE6               	movwf	postinc1,c
 20269  019176  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 20270  01917A  0060  F0AB  FFE6   	movff	btemp,postinc1
 20271  019180  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20272  019186  0E04               	movlw	4
 20273  019188  6EE6               	movwf	postinc1,c
 20274  01918A  EC8D  F0F9         	call	_sprintf	;wreg free
 20275                           
 20276                           ; BSR set to: 0
 20277                           ;main.c: 540:   update_lcd(0);
 20278  01918E  0E00               	movlw	0
 20279  019190  6EE6               	movwf	postinc1,c
 20280  019192  EC3F  F0F2         	call	_update_lcd	;wreg free
 20281                           
 20282                           ;main.c: 541:   WaitMs(2000);
 20283  019196  0ED0               	movlw	208
 20284  019198  6EE6               	movwf	postinc1,c
 20285  01919A  0E07               	movlw	7
 20286  01919C  6EE6               	movwf	postinc1,c
 20287  01919E  ECC0  F00C         	call	_WaitMs	;wreg free
 20288                           
 20289                           ;main.c: 542:   write_cal_data();
 20290  0191A2  EC9C  F0F3         	call	_write_cal_data	;wreg free
 20291                           
 20292                           ;main.c: 543:  } else {
 20293  0191A6  D05A               	goto	l1513
 20294  0191A8                     l16884:
 20295                           
 20296                           ;main.c: 544:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 20297  0191A8  0E76               	movlw	low STR_51
 20298  0191AA  6EE6               	movwf	postinc1,c
 20299  0191AC  0EFE               	movlw	high STR_51
 20300  0191AE  6EE6               	movwf	postinc1,c
 20301  0191B0  0E00               	movlw	0
 20302  0191B2  6EE6               	movwf	postinc1,c
 20303  0191B4  0E00               	movlw	0
 20304  0191B6  6EE6               	movwf	postinc1,c
 20305  0191B8  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 20306  0191BC  0060  F0AB  FFE6   	movff	btemp,postinc1
 20307  0191C2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20308  0191C8  0E04               	movlw	4
 20309  0191CA  6EE6               	movwf	postinc1,c
 20310  0191CC  EC8D  F0F9         	call	_sprintf	;wreg free
 20311                           
 20312                           ;main.c: 545:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 20313  0191D0  0E01               	movlw	1
 20314  0191D2  6EE6               	movwf	postinc1,c
 20315  0191D4  ECD5  F00F         	call	_get_raw_result	;wreg free
 20316  0191D8  0060  F0AB  FFE6   	movff	btemp,postinc1
 20317  0191DE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20318  0191E4  0E00               	movlw	0
 20319  0191E6  6EE6               	movwf	postinc1,c
 20320  0191E8  ECD5  F00F         	call	_get_raw_result	;wreg free
 20321  0191EC  0060  F0AB  FFE6   	movff	btemp,postinc1
 20322  0191F2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20323  0191F8  0E7A               	movlw	low STR_59
 20324  0191FA  6EE6               	movwf	postinc1,c
 20325  0191FC  0EFD               	movlw	high STR_59
 20326  0191FE  6EE6               	movwf	postinc1,c
 20327  019200  0E00               	movlw	0
 20328  019202  6EE6               	movwf	postinc1,c
 20329  019204  0E01               	movlw	1
 20330  019206  6EE6               	movwf	postinc1,c
 20331  019208  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 20332  01920C  0060  F0AB  FFE6   	movff	btemp,postinc1
 20333  019212  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20334  019218  0E08               	movlw	8
 20335  01921A  6EE6               	movwf	postinc1,c
 20336  01921C  EC8D  F0F9         	call	_sprintf	;wreg free
 20337                           
 20338                           ;main.c: 546:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range   ");
 20339  019220  0EF4               	movlw	low STR_63
 20340  019222  6EE6               	movwf	postinc1,c
 20341  019224  0EFE               	movlw	high STR_63
 20342  019226  6EE6               	movwf	postinc1,c
 20343  019228  0E00               	movlw	0
 20344  01922A  6EE6               	movwf	postinc1,c
 20345  01922C  0E02               	movlw	2
 20346  01922E  6EE6               	movwf	postinc1,c
 20347  019230  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 20348  019234  0060  F0AB  FFE6   	movff	btemp,postinc1
 20349  01923A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20350  019240  0E04               	movlw	4
 20351  019242  6EE6               	movwf	postinc1,c
 20352  019244  EC8D  F0F9         	call	_sprintf	;wreg free
 20353                           
 20354                           ;main.c: 547:   update_lcd(0);
 20355  019248  0E00               	movlw	0
 20356  01924A  6EE6               	movwf	postinc1,c
 20357  01924C  EC3F  F0F2         	call	_update_lcd	;wreg free
 20358                           
 20359                           ;main.c: 548:   WaitMs(2000);
 20360  019250  0ED0               	movlw	208
 20361  019252  6EE6               	movwf	postinc1,c
 20362  019254  0E07               	movlw	7
 20363  019256  6EE6               	movwf	postinc1,c
 20364  019258  ECC0  F00C         	call	_WaitMs	;wreg free
 20365  01925C                     l1513:
 20366                           
 20367                           ; _current_sensor_cal: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 20368  01925C  0EF7               	movlw	247
 20369  01925E  26E1               	addwf	fsr1l,f,c
 20370  019260  0EFF               	movlw	255
 20371  019262  22E2               	addwfc	fsr1h,f,c
 20372  019264  0012               	return		;funcret
 20373  019266                     __end_of_current_sensor_cal:
 20374                           	opt callstack 0
 20375                           
 20376 ;; *************** function _write_cal_data *****************
 20377 ;; Defined at:
 20378 ;;		line 406 in file "daq.c"
 20379 ;; Parameters:    Size  Location     Type
 20380 ;;		None
 20381 ;; Auto vars:     Size  Location     Type
 20382 ;;  x               2  [STACK] unsigned short 
 20383 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
 20384 ;;		 -> R(171), 
 20385 ;;  y               2  [STACK] unsigned short 
 20386 ;;  crcVal          1  [STACK] unsigned char 
 20387 ;; Return value:  Size  Location     Type
 20388 ;;                  1  [STACK] void 
 20389 ;; Registers used:
 20390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 20391 ;; Tracked objects:
 20392 ;;		On entry : 0/39
 20393 ;;		On exit  : 0/0
 20394 ;;		Unchanged: 0/0
 20395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20400 ;;Total ram usage:        0 bytes
 20401 ;; Hardware stack levels used:    1
 20402 ;; Hardware stack levels required when called:   17
 20403 ;; This function calls:
 20404 ;;		_CRC_8BitDataWrite
 20405 ;;		_CRC_CalculatedResultGet
 20406 ;;		_CRC_Initialize
 20407 ;;		_CRC_IsBusy
 20408 ;;		_CRC_Start
 20409 ;;		_DATAEE_WriteByte
 20410 ;; This function is called by:
 20411 ;;		_main
 20412 ;;		_current_sensor_cal
 20413 ;; This function uses a reentrant model
 20414 ;;
 20415                           
 20416                           	psect	text56
 20417  01E738                     __ptext56:
 20418                           	opt callstack 0
 20419  01E738                     _write_cal_data:
 20420                           	opt callstack 0
 20421                           
 20422                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20423  01E738  0E07               	movlw	7
 20424  01E73A  26E1               	addwf	fsr1l,f,c
 20425  01E73C  0E00               	movlw	0
 20426  01E73E  22E2               	addwfc	fsr1h,f,c
 20427                           
 20428                           ;daq.c: 408:  uint16_t x = 0, y;
 20429                           ;stkvar	_x @ sp[(-7)+0]
 20430                           
 20431                           ;incstack = 0
 20432  01E740  0EF9               	movlw	-7
 20433  01E742  6AE3               	clrf	plusw1,c
 20434  01E744  0EFA               	movlw	-6
 20435  01E746  6AE3               	clrf	plusw1,c
 20436                           
 20437                           ;daq.c: 409:  uint8_t *r_cal_ptr, crcVal;;daq.c: 411:  y = sizeof(R);
 20438  01E748  0EAB               	movlw	171
 20439  01E74A  6E34               	movwf	(btemp+10)^0,c
 20440  01E74C  0E00               	movlw	0
 20441  01E74E  6E35               	movwf	(btemp+11)^0,c
 20442                           
 20443                           ;stkvar	_y @ sp[(-7)+4]
 20444  01E750  0EFD               	movlw	-3
 20445  01E752  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 20446  01E758  0EFE               	movlw	-2
 20447  01E75A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20448                           
 20449                           ;daq.c: 412:  R.crc = 0x42;
 20450  01E760  0E42               	movlw	66
 20451  01E762  0101               	movlb	1	; () banked
 20452  01E764  6FB1               	movwf	(_R+170)& (0+255),b	;volatile
 20453                           
 20454                           ; BSR set to: 1
 20455                           ;daq.c: 413:  r_cal_ptr = (uint8_t*) & R;
 20456                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 20457  01E766  0E01               	movlw	high _R
 20458  01E768  6E2A               	movwf	btemp^0,c
 20459  01E76A  0EFC               	movlw	-4
 20460  01E76C  0060  F0AB  FFE3   	movff	btemp,plusw1
 20461  01E772  0E07               	movlw	low _R
 20462  01E774  6E2A               	movwf	btemp^0,c
 20463  01E776  0EFB               	movlw	-5
 20464  01E778  0060  F0AB  FFE3   	movff	btemp,plusw1
 20465                           
 20466                           ; BSR set to: 1
 20467                           ;daq.c: 414:  R.checkmark = 0x1957;
 20468  01E77E  0E19               	movlw	25
 20469  01E780  6FB0               	movwf	(_R+169)& (0+255),b	;volatile
 20470  01E782  0E57               	movlw	87
 20471  01E784  6FAF               	movwf	(_R+168)& (0+255),b	;volatile
 20472                           
 20473                           ; BSR set to: 1
 20474                           ;daq.c: 416:  CRC_Initialize();
 20475  01E786  EC24  F004         	call	_CRC_Initialize	;wreg free
 20476                           
 20477                           ; BSR set to: 0
 20478                           ;daq.c: 419:  CRC_Start();
 20479  01E78A  EC5D  F011         	call	_CRC_Start	;wreg free
 20480  01E78E                     l13378:
 20481                           
 20482                           ;daq.c: 422:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 20483                           ;stkvar	_x @ sp[(-7)+0]
 20484  01E78E  0EF9               	movlw	-7
 20485  01E790  006F FF8C  F034    	movff	plusw1,btemp+10
 20486  01E796  0EFA               	movlw	-6
 20487  01E798  006F FF8C  F035    	movff	plusw1,btemp+11
 20488                           
 20489                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 20490  01E79E  0EFB               	movlw	-5
 20491  01E7A0  006F FF8C  F032    	movff	plusw1,btemp+8
 20492  01E7A6  0EFC               	movlw	-4
 20493  01E7A8  006F FF8C  F033    	movff	plusw1,btemp+9
 20494  01E7AE  5034               	movf	(btemp+10)^0,w,c
 20495  01E7B0  2432               	addwf	(btemp+8)^0,w,c
 20496  01E7B2  6ED9               	movwf	fsr2l,c
 20497  01E7B4  5035               	movf	(btemp+11)^0,w,c
 20498  01E7B6  2033               	addwfc	(btemp+9)^0,w,c
 20499  01E7B8  6EDA               	movwf	fsr2h,c
 20500  01E7BA  50DF               	movf	indf2,w,c
 20501  01E7BC  6EE6               	movwf	postinc1,c
 20502                           
 20503                           ;stkvar	_x @ sp[(-8)+0]
 20504  01E7BE  0EF8               	movlw	-8
 20505  01E7C0  006F FF8F FFE6     	movff	plusw1,postinc1
 20506  01E7C6  006F FF8F FFE6     	movff	plusw1,postinc1
 20507  01E7CC  EC3F  F007         	call	_DATAEE_WriteByte	;wreg free
 20508                           
 20509                           ;daq.c: 423:   CRC_8BitDataWrite(r_cal_ptr[x]);
 20510                           ;stkvar	_x @ sp[(-7)+0]
 20511  01E7D0  0EF9               	movlw	-7
 20512  01E7D2  006F FF8C  F034    	movff	plusw1,btemp+10
 20513  01E7D8  0EFA               	movlw	-6
 20514  01E7DA  006F FF8C  F035    	movff	plusw1,btemp+11
 20515                           
 20516                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 20517  01E7E0  0EFB               	movlw	-5
 20518  01E7E2  006F FF8C  F032    	movff	plusw1,btemp+8
 20519  01E7E8  0EFC               	movlw	-4
 20520  01E7EA  006F FF8C  F033    	movff	plusw1,btemp+9
 20521  01E7F0  5034               	movf	(btemp+10)^0,w,c
 20522  01E7F2  2432               	addwf	(btemp+8)^0,w,c
 20523  01E7F4  6ED9               	movwf	fsr2l,c
 20524  01E7F6  5035               	movf	(btemp+11)^0,w,c
 20525  01E7F8  2033               	addwfc	(btemp+9)^0,w,c
 20526  01E7FA  6EDA               	movwf	fsr2h,c
 20527  01E7FC  50DF               	movf	indf2,w,c
 20528  01E7FE  6EE6               	movwf	postinc1,c
 20529  01E800  ECCE  F010         	call	_CRC_8BitDataWrite	;wreg free
 20530  01E804                     l13382:
 20531  01E804  ECF0  F010         	call	_CRC_IsBusy	;wreg free
 20532  01E808  502A               	movf	btemp^0,w,c
 20533  01E80A  A4D8               	btfss	status,2,c
 20534  01E80C  D7FB               	goto	l13382
 20535                           
 20536                           ;daq.c: 425:  } while (++x < y);
 20537                           ;stkvar	_y @ sp[(-7)+4]
 20538  01E80E  0EFD               	movlw	-3
 20539  01E810  006F FF8C  F034    	movff	plusw1,btemp+10
 20540  01E816  0EFE               	movlw	-2
 20541  01E818  006F FF8C  F035    	movff	plusw1,btemp+11
 20542                           
 20543                           ;stkvar	_x @ sp[(-7)+0]
 20544  01E81E  0EF9               	movlw	-7
 20545  01E820  50E3               	movf	plusw1,w,c
 20546  01E822  0F01               	addlw	1
 20547  01E824  6E2A               	movwf	btemp^0,c
 20548  01E826  0EF9               	movlw	-7
 20549  01E828  0060  F0AB  FFE3   	movff	btemp,plusw1
 20550  01E82E  6A2A               	clrf	btemp^0,c
 20551  01E830  0EFA               	movlw	-6
 20552  01E832  50E3               	movf	plusw1,w,c
 20553  01E834  202A               	addwfc	btemp^0,w,c
 20554  01E836  6E2A               	movwf	btemp^0,c
 20555  01E838  0EFA               	movlw	-6
 20556  01E83A  0060  F0AB  FFE3   	movff	btemp,plusw1
 20557  01E840  0EF9               	movlw	-7
 20558  01E842  006F FF8C  F032    	movff	plusw1,btemp+8
 20559  01E848  0EFA               	movlw	-6
 20560  01E84A  006F FF8C  F033    	movff	plusw1,btemp+9
 20561  01E850  5034               	movf	(btemp+10)^0,w,c
 20562  01E852  5C32               	subwf	(btemp+8)^0,w,c
 20563  01E854  5035               	movf	(btemp+11)^0,w,c
 20564  01E856  5833               	subwfb	(btemp+9)^0,w,c
 20565  01E858  A0D8               	btfss	status,0,c
 20566  01E85A  D799               	goto	l13378
 20567                           
 20568                           ;daq.c: 427:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 20569  01E85C  0E00               	movlw	0
 20570  01E85E  6EE6               	movwf	postinc1,c
 20571  01E860  0E00               	movlw	0
 20572  01E862  6EE6               	movwf	postinc1,c
 20573  01E864  0E00               	movlw	0
 20574  01E866  6EE6               	movwf	postinc1,c
 20575  01E868  ECB8  F0EE         	call	_CRC_CalculatedResultGet	;wreg free
 20576                           
 20577                           ;stkvar	_crcVal @ sp[(-7)+6]
 20578  01E86C  0EFF               	movlw	-1
 20579  01E86E  0060  F0AB  FFE3   	movff	btemp,plusw1
 20580                           
 20581                           ;daq.c: 429:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 20582                           ;stkvar	_crcVal @ sp[(-7)+6]
 20583  01E874  0EFF               	movlw	-1
 20584  01E876  50E3               	movf	plusw1,w,c
 20585  01E878  6EE6               	movwf	postinc1,c
 20586  01E87A  0EAA               	movlw	170
 20587  01E87C  6EE6               	movwf	postinc1,c
 20588  01E87E  0E00               	movlw	0
 20589  01E880  6EE6               	movwf	postinc1,c
 20590  01E882  EC3F  F007         	call	_DATAEE_WriteByte	;wreg free
 20591                           
 20592                           ; _write_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20593  01E886  0EF9               	movlw	249
 20594  01E888  26E1               	addwf	fsr1l,f,c
 20595  01E88A  0EFF               	movlw	255
 20596  01E88C  22E2               	addwfc	fsr1h,f,c
 20597  01E88E  0012               	return		;funcret
 20598  01E890                     __end_of_write_cal_data:
 20599                           	opt callstack 0
 20600                           
 20601 ;; *************** function _DATAEE_WriteByte *****************
 20602 ;; Defined at:
 20603 ;;		line 172 in file "mcc_generated_files/memory.c"
 20604 ;; Parameters:    Size  Location     Type
 20605 ;;  bAdd            2  [STACK] unsigned short 
 20606 ;;  bData           1  [STACK] unsigned char 
 20607 ;; Auto vars:     Size  Location     Type
 20608 ;;  GIEBitValue     1  [STACK] unsigned char 
 20609 ;; Return value:  Size  Location     Type
 20610 ;;                  1  [STACK] void 
 20611 ;; Registers used:
 20612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 20613 ;; Tracked objects:
 20614 ;;		On entry : 0/39
 20615 ;;		On exit  : 0/0
 20616 ;;		Unchanged: 0/0
 20617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20622 ;;Total ram usage:        0 bytes
 20623 ;; Hardware stack levels used:    1
 20624 ;; Hardware stack levels required when called:   15
 20625 ;; This function calls:
 20626 ;;		Nothing
 20627 ;; This function is called by:
 20628 ;;		_write_cal_data
 20629 ;; This function uses a reentrant model
 20630 ;;
 20631                           
 20632                           	psect	text57
 20633  000E7E                     __ptext57:
 20634                           	opt callstack 0
 20635  000E7E                     _DATAEE_WriteByte:
 20636                           	opt callstack 0
 20637                           
 20638                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20639  000E7E  52E6               	movf	postinc1,f,c
 20640                           
 20641                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 20642                           
 20643                           ;incstack = 0
 20644  000E80  AED2               	btfss	210,7,c	;volatile
 20645  000E82  D003               	goto	u12020
 20646  000E84  6A35               	clrf	(btemp+11)^0,c
 20647  000E86  2A35               	incf	(btemp+11)^0,f,c
 20648  000E88  D001               	goto	u12028
 20649  000E8A                     u12020:
 20650  000E8A  6A35               	clrf	(btemp+11)^0,c
 20651  000E8C                     u12028:
 20652                           
 20653                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 20654  000E8C  0EFF               	movlw	-1
 20655  000E8E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20656                           
 20657                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 20658                           ;stkvar	_bAdd @ sp[(-1)+-2]
 20659  000E94  0EFE               	movlw	254
 20660  000E96  24E1               	addwf	fsr1l,w,c
 20661  000E98  6ED9               	movwf	fsr2l,c
 20662  000E9A  0EFF               	movlw	255
 20663  000E9C  20E2               	addwfc	fsr1h,w,c
 20664  000E9E  6EDA               	movwf	fsr2h,c
 20665  000EA0  50DF               	movf	indf2,w,c
 20666  000EA2  0B03               	andlw	3
 20667  000EA4  0139               	movlb	57	; () banked
 20668  000EA6  6FE1               	movwf	225,b	;volatile
 20669                           
 20670                           ; BSR set to: 57
 20671                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 20672                           ;stkvar	_bAdd @ sp[(-1)+-2]
 20673  000EA8  0EFD               	movlw	-3
 20674  000EAA  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 20675                           
 20676                           ; BSR set to: 57
 20677                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 20678                           ;stkvar	_bData @ sp[(-1)+-3]
 20679  000EB0  0EFC               	movlw	-4
 20680  000EB2  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 20681                           
 20682                           ; BSR set to: 57
 20683                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 20684  000EB8  0E3F               	movlw	-193
 20685  000EBA  17E5               	andwf	229,f,b	;volsfr
 20686                           
 20687                           ; BSR set to: 57
 20688                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 20689  000EBC  85E5               	bsf	229,2,b	;volsfr
 20690                           
 20691                           ; BSR set to: 57
 20692                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 20693  000EBE  9ED2               	bcf	210,7,c	;volatile
 20694                           
 20695                           ; BSR set to: 57
 20696                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 20697  000EC0  0E55               	movlw	85
 20698  000EC2  6FE6               	movwf	230,b	;volsfr
 20699                           
 20700                           ; BSR set to: 57
 20701                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 20702  000EC4  0EAA               	movlw	170
 20703  000EC6  6FE6               	movwf	230,b	;volsfr
 20704                           
 20705                           ; BSR set to: 57
 20706                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 20707  000EC8  83E5               	bsf	229,1,b	;volsfr
 20708  000ECA                     l942:
 20709                           
 20710                           ; BSR set to: 57
 20711                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 20712  000ECA  B3E5               	btfsc	229,1,b	;volsfr
 20713  000ECC  D7FE               	goto	l942
 20714                           
 20715                           ; BSR set to: 57
 20716                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 20717  000ECE  95E5               	bcf	229,2,b	;volsfr
 20718                           
 20719                           ; BSR set to: 57
 20720                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 20721                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 20722  000ED0  0EFF               	movlw	-1
 20723  000ED2  B0E3               	btfsc	plusw1,0,c
 20724  000ED4  D002               	bra	u12045
 20725  000ED6  9ED2               	bcf	210,7,c	;volatile
 20726  000ED8  D001               	bra	u12046
 20727  000EDA                     u12045:
 20728  000EDA  8ED2               	bsf	210,7,c	;volatile
 20729  000EDC                     u12046:
 20730                           
 20731                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 20732  000EDC  52E5               	movf	postdec1,f,c
 20733  000EDE  52E5               	movf	postdec1,f,c
 20734  000EE0  52E5               	movf	postdec1,f,c
 20735  000EE2  52E5               	movf	postdec1,f,c
 20736  000EE4  0012               	return		;funcret
 20737  000EE6                     __end_of_DATAEE_WriteByte:
 20738                           	opt callstack 0
 20739                           
 20740 ;; *************** function _CRC_Start *****************
 20741 ;; Defined at:
 20742 ;;		line 119 in file "mcc_generated_files/crc.c"
 20743 ;; Parameters:    Size  Location     Type
 20744 ;;		None
 20745 ;; Auto vars:     Size  Location     Type
 20746 ;;		None
 20747 ;; Return value:  Size  Location     Type
 20748 ;;                  1  [STACK] void 
 20749 ;; Registers used:
 20750 ;;		None
 20751 ;; Tracked objects:
 20752 ;;		On entry : 3F/0
 20753 ;;		On exit  : 3F/39
 20754 ;;		Unchanged: 0/0
 20755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20760 ;;Total ram usage:        0 bytes
 20761 ;; Hardware stack levels used:    1
 20762 ;; Hardware stack levels required when called:   15
 20763 ;; This function calls:
 20764 ;;		Nothing
 20765 ;; This function is called by:
 20766 ;;		_read_cal_data
 20767 ;;		_write_cal_data
 20768 ;; This function uses a reentrant model
 20769 ;;
 20770                           
 20771                           	psect	text58
 20772  0022BA                     __ptext58:
 20773                           	opt callstack 0
 20774  0022BA                     _CRC_Start:
 20775                           	opt callstack 14
 20776                           
 20777                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 20778                           
 20779                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20780                           ;incstack = 0
 20781  0022BA  0139               	movlb	57	; () banked
 20782  0022BC  8D68               	bsf	104,6,b	;volatile
 20783                           
 20784                           ; BSR set to: 57
 20785                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 20786  0022BE  0012               	return		;funcret
 20787  0022C0                     __end_of_CRC_Start:
 20788                           	opt callstack 0
 20789                           
 20790 ;; *************** function _CRC_IsBusy *****************
 20791 ;; Defined at:
 20792 ;;		line 201 in file "mcc_generated_files/crc.c"
 20793 ;; Parameters:    Size  Location     Type
 20794 ;;		None
 20795 ;; Auto vars:     Size  Location     Type
 20796 ;;		None
 20797 ;; Return value:  Size  Location     Type
 20798 ;;                  1  [STACK] _Bool 
 20799 ;; Registers used:
 20800 ;;		btemp
 20801 ;; Tracked objects:
 20802 ;;		On entry : 0/39
 20803 ;;		On exit  : 0/0
 20804 ;;		Unchanged: 0/0
 20805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20810 ;;Total ram usage:        0 bytes
 20811 ;; Hardware stack levels used:    1
 20812 ;; Hardware stack levels required when called:   15
 20813 ;; This function calls:
 20814 ;;		Nothing
 20815 ;; This function is called by:
 20816 ;;		_read_cal_data
 20817 ;;		_write_cal_data
 20818 ;; This function uses a reentrant model
 20819 ;;
 20820                           
 20821                           	psect	text59
 20822  0021E0                     __ptext59:
 20823                           	opt callstack 0
 20824  0021E0                     _CRC_IsBusy:
 20825                           	opt callstack 14
 20826                           
 20827                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 20828                           
 20829                           ; BSR set to: 57
 20830                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20831                           ;incstack = 0
 20832  0021E0  0139               	movlb	57	; () banked
 20833  0021E2  AB68               	btfss	104,5,b	;volatile
 20834  0021E4  D003               	goto	u12250
 20835  0021E6  6A2A               	clrf	btemp^0,c
 20836  0021E8  2A2A               	incf	btemp^0,f,c
 20837  0021EA  0012               	return	
 20838  0021EC                     u12250:
 20839  0021EC  6A2A               	clrf	btemp^0,c
 20840                           
 20841                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 20842  0021EE  0012               	return		;funcret
 20843  0021F0                     __end_of_CRC_IsBusy:
 20844                           	opt callstack 0
 20845                           
 20846 ;; *************** function _CRC_CalculatedResultGet *****************
 20847 ;; Defined at:
 20848 ;;		line 159 in file "mcc_generated_files/crc.c"
 20849 ;; Parameters:    Size  Location     Type
 20850 ;;  reverse         1  [STACK] _Bool 
 20851 ;;  xorValue        2  [STACK] unsigned short 
 20852 ;; Auto vars:     Size  Location     Type
 20853 ;;  result          2  [STACK] unsigned short 
 20854 ;;  mask            2  [STACK] unsigned short 
 20855 ;; Return value:  Size  Location     Type
 20856 ;;                  2  [STACK] unsigned short 
 20857 ;; Registers used:
 20858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 20859 ;; Tracked objects:
 20860 ;;		On entry : 0/39
 20861 ;;		On exit  : 0/0
 20862 ;;		Unchanged: 0/0
 20863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20868 ;;Total ram usage:        0 bytes
 20869 ;; Hardware stack levels used:    1
 20870 ;; Hardware stack levels required when called:   16
 20871 ;; This function calls:
 20872 ;;		_CRC_ReverseValue
 20873 ;; This function is called by:
 20874 ;;		_read_cal_data
 20875 ;;		_write_cal_data
 20876 ;; This function uses a reentrant model
 20877 ;;
 20878                           
 20879                           	psect	text60
 20880  01DD70                     __ptext60:
 20881                           	opt callstack 0
 20882  01DD70                     _CRC_CalculatedResultGet:
 20883                           	opt callstack 0
 20884                           
 20885                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20886  01DD70  52E6               	movf	postinc1,f,c
 20887  01DD72  52E6               	movf	postinc1,f,c
 20888  01DD74  52E6               	movf	postinc1,f,c
 20889  01DD76  52E6               	movf	postinc1,f,c
 20890                           
 20891                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 20892                           
 20893                           ;incstack = 0
 20894  01DD78  0139               	movlb	57	; () banked
 20895  01DD7A  9D68               	bcf	104,6,b	;volatile
 20896                           
 20897                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 20898  01DD7C  9DA0               	bcf	160,6,b	;volatile
 20899                           
 20900                           ; BSR set to: 57
 20901                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 20902  01DD7E  5169               	movf	105,w,b	;volatile
 20903  01DD80  0B0F               	andlw	15
 20904  01DD82  6E35               	movwf	(btemp+11)^0,c
 20905  01DD84  3A35               	swapf	(btemp+11)^0,f,c
 20906  01DD86  5169               	movf	105,w,b	;volatile
 20907  01DD88  1835               	xorwf	(btemp+11)^0,w,c
 20908  01DD8A  0B0F               	andlw	-241
 20909  01DD8C  1835               	xorwf	(btemp+11)^0,w,c
 20910  01DD8E  6F69               	movwf	105,b	;volatile
 20911                           
 20912                           ; BSR set to: 57
 20913                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 20914  01DD90  0E08               	movlw	8
 20915  01DD92  0100               	movlb	0	; () banked
 20916  01DD94  65E5               	cpfsgt	(_crcObj+1)& (0+255),b
 20917  01DD96  D003               	goto	l1282
 20918                           
 20919                           ; BSR set to: 0
 20920                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 20921  01DD98  0139               	movlb	57	; () banked
 20922  01DD9A  6B61               	clrf	97,b	;volatile
 20923  01DD9C  D001               	goto	L18
 20924  01DD9E                     l1282:
 20925                           
 20926                           ; BSR set to: 0
 20927                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 20928  01DD9E  0139               	movlb	57	; () banked
 20929  01DDA0                     L18:
 20930  01DDA0  6B60               	clrf	96,b	;volatile
 20931                           
 20932                           ; BSR set to: 57
 20933                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 20934                           
 20935                           ;mcc_generated_files/crc.c: 176:      }
 20936  01DDA2  8D68               	bsf	104,6,b	;volatile
 20937  01DDA4                     l1284:
 20938                           
 20939                           ; BSR set to: 57
 20940  01DDA4  ADA0               	btfss	160,6,b	;volatile
 20941  01DDA6  D7FE               	goto	l1284
 20942                           
 20943                           ; BSR set to: 57
 20944                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 20945  01DDA8  9DA0               	bcf	160,6,b	;volatile
 20946                           
 20947                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 20948  01DDAA  9D68               	bcf	104,6,b	;volatile
 20949                           
 20950                           ; BSR set to: 57
 20951                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 20952  01DDAC  0060  F390  F035   	movff	_crcObj,btemp+11
 20953  01DDB2  0EFF               	movlw	255
 20954  01DDB4  2635               	addwf	(btemp+11)^0,f,c
 20955  01DDB6  3A35               	swapf	(btemp+11)^0,f,c
 20956  01DDB8  5169               	movf	105,w,b	;volatile
 20957  01DDBA  1835               	xorwf	(btemp+11)^0,w,c
 20958  01DDBC  0B0F               	andlw	-241
 20959  01DDBE  1835               	xorwf	(btemp+11)^0,w,c
 20960  01DDC0  6F69               	movwf	105,b	;volatile
 20961                           
 20962                           ; BSR set to: 57
 20963                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 20964  01DDC2  5162               	movf	98,w,b	;volatile
 20965  01DDC4  006E F58C  F02A    	movff	14691,btemp	;volatile
 20966  01DDCA  6A2B               	clrf	(btemp+1)^0,c
 20967  01DDCC  0060  F0A8  F02B   	movff	btemp,btemp+1
 20968  01DDD2  6A2A               	clrf	btemp^0,c
 20969  01DDD4  122A               	iorwf	btemp^0,f,c
 20970  01DDD6  0E00               	movlw	0
 20971  01DDD8  122B               	iorwf	(btemp+1)^0,f,c
 20972                           
 20973                           ;stkvar	_result @ sp[(-4)+0]
 20974  01DDDA  0EFC               	movlw	-4
 20975  01DDDC  0060  F0AB  FFE3   	movff	btemp,plusw1
 20976  01DDE2  0EFD               	movlw	-3
 20977  01DDE4  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 20978                           
 20979                           ; BSR set to: 57
 20980                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 20981  01DDEA  0E10               	movlw	16
 20982  01DDEC  0100               	movlb	0	; () banked
 20983  01DDEE  61E5               	cpfslt	(_crcObj+1)& (0+255),b
 20984  01DDF0  D03A               	goto	l12726
 20985                           
 20986                           ; BSR set to: 0
 20987                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 20988  01DDF2  0EFF               	movlw	255
 20989  01DDF4  6E34               	movwf	(btemp+10)^0,c
 20990  01DDF6  0EFF               	movlw	255
 20991  01DDF8  6E35               	movwf	(btemp+11)^0,c
 20992  01DDFA  0060  F394  F033   	movff	_crcObj+1,btemp+9
 20993  01DE00  0E01               	movlw	1
 20994  01DE02  6E30               	movwf	(btemp+6)^0,c
 20995  01DE04  0E00               	movlw	0
 20996  01DE06  6E31               	movwf	(btemp+7)^0,c
 20997  01DE08  2A33               	incf	(btemp+9)^0,f,c
 20998  01DE0A  D003               	goto	u12234
 20999  01DE0C                     u12235:
 21000  01DE0C  90D8               	bcf	status,0,c
 21001  01DE0E  3630               	rlcf	(btemp+6)^0,f,c
 21002  01DE10  3631               	rlcf	(btemp+7)^0,f,c
 21003  01DE12                     u12234:
 21004  01DE12  2E33               	decfsz	(btemp+9)^0,f,c
 21005  01DE14  D7FB               	goto	u12235
 21006  01DE16  5034               	movf	(btemp+10)^0,w,c
 21007  01DE18  2630               	addwf	(btemp+6)^0,f,c
 21008  01DE1A  5035               	movf	(btemp+11)^0,w,c
 21009  01DE1C  2231               	addwfc	(btemp+7)^0,f,c
 21010                           
 21011                           ;stkvar	_mask @ sp[(-4)+2]
 21012  01DE1E  0EFE               	movlw	-2
 21013  01DE20  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 21014  01DE26  0EFF               	movlw	-1
 21015  01DE28  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 21016                           
 21017                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 21018                           ;stkvar	_mask @ sp[(-4)+2]
 21019  01DE2E  0EFE               	movlw	-2
 21020  01DE30  006F FF8C  F034    	movff	plusw1,btemp+10
 21021  01DE36  0EFF               	movlw	-1
 21022  01DE38  006F FF8C  F035    	movff	plusw1,btemp+11
 21023                           
 21024                           ;stkvar	_result @ sp[(-4)+0]
 21025  01DE3E  0EFC               	movlw	-4
 21026  01DE40  006F FF8C  F02A    	movff	plusw1,btemp
 21027  01DE46  5034               	movf	(btemp+10)^0,w,c
 21028  01DE48  162A               	andwf	btemp^0,f,c
 21029  01DE4A  0EFC               	movlw	-4
 21030  01DE4C  0060  F0AB  FFE3   	movff	btemp,plusw1
 21031  01DE52  0EFD               	movlw	-3
 21032  01DE54  006F FF8C  F02A    	movff	plusw1,btemp
 21033  01DE5A  5035               	movf	(btemp+11)^0,w,c
 21034  01DE5C  162A               	andwf	btemp^0,f,c
 21035  01DE5E  0EFD               	movlw	-3
 21036  01DE60  0060  F0AB  FFE3   	movff	btemp,plusw1
 21037  01DE66                     l12726:
 21038                           
 21039                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 21040                           ;stkvar	_reverse @ sp[(-4)+-1]
 21041  01DE66  0EFB               	movlw	-5
 21042  01DE68  50E3               	movf	plusw1,w,c
 21043  01DE6A  B4D8               	btfsc	status,2,c
 21044  01DE6C  D011               	goto	l12730
 21045                           
 21046                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 21047                           ;stkvar	_result @ sp[(-4)+0]
 21048  01DE6E  0EFC               	movlw	-4
 21049  01DE70  006F FF8F FFE6     	movff	plusw1,postinc1
 21050  01DE76  006F FF8F FFE6     	movff	plusw1,postinc1
 21051  01DE7C  ECB5  F0FD         	call	_CRC_ReverseValue	;wreg free
 21052                           
 21053                           ;stkvar	_result @ sp[(-4)+0]
 21054  01DE80  0EFC               	movlw	-4
 21055  01DE82  0060  F0AB  FFE3   	movff	btemp,plusw1
 21056  01DE88  0EFD               	movlw	-3
 21057  01DE8A  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 21058  01DE90                     l12730:
 21059                           
 21060                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 21061                           ;stkvar	_xorValue @ sp[(-4)+-3]
 21062  01DE90  0EF9               	movlw	-7
 21063  01DE92  006F FF8C  F034    	movff	plusw1,btemp+10
 21064  01DE98  0EFA               	movlw	-6
 21065  01DE9A  006F FF8C  F035    	movff	plusw1,btemp+11
 21066                           
 21067                           ;stkvar	_result @ sp[(-4)+0]
 21068  01DEA0  0EFC               	movlw	-4
 21069  01DEA2  006F FF8C  F02A    	movff	plusw1,btemp
 21070  01DEA8  5034               	movf	(btemp+10)^0,w,c
 21071  01DEAA  1A2A               	xorwf	btemp^0,f,c
 21072  01DEAC  0EFC               	movlw	-4
 21073  01DEAE  0060  F0AB  FFE3   	movff	btemp,plusw1
 21074  01DEB4  0EFD               	movlw	-3
 21075  01DEB6  006F FF8C  F02A    	movff	plusw1,btemp
 21076  01DEBC  5035               	movf	(btemp+11)^0,w,c
 21077  01DEBE  1A2A               	xorwf	btemp^0,f,c
 21078  01DEC0  0EFD               	movlw	-3
 21079  01DEC2  0060  F0AB  FFE3   	movff	btemp,plusw1
 21080                           
 21081                           ;mcc_generated_files/crc.c: 198:     return result;
 21082                           ;stkvar	_result @ sp[(-4)+0]
 21083  01DEC8  0EFC               	movlw	-4
 21084  01DECA  006F FF8C  F02A    	movff	plusw1,btemp
 21085  01DED0  0EFD               	movlw	-3
 21086  01DED2  006F FF8C  F02B    	movff	plusw1,btemp+1
 21087                           
 21088                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 21089  01DED8  0EF9               	movlw	249
 21090  01DEDA  26E1               	addwf	fsr1l,f,c
 21091  01DEDC  0EFF               	movlw	255
 21092  01DEDE  22E2               	addwfc	fsr1h,f,c
 21093  01DEE0  0012               	return		;funcret
 21094  01DEE2                     __end_of_CRC_CalculatedResultGet:
 21095                           	opt callstack 0
 21096                           
 21097 ;; *************** function _CRC_ReverseValue *****************
 21098 ;; Defined at:
 21099 ;;		line 138 in file "mcc_generated_files/crc.c"
 21100 ;; Parameters:    Size  Location     Type
 21101 ;;  crc             2  [STACK] unsigned short 
 21102 ;; Auto vars:     Size  Location     Type
 21103 ;;  mask            2  [STACK] unsigned short 
 21104 ;;  reverse         2  [STACK] unsigned short 
 21105 ;; Return value:  Size  Location     Type
 21106 ;;                  2  [STACK] unsigned short 
 21107 ;; Registers used:
 21108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 21109 ;; Tracked objects:
 21110 ;;		On entry : 0/0
 21111 ;;		On exit  : 0/0
 21112 ;;		Unchanged: 0/0
 21113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21118 ;;Total ram usage:        0 bytes
 21119 ;; Hardware stack levels used:    1
 21120 ;; Hardware stack levels required when called:   15
 21121 ;; This function calls:
 21122 ;;		Nothing
 21123 ;; This function is called by:
 21124 ;;		_CRC_CalculatedResultGet
 21125 ;; This function uses a reentrant model
 21126 ;;
 21127                           
 21128                           	psect	text61
 21129  01FB6A                     __ptext61:
 21130                           	opt callstack 0
 21131  01FB6A                     _CRC_ReverseValue:
 21132                           	opt callstack 0
 21133                           
 21134                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21135  01FB6A  52E6               	movf	postinc1,f,c
 21136  01FB6C  52E6               	movf	postinc1,f,c
 21137  01FB6E  52E6               	movf	postinc1,f,c
 21138  01FB70  52E6               	movf	postinc1,f,c
 21139                           
 21140                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 21141                           
 21142                           ;incstack = 0
 21143  01FB72  0E01               	movlw	1
 21144  01FB74  6E34               	movwf	(btemp+10)^0,c
 21145  01FB76  0E00               	movlw	0
 21146  01FB78  6E35               	movwf	(btemp+11)^0,c
 21147                           
 21148                           ;stkvar	_mask @ sp[(-4)+0]
 21149  01FB7A  0EFC               	movlw	-4
 21150  01FB7C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21151  01FB82  0EFD               	movlw	-3
 21152  01FB84  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21153                           
 21154                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 21155  01FB8A  0060  F394  F035   	movff	_crcObj+1,btemp+11
 21156  01FB90  0EFF               	movlw	255
 21157  01FB92  2635               	addwf	(btemp+11)^0,f,c
 21158                           
 21159                           ;stkvar	_mask @ sp[(-4)+0]
 21160  01FB94  50E1               	movf	fsr1l,w,c
 21161  01FB96  0FFC               	addlw	-4
 21162  01FB98  6ED9               	movwf	fsr2l,c
 21163  01FB9A  50E2               	movf	fsr1h,w,c
 21164  01FB9C  6EDA               	movwf	fsr2h,c
 21165  01FB9E  0EFF               	movlw	255
 21166  01FBA0  22DA               	addwfc	fsr2h,f,c
 21167  01FBA2  2835               	incf	(btemp+11)^0,w,c
 21168  01FBA4  D003               	goto	u11500
 21169  01FBA6                     u11505:
 21170  01FBA6  90D8               	bcf	status,0,c
 21171  01FBA8  36DE               	rlcf	postinc2,f,c
 21172  01FBAA  36DD               	rlcf	postdec2,f,c
 21173  01FBAC                     u11500:
 21174  01FBAC  2EE8               	decfsz	wreg,f,c
 21175  01FBAE  D7FB               	goto	u11505
 21176                           
 21177                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 21178                           ;stkvar	_reverse @ sp[(-4)+2]
 21179  01FBB0  0EFE               	movlw	-2
 21180  01FBB2  6AE3               	clrf	plusw1,c
 21181  01FBB4  0EFF               	movlw	-1
 21182  01FBB6  6AE3               	clrf	plusw1,c
 21183                           
 21184                           ;mcc_generated_files/crc.c: 147:     while(crc)
 21185  01FBB8  D029               	goto	l12210
 21186  01FBBA                     l12202:
 21187                           
 21188                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 21189                           ;stkvar	_crc @ sp[(-4)+-2]
 21190  01FBBA  0EFA               	movlw	-6
 21191  01FBBC  A0E3               	btfss	plusw1,0,c
 21192  01FBBE  D01C               	goto	l12206
 21193                           
 21194                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 21195                           ;stkvar	_mask @ sp[(-4)+0]
 21196  01FBC0  0EFC               	movlw	-4
 21197  01FBC2  006F FF8C  F034    	movff	plusw1,btemp+10
 21198  01FBC8  0EFD               	movlw	-3
 21199  01FBCA  006F FF8C  F035    	movff	plusw1,btemp+11
 21200                           
 21201                           ;stkvar	_reverse @ sp[(-4)+2]
 21202  01FBD0  0EFE               	movlw	-2
 21203  01FBD2  006F FF8C  F02A    	movff	plusw1,btemp
 21204  01FBD8  5034               	movf	(btemp+10)^0,w,c
 21205  01FBDA  122A               	iorwf	btemp^0,f,c
 21206  01FBDC  0EFE               	movlw	-2
 21207  01FBDE  0060  F0AB  FFE3   	movff	btemp,plusw1
 21208  01FBE4  0EFF               	movlw	-1
 21209  01FBE6  006F FF8C  F02A    	movff	plusw1,btemp
 21210  01FBEC  5035               	movf	(btemp+11)^0,w,c
 21211  01FBEE  122A               	iorwf	btemp^0,f,c
 21212  01FBF0  0EFF               	movlw	-1
 21213  01FBF2  0060  F0AB  FFE3   	movff	btemp,plusw1
 21214  01FBF8                     l12206:
 21215                           
 21216                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 21217                           ;stkvar	_mask @ sp[(-4)+0]
 21218  01FBF8  90D8               	bcf	status,0,c
 21219  01FBFA  0EFD               	movlw	-3
 21220  01FBFC  32E3               	rrcf	plusw1,f,c
 21221  01FBFE  0EFC               	movlw	-4
 21222  01FC00  32E3               	rrcf	plusw1,f,c
 21223                           
 21224                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 21225                           ;stkvar	_crc @ sp[(-4)+-2]
 21226  01FC02  90D8               	bcf	status,0,c
 21227  01FC04  0EFB               	movlw	-5
 21228  01FC06  32E3               	rrcf	plusw1,f,c
 21229  01FC08  0EFA               	movlw	-6
 21230  01FC0A  32E3               	rrcf	plusw1,f,c
 21231  01FC0C                     l12210:
 21232                           
 21233                           ;mcc_generated_files/crc.c: 147:     while(crc)
 21234                           ;stkvar	_crc @ sp[(-4)+-2]
 21235  01FC0C  0EFA               	movlw	-6
 21236  01FC0E  006F FF8C  F02A    	movff	plusw1,btemp
 21237  01FC14  0EFB               	movlw	-5
 21238  01FC16  50E3               	movf	plusw1,w,c
 21239  01FC18  102A               	iorwf	btemp^0,w,c
 21240  01FC1A  A4D8               	btfss	status,2,c
 21241  01FC1C  D7CE               	goto	l12202
 21242                           
 21243                           ;mcc_generated_files/crc.c: 156:     return reverse;
 21244                           ;stkvar	_reverse @ sp[(-4)+2]
 21245  01FC1E  0EFE               	movlw	-2
 21246  01FC20  006F FF8C  F02A    	movff	plusw1,btemp
 21247  01FC26  0EFF               	movlw	-1
 21248  01FC28  006F FF8C  F02B    	movff	plusw1,btemp+1
 21249                           
 21250                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 21251  01FC2E  0EFA               	movlw	250
 21252  01FC30  26E1               	addwf	fsr1l,f,c
 21253  01FC32  0EFF               	movlw	255
 21254  01FC34  22E2               	addwfc	fsr1h,f,c
 21255  01FC36  0012               	return		;funcret
 21256  01FC38                     __end_of_CRC_ReverseValue:
 21257                           	opt callstack 0
 21258                           
 21259 ;; *************** function _CRC_8BitDataWrite *****************
 21260 ;; Defined at:
 21261 ;;		line 125 in file "mcc_generated_files/crc.c"
 21262 ;; Parameters:    Size  Location     Type
 21263 ;;  data            1  [STACK] unsigned char 
 21264 ;; Auto vars:     Size  Location     Type
 21265 ;;		None
 21266 ;; Return value:  Size  Location     Type
 21267 ;;                  1  [STACK] _Bool 
 21268 ;; Registers used:
 21269 ;;		fsr1l, fsr1h
 21270 ;; Tracked objects:
 21271 ;;		On entry : 0/5
 21272 ;;		On exit  : 3F/39
 21273 ;;		Unchanged: 0/0
 21274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21279 ;;Total ram usage:        0 bytes
 21280 ;; Hardware stack levels used:    1
 21281 ;; Hardware stack levels required when called:   15
 21282 ;; This function calls:
 21283 ;;		Nothing
 21284 ;; This function is called by:
 21285 ;;		_read_cal_data
 21286 ;;		_write_cal_data
 21287 ;; This function uses a reentrant model
 21288 ;;
 21289                           
 21290                           	psect	text62
 21291  00219C                     __ptext62:
 21292                           	opt callstack 0
 21293  00219C                     _CRC_8BitDataWrite:
 21294                           	opt callstack 14
 21295                           
 21296                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 21297                           
 21298                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21299                           ;incstack = 0
 21300  00219C  0139               	movlb	57	; () banked
 21301  00219E  B168               	btfsc	104,0,b	;volatile
 21302  0021A0  D004               	goto	l1271
 21303                           
 21304                           ; BSR set to: 57
 21305                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 21306                           ;stkvar	_data @ sp[(0)+-1]
 21307  0021A2  0EFF               	movlw	-1
 21308  0021A4  006F FF8F F960     	movff	plusw1,14688	;volatile
 21309  0021AA                     l1271:
 21310                           
 21311                           ; BSR set to: 57
 21312                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 21313  0021AA  52E5               	movf	postdec1,f,c
 21314  0021AC  0012               	return		;funcret
 21315  0021AE                     __end_of_CRC_8BitDataWrite:
 21316                           	opt callstack 0
 21317                           
 21318 ;; *************** function _start_adc_scan *****************
 21319 ;; Defined at:
 21320 ;;		line 70 in file "daq.c"
 21321 ;; Parameters:    Size  Location     Type
 21322 ;;		None
 21323 ;; Auto vars:     Size  Location     Type
 21324 ;;		None
 21325 ;; Return value:  Size  Location     Type
 21326 ;;                  1  [STACK] _Bool 
 21327 ;; Registers used:
 21328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 21329 ;; Tracked objects:
 21330 ;;		On entry : 0/0
 21331 ;;		On exit  : 0/0
 21332 ;;		Unchanged: 0/0
 21333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21338 ;;Total ram usage:        0 bytes
 21339 ;; Hardware stack levels used:    1
 21340 ;; Hardware stack levels required when called:   16
 21341 ;; This function calls:
 21342 ;;		_ADCC_DischargeSampleCapacitor
 21343 ;;		_ADCC_SetADIInterruptHandler
 21344 ;;		_ADCC_SetADTIInterruptHandler
 21345 ;;		_ADCC_StartConversion
 21346 ;; This function is called by:
 21347 ;;		_main
 21348 ;;		_current_sensor_cal
 21349 ;;		_update_adc_result
 21350 ;; This function uses a reentrant model
 21351 ;;
 21352                           
 21353                           	psect	text63
 21354  001016                     __ptext63:
 21355                           	opt callstack 0
 21356  001016                     _start_adc_scan:
 21357                           	opt callstack 14
 21358                           
 21359                           ;daq.c: 72:  if (R.done)
 21360                           
 21361                           ; BSR set to: 57
 21362                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21363                           ;incstack = 0
 21364  001016  0101               	movlb	1	; () banked
 21365  001018  513C               	movf	(_R+53)& (0+255),w,b	;volatile
 21366  00101A  A4D8               	btfss	status,2,c
 21367  00101C  0012               	return	
 21368                           
 21369                           ; BSR set to: 1
 21370                           ;daq.c: 75:  R.scan_index = 0;
 21371  00101E  6B39               	clrf	(_R+50)& (0+255),b	;volatile
 21372                           
 21373                           ; BSR set to: 1
 21374                           ;daq.c: 76:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 21375  001020  013A               	movlb	58	; () banked
 21376  001022  5140               	movf	64,w,b	;volatile
 21377  001024  006E F940  F02A    	movff	14928,btemp	;volatile
 21378  00102A  6A2B               	clrf	(btemp+1)^0,c
 21379  00102C  0060  F0A8  F02B   	movff	btemp,btemp+1
 21380  001032  6A2A               	clrf	btemp^0,c
 21381  001034  262A               	addwf	btemp^0,f,c
 21382  001036  0E00               	movlw	0
 21383  001038  222B               	addwfc	(btemp+1)^0,f,c
 21384  00103A  0E77               	movlw	119
 21385  00103C  142A               	andwf	btemp^0,w,c
 21386  00103E  0101               	movlb	1	; () banked
 21387  001040  6F3A               	movwf	(_R+51)& (0+255),b	;volatile
 21388  001042  0E3C               	movlw	60
 21389  001044  142B               	andwf	(btemp+1)^0,w,c
 21390  001046  6F3B               	movwf	(_R+52)& (0+255),b	;volatile
 21391                           
 21392                           ; BSR set to: 1
 21393                           ;daq.c: 77:  ADCC_SetADIInterruptHandler(adc_int_handler);
 21394  001048  0EE4               	movlw	low _adc_int_handler
 21395  00104A  6EE6               	movwf	postinc1,c
 21396  00104C  0E22               	movlw	high _adc_int_handler
 21397  00104E  6EE6               	movwf	postinc1,c
 21398  001050  0E00               	movlw	low (_adc_int_handler shr (0+16))
 21399  001052  6EE6               	movwf	postinc1,c
 21400  001054  EC07  F00F         	call	_ADCC_SetADIInterruptHandler	;wreg free
 21401                           
 21402                           ;daq.c: 78:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 21403  001058  0E6A               	movlw	low _adc_int_t_handler
 21404  00105A  6EE6               	movwf	postinc1,c
 21405  00105C  0E0A               	movlw	high _adc_int_t_handler
 21406  00105E  6EE6               	movwf	postinc1,c
 21407  001060  0E00               	movlw	low (_adc_int_t_handler shr (0+16))
 21408  001062  6EE6               	movwf	postinc1,c
 21409  001064  ECF3  F00E         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 21410                           
 21411                           ;daq.c: 79:  ADCC_DischargeSampleCapacitor();
 21412  001068  EC4D  F011         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 21413                           
 21414                           ; BSR set to: 62
 21415                           ;daq.c: 80:  ADCC_StartConversion(R.scan_index & 0xf);
 21416  00106C  0101               	movlb	1	; () banked
 21417  00106E  5139               	movf	(_R+50)& (0+255),w,b	;volatile
 21418  001070  0B0F               	andlw	15
 21419  001072  6EE6               	movwf	postinc1,c
 21420  001074  ECD7  F010         	call	_ADCC_StartConversion	;wreg free
 21421                           
 21422                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21423  001078  0012               	return		;funcret
 21424  00107A                     __end_of_start_adc_scan:
 21425                           	opt callstack 0
 21426                           
 21427 ;; *************** function _ADCC_StartConversion *****************
 21428 ;; Defined at:
 21429 ;;		line 128 in file "mcc_generated_files/adcc.c"
 21430 ;; Parameters:    Size  Location     Type
 21431 ;;  channel         1  [STACK] enum E16136
 21432 ;; Auto vars:     Size  Location     Type
 21433 ;;		None
 21434 ;; Return value:  Size  Location     Type
 21435 ;;                  1  [STACK] void 
 21436 ;; Registers used:
 21437 ;;		fsr1l, fsr1h
 21438 ;; Tracked objects:
 21439 ;;		On entry : 3F/1
 21440 ;;		On exit  : 3F/3E
 21441 ;;		Unchanged: 0/0
 21442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21447 ;;Total ram usage:        0 bytes
 21448 ;; Hardware stack levels used:    1
 21449 ;; Hardware stack levels required when called:   15
 21450 ;; This function calls:
 21451 ;;		Nothing
 21452 ;; This function is called by:
 21453 ;;		_start_adc_scan
 21454 ;;		_adc_int_t_handler
 21455 ;; This function uses a reentrant model
 21456 ;;
 21457                           
 21458                           	psect	text64
 21459  0021AE                     __ptext64:
 21460                           	opt callstack 0
 21461  0021AE                     _ADCC_StartConversion:
 21462                           	opt callstack 0
 21463                           
 21464                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 21465                           ;stkvar	_channel @ sp[(0)+-1]
 21466                           
 21467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21468                           ;incstack = 0
 21469 ;; hardware stack exceeded
 21470  0021AE  0EFF               	movlw	-1
 21471  0021B0  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 21472                           
 21473                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 21474  0021B6  013E               	movlb	62	; () banked
 21475  0021B8  8FF8               	bsf	248,7,b	;volatile
 21476                           
 21477                           ; BSR set to: 62
 21478                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 21479  0021BA  81F8               	bsf	248,0,b	;volatile
 21480                           
 21481                           ; BSR set to: 62
 21482                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 21483  0021BC  52E5               	movf	postdec1,f,c
 21484  0021BE  0012               	return		;funcret
 21485  0021C0                     __end_of_ADCC_StartConversion:
 21486                           	opt callstack 0
 21487                           
 21488 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 21489 ;; Defined at:
 21490 ;;		line 189 in file "mcc_generated_files/adcc.c"
 21491 ;; Parameters:    Size  Location     Type
 21492 ;;		None
 21493 ;; Auto vars:     Size  Location     Type
 21494 ;;		None
 21495 ;; Return value:  Size  Location     Type
 21496 ;;                  1  [STACK] void 
 21497 ;; Registers used:
 21498 ;;		wreg, status,2
 21499 ;; Tracked objects:
 21500 ;;		On entry : 0/1
 21501 ;;		On exit  : 3F/3E
 21502 ;;		Unchanged: 0/0
 21503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21508 ;;Total ram usage:        0 bytes
 21509 ;; Hardware stack levels used:    1
 21510 ;; Hardware stack levels required when called:   15
 21511 ;; This function calls:
 21512 ;;		Nothing
 21513 ;; This function is called by:
 21514 ;;		_start_adc_scan
 21515 ;;		_adc_int_t_handler
 21516 ;; This function uses a reentrant model
 21517 ;;
 21518                           
 21519                           	psect	text65
 21520  00229A                     __ptext65:
 21521                           	opt callstack 0
 21522  00229A                     _ADCC_DischargeSampleCapacitor:
 21523                           	opt callstack 0
 21524                           
 21525                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 21526                           
 21527                           ; BSR set to: 62
 21528                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21529                           ;incstack = 0
 21530 ;; hardware stack exceeded
 21531  00229A  0E3B               	movlw	59
 21532  00229C  013E               	movlb	62	; () banked
 21533  00229E  6FF1               	movwf	241,b	;volatile
 21534                           
 21535                           ; BSR set to: 62
 21536                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 21537  0022A0  0012               	return		;funcret
 21538  0022A2                     __end_of_ADCC_DischargeSampleCapacitor:
 21539                           	opt callstack 0
 21540                           
 21541 ;; *************** function _spinners *****************
 21542 ;; Defined at:
 21543 ;;		line 147 in file "mbmc.c"
 21544 ;; Parameters:    Size  Location     Type
 21545 ;;  shape           1  [STACK] unsigned char 
 21546 ;;  reset           1  [STACK] const unsigned char 
 21547 ;; Auto vars:     Size  Location     Type
 21548 ;;  c               1  [STACK] unsigned char 
 21549 ;; Return value:  Size  Location     Type
 21550 ;;                  1  [STACK] unsigned char 
 21551 ;; Registers used:
 21552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 21553 ;; Tracked objects:
 21554 ;;		On entry : 0/0
 21555 ;;		On exit  : 0/0
 21556 ;;		Unchanged: 0/0
 21557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21562 ;;Total ram usage:        0 bytes
 21563 ;; Hardware stack levels used:    1
 21564 ;; Hardware stack levels required when called:   16
 21565 ;; This function calls:
 21566 ;;		_strlen
 21567 ;; This function is called by:
 21568 ;;		_main
 21569 ;;		_current_sensor_cal
 21570 ;; This function uses a reentrant model
 21571 ;;
 21572                           
 21573                           	psect	text66
 21574  01F8DA                     __ptext66:
 21575                           	opt callstack 0
 21576  01F8DA                     _spinners:
 21577                           	opt callstack 0
 21578                           
 21579                           ; BSR set to: 62
 21580                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21581  01F8DA  52E6               	movf	postinc1,f,c
 21582                           
 21583                           ;mbmc.c: 147: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 148: {;mbmc.c: 1
      +                          49:  static uint8_t s[6];;mbmc.c: 150:  char c;;mbmc.c: 152:  if (shape > (6 - 1))
 21584                           ;stkvar	_shape @ sp[(-1)+-1]
 21585                           
 21586                           ;incstack = 0
 21587  01F8DC  0EFE               	movlw	-2
 21588  01F8DE  006F FF8C  F02A    	movff	plusw1,btemp
 21589  01F8E4  0E05               	movlw	5
 21590  01F8E6  642A               	cpfsgt	btemp^0,c
 21591  01F8E8  D002               	goto	l2173
 21592                           
 21593                           ;mbmc.c: 153:   shape = 0;
 21594                           ;stkvar	_shape @ sp[(-1)+-1]
 21595  01F8EA  0EFE               	movlw	-2
 21596  01F8EC  6AE3               	clrf	plusw1,c
 21597  01F8EE                     l2173:
 21598                           
 21599                           ;mbmc.c: 154:  if (reset)
 21600                           ;stkvar	_reset @ sp[(-1)+-2]
 21601  01F8EE  0EFD               	movlw	-3
 21602  01F8F0  50E3               	movf	plusw1,w,c
 21603  01F8F2  B4D8               	btfsc	status,2,c
 21604  01F8F4  D00A               	goto	l13346
 21605                           
 21606                           ;mbmc.c: 155:   s[shape] = 0;
 21607                           ;stkvar	_shape @ sp[(-1)+-1]
 21608  01F8F6  0EFE               	movlw	-2
 21609  01F8F8  006F FF8C  F035    	movff	plusw1,btemp+11
 21610  01F8FE  5035               	movf	(btemp+11)^0,w,c
 21611  01F900  0F6C               	addlw	low spinners@s
 21612  01F902  6ED9               	movwf	fsr2l,c
 21613  01F904  6ADA               	clrf	fsr2h,c
 21614  01F906  0E00               	movlw	0
 21615  01F908  6EDF               	movwf	indf2,c
 21616  01F90A                     l13346:
 21617                           
 21618                           ;mbmc.c: 156:  c = spin[shape][s[shape]];
 21619                           ;stkvar	_shape @ sp[(-1)+-1]
 21620  01F90A  0EFE               	movlw	-2
 21621  01F90C  50E3               	movf	plusw1,w,c
 21622  01F90E  0D14               	mullw	20
 21623  01F910  0EAF               	movlw	low _spin
 21624  01F912  6E34               	movwf	(btemp+10)^0,c
 21625  01F914  0EF9               	movlw	high _spin
 21626  01F916  6E35               	movwf	(btemp+11)^0,c
 21627  01F918  50F3               	movf	243,w,c
 21628  01F91A  2634               	addwf	(btemp+10)^0,f,c
 21629  01F91C  50F4               	movf	244,w,c
 21630  01F91E  2235               	addwfc	(btemp+11)^0,f,c
 21631                           
 21632                           ;stkvar	_shape @ sp[(-1)+-1]
 21633  01F920  0EFE               	movlw	-2
 21634  01F922  006F FF8C  F033    	movff	plusw1,btemp+9
 21635  01F928  5033               	movf	(btemp+9)^0,w,c
 21636  01F92A  0F6C               	addlw	low spinners@s
 21637  01F92C  6ED9               	movwf	fsr2l,c
 21638  01F92E  6ADA               	clrf	fsr2h,c
 21639  01F930  50DF               	movf	indf2,w,c
 21640  01F932  2634               	addwf	(btemp+10)^0,f,c
 21641  01F934  0E00               	movlw	0
 21642  01F936  2235               	addwfc	(btemp+11)^0,f,c
 21643  01F938  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 21644  01F93E  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 21645  01F944                     	if	0	;tblptru may be non-zero
 21646  01F944                     	endif
 21647  01F944                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21648  01F944  0E00               	movlw	low (__mediumconst shr (0+16))
 21649  01F946  6EF8               	movwf	tblptru,c
 21650  01F948                     	endif
 21651                           
 21652                           ;stkvar	_c @ sp[(-1)+0]
 21653  01F948  0008               	tblrd		*
 21654  01F94A  0EFF               	movlw	-1
 21655  01F94C  006F FFD7 FFE3     	movff	tablat,plusw1
 21656                           
 21657                           ;mbmc.c: 157:  if (++s[shape] >= strlen(spin[shape]))
 21658                           ;stkvar	_shape @ sp[(-1)+-1]
 21659  01F952  0EFE               	movlw	-2
 21660  01F954  50E3               	movf	plusw1,w,c
 21661  01F956  0D14               	mullw	20
 21662  01F958  0EAF               	movlw	low _spin
 21663  01F95A  6E34               	movwf	(btemp+10)^0,c
 21664  01F95C  0EF9               	movlw	high _spin
 21665  01F95E  6E35               	movwf	(btemp+11)^0,c
 21666  01F960  50F3               	movf	243,w,c
 21667  01F962  2634               	addwf	(btemp+10)^0,f,c
 21668  01F964  50F4               	movf	244,w,c
 21669  01F966  2235               	addwfc	(btemp+11)^0,f,c
 21670  01F968  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 21671  01F96E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 21672  01F974  EC5F  F002         	call	_strlen	;wreg free
 21673                           
 21674                           ;stkvar	_shape @ sp[(-1)+-1]
 21675  01F978  0EFE               	movlw	-2
 21676  01F97A  006F FF8C  F035    	movff	plusw1,btemp+11
 21677  01F980  5035               	movf	(btemp+11)^0,w,c
 21678  01F982  0F6C               	addlw	low spinners@s
 21679  01F984  6ED9               	movwf	fsr2l,c
 21680  01F986  6ADA               	clrf	fsr2h,c
 21681  01F988  2ADF               	incf	indf2,f,c
 21682  01F98A  50DF               	movf	indf2,w,c
 21683  01F98C  6E34               	movwf	(btemp+10)^0,c
 21684  01F98E  6A35               	clrf	(btemp+11)^0,c
 21685  01F990  502A               	movf	btemp^0,w,c
 21686  01F992  5C34               	subwf	(btemp+10)^0,w,c
 21687  01F994  502B               	movf	(btemp+1)^0,w,c
 21688  01F996  5835               	subwfb	(btemp+11)^0,w,c
 21689  01F998  A0D8               	btfss	status,0,c
 21690  01F99A  D00A               	goto	l13352
 21691                           
 21692                           ;mbmc.c: 158:   s[shape] = 0;
 21693                           ;stkvar	_shape @ sp[(-1)+-1]
 21694  01F99C  0EFE               	movlw	-2
 21695  01F99E  006F FF8C  F035    	movff	plusw1,btemp+11
 21696  01F9A4  5035               	movf	(btemp+11)^0,w,c
 21697  01F9A6  0F6C               	addlw	low spinners@s
 21698  01F9A8  6ED9               	movwf	fsr2l,c
 21699  01F9AA  6ADA               	clrf	fsr2h,c
 21700  01F9AC  0E00               	movlw	0
 21701  01F9AE  6EDF               	movwf	indf2,c
 21702  01F9B0                     l13352:
 21703                           
 21704                           ;mbmc.c: 159:  return c;
 21705                           ;stkvar	_c @ sp[(-1)+0]
 21706  01F9B0  0EFF               	movlw	-1
 21707  01F9B2  006F FF8C  F02A    	movff	plusw1,btemp
 21708                           
 21709                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 21710  01F9B8  52E5               	movf	postdec1,f,c
 21711  01F9BA  52E5               	movf	postdec1,f,c
 21712  01F9BC  52E5               	movf	postdec1,f,c
 21713  01F9BE  0012               	return		;funcret
 21714  01F9C0                     __end_of_spinners:
 21715                           	opt callstack 0
 21716                           
 21717 ;; *************** function _get_switch *****************
 21718 ;; Defined at:
 21719 ;;		line 18 in file "dio.c"
 21720 ;; Parameters:    Size  Location     Type
 21721 ;;  i               1  [STACK] const unsigned char 
 21722 ;; Auto vars:     Size  Location     Type
 21723 ;;		None
 21724 ;; Return value:  Size  Location     Type
 21725 ;;                  1  [STACK] enum E17187
 21726 ;; Registers used:
 21727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21728 ;; Tracked objects:
 21729 ;;		On entry : 0/0
 21730 ;;		On exit  : 0/0
 21731 ;;		Unchanged: 0/0
 21732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21737 ;;Total ram usage:        0 bytes
 21738 ;; Hardware stack levels used:    1
 21739 ;; Hardware stack levels required when called:   15
 21740 ;; This function calls:
 21741 ;;		Nothing
 21742 ;; This function is called by:
 21743 ;;		_main
 21744 ;;		_current_sensor_cal
 21745 ;;		_display_history
 21746 ;;		_hid_input
 21747 ;; This function uses a reentrant model
 21748 ;;
 21749                           
 21750                           	psect	text67
 21751  001BA6                     __ptext67:
 21752                           	opt callstack 0
 21753  001BA6                     _get_switch:
 21754                           	opt callstack 13
 21755                           
 21756                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 21757                           ;stkvar	_i @ sp[(0)+-1]
 21758                           
 21759                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21760                           ;incstack = 0
 21761  001BA6  0EFF               	movlw	-1
 21762  001BA8  006F FF8C  F02A    	movff	plusw1,btemp
 21763  001BAE  0E05               	movlw	5
 21764  001BB0  642A               	cpfsgt	btemp^0,c
 21765  001BB2  D002               	goto	l12796
 21766                           
 21767                           ;dio.c: 21:   return SW_OFF;
 21768  001BB4  0E00               	movlw	0
 21769  001BB6  D00A               	goto	L19
 21770  001BB8                     l12796:
 21771                           
 21772                           ;dio.c: 23:  return S.button[i].sw;
 21773                           ;stkvar	_i @ sp[(0)+-1]
 21774  001BB8  0EFF               	movlw	-1
 21775  001BBA  50E3               	movf	plusw1,w,c
 21776  001BBC  0D05               	mullw	5
 21777  001BBE  0EBB               	movlw	low _S
 21778  001BC0  24F3               	addwf	243,w,c
 21779  001BC2  6ED9               	movwf	fsr2l,c
 21780  001BC4  0E01               	movlw	high _S
 21781  001BC6  20F4               	addwfc	prodh,w,c
 21782  001BC8  6EDA               	movwf	fsr2h,c
 21783  001BCA  50DF               	movf	indf2,w,c
 21784  001BCC                     L19:
 21785  001BCC  6E2A               	movwf	btemp^0,c
 21786                           
 21787                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 21788  001BCE  52E5               	movf	postdec1,f,c
 21789  001BD0  0012               	return		;funcret
 21790  001BD2                     __end_of_get_switch:
 21791                           	opt callstack 0
 21792                           
 21793 ;; *************** function _clear_adc_scan *****************
 21794 ;; Defined at:
 21795 ;;		line 101 in file "daq.c"
 21796 ;; Parameters:    Size  Location     Type
 21797 ;;		None
 21798 ;; Auto vars:     Size  Location     Type
 21799 ;;		None
 21800 ;; Return value:  Size  Location     Type
 21801 ;;                  1  [STACK] void 
 21802 ;; Registers used:
 21803 ;;		None
 21804 ;; Tracked objects:
 21805 ;;		On entry : 0/0
 21806 ;;		On exit  : 3F/1
 21807 ;;		Unchanged: 0/0
 21808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21813 ;;Total ram usage:        0 bytes
 21814 ;; Hardware stack levels used:    1
 21815 ;; Hardware stack levels required when called:   15
 21816 ;; This function calls:
 21817 ;;		Nothing
 21818 ;; This function is called by:
 21819 ;;		_main
 21820 ;;		_current_sensor_cal
 21821 ;;		_update_adc_result
 21822 ;; This function uses a reentrant model
 21823 ;;
 21824                           
 21825                           	psect	text68
 21826  0022C0                     __ptext68:
 21827                           	opt callstack 0
 21828  0022C0                     _clear_adc_scan:
 21829                           	opt callstack 13
 21830                           
 21831                           ;daq.c: 103:  R.done = 0;
 21832                           
 21833                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21834                           ;incstack = 0
 21835  0022C0  0101               	movlb	1	; () banked
 21836  0022C2  6B3C               	clrf	(_R+53)& (0+255),b	;volatile
 21837                           
 21838                           ; BSR set to: 1
 21839                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21840  0022C4  0012               	return		;funcret
 21841  0022C6                     __end_of_clear_adc_scan:
 21842                           	opt callstack 0
 21843                           
 21844 ;; *************** function _cal_current_zero *****************
 21845 ;; Defined at:
 21846 ;;		line 327 in file "daq.c"
 21847 ;; Parameters:    Size  Location     Type
 21848 ;;  mode            1  [STACK] const _Bool 
 21849 ;;  cb              2  [STACK] const short 
 21850 ;;  cp              2  [STACK] const short 
 21851 ;; Auto vars:     Size  Location     Type
 21852 ;;		None
 21853 ;; Return value:  Size  Location     Type
 21854 ;;                  1  [STACK] _Bool 
 21855 ;; Registers used:
 21856 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21857 ;; Tracked objects:
 21858 ;;		On entry : 0/1
 21859 ;;		On exit  : 0/0
 21860 ;;		Unchanged: 0/0
 21861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21866 ;;Total ram usage:        0 bytes
 21867 ;; Hardware stack levels used:    1
 21868 ;; Hardware stack levels required when called:   16
 21869 ;; This function calls:
 21870 ;;		_check_range
 21871 ;; This function is called by:
 21872 ;;		_current_sensor_cal
 21873 ;; This function uses a reentrant model
 21874 ;;
 21875                           
 21876                           	psect	text69
 21877  000692                     __ptext69:
 21878                           	opt callstack 0
 21879  000692                     _cal_current_zero:
 21880                           	opt callstack 13
 21881                           
 21882                           ;daq.c: 327: _Bool cal_current_zero(const _Bool mode, const int16_t cb, const int16_t cp
      +                          );daq.c: 328: {;daq.c: 330:  if (!check_range(cb, 100, 4000))
 21883                           
 21884                           ; BSR set to: 1
 21885                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21886                           ;incstack = 0
 21887  000692  0EA0               	movlw	160
 21888  000694  6EE6               	movwf	postinc1,c
 21889  000696  0E0F               	movlw	15
 21890  000698  6EE6               	movwf	postinc1,c
 21891  00069A  0E64               	movlw	100
 21892  00069C  6EE6               	movwf	postinc1,c
 21893  00069E  0E00               	movlw	0
 21894  0006A0  6EE6               	movwf	postinc1,c
 21895                           
 21896                           ;stkvar	_cb @ sp[(-4)+-3]
 21897  0006A2  0EF9               	movlw	-7
 21898  0006A4  006F FF8F FFE6     	movff	plusw1,postinc1
 21899  0006AA  006F FF8F FFE6     	movff	plusw1,postinc1
 21900  0006B0  EC76  F005         	call	_check_range	;wreg free
 21901  0006B4  502A               	movf	btemp^0,w,c
 21902  0006B6  A4D8               	btfss	status,2,c
 21903  0006B8  D002               	goto	l13420
 21904  0006BA                     u12570:
 21905                           
 21906                           ;daq.c: 331:   return 0;
 21907  0006BA  0E00               	movlw	0
 21908  0006BC  D019               	goto	L20
 21909  0006BE                     l13420:
 21910                           
 21911                           ;daq.c: 333:  if (!check_range(cp, 100, 4000))
 21912  0006BE  0EA0               	movlw	160
 21913  0006C0  6EE6               	movwf	postinc1,c
 21914  0006C2  0E0F               	movlw	15
 21915  0006C4  6EE6               	movwf	postinc1,c
 21916  0006C6  0E64               	movlw	100
 21917  0006C8  6EE6               	movwf	postinc1,c
 21918  0006CA  0E00               	movlw	0
 21919  0006CC  6EE6               	movwf	postinc1,c
 21920                           
 21921                           ;stkvar	_cp @ sp[(-4)+-5]
 21922  0006CE  0EF7               	movlw	-9
 21923  0006D0  006F FF8F FFE6     	movff	plusw1,postinc1
 21924  0006D6  006F FF8F FFE6     	movff	plusw1,postinc1
 21925  0006DC  EC76  F005         	call	_check_range	;wreg free
 21926  0006E0  502A               	movf	btemp^0,w,c
 21927  0006E2  B4D8               	btfsc	status,2,c
 21928  0006E4  D7EA               	goto	u12570
 21929                           
 21930                           ;daq.c: 336:  if (!mode)
 21931                           ;stkvar	_mode @ sp[(0)+-1]
 21932  0006E6  0EFF               	movlw	-1
 21933  0006E8  50E3               	movf	plusw1,w,c
 21934  0006EA  A4D8               	btfss	status,2,c
 21935  0006EC  D003               	goto	l13432
 21936  0006EE                     u12590:
 21937                           
 21938                           ;daq.c: 337:   return 1;
 21939  0006EE  0E01               	movlw	1
 21940  0006F0                     L20:
 21941  0006F0  6E2A               	movwf	btemp^0,c
 21942  0006F2  D013               	goto	l2051
 21943  0006F4                     l13432:
 21944                           
 21945                           ;daq.c: 339:  R.n_offset[0] = cb;
 21946                           ;stkvar	_cb @ sp[(0)+-3]
 21947  0006F4  0EFD               	movlw	-3
 21948  0006F6  006F FF8C  F12D    	movff	plusw1,_R+38	;volatile
 21949  0006FC  0EFE               	movlw	-2
 21950  0006FE  006F FF8C  F12E    	movff	plusw1,_R+39	;volatile
 21951                           
 21952                           ;daq.c: 340:  R.n_offset[1] = cp;
 21953                           ;stkvar	_cp @ sp[(0)+-5]
 21954  000704  0EFB               	movlw	-5
 21955  000706  006F FF8C  F12F    	movff	plusw1,_R+40	;volatile
 21956  00070C  0EFC               	movlw	-4
 21957  00070E  006F FF8C  F130    	movff	plusw1,_R+41	;volatile
 21958                           
 21959                           ;daq.c: 341:  R.c_zero_cal = 1;
 21960  000714  0101               	movlb	1	; () banked
 21961  000716  83AE               	bsf	(_R+167)& (0+255),1,b	;volatile
 21962  000718  D7EA               	goto	u12590
 21963  00071A                     l2051:
 21964                           
 21965                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 21966  00071A  0EFB               	movlw	251
 21967  00071C  26E1               	addwf	fsr1l,f,c
 21968  00071E  0EFF               	movlw	255
 21969  000720  22E2               	addwfc	fsr1h,f,c
 21970  000722  0012               	return		;funcret
 21971  000724                     __end_of_cal_current_zero:
 21972                           	opt callstack 0
 21973                           
 21974 ;; *************** function _check_range *****************
 21975 ;; Defined at:
 21976 ;;		line 315 in file "daq.c"
 21977 ;; Parameters:    Size  Location     Type
 21978 ;;  value           2  [STACK] const short 
 21979 ;;  window          2  [STACK] const short 
 21980 ;;  standard        2  [STACK] const short 
 21981 ;; Auto vars:     Size  Location     Type
 21982 ;;		None
 21983 ;; Return value:  Size  Location     Type
 21984 ;;                  1  [STACK] _Bool 
 21985 ;; Registers used:
 21986 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21987 ;; Tracked objects:
 21988 ;;		On entry : 0/1
 21989 ;;		On exit  : 0/0
 21990 ;;		Unchanged: 0/0
 21991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21996 ;;Total ram usage:        0 bytes
 21997 ;; Hardware stack levels used:    1
 21998 ;; Hardware stack levels required when called:   15
 21999 ;; This function calls:
 22000 ;;		Nothing
 22001 ;; This function is called by:
 22002 ;;		_cal_current_zero
 22003 ;; This function uses a reentrant model
 22004 ;;
 22005                           
 22006                           	psect	text70
 22007  000AEC                     __ptext70:
 22008                           	opt callstack 0
 22009  000AEC                     _check_range:
 22010                           	opt callstack 13
 22011                           
 22012                           ;daq.c: 315: static _Bool check_range(const int16_t value, const int16_t window, const i
      +                          nt16_t standard);daq.c: 316: {;daq.c: 317:  if (value > (standard + window))
 22013                           ;stkvar	_value @ sp[(0)+-2]
 22014                           ;stkvar	_window @ sp[(0)+-4]
 22015                           ;stkvar	_standard @ sp[(0)+-6]
 22016                           
 22017                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22018                           ;incstack = 0
 22019  000AEC  0EFA               	movlw	-6
 22020  000AEE  006F FF8C  F034    	movff	plusw1,btemp+10
 22021  000AF4  0EFB               	movlw	-5
 22022  000AF6  006F FF8C  F035    	movff	plusw1,btemp+11
 22023  000AFC  0EFC               	movlw	-4
 22024  000AFE  50E3               	movf	plusw1,w,c
 22025  000B00  2634               	addwf	(btemp+10)^0,f,c
 22026  000B02  0EFD               	movlw	-3
 22027  000B04  50E3               	movf	plusw1,w,c
 22028  000B06  2235               	addwfc	(btemp+11)^0,f,c
 22029  000B08  0EFE               	movlw	-2
 22030  000B0A  50E3               	movf	plusw1,w,c
 22031  000B0C  5C34               	subwf	(btemp+10)^0,w,c
 22032  000B0E  5035               	movf	(btemp+11)^0,w,c
 22033  000B10  0A80               	xorlw	128
 22034  000B12  6E2A               	movwf	btemp^0,c
 22035  000B14  0EFF               	movlw	-1
 22036  000B16  50E3               	movf	plusw1,w,c
 22037  000B18  0A80               	xorlw	128
 22038  000B1A  582A               	subwfb	btemp^0,w,c
 22039  000B1C  B0D8               	btfsc	status,0,c
 22040  000B1E  D002               	goto	l12854
 22041  000B20                     u12300:
 22042                           
 22043                           ;daq.c: 318:   return 0;
 22044  000B20  0E00               	movlw	0
 22045  000B22  D01E               	goto	L21
 22046  000B24                     l12854:
 22047                           
 22048                           ;daq.c: 319:  if (value < (standard - window))
 22049                           ;stkvar	_window @ sp[(0)+-4]
 22050                           ;stkvar	_standard @ sp[(0)+-6]
 22051  000B24  0EFA               	movlw	-6
 22052  000B26  006F FF8C  F034    	movff	plusw1,btemp+10
 22053  000B2C  0EFB               	movlw	-5
 22054  000B2E  006F FF8C  F035    	movff	plusw1,btemp+11
 22055  000B34  0EFC               	movlw	-4
 22056  000B36  50E3               	movf	plusw1,w,c
 22057  000B38  5E34               	subwf	(btemp+10)^0,f,c
 22058  000B3A  0EFD               	movlw	-3
 22059  000B3C  50E3               	movf	plusw1,w,c
 22060  000B3E  5A35               	subwfb	(btemp+11)^0,f,c
 22061                           
 22062                           ;stkvar	_value @ sp[(0)+-2]
 22063  000B40  0EFE               	movlw	-2
 22064  000B42  006F FF8C  F02A    	movff	plusw1,btemp
 22065  000B48  5034               	movf	(btemp+10)^0,w,c
 22066  000B4A  5C2A               	subwf	btemp^0,w,c
 22067  000B4C  0EFF               	movlw	-1
 22068  000B4E  50E3               	movf	plusw1,w,c
 22069  000B50  0A80               	xorlw	128
 22070  000B52  6E2A               	movwf	btemp^0,c
 22071  000B54  5035               	movf	(btemp+11)^0,w,c
 22072  000B56  0A80               	xorlw	128
 22073  000B58  582A               	subwfb	btemp^0,w,c
 22074  000B5A  A0D8               	btfss	status,0,c
 22075  000B5C  D7E1               	goto	u12300
 22076                           
 22077                           ;daq.c: 321:  return 1;
 22078  000B5E  0E01               	movlw	1
 22079  000B60                     L21:
 22080  000B60  6E2A               	movwf	btemp^0,c
 22081                           
 22082                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 22083  000B62  0EFA               	movlw	250
 22084  000B64  26E1               	addwf	fsr1l,f,c
 22085  000B66  0EFF               	movlw	255
 22086  000B68  22E2               	addwfc	fsr1h,f,c
 22087  000B6A  0012               	return		;funcret
 22088  000B6C                     __end_of_check_range:
 22089                           	opt callstack 0
 22090                           
 22091 ;; *************** function _convert_adc_data *****************
 22092 ;; Defined at:
 22093 ;;		line 51 in file "mbmc.c"
 22094 ;; Parameters:    Size  Location     Type
 22095 ;;		None
 22096 ;; Auto vars:     Size  Location     Type
 22097 ;;  i               1  [STACK] unsigned char 
 22098 ;; Return value:  Size  Location     Type
 22099 ;;                  1  [STACK] void 
 22100 ;; Registers used:
 22101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22102 ;; Tracked objects:
 22103 ;;		On entry : 0/2
 22104 ;;		On exit  : 0/0
 22105 ;;		Unchanged: 0/0
 22106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22111 ;;Total ram usage:        0 bytes
 22112 ;; Hardware stack levels used:    1
 22113 ;; Hardware stack levels required when called:   18
 22114 ;; This function calls:
 22115 ;;		_conv_raw_result
 22116 ;;		_lp_filter
 22117 ;; This function is called by:
 22118 ;;		_main
 22119 ;; This function uses a reentrant model
 22120 ;;
 22121                           
 22122                           	psect	text71
 22123  01FE72                     __ptext71:
 22124                           	opt callstack 0
 22125  01FE72                     _convert_adc_data:
 22126                           	opt callstack 0
 22127                           
 22128                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22129  01FE72  52E6               	movf	postinc1,f,c
 22130                           
 22131                           ;mbmc.c: 53:  uint8_t i = 0;
 22132                           ;stkvar	_i @ sp[(-1)+0]
 22133                           
 22134                           ;incstack = 0
 22135  01FE74  0EFF               	movlw	-1
 22136  01FE76  6AE3               	clrf	plusw1,c
 22137  01FE78                     l14288:
 22138                           
 22139                           ;mbmc.c: 56:   if (V.calib) {
 22140  01FE78  0102               	movlb	2	; () banked
 22141  01FE7A  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 22142  01FE7C  B4D8               	btfsc	status,2,c
 22143  01FE7E  D01B               	goto	l14292
 22144                           
 22145                           ; BSR set to: 2
 22146                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 22147  01FE80  0E01               	movlw	1
 22148  01FE82  6EE6               	movwf	postinc1,c
 22149                           
 22150                           ;stkvar	_i @ sp[(-2)+0]
 22151  01FE84  0EFE               	movlw	-2
 22152  01FE86  50E3               	movf	plusw1,w,c
 22153  01FE88  6EE6               	movwf	postinc1,c
 22154  01FE8A  0E01               	movlw	1
 22155  01FE8C  6EE6               	movwf	postinc1,c
 22156                           
 22157                           ;stkvar	_i @ sp[(-4)+0]
 22158  01FE8E  0EFC               	movlw	-4
 22159  01FE90  50E3               	movf	plusw1,w,c
 22160  01FE92  6EE6               	movwf	postinc1,c
 22161  01FE94  EC5B  F0C2         	call	_conv_raw_result	;wreg free
 22162  01FE98  0060  F0AB  FFE6   	movff	btemp,postinc1
 22163  01FE9E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22164  01FEA4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 22165  01FEAA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 22166  01FEB0  EC29  F0E9         	call	_lp_filter	;wreg free
 22167  01FEB4  D01A               	goto	L22
 22168  01FEB6                     l14292:
 22169                           
 22170                           ; BSR set to: 2
 22171                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 22172  01FEB6  0E00               	movlw	0
 22173  01FEB8  6EE6               	movwf	postinc1,c
 22174                           
 22175                           ;stkvar	_i @ sp[(-2)+0]
 22176  01FEBA  0EFE               	movlw	-2
 22177  01FEBC  50E3               	movf	plusw1,w,c
 22178  01FEBE  6EE6               	movwf	postinc1,c
 22179  01FEC0  0E00               	movlw	0
 22180  01FEC2  6EE6               	movwf	postinc1,c
 22181                           
 22182                           ;stkvar	_i @ sp[(-4)+0]
 22183  01FEC4  0EFC               	movlw	-4
 22184  01FEC6  50E3               	movf	plusw1,w,c
 22185  01FEC8  6EE6               	movwf	postinc1,c
 22186  01FECA  EC5B  F0C2         	call	_conv_raw_result	;wreg free
 22187  01FECE  0060  F0AB  FFE6   	movff	btemp,postinc1
 22188  01FED4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22189  01FEDA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 22190  01FEE0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 22191  01FEE6  EC29  F0E9         	call	_lp_filter	;wreg free
 22192  01FEEA                     L22:
 22193                           
 22194                           ;stkvar	_i @ sp[(-1)+0]
 22195  01FEEA  0EFF               	movlw	-1
 22196  01FEEC  50E3               	movf	plusw1,w,c
 22197  01FEEE  0D04               	mullw	4
 22198  01FEF0  0EFF               	movlw	low _C
 22199  01FEF2  24F3               	addwf	243,w,c
 22200  01FEF4  6ED9               	movwf	fsr2l,c
 22201  01FEF6  0E08               	movlw	high _C
 22202  01FEF8  20F4               	addwfc	prodh,w,c
 22203  01FEFA  6EDA               	movwf	fsr2h,c
 22204  01FEFC  0060  F0AB  FFDE   	movff	btemp,postinc2
 22205  01FF02  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 22206  01FF08  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 22207  01FF0E  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 22208                           
 22209                           ;mbmc.c: 61:  } while (++i < 16);
 22210                           ;stkvar	_i @ sp[(-1)+0]
 22211  01FF14  0EFF               	movlw	-1
 22212  01FF16  2AE3               	incf	plusw1,f,c
 22213  01FF18  0EFF               	movlw	-1
 22214  01FF1A  006F FF8C  F02A    	movff	plusw1,btemp
 22215  01FF20  0E0F               	movlw	15
 22216  01FF22  642A               	cpfsgt	btemp^0,c
 22217  01FF24  D7A9               	goto	l14288
 22218                           
 22219                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22220  01FF26  52E5               	movf	postdec1,f,c
 22221  01FF28  0012               	return		;funcret
 22222  01FF2A                     __end_of_convert_adc_data:
 22223                           	opt callstack 0
 22224                           
 22225 ;; *************** function _clear_hid_pflags *****************
 22226 ;; Defined at:
 22227 ;;		line 67 in file "hid.c"
 22228 ;; Parameters:    Size  Location     Type
 22229 ;;  h               2  [STACK] PTR struct H_data
 22230 ;;		 -> H(9), 
 22231 ;; Auto vars:     Size  Location     Type
 22232 ;;		None
 22233 ;; Return value:  Size  Location     Type
 22234 ;;                  1  [STACK] void 
 22235 ;; Registers used:
 22236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 22237 ;; Tracked objects:
 22238 ;;		On entry : 3E/0
 22239 ;;		On exit  : 0/0
 22240 ;;		Unchanged: 0/0
 22241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22246 ;;Total ram usage:        0 bytes
 22247 ;; Hardware stack levels used:    1
 22248 ;; Hardware stack levels required when called:   15
 22249 ;; This function calls:
 22250 ;;		Nothing
 22251 ;; This function is called by:
 22252 ;;		_main
 22253 ;; This function uses a reentrant model
 22254 ;;
 22255                           
 22256                           	psect	text72
 22257  000EE6                     __ptext72:
 22258                           	opt callstack 0
 22259  000EE6                     _clear_hid_pflags:
 22260                           	opt callstack 15
 22261                           
 22262                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 22263                           ;stkvar	_h @ sp[(0)+-2]
 22264                           
 22265                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22266                           ;incstack = 0
 22267  000EE6  0EFE               	movlw	-2
 22268  000EE8  006F FF8C  F034    	movff	plusw1,btemp+10
 22269  000EEE  0EFF               	movlw	-1
 22270  000EF0  006F FF8C  F035    	movff	plusw1,btemp+11
 22271  000EF6  0E03               	movlw	3
 22272  000EF8  2434               	addwf	(btemp+10)^0,w,c
 22273  000EFA  6ED9               	movwf	fsr2l,c
 22274  000EFC  0E00               	movlw	0
 22275  000EFE  2035               	addwfc	(btemp+11)^0,w,c
 22276  000F00  6EDA               	movwf	fsr2h,c
 22277  000F02  0E00               	movlw	0
 22278  000F04  6EDF               	movwf	indf2,c
 22279                           
 22280                           ;hid.c: 70:  h->enter_p = SW_OFF;
 22281                           ;stkvar	_h @ sp[(0)+-2]
 22282  000F06  0EFE               	movlw	-2
 22283  000F08  006F FF8C  F034    	movff	plusw1,btemp+10
 22284  000F0E  0EFF               	movlw	-1
 22285  000F10  006F FF8C  F035    	movff	plusw1,btemp+11
 22286  000F16  0E05               	movlw	5
 22287  000F18  2434               	addwf	(btemp+10)^0,w,c
 22288  000F1A  6ED9               	movwf	fsr2l,c
 22289  000F1C  0E00               	movlw	0
 22290  000F1E  2035               	addwfc	(btemp+11)^0,w,c
 22291  000F20  6EDA               	movwf	fsr2h,c
 22292  000F22  0E00               	movlw	0
 22293  000F24  6EDF               	movwf	indf2,c
 22294                           
 22295                           ;hid.c: 71:  h->calib_p = SW_OFF;
 22296                           ;stkvar	_h @ sp[(0)+-2]
 22297  000F26  0EFE               	movlw	-2
 22298  000F28  006F FF8C  F034    	movff	plusw1,btemp+10
 22299  000F2E  0EFF               	movlw	-1
 22300  000F30  006F FF8C  F035    	movff	plusw1,btemp+11
 22301  000F36  0E07               	movlw	7
 22302  000F38  2434               	addwf	(btemp+10)^0,w,c
 22303  000F3A  6ED9               	movwf	fsr2l,c
 22304  000F3C  0E00               	movlw	0
 22305  000F3E  2035               	addwfc	(btemp+11)^0,w,c
 22306  000F40  6EDA               	movwf	fsr2h,c
 22307  000F42  0E00               	movlw	0
 22308  000F44  6EDF               	movwf	indf2,c
 22309                           
 22310                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 22311  000F46  52E5               	movf	postdec1,f,c
 22312  000F48  52E5               	movf	postdec1,f,c
 22313  000F4A  0012               	return		;funcret
 22314  000F4C                     __end_of_clear_hid_pflags:
 22315                           	opt callstack 0
 22316                           
 22317 ;; *************** function _check_help *****************
 22318 ;; Defined at:
 22319 ;;		line 40 in file "mconfig.c"
 22320 ;; Parameters:    Size  Location     Type
 22321 ;;  flipper         1  [STACK] const _Bool 
 22322 ;; Auto vars:     Size  Location     Type
 22323 ;;  estatus         1    0        _Bool 
 22324 ;; Return value:  Size  Location     Type
 22325 ;;                  1  [STACK] _Bool 
 22326 ;; Registers used:
 22327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 22328 ;; Tracked objects:
 22329 ;;		On entry : 3F/2
 22330 ;;		On exit  : 0/0
 22331 ;;		Unchanged: 0/0
 22332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22337 ;;Total ram usage:        0 bytes
 22338 ;; Hardware stack levels used:    1
 22339 ;; Hardware stack levels required when called:   28
 22340 ;; This function calls:
 22341 ;;		_StartTimer
 22342 ;;		_TimerDone
 22343 ;;		_display_help
 22344 ;;		_display_info
 22345 ;;		_get_vterm_ptr
 22346 ;;		_help_button
 22347 ;;		_mode_lamp_bright
 22348 ;;		_mode_lamp_dim
 22349 ;;		_set_display_info
 22350 ;;		_set_temp_display_help
 22351 ;;		_set_vterm
 22352 ;;		_sprintf
 22353 ;;		_update_lcd
 22354 ;;		_vterm_dump
 22355 ;; This function is called by:
 22356 ;;		_main
 22357 ;; This function uses a reentrant model
 22358 ;;
 22359                           
 22360                           	psect	text73
 22361  01CAB4                     __ptext73:
 22362                           	opt callstack 0
 22363  01CAB4                     _check_help:
 22364                           	opt callstack 2
 22365                           
 22366                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 22367                           
 22368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22369                           ;incstack = 0
 22370  01CAB4  EC88  F00C         	call	_help_button	;wreg free
 22371  01CAB8  502A               	movf	btemp^0,w,c
 22372  01CABA  B4D8               	btfsc	status,2,c
 22373  01CABC  D0D0               	goto	l17006
 22374  01CABE  EC51  F011         	call	_display_info	;wreg free
 22375  01CAC2  042A               	decf	btemp^0,w,c
 22376  01CAC4  B4D8               	btfsc	status,2,c
 22377  01CAC6  D0CB               	goto	l17006
 22378                           
 22379                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 22380  01CAC8  0EDC               	movlw	220
 22381  01CACA  6EE6               	movwf	postinc1,c
 22382  01CACC  0E05               	movlw	5
 22383  01CACE  6EE6               	movwf	postinc1,c
 22384  01CAD0  0E0B               	movlw	11
 22385  01CAD2  6EE6               	movwf	postinc1,c
 22386  01CAD4  ECCE  F00B         	call	_StartTimer	;wreg free
 22387                           
 22388                           ;mconfig.c: 48:   if (V.debug)
 22389  01CAD8  0102               	movlb	2	; () banked
 22390  01CADA  B398               	btfsc	(_V+152)& (0+255),1,b	;volatile
 22391                           
 22392                           ; BSR set to: 2
 22393                           ;mconfig.c: 49:    vterm_dump();
 22394  01CADC  EC6E  F0EC         	call	_vterm_dump	;wreg free
 22395                           
 22396                           ;mconfig.c: 51:   set_vterm(1);
 22397  01CAE0  0E01               	movlw	1
 22398  01CAE2  6EE6               	movwf	postinc1,c
 22399  01CAE4  EC46  F010         	call	_set_vterm	;wreg free
 22400                           
 22401                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 22402  01CAE8  EC51  F011         	call	_display_info	;wreg free
 22403  01CAEC  502A               	movf	btemp^0,w,c
 22404  01CAEE  6EE6               	movwf	postinc1,c
 22405  01CAF0  ECF8  F010         	call	_set_temp_display_help	;wreg free
 22406                           
 22407                           ; BSR set to: 2
 22408                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 22409  01CAF4  0E01               	movlw	1
 22410  01CAF6  6EE6               	movwf	postinc1,c
 22411  01CAF8  EC55  F010         	call	_set_display_info	;wreg free
 22412                           
 22413                           ;mconfig.c: 54:   if (flipper) {
 22414                           ;stkvar	_flipper @ sp[(0)+-1]
 22415  01CAFC  0EFF               	movlw	-1
 22416  01CAFE  50E3               	movf	plusw1,w,c
 22417  01CB00  B4D8               	btfsc	status,2,c
 22418  01CB02  D019               	goto	l16992
 22419                           
 22420                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 22421  01CB04  0EB2               	movlw	low STR_70
 22422  01CB06  6EE6               	movwf	postinc1,c
 22423  01CB08  0EFF               	movlw	high STR_70
 22424  01CB0A  6EE6               	movwf	postinc1,c
 22425  01CB0C  0E5C               	movlw	low STR_72
 22426  01CB0E  6EE6               	movwf	postinc1,c
 22427  01CB10  0EFF               	movlw	high STR_72
 22428  01CB12  6EE6               	movwf	postinc1,c
 22429  01CB14  0E01               	movlw	1
 22430  01CB16  6EE6               	movwf	postinc1,c
 22431  01CB18  0E00               	movlw	0
 22432  01CB1A  6EE6               	movwf	postinc1,c
 22433  01CB1C  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 22434  01CB20  0060  F0AB  FFE6   	movff	btemp,postinc1
 22435  01CB26  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22436  01CB2C  0E06               	movlw	6
 22437  01CB2E  6EE6               	movwf	postinc1,c
 22438  01CB30  EC8D  F0F9         	call	_sprintf	;wreg free
 22439                           
 22440                           ;mconfig.c: 56:   } else {
 22441  01CB34  D018               	goto	l1822
 22442  01CB36                     l16992:
 22443                           
 22444                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 22445  01CB36  0EC8               	movlw	low STR_71
 22446  01CB38  6EE6               	movwf	postinc1,c
 22447  01CB3A  0EFF               	movlw	high STR_71
 22448  01CB3C  6EE6               	movwf	postinc1,c
 22449  01CB3E  0E5C               	movlw	low STR_72
 22450  01CB40  6EE6               	movwf	postinc1,c
 22451  01CB42  0EFF               	movlw	high STR_72
 22452  01CB44  6EE6               	movwf	postinc1,c
 22453  01CB46  0E01               	movlw	1
 22454  01CB48  6EE6               	movwf	postinc1,c
 22455  01CB4A  0E00               	movlw	0
 22456  01CB4C  6EE6               	movwf	postinc1,c
 22457  01CB4E  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 22458  01CB52  0060  F0AB  FFE6   	movff	btemp,postinc1
 22459  01CB58  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22460  01CB5E  0E06               	movlw	6
 22461  01CB60  6EE6               	movwf	postinc1,c
 22462  01CB62  EC8D  F0F9         	call	_sprintf	;wreg free
 22463  01CB66                     l1822:
 22464                           
 22465                           ; BSR set to: 0
 22466                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 22467  01CB66  0102               	movlb	2	; () banked
 22468  01CB68  3998               	swapf	(_V+152)& (0+255),w,b	;volatile
 22469  01CB6A  32E8               	rrcf	wreg,f,c
 22470  01CB6C  32E8               	rrcf	wreg,f,c
 22471  01CB6E  0B03               	andlw	3
 22472  01CB70  0D2C               	mullw	44
 22473  01CB72  0E16               	movlw	22
 22474  01CB74  26F3               	addwf	243,f,c
 22475  01CB76  0E00               	movlw	0
 22476  01CB78  22F4               	addwfc	244,f,c
 22477  01CB7A  0EFF               	movlw	low _T
 22478  01CB7C  6E34               	movwf	(btemp+10)^0,c
 22479  01CB7E  0EF8               	movlw	high _T
 22480  01CB80  6E35               	movwf	(btemp+11)^0,c
 22481  01CB82  50F3               	movf	243,w,c
 22482  01CB84  2634               	addwf	(btemp+10)^0,f,c
 22483  01CB86  50F4               	movf	244,w,c
 22484  01CB88  2235               	addwfc	(btemp+11)^0,f,c
 22485  01CB8A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 22486  01CB90  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 22487  01CB96  0EBE               	movlw	low STR_74
 22488  01CB98  6EE6               	movwf	postinc1,c
 22489  01CB9A  0EFF               	movlw	high STR_74
 22490  01CB9C  6EE6               	movwf	postinc1,c
 22491  01CB9E  0E01               	movlw	1
 22492  01CBA0  6EE6               	movwf	postinc1,c
 22493  01CBA2  0E01               	movlw	1
 22494  01CBA4  6EE6               	movwf	postinc1,c
 22495  01CBA6  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 22496  01CBAA  0060  F0AB  FFE6   	movff	btemp,postinc1
 22497  01CBB0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22498  01CBB6  0E06               	movlw	6
 22499  01CBB8  6EE6               	movwf	postinc1,c
 22500  01CBBA  EC8D  F0F9         	call	_sprintf	;wreg free
 22501                           
 22502                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 22503  01CBBE  0102               	movlb	2	; () banked
 22504  01CBC0  3998               	swapf	(_V+152)& (0+255),w,b	;volatile
 22505  01CBC2  32E8               	rrcf	wreg,f,c
 22506  01CBC4  32E8               	rrcf	wreg,f,c
 22507  01CBC6  0B03               	andlw	3
 22508  01CBC8  0D2C               	mullw	44
 22509  01CBCA  0EFF               	movlw	low _T
 22510  01CBCC  6E34               	movwf	(btemp+10)^0,c
 22511  01CBCE  0EF8               	movlw	high _T
 22512  01CBD0  6E35               	movwf	(btemp+11)^0,c
 22513  01CBD2  50F3               	movf	243,w,c
 22514  01CBD4  2634               	addwf	(btemp+10)^0,f,c
 22515  01CBD6  50F4               	movf	244,w,c
 22516  01CBD8  2235               	addwfc	(btemp+11)^0,f,c
 22517  01CBDA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 22518  01CBE0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 22519  01CBE6  0EBE               	movlw	low STR_74
 22520  01CBE8  6EE6               	movwf	postinc1,c
 22521  01CBEA  0EFF               	movlw	high STR_74
 22522  01CBEC  6EE6               	movwf	postinc1,c
 22523  01CBEE  0E01               	movlw	1
 22524  01CBF0  6EE6               	movwf	postinc1,c
 22525  01CBF2  0E02               	movlw	2
 22526  01CBF4  6EE6               	movwf	postinc1,c
 22527  01CBF6  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 22528  01CBFA  0060  F0AB  FFE6   	movff	btemp,postinc1
 22529  01CC00  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22530  01CC06  0E06               	movlw	6
 22531  01CC08  6EE6               	movwf	postinc1,c
 22532  01CC0A  EC8D  F0F9         	call	_sprintf	;wreg free
 22533                           
 22534                           ; BSR set to: 0
 22535                           ;mconfig.c: 61:   V.help_id++;
 22536  01CC0E  EE20  F298         	lfsr	2,_V+152	;volatile
 22537  01CC12  38DF               	swapf	223,w,c
 22538  01CC14  6E35               	movwf	(btemp+11)^0,c
 22539  01CC16  3235               	rrcf	(btemp+11)^0,f,c
 22540  01CC18  3035               	rrcf	(btemp+11)^0,w,c
 22541  01CC1A  0B03               	andlw	3
 22542  01CC1C  6E35               	movwf	(btemp+11)^0,c
 22543  01CC1E  2A35               	incf	(btemp+11)^0,f,c
 22544  01CC20  3A35               	swapf	(btemp+11)^0,f,c
 22545  01CC22  3635               	rlcf	(btemp+11)^0,f,c
 22546  01CC24  3635               	rlcf	(btemp+11)^0,f,c
 22547  01CC26  50DF               	movf	223,w,c
 22548  01CC28  1835               	xorwf	(btemp+11)^0,w,c
 22549  01CC2A  0B3F               	andlw	-193
 22550  01CC2C  1835               	xorwf	(btemp+11)^0,w,c
 22551  01CC2E  6EDF               	movwf	223,c
 22552                           
 22553                           ; BSR set to: 0
 22554                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 22555  01CC30  0EB8               	movlw	184
 22556  01CC32  6EE6               	movwf	postinc1,c
 22557  01CC34  0E0B               	movlw	11
 22558  01CC36  6EE6               	movwf	postinc1,c
 22559  01CC38  0E09               	movlw	9
 22560  01CC3A  6EE6               	movwf	postinc1,c
 22561  01CC3C  ECCE  F00B         	call	_StartTimer	;wreg free
 22562                           
 22563                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 22564  01CC40  0EB8               	movlw	184
 22565  01CC42  6EE6               	movwf	postinc1,c
 22566  01CC44  0E0B               	movlw	11
 22567  01CC46  6EE6               	movwf	postinc1,c
 22568  01CC48  0E07               	movlw	7
 22569  01CC4A  6EE6               	movwf	postinc1,c
 22570  01CC4C  ECCE  F00B         	call	_StartTimer	;wreg free
 22571                           
 22572                           ;mconfig.c: 64:   mode_lamp_bright();
 22573  01CC50  EC0F  F011         	call	_mode_lamp_bright	;wreg free
 22574                           
 22575                           ;mconfig.c: 65:   update_lcd(1);
 22576  01CC54  0E01               	movlw	1
 22577  01CC56  6EE6               	movwf	postinc1,c
 22578  01CC58  EC3F  F0F2         	call	_update_lcd	;wreg free
 22579                           
 22580                           ;mconfig.c: 67:  } else {
 22581  01CC5C  D032               	goto	l1823
 22582  01CC5E                     l17006:
 22583                           
 22584                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 22585  01CC5E  0E09               	movlw	9
 22586  01CC60  6EE6               	movwf	postinc1,c
 22587  01CC62  EC3F  F00E         	call	_TimerDone	;wreg free
 22588  01CC66  502A               	movf	btemp^0,w,c
 22589  01CC68  B4D8               	btfsc	status,2,c
 22590  01CC6A  D02B               	goto	l1823
 22591                           
 22592                           ;mconfig.c: 69:    set_vterm(0);
 22593  01CC6C  0E00               	movlw	0
 22594  01CC6E  6EE6               	movwf	postinc1,c
 22595  01CC70  EC46  F010         	call	_set_vterm	;wreg free
 22596                           
 22597                           ;mconfig.c: 70:    V.help = 0;
 22598  01CC74  0102               	movlb	2	; () banked
 22599  01CC76  9598               	bcf	(_V+152)& (0+255),2,b	;volatile
 22600                           
 22601                           ; BSR set to: 2
 22602                           ;mconfig.c: 71:    set_display_info(display_help());
 22603  01CC78  EC55  F011         	call	_display_help	;wreg free
 22604  01CC7C  502A               	movf	btemp^0,w,c
 22605  01CC7E  6EE6               	movwf	postinc1,c
 22606  01CC80  EC55  F010         	call	_set_display_info	;wreg free
 22607                           
 22608                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 22609  01CC84  0060  FA4B  FFE6   	movff	_V+146,postinc1
 22610  01CC8A  0060  FA4F  FFE6   	movff	_V+147,postinc1
 22611  01CC90  EC8B  F010         	call	_mode_lamp_dim	;wreg free
 22612                           
 22613                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 22614  01CC94  0E0B               	movlw	11
 22615  01CC96  6EE6               	movwf	postinc1,c
 22616  01CC98  EC3F  F00E         	call	_TimerDone	;wreg free
 22617  01CC9C  502A               	movf	btemp^0,w,c
 22618  01CC9E  B4D8               	btfsc	status,2,c
 22619  01CCA0  D010               	goto	l1823
 22620                           
 22621                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 22622  01CCA2  0102               	movlb	2	; () banked
 22623  01CCA4  51A8               	movf	(_V+168)& (0+255),w,b	;volatile
 22624  01CCA6  A4D8               	btfss	status,2,c
 22625  01CCA8  D002               	goto	u16660
 22626  01CCAA  0E01               	movlw	1
 22627  01CCAC  D001               	goto	u16670
 22628  01CCAE                     u16660:
 22629  01CCAE  0E00               	movlw	0
 22630  01CCB0                     u16670:
 22631  01CCB0  6FA8               	movwf	(_V+168)& (0+255),b	;volatile
 22632                           
 22633                           ; BSR set to: 2
 22634                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 22635  01CCB2  0EDC               	movlw	220
 22636  01CCB4  6EE6               	movwf	postinc1,c
 22637  01CCB6  0E05               	movlw	5
 22638  01CCB8  6EE6               	movwf	postinc1,c
 22639  01CCBA  0E0B               	movlw	11
 22640  01CCBC  6EE6               	movwf	postinc1,c
 22641  01CCBE  ECCE  F00B         	call	_StartTimer	;wreg free
 22642  01CCC2                     l1823:
 22643                           
 22644                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 22645  01CCC2  52E5               	movf	postdec1,f,c
 22646  01CCC4  0012               	return		;funcret
 22647  01CCC6                     __end_of_check_help:
 22648                           	opt callstack 0
 22649                           
 22650 ;; *************** function _vterm_dump *****************
 22651 ;; Defined at:
 22652 ;;		line 124 in file "mconfig.c"
 22653 ;; Parameters:    Size  Location     Type
 22654 ;;		None
 22655 ;; Auto vars:     Size  Location     Type
 22656 ;;		None
 22657 ;; Return value:  Size  Location     Type
 22658 ;;                  1  [STACK] void 
 22659 ;; Registers used:
 22660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 22661 ;; Tracked objects:
 22662 ;;		On entry : 3F/2
 22663 ;;		On exit  : 0/0
 22664 ;;		Unchanged: 0/0
 22665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22670 ;;Total ram usage:        0 bytes
 22671 ;; Hardware stack levels used:    1
 22672 ;; Hardware stack levels required when called:   27
 22673 ;; This function calls:
 22674 ;;		_WaitMs
 22675 ;;		_eaDogM_WriteStringAtPos
 22676 ;;		_get_vterm_ptr
 22677 ;;		_sprintf
 22678 ;;		_wait_lcd_done
 22679 ;; This function is called by:
 22680 ;;		_check_help
 22681 ;; This function uses a reentrant model
 22682 ;;
 22683                           
 22684                           	psect	text74
 22685  01D8DC                     __ptext74:
 22686                           	opt callstack 0
 22687  01D8DC                     _vterm_dump:
 22688                           	opt callstack 2
 22689                           
 22690                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 22691                           
 22692                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22693                           ;incstack = 0
 22694  01D8DC  0E01               	movlw	1
 22695  01D8DE  6EE6               	movwf	postinc1,c
 22696  01D8E0  0E00               	movlw	0
 22697  01D8E2  6EE6               	movwf	postinc1,c
 22698  01D8E4  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 22699  01D8E8  0060  F0AB  FFE6   	movff	btemp,postinc1
 22700  01D8EE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22701  01D8F4  0E00               	movlw	0
 22702  01D8F6  6EE6               	movwf	postinc1,c
 22703  01D8F8  0E00               	movlw	0
 22704  01D8FA  6EE6               	movwf	postinc1,c
 22705  01D8FC  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 22706  01D900  0060  F0AB  FFE6   	movff	btemp,postinc1
 22707  01D906  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22708  01D90C  0EA3               	movlw	low STR_76
 22709  01D90E  6EE6               	movwf	postinc1,c
 22710  01D910  0EFF               	movlw	high STR_76
 22711  01D912  6EE6               	movwf	postinc1,c
 22712  01D914  0E01               	movlw	low (_V+1)
 22713  01D916  6EE6               	movwf	postinc1,c
 22714  01D918  0E02               	movlw	high (_V+1)
 22715  01D91A  6EE6               	movwf	postinc1,c
 22716  01D91C  0E08               	movlw	8
 22717  01D91E  6EE6               	movwf	postinc1,c
 22718  01D920  EC8D  F0F9         	call	_sprintf	;wreg free
 22719                           
 22720                           ; BSR set to: 0
 22721                           ;mconfig.c: 127:  wait_lcd_done();
 22722  01D924  ECC4  F00F         	call	_wait_lcd_done	;wreg free
 22723                           
 22724                           ; BSR set to: 0
 22725                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 22726  01D928  0E01               	movlw	low (_V+1)
 22727  01D92A  6EE6               	movwf	postinc1,c
 22728  01D92C  0E02               	movlw	high (_V+1)
 22729  01D92E  6EE6               	movwf	postinc1,c
 22730  01D930  0E00               	movlw	0
 22731  01D932  6EE6               	movwf	postinc1,c
 22732  01D934  0E00               	movlw	0
 22733  01D936  6EE6               	movwf	postinc1,c
 22734  01D938  ECB8  F001         	call	_eaDogM_WriteStringAtPos	;wreg free
 22735                           
 22736                           ; BSR set to: 59
 22737                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 22738  01D93C  0E01               	movlw	1
 22739  01D93E  6EE6               	movwf	postinc1,c
 22740  01D940  0E01               	movlw	1
 22741  01D942  6EE6               	movwf	postinc1,c
 22742  01D944  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 22743  01D948  0060  F0AB  FFE6   	movff	btemp,postinc1
 22744  01D94E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22745  01D954  0E00               	movlw	0
 22746  01D956  6EE6               	movwf	postinc1,c
 22747  01D958  0E01               	movlw	1
 22748  01D95A  6EE6               	movwf	postinc1,c
 22749  01D95C  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 22750  01D960  0060  F0AB  FFE6   	movff	btemp,postinc1
 22751  01D966  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22752  01D96C  0EA3               	movlw	low STR_76
 22753  01D96E  6EE6               	movwf	postinc1,c
 22754  01D970  0EFF               	movlw	high STR_76
 22755  01D972  6EE6               	movwf	postinc1,c
 22756  01D974  0E01               	movlw	low (_V+1)
 22757  01D976  6EE6               	movwf	postinc1,c
 22758  01D978  0E02               	movlw	high (_V+1)
 22759  01D97A  6EE6               	movwf	postinc1,c
 22760  01D97C  0E08               	movlw	8
 22761  01D97E  6EE6               	movwf	postinc1,c
 22762  01D980  EC8D  F0F9         	call	_sprintf	;wreg free
 22763                           
 22764                           ; BSR set to: 0
 22765                           ;mconfig.c: 130:  wait_lcd_done();
 22766  01D984  ECC4  F00F         	call	_wait_lcd_done	;wreg free
 22767                           
 22768                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 22769  01D988  0E01               	movlw	low (_V+1)
 22770  01D98A  6EE6               	movwf	postinc1,c
 22771  01D98C  0E02               	movlw	high (_V+1)
 22772  01D98E  6EE6               	movwf	postinc1,c
 22773  01D990  0E00               	movlw	0
 22774  01D992  6EE6               	movwf	postinc1,c
 22775  01D994  0E01               	movlw	1
 22776  01D996  6EE6               	movwf	postinc1,c
 22777  01D998  ECB8  F001         	call	_eaDogM_WriteStringAtPos	;wreg free
 22778                           
 22779                           ;mconfig.c: 132:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 22780  01D99C  0E01               	movlw	1
 22781  01D99E  6EE6               	movwf	postinc1,c
 22782  01D9A0  0E02               	movlw	2
 22783  01D9A2  6EE6               	movwf	postinc1,c
 22784  01D9A4  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 22785  01D9A8  0060  F0AB  FFE6   	movff	btemp,postinc1
 22786  01D9AE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22787  01D9B4  0E00               	movlw	0
 22788  01D9B6  6EE6               	movwf	postinc1,c
 22789  01D9B8  0E02               	movlw	2
 22790  01D9BA  6EE6               	movwf	postinc1,c
 22791  01D9BC  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 22792  01D9C0  0060  F0AB  FFE6   	movff	btemp,postinc1
 22793  01D9C6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22794  01D9CC  0EA3               	movlw	low STR_76
 22795  01D9CE  6EE6               	movwf	postinc1,c
 22796  01D9D0  0EFF               	movlw	high STR_76
 22797  01D9D2  6EE6               	movwf	postinc1,c
 22798  01D9D4  0E01               	movlw	low (_V+1)
 22799  01D9D6  6EE6               	movwf	postinc1,c
 22800  01D9D8  0E02               	movlw	high (_V+1)
 22801  01D9DA  6EE6               	movwf	postinc1,c
 22802  01D9DC  0E08               	movlw	8
 22803  01D9DE  6EE6               	movwf	postinc1,c
 22804  01D9E0  EC8D  F0F9         	call	_sprintf	;wreg free
 22805                           
 22806                           ; BSR set to: 0
 22807                           ;mconfig.c: 133:  wait_lcd_done();
 22808  01D9E4  ECC4  F00F         	call	_wait_lcd_done	;wreg free
 22809                           
 22810                           ; BSR set to: 0
 22811                           ;mconfig.c: 134:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 22812  01D9E8  0E01               	movlw	low (_V+1)
 22813  01D9EA  6EE6               	movwf	postinc1,c
 22814  01D9EC  0E02               	movlw	high (_V+1)
 22815  01D9EE  6EE6               	movwf	postinc1,c
 22816  01D9F0  0E00               	movlw	0
 22817  01D9F2  6EE6               	movwf	postinc1,c
 22818  01D9F4  0E02               	movlw	2
 22819  01D9F6  6EE6               	movwf	postinc1,c
 22820  01D9F8  ECB8  F001         	call	_eaDogM_WriteStringAtPos	;wreg free
 22821                           
 22822                           ; BSR set to: 59
 22823                           ;mconfig.c: 135:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(3, 0), get_vterm_ptr(3,
      +                           1));
 22824  01D9FC  0E01               	movlw	1
 22825  01D9FE  6EE6               	movwf	postinc1,c
 22826  01DA00  0E03               	movlw	3
 22827  01DA02  6EE6               	movwf	postinc1,c
 22828  01DA04  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 22829  01DA08  0060  F0AB  FFE6   	movff	btemp,postinc1
 22830  01DA0E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22831  01DA14  0E00               	movlw	0
 22832  01DA16  6EE6               	movwf	postinc1,c
 22833  01DA18  0E03               	movlw	3
 22834  01DA1A  6EE6               	movwf	postinc1,c
 22835  01DA1C  ECBC  F00D         	call	_get_vterm_ptr	;wreg free
 22836  01DA20  0060  F0AB  FFE6   	movff	btemp,postinc1
 22837  01DA26  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22838  01DA2C  0EA3               	movlw	low STR_76
 22839  01DA2E  6EE6               	movwf	postinc1,c
 22840  01DA30  0EFF               	movlw	high STR_76
 22841  01DA32  6EE6               	movwf	postinc1,c
 22842  01DA34  0E01               	movlw	low (_V+1)
 22843  01DA36  6EE6               	movwf	postinc1,c
 22844  01DA38  0E02               	movlw	high (_V+1)
 22845  01DA3A  6EE6               	movwf	postinc1,c
 22846  01DA3C  0E08               	movlw	8
 22847  01DA3E  6EE6               	movwf	postinc1,c
 22848  01DA40  EC8D  F0F9         	call	_sprintf	;wreg free
 22849                           
 22850                           ; BSR set to: 0
 22851                           ;mconfig.c: 136:  wait_lcd_done();
 22852  01DA44  ECC4  F00F         	call	_wait_lcd_done	;wreg free
 22853                           
 22854                           ;mconfig.c: 137:  eaDogM_WriteStringAtPos(3, 0, V.buf);
 22855  01DA48  0E01               	movlw	low (_V+1)
 22856  01DA4A  6EE6               	movwf	postinc1,c
 22857  01DA4C  0E02               	movlw	high (_V+1)
 22858  01DA4E  6EE6               	movwf	postinc1,c
 22859  01DA50  0E00               	movlw	0
 22860  01DA52  6EE6               	movwf	postinc1,c
 22861  01DA54  0E03               	movlw	3
 22862  01DA56  6EE6               	movwf	postinc1,c
 22863  01DA58  ECB8  F001         	call	_eaDogM_WriteStringAtPos	;wreg free
 22864                           
 22865                           ; BSR set to: 59
 22866                           ;mconfig.c: 138:  WaitMs(3000);
 22867  01DA5C  0EB8               	movlw	184
 22868  01DA5E  6EE6               	movwf	postinc1,c
 22869  01DA60  0E0B               	movlw	11
 22870  01DA62  6EE6               	movwf	postinc1,c
 22871  01DA64  ECC0  F00C         	call	_WaitMs	;wreg free
 22872                           
 22873                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 22874  01DA68  0012               	return		;funcret
 22875  01DA6A                     __end_of_vterm_dump:
 22876                           	opt callstack 0
 22877                           
 22878 ;; *************** function _sprintf *****************
 22879 ;; Defined at:
 22880 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 22881 ;; Parameters:    Size  Location     Type
 22882 ;;  s               2  [STACK] PTR unsigned char 
 22883 ;;		 -> D.lcd(640), D(642), port_data(512), V(181), 
 22884 ;;  fmt             2  [STACK] PTR const unsigned char 
 22885 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(19), 
 22886 ;;		 -> STR_85(19), STR_84(19), STR_83(19), STR_82(19), 
 22887 ;;		 -> STR_81(19), STR_80(24), STR_79(15), STR_78(15), 
 22888 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 22889 ;;		 -> STR_73(19), STR_72(19), STR_67(14), STR_66(21), 
 22890 ;;		 -> STR_65(21), STR_64(21), STR_63(21), STR_62(21), 
 22891 ;;		 -> STR_61(21), STR_60(21), STR_59(21), STR_58(21), 
 22892 ;;		 -> STR_57(21), STR_56(21), STR_55(21), STR_54(20), 
 22893 ;;		 -> STR_53(21), STR_52(21), STR_51(21), STR_50(22), 
 22894 ;;		 -> STR_49(22), STR_48(22), STR_47(23), STR_46(23), 
 22895 ;;		 -> STR_45(23), STR_44(29), STR_43(23), STR_42(23), 
 22896 ;;		 -> STR_41(22), STR_40(22), STR_39(22), STR_38(22), 
 22897 ;;		 -> STR_37(22), STR_36(22), STR_35(22), STR_34(22), 
 22898 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 22899 ;;		 -> STR_29(17), STR_28(16), STR_27(16), STR_26(21), 
 22900 ;;		 -> STR_25(21), STR_24(21), STR_23(26), STR_22(26), 
 22901 ;;		 -> STR_21(22), STR_20(21), STR_19(21), STR_18(21), 
 22902 ;;		 -> STR_17(21), STR_16(22), STR_15(22), STR_14(22), 
 22903 ;;		 -> STR_13(26), STR_12(21), STR_11(21), STR_10(21), 
 22904 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 22905 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 22906 ;; Auto vars:     Size  Location     Type
 22907 ;;  f               6  [STACK] struct _IO_FILE
 22908 ;;  ap              2  [STACK] PTR void [1]
 22909 ;;		 -> ?_printf(2), ?_sprintf(2), 
 22910 ;;  ret             2    0        int 
 22911 ;; Return value:  Size  Location     Type
 22912 ;;                  2  [STACK] int 
 22913 ;; Registers used:
 22914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 22915 ;; Tracked objects:
 22916 ;;		On entry : 0/2
 22917 ;;		On exit  : 3F/0
 22918 ;;		Unchanged: 0/0
 22919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22924 ;;Total ram usage:        0 bytes
 22925 ;; Hardware stack levels used:    1
 22926 ;; Hardware stack levels required when called:   23
 22927 ;; This function calls:
 22928 ;;		_vfprintf
 22929 ;; This function is called by:
 22930 ;;		_main
 22931 ;;		_current_sensor_cal
 22932 ;;		_display_history
 22933 ;;		_check_help
 22934 ;;		_vterm_dump
 22935 ;;		_calc_bsoc
 22936 ;; This function uses a reentrant model
 22937 ;;
 22938                           
 22939                           	psect	text75
 22940  01F31A                     __ptext75:
 22941                           	opt callstack 0
 22942  01F31A                     _sprintf:
 22943                           	opt callstack 0
 22944                           
 22945                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 22946  01F31A  0E08               	movlw	8
 22947  01F31C  26E1               	addwf	fsr1l,f,c
 22948  01F31E  0E00               	movlw	0
 22949  01F320  22E2               	addwfc	fsr1h,f,c
 22950                           
 22951                           ;incstack = 0
 22952 ;; hardware stack exceeded
 22953  01F322  0EFE               	movlw	254
 22954  01F324  6E34               	movwf	(btemp+10)^0,c
 22955  01F326  0EFF               	movlw	255
 22956  01F328  6E35               	movwf	(btemp+11)^0,c
 22957                           
 22958                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 22959  01F32A  0EF5               	movlw	245
 22960  01F32C  24E1               	addwf	fsr1l,w,c
 22961  01F32E  6E32               	movwf	(btemp+8)^0,c
 22962  01F330  0EFF               	movlw	255
 22963  01F332  20E2               	addwfc	fsr1h,w,c
 22964  01F334  6E33               	movwf	(btemp+9)^0,c
 22965  01F336  5034               	movf	(btemp+10)^0,w,c
 22966  01F338  2632               	addwf	(btemp+8)^0,f,c
 22967  01F33A  5035               	movf	(btemp+11)^0,w,c
 22968  01F33C  2233               	addwfc	(btemp+9)^0,f,c
 22969                           
 22970                           ;stkvar	_ap @ sp[(-8)+6]
 22971  01F33E  0EFF               	movlw	-1
 22972  01F340  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 22973  01F346  0EFE               	movlw	-2
 22974  01F348  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 22975                           
 22976                           ;stkvar	_s @ sp[(-8)+-3]
 22977  01F34E  0EF5               	movlw	-11
 22978  01F350  006F FF8C  F034    	movff	plusw1,btemp+10
 22979  01F356  0EF6               	movlw	-10
 22980  01F358  006F FF8C  F035    	movff	plusw1,btemp+11
 22981                           
 22982                           ;stkvar	_f @ sp[(-8)+0]
 22983  01F35E  0EF9               	movlw	-7
 22984  01F360  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 22985  01F366  0EF8               	movlw	-8
 22986  01F368  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 22987                           
 22988                           ;stkvar	_f @ sp[(-8)+0]
 22989  01F36E  0EFA               	movlw	250
 22990  01F370  24E1               	addwf	fsr1l,w,c
 22991  01F372  6ED9               	movwf	fsr2l,c
 22992  01F374  0EFF               	movlw	255
 22993  01F376  20E2               	addwfc	fsr1h,w,c
 22994  01F378  6EDA               	movwf	fsr2h,c
 22995  01F37A  0E00               	movlw	0
 22996  01F37C  6EDE               	movwf	postinc2,c
 22997  01F37E  0E00               	movlw	0
 22998  01F380  6EDD               	movwf	postdec2,c
 22999                           
 23000                           ;stkvar	_f @ sp[(-8)+0]
 23001  01F382  0EFC               	movlw	252
 23002  01F384  24E1               	addwf	fsr1l,w,c
 23003  01F386  6ED9               	movwf	fsr2l,c
 23004  01F388  0EFF               	movlw	255
 23005  01F38A  20E2               	addwfc	fsr1h,w,c
 23006  01F38C  6EDA               	movwf	fsr2h,c
 23007  01F38E  0E00               	movlw	0
 23008  01F390  6EDE               	movwf	postinc2,c
 23009  01F392  0E00               	movlw	0
 23010  01F394  6EDD               	movwf	postdec2,c
 23011                           
 23012                           ;stkvar	_ap @ sp[(-8)+6]
 23013  01F396  0EFE               	movlw	254
 23014  01F398  24E1               	addwf	fsr1l,w,c
 23015  01F39A  6E2A               	movwf	btemp^0,c
 23016  01F39C  0EFF               	movlw	255
 23017  01F39E  20E2               	addwfc	fsr1h,w,c
 23018  01F3A0  6E2B               	movwf	(btemp+1)^0,c
 23019  01F3A2  0060  F0AB  FFE6   	movff	btemp,postinc1
 23020  01F3A8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23021                           
 23022                           ;stkvar	_fmt @ sp[(-10)+-5]
 23023  01F3AE  0EF1               	movlw	-15
 23024  01F3B0  006F FF8F FFE6     	movff	plusw1,postinc1
 23025  01F3B6  006F FF8F FFE6     	movff	plusw1,postinc1
 23026                           
 23027                           ;stkvar	_f @ sp[(-12)+0]
 23028  01F3BC  0EF4               	movlw	244
 23029  01F3BE  24E1               	addwf	fsr1l,w,c
 23030  01F3C0  6E2A               	movwf	btemp^0,c
 23031  01F3C2  0EFF               	movlw	255
 23032  01F3C4  20E2               	addwfc	fsr1h,w,c
 23033  01F3C6  6E2B               	movwf	(btemp+1)^0,c
 23034  01F3C8  0060  F0AB  FFE6   	movff	btemp,postinc1
 23035  01F3CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23036  01F3D4  EC0D  F001         	call	_vfprintf	;wreg free
 23037                           
 23038                           ; BSR set to: 0
 23039                           ;stkvar	_f @ sp[(-8)+0]
 23040  01F3D8  0EFA               	movlw	250
 23041  01F3DA  24E1               	addwf	fsr1l,w,c
 23042  01F3DC  6ED9               	movwf	fsr2l,c
 23043  01F3DE  0EFF               	movlw	255
 23044  01F3E0  20E2               	addwfc	fsr1h,w,c
 23045  01F3E2  6EDA               	movwf	fsr2h,c
 23046  01F3E4  006F FF78  F034    	movff	postinc2,btemp+10
 23047  01F3EA  006F FF74  F035    	movff	postdec2,btemp+11
 23048                           
 23049                           ;stkvar	_s @ sp[(-8)+-3]
 23050  01F3F0  0EF5               	movlw	-11
 23051  01F3F2  006F FF8C  F032    	movff	plusw1,btemp+8
 23052  01F3F8  0EF6               	movlw	-10
 23053  01F3FA  006F FF8C  F033    	movff	plusw1,btemp+9
 23054  01F400  5034               	movf	(btemp+10)^0,w,c
 23055  01F402  2432               	addwf	(btemp+8)^0,w,c
 23056  01F404  6ED9               	movwf	fsr2l,c
 23057  01F406  5035               	movf	(btemp+11)^0,w,c
 23058  01F408  2033               	addwfc	(btemp+9)^0,w,c
 23059  01F40A  6EDA               	movwf	fsr2h,c
 23060  01F40C  0E00               	movlw	0
 23061  01F40E  6EDF               	movwf	indf2,c
 23062                           
 23063                           ; BSR set to: 0
 23064                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 23065  01F410  0EF8               	movlw	248
 23066  01F412  26E1               	addwf	fsr1l,f,c
 23067  01F414  0EFF               	movlw	255
 23068  01F416  22E2               	addwfc	fsr1h,f,c
 23069  01F418  52E5               	movf	postdec1,f,c
 23070  01F41A  50E7               	movf	indf1,w,c
 23071  01F41C  5EE1               	subwf	fsr1l,f,c
 23072  01F41E  0E00               	movlw	0
 23073  01F420  5AE2               	subwfb	fsr1h,f,c
 23074  01F422  0012               	return		;funcret
 23075  01F424                     __end_of_sprintf:
 23076                           	opt callstack 0
 23077                           
 23078 ;; *************** function _get_vterm_ptr *****************
 23079 ;; Defined at:
 23080 ;;		line 119 in file "mconfig.c"
 23081 ;; Parameters:    Size  Location     Type
 23082 ;;  line            1  [STACK] const unsigned char 
 23083 ;;  vterm           1  [STACK] const unsigned char 
 23084 ;; Auto vars:     Size  Location     Type
 23085 ;;		None
 23086 ;; Return value:  Size  Location     Type
 23087 ;;                  2  [STACK] PTR unsigned char 
 23088 ;; Registers used:
 23089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23090 ;; Tracked objects:
 23091 ;;		On entry : 0/2
 23092 ;;		On exit  : 0/0
 23093 ;;		Unchanged: 0/0
 23094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23099 ;;Total ram usage:        0 bytes
 23100 ;; Hardware stack levels used:    1
 23101 ;; Hardware stack levels required when called:   15
 23102 ;; This function calls:
 23103 ;;		Nothing
 23104 ;; This function is called by:
 23105 ;;		_main
 23106 ;;		_current_sensor_cal
 23107 ;;		_display_history
 23108 ;;		_check_help
 23109 ;;		_vterm_dump
 23110 ;; This function uses a reentrant model
 23111 ;;
 23112                           
 23113                           	psect	text76
 23114  001B78                     __ptext76:
 23115                           	opt callstack 0
 23116  001B78                     _get_vterm_ptr:
 23117                           	opt callstack 15
 23118                           
 23119                           ;mconfig.c: 119: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 120: {;mconfig.c: 121:  return D.lcd[vterm & 0x03][line & 0x03];
 23120                           ;stkvar	_vterm @ sp[(0)+-2]
 23121                           
 23122                           ; BSR set to: 0
 23123                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23124                           ;incstack = 0
 23125  001B78  0EFE               	movlw	-2
 23126  001B7A  50E3               	movf	plusw1,w,c
 23127  001B7C  0B03               	andlw	3
 23128  001B7E  0DA0               	mullw	160
 23129  001B80  0E4F               	movlw	low _D
 23130  001B82  6E2A               	movwf	btemp^0,c
 23131  001B84  0E0A               	movlw	high _D
 23132  001B86  6E2B               	movwf	(btemp+1)^0,c
 23133  001B88  50F3               	movf	243,w,c
 23134  001B8A  262A               	addwf	btemp^0,f,c
 23135  001B8C  50F4               	movf	244,w,c
 23136  001B8E  222B               	addwfc	(btemp+1)^0,f,c
 23137                           
 23138                           ;stkvar	_line @ sp[(0)+-1]
 23139  001B90  0EFF               	movlw	-1
 23140  001B92  50E3               	movf	plusw1,w,c
 23141  001B94  0B03               	andlw	3
 23142  001B96  0D28               	mullw	40
 23143  001B98  50F3               	movf	243,w,c
 23144  001B9A  262A               	addwf	btemp^0,f,c
 23145  001B9C  50F4               	movf	244,w,c
 23146  001B9E  222B               	addwfc	(btemp+1)^0,f,c
 23147                           
 23148                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 23149  001BA0  52E5               	movf	postdec1,f,c
 23150  001BA2  52E5               	movf	postdec1,f,c
 23151  001BA4  0012               	return		;funcret
 23152  001BA6                     __end_of_get_vterm_ptr:
 23153                           	opt callstack 0
 23154                           
 23155 ;; *************** function _WaitMs *****************
 23156 ;; Defined at:
 23157 ;;		line 32 in file "timers.c"
 23158 ;; Parameters:    Size  Location     Type
 23159 ;;  numMilliseco    2  [STACK] const unsigned short 
 23160 ;; Auto vars:     Size  Location     Type
 23161 ;;		None
 23162 ;; Return value:  Size  Location     Type
 23163 ;;                  1  [STACK] void 
 23164 ;; Registers used:
 23165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23166 ;; Tracked objects:
 23167 ;;		On entry : 0/2
 23168 ;;		On exit  : 0/0
 23169 ;;		Unchanged: 0/0
 23170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23175 ;;Total ram usage:        0 bytes
 23176 ;; Hardware stack levels used:    1
 23177 ;; Hardware stack levels required when called:   16
 23178 ;; This function calls:
 23179 ;;		_StartTimer
 23180 ;;		_TimerDone
 23181 ;; This function is called by:
 23182 ;;		_main
 23183 ;;		_current_sensor_cal
 23184 ;;		_display_history
 23185 ;;		_vterm_dump
 23186 ;; This function uses a reentrant model
 23187 ;;
 23188                           
 23189                           	psect	text77
 23190  001980                     __ptext77:
 23191                           	opt callstack 0
 23192  001980                     _WaitMs:
 23193                           	opt callstack 13
 23194                           
 23195                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 23196                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 23197                           
 23198                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23199                           ;incstack = 0
 23200  001980  0EFE               	movlw	-2
 23201  001982  006F FF8F FFE6     	movff	plusw1,postinc1
 23202  001988  006F FF8F FFE6     	movff	plusw1,postinc1
 23203  00198E  0E00               	movlw	0
 23204  001990  6EE6               	movwf	postinc1,c
 23205  001992  ECCE  F00B         	call	_StartTimer	;wreg free
 23206                           
 23207                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 23208  001996  D005               	goto	l12742
 23209  001998                     l1754:
 23210                           
 23211                           ;timers.c: 36:   __nop();
 23212  001998  F000               	nop	
 23213                           
 23214                           ;timers.c: 37:   __nop();
 23215  00199A  F000               	nop	
 23216                           
 23217                           ;timers.c: 38:   __nop();
 23218  00199C  F000               	nop	
 23219                           
 23220                           ;timers.c: 39:   __nop();
 23221  00199E  F000               	nop	
 23222  0019A0  0004               	clrwdt		;# 
 23223  0019A2                     l12742:
 23224                           
 23225                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 23226  0019A2  0E00               	movlw	0
 23227  0019A4  6EE6               	movwf	postinc1,c
 23228  0019A6  EC3F  F00E         	call	_TimerDone	;wreg free
 23229  0019AA  502A               	movf	btemp^0,w,c
 23230  0019AC  B4D8               	btfsc	status,2,c
 23231  0019AE  D7F4               	goto	l1754
 23232                           
 23233                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 23234  0019B0  52E5               	movf	postdec1,f,c
 23235  0019B2  52E5               	movf	postdec1,f,c
 23236  0019B4  0012               	return		;funcret
 23237  0019B6                     __end_of_WaitMs:
 23238                           	opt callstack 0
 23239                           
 23240 ;; *************** function _update_lcd *****************
 23241 ;; Defined at:
 23242 ;;		line 85 in file "mconfig.c"
 23243 ;; Parameters:    Size  Location     Type
 23244 ;;  vterm           1  [STACK] unsigned char 
 23245 ;; Auto vars:     Size  Location     Type
 23246 ;;		None
 23247 ;; Return value:  Size  Location     Type
 23248 ;;                  1  [STACK] unsigned char 
 23249 ;; Registers used:
 23250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23251 ;; Tracked objects:
 23252 ;;		On entry : 0/0
 23253 ;;		On exit  : 0/0
 23254 ;;		Unchanged: 0/0
 23255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23260 ;;Total ram usage:        0 bytes
 23261 ;; Hardware stack levels used:    1
 23262 ;; Hardware stack levels required when called:   27
 23263 ;; This function calls:
 23264 ;;		_eaDogM_WriteStringAtPos
 23265 ;;		_wait_lcd_done
 23266 ;; This function is called by:
 23267 ;;		_main
 23268 ;;		_current_sensor_cal
 23269 ;;		_display_history
 23270 ;;		_check_help
 23271 ;; This function uses a reentrant model
 23272 ;;
 23273                           
 23274                           	psect	text78
 23275  01E47E                     __ptext78:
 23276                           	opt callstack 0
 23277  01E47E                     _update_lcd:
 23278                           	opt callstack 3
 23279                           
 23280                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 23281                           ;stkvar	_vterm @ sp[(0)+-1]
 23282                           
 23283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23284                           ;incstack = 0
 23285  01E47E  0EFF               	movlw	-1
 23286  01E480  006F FF8C  F02A    	movff	plusw1,btemp
 23287  01E486  0E03               	movlw	3
 23288  01E488  162A               	andwf	btemp^0,f,c
 23289  01E48A  0EFF               	movlw	-1
 23290  01E48C  0060  F0AB  FFE3   	movff	btemp,plusw1
 23291                           
 23292                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 23293  01E492  EE23  F0CF         	lfsr	2,_D+640
 23294  01E496  A0DF               	btfss	indf2,0,c
 23295  01E498  D004               	goto	l16544
 23296                           
 23297                           ;stkvar	_vterm @ sp[(0)+-1]
 23298  01E49A  0EFF               	movlw	-1
 23299  01E49C  50E3               	movf	plusw1,w,c
 23300  01E49E  B4D8               	btfsc	status,2,c
 23301  01E4A0  D09C               	goto	l1830
 23302  01E4A2                     l16544:
 23303                           
 23304                           ;mconfig.c: 92:  D.lcd[vterm][0][19] = 0;
 23305                           ;stkvar	_vterm @ sp[(0)+-1]
 23306  01E4A2  0EFF               	movlw	-1
 23307  01E4A4  50E3               	movf	plusw1,w,c
 23308  01E4A6  0DA0               	mullw	160
 23309  01E4A8  0E62               	movlw	low (_D+19)
 23310  01E4AA  24F3               	addwf	243,w,c
 23311  01E4AC  6ED9               	movwf	fsr2l,c
 23312  01E4AE  0E0A               	movlw	high (_D+19)
 23313  01E4B0  20F4               	addwfc	prodh,w,c
 23314  01E4B2  6EDA               	movwf	fsr2h,c
 23315  01E4B4  0E00               	movlw	0
 23316  01E4B6  6EDF               	movwf	indf2,c
 23317                           
 23318                           ;mconfig.c: 93:  D.lcd[vterm][1][19] = 0;
 23319                           ;stkvar	_vterm @ sp[(0)+-1]
 23320  01E4B8  0EFF               	movlw	-1
 23321  01E4BA  50E3               	movf	plusw1,w,c
 23322  01E4BC  0DA0               	mullw	160
 23323  01E4BE  0E8A               	movlw	low (_D+59)
 23324  01E4C0  24F3               	addwf	243,w,c
 23325  01E4C2  6ED9               	movwf	fsr2l,c
 23326  01E4C4  0E0A               	movlw	high (_D+59)
 23327  01E4C6  20F4               	addwfc	prodh,w,c
 23328  01E4C8  6EDA               	movwf	fsr2h,c
 23329  01E4CA  0E00               	movlw	0
 23330  01E4CC  6EDF               	movwf	indf2,c
 23331                           
 23332                           ;mconfig.c: 94:  D.lcd[vterm][2][19] = 0;
 23333                           ;stkvar	_vterm @ sp[(0)+-1]
 23334  01E4CE  0EFF               	movlw	-1
 23335  01E4D0  50E3               	movf	plusw1,w,c
 23336  01E4D2  0DA0               	mullw	160
 23337  01E4D4  0EB2               	movlw	low (_D+99)
 23338  01E4D6  24F3               	addwf	243,w,c
 23339  01E4D8  6ED9               	movwf	fsr2l,c
 23340  01E4DA  0E0A               	movlw	high (_D+99)
 23341  01E4DC  20F4               	addwfc	prodh,w,c
 23342  01E4DE  6EDA               	movwf	fsr2h,c
 23343  01E4E0  0E00               	movlw	0
 23344  01E4E2  6EDF               	movwf	indf2,c
 23345                           
 23346                           ;mconfig.c: 95:  D.lcd[vterm][3][19] = 0;
 23347                           ;stkvar	_vterm @ sp[(0)+-1]
 23348  01E4E4  0EFF               	movlw	-1
 23349  01E4E6  50E3               	movf	plusw1,w,c
 23350  01E4E8  0DA0               	mullw	160
 23351  01E4EA  0EDA               	movlw	low (_D+139)
 23352  01E4EC  24F3               	addwf	243,w,c
 23353  01E4EE  6ED9               	movwf	fsr2l,c
 23354  01E4F0  0E0A               	movlw	high (_D+139)
 23355  01E4F2  20F4               	addwfc	prodh,w,c
 23356  01E4F4  6EDA               	movwf	fsr2h,c
 23357  01E4F6  0E00               	movlw	0
 23358  01E4F8  6EDF               	movwf	indf2,c
 23359                           
 23360                           ;mconfig.c: 96:  wait_lcd_done();
 23361  01E4FA  ECC4  F00F         	call	_wait_lcd_done	;wreg free
 23362                           
 23363                           ; BSR set to: 0
 23364                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 23365                           ;stkvar	_vterm @ sp[(0)+-1]
 23366  01E4FE  0EFF               	movlw	-1
 23367  01E500  50E3               	movf	plusw1,w,c
 23368  01E502  0DA0               	mullw	160
 23369  01E504  0E4F               	movlw	low _D
 23370  01E506  6E34               	movwf	(btemp+10)^0,c
 23371  01E508  0E0A               	movlw	high _D
 23372  01E50A  6E35               	movwf	(btemp+11)^0,c
 23373  01E50C  50F3               	movf	243,w,c
 23374  01E50E  2634               	addwf	(btemp+10)^0,f,c
 23375  01E510  50F4               	movf	244,w,c
 23376  01E512  2235               	addwfc	(btemp+11)^0,f,c
 23377  01E514  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23378  01E51A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23379  01E520  0E00               	movlw	0
 23380  01E522  6EE6               	movwf	postinc1,c
 23381  01E524  0E00               	movlw	0
 23382  01E526  6EE6               	movwf	postinc1,c
 23383  01E528  ECB8  F001         	call	_eaDogM_WriteStringAtPos	;wreg free
 23384                           
 23385                           ; BSR set to: 59
 23386                           ;mconfig.c: 98:  wait_lcd_done();
 23387  01E52C  ECC4  F00F         	call	_wait_lcd_done	;wreg free
 23388                           
 23389                           ; BSR set to: 0
 23390                           ;mconfig.c: 99:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 23391                           ;stkvar	_vterm @ sp[(0)+-1]
 23392  01E530  0EFF               	movlw	-1
 23393  01E532  50E3               	movf	plusw1,w,c
 23394  01E534  0DA0               	mullw	160
 23395  01E536  0E4F               	movlw	low _D
 23396  01E538  6E34               	movwf	(btemp+10)^0,c
 23397  01E53A  0E0A               	movlw	high _D
 23398  01E53C  6E35               	movwf	(btemp+11)^0,c
 23399  01E53E  0E28               	movlw	40
 23400  01E540  2634               	addwf	(btemp+10)^0,f,c
 23401  01E542  0E00               	movlw	0
 23402  01E544  2235               	addwfc	(btemp+11)^0,f,c
 23403  01E546  50F3               	movf	243,w,c
 23404  01E548  2634               	addwf	(btemp+10)^0,f,c
 23405  01E54A  50F4               	movf	244,w,c
 23406  01E54C  2235               	addwfc	(btemp+11)^0,f,c
 23407  01E54E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23408  01E554  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23409  01E55A  0E00               	movlw	0
 23410  01E55C  6EE6               	movwf	postinc1,c
 23411  01E55E  0E01               	movlw	1
 23412  01E560  6EE6               	movwf	postinc1,c
 23413  01E562  ECB8  F001         	call	_eaDogM_WriteStringAtPos	;wreg free
 23414                           
 23415                           ; BSR set to: 59
 23416                           ;mconfig.c: 100:  wait_lcd_done();
 23417  01E566  ECC4  F00F         	call	_wait_lcd_done	;wreg free
 23418                           
 23419                           ; BSR set to: 0
 23420                           ;mconfig.c: 101:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 23421                           ;stkvar	_vterm @ sp[(0)+-1]
 23422  01E56A  0EFF               	movlw	-1
 23423  01E56C  50E3               	movf	plusw1,w,c
 23424  01E56E  0DA0               	mullw	160
 23425  01E570  0E4F               	movlw	low _D
 23426  01E572  6E34               	movwf	(btemp+10)^0,c
 23427  01E574  0E0A               	movlw	high _D
 23428  01E576  6E35               	movwf	(btemp+11)^0,c
 23429  01E578  0E50               	movlw	80
 23430  01E57A  2634               	addwf	(btemp+10)^0,f,c
 23431  01E57C  0E00               	movlw	0
 23432  01E57E  2235               	addwfc	(btemp+11)^0,f,c
 23433  01E580  50F3               	movf	243,w,c
 23434  01E582  2634               	addwf	(btemp+10)^0,f,c
 23435  01E584  50F4               	movf	244,w,c
 23436  01E586  2235               	addwfc	(btemp+11)^0,f,c
 23437  01E588  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23438  01E58E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23439  01E594  0E00               	movlw	0
 23440  01E596  6EE6               	movwf	postinc1,c
 23441  01E598  0E02               	movlw	2
 23442  01E59A  6EE6               	movwf	postinc1,c
 23443  01E59C  ECB8  F001         	call	_eaDogM_WriteStringAtPos	;wreg free
 23444                           
 23445                           ; BSR set to: 59
 23446                           ;mconfig.c: 102:  wait_lcd_done();
 23447  01E5A0  ECC4  F00F         	call	_wait_lcd_done	;wreg free
 23448                           
 23449                           ; BSR set to: 0
 23450                           ;mconfig.c: 103:  eaDogM_WriteStringAtPos(3, 0, D.lcd[vterm][3]);
 23451                           ;stkvar	_vterm @ sp[(0)+-1]
 23452  01E5A4  0EFF               	movlw	-1
 23453  01E5A6  50E3               	movf	plusw1,w,c
 23454  01E5A8  0DA0               	mullw	160
 23455  01E5AA  0E4F               	movlw	low _D
 23456  01E5AC  6E34               	movwf	(btemp+10)^0,c
 23457  01E5AE  0E0A               	movlw	high _D
 23458  01E5B0  6E35               	movwf	(btemp+11)^0,c
 23459  01E5B2  0E78               	movlw	120
 23460  01E5B4  2634               	addwf	(btemp+10)^0,f,c
 23461  01E5B6  0E00               	movlw	0
 23462  01E5B8  2235               	addwfc	(btemp+11)^0,f,c
 23463  01E5BA  50F3               	movf	243,w,c
 23464  01E5BC  2634               	addwf	(btemp+10)^0,f,c
 23465  01E5BE  50F4               	movf	244,w,c
 23466  01E5C0  2235               	addwfc	(btemp+11)^0,f,c
 23467  01E5C2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23468  01E5C8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23469  01E5CE  0E00               	movlw	0
 23470  01E5D0  6EE6               	movwf	postinc1,c
 23471  01E5D2  0E03               	movlw	3
 23472  01E5D4  6EE6               	movwf	postinc1,c
 23473  01E5D6  ECB8  F001         	call	_eaDogM_WriteStringAtPos	;wreg free
 23474  01E5DA                     l1830:
 23475                           
 23476                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 23477  01E5DA  52E5               	movf	postdec1,f,c
 23478  01E5DC  0012               	return		;funcret
 23479  01E5DE                     __end_of_update_lcd:
 23480                           	opt callstack 0
 23481                           
 23482 ;; *************** function _eaDogM_WriteStringAtPos *****************
 23483 ;; Defined at:
 23484 ;;		line 195 in file "eadog.c"
 23485 ;; Parameters:    Size  Location     Type
 23486 ;;  r               1  [STACK] const unsigned char 
 23487 ;;  c               1  [STACK] const unsigned char 
 23488 ;;  strPtr          2  [STACK] PTR unsigned char 
 23489 ;;		 -> D.lcd(640), D(642), V(181), 
 23490 ;; Auto vars:     Size  Location     Type
 23491 ;;  row             1  [STACK] unsigned char 
 23492 ;; Return value:  Size  Location     Type
 23493 ;;                  1  [STACK] void 
 23494 ;; Registers used:
 23495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23496 ;; Tracked objects:
 23497 ;;		On entry : 3F/0
 23498 ;;		On exit  : 3F/3B
 23499 ;;		Unchanged: 0/0
 23500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23505 ;;Total ram usage:        0 bytes
 23506 ;; Hardware stack levels used:    1
 23507 ;; Hardware stack levels required when called:   26
 23508 ;; This function calls:
 23509 ;;		_eaDogM_WriteString
 23510 ;;		_send_lcd_cmd_dma
 23511 ;;		_send_lcd_data_dma
 23512 ;;		_wait_lcd_done
 23513 ;;		_wdtdelay
 23514 ;; This function is called by:
 23515 ;;		_update_lcd
 23516 ;;		_vterm_dump
 23517 ;; This function uses a reentrant model
 23518 ;;
 23519                           
 23520                           	psect	text79
 23521  000370                     __ptext79:
 23522                           	opt callstack 0
 23523  000370                     _eaDogM_WriteStringAtPos:
 23524                           	opt callstack 0
 23525                           
 23526                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23527  000370  52E6               	movf	postinc1,f,c
 23528                           
 23529                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 23530                           
 23531                           ;incstack = 0
 23532  000372  D014               	goto	l16490
 23533  000374                     l16478:
 23534                           
 23535                           ;eadog.c: 201:   row = 0x40;
 23536                           ;stkvar	_row @ sp[(-1)+0]
 23537  000374  0EFF               	movlw	-1
 23538  000376  6AE3               	clrf	plusw1,c
 23539  000378  8CE3               	bsf	plusw1,6,c
 23540                           
 23541                           ;eadog.c: 202:   break;
 23542  00037A  D026               	goto	l16492
 23543  00037C                     l16480:
 23544                           
 23545                           ;eadog.c: 204:   row = 0x14;
 23546                           ;stkvar	_row @ sp[(-1)+0]
 23547  00037C  0EFF               	movlw	-1
 23548  00037E  6AE3               	clrf	plusw1,c
 23549  000380  84E3               	bsf	plusw1,2,c
 23550  000382  88E3               	bsf	plusw1,4,c	;indir
 23551                           
 23552                           ;eadog.c: 205:   break;
 23553  000384  D021               	goto	l16492
 23554  000386                     l16482:
 23555                           
 23556                           ;eadog.c: 207:   row = 0x54;
 23557  000386  0E54               	movlw	84
 23558  000388  6E35               	movwf	(btemp+11)^0,c
 23559                           
 23560                           ;stkvar	_row @ sp[(-1)+0]
 23561  00038A  0EFF               	movlw	-1
 23562  00038C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 23563                           
 23564                           ;eadog.c: 208:   break;
 23565  000392  D01A               	goto	l16492
 23566  000394                     l16484:
 23567                           
 23568                           ;eadog.c: 210:   row = 0x01;
 23569                           ;stkvar	_row @ sp[(-1)+0]
 23570  000394  0EFF               	movlw	-1
 23571  000396  6AE3               	clrf	plusw1,c
 23572  000398  2AE3               	incf	plusw1,f,c
 23573                           
 23574                           ;eadog.c: 211:   break;
 23575  00039A  D016               	goto	l16492
 23576  00039C                     l16490:
 23577                           
 23578                           ;stkvar	_r @ sp[(-1)+-1]
 23579  00039C  0EFE               	movlw	-2
 23580  00039E  50E3               	movf	plusw1,w,c
 23581  0003A0  6E34               	movwf	(btemp+10)^0,c
 23582  0003A2  6A35               	clrf	(btemp+11)^0,c
 23583                           
 23584                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23585                           ; Switch size 1, requested type "simple"
 23586                           ; Number of cases is 1, Range of values is 0 to 0
 23587                           ; switch strategies available:
 23588                           ; Name         Instructions Cycles
 23589                           ; simple_byte            4     3 (average)
 23590                           ;	Chosen strategy is simple_byte
 23591  0003A4  5035               	movf	(btemp+11)^0,w,c
 23592  0003A6  0A00               	xorlw	0	; case 0
 23593  0003A8  A4D8               	btfss	status,2,c
 23594  0003AA  D7E4               	goto	l16478
 23595                           
 23596                           ; Switch size 1, requested type "simple"
 23597                           ; Number of cases is 4, Range of values is 0 to 3
 23598                           ; switch strategies available:
 23599                           ; Name         Instructions Cycles
 23600                           ; simple_byte           13     7 (average)
 23601                           ;	Chosen strategy is simple_byte
 23602  0003AC  5034               	movf	(btemp+10)^0,w,c
 23603  0003AE  0A00               	xorlw	0	; case 0
 23604  0003B0  B4D8               	btfsc	status,2,c
 23605  0003B2  D7E0               	goto	l16478
 23606  0003B4  0A01               	xorlw	1	; case 1
 23607  0003B6  B4D8               	btfsc	status,2,c
 23608  0003B8  D7E1               	goto	l16480
 23609  0003BA  0A03               	xorlw	3	; case 2
 23610  0003BC  B4D8               	btfsc	status,2,c
 23611  0003BE  D7E3               	goto	l16482
 23612  0003C0  0A01               	xorlw	1	; case 3
 23613  0003C2  B4D8               	btfsc	status,2,c
 23614  0003C4  D7E7               	goto	l16484
 23615  0003C6  D7D6               	goto	l16478
 23616  0003C8                     l16492:
 23617                           
 23618                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 23619  0003C8  0E45               	movlw	69
 23620  0003CA  6EE6               	movwf	postinc1,c
 23621  0003CC  EC37  F010         	call	_send_lcd_cmd_dma	;wreg free
 23622                           
 23623                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 23624                           ;stkvar	_c @ sp[(-1)+-2]
 23625  0003D0  0EFD               	movlw	-3
 23626  0003D2  006F FF8C  F035    	movff	plusw1,btemp+11
 23627                           
 23628                           ;stkvar	_row @ sp[(-1)+0]
 23629  0003D8  0EFF               	movlw	-1
 23630  0003DA  50E3               	movf	plusw1,w,c
 23631  0003DC  2435               	addwf	(btemp+11)^0,w,c
 23632  0003DE  6EE6               	movwf	postinc1,c
 23633  0003E0  EC50  F00A         	call	_send_lcd_data_dma	;wreg free
 23634                           
 23635                           ; BSR set to: 59
 23636                           ;eadog.c: 218:  wait_lcd_done();
 23637  0003E4  ECC4  F00F         	call	_wait_lcd_done	;wreg free
 23638                           
 23639                           ; BSR set to: 0
 23640                           ;eadog.c: 219:  wdtdelay(8);
 23641  0003E8  0E08               	movlw	8
 23642  0003EA  6EE6               	movwf	postinc1,c
 23643  0003EC  0E00               	movlw	0
 23644  0003EE  6EE6               	movwf	postinc1,c
 23645  0003F0  0E00               	movlw	0
 23646  0003F2  6EE6               	movwf	postinc1,c
 23647  0003F4  0E00               	movlw	0
 23648  0003F6  6EE6               	movwf	postinc1,c
 23649  0003F8  EC2B  F009         	call	_wdtdelay	;wreg free
 23650                           
 23651                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 23652                           ;stkvar	_strPtr @ sp[(-1)+-4]
 23653  0003FC  0EFB               	movlw	-5
 23654  0003FE  006F FF8F FFE6     	movff	plusw1,postinc1
 23655  000404  006F FF8F FFE6     	movff	plusw1,postinc1
 23656  00040A  EC0C  F002         	call	_eaDogM_WriteString	;wreg free
 23657                           
 23658                           ; BSR set to: 59
 23659                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 23660  00040E  0EFB               	movlw	251
 23661  000410  26E1               	addwf	fsr1l,f,c
 23662  000412  0EFF               	movlw	255
 23663  000414  22E2               	addwfc	fsr1h,f,c
 23664  000416  0012               	return		;funcret
 23665  000418                     __end_of_eaDogM_WriteStringAtPos:
 23666                           	opt callstack 0
 23667                           
 23668 ;; *************** function _send_lcd_cmd_dma *****************
 23669 ;; Defined at:
 23670 ;;		line 171 in file "eadog.c"
 23671 ;; Parameters:    Size  Location     Type
 23672 ;;  strPtr          1  [STACK] const unsigned char 
 23673 ;; Auto vars:     Size  Location     Type
 23674 ;;		None
 23675 ;; Return value:  Size  Location     Type
 23676 ;;                  1  [STACK] void 
 23677 ;; Registers used:
 23678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23679 ;; Tracked objects:
 23680 ;;		On entry : 0/3D
 23681 ;;		On exit  : 3F/0
 23682 ;;		Unchanged: 0/0
 23683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23688 ;;Total ram usage:        0 bytes
 23689 ;; Hardware stack levels used:    1
 23690 ;; Hardware stack levels required when called:   25
 23691 ;; This function calls:
 23692 ;;		_send_lcd_data_dma
 23693 ;;		_wait_lcd_done
 23694 ;; This function is called by:
 23695 ;;		_eaDogM_WriteStringAtPos
 23696 ;;		_eaDogM_WriteCommand
 23697 ;; This function uses a reentrant model
 23698 ;;
 23699                           
 23700                           	psect	text80
 23701  00206E                     __ptext80:
 23702                           	opt callstack 0
 23703  00206E                     _send_lcd_cmd_dma:
 23704                           	opt callstack 3
 23705                           
 23706                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 23707                           
 23708                           ; BSR set to: 59
 23709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23710                           ;incstack = 0
 23711  00206E  0EFE               	movlw	254
 23712  002070  6EE6               	movwf	postinc1,c
 23713  002072  EC50  F00A         	call	_send_lcd_data_dma	;wreg free
 23714                           
 23715                           ; BSR set to: 59
 23716                           ;eadog.c: 174:  wait_lcd_done();
 23717  002076  ECC4  F00F         	call	_wait_lcd_done	;wreg free
 23718                           
 23719                           ; BSR set to: 0
 23720                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 23721                           ;stkvar	_strPtr @ sp[(0)+-1]
 23722  00207A  0EFF               	movlw	-1
 23723  00207C  50E3               	movf	plusw1,w,c
 23724  00207E  6EE6               	movwf	postinc1,c
 23725  002080  EC50  F00A         	call	_send_lcd_data_dma	;wreg free
 23726                           
 23727                           ;eadog.c: 176:  wait_lcd_done();
 23728  002084  ECC4  F00F         	call	_wait_lcd_done	;wreg free
 23729                           
 23730                           ; BSR set to: 0
 23731                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 23732  002088  52E5               	movf	postdec1,f,c
 23733  00208A  0012               	return		;funcret
 23734  00208C                     __end_of_send_lcd_cmd_dma:
 23735                           	opt callstack 0
 23736                           
 23737 ;; *************** function _wait_lcd_done *****************
 23738 ;; Defined at:
 23739 ;;		line 444 in file "eadog.c"
 23740 ;; Parameters:    Size  Location     Type
 23741 ;;		None
 23742 ;; Auto vars:     Size  Location     Type
 23743 ;;		None
 23744 ;; Return value:  Size  Location     Type
 23745 ;;                  1  [STACK] void 
 23746 ;; Registers used:
 23747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 23748 ;; Tracked objects:
 23749 ;;		On entry : 0/2
 23750 ;;		On exit  : 3F/0
 23751 ;;		Unchanged: 0/0
 23752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23757 ;;Total ram usage:        0 bytes
 23758 ;; Hardware stack levels used:    1
 23759 ;; Hardware stack levels required when called:   16
 23760 ;; This function calls:
 23761 ;;		_wdtdelay
 23762 ;; This function is called by:
 23763 ;;		_main
 23764 ;;		_send_lcd_cmd_dma
 23765 ;;		_eaDogM_WriteStringAtPos
 23766 ;;		_update_lcd
 23767 ;;		_vterm_dump
 23768 ;; This function uses a reentrant model
 23769 ;;
 23770                           
 23771                           	psect	text81
 23772  001F88                     __ptext81:
 23773                           	opt callstack 0
 23774  001F88                     _wait_lcd_done:
 23775                           	opt callstack 14
 23776                           
 23777                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 23778                           
 23779                           ; BSR set to: 0
 23780                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23781                           ;incstack = 0
 23782  001F88  0100               	movlb	0	; () banked
 23783  001F8A  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 23784  001F8C  D7FD               	goto	_wait_lcd_done
 23785  001F8E                     u10820:
 23786  001F8E  013D               	movlb	61	; () banked
 23787  001F90  AB17               	btfss	23,5,b	;volatile
 23788  001F92  D7FD               	goto	u10820
 23789                           
 23790                           ; BSR set to: 61
 23791                           ;eadog.c: 448:  wdtdelay(50);
 23792  001F94  0E32               	movlw	50
 23793  001F96  6EE6               	movwf	postinc1,c
 23794  001F98  0E00               	movlw	0
 23795  001F9A  6EE6               	movwf	postinc1,c
 23796  001F9C  0E00               	movlw	0
 23797  001F9E  6EE6               	movwf	postinc1,c
 23798  001FA0  0E00               	movlw	0
 23799  001FA2  6EE6               	movwf	postinc1,c
 23800  001FA4  EC2B  F009         	call	_wdtdelay	;wreg free
 23801                           
 23802                           ; BSR set to: 0
 23803                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23804  001FA8  0012               	return		;funcret
 23805  001FAA                     __end_of_wait_lcd_done:
 23806                           	opt callstack 0
 23807                           
 23808 ;; *************** function _wdtdelay *****************
 23809 ;; Defined at:
 23810 ;;		line 23 in file "eadog.c"
 23811 ;; Parameters:    Size  Location     Type
 23812 ;;  delay           4  [STACK] const unsigned long 
 23813 ;; Auto vars:     Size  Location     Type
 23814 ;;		None
 23815 ;; Return value:  Size  Location     Type
 23816 ;;                  1  [STACK] void 
 23817 ;; Registers used:
 23818 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 23819 ;; Tracked objects:
 23820 ;;		On entry : 2/3D
 23821 ;;		On exit  : 3F/0
 23822 ;;		Unchanged: 0/0
 23823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23828 ;;Total ram usage:        0 bytes
 23829 ;; Hardware stack levels used:    1
 23830 ;; Hardware stack levels required when called:   15
 23831 ;; This function calls:
 23832 ;;		Nothing
 23833 ;; This function is called by:
 23834 ;;		_init_display
 23835 ;;		_send_lcd_data
 23836 ;;		_send_lcd_cmd
 23837 ;;		_send_lcd_cmd_long
 23838 ;;		_eaDogM_WriteStringAtPos
 23839 ;;		_wait_lcd_done
 23840 ;; This function uses a reentrant model
 23841 ;;
 23842                           
 23843                           	psect	text82
 23844  001256                     __ptext82:
 23845                           	opt callstack 0
 23846  001256                     _wdtdelay:
 23847                           	opt callstack 14
 23848                           
 23849                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 23850                           
 23851                           ; BSR set to: 0
 23852                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23853                           ;incstack = 0
 23854  001256  0100               	movlb	0	; () banked
 23855  001258  6B9A               	clrf	wdtdelay@dcount& (0+255),b
 23856  00125A  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
 23857  00125C  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
 23858  00125E  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
 23859  001260                     l1607:
 23860                           
 23861                           ; BSR set to: 0
 23862                           ;eadog.c: 28:   __nop();
 23863  001260  F000               	nop	
 23864  001262  0004               	clrwdt		;# 
 23865                           
 23866                           ;eadog.c: 30:  };
 23867  001264  0E01               	movlw	1
 23868  001266  0100               	movlb	0	; () banked
 23869  001268  279A               	addwf	wdtdelay@dcount& (0+255),f,b
 23870  00126A  0E00               	movlw	0
 23871  00126C  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 23872  00126E  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 23873  001270  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 23874                           
 23875                           ; BSR set to: 0
 23876                           ;stkvar	_delay @ sp[(0)+-4]
 23877  001272  0EFC               	movlw	-4
 23878  001274  006F FF8C  F02A    	movff	plusw1,btemp
 23879  00127A  519A               	movf	wdtdelay@dcount& (0+255),w,b
 23880  00127C  5C2A               	subwf	btemp^0,w,c
 23881  00127E  0EFD               	movlw	-3
 23882  001280  006F FF8C  F02A    	movff	plusw1,btemp
 23883  001286  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 23884  001288  582A               	subwfb	btemp^0,w,c
 23885  00128A  0EFE               	movlw	-2
 23886  00128C  006F FF8C  F02A    	movff	plusw1,btemp
 23887  001292  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 23888  001294  582A               	subwfb	btemp^0,w,c
 23889  001296  0EFF               	movlw	-1
 23890  001298  006F FF8C  F02A    	movff	plusw1,btemp
 23891  00129E  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 23892  0012A0  582A               	subwfb	btemp^0,w,c
 23893  0012A2  B0D8               	btfsc	status,0,c
 23894  0012A4  D7DD               	goto	l1607
 23895                           
 23896                           ; BSR set to: 0
 23897                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 23898  0012A6  52E5               	movf	postdec1,f,c
 23899  0012A8  52E5               	movf	postdec1,f,c
 23900  0012AA  52E5               	movf	postdec1,f,c
 23901  0012AC  52E5               	movf	postdec1,f,c
 23902  0012AE  0012               	return		;funcret
 23903  0012B0                     __end_of_wdtdelay:
 23904                           	opt callstack 0
 23905                           
 23906 ;; *************** function _send_lcd_data_dma *****************
 23907 ;; Defined at:
 23908 ;;		line 182 in file "eadog.c"
 23909 ;; Parameters:    Size  Location     Type
 23910 ;;  strPtr          1  [STACK] const unsigned char 
 23911 ;; Auto vars:     Size  Location     Type
 23912 ;;		None
 23913 ;; Return value:  Size  Location     Type
 23914 ;;                  1  [STACK] void 
 23915 ;; Registers used:
 23916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23917 ;; Tracked objects:
 23918 ;;		On entry : 0/0
 23919 ;;		On exit  : 3F/3B
 23920 ;;		Unchanged: 0/0
 23921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23926 ;;Total ram usage:        0 bytes
 23927 ;; Hardware stack levels used:    1
 23928 ;; Hardware stack levels required when called:   24
 23929 ;; This function calls:
 23930 ;;		_printf
 23931 ;;		_ringBufS_flush
 23932 ;;		_start_lcd
 23933 ;;		_wait_lcd_set
 23934 ;; This function is called by:
 23935 ;;		_send_lcd_cmd_dma
 23936 ;;		_eaDogM_WriteStringAtPos
 23937 ;; This function uses a reentrant model
 23938 ;;
 23939                           
 23940                           	psect	text83
 23941  0014A0                     __ptext83:
 23942                           	opt callstack 0
 23943  0014A0                     _send_lcd_data_dma:
 23944                           	opt callstack 4
 23945                           
 23946                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 23947                           
 23948                           ; BSR set to: 0
 23949                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23950                           ;incstack = 0
 23951  0014A0  EC63  F011         	call	_wait_lcd_set	;wreg free
 23952                           
 23953                           ; BSR set to: 0
 23954                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 23955  0014A4  0E00               	movlw	0
 23956  0014A6  6EE6               	movwf	postinc1,c
 23957  0014A8  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 23958  0014AE  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 23959  0014B4  EC92  F003         	call	_ringBufS_flush	;wreg free
 23960  0014B8  94BC               	bcf	188,2,c	;volatile
 23961                           
 23962                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 23963  0014BA  013B               	movlb	59	; () banked
 23964  0014BC  9FFC               	bcf	252,7,b	;volatile
 23965                           
 23966                           ; BSR set to: 59
 23967                           ;eadog.c: 189:  DMA1SSZ = 1;
 23968  0014BE  0E00               	movlw	0
 23969  0014C0  6FF8               	movwf	248,b	;volatile
 23970  0014C2  0E01               	movlw	1
 23971  0014C4  6FF7               	movwf	247,b	;volatile
 23972                           
 23973                           ; BSR set to: 59
 23974                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 23975  0014C6  8FFC               	bsf	252,7,b	;volatile
 23976                           
 23977                           ; BSR set to: 59
 23978                           ;eadog.c: 191:  printf("%c", strPtr);
 23979                           ;stkvar	_strPtr @ sp[(0)+-1]
 23980  0014C8  0EFF               	movlw	-1
 23981  0014CA  50E3               	movf	plusw1,w,c
 23982  0014CC  6EE6               	movwf	postinc1,c
 23983  0014CE  0E00               	movlw	0
 23984  0014D0  6EE6               	movwf	postinc1,c
 23985  0014D2  0EF8               	movlw	low STR_69
 23986  0014D4  6EE6               	movwf	postinc1,c
 23987  0014D6  0EFF               	movlw	high STR_69
 23988  0014D8  6EE6               	movwf	postinc1,c
 23989  0014DA  0E04               	movlw	4
 23990  0014DC  6EE6               	movwf	postinc1,c
 23991  0014DE  EC3D  F008         	call	_printf	;wreg free
 23992                           
 23993                           ; BSR set to: 0
 23994                           ;eadog.c: 192:  start_lcd();
 23995  0014E2  EC66  F011         	call	_start_lcd	;wreg free
 23996                           
 23997                           ; BSR set to: 59
 23998                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 23999  0014E6  52E5               	movf	postdec1,f,c
 24000  0014E8  0012               	return		;funcret
 24001  0014EA                     __end_of_send_lcd_data_dma:
 24002                           	opt callstack 0
 24003                           
 24004 ;; *************** function _eaDogM_WriteString *****************
 24005 ;; Defined at:
 24006 ;;		line 151 in file "eadog.c"
 24007 ;; Parameters:    Size  Location     Type
 24008 ;;  strPtr          2  [STACK] PTR unsigned char 
 24009 ;;		 -> D.lcd(640), D(642), V(181), 
 24010 ;; Auto vars:     Size  Location     Type
 24011 ;;		None
 24012 ;; Return value:  Size  Location     Type
 24013 ;;                  1  [STACK] void 
 24014 ;; Registers used:
 24015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24016 ;; Tracked objects:
 24017 ;;		On entry : 3F/0
 24018 ;;		On exit  : 3F/3B
 24019 ;;		Unchanged: 0/0
 24020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24025 ;;Total ram usage:        0 bytes
 24026 ;; Hardware stack levels used:    1
 24027 ;; Hardware stack levels required when called:   24
 24028 ;; This function calls:
 24029 ;;		_printf
 24030 ;;		_ringBufS_flush
 24031 ;;		_start_lcd
 24032 ;;		_strlen
 24033 ;;		_wait_lcd_set
 24034 ;; This function is called by:
 24035 ;;		_eaDogM_WriteStringAtPos
 24036 ;; This function uses a reentrant model
 24037 ;;
 24038                           
 24039                           	psect	text84
 24040  000418                     __ptext84:
 24041                           	opt callstack 0
 24042  000418                     _eaDogM_WriteString:
 24043                           	opt callstack 4
 24044                           
 24045                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 24046                           
 24047                           ; BSR set to: 59
 24048                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24049                           ;incstack = 0
 24050  000418  EC63  F011         	call	_wait_lcd_set	;wreg free
 24051                           
 24052                           ; BSR set to: 0
 24053                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 24054  00041C  0E00               	movlw	0
 24055  00041E  6EE6               	movwf	postinc1,c
 24056  000420  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 24057  000426  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 24058  00042C  EC92  F003         	call	_ringBufS_flush	;wreg free
 24059  000430  94BC               	bcf	188,2,c	;volatile
 24060                           
 24061                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 24062                           ;stkvar	_strPtr @ sp[(0)+-2]
 24063  000432  0EFE               	movlw	-2
 24064  000434  006F FF8F FFE6     	movff	plusw1,postinc1
 24065  00043A  006F FF8F FFE6     	movff	plusw1,postinc1
 24066  000440  EC5F  F002         	call	_strlen	;wreg free
 24067  000444  502B               	movf	(btemp+1)^0,w,c
 24068  000446  E104               	bnz	u15860
 24069  000448  0E41               	movlw	65
 24070  00044A  5C2A               	subwf	btemp^0,w,c
 24071  00044C  A0D8               	btfss	status,0,c
 24072  00044E  D010               	goto	l16240
 24073  000450                     u15860:
 24074                           
 24075                           ;stkvar	_strPtr @ sp[(0)+-2]
 24076  000450  0EFE               	movlw	-2
 24077  000452  006F FF8C  F034    	movff	plusw1,btemp+10
 24078  000458  0EFF               	movlw	-1
 24079  00045A  006F FF8C  F035    	movff	plusw1,btemp+11
 24080  000460  0E40               	movlw	64
 24081  000462  2434               	addwf	(btemp+10)^0,w,c
 24082  000464  6ED9               	movwf	fsr2l,c
 24083  000466  0E00               	movlw	0
 24084  000468  2035               	addwfc	(btemp+11)^0,w,c
 24085  00046A  6EDA               	movwf	fsr2h,c
 24086  00046C  0E00               	movlw	0
 24087  00046E  6EDF               	movwf	indf2,c
 24088  000470                     l16240:
 24089                           
 24090                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 24091  000470  013B               	movlb	59	; () banked
 24092  000472  9FFC               	bcf	252,7,b	;volatile
 24093                           
 24094                           ; BSR set to: 59
 24095                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 24096                           ;stkvar	_strPtr @ sp[(0)+-2]
 24097  000474  0EFE               	movlw	-2
 24098  000476  006F FF8F FFE6     	movff	plusw1,postinc1
 24099  00047C  006F FF8F FFE6     	movff	plusw1,postinc1
 24100  000482  EC5F  F002         	call	_strlen	;wreg free
 24101  000486  0060  F0AB  FBF7   	movff	btemp,15351	;volatile
 24102  00048C  0060  F0AF  FBF8   	movff	btemp+1,15352	;volatile
 24103                           
 24104                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 24105  000492  013B               	movlb	59	; () banked
 24106  000494  8FFC               	bsf	252,7,b	;volatile
 24107                           
 24108                           ; BSR set to: 59
 24109                           ;eadog.c: 161:  printf("%s", strPtr);
 24110                           ;stkvar	_strPtr @ sp[(0)+-2]
 24111  000496  0EFE               	movlw	-2
 24112  000498  006F FF8F FFE6     	movff	plusw1,postinc1
 24113  00049E  006F FF8F FFE6     	movff	plusw1,postinc1
 24114  0004A4  0EFB               	movlw	low STR_68
 24115  0004A6  6EE6               	movwf	postinc1,c
 24116  0004A8  0EFF               	movlw	high STR_68
 24117  0004AA  6EE6               	movwf	postinc1,c
 24118  0004AC  0E04               	movlw	4
 24119  0004AE  6EE6               	movwf	postinc1,c
 24120  0004B0  EC3D  F008         	call	_printf	;wreg free
 24121                           
 24122                           ; BSR set to: 0
 24123                           ;eadog.c: 162:  start_lcd();
 24124  0004B4  EC66  F011         	call	_start_lcd	;wreg free
 24125                           
 24126                           ; BSR set to: 59
 24127                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24128  0004B8  52E5               	movf	postdec1,f,c
 24129  0004BA  52E5               	movf	postdec1,f,c
 24130  0004BC  0012               	return		;funcret
 24131  0004BE                     __end_of_eaDogM_WriteString:
 24132                           	opt callstack 0
 24133                           
 24134 ;; *************** function _wait_lcd_set *****************
 24135 ;; Defined at:
 24136 ;;		line 434 in file "eadog.c"
 24137 ;; Parameters:    Size  Location     Type
 24138 ;;		None
 24139 ;; Auto vars:     Size  Location     Type
 24140 ;;		None
 24141 ;; Return value:  Size  Location     Type
 24142 ;;                  1  [STACK] void 
 24143 ;; Registers used:
 24144 ;;		None
 24145 ;; Tracked objects:
 24146 ;;		On entry : 0/0
 24147 ;;		On exit  : 3F/0
 24148 ;;		Unchanged: 0/0
 24149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24154 ;;Total ram usage:        0 bytes
 24155 ;; Hardware stack levels used:    1
 24156 ;; Hardware stack levels required when called:   15
 24157 ;; This function calls:
 24158 ;;		Nothing
 24159 ;; This function is called by:
 24160 ;;		_eaDogM_WriteString
 24161 ;;		_send_lcd_data_dma
 24162 ;; This function uses a reentrant model
 24163 ;;
 24164                           
 24165                           	psect	text85
 24166  0022C6                     __ptext85:
 24167                           	opt callstack 0
 24168  0022C6                     _wait_lcd_set:
 24169                           	opt callstack 12
 24170                           
 24171                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 24172                           
 24173                           ; BSR set to: 59
 24174                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24175                           ;incstack = 0
 24176  0022C6  0100               	movlb	0	; () banked
 24177  0022C8  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 24178                           
 24179                           ; BSR set to: 0
 24180                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24181  0022CA  0012               	return		;funcret
 24182  0022CC                     __end_of_wait_lcd_set:
 24183                           	opt callstack 0
 24184                           
 24185 ;; *************** function _start_lcd *****************
 24186 ;; Defined at:
 24187 ;;		line 429 in file "eadog.c"
 24188 ;; Parameters:    Size  Location     Type
 24189 ;;		None
 24190 ;; Auto vars:     Size  Location     Type
 24191 ;;		None
 24192 ;; Return value:  Size  Location     Type
 24193 ;;                  1  [STACK] void 
 24194 ;; Registers used:
 24195 ;;		None
 24196 ;; Tracked objects:
 24197 ;;		On entry : 3F/0
 24198 ;;		On exit  : 3F/3B
 24199 ;;		Unchanged: 0/0
 24200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24205 ;;Total ram usage:        0 bytes
 24206 ;; Hardware stack levels used:    1
 24207 ;; Hardware stack levels required when called:   15
 24208 ;; This function calls:
 24209 ;;		Nothing
 24210 ;; This function is called by:
 24211 ;;		_eaDogM_WriteString
 24212 ;;		_send_lcd_data_dma
 24213 ;; This function uses a reentrant model
 24214 ;;
 24215                           
 24216                           	psect	text86
 24217  0022CC                     __ptext86:
 24218                           	opt callstack 0
 24219  0022CC                     _start_lcd:
 24220                           	opt callstack 12
 24221                           
 24222                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 24223                           
 24224                           ; BSR set to: 0
 24225                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24226                           ;incstack = 0
 24227  0022CC  013B               	movlb	59	; () banked
 24228  0022CE  8DFC               	bsf	252,6,b	;volatile
 24229                           
 24230                           ; BSR set to: 59
 24231                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 24232  0022D0  0012               	return		;funcret
 24233  0022D2                     __end_of_start_lcd:
 24234                           	opt callstack 0
 24235                           
 24236 ;; *************** function _ringBufS_flush *****************
 24237 ;; Defined at:
 24238 ;;		line 76 in file "ringbufs.c"
 24239 ;; Parameters:    Size  Location     Type
 24240 ;;  _this           2  [STACK] PTR struct ringBufS_t
 24241 ;;		 -> ring_buf1(67), 
 24242 ;;  clearBuffer     1  [STACK] const char 
 24243 ;; Auto vars:     Size  Location     Type
 24244 ;;		None
 24245 ;; Return value:  Size  Location     Type
 24246 ;;                  1  [STACK] void 
 24247 ;; Registers used:
 24248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 24249 ;; Tracked objects:
 24250 ;;		On entry : 3F/0
 24251 ;;		On exit  : 0/0
 24252 ;;		Unchanged: 0/0
 24253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24258 ;;Total ram usage:        0 bytes
 24259 ;; Hardware stack levels used:    1
 24260 ;; Hardware stack levels required when called:   16
 24261 ;; This function calls:
 24262 ;;		_memset
 24263 ;; This function is called by:
 24264 ;;		_eaDogM_WriteString
 24265 ;;		_send_lcd_data_dma
 24266 ;; This function uses a reentrant model
 24267 ;;
 24268                           
 24269                           	psect	text87
 24270  000724                     __ptext87:
 24271                           	opt callstack 0
 24272  000724                     _ringBufS_flush:
 24273                           	opt callstack 11
 24274                           
 24275                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 24276                           ;stkvar	__this @ sp[(0)+-2]
 24277                           
 24278                           ; BSR set to: 59
 24279                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24280                           ;incstack = 0
 24281  000724  0EFE               	movlw	-2
 24282  000726  006F FF8C  F034    	movff	plusw1,btemp+10
 24283  00072C  0EFF               	movlw	-1
 24284  00072E  006F FF8C  F035    	movff	plusw1,btemp+11
 24285  000734  0E42               	movlw	66
 24286  000736  2434               	addwf	(btemp+10)^0,w,c
 24287  000738  6ED9               	movwf	fsr2l,c
 24288  00073A  0E00               	movlw	0
 24289  00073C  2035               	addwfc	(btemp+11)^0,w,c
 24290  00073E  6EDA               	movwf	fsr2h,c
 24291  000740  0E00               	movlw	0
 24292  000742  6EDF               	movwf	indf2,c
 24293                           
 24294                           ;ringbufs.c: 79:  _this->head = 0;
 24295                           ;stkvar	__this @ sp[(0)+-2]
 24296  000744  0EFE               	movlw	-2
 24297  000746  006F FF8C  F034    	movff	plusw1,btemp+10
 24298  00074C  0EFF               	movlw	-1
 24299  00074E  006F FF8C  F035    	movff	plusw1,btemp+11
 24300  000754  0E40               	movlw	64
 24301  000756  2434               	addwf	(btemp+10)^0,w,c
 24302  000758  6ED9               	movwf	fsr2l,c
 24303  00075A  0E00               	movlw	0
 24304  00075C  2035               	addwfc	(btemp+11)^0,w,c
 24305  00075E  6EDA               	movwf	fsr2h,c
 24306  000760  0E00               	movlw	0
 24307  000762  6EDF               	movwf	indf2,c
 24308                           
 24309                           ;ringbufs.c: 80:  _this->tail = 0;
 24310                           ;stkvar	__this @ sp[(0)+-2]
 24311  000764  0EFE               	movlw	-2
 24312  000766  006F FF8C  F034    	movff	plusw1,btemp+10
 24313  00076C  0EFF               	movlw	-1
 24314  00076E  006F FF8C  F035    	movff	plusw1,btemp+11
 24315  000774  0E41               	movlw	65
 24316  000776  2434               	addwf	(btemp+10)^0,w,c
 24317  000778  6ED9               	movwf	fsr2l,c
 24318  00077A  0E00               	movlw	0
 24319  00077C  2035               	addwfc	(btemp+11)^0,w,c
 24320  00077E  6EDA               	movwf	fsr2h,c
 24321  000780  0E00               	movlw	0
 24322  000782  6EDF               	movwf	indf2,c
 24323                           
 24324                           ;ringbufs.c: 81:  if (clearBuffer) {
 24325                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 24326  000784  0EFD               	movlw	-3
 24327  000786  50E3               	movf	plusw1,w,c
 24328  000788  B4D8               	btfsc	status,2,c
 24329  00078A  D011               	goto	l1739
 24330                           
 24331                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 24332  00078C  0E40               	movlw	64
 24333  00078E  6EE6               	movwf	postinc1,c
 24334  000790  0E00               	movlw	0
 24335  000792  6EE6               	movwf	postinc1,c
 24336  000794  0E00               	movlw	0
 24337  000796  6EE6               	movwf	postinc1,c
 24338  000798  0E00               	movlw	0
 24339  00079A  6EE6               	movwf	postinc1,c
 24340                           
 24341                           ;stkvar	__this @ sp[(-4)+-2]
 24342  00079C  0EFA               	movlw	-6
 24343  00079E  006F FF8F FFE6     	movff	plusw1,postinc1
 24344  0007A4  006F FF8F FFE6     	movff	plusw1,postinc1
 24345  0007AA  EC73  F0D5         	call	_memset	;wreg free
 24346  0007AE                     l1739:
 24347                           
 24348                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 24349  0007AE  52E5               	movf	postdec1,f,c
 24350  0007B0  52E5               	movf	postdec1,f,c
 24351  0007B2  52E5               	movf	postdec1,f,c
 24352  0007B4  0012               	return		;funcret
 24353  0007B6                     __end_of_ringBufS_flush:
 24354                           	opt callstack 0
 24355                           
 24356 ;; *************** function _memset *****************
 24357 ;; Defined at:
 24358 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 24359 ;; Parameters:    Size  Location     Type
 24360 ;;  dest            2  [STACK] PTR void 
 24361 ;;		 -> ring_buf2(67), ring_buf1(67), 
 24362 ;;  c               2  [STACK] int 
 24363 ;;  n               2  [STACK] unsigned int 
 24364 ;; Auto vars:     Size  Location     Type
 24365 ;;  s               2  [STACK] PTR unsigned char 
 24366 ;;		 -> ring_buf2(67), ring_buf1(67), 
 24367 ;;  k               2  [STACK] unsigned int 
 24368 ;; Return value:  Size  Location     Type
 24369 ;;                  2  [STACK] PTR void 
 24370 ;; Registers used:
 24371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 24372 ;; Tracked objects:
 24373 ;;		On entry : 0/0
 24374 ;;		On exit  : 0/0
 24375 ;;		Unchanged: 0/0
 24376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24381 ;;Total ram usage:        0 bytes
 24382 ;; Hardware stack levels used:    1
 24383 ;; Hardware stack levels required when called:   15
 24384 ;; This function calls:
 24385 ;;		Nothing
 24386 ;; This function is called by:
 24387 ;;		_ringBufS_init
 24388 ;;		_ringBufS_flush
 24389 ;; This function uses a reentrant model
 24390 ;;
 24391                           
 24392                           	psect	text88
 24393  01AAE6                     __ptext88:
 24394                           	opt callstack 0
 24395  01AAE6                     _memset:
 24396                           	opt callstack 0
 24397                           
 24398                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24399  01AAE6  52E6               	movf	postinc1,f,c
 24400  01AAE8  52E6               	movf	postinc1,f,c
 24401  01AAEA  52E6               	movf	postinc1,f,c
 24402  01AAEC  52E6               	movf	postinc1,f,c
 24403                           
 24404                           ;stkvar	_dest @ sp[(-4)+-2]
 24405                           
 24406                           ;incstack = 0
 24407  01AAEE  0EFA               	movlw	-6
 24408  01AAF0  006F FF8C  F034    	movff	plusw1,btemp+10
 24409  01AAF6  0EFB               	movlw	-5
 24410  01AAF8  006F FF8C  F035    	movff	plusw1,btemp+11
 24411                           
 24412                           ;stkvar	_s @ sp[(-4)+0]
 24413  01AAFE  0EFD               	movlw	-3
 24414  01AB00  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24415  01AB06  0EFC               	movlw	-4
 24416  01AB08  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 24417                           
 24418                           ;stkvar	_n @ sp[(-4)+-6]
 24419  01AB0E  0EF6               	movlw	-10
 24420  01AB10  006F FF8C  F02A    	movff	plusw1,btemp
 24421  01AB16  0EF7               	movlw	-9
 24422  01AB18  50E3               	movf	plusw1,w,c
 24423  01AB1A  102A               	iorwf	btemp^0,w,c
 24424  01AB1C  B4D8               	btfsc	status,2,c
 24425  01AB1E  D154               	goto	u14190
 24426                           
 24427                           ;stkvar	_c @ sp[(-4)+-4]
 24428                           ;stkvar	_s @ sp[(-4)+0]
 24429  01AB20  0EFC               	movlw	-4
 24430  01AB22  006F FF8F FFD9     	movff	plusw1,fsr2l
 24431  01AB28  0EFD               	movlw	-3
 24432  01AB2A  006F FF8F FFDA     	movff	plusw1,fsr2h
 24433  01AB30  0EF8               	movlw	-8
 24434  01AB32  006F FF8F FFDF     	movff	plusw1,indf2
 24435                           
 24436                           ;stkvar	_c @ sp[(-4)+-4]
 24437                           ;stkvar	_n @ sp[(-4)+-6]
 24438                           ;stkvar	_s @ sp[(-4)+0]
 24439  01AB38  0EFC               	movlw	-4
 24440  01AB3A  006F FF8C  F034    	movff	plusw1,btemp+10
 24441  01AB40  0EFD               	movlw	-3
 24442  01AB42  006F FF8C  F035    	movff	plusw1,btemp+11
 24443  01AB48  0EF6               	movlw	-10
 24444  01AB4A  50E3               	movf	plusw1,w,c
 24445  01AB4C  2634               	addwf	(btemp+10)^0,f,c
 24446  01AB4E  0EF7               	movlw	-9
 24447  01AB50  50E3               	movf	plusw1,w,c
 24448  01AB52  2235               	addwfc	(btemp+11)^0,f,c
 24449  01AB54  0EFF               	movlw	255
 24450  01AB56  2434               	addwf	(btemp+10)^0,w,c
 24451  01AB58  6ED9               	movwf	fsr2l,c
 24452  01AB5A  0EFF               	movlw	255
 24453  01AB5C  2035               	addwfc	(btemp+11)^0,w,c
 24454  01AB5E  6EDA               	movwf	fsr2h,c
 24455  01AB60  0EF8               	movlw	-8
 24456  01AB62  006F FF8F FFDF     	movff	plusw1,indf2
 24457                           
 24458                           ;stkvar	_n @ sp[(-4)+-6]
 24459  01AB68  0EF7               	movlw	-9
 24460  01AB6A  50E3               	movf	plusw1,w,c
 24461  01AB6C  E108               	bnz	l15254
 24462  01AB6E  0EF6               	movlw	-10
 24463  01AB70  006F FF8C  F02A    	movff	plusw1,btemp
 24464  01AB76  0E03               	movlw	3
 24465  01AB78  5E2A               	subwf	btemp^0,f,c
 24466  01AB7A  A0D8               	btfss	status,0,c
 24467  01AB7C  D125               	goto	u14190
 24468  01AB7E                     l15254:
 24469                           
 24470                           ;stkvar	_c @ sp[(-4)+-4]
 24471                           ;stkvar	_s @ sp[(-4)+0]
 24472  01AB7E  0EFC               	movlw	-4
 24473  01AB80  006F FF8C  F034    	movff	plusw1,btemp+10
 24474  01AB86  0EFD               	movlw	-3
 24475  01AB88  006F FF8C  F035    	movff	plusw1,btemp+11
 24476  01AB8E  0E01               	movlw	1
 24477  01AB90  2434               	addwf	(btemp+10)^0,w,c
 24478  01AB92  6ED9               	movwf	fsr2l,c
 24479  01AB94  0E00               	movlw	0
 24480  01AB96  2035               	addwfc	(btemp+11)^0,w,c
 24481  01AB98  6EDA               	movwf	fsr2h,c
 24482  01AB9A  0EF8               	movlw	-8
 24483  01AB9C  006F FF8F FFDF     	movff	plusw1,indf2
 24484                           
 24485                           ;stkvar	_c @ sp[(-4)+-4]
 24486                           ;stkvar	_s @ sp[(-4)+0]
 24487  01ABA2  0EFC               	movlw	-4
 24488  01ABA4  006F FF8C  F034    	movff	plusw1,btemp+10
 24489  01ABAA  0EFD               	movlw	-3
 24490  01ABAC  006F FF8C  F035    	movff	plusw1,btemp+11
 24491  01ABB2  0E02               	movlw	2
 24492  01ABB4  2434               	addwf	(btemp+10)^0,w,c
 24493  01ABB6  6ED9               	movwf	fsr2l,c
 24494  01ABB8  0E00               	movlw	0
 24495  01ABBA  2035               	addwfc	(btemp+11)^0,w,c
 24496  01ABBC  6EDA               	movwf	fsr2h,c
 24497  01ABBE  0EF8               	movlw	-8
 24498  01ABC0  006F FF8F FFDF     	movff	plusw1,indf2
 24499                           
 24500                           ;stkvar	_c @ sp[(-4)+-4]
 24501                           ;stkvar	_n @ sp[(-4)+-6]
 24502                           ;stkvar	_s @ sp[(-4)+0]
 24503  01ABC6  0EFC               	movlw	-4
 24504  01ABC8  006F FF8C  F034    	movff	plusw1,btemp+10
 24505  01ABCE  0EFD               	movlw	-3
 24506  01ABD0  006F FF8C  F035    	movff	plusw1,btemp+11
 24507  01ABD6  0EF6               	movlw	-10
 24508  01ABD8  50E3               	movf	plusw1,w,c
 24509  01ABDA  2634               	addwf	(btemp+10)^0,f,c
 24510  01ABDC  0EF7               	movlw	-9
 24511  01ABDE  50E3               	movf	plusw1,w,c
 24512  01ABE0  2235               	addwfc	(btemp+11)^0,f,c
 24513  01ABE2  0EFE               	movlw	254
 24514  01ABE4  2434               	addwf	(btemp+10)^0,w,c
 24515  01ABE6  6ED9               	movwf	fsr2l,c
 24516  01ABE8  0EFF               	movlw	255
 24517  01ABEA  2035               	addwfc	(btemp+11)^0,w,c
 24518  01ABEC  6EDA               	movwf	fsr2h,c
 24519  01ABEE  0EF8               	movlw	-8
 24520  01ABF0  006F FF8F FFDF     	movff	plusw1,indf2
 24521                           
 24522                           ;stkvar	_c @ sp[(-4)+-4]
 24523                           ;stkvar	_n @ sp[(-4)+-6]
 24524                           ;stkvar	_s @ sp[(-4)+0]
 24525  01ABF6  0EFC               	movlw	-4
 24526  01ABF8  006F FF8C  F034    	movff	plusw1,btemp+10
 24527  01ABFE  0EFD               	movlw	-3
 24528  01AC00  006F FF8C  F035    	movff	plusw1,btemp+11
 24529  01AC06  0EF6               	movlw	-10
 24530  01AC08  50E3               	movf	plusw1,w,c
 24531  01AC0A  2634               	addwf	(btemp+10)^0,f,c
 24532  01AC0C  0EF7               	movlw	-9
 24533  01AC0E  50E3               	movf	plusw1,w,c
 24534  01AC10  2235               	addwfc	(btemp+11)^0,f,c
 24535  01AC12  0EFD               	movlw	253
 24536  01AC14  2434               	addwf	(btemp+10)^0,w,c
 24537  01AC16  6ED9               	movwf	fsr2l,c
 24538  01AC18  0EFF               	movlw	255
 24539  01AC1A  2035               	addwfc	(btemp+11)^0,w,c
 24540  01AC1C  6EDA               	movwf	fsr2h,c
 24541  01AC1E  0EF8               	movlw	-8
 24542  01AC20  006F FF8F FFDF     	movff	plusw1,indf2
 24543                           
 24544                           ;stkvar	_n @ sp[(-4)+-6]
 24545  01AC26  0EF7               	movlw	-9
 24546  01AC28  50E3               	movf	plusw1,w,c
 24547  01AC2A  E108               	bnz	l15260
 24548  01AC2C  0EF6               	movlw	-10
 24549  01AC2E  006F FF8C  F02A    	movff	plusw1,btemp
 24550  01AC34  0E07               	movlw	7
 24551  01AC36  5E2A               	subwf	btemp^0,f,c
 24552  01AC38  A0D8               	btfss	status,0,c
 24553  01AC3A  D0C6               	goto	u14190
 24554  01AC3C                     l15260:
 24555                           
 24556                           ;stkvar	_c @ sp[(-4)+-4]
 24557                           ;stkvar	_s @ sp[(-4)+0]
 24558  01AC3C  0EFC               	movlw	-4
 24559  01AC3E  006F FF8C  F034    	movff	plusw1,btemp+10
 24560  01AC44  0EFD               	movlw	-3
 24561  01AC46  006F FF8C  F035    	movff	plusw1,btemp+11
 24562  01AC4C  0E03               	movlw	3
 24563  01AC4E  2434               	addwf	(btemp+10)^0,w,c
 24564  01AC50  6ED9               	movwf	fsr2l,c
 24565  01AC52  0E00               	movlw	0
 24566  01AC54  2035               	addwfc	(btemp+11)^0,w,c
 24567  01AC56  6EDA               	movwf	fsr2h,c
 24568  01AC58  0EF8               	movlw	-8
 24569  01AC5A  006F FF8F FFDF     	movff	plusw1,indf2
 24570                           
 24571                           ;stkvar	_c @ sp[(-4)+-4]
 24572                           ;stkvar	_n @ sp[(-4)+-6]
 24573                           ;stkvar	_s @ sp[(-4)+0]
 24574  01AC60  0EFC               	movlw	-4
 24575  01AC62  006F FF8C  F034    	movff	plusw1,btemp+10
 24576  01AC68  0EFD               	movlw	-3
 24577  01AC6A  006F FF8C  F035    	movff	plusw1,btemp+11
 24578  01AC70  0EF6               	movlw	-10
 24579  01AC72  50E3               	movf	plusw1,w,c
 24580  01AC74  2634               	addwf	(btemp+10)^0,f,c
 24581  01AC76  0EF7               	movlw	-9
 24582  01AC78  50E3               	movf	plusw1,w,c
 24583  01AC7A  2235               	addwfc	(btemp+11)^0,f,c
 24584  01AC7C  0EFC               	movlw	252
 24585  01AC7E  2434               	addwf	(btemp+10)^0,w,c
 24586  01AC80  6ED9               	movwf	fsr2l,c
 24587  01AC82  0EFF               	movlw	255
 24588  01AC84  2035               	addwfc	(btemp+11)^0,w,c
 24589  01AC86  6EDA               	movwf	fsr2h,c
 24590  01AC88  0EF8               	movlw	-8
 24591  01AC8A  006F FF8F FFDF     	movff	plusw1,indf2
 24592                           
 24593                           ;stkvar	_n @ sp[(-4)+-6]
 24594  01AC90  0EF7               	movlw	-9
 24595  01AC92  50E3               	movf	plusw1,w,c
 24596  01AC94  E108               	bnz	l15266
 24597  01AC96  0EF6               	movlw	-10
 24598  01AC98  006F FF8C  F02A    	movff	plusw1,btemp
 24599  01AC9E  0E09               	movlw	9
 24600  01ACA0  5E2A               	subwf	btemp^0,f,c
 24601  01ACA2  A0D8               	btfss	status,0,c
 24602  01ACA4  D091               	goto	u14190
 24603  01ACA6                     l15266:
 24604                           
 24605                           ;stkvar	_s @ sp[(-4)+0]
 24606  01ACA6  0EFC               	movlw	-4
 24607  01ACA8  006F FF8C  F034    	movff	plusw1,btemp+10
 24608  01ACAE  1E34               	comf	(btemp+10)^0,f,c
 24609  01ACB0  0EFD               	movlw	-3
 24610  01ACB2  006F FF8C  F035    	movff	plusw1,btemp+11
 24611  01ACB8  1E35               	comf	(btemp+11)^0,f,c
 24612  01ACBA  2A34               	incf	(btemp+10)^0,f,c
 24613  01ACBC  B4D8               	btfsc	status,2,c
 24614  01ACBE  2A35               	incf	(btemp+11)^0,f,c
 24615  01ACC0  0E03               	movlw	3
 24616  01ACC2  1634               	andwf	(btemp+10)^0,f,c
 24617  01ACC4  0E00               	movlw	0
 24618  01ACC6  1635               	andwf	(btemp+11)^0,f,c
 24619                           
 24620                           ;stkvar	_k @ sp[(-4)+2]
 24621  01ACC8  0EFE               	movlw	-2
 24622  01ACCA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 24623  01ACD0  0EFF               	movlw	-1
 24624  01ACD2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24625                           
 24626                           ;stkvar	_k @ sp[(-4)+2]
 24627                           ;stkvar	_s @ sp[(-4)+0]
 24628  01ACD8  0EFC               	movlw	-4
 24629  01ACDA  50E3               	movf	plusw1,w,c
 24630  01ACDC  6E2A               	movwf	btemp^0,c
 24631  01ACDE  0EFE               	movlw	-2
 24632  01ACE0  50E3               	movf	plusw1,w,c
 24633  01ACE2  262A               	addwf	btemp^0,f,c
 24634  01ACE4  0EFC               	movlw	-4
 24635  01ACE6  0060  F0AB  FFE3   	movff	btemp,plusw1
 24636  01ACEC  0EFD               	movlw	-3
 24637  01ACEE  50E3               	movf	plusw1,w,c
 24638  01ACF0  6E2A               	movwf	btemp^0,c
 24639  01ACF2  0EFF               	movlw	-1
 24640  01ACF4  50E3               	movf	plusw1,w,c
 24641  01ACF6  222A               	addwfc	btemp^0,f,c
 24642  01ACF8  0EFD               	movlw	-3
 24643  01ACFA  0060  F0AB  FFE3   	movff	btemp,plusw1
 24644                           
 24645                           ;stkvar	_k @ sp[(-4)+2]
 24646                           ;stkvar	_n @ sp[(-4)+-6]
 24647  01AD00  0EF6               	movlw	-10
 24648  01AD02  50E3               	movf	plusw1,w,c
 24649  01AD04  6E2A               	movwf	btemp^0,c
 24650  01AD06  0EFE               	movlw	-2
 24651  01AD08  50E3               	movf	plusw1,w,c
 24652  01AD0A  5E2A               	subwf	btemp^0,f,c
 24653  01AD0C  0EF6               	movlw	-10
 24654  01AD0E  0060  F0AB  FFE3   	movff	btemp,plusw1
 24655  01AD14  0EF7               	movlw	-9
 24656  01AD16  50E3               	movf	plusw1,w,c
 24657  01AD18  6E2A               	movwf	btemp^0,c
 24658  01AD1A  0EFF               	movlw	-1
 24659  01AD1C  50E3               	movf	plusw1,w,c
 24660  01AD1E  5A2A               	subwfb	btemp^0,f,c
 24661  01AD20  0EF7               	movlw	-9
 24662  01AD22  0060  F0AB  FFE3   	movff	btemp,plusw1
 24663  01AD28  0EFC               	movlw	252
 24664  01AD2A  6E34               	movwf	(btemp+10)^0,c
 24665  01AD2C  0EFF               	movlw	255
 24666  01AD2E  6E35               	movwf	(btemp+11)^0,c
 24667                           
 24668                           ;stkvar	_n @ sp[(-4)+-6]
 24669  01AD30  0EF6               	movlw	-10
 24670  01AD32  006F FF8C  F02A    	movff	plusw1,btemp
 24671  01AD38  5034               	movf	(btemp+10)^0,w,c
 24672  01AD3A  162A               	andwf	btemp^0,f,c
 24673  01AD3C  0EF6               	movlw	-10
 24674  01AD3E  0060  F0AB  FFE3   	movff	btemp,plusw1
 24675  01AD44  0EF7               	movlw	-9
 24676  01AD46  006F FF8C  F02A    	movff	plusw1,btemp
 24677  01AD4C  5035               	movf	(btemp+11)^0,w,c
 24678  01AD4E  162A               	andwf	btemp^0,f,c
 24679  01AD50  0EF7               	movlw	-9
 24680  01AD52  D02E               	goto	L23
 24681  01AD54                     l15274:
 24682                           
 24683                           ;stkvar	_c @ sp[(-4)+-4]
 24684                           ;stkvar	_s @ sp[(-4)+0]
 24685  01AD54  0EFC               	movlw	-4
 24686  01AD56  006F FF8F FFD9     	movff	plusw1,fsr2l
 24687  01AD5C  0EFD               	movlw	-3
 24688  01AD5E  006F FF8F FFDA     	movff	plusw1,fsr2h
 24689  01AD64  0EF8               	movlw	-8
 24690  01AD66  006F FF8F FFDF     	movff	plusw1,indf2
 24691                           
 24692                           ;stkvar	_n @ sp[(-4)+-6]
 24693  01AD6C  0EF6               	movlw	-10
 24694  01AD6E  006F FF8C  F02A    	movff	plusw1,btemp
 24695  01AD74  0E01               	movlw	1
 24696  01AD76  5E2A               	subwf	btemp^0,f,c
 24697  01AD78  0EF6               	movlw	-10
 24698  01AD7A  0060  F0AB  FFE3   	movff	btemp,plusw1
 24699  01AD80  0EF7               	movlw	-9
 24700  01AD82  006F FF8C  F02A    	movff	plusw1,btemp
 24701  01AD88  0E00               	movlw	0
 24702  01AD8A  5A2A               	subwfb	btemp^0,f,c
 24703  01AD8C  0EF7               	movlw	-9
 24704  01AD8E  0060  F0AB  FFE3   	movff	btemp,plusw1
 24705                           
 24706                           ;stkvar	_s @ sp[(-4)+0]
 24707  01AD94  0EFC               	movlw	-4
 24708  01AD96  50E3               	movf	plusw1,w,c
 24709  01AD98  0F01               	addlw	1
 24710  01AD9A  6E2A               	movwf	btemp^0,c
 24711  01AD9C  0EFC               	movlw	-4
 24712  01AD9E  0060  F0AB  FFE3   	movff	btemp,plusw1
 24713  01ADA4  6A2A               	clrf	btemp^0,c
 24714  01ADA6  0EFD               	movlw	-3
 24715  01ADA8  50E3               	movf	plusw1,w,c
 24716  01ADAA  202A               	addwfc	btemp^0,w,c
 24717  01ADAC  6E2A               	movwf	btemp^0,c
 24718  01ADAE  0EFD               	movlw	-3
 24719  01ADB0                     L23:
 24720  01ADB0  0060  F0AB  FFE3   	movff	btemp,plusw1
 24721                           
 24722                           ;stkvar	_n @ sp[(-4)+-6]
 24723  01ADB6  0EF6               	movlw	-10
 24724  01ADB8  006F FF8C  F02A    	movff	plusw1,btemp
 24725  01ADBE  0EF7               	movlw	-9
 24726  01ADC0  50E3               	movf	plusw1,w,c
 24727  01ADC2  102A               	iorwf	btemp^0,w,c
 24728  01ADC4  A4D8               	btfss	status,2,c
 24729  01ADC6  D7C6               	goto	l15274
 24730  01ADC8                     u14190:
 24731                           
 24732                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 24733  01ADC8  0EF6               	movlw	246
 24734  01ADCA  26E1               	addwf	fsr1l,f,c
 24735  01ADCC  0EFF               	movlw	255
 24736  01ADCE  22E2               	addwfc	fsr1h,f,c
 24737  01ADD0  0012               	return		;funcret
 24738  01ADD2                     __end_of_memset:
 24739                           	opt callstack 0
 24740                           
 24741 ;; *************** function _printf *****************
 24742 ;; Defined at:
 24743 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 24744 ;; Parameters:    Size  Location     Type
 24745 ;;  fmt             2  [STACK] PTR const unsigned char 
 24746 ;;		 -> STR_69(3), STR_68(3), 
 24747 ;; Auto vars:     Size  Location     Type
 24748 ;;  ap              2  [STACK] PTR void [1]
 24749 ;;		 -> ?_printf(2), ?_sprintf(2), 
 24750 ;;  ret             2    0        int 
 24751 ;; Return value:  Size  Location     Type
 24752 ;;                  2  [STACK] int 
 24753 ;; Registers used:
 24754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24755 ;; Tracked objects:
 24756 ;;		On entry : 3F/3B
 24757 ;;		On exit  : 3F/0
 24758 ;;		Unchanged: 0/0
 24759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24764 ;;Total ram usage:        0 bytes
 24765 ;; Hardware stack levels used:    1
 24766 ;; Hardware stack levels required when called:   23
 24767 ;; This function calls:
 24768 ;;		_vfprintf
 24769 ;; This function is called by:
 24770 ;;		_eaDogM_WriteString
 24771 ;;		_send_lcd_data_dma
 24772 ;; This function uses a reentrant model
 24773 ;;
 24774                           
 24775                           	psect	text89
 24776  00107A                     __ptext89:
 24777                           	opt callstack 0
 24778  00107A                     _printf:
 24779                           	opt callstack 0
 24780                           
 24781                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24782  00107A  52E6               	movf	postinc1,f,c
 24783  00107C  52E6               	movf	postinc1,f,c
 24784                           
 24785                           ;stkvar	?_printf @ sp[(-2)+-3]
 24786                           
 24787                           ;incstack = 0
 24788  00107E  0EFB               	movlw	251
 24789  001080  24E1               	addwf	fsr1l,w,c
 24790  001082  6E34               	movwf	(btemp+10)^0,c
 24791  001084  0EFF               	movlw	255
 24792  001086  20E2               	addwfc	fsr1h,w,c
 24793  001088  6E35               	movwf	(btemp+11)^0,c
 24794                           
 24795                           ;stkvar	_ap @ sp[(-2)+0]
 24796  00108A  0EFF               	movlw	-1
 24797  00108C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24798  001092  0EFE               	movlw	-2
 24799  001094  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 24800                           
 24801                           ;stkvar	_ap @ sp[(-2)+0]
 24802  00109A  0EFE               	movlw	254
 24803  00109C  24E1               	addwf	fsr1l,w,c
 24804  00109E  6E2A               	movwf	btemp^0,c
 24805  0010A0  0EFF               	movlw	255
 24806  0010A2  20E2               	addwfc	fsr1h,w,c
 24807  0010A4  6E2B               	movwf	(btemp+1)^0,c
 24808  0010A6  0060  F0AB  FFE6   	movff	btemp,postinc1
 24809  0010AC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24810                           
 24811                           ;stkvar	_fmt @ sp[(-4)+-3]
 24812  0010B2  0EF9               	movlw	-7
 24813  0010B4  006F FF8F FFE6     	movff	plusw1,postinc1
 24814  0010BA  006F FF8F FFE6     	movff	plusw1,postinc1
 24815  0010C0  0E00               	movlw	0
 24816  0010C2  6EE6               	movwf	postinc1,c
 24817  0010C4  0E00               	movlw	0
 24818  0010C6  6EE6               	movwf	postinc1,c
 24819  0010C8  EC0D  F001         	call	_vfprintf	;wreg free
 24820                           
 24821                           ; BSR set to: 0
 24822                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 24823  0010CC  52E5               	movf	postdec1,f,c
 24824  0010CE  52E5               	movf	postdec1,f,c
 24825  0010D0  52E5               	movf	postdec1,f,c
 24826  0010D2  50E7               	movf	indf1,w,c
 24827  0010D4  5EE1               	subwf	fsr1l,f,c
 24828  0010D6  0E00               	movlw	0
 24829  0010D8  5AE2               	subwfb	fsr1h,f,c
 24830  0010DA  0012               	return		;funcret
 24831  0010DC                     __end_of_printf:
 24832                           	opt callstack 0
 24833                           
 24834 ;; *************** function _vfprintf *****************
 24835 ;; Defined at:
 24836 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 24837 ;; Parameters:    Size  Location     Type
 24838 ;;  fp              2  [STACK] PTR struct _IO_FILE
 24839 ;;		 -> f(6), NULL(0), 
 24840 ;;  fmt             2  [STACK] PTR const unsigned char 
 24841 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(19), 
 24842 ;;		 -> STR_85(19), STR_84(19), STR_83(19), STR_82(19), 
 24843 ;;		 -> STR_81(19), STR_80(24), STR_79(15), STR_78(15), 
 24844 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 24845 ;;		 -> STR_73(19), STR_72(19), STR_69(3), STR_68(3), 
 24846 ;;		 -> STR_67(14), STR_66(21), STR_65(21), STR_64(21), 
 24847 ;;		 -> STR_63(21), STR_62(21), STR_61(21), STR_60(21), 
 24848 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 24849 ;;		 -> STR_55(21), STR_54(20), STR_53(21), STR_52(21), 
 24850 ;;		 -> STR_51(21), STR_50(22), STR_49(22), STR_48(22), 
 24851 ;;		 -> STR_47(23), STR_46(23), STR_45(23), STR_44(29), 
 24852 ;;		 -> STR_43(23), STR_42(23), STR_41(22), STR_40(22), 
 24853 ;;		 -> STR_39(22), STR_38(22), STR_37(22), STR_36(22), 
 24854 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 24855 ;;		 -> STR_31(22), STR_30(22), STR_29(17), STR_28(16), 
 24856 ;;		 -> STR_27(16), STR_26(21), STR_25(21), STR_24(21), 
 24857 ;;		 -> STR_23(26), STR_22(26), STR_21(22), STR_20(21), 
 24858 ;;		 -> STR_19(21), STR_18(21), STR_17(21), STR_16(22), 
 24859 ;;		 -> STR_15(22), STR_14(22), STR_13(26), STR_12(21), 
 24860 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 24861 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 24862 ;;		 -> STR_2(21), STR_1(21), 
 24863 ;;  ap              2  [STACK] PTR PTR void 
 24864 ;;		 -> ap(2), ap(2), 
 24865 ;; Auto vars:     Size  Location     Type
 24866 ;;  cfmt            2  [STACK] PTR unsigned char 
 24867 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(19), 
 24868 ;;		 -> STR_85(19), STR_84(19), STR_83(19), STR_82(19), 
 24869 ;;		 -> STR_81(19), STR_80(24), STR_79(15), STR_78(15), 
 24870 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 24871 ;;		 -> STR_73(19), STR_72(19), STR_69(3), STR_68(3), 
 24872 ;;		 -> STR_67(14), STR_66(21), STR_65(21), STR_64(21), 
 24873 ;;		 -> STR_63(21), STR_62(21), STR_61(21), STR_60(21), 
 24874 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 24875 ;;		 -> STR_55(21), STR_54(20), STR_53(21), STR_52(21), 
 24876 ;;		 -> STR_51(21), STR_50(22), STR_49(22), STR_48(22), 
 24877 ;;		 -> STR_47(23), STR_46(23), STR_45(23), STR_44(29), 
 24878 ;;		 -> STR_43(23), STR_42(23), STR_41(22), STR_40(22), 
 24879 ;;		 -> STR_39(22), STR_38(22), STR_37(22), STR_36(22), 
 24880 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 24881 ;;		 -> STR_31(22), STR_30(22), STR_29(17), STR_28(16), 
 24882 ;;		 -> STR_27(16), STR_26(21), STR_25(21), STR_24(21), 
 24883 ;;		 -> STR_23(26), STR_22(26), STR_21(22), STR_20(21), 
 24884 ;;		 -> STR_19(21), STR_18(21), STR_17(21), STR_16(22), 
 24885 ;;		 -> STR_15(22), STR_14(22), STR_13(26), STR_12(21), 
 24886 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 24887 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 24888 ;;		 -> STR_2(21), STR_1(21), 
 24889 ;; Return value:  Size  Location     Type
 24890 ;;                  2  [STACK] int 
 24891 ;; Registers used:
 24892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24893 ;; Tracked objects:
 24894 ;;		On entry : 0/2
 24895 ;;		On exit  : 3F/0
 24896 ;;		Unchanged: 0/0
 24897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24902 ;;Total ram usage:        0 bytes
 24903 ;; Hardware stack levels used:    1
 24904 ;; Hardware stack levels required when called:   22
 24905 ;; This function calls:
 24906 ;;		_vfpfcnvrt
 24907 ;; This function is called by:
 24908 ;;		_sprintf
 24909 ;;		_printf
 24910 ;; This function uses a reentrant model
 24911 ;;
 24912                           
 24913                           	psect	text90
 24914  00021A                     __ptext90:
 24915                           	opt callstack 0
 24916  00021A                     _vfprintf:
 24917                           	opt callstack 0
 24918                           
 24919                           ; BSR set to: 0
 24920                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24921  00021A  52E6               	movf	postinc1,f,c
 24922  00021C  52E6               	movf	postinc1,f,c
 24923                           
 24924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 24925                           ;stkvar	_fmt @ sp[(-2)+-4]
 24926                           
 24927                           ;incstack = 0
 24928 ;; hardware stack exceeded
 24929  00021E  0EFA               	movlw	-6
 24930  000220  006F FF8C  F034    	movff	plusw1,btemp+10
 24931  000226  0EFB               	movlw	-5
 24932  000228  006F FF8C  F035    	movff	plusw1,btemp+11
 24933                           
 24934                           ;stkvar	_cfmt @ sp[(-2)+0]
 24935  00022E  0EFF               	movlw	-1
 24936  000230  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24937  000236  0EFE               	movlw	-2
 24938  000238  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 24939                           
 24940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 24941  00023E  0100               	movlb	0	; () banked
 24942  000240  6BC4               	clrf	_nout& (0+255),b
 24943  000242  6BC5               	clrf	(_nout+1)& (0+255),b
 24944                           
 24945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 24946  000244  D021               	goto	l16262
 24947  000246                     l16260:
 24948                           
 24949                           ; BSR set to: 0
 24950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 24951                           ;stkvar	_ap @ sp[(-2)+-6]
 24952  000246  0EF8               	movlw	-8
 24953  000248  006F FF8F FFE6     	movff	plusw1,postinc1
 24954  00024E  006F FF8F FFE6     	movff	plusw1,postinc1
 24955                           
 24956                           ;stkvar	_cfmt @ sp[(-4)+0]
 24957  000254  0EFC               	movlw	252
 24958  000256  24E1               	addwf	fsr1l,w,c
 24959  000258  6E2A               	movwf	btemp^0,c
 24960  00025A  0EFF               	movlw	255
 24961  00025C  20E2               	addwfc	fsr1h,w,c
 24962  00025E  6E2B               	movwf	(btemp+1)^0,c
 24963  000260  0060  F0AB  FFE6   	movff	btemp,postinc1
 24964  000266  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24965                           
 24966                           ;stkvar	_fp @ sp[(-6)+-2]
 24967  00026C  0EF8               	movlw	-8
 24968  00026E  006F FF8F FFE6     	movff	plusw1,postinc1
 24969  000274  006F FF8F FFE6     	movff	plusw1,postinc1
 24970  00027A  ECAB  F09B         	call	_vfpfcnvrt	;wreg free
 24971  00027E  502A               	movf	btemp^0,w,c
 24972  000280  0100               	movlb	0	; () banked
 24973  000282  27C4               	addwf	_nout& (0+255),f,b
 24974  000284  502B               	movf	(btemp+1)^0,w,c
 24975  000286  23C5               	addwfc	(_nout+1)& (0+255),f,b
 24976  000288                     l16262:
 24977                           
 24978                           ; BSR set to: 0
 24979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 24980                           ;stkvar	_cfmt @ sp[(-2)+0]
 24981  000288  50E1               	movf	fsr1l,w,c
 24982  00028A  0FFE               	addlw	-2
 24983  00028C  6ED9               	movwf	fsr2l,c
 24984  00028E  50E2               	movf	fsr1h,w,c
 24985  000290  6EDA               	movwf	fsr2h,c
 24986  000292  0EFF               	movlw	255
 24987  000294  22DA               	addwfc	fsr2h,f,c
 24988  000296  006F FF7B FFF6     	movff	postinc2,tblptrl
 24989  00029C  006F FF77 FFF7     	movff	postdec2,tblptrh
 24990  0002A2                     	if	0	;tblptru may be non-zero
 24991  0002A2                     	endif
 24992  0002A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24993  0002A2  0E00               	movlw	low (__mediumconst shr (0+16))
 24994  0002A4  6EF8               	movwf	tblptru,c
 24995  0002A6                     	endif
 24996  0002A6  0008               	tblrd		*
 24997  0002A8  50F5               	movf	tablat,w,c
 24998  0002AA  0900               	iorlw	0
 24999  0002AC  A4D8               	btfss	status,2,c
 25000  0002AE  D7CB               	goto	l16260
 25001                           
 25002                           ; BSR set to: 0
 25003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 25004  0002B0  0060  F310  F02A   	movff	_nout,btemp
 25005  0002B6  0060  F314  F02B   	movff	_nout+1,btemp+1
 25006                           
 25007                           ; BSR set to: 0
 25008                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 25009  0002BC  0EF8               	movlw	248
 25010  0002BE  26E1               	addwf	fsr1l,f,c
 25011  0002C0  0EFF               	movlw	255
 25012  0002C2  22E2               	addwfc	fsr1h,f,c
 25013  0002C4  0012               	return		;funcret
 25014  0002C6                     __end_of_vfprintf:
 25015                           	opt callstack 0
 25016                           
 25017 ;; *************** function _vfpfcnvrt *****************
 25018 ;; Defined at:
 25019 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25020 ;; Parameters:    Size  Location     Type
 25021 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25022 ;;		 -> f(6), NULL(0), 
 25023 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 25024 ;;		 -> cfmt(2), 
 25025 ;;  ap              2  [STACK] PTR PTR void 
 25026 ;;		 -> ap(2), ap(2), 
 25027 ;; Auto vars:     Size  Location     Type
 25028 ;;  llu             8  [STACK] unsigned long long 
 25029 ;;  ll              8  [STACK] long long 
 25030 ;;  f               4  [STACK] long long 
 25031 ;;  ct              3  [STACK] unsigned char [3]
 25032 ;;  vp              3    0        PTR void 
 25033 ;;  cp              2  [STACK] PTR unsigned char 
 25034 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_71(9), 
 25035 ;;		 -> STR_70(12), D.lcd(640), D(642), T(176), 
 25036 ;;		 -> STR_3(5), V(181), 
 25037 ;;  i               2    0        int 
 25038 ;;  done            2    0        int 
 25039 ;;  c               1  [STACK] unsigned char 
 25040 ;; Return value:  Size  Location     Type
 25041 ;;                  2  [STACK] int 
 25042 ;; Registers used:
 25043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25044 ;; Tracked objects:
 25045 ;;		On entry : 0/0
 25046 ;;		On exit  : 0/0
 25047 ;;		Unchanged: 0/0
 25048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25053 ;;Total ram usage:        0 bytes
 25054 ;; Hardware stack levels used:    1
 25055 ;; Hardware stack levels required when called:   21
 25056 ;; This function calls:
 25057 ;;		_atoi
 25058 ;;		_ctoa
 25059 ;;		_dtoa
 25060 ;;		_efgtoa
 25061 ;;		_fputc
 25062 ;;		_isdigit
 25063 ;;		_isupper
 25064 ;;		_stoa
 25065 ;;		_strncmp
 25066 ;;		_tolower
 25067 ;;		_utoa
 25068 ;;		_xtoa
 25069 ;; This function is called by:
 25070 ;;		_vfprintf
 25071 ;; This function uses a reentrant model
 25072 ;;
 25073                           
 25074                           	psect	text91
 25075  013756                     __ptext91:
 25076                           	opt callstack 0
 25077  013756                     _vfpfcnvrt:
 25078                           	opt callstack 0
 25079                           
 25080                           ; BSR set to: 0
 25081                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25082  013756  0E20               	movlw	32
 25083  013758  26E1               	addwf	fsr1l,f,c
 25084  01375A  0E00               	movlw	0
 25085  01375C  22E2               	addwfc	fsr1h,f,c
 25086                           
 25087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 25088                           ;stkvar	_fmt @ sp[(-32)+-4]
 25089                           
 25090                           ;incstack = 0
 25091 ;; hardware stack exceeded
 25092  01375E  0EDC               	movlw	-36
 25093  013760  006F FF8F FFD9     	movff	plusw1,fsr2l
 25094  013766  0EDD               	movlw	-35
 25095  013768  006F FF8F FFDA     	movff	plusw1,fsr2h
 25096  01376E  006F FF7B FFF6     	movff	postinc2,tblptrl
 25097  013774  006F FF77 FFF7     	movff	postdec2,tblptrh
 25098  01377A                     	if	0	;tblptru may be non-zero
 25099  01377A                     	endif
 25100  01377A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25101  01377A  0E00               	movlw	low (__mediumconst shr (0+16))
 25102  01377C  6EF8               	movwf	tblptru,c
 25103  01377E                     	endif
 25104  01377E  0008               	tblrd		*
 25105  013780  50F5               	movf	tablat,w,c
 25106  013782  0A25               	xorlw	37
 25107  013784  A4D8               	btfss	status,2,c
 25108  013786  EF52  F0A3         	goto	l16144
 25109                           
 25110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 25111                           ;stkvar	_fmt @ sp[(-32)+-4]
 25112  01378A  0EDC               	movlw	-36
 25113  01378C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25114  013792  0EDD               	movlw	-35
 25115  013794  006F FF8F FFDA     	movff	plusw1,fsr2h
 25116  01379A  2ADE               	incf	postinc2,f,c
 25117  01379C  0E00               	movlw	0
 25118  01379E  22DD               	addwfc	postdec2,f,c
 25119                           
 25120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 25121  0137A0  6A4A               	clrf	_width^0,c
 25122  0137A2  6A4B               	clrf	(_width+1)^0,c
 25123  0137A4  6A4E               	clrf	_flags^0,c
 25124  0137A6  6A4F               	clrf	(_flags+1)^0,c
 25125                           
 25126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 25127  0137A8  684C               	setf	_prec^0,c
 25128  0137AA  684D               	setf	(_prec+1)^0,c
 25129                           
 25130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 25131                           ;stkvar	_fmt @ sp[(-32)+-4]
 25132  0137AC  0EDC               	movlw	-36
 25133  0137AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 25134  0137B4  0EDD               	movlw	-35
 25135  0137B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 25136  0137BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 25137  0137C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 25138  0137C8                     	if	0	;tblptru may be non-zero
 25139  0137C8                     	endif
 25140  0137C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25141  0137C8  0E00               	movlw	low (__mediumconst shr (0+16))
 25142  0137CA  6EF8               	movwf	tblptru,c
 25143  0137CC                     	endif
 25144  0137CC  0008               	tblrd		*
 25145  0137CE  50F5               	movf	tablat,w,c
 25146  0137D0  0A2A               	xorlw	42
 25147  0137D2  A4D8               	btfss	status,2,c
 25148  0137D4  D031               	goto	l15962
 25149                           
 25150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 25151                           ;stkvar	_fmt @ sp[(-32)+-4]
 25152  0137D6  0EDC               	movlw	-36
 25153  0137D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 25154  0137DE  0EDD               	movlw	-35
 25155  0137E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 25156  0137E6  2ADE               	incf	postinc2,f,c
 25157  0137E8  0E00               	movlw	0
 25158  0137EA  22DD               	addwfc	postdec2,f,c
 25159                           
 25160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 25161                           ;stkvar	_ap @ sp[(-32)+-6]
 25162  0137EC  0EDA               	movlw	-38
 25163  0137EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 25164  0137F4  0EDB               	movlw	-37
 25165  0137F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 25166  0137FC  0E02               	movlw	2
 25167  0137FE  5EDE               	subwf	postinc2,f,c
 25168  013800  0E00               	movlw	0
 25169  013802  5ADD               	subwfb	postdec2,f,c
 25170  013804  006F FF78  F034    	movff	postinc2,btemp+10
 25171  01380A  006F FF74  F035    	movff	postdec2,btemp+11
 25172  013810  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 25173  013816  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 25174  01381C  006F FF78  F04A    	movff	postinc2,_width
 25175  013822  006F FF74  F04B    	movff	postdec2,_width+1
 25176                           
 25177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 25178  013828  AE4B               	btfss	(_width+1)^0,7,c
 25179  01382A  D066               	goto	u15460
 25180                           
 25181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 25182  01382C  804E               	bsf	_flags^0,0,c
 25183                           
 25184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 25185  01382E  6C4A               	negf	_width^0,c
 25186  013830  1E4B               	comf	(_width+1)^0,f,c
 25187  013832  B0D8               	btfsc	status,0,c
 25188  013834  2A4B               	incf	(_width+1)^0,f,c
 25189  013836  D060               	goto	u15460
 25190  013838                     l15962:
 25191                           
 25192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 25193                           ;stkvar	_fmt @ sp[(-32)+-4]
 25194  013838  0EDC               	movlw	-36
 25195  01383A  006F FF8F FFD9     	movff	plusw1,fsr2l
 25196  013840  0EDD               	movlw	-35
 25197  013842  006F FF8F FFDA     	movff	plusw1,fsr2h
 25198  013848  006F FF78  F034    	movff	postinc2,btemp+10
 25199  01384E  006F FF74  F035    	movff	postdec2,btemp+11
 25200  013854  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25201  01385A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25202  013860  EC74  F0DD         	call	_atoi	;wreg free
 25203  013864  0060  F0A8  F04A   	movff	btemp,_width
 25204  01386A  0060  F0AC  F04B   	movff	btemp+1,_width+1
 25205                           
 25206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 25207  013870  D00B               	goto	l15966
 25208  013872                     l15964:
 25209                           
 25210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 25211                           ;stkvar	_fmt @ sp[(-32)+-4]
 25212  013872  0EDC               	movlw	-36
 25213  013874  006F FF8F FFD9     	movff	plusw1,fsr2l
 25214  01387A  0EDD               	movlw	-35
 25215  01387C  006F FF8F FFDA     	movff	plusw1,fsr2h
 25216  013882  2ADE               	incf	postinc2,f,c
 25217  013884  0E00               	movlw	0
 25218  013886  22DD               	addwfc	postdec2,f,c
 25219  013888                     l15966:
 25220  013888  0ED0               	movlw	208
 25221  01388A  6E34               	movwf	(btemp+10)^0,c
 25222  01388C  0EFF               	movlw	255
 25223  01388E  6E35               	movwf	(btemp+11)^0,c
 25224                           
 25225                           ;stkvar	_fmt @ sp[(-32)+-4]
 25226  013890  0EDC               	movlw	-36
 25227  013892  006F FF8F FFD9     	movff	plusw1,fsr2l
 25228  013898  0EDD               	movlw	-35
 25229  01389A  006F FF8F FFDA     	movff	plusw1,fsr2h
 25230  0138A0  006F FF7B FFF6     	movff	postinc2,tblptrl
 25231  0138A6  006F FF77 FFF7     	movff	postdec2,tblptrh
 25232  0138AC                     	if	0	;tblptru may be non-zero
 25233  0138AC                     	endif
 25234  0138AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25235  0138AC  0E00               	movlw	low (__mediumconst shr (0+16))
 25236  0138AE  6EF8               	movwf	tblptru,c
 25237  0138B0                     	endif
 25238  0138B0  0008               	tblrd		*
 25239  0138B2  50F5               	movf	tablat,w,c
 25240  0138B4  6E32               	movwf	(btemp+8)^0,c
 25241  0138B6  6A33               	clrf	(btemp+9)^0,c
 25242  0138B8  5034               	movf	(btemp+10)^0,w,c
 25243  0138BA  2632               	addwf	(btemp+8)^0,f,c
 25244  0138BC  5035               	movf	(btemp+11)^0,w,c
 25245  0138BE  2233               	addwfc	(btemp+9)^0,f,c
 25246  0138C0  5033               	movf	(btemp+9)^0,w,c
 25247  0138C2  E106               	bnz	u15440
 25248  0138C4  0E0A               	movlw	10
 25249  0138C6  5C32               	subwf	(btemp+8)^0,w,c
 25250  0138C8  B0D8               	btfsc	status,0,c
 25251  0138CA  D002               	goto	u15440
 25252  0138CC  0E01               	movlw	1
 25253  0138CE  D001               	goto	u15450
 25254  0138D0                     u15440:
 25255  0138D0  0E00               	movlw	0
 25256  0138D2                     u15450:
 25257  0138D2  6E34               	movwf	(btemp+10)^0,c
 25258  0138D4  6A35               	clrf	(btemp+11)^0,c
 25259                           
 25260                           ;stkvar	_vfpfcnvrt$6885 @ sp[(-32)+4]
 25261  0138D6  0EE4               	movlw	-28
 25262  0138D8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25263  0138DE  0EE5               	movlw	-27
 25264  0138E0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25265                           
 25266                           ;stkvar	_vfpfcnvrt$6885 @ sp[(-32)+4]
 25267  0138E6  0EE4               	movlw	-28
 25268  0138E8  006F FF8C  F02A    	movff	plusw1,btemp
 25269  0138EE  0EE5               	movlw	-27
 25270  0138F0  50E3               	movf	plusw1,w,c
 25271  0138F2  102A               	iorwf	btemp^0,w,c
 25272  0138F4  A4D8               	btfss	status,2,c
 25273  0138F6  D7BD               	goto	l15964
 25274  0138F8                     u15460:
 25275                           
 25276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 25277                           ;stkvar	_fmt @ sp[(-32)+-4]
 25278  0138F8  0EDC               	movlw	-36
 25279  0138FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 25280  013900  0EDD               	movlw	-35
 25281  013902  006F FF8F FFDA     	movff	plusw1,fsr2h
 25282  013908  006F FF7B FFF6     	movff	postinc2,tblptrl
 25283  01390E  006F FF77 FFF7     	movff	postdec2,tblptrh
 25284  013914                     	if	0	;tblptru may be non-zero
 25285  013914                     	endif
 25286  013914                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25287  013914  0E00               	movlw	low (__mediumconst shr (0+16))
 25288  013916  6EF8               	movwf	tblptru,c
 25289  013918                     	endif
 25290  013918  0008               	tblrd		*
 25291  01391A  50F5               	movf	tablat,w,c
 25292  01391C  0A2E               	xorlw	46
 25293  01391E  A4D8               	btfss	status,2,c
 25294  013920  D0AC               	goto	u15510
 25295                           
 25296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 25297  013922  6A4C               	clrf	_prec^0,c
 25298  013924  6A4D               	clrf	(_prec+1)^0,c
 25299                           
 25300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 25301                           ;stkvar	_fmt @ sp[(-32)+-4]
 25302  013926  0EDC               	movlw	-36
 25303  013928  006F FF8F FFD9     	movff	plusw1,fsr2l
 25304  01392E  0EDD               	movlw	-35
 25305  013930  006F FF8F FFDA     	movff	plusw1,fsr2h
 25306  013936  2ADE               	incf	postinc2,f,c
 25307  013938  0E00               	movlw	0
 25308  01393A  22DD               	addwfc	postdec2,f,c
 25309                           
 25310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 25311                           ;stkvar	_fmt @ sp[(-32)+-4]
 25312  01393C  0EDC               	movlw	-36
 25313  01393E  006F FF8F FFD9     	movff	plusw1,fsr2l
 25314  013944  0EDD               	movlw	-35
 25315  013946  006F FF8F FFDA     	movff	plusw1,fsr2h
 25316  01394C  006F FF7B FFF6     	movff	postinc2,tblptrl
 25317  013952  006F FF77 FFF7     	movff	postdec2,tblptrh
 25318  013958                     	if	0	;tblptru may be non-zero
 25319  013958                     	endif
 25320  013958                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25321  013958  0E00               	movlw	low (__mediumconst shr (0+16))
 25322  01395A  6EF8               	movwf	tblptru,c
 25323  01395C                     	endif
 25324  01395C  0008               	tblrd		*
 25325  01395E  50F5               	movf	tablat,w,c
 25326  013960  0A2A               	xorlw	42
 25327  013962  A4D8               	btfss	status,2,c
 25328  013964  D02A               	goto	l15984
 25329                           
 25330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 25331                           ;stkvar	_fmt @ sp[(-32)+-4]
 25332  013966  0EDC               	movlw	-36
 25333  013968  006F FF8F FFD9     	movff	plusw1,fsr2l
 25334  01396E  0EDD               	movlw	-35
 25335  013970  006F FF8F FFDA     	movff	plusw1,fsr2h
 25336  013976  2ADE               	incf	postinc2,f,c
 25337  013978  0E00               	movlw	0
 25338  01397A  22DD               	addwfc	postdec2,f,c
 25339                           
 25340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 25341                           ;stkvar	_ap @ sp[(-32)+-6]
 25342  01397C  0EDA               	movlw	-38
 25343  01397E  006F FF8F FFD9     	movff	plusw1,fsr2l
 25344  013984  0EDB               	movlw	-37
 25345  013986  006F FF8F FFDA     	movff	plusw1,fsr2h
 25346  01398C  0E02               	movlw	2
 25347  01398E  5EDE               	subwf	postinc2,f,c
 25348  013990  0E00               	movlw	0
 25349  013992  5ADD               	subwfb	postdec2,f,c
 25350  013994  006F FF78  F034    	movff	postinc2,btemp+10
 25351  01399A  006F FF74  F035    	movff	postdec2,btemp+11
 25352  0139A0  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 25353  0139A6  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 25354  0139AC  006F FF78  F04C    	movff	postinc2,_prec
 25355  0139B2  006F FF74  F04D    	movff	postdec2,_prec+1
 25356                           
 25357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 25358  0139B8  D060               	goto	u15510
 25359  0139BA                     l15984:
 25360                           
 25361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 25362                           ;stkvar	_fmt @ sp[(-32)+-4]
 25363  0139BA  0EDC               	movlw	-36
 25364  0139BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 25365  0139C2  0EDD               	movlw	-35
 25366  0139C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 25367  0139CA  006F FF78  F034    	movff	postinc2,btemp+10
 25368  0139D0  006F FF74  F035    	movff	postdec2,btemp+11
 25369  0139D6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25370  0139DC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25371  0139E2  EC74  F0DD         	call	_atoi	;wreg free
 25372  0139E6  0060  F0A8  F04C   	movff	btemp,_prec
 25373  0139EC  0060  F0AC  F04D   	movff	btemp+1,_prec+1
 25374                           
 25375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 25376  0139F2  D00B               	goto	l15988
 25377  0139F4                     l15986:
 25378                           
 25379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 25380                           ;stkvar	_fmt @ sp[(-32)+-4]
 25381  0139F4  0EDC               	movlw	-36
 25382  0139F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 25383  0139FC  0EDD               	movlw	-35
 25384  0139FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 25385  013A04  2ADE               	incf	postinc2,f,c
 25386  013A06  0E00               	movlw	0
 25387  013A08  22DD               	addwfc	postdec2,f,c
 25388  013A0A                     l15988:
 25389  013A0A  0ED0               	movlw	208
 25390  013A0C  6E34               	movwf	(btemp+10)^0,c
 25391  013A0E  0EFF               	movlw	255
 25392  013A10  6E35               	movwf	(btemp+11)^0,c
 25393                           
 25394                           ;stkvar	_fmt @ sp[(-32)+-4]
 25395  013A12  0EDC               	movlw	-36
 25396  013A14  006F FF8F FFD9     	movff	plusw1,fsr2l
 25397  013A1A  0EDD               	movlw	-35
 25398  013A1C  006F FF8F FFDA     	movff	plusw1,fsr2h
 25399  013A22  006F FF7B FFF6     	movff	postinc2,tblptrl
 25400  013A28  006F FF77 FFF7     	movff	postdec2,tblptrh
 25401  013A2E                     	if	0	;tblptru may be non-zero
 25402  013A2E                     	endif
 25403  013A2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25404  013A2E  0E00               	movlw	low (__mediumconst shr (0+16))
 25405  013A30  6EF8               	movwf	tblptru,c
 25406  013A32                     	endif
 25407  013A32  0008               	tblrd		*
 25408  013A34  50F5               	movf	tablat,w,c
 25409  013A36  6E32               	movwf	(btemp+8)^0,c
 25410  013A38  6A33               	clrf	(btemp+9)^0,c
 25411  013A3A  5034               	movf	(btemp+10)^0,w,c
 25412  013A3C  2632               	addwf	(btemp+8)^0,f,c
 25413  013A3E  5035               	movf	(btemp+11)^0,w,c
 25414  013A40  2233               	addwfc	(btemp+9)^0,f,c
 25415  013A42  5033               	movf	(btemp+9)^0,w,c
 25416  013A44  E106               	bnz	u15490
 25417  013A46  0E0A               	movlw	10
 25418  013A48  5C32               	subwf	(btemp+8)^0,w,c
 25419  013A4A  B0D8               	btfsc	status,0,c
 25420  013A4C  D002               	goto	u15490
 25421  013A4E  0E01               	movlw	1
 25422  013A50  D001               	goto	u15500
 25423  013A52                     u15490:
 25424  013A52  0E00               	movlw	0
 25425  013A54                     u15500:
 25426  013A54  6E34               	movwf	(btemp+10)^0,c
 25427  013A56  6A35               	clrf	(btemp+11)^0,c
 25428                           
 25429                           ;stkvar	_vfpfcnvrt$6886 @ sp[(-32)+0]
 25430  013A58  0EE0               	movlw	-32
 25431  013A5A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25432  013A60  0EE1               	movlw	-31
 25433  013A62  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25434                           
 25435                           ;stkvar	_vfpfcnvrt$6886 @ sp[(-32)+0]
 25436  013A68  0EE0               	movlw	-32
 25437  013A6A  006F FF8C  F02A    	movff	plusw1,btemp
 25438  013A70  0EE1               	movlw	-31
 25439  013A72  50E3               	movf	plusw1,w,c
 25440  013A74  102A               	iorwf	btemp^0,w,c
 25441  013A76  A4D8               	btfss	status,2,c
 25442  013A78  D7BD               	goto	l15986
 25443  013A7A                     u15510:
 25444                           
 25445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 25446                           ;stkvar	_fmt @ sp[(-32)+-4]
 25447  013A7A  0EDC               	movlw	-36
 25448  013A7C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25449  013A82  0EDD               	movlw	-35
 25450  013A84  006F FF8F FFDA     	movff	plusw1,fsr2h
 25451  013A8A  006F FF7B FFF6     	movff	postinc2,tblptrl
 25452  013A90  006F FF77 FFF7     	movff	postdec2,tblptrh
 25453  013A96                     	if	0	;tblptru may be non-zero
 25454  013A96                     	endif
 25455  013A96                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25456  013A96  0E00               	movlw	low (__mediumconst shr (0+16))
 25457  013A98  6EF8               	movwf	tblptru,c
 25458  013A9A                     	endif
 25459  013A9A  0008               	tblrd		*
 25460  013A9C  50F5               	movf	tablat,w,c
 25461  013A9E  6EE6               	movwf	postinc1,c
 25462  013AA0  0E00               	movlw	0
 25463  013AA2  6EE6               	movwf	postinc1,c
 25464  013AA4  ECF3  F004         	call	_tolower	;wreg free
 25465                           
 25466                           ;stkvar	_ct @ sp[(-32)+26]
 25467  013AA8  0EFA               	movlw	-6
 25468  013AAA  0060  F0AB  FFE3   	movff	btemp,plusw1
 25469                           
 25470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 25471                           ;stkvar	_ct @ sp[(-32)+26]
 25472  013AB0  0EFA               	movlw	-6
 25473  013AB2  50E3               	movf	plusw1,w,c
 25474  013AB4  B4D8               	btfsc	status,2,c
 25475  013AB6  D05B               	goto	l16004
 25476                           
 25477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 25478                           ;stkvar	_ct @ sp[(-32)+26]
 25479  013AB8  0EFB               	movlw	251
 25480  013ABA  24E1               	addwf	fsr1l,w,c
 25481  013ABC  6ED9               	movwf	fsr2l,c
 25482  013ABE  0EFF               	movlw	255
 25483  013AC0  20E2               	addwfc	fsr1h,w,c
 25484  013AC2  6EDA               	movwf	fsr2h,c
 25485                           
 25486                           ;stkvar	_fmt @ sp[(-32)+-4]
 25487  013AC4  0EDC               	movlw	-36
 25488  013AC6  006F FF8F FFE9     	movff	plusw1,fsr0l
 25489  013ACC  0EDD               	movlw	-35
 25490  013ACE  006F FF8F FFEA     	movff	plusw1,fsr0h
 25491  013AD4  006F FFB8  F034    	movff	postinc0,btemp+10
 25492  013ADA  006F FFB4  F035    	movff	postdec0,btemp+11
 25493  013AE0  0E01               	movlw	1
 25494  013AE2  2634               	addwf	(btemp+10)^0,f,c
 25495  013AE4  0E00               	movlw	0
 25496  013AE6  2235               	addwfc	(btemp+11)^0,f,c
 25497  013AE8  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 25498  013AEE  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 25499  013AF4                     	if	0	;tblptru may be non-zero
 25500  013AF4                     	endif
 25501  013AF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25502  013AF4  0E00               	movlw	low (__mediumconst shr (0+16))
 25503  013AF6  6EF8               	movwf	tblptru,c
 25504  013AF8                     	endif
 25505  013AF8  0008               	tblrd		*
 25506  013AFA  50F5               	movf	tablat,w,c
 25507  013AFC  6EE6               	movwf	postinc1,c
 25508  013AFE  0E00               	movlw	0
 25509  013B00  6EE6               	movwf	postinc1,c
 25510  013B02  ECF3  F004         	call	_tolower	;wreg free
 25511  013B06  502A               	movf	btemp^0,w,c
 25512  013B08  6EDF               	movwf	indf2,c
 25513                           
 25514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 25515                           ;stkvar	_ct @ sp[(-32)+26]
 25516  013B0A  0EFB               	movlw	251
 25517  013B0C  24E1               	addwf	fsr1l,w,c
 25518  013B0E  6ED9               	movwf	fsr2l,c
 25519  013B10  0EFF               	movlw	255
 25520  013B12  20E2               	addwfc	fsr1h,w,c
 25521  013B14  6EDA               	movwf	fsr2h,c
 25522  013B16  50DF               	movf	indf2,w,c
 25523  013B18  B4D8               	btfsc	status,2,c
 25524  013B1A  D029               	goto	l16004
 25525                           
 25526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 25527                           ;stkvar	_ct @ sp[(-32)+26]
 25528  013B1C  0EFC               	movlw	252
 25529  013B1E  24E1               	addwf	fsr1l,w,c
 25530  013B20  6ED9               	movwf	fsr2l,c
 25531  013B22  0EFF               	movlw	255
 25532  013B24  20E2               	addwfc	fsr1h,w,c
 25533  013B26  6EDA               	movwf	fsr2h,c
 25534                           
 25535                           ;stkvar	_fmt @ sp[(-32)+-4]
 25536  013B28  0EDC               	movlw	-36
 25537  013B2A  006F FF8F FFE9     	movff	plusw1,fsr0l
 25538  013B30  0EDD               	movlw	-35
 25539  013B32  006F FF8F FFEA     	movff	plusw1,fsr0h
 25540  013B38  006F FFB8  F034    	movff	postinc0,btemp+10
 25541  013B3E  006F FFB4  F035    	movff	postdec0,btemp+11
 25542  013B44  0E02               	movlw	2
 25543  013B46  2634               	addwf	(btemp+10)^0,f,c
 25544  013B48  0E00               	movlw	0
 25545  013B4A  2235               	addwfc	(btemp+11)^0,f,c
 25546  013B4C  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 25547  013B52  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 25548  013B58                     	if	0	;tblptru may be non-zero
 25549  013B58                     	endif
 25550  013B58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25551  013B58  0E00               	movlw	low (__mediumconst shr (0+16))
 25552  013B5A  6EF8               	movwf	tblptru,c
 25553  013B5C                     	endif
 25554  013B5C  0008               	tblrd		*
 25555  013B5E  50F5               	movf	tablat,w,c
 25556  013B60  6EE6               	movwf	postinc1,c
 25557  013B62  0E00               	movlw	0
 25558  013B64  6EE6               	movwf	postinc1,c
 25559  013B66  ECF3  F004         	call	_tolower	;wreg free
 25560  013B6A  502A               	movf	btemp^0,w,c
 25561  013B6C  6EDF               	movwf	indf2,c
 25562  013B6E                     l16004:
 25563                           
 25564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 25565                           ;stkvar	_fmt @ sp[(-32)+-4]
 25566  013B6E  0EDC               	movlw	-36
 25567  013B70  006F FF8F FFD9     	movff	plusw1,fsr2l
 25568  013B76  0EDD               	movlw	-35
 25569  013B78  006F FF8F FFDA     	movff	plusw1,fsr2h
 25570  013B7E  006F FF7B FFF6     	movff	postinc2,tblptrl
 25571  013B84  006F FF77 FFF7     	movff	postdec2,tblptrh
 25572  013B8A                     	if	0	;tblptru may be non-zero
 25573  013B8A                     	endif
 25574  013B8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25575  013B8A  0E00               	movlw	low (__mediumconst shr (0+16))
 25576  013B8C  6EF8               	movwf	tblptru,c
 25577  013B8E                     	endif
 25578  013B8E  0008               	tblrd		*
 25579  013B90  50F5               	movf	tablat,w,c
 25580  013B92  0A63               	xorlw	99
 25581  013B94  A4D8               	btfss	status,2,c
 25582  013B96  D037               	goto	l16014
 25583                           
 25584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 25585                           ;stkvar	_fmt @ sp[(-32)+-4]
 25586  013B98  0EDC               	movlw	-36
 25587  013B9A  006F FF8F FFD9     	movff	plusw1,fsr2l
 25588  013BA0  0EDD               	movlw	-35
 25589  013BA2  006F FF8F FFDA     	movff	plusw1,fsr2h
 25590  013BA8  2ADE               	incf	postinc2,f,c
 25591  013BAA  0E00               	movlw	0
 25592  013BAC  22DD               	addwfc	postdec2,f,c
 25593                           
 25594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 25595                           ;stkvar	_ap @ sp[(-32)+-6]
 25596  013BAE  0EDA               	movlw	-38
 25597  013BB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 25598  013BB6  0EDB               	movlw	-37
 25599  013BB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 25600  013BBE  0E02               	movlw	2
 25601  013BC0  5EDE               	subwf	postinc2,f,c
 25602  013BC2  0E00               	movlw	0
 25603  013BC4  5ADD               	subwfb	postdec2,f,c
 25604  013BC6  006F FF78  F034    	movff	postinc2,btemp+10
 25605  013BCC  006F FF74  F035    	movff	postdec2,btemp+11
 25606  013BD2  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 25607  013BD8  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 25608  013BDE  50DF               	movf	indf2,w,c
 25609  013BE0  6E35               	movwf	(btemp+11)^0,c
 25610                           
 25611                           ;stkvar	_c @ sp[(-32)+31]
 25612  013BE2  0EFF               	movlw	-1
 25613  013BE4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25614                           
 25615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 25616                           ;stkvar	_c @ sp[(-32)+31]
 25617  013BEA  0EFF               	movlw	-1
 25618  013BEC  50E3               	movf	plusw1,w,c
 25619  013BEE  6EE6               	movwf	postinc1,c
 25620                           
 25621                           ;stkvar	_fp @ sp[(-33)+-2]
 25622  013BF0  0EDD               	movlw	-35
 25623  013BF2  006F FF8F FFE6     	movff	plusw1,postinc1
 25624  013BF8  006F FF8F FFE6     	movff	plusw1,postinc1
 25625  013BFE  EC6D  F004         	call	_ctoa	;wreg free
 25626  013C02  EF7C  F0A3         	goto	l2675
 25627  013C06                     l16014:
 25628                           
 25629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 25630                           ;stkvar	_fmt @ sp[(-32)+-4]
 25631  013C06  0EDC               	movlw	-36
 25632  013C08  006F FF8F FFD9     	movff	plusw1,fsr2l
 25633  013C0E  0EDD               	movlw	-35
 25634  013C10  006F FF8F FFDA     	movff	plusw1,fsr2h
 25635  013C16  006F FF7B FFF6     	movff	postinc2,tblptrl
 25636  013C1C  006F FF77 FFF7     	movff	postdec2,tblptrh
 25637  013C22                     	if	0	;tblptru may be non-zero
 25638  013C22                     	endif
 25639  013C22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25640  013C22  0E00               	movlw	low (__mediumconst shr (0+16))
 25641  013C24  6EF8               	movwf	tblptru,c
 25642  013C26                     	endif
 25643  013C26  0008               	tblrd		*
 25644  013C28  50F5               	movf	tablat,w,c
 25645  013C2A  0A64               	xorlw	100
 25646  013C2C  B4D8               	btfsc	status,2,c
 25647  013C2E  D015               	goto	u15560
 25648                           
 25649                           ;stkvar	_fmt @ sp[(-32)+-4]
 25650  013C30  0EDC               	movlw	-36
 25651  013C32  006F FF8F FFD9     	movff	plusw1,fsr2l
 25652  013C38  0EDD               	movlw	-35
 25653  013C3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 25654  013C40  006F FF7B FFF6     	movff	postinc2,tblptrl
 25655  013C46  006F FF77 FFF7     	movff	postdec2,tblptrh
 25656  013C4C                     	if	0	;tblptru may be non-zero
 25657  013C4C                     	endif
 25658  013C4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25659  013C4C  0E00               	movlw	low (__mediumconst shr (0+16))
 25660  013C4E  6EF8               	movwf	tblptru,c
 25661  013C50                     	endif
 25662  013C50  0008               	tblrd		*
 25663  013C52  50F5               	movf	tablat,w,c
 25664  013C54  0A69               	xorlw	105
 25665  013C56  A4D8               	btfss	status,2,c
 25666  013C58  D076               	goto	l16026
 25667  013C5A                     u15560:
 25668                           
 25669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 25670                           ;stkvar	_fmt @ sp[(-32)+-4]
 25671  013C5A  0EDC               	movlw	-36
 25672  013C5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25673  013C62  0EDD               	movlw	-35
 25674  013C64  006F FF8F FFDA     	movff	plusw1,fsr2h
 25675  013C6A  2ADE               	incf	postinc2,f,c
 25676  013C6C  0E00               	movlw	0
 25677  013C6E  22DD               	addwfc	postdec2,f,c
 25678                           
 25679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 25680                           ;stkvar	_ap @ sp[(-32)+-6]
 25681  013C70  0EDA               	movlw	-38
 25682  013C72  006F FF8F FFD9     	movff	plusw1,fsr2l
 25683  013C78  0EDB               	movlw	-37
 25684  013C7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 25685  013C80  0E02               	movlw	2
 25686  013C82  5EDE               	subwf	postinc2,f,c
 25687  013C84  0E00               	movlw	0
 25688  013C86  5ADD               	subwfb	postdec2,f,c
 25689  013C88  006F FF78  F034    	movff	postinc2,btemp+10
 25690  013C8E  006F FF74  F035    	movff	postdec2,btemp+11
 25691  013C94  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 25692  013C9A  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 25693  013CA0  006F FF78  F034    	movff	postinc2,btemp+10
 25694  013CA6  006F FF74  F035    	movff	postdec2,btemp+11
 25695                           
 25696                           ;stkvar	_ll @ sp[(-32)+14]
 25697  013CAC  0EEE               	movlw	-18
 25698  013CAE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25699  013CB4  0EEF               	movlw	-17
 25700  013CB6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25701  013CBC  6A2A               	clrf	btemp^0,c
 25702  013CBE  BEE3               	btfsc	plusw1,7,c
 25703  013CC0  682A               	setf	btemp^0,c
 25704  013CC2  0EF0               	movlw	-16
 25705  013CC4  0060  F0AB  FFE3   	movff	btemp,plusw1
 25706  013CCA  0EF1               	movlw	-15
 25707  013CCC  0060  F0AB  FFE3   	movff	btemp,plusw1
 25708  013CD2  0EF2               	movlw	-14
 25709  013CD4  0060  F0AB  FFE3   	movff	btemp,plusw1
 25710  013CDA  0EF3               	movlw	-13
 25711  013CDC  0060  F0AB  FFE3   	movff	btemp,plusw1
 25712  013CE2  0EF4               	movlw	-12
 25713  013CE4  0060  F0AB  FFE3   	movff	btemp,plusw1
 25714  013CEA  0EF5               	movlw	-11
 25715  013CEC  0060  F0AB  FFE3   	movff	btemp,plusw1
 25716  013CF2                     l16022:
 25717                           
 25718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 25719                           ;stkvar	_ll @ sp[(-32)+14]
 25720  013CF2  50E1               	movf	fsr1l,w,c
 25721  013CF4  0FEE               	addlw	-18
 25722  013CF6  6ED9               	movwf	fsr2l,c
 25723  013CF8  50E2               	movf	fsr1h,w,c
 25724  013CFA  6EDA               	movwf	fsr2h,c
 25725  013CFC  0EFF               	movlw	255
 25726  013CFE  22DA               	addwfc	fsr2h,f,c
 25727  013D00  006F FF7B FFE6     	movff	postinc2,postinc1
 25728  013D06  006F FF7B FFE6     	movff	postinc2,postinc1
 25729  013D0C  006F FF7B FFE6     	movff	postinc2,postinc1
 25730  013D12  006F FF7B FFE6     	movff	postinc2,postinc1
 25731  013D18  006F FF7B FFE6     	movff	postinc2,postinc1
 25732  013D1E  006F FF7B FFE6     	movff	postinc2,postinc1
 25733  013D24  006F FF7B FFE6     	movff	postinc2,postinc1
 25734  013D2A  006F FF7B FFE6     	movff	postinc2,postinc1
 25735                           
 25736                           ;stkvar	_fp @ sp[(-40)+-2]
 25737  013D30  0ED6               	movlw	-42
 25738  013D32  006F FF8F FFE6     	movff	plusw1,postinc1
 25739  013D38  006F FF8F FFE6     	movff	plusw1,postinc1
 25740  013D3E  ECB9  F0C4         	call	_dtoa	;wreg free
 25741  013D42  EF7C  F0A3         	goto	l2675
 25742  013D46                     l16026:
 25743                           
 25744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 25745  013D46  0E02               	movlw	2
 25746  013D48  6EE6               	movwf	postinc1,c
 25747  013D4A  0E00               	movlw	0
 25748  013D4C  6EE6               	movwf	postinc1,c
 25749  013D4E  0EE9               	movlw	low STR_99
 25750  013D50  6EE6               	movwf	postinc1,c
 25751  013D52  0EFF               	movlw	high STR_99
 25752  013D54  6EE6               	movwf	postinc1,c
 25753                           
 25754                           ;stkvar	_fmt @ sp[(-36)+-4]
 25755  013D56  0ED8               	movlw	-40
 25756  013D58  006F FF8F FFD9     	movff	plusw1,fsr2l
 25757  013D5E  0ED9               	movlw	-39
 25758  013D60  006F FF8F FFDA     	movff	plusw1,fsr2h
 25759  013D66  006F FF78  F034    	movff	postinc2,btemp+10
 25760  013D6C  006F FF74  F035    	movff	postdec2,btemp+11
 25761  013D72  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25762  013D78  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25763  013D7E  EC3C  F0E3         	call	_strncmp	;wreg free
 25764  013D82  502A               	movf	btemp^0,w,c
 25765  013D84  102B               	iorwf	(btemp+1)^0,w,c
 25766  013D86  B4D8               	btfsc	status,2,c
 25767  013D88  D022               	goto	u15580
 25768  013D8A  0E02               	movlw	2
 25769  013D8C  6EE6               	movwf	postinc1,c
 25770  013D8E  0E00               	movlw	0
 25771  013D90  6EE6               	movwf	postinc1,c
 25772  013D92  0EEF               	movlw	low STR_103
 25773  013D94  6EE6               	movwf	postinc1,c
 25774  013D96  0EFF               	movlw	high STR_103
 25775  013D98  6EE6               	movwf	postinc1,c
 25776                           
 25777                           ;stkvar	_fmt @ sp[(-36)+-4]
 25778  013D9A  0ED8               	movlw	-40
 25779  013D9C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25780  013DA2  0ED9               	movlw	-39
 25781  013DA4  006F FF8F FFDA     	movff	plusw1,fsr2h
 25782  013DAA  006F FF78  F034    	movff	postinc2,btemp+10
 25783  013DB0  006F FF74  F035    	movff	postdec2,btemp+11
 25784  013DB6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25785  013DBC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25786  013DC2  EC3C  F0E3         	call	_strncmp	;wreg free
 25787  013DC6  502A               	movf	btemp^0,w,c
 25788  013DC8  102B               	iorwf	(btemp+1)^0,w,c
 25789  013DCA  A4D8               	btfss	status,2,c
 25790  013DCC  D069               	goto	l16038
 25791  013DCE                     u15580:
 25792                           
 25793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 25794                           ;stkvar	_fmt @ sp[(-32)+-4]
 25795  013DCE  0EDC               	movlw	-36
 25796  013DD0  006F FF8F FFD9     	movff	plusw1,fsr2l
 25797  013DD6  0EDD               	movlw	-35
 25798  013DD8  006F FF8F FFDA     	movff	plusw1,fsr2h
 25799  013DDE  0E02               	movlw	2
 25800  013DE0  26DE               	addwf	postinc2,f,c
 25801  013DE2  0E00               	movlw	0
 25802  013DE4  22DD               	addwfc	postdec2,f,c
 25803                           
 25804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 25805                           ;stkvar	_ap @ sp[(-32)+-6]
 25806  013DE6  0EDA               	movlw	-38
 25807  013DE8  006F FF8F FFD9     	movff	plusw1,fsr2l
 25808  013DEE  0EDB               	movlw	-37
 25809  013DF0  006F FF8F FFDA     	movff	plusw1,fsr2h
 25810  013DF6  0E04               	movlw	4
 25811  013DF8  5EDE               	subwf	postinc2,f,c
 25812  013DFA  0E00               	movlw	0
 25813  013DFC  5ADD               	subwfb	postdec2,f,c
 25814  013DFE  006F FF78  F034    	movff	postinc2,btemp+10
 25815  013E04  006F FF74  F035    	movff	postdec2,btemp+11
 25816  013E0A  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 25817  013E10  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 25818  013E16  006F FF78  F032    	movff	postinc2,btemp+8
 25819  013E1C  006F FF78  F033    	movff	postinc2,btemp+9
 25820  013E22  006F FF78  F034    	movff	postinc2,btemp+10
 25821  013E28  006F FF78  F035    	movff	postinc2,btemp+11
 25822  013E2E  0060  F0C8  F03A   	movff	btemp+8,btemp+16
 25823  013E34  0060  F0CC  F03B   	movff	btemp+9,btemp+17
 25824  013E3A  0060  F0D0  F03C   	movff	btemp+10,btemp+18
 25825  013E40  0060  F0D4  F03D   	movff	btemp+11,btemp+19
 25826  013E46  6A3E               	clrf	(btemp+20)^0,c
 25827  013E48  BE3D               	btfsc	(btemp+19)^0,7,c
 25828  013E4A  683E               	setf	(btemp+20)^0,c
 25829  013E4C  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 25830  013E52  0060  F0F8  F040   	movff	btemp+20,btemp+22
 25831  013E58  0060  F0F8  F041   	movff	btemp+20,btemp+23
 25832                           
 25833                           ;stkvar	_ll @ sp[(-32)+14]
 25834  013E5E  0EEE               	movlw	-18
 25835  013E60  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 25836  013E66  0EEF               	movlw	-17
 25837  013E68  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 25838  013E6E  0EF0               	movlw	-16
 25839  013E70  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 25840  013E76  0EF1               	movlw	-15
 25841  013E78  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 25842  013E7E  0EF2               	movlw	-14
 25843  013E80  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 25844  013E86  0EF3               	movlw	-13
 25845  013E88  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 25846  013E8E  0EF4               	movlw	-12
 25847  013E90  0060  F103  FFE3   	movff	btemp+22,plusw1
 25848  013E96  0EF5               	movlw	-11
 25849  013E98  0060  F107  FFE3   	movff	btemp+23,plusw1
 25850  013E9E  D729               	goto	l16022
 25851  013EA0                     l16038:
 25852                           
 25853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 25854                           ;stkvar	_ct @ sp[(-32)+26]
 25855  013EA0  0EFA               	movlw	-6
 25856  013EA2  006F FF8C  F02A    	movff	plusw1,btemp
 25857  013EA8  0E66               	movlw	102
 25858  013EAA  182A               	xorwf	btemp^0,w,c
 25859  013EAC  A4D8               	btfss	status,2,c
 25860  013EAE  D06E               	goto	l16050
 25861                           
 25862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 25863                           ;stkvar	_fmt @ sp[(-32)+-4]
 25864  013EB0  0EDC               	movlw	-36
 25865  013EB2  006F FF8F FFD9     	movff	plusw1,fsr2l
 25866  013EB8  0EDD               	movlw	-35
 25867  013EBA  006F FF8F FFDA     	movff	plusw1,fsr2h
 25868  013EC0  006F FF7B FFF6     	movff	postinc2,tblptrl
 25869  013EC6  006F FF77 FFF7     	movff	postdec2,tblptrh
 25870  013ECC                     	if	0	;tblptru may be non-zero
 25871  013ECC                     	endif
 25872  013ECC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25873  013ECC  0E00               	movlw	low (__mediumconst shr (0+16))
 25874  013ECE  6EF8               	movwf	tblptru,c
 25875  013ED0                     	endif
 25876                           
 25877                           ;stkvar	_c @ sp[(-32)+31]
 25878  013ED0  0008               	tblrd		*
 25879  013ED2  0EFF               	movlw	-1
 25880  013ED4  006F FFD7 FFE3     	movff	tablat,plusw1
 25881                           
 25882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 25883                           ;stkvar	_fmt @ sp[(-32)+-4]
 25884  013EDA  0EDC               	movlw	-36
 25885  013EDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 25886  013EE2  0EDD               	movlw	-35
 25887  013EE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 25888  013EEA  2ADE               	incf	postinc2,f,c
 25889  013EEC  0E00               	movlw	0
 25890  013EEE  22DD               	addwfc	postdec2,f,c
 25891                           
 25892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 25893                           ;stkvar	_ap @ sp[(-32)+-6]
 25894  013EF0  0EDA               	movlw	-38
 25895  013EF2  006F FF8F FFD9     	movff	plusw1,fsr2l
 25896  013EF8  0EDB               	movlw	-37
 25897  013EFA  006F FF8F FFDA     	movff	plusw1,fsr2h
 25898  013F00  0E04               	movlw	4
 25899  013F02  5EDE               	subwf	postinc2,f,c
 25900  013F04  0E00               	movlw	0
 25901  013F06  5ADD               	subwfb	postdec2,f,c
 25902  013F08  006F FF78  F034    	movff	postinc2,btemp+10
 25903  013F0E  006F FF74  F035    	movff	postdec2,btemp+11
 25904  013F14  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 25905  013F1A  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 25906  013F20  006F FF78  F032    	movff	postinc2,btemp+8
 25907  013F26  006F FF78  F033    	movff	postinc2,btemp+9
 25908  013F2C  006F FF78  F034    	movff	postinc2,btemp+10
 25909  013F32  006F FF78  F035    	movff	postinc2,btemp+11
 25910                           
 25911                           ;stkvar	_f @ sp[(-32)+22]
 25912  013F38  0EF6               	movlw	-10
 25913  013F3A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 25914  013F40  0EF7               	movlw	-9
 25915  013F42  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 25916  013F48  0EF8               	movlw	-8
 25917  013F4A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25918  013F50  0EF9               	movlw	-7
 25919  013F52  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25920  013F58                     l16046:
 25921                           
 25922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 25923                           ;stkvar	_c @ sp[(-32)+31]
 25924  013F58  0EFF               	movlw	-1
 25925  013F5A  50E3               	movf	plusw1,w,c
 25926  013F5C  6EE6               	movwf	postinc1,c
 25927                           
 25928                           ;stkvar	_f @ sp[(-33)+22]
 25929  013F5E  0EF5               	movlw	-11
 25930  013F60  006F FF8F FFE6     	movff	plusw1,postinc1
 25931  013F66  006F FF8F FFE6     	movff	plusw1,postinc1
 25932  013F6C  006F FF8F FFE6     	movff	plusw1,postinc1
 25933  013F72  006F FF8F FFE6     	movff	plusw1,postinc1
 25934                           
 25935                           ;stkvar	_fp @ sp[(-37)+-2]
 25936  013F78  0ED9               	movlw	-39
 25937  013F7A  006F FF8F FFE6     	movff	plusw1,postinc1
 25938  013F80  006F FF8F FFE6     	movff	plusw1,postinc1
 25939  013F86  EC20  F08A         	call	_efgtoa	;wreg free
 25940  013F8A  D3B6               	goto	l2675
 25941  013F8C                     l16050:
 25942                           
 25943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 25944  013F8C  0E02               	movlw	2
 25945  013F8E  6EE6               	movwf	postinc1,c
 25946  013F90  0E00               	movlw	0
 25947  013F92  6EE6               	movwf	postinc1,c
 25948  013F94  0EEC               	movlw	low STR_108
 25949  013F96  6EE6               	movwf	postinc1,c
 25950  013F98  0EFF               	movlw	high STR_108
 25951  013F9A  6EE6               	movwf	postinc1,c
 25952                           
 25953                           ;stkvar	_ct @ sp[(-36)+26]
 25954  013F9C  0EF6               	movlw	246
 25955  013F9E  24E1               	addwf	fsr1l,w,c
 25956  013FA0  6E2A               	movwf	btemp^0,c
 25957  013FA2  0EFF               	movlw	255
 25958  013FA4  20E2               	addwfc	fsr1h,w,c
 25959  013FA6  6E2B               	movwf	(btemp+1)^0,c
 25960  013FA8  0060  F0AB  FFE6   	movff	btemp,postinc1
 25961  013FAE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 25962  013FB4  EC3C  F0E3         	call	_strncmp	;wreg free
 25963  013FB8  502A               	movf	btemp^0,w,c
 25964  013FBA  102B               	iorwf	(btemp+1)^0,w,c
 25965  013FBC  A4D8               	btfss	status,2,c
 25966  013FBE  D096               	goto	l16070
 25967                           
 25968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 25969                           ;stkvar	_fmt @ sp[(-32)+-4]
 25970  013FC0  0EDC               	movlw	-36
 25971  013FC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 25972  013FC8  0EDD               	movlw	-35
 25973  013FCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 25974  013FD0  006F FF78  F034    	movff	postinc2,btemp+10
 25975  013FD6  006F FF74  F035    	movff	postdec2,btemp+11
 25976  013FDC  0E01               	movlw	1
 25977  013FDE  2634               	addwf	(btemp+10)^0,f,c
 25978  013FE0  0E00               	movlw	0
 25979  013FE2  2235               	addwfc	(btemp+11)^0,f,c
 25980  013FE4  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 25981  013FEA  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 25982  013FF0                     	if	0	;tblptru may be non-zero
 25983  013FF0                     	endif
 25984  013FF0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25985  013FF0  0E00               	movlw	low (__mediumconst shr (0+16))
 25986  013FF2  6EF8               	movwf	tblptru,c
 25987  013FF4                     	endif
 25988                           
 25989                           ;stkvar	_c @ sp[(-32)+31]
 25990  013FF4  0008               	tblrd		*
 25991  013FF6  0EFF               	movlw	-1
 25992  013FF8  006F FFD7 FFE3     	movff	tablat,plusw1
 25993  013FFE  0EBF               	movlw	191
 25994  014000  6E34               	movwf	(btemp+10)^0,c
 25995  014002  0EFF               	movlw	255
 25996  014004  6E35               	movwf	(btemp+11)^0,c
 25997                           
 25998                           ;stkvar	_fmt @ sp[(-32)+-4]
 25999  014006  0EDC               	movlw	-36
 26000  014008  006F FF8F FFD9     	movff	plusw1,fsr2l
 26001  01400E  0EDD               	movlw	-35
 26002  014010  006F FF8F FFDA     	movff	plusw1,fsr2h
 26003  014016  006F FF7B FFF6     	movff	postinc2,tblptrl
 26004  01401C  006F FF77 FFF7     	movff	postdec2,tblptrh
 26005  014022                     	if	0	;tblptru may be non-zero
 26006  014022                     	endif
 26007  014022                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26008  014022  0E00               	movlw	low (__mediumconst shr (0+16))
 26009  014024  6EF8               	movwf	tblptru,c
 26010  014026                     	endif
 26011  014026  0008               	tblrd		*
 26012  014028  50F5               	movf	tablat,w,c
 26013  01402A  6E32               	movwf	(btemp+8)^0,c
 26014  01402C  6A33               	clrf	(btemp+9)^0,c
 26015  01402E  5034               	movf	(btemp+10)^0,w,c
 26016  014030  2632               	addwf	(btemp+8)^0,f,c
 26017  014032  5035               	movf	(btemp+11)^0,w,c
 26018  014034  2233               	addwfc	(btemp+9)^0,f,c
 26019  014036  5033               	movf	(btemp+9)^0,w,c
 26020  014038  E106               	bnz	u15610
 26021  01403A  0E1A               	movlw	26
 26022  01403C  5C32               	subwf	(btemp+8)^0,w,c
 26023  01403E  B0D8               	btfsc	status,0,c
 26024  014040  D002               	goto	u15610
 26025  014042  0E01               	movlw	1
 26026  014044  D001               	goto	u15620
 26027  014046                     u15610:
 26028  014046  0E00               	movlw	0
 26029  014048                     u15620:
 26030  014048  6E34               	movwf	(btemp+10)^0,c
 26031  01404A  6A35               	clrf	(btemp+11)^0,c
 26032                           
 26033                           ;stkvar	_vfpfcnvrt$6897 @ sp[(-32)+2]
 26034  01404C  0EE2               	movlw	-30
 26035  01404E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26036  014054  0EE3               	movlw	-29
 26037  014056  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26038                           
 26039                           ;stkvar	_vfpfcnvrt$6897 @ sp[(-32)+2]
 26040  01405C  0EE2               	movlw	-30
 26041  01405E  006F FF8C  F02A    	movff	plusw1,btemp
 26042  014064  0EE3               	movlw	-29
 26043  014066  50E3               	movf	plusw1,w,c
 26044  014068  102A               	iorwf	btemp^0,w,c
 26045                           
 26046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 26047                           ;stkvar	_ap @ sp[(-32)+-6]
 26048                           
 26049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 26050                           
 26051                           ;stkvar	_f @ sp[(-32)+22]
 26052                           
 26053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 26054                           ;stkvar	_ap @ sp[(-32)+-6]
 26055  01406A  0EDA               	movlw	-38
 26056  01406C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26057  014072  0EDB               	movlw	-37
 26058  014074  006F FF8F FFDA     	movff	plusw1,fsr2h
 26059  01407A  0E04               	movlw	4
 26060  01407C  5EDE               	subwf	postinc2,f,c
 26061  01407E  0E00               	movlw	0
 26062  014080  5ADD               	subwfb	postdec2,f,c
 26063  014082  006F FF78  F034    	movff	postinc2,btemp+10
 26064  014088  006F FF74  F035    	movff	postdec2,btemp+11
 26065  01408E  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26066  014094  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26067  01409A  006F FF78  F032    	movff	postinc2,btemp+8
 26068  0140A0  006F FF78  F033    	movff	postinc2,btemp+9
 26069  0140A6  006F FF78  F034    	movff	postinc2,btemp+10
 26070  0140AC  006F FF78  F035    	movff	postinc2,btemp+11
 26071                           
 26072                           ;stkvar	_f @ sp[(-32)+22]
 26073  0140B2  0EF6               	movlw	-10
 26074  0140B4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 26075  0140BA  0EF7               	movlw	-9
 26076  0140BC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 26077  0140C2  0EF8               	movlw	-8
 26078  0140C4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26079  0140CA  0EF9               	movlw	-7
 26080  0140CC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26081                           
 26082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 26083                           ;stkvar	_fmt @ sp[(-32)+-4]
 26084  0140D2  0EDC               	movlw	-36
 26085  0140D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 26086  0140DA  0EDD               	movlw	-35
 26087  0140DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 26088  0140E2  0E02               	movlw	2
 26089  0140E4  26DE               	addwf	postinc2,f,c
 26090  0140E6  0E00               	movlw	0
 26091  0140E8  22DD               	addwfc	postdec2,f,c
 26092  0140EA  D736               	goto	l16046
 26093  0140EC                     l16070:
 26094                           
 26095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 26096                           ;stkvar	_fmt @ sp[(-32)+-4]
 26097  0140EC  0EDC               	movlw	-36
 26098  0140EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 26099  0140F4  0EDD               	movlw	-35
 26100  0140F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 26101  0140FC  006F FF7B FFF6     	movff	postinc2,tblptrl
 26102  014102  006F FF77 FFF7     	movff	postdec2,tblptrh
 26103  014108                     	if	0	;tblptru may be non-zero
 26104  014108                     	endif
 26105  014108                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26106  014108  0E00               	movlw	low (__mediumconst shr (0+16))
 26107  01410A  6EF8               	movwf	tblptru,c
 26108  01410C                     	endif
 26109  01410C  0008               	tblrd		*
 26110  01410E  50F5               	movf	tablat,w,c
 26111  014110  0A73               	xorlw	115
 26112  014112  A4D8               	btfss	status,2,c
 26113  014114  D042               	goto	l16080
 26114                           
 26115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 26116                           ;stkvar	_fmt @ sp[(-32)+-4]
 26117  014116  0EDC               	movlw	-36
 26118  014118  006F FF8F FFD9     	movff	plusw1,fsr2l
 26119  01411E  0EDD               	movlw	-35
 26120  014120  006F FF8F FFDA     	movff	plusw1,fsr2h
 26121  014126  2ADE               	incf	postinc2,f,c
 26122  014128  0E00               	movlw	0
 26123  01412A  22DD               	addwfc	postdec2,f,c
 26124                           
 26125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 26126                           ;stkvar	_ap @ sp[(-32)+-6]
 26127  01412C  0EDA               	movlw	-38
 26128  01412E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26129  014134  0EDB               	movlw	-37
 26130  014136  006F FF8F FFDA     	movff	plusw1,fsr2h
 26131  01413C  0E02               	movlw	2
 26132  01413E  5EDE               	subwf	postinc2,f,c
 26133  014140  0E00               	movlw	0
 26134  014142  5ADD               	subwfb	postdec2,f,c
 26135  014144  006F FF78  F034    	movff	postinc2,btemp+10
 26136  01414A  006F FF74  F035    	movff	postdec2,btemp+11
 26137  014150  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26138  014156  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26139  01415C  006F FF78  F034    	movff	postinc2,btemp+10
 26140  014162  006F FF74  F035    	movff	postdec2,btemp+11
 26141                           
 26142                           ;stkvar	_cp @ sp[(-32)+29]
 26143  014168  0EFE               	movlw	-2
 26144  01416A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26145  014170  0EFD               	movlw	-3
 26146  014172  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26147                           
 26148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 26149                           ;stkvar	_cp @ sp[(-32)+29]
 26150  014178  0EFD               	movlw	-3
 26151  01417A  006F FF8F FFE6     	movff	plusw1,postinc1
 26152  014180  006F FF8F FFE6     	movff	plusw1,postinc1
 26153                           
 26154                           ;stkvar	_fp @ sp[(-34)+-2]
 26155  014186  0EDC               	movlw	-36
 26156  014188  006F FF8F FFE6     	movff	plusw1,postinc1
 26157  01418E  006F FF8F FFE6     	movff	plusw1,postinc1
 26158  014194  EC55  F0D8         	call	_stoa	;wreg free
 26159  014198  D2AF               	goto	l2675
 26160  01419A                     l16080:
 26161                           
 26162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 26163                           ;stkvar	_fmt @ sp[(-32)+-4]
 26164  01419A  0EDC               	movlw	-36
 26165  01419C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26166  0141A2  0EDD               	movlw	-35
 26167  0141A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 26168  0141AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 26169  0141B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 26170  0141B6                     	if	0	;tblptru may be non-zero
 26171  0141B6                     	endif
 26172  0141B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26173  0141B6  0E00               	movlw	low (__mediumconst shr (0+16))
 26174  0141B8  6EF8               	movwf	tblptru,c
 26175  0141BA                     	endif
 26176  0141BA  0008               	tblrd		*
 26177  0141BC  50F5               	movf	tablat,w,c
 26178  0141BE  0A75               	xorlw	117
 26179  0141C0  A4D8               	btfss	status,2,c
 26180  0141C2  D07C               	goto	l16090
 26181                           
 26182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 26183                           ;stkvar	_fmt @ sp[(-32)+-4]
 26184  0141C4  0EDC               	movlw	-36
 26185  0141C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26186  0141CC  0EDD               	movlw	-35
 26187  0141CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26188  0141D4  2ADE               	incf	postinc2,f,c
 26189  0141D6  0E00               	movlw	0
 26190  0141D8  22DD               	addwfc	postdec2,f,c
 26191                           
 26192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 26193                           ;stkvar	_ap @ sp[(-32)+-6]
 26194  0141DA  0EDA               	movlw	-38
 26195  0141DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 26196  0141E2  0EDB               	movlw	-37
 26197  0141E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 26198  0141EA  0E02               	movlw	2
 26199  0141EC  5EDE               	subwf	postinc2,f,c
 26200  0141EE  0E00               	movlw	0
 26201  0141F0  5ADD               	subwfb	postdec2,f,c
 26202  0141F2  006F FF78  F034    	movff	postinc2,btemp+10
 26203  0141F8  006F FF74  F035    	movff	postdec2,btemp+11
 26204  0141FE  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26205  014204  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26206  01420A  006F FF78  F034    	movff	postinc2,btemp+10
 26207  014210  006F FF74  F035    	movff	postdec2,btemp+11
 26208  014216  5034               	movf	(btemp+10)^0,w,c
 26209  014218  6E3A               	movwf	(btemp+16)^0,c
 26210  01421A  5035               	movf	(btemp+11)^0,w,c
 26211  01421C  6E3B               	movwf	(btemp+17)^0,c
 26212  01421E  6A3C               	clrf	(btemp+18)^0,c
 26213  014220  6A3D               	clrf	(btemp+19)^0,c
 26214  014222  6A3E               	clrf	(btemp+20)^0,c
 26215  014224  6A3F               	clrf	(btemp+21)^0,c
 26216  014226  6A40               	clrf	(btemp+22)^0,c
 26217  014228  6A41               	clrf	(btemp+23)^0,c
 26218                           
 26219                           ;stkvar	_llu @ sp[(-32)+6]
 26220  01422A  0EE6               	movlw	-26
 26221  01422C  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 26222  014232  0EE7               	movlw	-25
 26223  014234  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 26224  01423A  0EE8               	movlw	-24
 26225  01423C  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 26226  014242  0EE9               	movlw	-23
 26227  014244  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 26228  01424A  0EEA               	movlw	-22
 26229  01424C  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 26230  014252  0EEB               	movlw	-21
 26231  014254  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 26232  01425A  0EEC               	movlw	-20
 26233  01425C  0060  F103  FFE3   	movff	btemp+22,plusw1
 26234  014262  0EED               	movlw	-19
 26235  014264  0060  F107  FFE3   	movff	btemp+23,plusw1
 26236                           
 26237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 26238                           ;stkvar	_llu @ sp[(-32)+6]
 26239  01426A  50E1               	movf	fsr1l,w,c
 26240  01426C  0FE6               	addlw	-26
 26241  01426E  6ED9               	movwf	fsr2l,c
 26242  014270  50E2               	movf	fsr1h,w,c
 26243  014272  6EDA               	movwf	fsr2h,c
 26244  014274  0EFF               	movlw	255
 26245  014276  22DA               	addwfc	fsr2h,f,c
 26246  014278  006F FF7B FFE6     	movff	postinc2,postinc1
 26247  01427E  006F FF7B FFE6     	movff	postinc2,postinc1
 26248  014284  006F FF7B FFE6     	movff	postinc2,postinc1
 26249  01428A  006F FF7B FFE6     	movff	postinc2,postinc1
 26250  014290  006F FF7B FFE6     	movff	postinc2,postinc1
 26251  014296  006F FF7B FFE6     	movff	postinc2,postinc1
 26252  01429C  006F FF7B FFE6     	movff	postinc2,postinc1
 26253  0142A2  006F FF7B FFE6     	movff	postinc2,postinc1
 26254                           
 26255                           ;stkvar	_fp @ sp[(-40)+-2]
 26256  0142A8  0ED6               	movlw	-42
 26257  0142AA  006F FF8F FFE6     	movff	plusw1,postinc1
 26258  0142B0  006F FF8F FFE6     	movff	plusw1,postinc1
 26259  0142B6  EC55  F0D2         	call	_utoa	;wreg free
 26260  0142BA  D21E               	goto	l2675
 26261  0142BC                     l16090:
 26262                           
 26263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 26264  0142BC  0E02               	movlw	2
 26265  0142BE  6EE6               	movwf	postinc1,c
 26266  0142C0  0E00               	movlw	0
 26267  0142C2  6EE6               	movwf	postinc1,c
 26268  0142C4  0EF2               	movlw	low STR_113
 26269  0142C6  6EE6               	movwf	postinc1,c
 26270  0142C8  0EFF               	movlw	high STR_113
 26271  0142CA  6EE6               	movwf	postinc1,c
 26272                           
 26273                           ;stkvar	_fmt @ sp[(-36)+-4]
 26274  0142CC  0ED8               	movlw	-40
 26275  0142CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 26276  0142D4  0ED9               	movlw	-39
 26277  0142D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 26278  0142DC  006F FF78  F034    	movff	postinc2,btemp+10
 26279  0142E2  006F FF74  F035    	movff	postdec2,btemp+11
 26280  0142E8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26281  0142EE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26282  0142F4  EC3C  F0E3         	call	_strncmp	;wreg free
 26283  0142F8  502A               	movf	btemp^0,w,c
 26284  0142FA  102B               	iorwf	(btemp+1)^0,w,c
 26285  0142FC  A4D8               	btfss	status,2,c
 26286  0142FE  D039               	goto	l16100
 26287                           
 26288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 26289                           ;stkvar	_fmt @ sp[(-32)+-4]
 26290  014300  0EDC               	movlw	-36
 26291  014302  006F FF8F FFD9     	movff	plusw1,fsr2l
 26292  014308  0EDD               	movlw	-35
 26293  01430A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26294  014310  0E02               	movlw	2
 26295  014312  26DE               	addwf	postinc2,f,c
 26296  014314  0E00               	movlw	0
 26297  014316  22DD               	addwfc	postdec2,f,c
 26298                           
 26299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 26300                           ;stkvar	_ap @ sp[(-32)+-6]
 26301  014318  0EDA               	movlw	-38
 26302  01431A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26303  014320  0EDB               	movlw	-37
 26304  014322  006F FF8F FFDA     	movff	plusw1,fsr2h
 26305  014328  0E04               	movlw	4
 26306  01432A  5EDE               	subwf	postinc2,f,c
 26307  01432C  0E00               	movlw	0
 26308  01432E  5ADD               	subwfb	postdec2,f,c
 26309  014330  006F FF78  F034    	movff	postinc2,btemp+10
 26310  014336  006F FF74  F035    	movff	postdec2,btemp+11
 26311  01433C  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26312  014342  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26313  014348  006F FF78  F032    	movff	postinc2,btemp+8
 26314  01434E  006F FF78  F033    	movff	postinc2,btemp+9
 26315  014354  006F FF78  F034    	movff	postinc2,btemp+10
 26316  01435A  006F FF78  F035    	movff	postinc2,btemp+11
 26317  014360  5032               	movf	(btemp+8)^0,w,c
 26318  014362  6E3A               	movwf	(btemp+16)^0,c
 26319  014364  5033               	movf	(btemp+9)^0,w,c
 26320  014366  6E3B               	movwf	(btemp+17)^0,c
 26321  014368  5034               	movf	(btemp+10)^0,w,c
 26322  01436A  6E3C               	movwf	(btemp+18)^0,c
 26323  01436C  5035               	movf	(btemp+11)^0,w,c
 26324  01436E  6E3D               	movwf	(btemp+19)^0,c
 26325  014370  D758               	goto	L24
 26326  014372                     l16100:
 26327                           
 26328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 26329                           ;stkvar	_fmt @ sp[(-32)+-4]
 26330  014372  0EDC               	movlw	-36
 26331  014374  006F FF8F FFD9     	movff	plusw1,fsr2l
 26332  01437A  0EDD               	movlw	-35
 26333  01437C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26334  014382  006F FF7B FFF6     	movff	postinc2,tblptrl
 26335  014388  006F FF77 FFF7     	movff	postdec2,tblptrh
 26336  01438E                     	if	0	;tblptru may be non-zero
 26337  01438E                     	endif
 26338  01438E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26339  01438E  0E00               	movlw	low (__mediumconst shr (0+16))
 26340  014390  6EF8               	movwf	tblptru,c
 26341  014392                     	endif
 26342  014392  0008               	tblrd		*
 26343  014394  50F5               	movf	tablat,w,c
 26344  014396  0A78               	xorlw	120
 26345  014398  B4D8               	btfsc	status,2,c
 26346  01439A  D015               	goto	u15680
 26347                           
 26348                           ;stkvar	_fmt @ sp[(-32)+-4]
 26349  01439C  0EDC               	movlw	-36
 26350  01439E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26351  0143A4  0EDD               	movlw	-35
 26352  0143A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 26353  0143AC  006F FF7B FFF6     	movff	postinc2,tblptrl
 26354  0143B2  006F FF77 FFF7     	movff	postdec2,tblptrh
 26355  0143B8                     	if	0	;tblptru may be non-zero
 26356  0143B8                     	endif
 26357  0143B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26358  0143B8  0E00               	movlw	low (__mediumconst shr (0+16))
 26359  0143BA  6EF8               	movwf	tblptru,c
 26360  0143BC                     	endif
 26361  0143BC  0008               	tblrd		*
 26362  0143BE  50F5               	movf	tablat,w,c
 26363  0143C0  0A58               	xorlw	88
 26364  0143C2  A4D8               	btfss	status,2,c
 26365  0143C4  D094               	goto	l16114
 26366  0143C6                     u15680:
 26367                           
 26368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 26369                           ;stkvar	_fmt @ sp[(-32)+-4]
 26370  0143C6  0EDC               	movlw	-36
 26371  0143C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26372  0143CE  0EDD               	movlw	-35
 26373  0143D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26374  0143D6  006F FF7B FFF6     	movff	postinc2,tblptrl
 26375  0143DC  006F FF77 FFF7     	movff	postdec2,tblptrh
 26376  0143E2                     	if	0	;tblptru may be non-zero
 26377  0143E2                     	endif
 26378  0143E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26379  0143E2  0E00               	movlw	low (__mediumconst shr (0+16))
 26380  0143E4  6EF8               	movwf	tblptru,c
 26381  0143E6                     	endif
 26382                           
 26383                           ;stkvar	_c @ sp[(-32)+31]
 26384  0143E6  0008               	tblrd		*
 26385  0143E8  0EFF               	movlw	-1
 26386  0143EA  006F FFD7 FFE3     	movff	tablat,plusw1
 26387                           
 26388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 26389                           ;stkvar	_fmt @ sp[(-32)+-4]
 26390  0143F0  0EDC               	movlw	-36
 26391  0143F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26392  0143F8  0EDD               	movlw	-35
 26393  0143FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26394  014400  2ADE               	incf	postinc2,f,c
 26395  014402  0E00               	movlw	0
 26396  014404  22DD               	addwfc	postdec2,f,c
 26397                           
 26398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 26399                           ;stkvar	_ap @ sp[(-32)+-6]
 26400  014406  0EDA               	movlw	-38
 26401  014408  006F FF8F FFD9     	movff	plusw1,fsr2l
 26402  01440E  0EDB               	movlw	-37
 26403  014410  006F FF8F FFDA     	movff	plusw1,fsr2h
 26404  014416  0E02               	movlw	2
 26405  014418  5EDE               	subwf	postinc2,f,c
 26406  01441A  0E00               	movlw	0
 26407  01441C  5ADD               	subwfb	postdec2,f,c
 26408  01441E  006F FF78  F034    	movff	postinc2,btemp+10
 26409  014424  006F FF74  F035    	movff	postdec2,btemp+11
 26410  01442A  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26411  014430  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26412  014436  006F FF78  F034    	movff	postinc2,btemp+10
 26413  01443C  006F FF74  F035    	movff	postdec2,btemp+11
 26414  014442  5034               	movf	(btemp+10)^0,w,c
 26415  014444  6E3A               	movwf	(btemp+16)^0,c
 26416  014446  5035               	movf	(btemp+11)^0,w,c
 26417  014448  6E3B               	movwf	(btemp+17)^0,c
 26418  01444A  6A3C               	clrf	(btemp+18)^0,c
 26419  01444C  6A3D               	clrf	(btemp+19)^0,c
 26420  01444E  6A3E               	clrf	(btemp+20)^0,c
 26421  014450  6A3F               	clrf	(btemp+21)^0,c
 26422  014452  6A40               	clrf	(btemp+22)^0,c
 26423  014454  6A41               	clrf	(btemp+23)^0,c
 26424                           
 26425                           ;stkvar	_llu @ sp[(-32)+6]
 26426  014456  0EE6               	movlw	-26
 26427  014458  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 26428  01445E  0EE7               	movlw	-25
 26429  014460  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 26430  014466  0EE8               	movlw	-24
 26431  014468  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 26432  01446E  0EE9               	movlw	-23
 26433  014470  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 26434  014476  0EEA               	movlw	-22
 26435  014478  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 26436  01447E  0EEB               	movlw	-21
 26437  014480  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 26438  014486  0EEC               	movlw	-20
 26439  014488  0060  F103  FFE3   	movff	btemp+22,plusw1
 26440  01448E  0EED               	movlw	-19
 26441  014490  0060  F107  FFE3   	movff	btemp+23,plusw1
 26442                           
 26443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 26444                           ;stkvar	_c @ sp[(-32)+31]
 26445  014496  0EFF               	movlw	-1
 26446  014498  50E3               	movf	plusw1,w,c
 26447  01449A  6EE6               	movwf	postinc1,c
 26448                           
 26449                           ;stkvar	_llu @ sp[(-33)+6]
 26450  01449C  50E1               	movf	fsr1l,w,c
 26451  01449E  0FE5               	addlw	-27
 26452  0144A0  6ED9               	movwf	fsr2l,c
 26453  0144A2  50E2               	movf	fsr1h,w,c
 26454  0144A4  6EDA               	movwf	fsr2h,c
 26455  0144A6  0EFF               	movlw	255
 26456  0144A8  22DA               	addwfc	fsr2h,f,c
 26457  0144AA  006F FF7B FFE6     	movff	postinc2,postinc1
 26458  0144B0  006F FF7B FFE6     	movff	postinc2,postinc1
 26459  0144B6  006F FF7B FFE6     	movff	postinc2,postinc1
 26460  0144BC  006F FF7B FFE6     	movff	postinc2,postinc1
 26461  0144C2  006F FF7B FFE6     	movff	postinc2,postinc1
 26462  0144C8  006F FF7B FFE6     	movff	postinc2,postinc1
 26463  0144CE  006F FF7B FFE6     	movff	postinc2,postinc1
 26464  0144D4  006F FF7B FFE6     	movff	postinc2,postinc1
 26465                           
 26466                           ;stkvar	_fp @ sp[(-41)+-2]
 26467  0144DA  0ED5               	movlw	-43
 26468  0144DC  006F FF8F FFE6     	movff	plusw1,postinc1
 26469  0144E2  006F FF8F FFE6     	movff	plusw1,postinc1
 26470  0144E8  EC60  F0CB         	call	_xtoa	;wreg free
 26471  0144EC  D105               	goto	l2675
 26472  0144EE                     l16114:
 26473                           
 26474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 26475  0144EE  0E02               	movlw	2
 26476  0144F0  6EE6               	movwf	postinc1,c
 26477  0144F2  0E00               	movlw	0
 26478  0144F4  6EE6               	movwf	postinc1,c
 26479  0144F6  0EF5               	movlw	low STR_118
 26480  0144F8  6EE6               	movwf	postinc1,c
 26481  0144FA  0EFF               	movlw	high STR_118
 26482  0144FC  6EE6               	movwf	postinc1,c
 26483                           
 26484                           ;stkvar	_fmt @ sp[(-36)+-4]
 26485  0144FE  0ED8               	movlw	-40
 26486  014500  006F FF8F FFD9     	movff	plusw1,fsr2l
 26487  014506  0ED9               	movlw	-39
 26488  014508  006F FF8F FFDA     	movff	plusw1,fsr2h
 26489  01450E  006F FF78  F034    	movff	postinc2,btemp+10
 26490  014514  006F FF74  F035    	movff	postdec2,btemp+11
 26491  01451A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26492  014520  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26493  014526  EC3C  F0E3         	call	_strncmp	;wreg free
 26494  01452A  502A               	movf	btemp^0,w,c
 26495  01452C  102B               	iorwf	(btemp+1)^0,w,c
 26496  01452E  B4D8               	btfsc	status,2,c
 26497  014530  D022               	goto	u15700
 26498  014532  0E02               	movlw	2
 26499  014534  6EE6               	movwf	postinc1,c
 26500  014536  0E00               	movlw	0
 26501  014538  6EE6               	movwf	postinc1,c
 26502  01453A  0EE6               	movlw	low STR_122
 26503  01453C  6EE6               	movwf	postinc1,c
 26504  01453E  0EFF               	movlw	high STR_122
 26505  014540  6EE6               	movwf	postinc1,c
 26506                           
 26507                           ;stkvar	_fmt @ sp[(-36)+-4]
 26508  014542  0ED8               	movlw	-40
 26509  014544  006F FF8F FFD9     	movff	plusw1,fsr2l
 26510  01454A  0ED9               	movlw	-39
 26511  01454C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26512  014552  006F FF78  F034    	movff	postinc2,btemp+10
 26513  014558  006F FF74  F035    	movff	postdec2,btemp+11
 26514  01455E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26515  014564  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26516  01456A  EC3C  F0E3         	call	_strncmp	;wreg free
 26517  01456E  502A               	movf	btemp^0,w,c
 26518  014570  102B               	iorwf	(btemp+1)^0,w,c
 26519  014572  A4D8               	btfss	status,2,c
 26520  014574  D058               	goto	l16128
 26521  014576                     u15700:
 26522                           
 26523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 26524                           ;stkvar	_fmt @ sp[(-32)+-4]
 26525  014576  0EDC               	movlw	-36
 26526  014578  006F FF8F FFD9     	movff	plusw1,fsr2l
 26527  01457E  0EDD               	movlw	-35
 26528  014580  006F FF8F FFDA     	movff	plusw1,fsr2h
 26529  014586  006F FF78  F034    	movff	postinc2,btemp+10
 26530  01458C  006F FF74  F035    	movff	postdec2,btemp+11
 26531  014592  0E01               	movlw	1
 26532  014594  2634               	addwf	(btemp+10)^0,f,c
 26533  014596  0E00               	movlw	0
 26534  014598  2235               	addwfc	(btemp+11)^0,f,c
 26535  01459A  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26536  0145A0  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26537  0145A6                     	if	0	;tblptru may be non-zero
 26538  0145A6                     	endif
 26539  0145A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26540  0145A6  0E00               	movlw	low (__mediumconst shr (0+16))
 26541  0145A8  6EF8               	movwf	tblptru,c
 26542  0145AA                     	endif
 26543                           
 26544                           ;stkvar	_c @ sp[(-32)+31]
 26545  0145AA  0008               	tblrd		*
 26546  0145AC  0EFF               	movlw	-1
 26547  0145AE  006F FFD7 FFE3     	movff	tablat,plusw1
 26548                           
 26549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 26550                           ;stkvar	_fmt @ sp[(-32)+-4]
 26551  0145B4  0EDC               	movlw	-36
 26552  0145B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26553  0145BC  0EDD               	movlw	-35
 26554  0145BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26555  0145C4  0E02               	movlw	2
 26556  0145C6  26DE               	addwf	postinc2,f,c
 26557  0145C8  0E00               	movlw	0
 26558  0145CA  22DD               	addwfc	postdec2,f,c
 26559                           
 26560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 26561                           ;stkvar	_ap @ sp[(-32)+-6]
 26562  0145CC  0EDA               	movlw	-38
 26563  0145CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 26564  0145D4  0EDB               	movlw	-37
 26565  0145D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 26566  0145DC  0E04               	movlw	4
 26567  0145DE  5EDE               	subwf	postinc2,f,c
 26568  0145E0  0E00               	movlw	0
 26569  0145E2  5ADD               	subwfb	postdec2,f,c
 26570  0145E4  006F FF78  F034    	movff	postinc2,btemp+10
 26571  0145EA  006F FF74  F035    	movff	postdec2,btemp+11
 26572  0145F0  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26573  0145F6  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26574  0145FC  006F FF78  F032    	movff	postinc2,btemp+8
 26575  014602  006F FF78  F033    	movff	postinc2,btemp+9
 26576  014608  006F FF78  F034    	movff	postinc2,btemp+10
 26577  01460E  006F FF78  F035    	movff	postinc2,btemp+11
 26578  014614  5032               	movf	(btemp+8)^0,w,c
 26579  014616  6E3A               	movwf	(btemp+16)^0,c
 26580  014618  5033               	movf	(btemp+9)^0,w,c
 26581  01461A  6E3B               	movwf	(btemp+17)^0,c
 26582  01461C  5034               	movf	(btemp+10)^0,w,c
 26583  01461E  6E3C               	movwf	(btemp+18)^0,c
 26584  014620  5035               	movf	(btemp+11)^0,w,c
 26585  014622  6E3D               	movwf	(btemp+19)^0,c
 26586  014624  D714               	goto	L25
 26587  014626                     l16128:
 26588                           
 26589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 26590                           ;stkvar	_fmt @ sp[(-32)+-4]
 26591  014626  0EDC               	movlw	-36
 26592  014628  006F FF8F FFD9     	movff	plusw1,fsr2l
 26593  01462E  0EDD               	movlw	-35
 26594  014630  006F FF8F FFDA     	movff	plusw1,fsr2h
 26595  014636  006F FF7B FFF6     	movff	postinc2,tblptrl
 26596  01463C  006F FF77 FFF7     	movff	postdec2,tblptrh
 26597  014642                     	if	0	;tblptru may be non-zero
 26598  014642                     	endif
 26599  014642                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26600  014642  0E00               	movlw	low (__mediumconst shr (0+16))
 26601  014644  6EF8               	movwf	tblptru,c
 26602  014646                     	endif
 26603  014646  0008               	tblrd		*
 26604  014648  50F5               	movf	tablat,w,c
 26605  01464A  0A25               	xorlw	37
 26606  01464C  A4D8               	btfss	status,2,c
 26607  01464E  D01A               	goto	l16138
 26608                           
 26609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 26610                           ;stkvar	_fmt @ sp[(-32)+-4]
 26611  014650  0EDC               	movlw	-36
 26612  014652  006F FF8F FFD9     	movff	plusw1,fsr2l
 26613  014658  0EDD               	movlw	-35
 26614  01465A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26615  014660  2ADE               	incf	postinc2,f,c
 26616  014662  0E00               	movlw	0
 26617  014664  22DD               	addwfc	postdec2,f,c
 26618                           
 26619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 26620                           ;stkvar	_fp @ sp[(-32)+-2]
 26621  014666  0EDE               	movlw	-34
 26622  014668  006F FF8F FFE6     	movff	plusw1,postinc1
 26623  01466E  006F FF8F FFE6     	movff	plusw1,postinc1
 26624  014674  0E25               	movlw	37
 26625  014676  6EE6               	movwf	postinc1,c
 26626  014678  0E00               	movlw	0
 26627  01467A  6EE6               	movwf	postinc1,c
 26628  01467C  ECCC  F0F6         	call	_fputc	;wreg free
 26629  014680                     l16134:
 26630                           
 26631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 26632  014680  0E01               	movlw	1
 26633  014682  D00C               	goto	L26
 26634  014684                     l16138:
 26635                           
 26636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 26637                           ;stkvar	_fmt @ sp[(-32)+-4]
 26638  014684  0EDC               	movlw	-36
 26639  014686  006F FF8F FFD9     	movff	plusw1,fsr2l
 26640  01468C  0EDD               	movlw	-35
 26641  01468E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26642  014694  2ADE               	incf	postinc2,f,c
 26643  014696  0E00               	movlw	0
 26644  014698  22DD               	addwfc	postdec2,f,c
 26645                           
 26646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 26647  01469A  0E00               	movlw	0
 26648  01469C                     L26:
 26649  01469C  6E2A               	movwf	btemp^0,c
 26650  01469E  0E00               	movlw	0
 26651  0146A0  6E2B               	movwf	(btemp+1)^0,c
 26652  0146A2  D02A               	goto	l2675
 26653  0146A4                     l16144:
 26654                           
 26655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 26656                           ;stkvar	_fp @ sp[(-32)+-2]
 26657  0146A4  0EDE               	movlw	-34
 26658  0146A6  006F FF8F FFE6     	movff	plusw1,postinc1
 26659  0146AC  006F FF8F FFE6     	movff	plusw1,postinc1
 26660                           
 26661                           ;stkvar	_fmt @ sp[(-34)+-4]
 26662  0146B2  0EDA               	movlw	-38
 26663  0146B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 26664  0146BA  0EDB               	movlw	-37
 26665  0146BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 26666  0146C2  006F FF7B FFF6     	movff	postinc2,tblptrl
 26667  0146C8  006F FF77 FFF7     	movff	postdec2,tblptrh
 26668  0146CE                     	if	0	;tblptru may be non-zero
 26669  0146CE                     	endif
 26670  0146CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26671  0146CE  0E00               	movlw	low (__mediumconst shr (0+16))
 26672  0146D0  6EF8               	movwf	tblptru,c
 26673  0146D2                     	endif
 26674  0146D2  0008               	tblrd		*
 26675  0146D4  50F5               	movf	tablat,w,c
 26676  0146D6  6EE6               	movwf	postinc1,c
 26677  0146D8  0E00               	movlw	0
 26678  0146DA  6EE6               	movwf	postinc1,c
 26679  0146DC  ECCC  F0F6         	call	_fputc	;wreg free
 26680                           
 26681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 26682                           ;stkvar	_fmt @ sp[(-32)+-4]
 26683  0146E0  0EDC               	movlw	-36
 26684  0146E2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26685  0146E8  0EDD               	movlw	-35
 26686  0146EA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26687  0146F0  2ADE               	incf	postinc2,f,c
 26688  0146F2  0E00               	movlw	0
 26689  0146F4  22DD               	addwfc	postdec2,f,c
 26690  0146F6  D7C4               	goto	l16134
 26691  0146F8                     l2675:
 26692                           
 26693                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 26694  0146F8  0EDA               	movlw	218
 26695  0146FA  26E1               	addwf	fsr1l,f,c
 26696  0146FC  0EFF               	movlw	255
 26697  0146FE  22E2               	addwfc	fsr1h,f,c
 26698  014700  0012               	return		;funcret
 26699  014702                     __end_of_vfpfcnvrt:
 26700                           	opt callstack 0
 26701                           
 26702 ;; *************** function _xtoa *****************
 26703 ;; Defined at:
 26704 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26705 ;; Parameters:    Size  Location     Type
 26706 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26707 ;;		 -> f(6), NULL(0), 
 26708 ;;  d               8  [STACK] unsigned long long 
 26709 ;;  x               1  [STACK] unsigned char 
 26710 ;; Auto vars:     Size  Location     Type
 26711 ;;  n               8  [STACK] unsigned long long 
 26712 ;;  c               2  [STACK] int 
 26713 ;;  i               2  [STACK] int 
 26714 ;;  w               2  [STACK] int 
 26715 ;;  p               2  [STACK] int 
 26716 ;; Return value:  Size  Location     Type
 26717 ;;                  2  [STACK] int 
 26718 ;; Registers used:
 26719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 26720 ;; Tracked objects:
 26721 ;;		On entry : 0/0
 26722 ;;		On exit  : 0/0
 26723 ;;		Unchanged: 0/0
 26724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26729 ;;Total ram usage:        0 bytes
 26730 ;; Hardware stack levels used:    1
 26731 ;; Hardware stack levels required when called:   20
 26732 ;; This function calls:
 26733 ;;		_isalpha
 26734 ;;		_isupper
 26735 ;;		_pad
 26736 ;;		_toupper
 26737 ;; This function is called by:
 26738 ;;		_vfpfcnvrt
 26739 ;; This function uses a reentrant model
 26740 ;;
 26741                           
 26742                           	psect	text92
 26743  0196C0                     __ptext92:
 26744                           	opt callstack 0
 26745  0196C0                     _xtoa:
 26746                           	opt callstack 0
 26747                           
 26748                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 26749  0196C0  0E14               	movlw	20
 26750  0196C2  26E1               	addwf	fsr1l,f,c
 26751  0196C4  0E00               	movlw	0
 26752  0196C6  22E2               	addwfc	fsr1h,f,c
 26753                           
 26754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 26755                           
 26756                           ;incstack = 0
 26757 ;; hardware stack exceeded
 26758  0196C8  AE4D               	btfss	(_prec+1)^0,7,c
 26759                           
 26760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 26761  0196CA  924E               	bcf	_flags^0,1,c
 26762                           
 26763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 26764  0196CC  BE4D               	btfsc	(_prec+1)^0,7,c
 26765  0196CE  D005               	goto	u15160
 26766  0196D0  504D               	movf	(_prec+1)^0,w,c
 26767  0196D2  E110               	bnz	l15804
 26768  0196D4  044C               	decf	_prec^0,w,c
 26769  0196D6  B0D8               	btfsc	status,0,c
 26770  0196D8  D00D               	goto	l15804
 26771  0196DA                     u15160:
 26772  0196DA  0E01               	movlw	1
 26773  0196DC  6E34               	movwf	(btemp+10)^0,c
 26774  0196DE  0E00               	movlw	0
 26775  0196E0  6E35               	movwf	(btemp+11)^0,c
 26776                           
 26777                           ;stkvar	_p @ sp[(-20)+18]
 26778  0196E2  0EFE               	movlw	-2
 26779  0196E4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26780  0196EA  0EFF               	movlw	-1
 26781  0196EC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26782  0196F2  D008               	goto	l2625
 26783  0196F4                     l15804:
 26784                           
 26785                           ;stkvar	_p @ sp[(-20)+18]
 26786  0196F4  0EFE               	movlw	-2
 26787  0196F6  0060  F133  FFE3   	movff	_prec,plusw1
 26788  0196FC  0EFF               	movlw	-1
 26789  0196FE  0060  F137  FFE3   	movff	_prec+1,plusw1
 26790  019704                     l2625:
 26791                           
 26792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 26793                           ;stkvar	_w @ sp[(-20)+16]
 26794  019704  0EFC               	movlw	-4
 26795  019706  0060  F12B  FFE3   	movff	_width,plusw1
 26796  01970C  0EFD               	movlw	-3
 26797  01970E  0060  F12F  FFE3   	movff	_width+1,plusw1
 26798                           
 26799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 26800  019714  A84E               	btfss	_flags^0,4,c
 26801  019716  D00B               	goto	l15810
 26802                           
 26803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 26804                           ;stkvar	_w @ sp[(-20)+16]
 26805  019718  50E1               	movf	fsr1l,w,c
 26806  01971A  0FFC               	addlw	-4
 26807  01971C  6ED9               	movwf	fsr2l,c
 26808  01971E  50E2               	movf	fsr1h,w,c
 26809  019720  6EDA               	movwf	fsr2h,c
 26810  019722  0EFF               	movlw	255
 26811  019724  22DA               	addwfc	fsr2h,f,c
 26812  019726  0EFE               	movlw	254
 26813  019728  26DE               	addwf	postinc2,f,c
 26814  01972A  0EFF               	movlw	255
 26815  01972C  22DD               	addwfc	postdec2,f,c
 26816  01972E                     l15810:
 26817                           
 26818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 26819                           ;stkvar	_d @ sp[(-20)+-10]
 26820  01972E  0EE2               	movlw	226
 26821  019730  24E1               	addwf	fsr1l,w,c
 26822  019732  6ED9               	movwf	fsr2l,c
 26823  019734  0EFF               	movlw	255
 26824  019736  20E2               	addwfc	fsr1h,w,c
 26825  019738  6EDA               	movwf	fsr2h,c
 26826                           
 26827                           ;stkvar	_n @ sp[(-20)+4]
 26828  01973A  0E08               	movlw	8
 26829  01973C  6E2A               	movwf	btemp^0,c
 26830  01973E  0EF0               	movlw	-16
 26831  019740                     us1518999:
 26832  019740  006F FF7B FFE3     	movff	postinc2,plusw1
 26833  019746  28E8               	incf	wreg,w,c
 26834  019748  2E2A               	decfsz	btemp^0,f,c
 26835  01974A  D7FA               	bra	us1518999
 26836                           
 26837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 26838  01974C  0E4F               	movlw	79
 26839  01974E  6E34               	movwf	(btemp+10)^0,c
 26840  019750  0E00               	movlw	0
 26841  019752  6E35               	movwf	(btemp+11)^0,c
 26842                           
 26843                           ;stkvar	_i @ sp[(-20)+14]
 26844  019754  0EFA               	movlw	-6
 26845  019756  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26846  01975C  0EFB               	movlw	-5
 26847  01975E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26848                           
 26849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 26850  019764  0103               	movlb	3	; () banked
 26851  019766  6BA3               	clrf	(_dbuf+79)& (0+255),b
 26852                           
 26853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 26854  019768  D0EE               	goto	l15848
 26855  01976A                     l15816:
 26856                           
 26857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 26858                           ;stkvar	_i @ sp[(-20)+14]
 26859  01976A  50E1               	movf	fsr1l,w,c
 26860  01976C  0FFA               	addlw	-6
 26861  01976E  6ED9               	movwf	fsr2l,c
 26862  019770  50E2               	movf	fsr1h,w,c
 26863  019772  6EDA               	movwf	fsr2h,c
 26864  019774  0EFF               	movlw	255
 26865  019776  22DA               	addwfc	fsr2h,f,c
 26866  019778  06DE               	decf	postinc2,f,c
 26867  01977A  0E00               	movlw	0
 26868  01977C  5ADD               	subwfb	postdec2,f,c
 26869                           
 26870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 26871                           ;stkvar	_n @ sp[(-20)+4]
 26872  01977E  0EF0               	movlw	-16
 26873  019780  006F FF8C  F034    	movff	plusw1,btemp+10
 26874  019786  0EF1               	movlw	-15
 26875  019788  006F FF8C  F035    	movff	plusw1,btemp+11
 26876  01978E  0E0F               	movlw	15
 26877  019790  1634               	andwf	(btemp+10)^0,f,c
 26878  019792  0E00               	movlw	0
 26879  019794  1635               	andwf	(btemp+11)^0,f,c
 26880                           
 26881                           ;stkvar	_c @ sp[(-20)+12]
 26882  019796  0EF8               	movlw	-8
 26883  019798  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26884  01979E  0EF9               	movlw	-7
 26885  0197A0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26886                           
 26887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 26888                           ;stkvar	_c @ sp[(-20)+12]
 26889  0197A6  0EF9               	movlw	-7
 26890  0197A8  BEE3               	btfsc	plusw1,7,c
 26891  0197AA  D00F               	goto	l15824
 26892  0197AC  0EF9               	movlw	-7
 26893  0197AE  50E3               	movf	plusw1,w,c
 26894  0197B0  E108               	bnz	u15190
 26895  0197B2  0EF8               	movlw	-8
 26896  0197B4  006F FF8C  F02A    	movff	plusw1,btemp
 26897  0197BA  0E0A               	movlw	10
 26898  0197BC  5E2A               	subwf	btemp^0,f,c
 26899  0197BE  A0D8               	btfss	status,0,c
 26900  0197C0  D004               	goto	l15824
 26901  0197C2                     u15190:
 26902                           
 26903                           ;stkvar	_c @ sp[(-20)+12]
 26904  0197C2  0EF8               	movlw	-8
 26905  0197C4  50E3               	movf	plusw1,w,c
 26906  0197C6  0F57               	addlw	87
 26907  0197C8  D003               	goto	L27
 26908  0197CA                     l15824:
 26909                           
 26910                           ;stkvar	_c @ sp[(-20)+12]
 26911  0197CA  0EF8               	movlw	-8
 26912  0197CC  50E3               	movf	plusw1,w,c
 26913  0197CE  0F30               	addlw	48
 26914  0197D0                     L27:
 26915  0197D0  6E34               	movwf	(btemp+10)^0,c
 26916  0197D2  0EF9               	movlw	-7
 26917  0197D4  006F FF8C  F035    	movff	plusw1,btemp+11
 26918  0197DA  0E00               	movlw	0
 26919  0197DC  2235               	addwfc	(btemp+11)^0,f,c
 26920                           
 26921                           ;stkvar	_c @ sp[(-20)+12]
 26922  0197DE  0EF8               	movlw	-8
 26923  0197E0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26924  0197E6  0EF9               	movlw	-7
 26925  0197E8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26926  0197EE  0EBF               	movlw	191
 26927  0197F0  6E34               	movwf	(btemp+10)^0,c
 26928  0197F2  0EFF               	movlw	255
 26929  0197F4  6E35               	movwf	(btemp+11)^0,c
 26930                           
 26931                           ;stkvar	_x @ sp[(-20)+-11]
 26932  0197F6  0EE1               	movlw	-31
 26933  0197F8  50E3               	movf	plusw1,w,c
 26934  0197FA  6E32               	movwf	(btemp+8)^0,c
 26935  0197FC  6A33               	clrf	(btemp+9)^0,c
 26936  0197FE  5034               	movf	(btemp+10)^0,w,c
 26937  019800  2632               	addwf	(btemp+8)^0,f,c
 26938  019802  5035               	movf	(btemp+11)^0,w,c
 26939  019804  2233               	addwfc	(btemp+9)^0,f,c
 26940  019806  5033               	movf	(btemp+9)^0,w,c
 26941  019808  E106               	bnz	u15200
 26942  01980A  0E1A               	movlw	26
 26943  01980C  5C32               	subwf	(btemp+8)^0,w,c
 26944  01980E  B0D8               	btfsc	status,0,c
 26945  019810  D002               	goto	u15200
 26946  019812  0E01               	movlw	1
 26947  019814  D001               	goto	u15210
 26948  019816                     u15200:
 26949  019816  0E00               	movlw	0
 26950  019818                     u15210:
 26951  019818  6E34               	movwf	(btemp+10)^0,c
 26952  01981A  6A35               	clrf	(btemp+11)^0,c
 26953                           
 26954                           ;stkvar	_xtoa$6870 @ sp[(-20)+2]
 26955  01981C  0EEE               	movlw	-18
 26956  01981E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26957  019824  0EEF               	movlw	-17
 26958  019826  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26959                           
 26960                           ;stkvar	_xtoa$6870 @ sp[(-20)+2]
 26961  01982C  0EEE               	movlw	-18
 26962  01982E  006F FF8C  F02A    	movff	plusw1,btemp
 26963  019834  0EEF               	movlw	-17
 26964  019836  50E3               	movf	plusw1,w,c
 26965  019838  102A               	iorwf	btemp^0,w,c
 26966  01983A  B4D8               	btfsc	status,2,c
 26967  01983C  D041               	goto	l15840
 26968  01983E  0E9F               	movlw	159
 26969  019840  6E34               	movwf	(btemp+10)^0,c
 26970  019842  0EFF               	movlw	255
 26971  019844  6E35               	movwf	(btemp+11)^0,c
 26972                           
 26973                           ;stkvar	_c @ sp[(-20)+12]
 26974  019846  0EF8               	movlw	-8
 26975  019848  006F FF8C  F032    	movff	plusw1,btemp+8
 26976  01984E  0EF9               	movlw	-7
 26977  019850  006F FF8C  F033    	movff	plusw1,btemp+9
 26978  019856  0E20               	movlw	32
 26979  019858  1232               	iorwf	(btemp+8)^0,f,c
 26980  01985A  0E00               	movlw	0
 26981  01985C  1233               	iorwf	(btemp+9)^0,f,c
 26982  01985E  5034               	movf	(btemp+10)^0,w,c
 26983  019860  2632               	addwf	(btemp+8)^0,f,c
 26984  019862  5035               	movf	(btemp+11)^0,w,c
 26985  019864  2233               	addwfc	(btemp+9)^0,f,c
 26986  019866  5033               	movf	(btemp+9)^0,w,c
 26987  019868  E106               	bnz	u15230
 26988  01986A  0E1A               	movlw	26
 26989  01986C  5C32               	subwf	(btemp+8)^0,w,c
 26990  01986E  B0D8               	btfsc	status,0,c
 26991  019870  D002               	goto	u15230
 26992  019872  0E01               	movlw	1
 26993  019874  D001               	goto	u15240
 26994  019876                     u15230:
 26995  019876  0E00               	movlw	0
 26996  019878                     u15240:
 26997  019878  6E34               	movwf	(btemp+10)^0,c
 26998  01987A  6A35               	clrf	(btemp+11)^0,c
 26999                           
 27000                           ;stkvar	_xtoa$6871 @ sp[(-20)+0]
 27001  01987C  0EEC               	movlw	-20
 27002  01987E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27003  019884  0EED               	movlw	-19
 27004  019886  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27005                           
 27006                           ;stkvar	_xtoa$6871 @ sp[(-20)+0]
 27007  01988C  0EEC               	movlw	-20
 27008  01988E  006F FF8C  F02A    	movff	plusw1,btemp
 27009  019894  0EED               	movlw	-19
 27010  019896  50E3               	movf	plusw1,w,c
 27011  019898  102A               	iorwf	btemp^0,w,c
 27012  01989A  B4D8               	btfsc	status,2,c
 27013  01989C  D011               	goto	l15840
 27014                           
 27015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 27016                           ;stkvar	_c @ sp[(-20)+12]
 27017  01989E  0EF8               	movlw	-8
 27018  0198A0  006F FF8F FFE6     	movff	plusw1,postinc1
 27019  0198A6  006F FF8F FFE6     	movff	plusw1,postinc1
 27020  0198AC  ECB1  F004         	call	_toupper	;wreg free
 27021                           
 27022                           ;stkvar	_c @ sp[(-20)+12]
 27023  0198B0  0EF8               	movlw	-8
 27024  0198B2  0060  F0AB  FFE3   	movff	btemp,plusw1
 27025  0198B8  0EF9               	movlw	-7
 27026  0198BA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 27027  0198C0                     l15840:
 27028                           
 27029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 27030                           ;stkvar	_c @ sp[(-20)+12]
 27031                           ;stkvar	_i @ sp[(-20)+14]
 27032  0198C0  0EFA               	movlw	-6
 27033  0198C2  006F FF8C  F034    	movff	plusw1,btemp+10
 27034  0198C8  0EFB               	movlw	-5
 27035  0198CA  006F FF8C  F035    	movff	plusw1,btemp+11
 27036  0198D0  0E54               	movlw	low _dbuf
 27037  0198D2  2434               	addwf	(btemp+10)^0,w,c
 27038  0198D4  6ED9               	movwf	fsr2l,c
 27039  0198D6  0E03               	movlw	high _dbuf
 27040  0198D8  2035               	addwfc	(btemp+11)^0,w,c
 27041  0198DA  6EDA               	movwf	fsr2h,c
 27042  0198DC  0EF8               	movlw	-8
 27043  0198DE  006F FF8F FFDF     	movff	plusw1,indf2
 27044                           
 27045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 27046                           ;stkvar	_p @ sp[(-20)+18]
 27047  0198E4  50E1               	movf	fsr1l,w,c
 27048  0198E6  0FFE               	addlw	-2
 27049  0198E8  6ED9               	movwf	fsr2l,c
 27050  0198EA  50E2               	movf	fsr1h,w,c
 27051  0198EC  6EDA               	movwf	fsr2h,c
 27052  0198EE  0EFF               	movlw	255
 27053  0198F0  22DA               	addwfc	fsr2h,f,c
 27054  0198F2  06DE               	decf	postinc2,f,c
 27055  0198F4  0E00               	movlw	0
 27056  0198F6  5ADD               	subwfb	postdec2,f,c
 27057                           
 27058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 27059                           ;stkvar	_w @ sp[(-20)+16]
 27060  0198F8  50E1               	movf	fsr1l,w,c
 27061  0198FA  0FFC               	addlw	-4
 27062  0198FC  6ED9               	movwf	fsr2l,c
 27063  0198FE  50E2               	movf	fsr1h,w,c
 27064  019900  6EDA               	movwf	fsr2h,c
 27065  019902  0EFF               	movlw	255
 27066  019904  22DA               	addwfc	fsr2h,f,c
 27067  019906  06DE               	decf	postinc2,f,c
 27068  019908  0E00               	movlw	0
 27069  01990A  5ADD               	subwfb	postdec2,f,c
 27070                           
 27071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 27072  01990C  0E04               	movlw	4
 27073  01990E  6E35               	movwf	(btemp+11)^0,c
 27074                           
 27075                           ;stkvar	_n @ sp[(-20)+4]
 27076  019910  50E1               	movf	fsr1l,w,c
 27077  019912  0FF0               	addlw	-16
 27078  019914  6ED9               	movwf	fsr2l,c
 27079  019916  50E2               	movf	fsr1h,w,c
 27080  019918  6EDA               	movwf	fsr2h,c
 27081  01991A  0EFF               	movlw	255
 27082  01991C  22DA               	addwfc	fsr2h,f,c
 27083  01991E  2835               	incf	(btemp+11)^0,w,c
 27084  019920  52DE               	movf	postinc2,f,c
 27085  019922  D00F               	goto	u15260
 27086  019924                     u15265:
 27087  019924  52DE               	movf	postinc2,f,c
 27088  019926  52DE               	movf	postinc2,f,c
 27089  019928  52DE               	movf	postinc2,f,c
 27090  01992A  52DE               	movf	postinc2,f,c
 27091  01992C  52DE               	movf	postinc2,f,c
 27092  01992E  52DE               	movf	postinc2,f,c
 27093  019930  90D8               	bcf	status,0,c
 27094  019932  32DD               	rrcf	postdec2,f,c
 27095  019934  32DD               	rrcf	postdec2,f,c
 27096  019936  32DD               	rrcf	postdec2,f,c
 27097  019938  32DD               	rrcf	postdec2,f,c
 27098  01993A  32DD               	rrcf	postdec2,f,c
 27099  01993C  32DD               	rrcf	postdec2,f,c
 27100  01993E  32DD               	rrcf	postdec2,f,c
 27101  019940  32DE               	rrcf	postinc2,f,c
 27102  019942                     u15260:
 27103  019942  2EE8               	decfsz	wreg,f,c
 27104  019944  D7EF               	goto	u15265
 27105  019946                     l15848:
 27106                           
 27107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27108                           ;stkvar	_i @ sp[(-20)+14]
 27109  019946  0EFB               	movlw	-5
 27110  019948  BEE3               	btfsc	plusw1,7,c
 27111  01994A  D03A               	goto	u15310
 27112  01994C  0EFB               	movlw	-5
 27113  01994E  50E3               	movf	plusw1,w,c
 27114  019950  E108               	bnz	u15270
 27115  019952  0EFA               	movlw	-6
 27116  019954  006F FF8C  F02A    	movff	plusw1,btemp
 27117  01995A  0E02               	movlw	2
 27118  01995C  5E2A               	subwf	btemp^0,f,c
 27119  01995E  A0D8               	btfss	status,0,c
 27120  019960  D02F               	goto	u15310
 27121  019962                     u15270:
 27122                           
 27123                           ;stkvar	_n @ sp[(-20)+4]
 27124  019962  0EF0               	movlw	-16
 27125  019964  50E3               	movf	plusw1,w,c
 27126  019966  E115               	bnz	u15281
 27127  019968  0EF1               	movlw	-15
 27128  01996A  50E3               	movf	plusw1,w,c
 27129  01996C  E112               	bnz	u15281
 27130  01996E  0EF2               	movlw	-14
 27131  019970  50E3               	movf	plusw1,w,c
 27132  019972  E10F               	bnz	u15281
 27133  019974  0EF3               	movlw	-13
 27134  019976  50E3               	movf	plusw1,w,c
 27135  019978  E10C               	bnz	u15281
 27136  01997A  0EF4               	movlw	-12
 27137  01997C  50E3               	movf	plusw1,w,c
 27138  01997E  E109               	bnz	u15281
 27139  019980  0EF5               	movlw	-11
 27140  019982  50E3               	movf	plusw1,w,c
 27141  019984  E106               	bnz	u15281
 27142  019986  0EF6               	movlw	-10
 27143  019988  50E3               	movf	plusw1,w,c
 27144  01998A  E103               	bnz	u15281
 27145  01998C  0EF7               	movlw	-9
 27146  01998E  50E3               	movf	plusw1,w,c
 27147  019990  A4D8               	btfss	status,2,c
 27148  019992                     u15281:
 27149  019992  D6EB               	goto	l15816
 27150                           
 27151                           ;stkvar	_p @ sp[(-20)+18]
 27152  019994  0EFF               	movlw	-1
 27153  019996  BEE3               	btfsc	plusw1,7,c
 27154  019998  D007               	goto	u15290
 27155  01999A  0EFF               	movlw	-1
 27156  01999C  50E3               	movf	plusw1,w,c
 27157  01999E  E103               	bnz	u15291
 27158  0199A0  0EFE               	movlw	-2
 27159  0199A2  04E3               	decf	plusw1,w,c
 27160  0199A4  B0D8               	btfsc	status,0,c
 27161  0199A6                     u15291:
 27162  0199A6  D6E1               	goto	l15816
 27163  0199A8                     u15290:
 27164                           
 27165                           ;stkvar	_w @ sp[(-20)+16]
 27166  0199A8  0EFD               	movlw	-3
 27167  0199AA  BEE3               	btfsc	plusw1,7,c
 27168  0199AC  D009               	goto	u15310
 27169  0199AE  0EFD               	movlw	-3
 27170  0199B0  50E3               	movf	plusw1,w,c
 27171  0199B2  E104               	bnz	u15300
 27172  0199B4  0EFC               	movlw	-4
 27173  0199B6  04E3               	decf	plusw1,w,c
 27174  0199B8  A0D8               	btfss	status,0,c
 27175  0199BA  D002               	goto	u15310
 27176  0199BC                     u15300:
 27177  0199BC  B24E               	btfsc	_flags^0,1,c
 27178  0199BE  D6D5               	goto	l15816
 27179  0199C0                     u15310:
 27180                           
 27181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 27182  0199C0  A84E               	btfss	_flags^0,4,c
 27183  0199C2  D036               	goto	l15864
 27184                           
 27185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 27186                           ;stkvar	_i @ sp[(-20)+14]
 27187  0199C4  50E1               	movf	fsr1l,w,c
 27188  0199C6  0FFA               	addlw	-6
 27189  0199C8  6ED9               	movwf	fsr2l,c
 27190  0199CA  50E2               	movf	fsr1h,w,c
 27191  0199CC  6EDA               	movwf	fsr2h,c
 27192  0199CE  0EFF               	movlw	255
 27193  0199D0  22DA               	addwfc	fsr2h,f,c
 27194  0199D2  06DE               	decf	postinc2,f,c
 27195  0199D4  0E00               	movlw	0
 27196  0199D6  5ADD               	subwfb	postdec2,f,c
 27197                           
 27198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 27199                           ;stkvar	_x @ sp[(-20)+-11]
 27200                           ;stkvar	_i @ sp[(-20)+14]
 27201  0199D8  0EFA               	movlw	-6
 27202  0199DA  006F FF8C  F034    	movff	plusw1,btemp+10
 27203  0199E0  0EFB               	movlw	-5
 27204  0199E2  006F FF8C  F035    	movff	plusw1,btemp+11
 27205  0199E8  0E54               	movlw	low _dbuf
 27206  0199EA  2434               	addwf	(btemp+10)^0,w,c
 27207  0199EC  6ED9               	movwf	fsr2l,c
 27208  0199EE  0E03               	movlw	high _dbuf
 27209  0199F0  2035               	addwfc	(btemp+11)^0,w,c
 27210  0199F2  6EDA               	movwf	fsr2h,c
 27211  0199F4  0EE1               	movlw	-31
 27212  0199F6  006F FF8F FFDF     	movff	plusw1,indf2
 27213                           
 27214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 27215                           ;stkvar	_i @ sp[(-20)+14]
 27216  0199FC  50E1               	movf	fsr1l,w,c
 27217  0199FE  0FFA               	addlw	-6
 27218  019A00  6ED9               	movwf	fsr2l,c
 27219  019A02  50E2               	movf	fsr1h,w,c
 27220  019A04  6EDA               	movwf	fsr2h,c
 27221  019A06  0EFF               	movlw	255
 27222  019A08  22DA               	addwfc	fsr2h,f,c
 27223  019A0A  06DE               	decf	postinc2,f,c
 27224  019A0C  0E00               	movlw	0
 27225  019A0E  5ADD               	subwfb	postdec2,f,c
 27226                           
 27227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 27228                           ;stkvar	_i @ sp[(-20)+14]
 27229  019A10  0EFA               	movlw	-6
 27230  019A12  006F FF8C  F034    	movff	plusw1,btemp+10
 27231  019A18  0EFB               	movlw	-5
 27232  019A1A  006F FF8C  F035    	movff	plusw1,btemp+11
 27233  019A20  0E54               	movlw	low _dbuf
 27234  019A22  2434               	addwf	(btemp+10)^0,w,c
 27235  019A24  6ED9               	movwf	fsr2l,c
 27236  019A26  0E03               	movlw	high _dbuf
 27237  019A28  2035               	addwfc	(btemp+11)^0,w,c
 27238  019A2A  6EDA               	movwf	fsr2h,c
 27239  019A2C  0E30               	movlw	48
 27240  019A2E  6EDF               	movwf	indf2,c
 27241  019A30                     l15864:
 27242                           
 27243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 27244                           ;stkvar	_w @ sp[(-20)+16]
 27245  019A30  0EFC               	movlw	-4
 27246  019A32  006F FF8F FFE6     	movff	plusw1,postinc1
 27247  019A38  006F FF8F FFE6     	movff	plusw1,postinc1
 27248                           
 27249                           ;stkvar	_i @ sp[(-22)+14]
 27250  019A3E  0E54               	movlw	low _dbuf
 27251  019A40  6E34               	movwf	(btemp+10)^0,c
 27252  019A42  0E03               	movlw	high _dbuf
 27253  019A44  6E35               	movwf	(btemp+11)^0,c
 27254  019A46  0EF8               	movlw	-8
 27255  019A48  50E3               	movf	plusw1,w,c
 27256  019A4A  2634               	addwf	(btemp+10)^0,f,c
 27257  019A4C  0EF9               	movlw	-7
 27258  019A4E  50E3               	movf	plusw1,w,c
 27259  019A50  2235               	addwfc	(btemp+11)^0,f,c
 27260  019A52  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27261  019A58  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27262                           
 27263                           ;stkvar	_fp @ sp[(-24)+-2]
 27264  019A5E  0EE6               	movlw	-26
 27265  019A60  006F FF8F FFE6     	movff	plusw1,postinc1
 27266  019A66  006F FF8F FFE6     	movff	plusw1,postinc1
 27267  019A6C  EC03  F0F9         	call	_pad	;wreg free
 27268                           
 27269                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 27270  019A70  0EE1               	movlw	225
 27271  019A72  26E1               	addwf	fsr1l,f,c
 27272  019A74  0EFF               	movlw	255
 27273  019A76  22E2               	addwfc	fsr1h,f,c
 27274  019A78  0012               	return		;funcret
 27275  019A7A                     __end_of_xtoa:
 27276                           	opt callstack 0
 27277                           
 27278 ;; *************** function _toupper *****************
 27279 ;; Defined at:
 27280 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 27281 ;; Parameters:    Size  Location     Type
 27282 ;;  c               2  [STACK] int 
 27283 ;; Auto vars:     Size  Location     Type
 27284 ;;		None
 27285 ;; Return value:  Size  Location     Type
 27286 ;;                  2  [STACK] int 
 27287 ;; Registers used:
 27288 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 27289 ;; Tracked objects:
 27290 ;;		On entry : 0/3
 27291 ;;		On exit  : 0/0
 27292 ;;		Unchanged: 0/0
 27293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27298 ;;Total ram usage:        0 bytes
 27299 ;; Hardware stack levels used:    1
 27300 ;; Hardware stack levels required when called:   16
 27301 ;; This function calls:
 27302 ;;		_islower
 27303 ;; This function is called by:
 27304 ;;		_xtoa
 27305 ;; This function uses a reentrant model
 27306 ;;
 27307                           
 27308                           	psect	text93
 27309  000962                     __ptext93:
 27310                           	opt callstack 0
 27311  000962                     _toupper:
 27312                           	opt callstack 0
 27313                           
 27314                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27315  000962  52E6               	movf	postinc1,f,c
 27316  000964  52E6               	movf	postinc1,f,c
 27317                           
 27318                           ;stkvar	_c @ sp[(-2)+-2]
 27319                           
 27320                           ;incstack = 0
 27321 ;; hardware stack exceeded
 27322  000966  0EFC               	movlw	-4
 27323  000968  50E3               	movf	plusw1,w,c
 27324  00096A  0F9F               	addlw	159
 27325  00096C  6E34               	movwf	(btemp+10)^0,c
 27326  00096E  0EFD               	movlw	-3
 27327  000970  006F FF8C  F035    	movff	plusw1,btemp+11
 27328  000976  0EFF               	movlw	255
 27329  000978  2235               	addwfc	(btemp+11)^0,f,c
 27330  00097A  5035               	movf	(btemp+11)^0,w,c
 27331  00097C  E106               	bnz	u7940
 27332  00097E  0E1A               	movlw	26
 27333  000980  5C34               	subwf	(btemp+10)^0,w,c
 27334  000982  B0D8               	btfsc	status,0,c
 27335  000984  D002               	goto	u7940
 27336  000986  0E01               	movlw	1
 27337  000988  D001               	goto	u7950
 27338  00098A                     u7940:
 27339  00098A  0E00               	movlw	0
 27340  00098C                     u7950:
 27341  00098C  6E34               	movwf	(btemp+10)^0,c
 27342  00098E  6A35               	clrf	(btemp+11)^0,c
 27343                           
 27344                           ;stkvar	_toupper$7812 @ sp[(-2)+0]
 27345  000990  0EFE               	movlw	-2
 27346  000992  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27347  000998  0EFF               	movlw	-1
 27348  00099A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27349                           
 27350                           ;stkvar	_toupper$7812 @ sp[(-2)+0]
 27351  0009A0  0EFE               	movlw	-2
 27352  0009A2  006F FF8C  F02A    	movff	plusw1,btemp
 27353  0009A8  0EFF               	movlw	-1
 27354  0009AA  50E3               	movf	plusw1,w,c
 27355  0009AC  102A               	iorwf	btemp^0,w,c
 27356  0009AE  B4D8               	btfsc	status,2,c
 27357  0009B0  D00D               	goto	l10118
 27358                           
 27359                           ;stkvar	_c @ sp[(-2)+-2]
 27360  0009B2  0EFC               	movlw	-4
 27361  0009B4  006F FF8C  F02A    	movff	plusw1,btemp
 27362  0009BA  0EFD               	movlw	-3
 27363  0009BC  006F FF8C  F02B    	movff	plusw1,btemp+1
 27364  0009C2  0E5F               	movlw	95
 27365  0009C4  162A               	andwf	btemp^0,f,c
 27366  0009C6  0E00               	movlw	0
 27367  0009C8  162B               	andwf	(btemp+1)^0,f,c
 27368  0009CA  D008               	goto	l3822
 27369  0009CC                     l10118:
 27370                           
 27371                           ;stkvar	_c @ sp[(-2)+-2]
 27372  0009CC  0EFC               	movlw	-4
 27373  0009CE  006F FF8C  F02A    	movff	plusw1,btemp
 27374  0009D4  0EFD               	movlw	-3
 27375  0009D6  006F FF8C  F02B    	movff	plusw1,btemp+1
 27376  0009DC                     l3822:
 27377                           
 27378                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27379  0009DC  52E5               	movf	postdec1,f,c
 27380  0009DE  52E5               	movf	postdec1,f,c
 27381  0009E0  52E5               	movf	postdec1,f,c
 27382  0009E2  52E5               	movf	postdec1,f,c
 27383  0009E4  0012               	return		;funcret
 27384  0009E6                     __end_of_toupper:
 27385                           	opt callstack 0
 27386                           
 27387 ;; *************** function _islower *****************
 27388 ;; Defined at:
 27389 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 27390 ;; Parameters:    Size  Location     Type
 27391 ;;  c               2  [STACK] int 
 27392 ;; Auto vars:     Size  Location     Type
 27393 ;;		None
 27394 ;; Return value:  Size  Location     Type
 27395 ;;                  2  [STACK] int 
 27396 ;; Registers used:
 27397 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 27398 ;; Tracked objects:
 27399 ;;		On entry : 0/0
 27400 ;;		On exit  : 0/0
 27401 ;;		Unchanged: 0/0
 27402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27407 ;;Total ram usage:        0 bytes
 27408 ;; Hardware stack levels used:    1
 27409 ;; Hardware stack levels required when called:   15
 27410 ;; This function calls:
 27411 ;;		Nothing
 27412 ;; This function is called by:
 27413 ;;		_toupper
 27414 ;; This function uses a reentrant model
 27415 ;;
 27416                           
 27417                           	psect	text94
 27418  001AE8                     __ptext94:
 27419                           	opt callstack 0
 27420  001AE8                     _islower:
 27421                           	opt callstack 0
 27422                           
 27423                           ;stkvar	_c @ sp[(0)+-2]
 27424                           
 27425                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27426                           ;incstack = 0
 27427 ;; hardware stack exceeded
 27428  001AE8  0EFE               	movlw	-2
 27429  001AEA  50E3               	movf	plusw1,w,c
 27430  001AEC  0F9F               	addlw	159
 27431  001AEE  6E34               	movwf	(btemp+10)^0,c
 27432  001AF0  0EFF               	movlw	-1
 27433  001AF2  006F FF8C  F035    	movff	plusw1,btemp+11
 27434  001AF8  0EFF               	movlw	255
 27435  001AFA  2235               	addwfc	(btemp+11)^0,f,c
 27436  001AFC  5035               	movf	(btemp+11)^0,w,c
 27437  001AFE  E106               	bnz	u7570
 27438  001B00  0E1A               	movlw	26
 27439  001B02  5C34               	subwf	(btemp+10)^0,w,c
 27440  001B04  B0D8               	btfsc	status,0,c
 27441  001B06  D002               	goto	u7570
 27442  001B08  0E01               	movlw	1
 27443  001B0A  D001               	goto	u7580
 27444  001B0C                     u7570:
 27445  001B0C  0E00               	movlw	0
 27446  001B0E                     u7580:
 27447  001B0E  6E2A               	movwf	btemp^0,c
 27448  001B10  6A2B               	clrf	(btemp+1)^0,c
 27449                           
 27450                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27451  001B12  52E5               	movf	postdec1,f,c
 27452  001B14  52E5               	movf	postdec1,f,c
 27453  001B16  0012               	return		;funcret
 27454  001B18                     __end_of_islower:
 27455                           	opt callstack 0
 27456                           
 27457 ;; *************** function _isalpha *****************
 27458 ;; Defined at:
 27459 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 27460 ;; Parameters:    Size  Location     Type
 27461 ;;  c               2  [STACK] int 
 27462 ;; Auto vars:     Size  Location     Type
 27463 ;;		None
 27464 ;; Return value:  Size  Location     Type
 27465 ;;                  2  [STACK] int 
 27466 ;; Registers used:
 27467 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 27468 ;; Tracked objects:
 27469 ;;		On entry : 0/0
 27470 ;;		On exit  : 0/0
 27471 ;;		Unchanged: 0/0
 27472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27477 ;;Total ram usage:        0 bytes
 27478 ;; Hardware stack levels used:    1
 27479 ;; Hardware stack levels required when called:   15
 27480 ;; This function calls:
 27481 ;;		Nothing
 27482 ;; This function is called by:
 27483 ;;		_xtoa
 27484 ;; This function uses a reentrant model
 27485 ;;
 27486                           
 27487                           	psect	text95
 27488  001696                     __ptext95:
 27489                           	opt callstack 0
 27490  001696                     _isalpha:
 27491                           	opt callstack 0
 27492                           
 27493                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27494                           ;incstack = 0
 27495 ;; hardware stack exceeded
 27496  001696  0E9F               	movlw	159
 27497  001698  6E34               	movwf	(btemp+10)^0,c
 27498  00169A  0EFF               	movlw	255
 27499  00169C  6E35               	movwf	(btemp+11)^0,c
 27500                           
 27501                           ;stkvar	_c @ sp[(0)+-2]
 27502  00169E  0EFE               	movlw	-2
 27503  0016A0  006F FF8C  F032    	movff	plusw1,btemp+8
 27504  0016A6  0EFF               	movlw	-1
 27505  0016A8  006F FF8C  F033    	movff	plusw1,btemp+9
 27506  0016AE  0E20               	movlw	32
 27507  0016B0  1232               	iorwf	(btemp+8)^0,f,c
 27508  0016B2  0E00               	movlw	0
 27509  0016B4  1233               	iorwf	(btemp+9)^0,f,c
 27510  0016B6  5034               	movf	(btemp+10)^0,w,c
 27511  0016B8  2632               	addwf	(btemp+8)^0,f,c
 27512  0016BA  5035               	movf	(btemp+11)^0,w,c
 27513  0016BC  2233               	addwfc	(btemp+9)^0,f,c
 27514  0016BE  5033               	movf	(btemp+9)^0,w,c
 27515  0016C0  E106               	bnz	u7920
 27516  0016C2  0E1A               	movlw	26
 27517  0016C4  5C32               	subwf	(btemp+8)^0,w,c
 27518  0016C6  B0D8               	btfsc	status,0,c
 27519  0016C8  D002               	goto	u7920
 27520  0016CA  0E01               	movlw	1
 27521  0016CC  D001               	goto	u7930
 27522  0016CE                     u7920:
 27523  0016CE  0E00               	movlw	0
 27524  0016D0                     u7930:
 27525  0016D0  6E2A               	movwf	btemp^0,c
 27526  0016D2  6A2B               	clrf	(btemp+1)^0,c
 27527                           
 27528                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27529  0016D4  52E5               	movf	postdec1,f,c
 27530  0016D6  52E5               	movf	postdec1,f,c
 27531  0016D8  0012               	return		;funcret
 27532  0016DA                     __end_of_isalpha:
 27533                           	opt callstack 0
 27534                           
 27535 ;; *************** function _utoa *****************
 27536 ;; Defined at:
 27537 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 27538 ;; Parameters:    Size  Location     Type
 27539 ;;  fp              2  [STACK] PTR struct _IO_FILE
 27540 ;;		 -> f(6), NULL(0), 
 27541 ;;  d               8  [STACK] unsigned long long 
 27542 ;; Auto vars:     Size  Location     Type
 27543 ;;  n               8  [STACK] unsigned long long 
 27544 ;;  i               2  [STACK] int 
 27545 ;;  w               2  [STACK] int 
 27546 ;;  p               2  [STACK] int 
 27547 ;; Return value:  Size  Location     Type
 27548 ;;                  2  [STACK] int 
 27549 ;; Registers used:
 27550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 27551 ;; Tracked objects:
 27552 ;;		On entry : 0/0
 27553 ;;		On exit  : 0/0
 27554 ;;		Unchanged: 0/0
 27555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27560 ;;Total ram usage:        0 bytes
 27561 ;; Hardware stack levels used:    1
 27562 ;; Hardware stack levels required when called:   20
 27563 ;; This function calls:
 27564 ;;		___lodiv
 27565 ;;		___lomod
 27566 ;;		_pad
 27567 ;; This function is called by:
 27568 ;;		_vfpfcnvrt
 27569 ;; This function uses a reentrant model
 27570 ;;
 27571                           
 27572                           	psect	text96
 27573  01A4AA                     __ptext96:
 27574                           	opt callstack 0
 27575  01A4AA                     _utoa:
 27576                           	opt callstack 0
 27577                           
 27578                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 27579  01A4AA  0E0E               	movlw	14
 27580  01A4AC  26E1               	addwf	fsr1l,f,c
 27581  01A4AE  0E00               	movlw	0
 27582  01A4B0  22E2               	addwfc	fsr1h,f,c
 27583                           
 27584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 27585                           
 27586                           ;incstack = 0
 27587 ;; hardware stack exceeded
 27588  01A4B2  AE4D               	btfss	(_prec+1)^0,7,c
 27589                           
 27590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 27591  01A4B4  924E               	bcf	_flags^0,1,c
 27592                           
 27593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 27594  01A4B6  BE4D               	btfsc	(_prec+1)^0,7,c
 27595  01A4B8  D005               	goto	u15080
 27596  01A4BA  504D               	movf	(_prec+1)^0,w,c
 27597  01A4BC  E110               	bnz	l15764
 27598  01A4BE  044C               	decf	_prec^0,w,c
 27599  01A4C0  B0D8               	btfsc	status,0,c
 27600  01A4C2  D00D               	goto	l15764
 27601  01A4C4                     u15080:
 27602  01A4C4  0E01               	movlw	1
 27603  01A4C6  6E34               	movwf	(btemp+10)^0,c
 27604  01A4C8  0E00               	movlw	0
 27605  01A4CA  6E35               	movwf	(btemp+11)^0,c
 27606                           
 27607                           ;stkvar	_p @ sp[(-14)+12]
 27608  01A4CC  0EFE               	movlw	-2
 27609  01A4CE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27610  01A4D4  0EFF               	movlw	-1
 27611  01A4D6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27612  01A4DC  D008               	goto	l2610
 27613  01A4DE                     l15764:
 27614                           
 27615                           ;stkvar	_p @ sp[(-14)+12]
 27616  01A4DE  0EFE               	movlw	-2
 27617  01A4E0  0060  F133  FFE3   	movff	_prec,plusw1
 27618  01A4E6  0EFF               	movlw	-1
 27619  01A4E8  0060  F137  FFE3   	movff	_prec+1,plusw1
 27620  01A4EE                     l2610:
 27621                           
 27622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 27623                           ;stkvar	_w @ sp[(-14)+10]
 27624  01A4EE  0EFC               	movlw	-4
 27625  01A4F0  0060  F12B  FFE3   	movff	_width,plusw1
 27626  01A4F6  0EFD               	movlw	-3
 27627  01A4F8  0060  F12F  FFE3   	movff	_width+1,plusw1
 27628                           
 27629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 27630                           ;stkvar	_d @ sp[(-14)+-10]
 27631  01A4FE  0EE8               	movlw	232
 27632  01A500  24E1               	addwf	fsr1l,w,c
 27633  01A502  6ED9               	movwf	fsr2l,c
 27634  01A504  0EFF               	movlw	255
 27635  01A506  20E2               	addwfc	fsr1h,w,c
 27636  01A508  6EDA               	movwf	fsr2h,c
 27637                           
 27638                           ;stkvar	_n @ sp[(-14)+0]
 27639  01A50A  0E08               	movlw	8
 27640  01A50C  6E2A               	movwf	btemp^0,c
 27641  01A50E  0EF2               	movlw	-14
 27642  01A510                     us1509999:
 27643  01A510  006F FF7B FFE3     	movff	postinc2,plusw1
 27644  01A516  28E8               	incf	wreg,w,c
 27645  01A518  2E2A               	decfsz	btemp^0,f,c
 27646  01A51A  D7FA               	bra	us1509999
 27647                           
 27648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 27649  01A51C  0E4F               	movlw	79
 27650  01A51E  6E34               	movwf	(btemp+10)^0,c
 27651  01A520  0E00               	movlw	0
 27652  01A522  6E35               	movwf	(btemp+11)^0,c
 27653                           
 27654                           ;stkvar	_i @ sp[(-14)+8]
 27655  01A524  0EFA               	movlw	-6
 27656  01A526  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27657  01A52C  0EFB               	movlw	-5
 27658  01A52E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27659                           
 27660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 27661  01A534  0103               	movlb	3	; () banked
 27662  01A536  6BA3               	clrf	(_dbuf+79)& (0+255),b
 27663                           
 27664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 27665  01A538  D0FB               	goto	l15782
 27666  01A53A                     l15772:
 27667                           
 27668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 27669                           ;stkvar	_i @ sp[(-14)+8]
 27670  01A53A  50E1               	movf	fsr1l,w,c
 27671  01A53C  0FFA               	addlw	-6
 27672  01A53E  6ED9               	movwf	fsr2l,c
 27673  01A540  50E2               	movf	fsr1h,w,c
 27674  01A542  6EDA               	movwf	fsr2h,c
 27675  01A544  0EFF               	movlw	255
 27676  01A546  22DA               	addwfc	fsr2h,f,c
 27677  01A548  06DE               	decf	postinc2,f,c
 27678  01A54A  0E00               	movlw	0
 27679  01A54C  5ADD               	subwfb	postdec2,f,c
 27680                           
 27681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 27682  01A54E  0E0A               	movlw	10
 27683  01A550  6EE6               	movwf	postinc1,c
 27684  01A552  0E00               	movlw	0
 27685  01A554  6EE6               	movwf	postinc1,c
 27686  01A556  0E00               	movlw	0
 27687  01A558  6EE6               	movwf	postinc1,c
 27688  01A55A  0E00               	movlw	0
 27689  01A55C  6EE6               	movwf	postinc1,c
 27690  01A55E  0E00               	movlw	0
 27691  01A560  6EE6               	movwf	postinc1,c
 27692  01A562  0E00               	movlw	0
 27693  01A564  6EE6               	movwf	postinc1,c
 27694  01A566  0E00               	movlw	0
 27695  01A568  6EE6               	movwf	postinc1,c
 27696  01A56A  0E00               	movlw	0
 27697  01A56C  6EE6               	movwf	postinc1,c
 27698                           
 27699                           ;stkvar	_n @ sp[(-22)+0]
 27700  01A56E  50E1               	movf	fsr1l,w,c
 27701  01A570  0FEA               	addlw	-22
 27702  01A572  6ED9               	movwf	fsr2l,c
 27703  01A574  50E2               	movf	fsr1h,w,c
 27704  01A576  6EDA               	movwf	fsr2h,c
 27705  01A578  0EFF               	movlw	255
 27706  01A57A  22DA               	addwfc	fsr2h,f,c
 27707  01A57C  006F FF7B FFE6     	movff	postinc2,postinc1
 27708  01A582  006F FF7B FFE6     	movff	postinc2,postinc1
 27709  01A588  006F FF7B FFE6     	movff	postinc2,postinc1
 27710  01A58E  006F FF7B FFE6     	movff	postinc2,postinc1
 27711  01A594  006F FF7B FFE6     	movff	postinc2,postinc1
 27712  01A59A  006F FF7B FFE6     	movff	postinc2,postinc1
 27713  01A5A0  006F FF7B FFE6     	movff	postinc2,postinc1
 27714  01A5A6  006F FF7B FFE6     	movff	postinc2,postinc1
 27715  01A5AC  EC90  F0F5         	call	___lomod	;wreg free
 27716  01A5B0  52E5               	movf	postdec1,f,c
 27717  01A5B2  006F FF9C  F041    	movff	indf1,btemp+23
 27718  01A5B8  52E5               	movf	postdec1,f,c
 27719  01A5BA  006F FF9C  F040    	movff	indf1,btemp+22
 27720  01A5C0  52E5               	movf	postdec1,f,c
 27721  01A5C2  006F FF9C  F03F    	movff	indf1,btemp+21
 27722  01A5C8  52E5               	movf	postdec1,f,c
 27723  01A5CA  006F FF9C  F03E    	movff	indf1,btemp+20
 27724  01A5D0  52E5               	movf	postdec1,f,c
 27725  01A5D2  006F FF9C  F03D    	movff	indf1,btemp+19
 27726  01A5D8  52E5               	movf	postdec1,f,c
 27727  01A5DA  006F FF9C  F03C    	movff	indf1,btemp+18
 27728  01A5E0  52E5               	movf	postdec1,f,c
 27729  01A5E2  006F FF9C  F03B    	movff	indf1,btemp+17
 27730  01A5E8  52E5               	movf	postdec1,f,c
 27731  01A5EA  006F FF9C  F03A    	movff	indf1,btemp+16
 27732  01A5F0  0EF8               	movlw	248
 27733  01A5F2  26E1               	addwf	fsr1l,f,c
 27734  01A5F4  0EFF               	movlw	255
 27735  01A5F6  22E2               	addwfc	fsr1h,f,c
 27736  01A5F8  0E30               	movlw	48
 27737  01A5FA  263A               	addwf	(btemp+16)^0,f,c
 27738                           
 27739                           ;stkvar	_i @ sp[(-14)+8]
 27740  01A5FC  0EFA               	movlw	-6
 27741  01A5FE  006F FF8C  F034    	movff	plusw1,btemp+10
 27742  01A604  0EFB               	movlw	-5
 27743  01A606  006F FF8C  F035    	movff	plusw1,btemp+11
 27744  01A60C  0E54               	movlw	low _dbuf
 27745  01A60E  2434               	addwf	(btemp+10)^0,w,c
 27746  01A610  6ED9               	movwf	fsr2l,c
 27747  01A612  0E03               	movlw	high _dbuf
 27748  01A614  2035               	addwfc	(btemp+11)^0,w,c
 27749  01A616  6EDA               	movwf	fsr2h,c
 27750  01A618  0060  F0EB  FFDF   	movff	btemp+16,indf2
 27751                           
 27752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 27753                           ;stkvar	_p @ sp[(-14)+12]
 27754  01A61E  50E1               	movf	fsr1l,w,c
 27755  01A620  0FFE               	addlw	-2
 27756  01A622  6ED9               	movwf	fsr2l,c
 27757  01A624  50E2               	movf	fsr1h,w,c
 27758  01A626  6EDA               	movwf	fsr2h,c
 27759  01A628  0EFF               	movlw	255
 27760  01A62A  22DA               	addwfc	fsr2h,f,c
 27761  01A62C  06DE               	decf	postinc2,f,c
 27762  01A62E  0E00               	movlw	0
 27763  01A630  5ADD               	subwfb	postdec2,f,c
 27764                           
 27765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 27766                           ;stkvar	_w @ sp[(-14)+10]
 27767  01A632  50E1               	movf	fsr1l,w,c
 27768  01A634  0FFC               	addlw	-4
 27769  01A636  6ED9               	movwf	fsr2l,c
 27770  01A638  50E2               	movf	fsr1h,w,c
 27771  01A63A  6EDA               	movwf	fsr2h,c
 27772  01A63C  0EFF               	movlw	255
 27773  01A63E  22DA               	addwfc	fsr2h,f,c
 27774  01A640  06DE               	decf	postinc2,f,c
 27775  01A642  0E00               	movlw	0
 27776  01A644  5ADD               	subwfb	postdec2,f,c
 27777                           
 27778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 27779  01A646  0E0A               	movlw	10
 27780  01A648  6EE6               	movwf	postinc1,c
 27781  01A64A  0E00               	movlw	0
 27782  01A64C  6EE6               	movwf	postinc1,c
 27783  01A64E  0E00               	movlw	0
 27784  01A650  6EE6               	movwf	postinc1,c
 27785  01A652  0E00               	movlw	0
 27786  01A654  6EE6               	movwf	postinc1,c
 27787  01A656  0E00               	movlw	0
 27788  01A658  6EE6               	movwf	postinc1,c
 27789  01A65A  0E00               	movlw	0
 27790  01A65C  6EE6               	movwf	postinc1,c
 27791  01A65E  0E00               	movlw	0
 27792  01A660  6EE6               	movwf	postinc1,c
 27793  01A662  0E00               	movlw	0
 27794  01A664  6EE6               	movwf	postinc1,c
 27795                           
 27796                           ;stkvar	_n @ sp[(-22)+0]
 27797  01A666  50E1               	movf	fsr1l,w,c
 27798  01A668  0FEA               	addlw	-22
 27799  01A66A  6ED9               	movwf	fsr2l,c
 27800  01A66C  50E2               	movf	fsr1h,w,c
 27801  01A66E  6EDA               	movwf	fsr2h,c
 27802  01A670  0EFF               	movlw	255
 27803  01A672  22DA               	addwfc	fsr2h,f,c
 27804  01A674  006F FF7B FFE6     	movff	postinc2,postinc1
 27805  01A67A  006F FF7B FFE6     	movff	postinc2,postinc1
 27806  01A680  006F FF7B FFE6     	movff	postinc2,postinc1
 27807  01A686  006F FF7B FFE6     	movff	postinc2,postinc1
 27808  01A68C  006F FF7B FFE6     	movff	postinc2,postinc1
 27809  01A692  006F FF7B FFE6     	movff	postinc2,postinc1
 27810  01A698  006F FF7B FFE6     	movff	postinc2,postinc1
 27811  01A69E  006F FF7B FFE6     	movff	postinc2,postinc1
 27812  01A6A4  ECF8  F0ED         	call	___lodiv	;wreg free
 27813  01A6A8  52E5               	movf	postdec1,f,c
 27814  01A6AA  006F FF9C  F041    	movff	indf1,btemp+23
 27815  01A6B0  52E5               	movf	postdec1,f,c
 27816  01A6B2  006F FF9C  F040    	movff	indf1,btemp+22
 27817  01A6B8  52E5               	movf	postdec1,f,c
 27818  01A6BA  006F FF9C  F03F    	movff	indf1,btemp+21
 27819  01A6C0  52E5               	movf	postdec1,f,c
 27820  01A6C2  006F FF9C  F03E    	movff	indf1,btemp+20
 27821  01A6C8  52E5               	movf	postdec1,f,c
 27822  01A6CA  006F FF9C  F03D    	movff	indf1,btemp+19
 27823  01A6D0  52E5               	movf	postdec1,f,c
 27824  01A6D2  006F FF9C  F03C    	movff	indf1,btemp+18
 27825  01A6D8  52E5               	movf	postdec1,f,c
 27826  01A6DA  006F FF9C  F03B    	movff	indf1,btemp+17
 27827  01A6E0  52E5               	movf	postdec1,f,c
 27828  01A6E2  006F FF9C  F03A    	movff	indf1,btemp+16
 27829  01A6E8  0EF8               	movlw	248
 27830  01A6EA  26E1               	addwf	fsr1l,f,c
 27831  01A6EC  0EFF               	movlw	255
 27832  01A6EE  22E2               	addwfc	fsr1h,f,c
 27833                           
 27834                           ;stkvar	_n @ sp[(-14)+0]
 27835  01A6F0  0EF2               	movlw	-14
 27836  01A6F2  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27837  01A6F8  0EF3               	movlw	-13
 27838  01A6FA  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27839  01A700  0EF4               	movlw	-12
 27840  01A702  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27841  01A708  0EF5               	movlw	-11
 27842  01A70A  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27843  01A710  0EF6               	movlw	-10
 27844  01A712  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27845  01A718  0EF7               	movlw	-9
 27846  01A71A  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27847  01A720  0EF8               	movlw	-8
 27848  01A722  0060  F103  FFE3   	movff	btemp+22,plusw1
 27849  01A728  0EF9               	movlw	-7
 27850  01A72A  0060  F107  FFE3   	movff	btemp+23,plusw1
 27851  01A730                     l15782:
 27852                           
 27853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 27854                           ;stkvar	_i @ sp[(-14)+8]
 27855  01A730  0EFA               	movlw	-6
 27856  01A732  006F FF8C  F02A    	movff	plusw1,btemp
 27857  01A738  0EFB               	movlw	-5
 27858  01A73A  50E3               	movf	plusw1,w,c
 27859  01A73C  102A               	iorwf	btemp^0,w,c
 27860  01A73E  B4D8               	btfsc	status,2,c
 27861  01A740  D02F               	goto	u15140
 27862                           
 27863                           ;stkvar	_n @ sp[(-14)+0]
 27864  01A742  0EF2               	movlw	-14
 27865  01A744  50E3               	movf	plusw1,w,c
 27866  01A746  E115               	bnz	u15111
 27867  01A748  0EF3               	movlw	-13
 27868  01A74A  50E3               	movf	plusw1,w,c
 27869  01A74C  E112               	bnz	u15111
 27870  01A74E  0EF4               	movlw	-12
 27871  01A750  50E3               	movf	plusw1,w,c
 27872  01A752  E10F               	bnz	u15111
 27873  01A754  0EF5               	movlw	-11
 27874  01A756  50E3               	movf	plusw1,w,c
 27875  01A758  E10C               	bnz	u15111
 27876  01A75A  0EF6               	movlw	-10
 27877  01A75C  50E3               	movf	plusw1,w,c
 27878  01A75E  E109               	bnz	u15111
 27879  01A760  0EF7               	movlw	-9
 27880  01A762  50E3               	movf	plusw1,w,c
 27881  01A764  E106               	bnz	u15111
 27882  01A766  0EF8               	movlw	-8
 27883  01A768  50E3               	movf	plusw1,w,c
 27884  01A76A  E103               	bnz	u15111
 27885  01A76C  0EF9               	movlw	-7
 27886  01A76E  50E3               	movf	plusw1,w,c
 27887  01A770  A4D8               	btfss	status,2,c
 27888  01A772                     u15111:
 27889  01A772  D6E3               	goto	l15772
 27890                           
 27891                           ;stkvar	_p @ sp[(-14)+12]
 27892  01A774  0EFF               	movlw	-1
 27893  01A776  BEE3               	btfsc	plusw1,7,c
 27894  01A778  D007               	goto	u15120
 27895  01A77A  0EFF               	movlw	-1
 27896  01A77C  50E3               	movf	plusw1,w,c
 27897  01A77E  E103               	bnz	u15121
 27898  01A780  0EFE               	movlw	-2
 27899  01A782  04E3               	decf	plusw1,w,c
 27900  01A784  B0D8               	btfsc	status,0,c
 27901  01A786                     u15121:
 27902  01A786  D6D9               	goto	l15772
 27903  01A788                     u15120:
 27904                           
 27905                           ;stkvar	_w @ sp[(-14)+10]
 27906  01A788  0EFD               	movlw	-3
 27907  01A78A  BEE3               	btfsc	plusw1,7,c
 27908  01A78C  D009               	goto	u15140
 27909  01A78E  0EFD               	movlw	-3
 27910  01A790  50E3               	movf	plusw1,w,c
 27911  01A792  E104               	bnz	u15130
 27912  01A794  0EFC               	movlw	-4
 27913  01A796  04E3               	decf	plusw1,w,c
 27914  01A798  A0D8               	btfss	status,0,c
 27915  01A79A  D002               	goto	u15140
 27916  01A79C                     u15130:
 27917  01A79C  B24E               	btfsc	_flags^0,1,c
 27918  01A79E  D6CD               	goto	l15772
 27919  01A7A0                     u15140:
 27920                           
 27921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 27922                           ;stkvar	_w @ sp[(-14)+10]
 27923  01A7A0  0EFC               	movlw	-4
 27924  01A7A2  006F FF8F FFE6     	movff	plusw1,postinc1
 27925  01A7A8  006F FF8F FFE6     	movff	plusw1,postinc1
 27926                           
 27927                           ;stkvar	_i @ sp[(-16)+8]
 27928  01A7AE  0E54               	movlw	low _dbuf
 27929  01A7B0  6E34               	movwf	(btemp+10)^0,c
 27930  01A7B2  0E03               	movlw	high _dbuf
 27931  01A7B4  6E35               	movwf	(btemp+11)^0,c
 27932  01A7B6  0EF8               	movlw	-8
 27933  01A7B8  50E3               	movf	plusw1,w,c
 27934  01A7BA  2634               	addwf	(btemp+10)^0,f,c
 27935  01A7BC  0EF9               	movlw	-7
 27936  01A7BE  50E3               	movf	plusw1,w,c
 27937  01A7C0  2235               	addwfc	(btemp+11)^0,f,c
 27938  01A7C2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27939  01A7C8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27940                           
 27941                           ;stkvar	_fp @ sp[(-18)+-2]
 27942  01A7CE  0EEC               	movlw	-20
 27943  01A7D0  006F FF8F FFE6     	movff	plusw1,postinc1
 27944  01A7D6  006F FF8F FFE6     	movff	plusw1,postinc1
 27945  01A7DC  EC03  F0F9         	call	_pad	;wreg free
 27946                           
 27947                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 27948  01A7E0  0EE8               	movlw	232
 27949  01A7E2  26E1               	addwf	fsr1l,f,c
 27950  01A7E4  0EFF               	movlw	255
 27951  01A7E6  22E2               	addwfc	fsr1h,f,c
 27952  01A7E8  0012               	return		;funcret
 27953  01A7EA                     __end_of_utoa:
 27954                           	opt callstack 0
 27955                           
 27956 ;; *************** function ___lomod *****************
 27957 ;; Defined at:
 27958 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 27959 ;; Parameters:    Size  Location     Type
 27960 ;;  dividend        8  [STACK] unsigned long long 
 27961 ;;  divisor         8  [STACK] unsigned long long 
 27962 ;; Auto vars:     Size  Location     Type
 27963 ;;  counter         1  [STACK] unsigned char 
 27964 ;; Return value:  Size  Location     Type
 27965 ;;                  8  [STACK] unsigned long long 
 27966 ;; Registers used:
 27967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 27968 ;; Tracked objects:
 27969 ;;		On entry : 0/3
 27970 ;;		On exit  : 0/0
 27971 ;;		Unchanged: 0/0
 27972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27977 ;;Total ram usage:        0 bytes
 27978 ;; Hardware stack levels used:    1
 27979 ;; Hardware stack levels required when called:   15
 27980 ;; This function calls:
 27981 ;;		Nothing
 27982 ;; This function is called by:
 27983 ;;		_utoa
 27984 ;; This function uses a reentrant model
 27985 ;;
 27986                           
 27987                           	psect	text97
 27988  01EB20                     __ptext97:
 27989                           	opt callstack 0
 27990  01EB20                     ___lomod:
 27991                           	opt callstack 0
 27992                           
 27993                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 27994  01EB20  52E6               	movf	postinc1,f,c
 27995                           
 27996                           ;stkvar	_divisor @ sp[(-1)+-16]
 27997                           
 27998                           ;incstack = 0
 27999 ;; hardware stack exceeded
 28000  01EB22  0EEF               	movlw	-17
 28001  01EB24  50E3               	movf	plusw1,w,c
 28002  01EB26  E116               	bnz	u9130
 28003  01EB28  0EF0               	movlw	-16
 28004  01EB2A  50E3               	movf	plusw1,w,c
 28005  01EB2C  E113               	bnz	u9130
 28006  01EB2E  0EF1               	movlw	-15
 28007  01EB30  50E3               	movf	plusw1,w,c
 28008  01EB32  E110               	bnz	u9130
 28009  01EB34  0EF2               	movlw	-14
 28010  01EB36  50E3               	movf	plusw1,w,c
 28011  01EB38  E10D               	bnz	u9130
 28012  01EB3A  0EF3               	movlw	-13
 28013  01EB3C  50E3               	movf	plusw1,w,c
 28014  01EB3E  E10A               	bnz	u9130
 28015  01EB40  0EF4               	movlw	-12
 28016  01EB42  50E3               	movf	plusw1,w,c
 28017  01EB44  E107               	bnz	u9130
 28018  01EB46  0EF5               	movlw	-11
 28019  01EB48  50E3               	movf	plusw1,w,c
 28020  01EB4A  E104               	bnz	u9130
 28021  01EB4C  0EF6               	movlw	-10
 28022  01EB4E  50E3               	movf	plusw1,w,c
 28023  01EB50  B4D8               	btfsc	status,2,c
 28024  01EB52  D075               	goto	u9160
 28025  01EB54                     u9130:
 28026                           
 28027                           ;stkvar	_counter @ sp[(-1)+0]
 28028  01EB54  0EFF               	movlw	-1
 28029  01EB56  6AE3               	clrf	plusw1,c
 28030  01EB58  D012               	goto	L28
 28031  01EB5A                     l10754:
 28032                           
 28033                           ;stkvar	_divisor @ sp[(-1)+-16]
 28034  01EB5A  90D8               	bcf	status,0,c
 28035  01EB5C  0EEF               	movlw	-17
 28036  01EB5E  36E3               	rlcf	plusw1,f,c
 28037  01EB60  0EF0               	movlw	-16
 28038  01EB62  36E3               	rlcf	plusw1,f,c
 28039  01EB64  0EF1               	movlw	-15
 28040  01EB66  36E3               	rlcf	plusw1,f,c
 28041  01EB68  0EF2               	movlw	-14
 28042  01EB6A  36E3               	rlcf	plusw1,f,c
 28043  01EB6C  0EF3               	movlw	-13
 28044  01EB6E  36E3               	rlcf	plusw1,f,c
 28045  01EB70  0EF4               	movlw	-12
 28046  01EB72  36E3               	rlcf	plusw1,f,c
 28047  01EB74  0EF5               	movlw	-11
 28048  01EB76  36E3               	rlcf	plusw1,f,c
 28049  01EB78  0EF6               	movlw	-10
 28050  01EB7A  36E3               	rlcf	plusw1,f,c
 28051                           
 28052                           ;stkvar	_counter @ sp[(-1)+0]
 28053  01EB7C  0EFF               	movlw	-1
 28054  01EB7E                     L28:
 28055  01EB7E  2AE3               	incf	plusw1,f,c
 28056                           
 28057                           ;stkvar	_divisor @ sp[(-1)+-16]
 28058  01EB80  0EF6               	movlw	-10
 28059  01EB82  AEE3               	btfss	plusw1,7,c
 28060  01EB84  D7EA               	goto	l10754
 28061  01EB86                     u9140:
 28062                           
 28063                           ;stkvar	_divisor @ sp[(-1)+-16]
 28064                           ;stkvar	_dividend @ sp[(-1)+-8]
 28065  01EB86  50E1               	movf	fsr1l,w,c
 28066  01EB88  0FF7               	addlw	-9
 28067  01EB8A  6ED9               	movwf	fsr2l,c
 28068  01EB8C  50E2               	movf	fsr1h,w,c
 28069  01EB8E  6EDA               	movwf	fsr2h,c
 28070  01EB90  0EFF               	movlw	255
 28071  01EB92  22DA               	addwfc	fsr2h,f,c
 28072  01EB94  0EEF               	movlw	-17
 28073  01EB96  50E3               	movf	plusw1,w,c
 28074  01EB98  5CDE               	subwf	postinc2,w,c
 28075  01EB9A  0EF0               	movlw	-16
 28076  01EB9C  50E3               	movf	plusw1,w,c
 28077  01EB9E  58DE               	subwfb	postinc2,w,c
 28078  01EBA0  0EF1               	movlw	-15
 28079  01EBA2  50E3               	movf	plusw1,w,c
 28080  01EBA4  58DE               	subwfb	postinc2,w,c
 28081  01EBA6  0EF2               	movlw	-14
 28082  01EBA8  50E3               	movf	plusw1,w,c
 28083  01EBAA  58DE               	subwfb	postinc2,w,c
 28084  01EBAC  0EF3               	movlw	-13
 28085  01EBAE  50E3               	movf	plusw1,w,c
 28086  01EBB0  58DE               	subwfb	postinc2,w,c
 28087  01EBB2  0EF4               	movlw	-12
 28088  01EBB4  50E3               	movf	plusw1,w,c
 28089  01EBB6  58DE               	subwfb	postinc2,w,c
 28090  01EBB8  0EF5               	movlw	-11
 28091  01EBBA  50E3               	movf	plusw1,w,c
 28092  01EBBC  58DE               	subwfb	postinc2,w,c
 28093  01EBBE  0EF6               	movlw	-10
 28094  01EBC0  50E3               	movf	plusw1,w,c
 28095  01EBC2  58DE               	subwfb	postinc2,w,c
 28096  01EBC4  A0D8               	btfss	status,0,c
 28097  01EBC6  D01F               	goto	l10762
 28098                           
 28099                           ;stkvar	_divisor @ sp[(-1)+-16]
 28100                           ;stkvar	_dividend @ sp[(-1)+-8]
 28101  01EBC8  50E1               	movf	fsr1l,w,c
 28102  01EBCA  0FF7               	addlw	-9
 28103  01EBCC  6ED9               	movwf	fsr2l,c
 28104  01EBCE  50E2               	movf	fsr1h,w,c
 28105  01EBD0  6EDA               	movwf	fsr2h,c
 28106  01EBD2  0EFF               	movlw	255
 28107  01EBD4  22DA               	addwfc	fsr2h,f,c
 28108  01EBD6  0EEF               	movlw	-17
 28109  01EBD8  50E3               	movf	plusw1,w,c
 28110  01EBDA  5EDE               	subwf	postinc2,f,c
 28111  01EBDC  0EF0               	movlw	-16
 28112  01EBDE  50E3               	movf	plusw1,w,c
 28113  01EBE0  5ADE               	subwfb	postinc2,f,c
 28114  01EBE2  0EF1               	movlw	-15
 28115  01EBE4  50E3               	movf	plusw1,w,c
 28116  01EBE6  5ADE               	subwfb	postinc2,f,c
 28117  01EBE8  0EF2               	movlw	-14
 28118  01EBEA  50E3               	movf	plusw1,w,c
 28119  01EBEC  5ADE               	subwfb	postinc2,f,c
 28120  01EBEE  0EF3               	movlw	-13
 28121  01EBF0  50E3               	movf	plusw1,w,c
 28122  01EBF2  5ADE               	subwfb	postinc2,f,c
 28123  01EBF4  0EF4               	movlw	-12
 28124  01EBF6  50E3               	movf	plusw1,w,c
 28125  01EBF8  5ADE               	subwfb	postinc2,f,c
 28126  01EBFA  0EF5               	movlw	-11
 28127  01EBFC  50E3               	movf	plusw1,w,c
 28128  01EBFE  5ADE               	subwfb	postinc2,f,c
 28129  01EC00  0EF6               	movlw	-10
 28130  01EC02  50E3               	movf	plusw1,w,c
 28131  01EC04  5ADE               	subwfb	postinc2,f,c
 28132  01EC06                     l10762:
 28133                           
 28134                           ;stkvar	_divisor @ sp[(-1)+-16]
 28135  01EC06  90D8               	bcf	status,0,c
 28136  01EC08  0EF6               	movlw	-10
 28137  01EC0A  32E3               	rrcf	plusw1,f,c
 28138  01EC0C  0EF5               	movlw	-11
 28139  01EC0E  32E3               	rrcf	plusw1,f,c
 28140  01EC10  0EF4               	movlw	-12
 28141  01EC12  32E3               	rrcf	plusw1,f,c
 28142  01EC14  0EF3               	movlw	-13
 28143  01EC16  32E3               	rrcf	plusw1,f,c
 28144  01EC18  0EF2               	movlw	-14
 28145  01EC1A  32E3               	rrcf	plusw1,f,c
 28146  01EC1C  0EF1               	movlw	-15
 28147  01EC1E  32E3               	rrcf	plusw1,f,c
 28148  01EC20  0EF0               	movlw	-16
 28149  01EC22  32E3               	rrcf	plusw1,f,c
 28150  01EC24  0EEF               	movlw	-17
 28151  01EC26  32E3               	rrcf	plusw1,f,c
 28152                           
 28153                           ;stkvar	_counter @ sp[(-1)+0]
 28154  01EC28  0EFF               	movlw	-1
 28155  01EC2A  50E3               	movf	plusw1,w,c
 28156  01EC2C  6E2A               	movwf	btemp^0,c
 28157  01EC2E  0E01               	movlw	1
 28158  01EC30  5E2A               	subwf	btemp^0,f,c
 28159  01EC32  0EFF               	movlw	-1
 28160  01EC34  0060  F0AB  FFE3   	movff	btemp,plusw1
 28161  01EC3A  A4D8               	btfss	status,2,c
 28162  01EC3C  D7A4               	goto	u9140
 28163  01EC3E                     u9160:
 28164                           
 28165                           ;stkvar	_dividend @ sp[(-1)+-8]
 28166  01EC3E  0EF7               	movlw	247
 28167  01EC40  24E1               	addwf	fsr1l,w,c
 28168  01EC42  6ED9               	movwf	fsr2l,c
 28169  01EC44  0EFF               	movlw	255
 28170  01EC46  20E2               	addwfc	fsr1h,w,c
 28171  01EC48  6EDA               	movwf	fsr2h,c
 28172                           
 28173                           ;stkvar	?___lomod @ sp[(-1)+-8]
 28174  01EC4A  0E08               	movlw	8
 28175  01EC4C  6E2A               	movwf	btemp^0,c
 28176  01EC4E  0EF7               	movlw	-9
 28177  01EC50                     us917999:
 28178  01EC50  006F FF7B FFE3     	movff	postinc2,plusw1
 28179  01EC56  28E8               	incf	wreg,w,c
 28180  01EC58  2E2A               	decfsz	btemp^0,f,c
 28181  01EC5A  D7FA               	bra	us917999
 28182                           
 28183                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 28184  01EC5C  52E5               	movf	postdec1,f,c
 28185  01EC5E  0012               	return		;funcret
 28186  01EC60                     __end_of___lomod:
 28187                           	opt callstack 0
 28188                           
 28189 ;; *************** function ___lodiv *****************
 28190 ;; Defined at:
 28191 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 28192 ;; Parameters:    Size  Location     Type
 28193 ;;  dividend        8  [STACK] unsigned long long 
 28194 ;;  divisor         8  [STACK] unsigned long long 
 28195 ;; Auto vars:     Size  Location     Type
 28196 ;;  quotient        8  [STACK] unsigned long long 
 28197 ;;  counter         1  [STACK] unsigned char 
 28198 ;; Return value:  Size  Location     Type
 28199 ;;                  8  [STACK] unsigned long long 
 28200 ;; Registers used:
 28201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 28202 ;; Tracked objects:
 28203 ;;		On entry : 0/3
 28204 ;;		On exit  : 0/0
 28205 ;;		Unchanged: 0/0
 28206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28211 ;;Total ram usage:        0 bytes
 28212 ;; Hardware stack levels used:    1
 28213 ;; Hardware stack levels required when called:   15
 28214 ;; This function calls:
 28215 ;;		Nothing
 28216 ;; This function is called by:
 28217 ;;		_utoa
 28218 ;; This function uses a reentrant model
 28219 ;;
 28220                           
 28221                           	psect	text98
 28222  01DBF0                     __ptext98:
 28223                           	opt callstack 0
 28224  01DBF0                     ___lodiv:
 28225                           	opt callstack 0
 28226                           
 28227                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 28228  01DBF0  0E09               	movlw	9
 28229  01DBF2  26E1               	addwf	fsr1l,f,c
 28230  01DBF4  0E00               	movlw	0
 28231  01DBF6  22E2               	addwfc	fsr1h,f,c
 28232                           
 28233                           ;stkvar	_quotient @ sp[(-9)+0]
 28234                           
 28235                           ;incstack = 0
 28236 ;; hardware stack exceeded
 28237  01DBF8  0E07               	movlw	7
 28238  01DBFA  6E2A               	movwf	btemp^0,c
 28239  01DBFC  0EF7               	movlw	-9
 28240  01DBFE                     u9071:
 28241  01DBFE  6AE3               	clrf	plusw1,c
 28242  01DC00  2AE8               	incf	wreg,f,c
 28243  01DC02  062A               	decf	btemp^0,f,c
 28244  01DC04  E2FC               	bc	u9071
 28245                           
 28246                           ;stkvar	_divisor @ sp[(-9)+-16]
 28247  01DC06  0EE7               	movlw	-25
 28248  01DC08  50E3               	movf	plusw1,w,c
 28249  01DC0A  E116               	bnz	u9080
 28250  01DC0C  0EE8               	movlw	-24
 28251  01DC0E  50E3               	movf	plusw1,w,c
 28252  01DC10  E113               	bnz	u9080
 28253  01DC12  0EE9               	movlw	-23
 28254  01DC14  50E3               	movf	plusw1,w,c
 28255  01DC16  E110               	bnz	u9080
 28256  01DC18  0EEA               	movlw	-22
 28257  01DC1A  50E3               	movf	plusw1,w,c
 28258  01DC1C  E10D               	bnz	u9080
 28259  01DC1E  0EEB               	movlw	-21
 28260  01DC20  50E3               	movf	plusw1,w,c
 28261  01DC22  E10A               	bnz	u9080
 28262  01DC24  0EEC               	movlw	-20
 28263  01DC26  50E3               	movf	plusw1,w,c
 28264  01DC28  E107               	bnz	u9080
 28265  01DC2A  0EED               	movlw	-19
 28266  01DC2C  50E3               	movf	plusw1,w,c
 28267  01DC2E  E104               	bnz	u9080
 28268  01DC30  0EEE               	movlw	-18
 28269  01DC32  50E3               	movf	plusw1,w,c
 28270  01DC34  B4D8               	btfsc	status,2,c
 28271  01DC36  D088               	goto	u9110
 28272  01DC38                     u9080:
 28273                           
 28274                           ;stkvar	_counter @ sp[(-9)+8]
 28275  01DC38  0EFF               	movlw	-1
 28276  01DC3A  6AE3               	clrf	plusw1,c
 28277  01DC3C  D012               	goto	L29
 28278  01DC3E                     l10730:
 28279                           
 28280                           ;stkvar	_divisor @ sp[(-9)+-16]
 28281  01DC3E  90D8               	bcf	status,0,c
 28282  01DC40  0EE7               	movlw	-25
 28283  01DC42  36E3               	rlcf	plusw1,f,c
 28284  01DC44  0EE8               	movlw	-24
 28285  01DC46  36E3               	rlcf	plusw1,f,c
 28286  01DC48  0EE9               	movlw	-23
 28287  01DC4A  36E3               	rlcf	plusw1,f,c
 28288  01DC4C  0EEA               	movlw	-22
 28289  01DC4E  36E3               	rlcf	plusw1,f,c
 28290  01DC50  0EEB               	movlw	-21
 28291  01DC52  36E3               	rlcf	plusw1,f,c
 28292  01DC54  0EEC               	movlw	-20
 28293  01DC56  36E3               	rlcf	plusw1,f,c
 28294  01DC58  0EED               	movlw	-19
 28295  01DC5A  36E3               	rlcf	plusw1,f,c
 28296  01DC5C  0EEE               	movlw	-18
 28297  01DC5E  36E3               	rlcf	plusw1,f,c
 28298                           
 28299                           ;stkvar	_counter @ sp[(-9)+8]
 28300  01DC60  0EFF               	movlw	-1
 28301  01DC62                     L29:
 28302  01DC62  2AE3               	incf	plusw1,f,c
 28303                           
 28304                           ;stkvar	_divisor @ sp[(-9)+-16]
 28305  01DC64  0EEE               	movlw	-18
 28306  01DC66  AEE3               	btfss	plusw1,7,c
 28307  01DC68  D7EA               	goto	l10730
 28308  01DC6A                     u9090:
 28309                           
 28310                           ;stkvar	_quotient @ sp[(-9)+0]
 28311  01DC6A  90D8               	bcf	status,0,c
 28312  01DC6C  0EF7               	movlw	-9
 28313  01DC6E  36E3               	rlcf	plusw1,f,c
 28314  01DC70  0EF8               	movlw	-8
 28315  01DC72  36E3               	rlcf	plusw1,f,c
 28316  01DC74  0EF9               	movlw	-7
 28317  01DC76  36E3               	rlcf	plusw1,f,c
 28318  01DC78  0EFA               	movlw	-6
 28319  01DC7A  36E3               	rlcf	plusw1,f,c
 28320  01DC7C  0EFB               	movlw	-5
 28321  01DC7E  36E3               	rlcf	plusw1,f,c
 28322  01DC80  0EFC               	movlw	-4
 28323  01DC82  36E3               	rlcf	plusw1,f,c
 28324  01DC84  0EFD               	movlw	-3
 28325  01DC86  36E3               	rlcf	plusw1,f,c
 28326  01DC88  0EFE               	movlw	-2
 28327  01DC8A  36E3               	rlcf	plusw1,f,c
 28328                           
 28329                           ;stkvar	_divisor @ sp[(-9)+-16]
 28330                           ;stkvar	_dividend @ sp[(-9)+-8]
 28331  01DC8C  50E1               	movf	fsr1l,w,c
 28332  01DC8E  0FEF               	addlw	-17
 28333  01DC90  6ED9               	movwf	fsr2l,c
 28334  01DC92  50E2               	movf	fsr1h,w,c
 28335  01DC94  6EDA               	movwf	fsr2h,c
 28336  01DC96  0EFF               	movlw	255
 28337  01DC98  22DA               	addwfc	fsr2h,f,c
 28338  01DC9A  0EE7               	movlw	-25
 28339  01DC9C  50E3               	movf	plusw1,w,c
 28340  01DC9E  5CDE               	subwf	postinc2,w,c
 28341  01DCA0  0EE8               	movlw	-24
 28342  01DCA2  50E3               	movf	plusw1,w,c
 28343  01DCA4  58DE               	subwfb	postinc2,w,c
 28344  01DCA6  0EE9               	movlw	-23
 28345  01DCA8  50E3               	movf	plusw1,w,c
 28346  01DCAA  58DE               	subwfb	postinc2,w,c
 28347  01DCAC  0EEA               	movlw	-22
 28348  01DCAE  50E3               	movf	plusw1,w,c
 28349  01DCB0  58DE               	subwfb	postinc2,w,c
 28350  01DCB2  0EEB               	movlw	-21
 28351  01DCB4  50E3               	movf	plusw1,w,c
 28352  01DCB6  58DE               	subwfb	postinc2,w,c
 28353  01DCB8  0EEC               	movlw	-20
 28354  01DCBA  50E3               	movf	plusw1,w,c
 28355  01DCBC  58DE               	subwfb	postinc2,w,c
 28356  01DCBE  0EED               	movlw	-19
 28357  01DCC0  50E3               	movf	plusw1,w,c
 28358  01DCC2  58DE               	subwfb	postinc2,w,c
 28359  01DCC4  0EEE               	movlw	-18
 28360  01DCC6  50E3               	movf	plusw1,w,c
 28361  01DCC8  58DE               	subwfb	postinc2,w,c
 28362  01DCCA  A0D8               	btfss	status,0,c
 28363  01DCCC  D021               	goto	l10742
 28364                           
 28365                           ;stkvar	_divisor @ sp[(-9)+-16]
 28366                           ;stkvar	_dividend @ sp[(-9)+-8]
 28367  01DCCE  50E1               	movf	fsr1l,w,c
 28368  01DCD0  0FEF               	addlw	-17
 28369  01DCD2  6ED9               	movwf	fsr2l,c
 28370  01DCD4  50E2               	movf	fsr1h,w,c
 28371  01DCD6  6EDA               	movwf	fsr2h,c
 28372  01DCD8  0EFF               	movlw	255
 28373  01DCDA  22DA               	addwfc	fsr2h,f,c
 28374  01DCDC  0EE7               	movlw	-25
 28375  01DCDE  50E3               	movf	plusw1,w,c
 28376  01DCE0  5EDE               	subwf	postinc2,f,c
 28377  01DCE2  0EE8               	movlw	-24
 28378  01DCE4  50E3               	movf	plusw1,w,c
 28379  01DCE6  5ADE               	subwfb	postinc2,f,c
 28380  01DCE8  0EE9               	movlw	-23
 28381  01DCEA  50E3               	movf	plusw1,w,c
 28382  01DCEC  5ADE               	subwfb	postinc2,f,c
 28383  01DCEE  0EEA               	movlw	-22
 28384  01DCF0  50E3               	movf	plusw1,w,c
 28385  01DCF2  5ADE               	subwfb	postinc2,f,c
 28386  01DCF4  0EEB               	movlw	-21
 28387  01DCF6  50E3               	movf	plusw1,w,c
 28388  01DCF8  5ADE               	subwfb	postinc2,f,c
 28389  01DCFA  0EEC               	movlw	-20
 28390  01DCFC  50E3               	movf	plusw1,w,c
 28391  01DCFE  5ADE               	subwfb	postinc2,f,c
 28392  01DD00  0EED               	movlw	-19
 28393  01DD02  50E3               	movf	plusw1,w,c
 28394  01DD04  5ADE               	subwfb	postinc2,f,c
 28395  01DD06  0EEE               	movlw	-18
 28396  01DD08  50E3               	movf	plusw1,w,c
 28397  01DD0A  5ADE               	subwfb	postinc2,f,c
 28398                           
 28399                           ;stkvar	_quotient @ sp[(-9)+0]
 28400  01DD0C  0EF7               	movlw	-9
 28401  01DD0E  80E3               	bsf	plusw1,0,c
 28402  01DD10                     l10742:
 28403                           
 28404                           ;stkvar	_divisor @ sp[(-9)+-16]
 28405  01DD10  90D8               	bcf	status,0,c
 28406  01DD12  0EEE               	movlw	-18
 28407  01DD14  32E3               	rrcf	plusw1,f,c
 28408  01DD16  0EED               	movlw	-19
 28409  01DD18  32E3               	rrcf	plusw1,f,c
 28410  01DD1A  0EEC               	movlw	-20
 28411  01DD1C  32E3               	rrcf	plusw1,f,c
 28412  01DD1E  0EEB               	movlw	-21
 28413  01DD20  32E3               	rrcf	plusw1,f,c
 28414  01DD22  0EEA               	movlw	-22
 28415  01DD24  32E3               	rrcf	plusw1,f,c
 28416  01DD26  0EE9               	movlw	-23
 28417  01DD28  32E3               	rrcf	plusw1,f,c
 28418  01DD2A  0EE8               	movlw	-24
 28419  01DD2C  32E3               	rrcf	plusw1,f,c
 28420  01DD2E  0EE7               	movlw	-25
 28421  01DD30  32E3               	rrcf	plusw1,f,c
 28422                           
 28423                           ;stkvar	_counter @ sp[(-9)+8]
 28424  01DD32  0EFF               	movlw	-1
 28425  01DD34  50E3               	movf	plusw1,w,c
 28426  01DD36  6E2A               	movwf	btemp^0,c
 28427  01DD38  0E01               	movlw	1
 28428  01DD3A  5E2A               	subwf	btemp^0,f,c
 28429  01DD3C  0EFF               	movlw	-1
 28430  01DD3E  0060  F0AB  FFE3   	movff	btemp,plusw1
 28431  01DD44  A4D8               	btfss	status,2,c
 28432  01DD46  D791               	goto	u9090
 28433  01DD48                     u9110:
 28434                           
 28435                           ;stkvar	_quotient @ sp[(-9)+0]
 28436  01DD48  0EF7               	movlw	247
 28437  01DD4A  24E1               	addwf	fsr1l,w,c
 28438  01DD4C  6ED9               	movwf	fsr2l,c
 28439  01DD4E  0EFF               	movlw	255
 28440  01DD50  20E2               	addwfc	fsr1h,w,c
 28441  01DD52  6EDA               	movwf	fsr2h,c
 28442                           
 28443                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 28444  01DD54  0E08               	movlw	8
 28445  01DD56  6E2A               	movwf	btemp^0,c
 28446  01DD58  0EEF               	movlw	-17
 28447  01DD5A                     us912999:
 28448  01DD5A  006F FF7B FFE3     	movff	postinc2,plusw1
 28449  01DD60  28E8               	incf	wreg,w,c
 28450  01DD62  2E2A               	decfsz	btemp^0,f,c
 28451  01DD64  D7FA               	bra	us912999
 28452                           
 28453                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 28454  01DD66  0EF7               	movlw	247
 28455  01DD68  26E1               	addwf	fsr1l,f,c
 28456  01DD6A  0EFF               	movlw	255
 28457  01DD6C  22E2               	addwfc	fsr1h,f,c
 28458  01DD6E  0012               	return		;funcret
 28459  01DD70                     __end_of___lodiv:
 28460                           	opt callstack 0
 28461                           
 28462 ;; *************** function _strncmp *****************
 28463 ;; Defined at:
 28464 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 28465 ;; Parameters:    Size  Location     Type
 28466 ;;  _l              2  [STACK] PTR const unsigned char 
 28467 ;;		 -> ct(3), STR_90(127), STR_88(3), STR_87(3), 
 28468 ;;		 -> STR_86(19), STR_85(19), STR_84(19), STR_83(19), 
 28469 ;;		 -> STR_82(19), STR_81(19), STR_80(24), STR_79(15), 
 28470 ;;		 -> STR_78(15), STR_77(15), STR_76(15), STR_75(10), 
 28471 ;;		 -> STR_74(10), STR_73(19), STR_72(19), STR_69(3), 
 28472 ;;		 -> STR_68(3), STR_67(14), STR_66(21), STR_65(21), 
 28473 ;;		 -> STR_64(21), STR_63(21), STR_62(21), STR_61(21), 
 28474 ;;		 -> STR_60(21), STR_59(21), STR_58(21), STR_57(21), 
 28475 ;;		 -> STR_56(21), STR_55(21), STR_54(20), STR_53(21), 
 28476 ;;		 -> STR_52(21), STR_51(21), STR_50(22), STR_49(22), 
 28477 ;;		 -> STR_48(22), STR_47(23), STR_46(23), STR_45(23), 
 28478 ;;		 -> STR_44(29), STR_43(23), STR_42(23), STR_41(22), 
 28479 ;;		 -> STR_40(22), STR_39(22), STR_38(22), STR_37(22), 
 28480 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 28481 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(17), 
 28482 ;;		 -> STR_28(16), STR_27(16), STR_26(21), STR_25(21), 
 28483 ;;		 -> STR_24(21), STR_23(26), STR_22(26), STR_21(22), 
 28484 ;;		 -> STR_20(21), STR_19(21), STR_18(21), STR_17(21), 
 28485 ;;		 -> STR_16(22), STR_15(22), STR_14(22), STR_13(26), 
 28486 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 28487 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 28488 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 28489 ;;  _r              2  [STACK] PTR const unsigned char 
 28490 ;;		 -> STR_124(3), STR_120(3), STR_115(3), STR_110(3), 
 28491 ;;		 -> STR_105(3), STR_101(3), 
 28492 ;;  n               2  [STACK] unsigned int 
 28493 ;; Auto vars:     Size  Location     Type
 28494 ;;  r               2  [STACK] PTR const unsigned char 
 28495 ;;		 -> STR_124(3), STR_120(3), STR_115(3), STR_110(3), 
 28496 ;;		 -> STR_105(3), STR_101(3), 
 28497 ;;  l               2  [STACK] PTR const unsigned char 
 28498 ;;		 -> ct(3), STR_90(127), STR_88(3), STR_87(3), 
 28499 ;;		 -> STR_86(19), STR_85(19), STR_84(19), STR_83(19), 
 28500 ;;		 -> STR_82(19), STR_81(19), STR_80(24), STR_79(15), 
 28501 ;;		 -> STR_78(15), STR_77(15), STR_76(15), STR_75(10), 
 28502 ;;		 -> STR_74(10), STR_73(19), STR_72(19), STR_69(3), 
 28503 ;;		 -> STR_68(3), STR_67(14), STR_66(21), STR_65(21), 
 28504 ;;		 -> STR_64(21), STR_63(21), STR_62(21), STR_61(21), 
 28505 ;;		 -> STR_60(21), STR_59(21), STR_58(21), STR_57(21), 
 28506 ;;		 -> STR_56(21), STR_55(21), STR_54(20), STR_53(21), 
 28507 ;;		 -> STR_52(21), STR_51(21), STR_50(22), STR_49(22), 
 28508 ;;		 -> STR_48(22), STR_47(23), STR_46(23), STR_45(23), 
 28509 ;;		 -> STR_44(29), STR_43(23), STR_42(23), STR_41(22), 
 28510 ;;		 -> STR_40(22), STR_39(22), STR_38(22), STR_37(22), 
 28511 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 28512 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(17), 
 28513 ;;		 -> STR_28(16), STR_27(16), STR_26(21), STR_25(21), 
 28514 ;;		 -> STR_24(21), STR_23(26), STR_22(26), STR_21(22), 
 28515 ;;		 -> STR_20(21), STR_19(21), STR_18(21), STR_17(21), 
 28516 ;;		 -> STR_16(22), STR_15(22), STR_14(22), STR_13(26), 
 28517 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 28518 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 28519 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 28520 ;; Return value:  Size  Location     Type
 28521 ;;                  2  [STACK] int 
 28522 ;; Registers used:
 28523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 28524 ;; Tracked objects:
 28525 ;;		On entry : 0/0
 28526 ;;		On exit  : 0/0
 28527 ;;		Unchanged: 0/0
 28528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28533 ;;Total ram usage:        0 bytes
 28534 ;; Hardware stack levels used:    1
 28535 ;; Hardware stack levels required when called:   15
 28536 ;; This function calls:
 28537 ;;		Nothing
 28538 ;; This function is called by:
 28539 ;;		_vfpfcnvrt
 28540 ;; This function uses a reentrant model
 28541 ;;
 28542                           
 28543                           	psect	text99
 28544  01C678                     __ptext99:
 28545                           	opt callstack 0
 28546  01C678                     _strncmp:
 28547                           	opt callstack 0
 28548                           
 28549                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28550  01C678  52E6               	movf	postinc1,f,c
 28551  01C67A  52E6               	movf	postinc1,f,c
 28552  01C67C  52E6               	movf	postinc1,f,c
 28553  01C67E  52E6               	movf	postinc1,f,c
 28554                           
 28555                           ;stkvar	__l @ sp[(-4)+-2]
 28556                           
 28557                           ;incstack = 0
 28558 ;; hardware stack exceeded
 28559  01C680  0EFA               	movlw	-6
 28560  01C682  006F FF8C  F034    	movff	plusw1,btemp+10
 28561  01C688  0EFB               	movlw	-5
 28562  01C68A  006F FF8C  F035    	movff	plusw1,btemp+11
 28563                           
 28564                           ;stkvar	_l @ sp[(-4)+2]
 28565  01C690  0EFF               	movlw	-1
 28566  01C692  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28567  01C698  0EFE               	movlw	-2
 28568  01C69A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28569                           
 28570                           ;stkvar	__r @ sp[(-4)+-4]
 28571  01C6A0  0EF8               	movlw	-8
 28572  01C6A2  006F FF8C  F034    	movff	plusw1,btemp+10
 28573  01C6A8  0EF9               	movlw	-7
 28574  01C6AA  006F FF8C  F035    	movff	plusw1,btemp+11
 28575                           
 28576                           ;stkvar	_r @ sp[(-4)+0]
 28577  01C6B0  0EFD               	movlw	-3
 28578  01C6B2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28579  01C6B8  0EFC               	movlw	-4
 28580  01C6BA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28581                           
 28582                           ;stkvar	_n @ sp[(-4)+-6]
 28583  01C6C0  0EF6               	movlw	-10
 28584  01C6C2  006F FF8C  F02A    	movff	plusw1,btemp
 28585  01C6C8  0E01               	movlw	1
 28586  01C6CA  5E2A               	subwf	btemp^0,f,c
 28587  01C6CC  0EF6               	movlw	-10
 28588  01C6CE  0060  F0AB  FFE3   	movff	btemp,plusw1
 28589  01C6D4  0EF7               	movlw	-9
 28590  01C6D6  006F FF8C  F02A    	movff	plusw1,btemp
 28591  01C6DC  0E00               	movlw	0
 28592  01C6DE  5A2A               	subwfb	btemp^0,f,c
 28593  01C6E0  0EF7               	movlw	-9
 28594  01C6E2  0060  F0AB  FFE3   	movff	btemp,plusw1
 28595  01C6E8  0EF6               	movlw	-10
 28596  01C6EA  28E3               	incf	plusw1,w,c
 28597  01C6EC  E13F               	bnz	l11446
 28598  01C6EE  0EF7               	movlw	-9
 28599  01C6F0  28E3               	incf	plusw1,w,c
 28600  01C6F2  A4D8               	btfss	status,2,c
 28601  01C6F4  D03B               	goto	l11446
 28602  01C6F6  0E00               	movlw	0
 28603  01C6F8  6E2A               	movwf	btemp^0,c
 28604  01C6FA  0E00               	movlw	0
 28605  01C6FC  6E2B               	movwf	(btemp+1)^0,c
 28606  01C6FE  D0C7               	goto	l3794
 28607  01C700                     l11444:
 28608                           
 28609                           ;stkvar	_l @ sp[(-4)+2]
 28610  01C700  0EFE               	movlw	-2
 28611  01C702  50E3               	movf	plusw1,w,c
 28612  01C704  0F01               	addlw	1
 28613  01C706  6E2A               	movwf	btemp^0,c
 28614  01C708  0EFE               	movlw	-2
 28615  01C70A  0060  F0AB  FFE3   	movff	btemp,plusw1
 28616  01C710  6A2A               	clrf	btemp^0,c
 28617  01C712  0EFF               	movlw	-1
 28618  01C714  50E3               	movf	plusw1,w,c
 28619  01C716  202A               	addwfc	btemp^0,w,c
 28620  01C718  6E2A               	movwf	btemp^0,c
 28621  01C71A  0EFF               	movlw	-1
 28622  01C71C  0060  F0AB  FFE3   	movff	btemp,plusw1
 28623                           
 28624                           ;stkvar	_r @ sp[(-4)+0]
 28625  01C722  0EFC               	movlw	-4
 28626  01C724  50E3               	movf	plusw1,w,c
 28627  01C726  0F01               	addlw	1
 28628  01C728  6E2A               	movwf	btemp^0,c
 28629  01C72A  0EFC               	movlw	-4
 28630  01C72C  0060  F0AB  FFE3   	movff	btemp,plusw1
 28631  01C732  6A2A               	clrf	btemp^0,c
 28632  01C734  0EFD               	movlw	-3
 28633  01C736  50E3               	movf	plusw1,w,c
 28634  01C738  202A               	addwfc	btemp^0,w,c
 28635  01C73A  6E2A               	movwf	btemp^0,c
 28636  01C73C  0EFD               	movlw	-3
 28637  01C73E  0060  F0AB  FFE3   	movff	btemp,plusw1
 28638                           
 28639                           ;stkvar	_n @ sp[(-4)+-6]
 28640  01C744  0EF6               	movlw	-10
 28641  01C746  006F FF8C  F02A    	movff	plusw1,btemp
 28642  01C74C  0E01               	movlw	1
 28643  01C74E  5E2A               	subwf	btemp^0,f,c
 28644  01C750  0EF6               	movlw	-10
 28645  01C752  0060  F0AB  FFE3   	movff	btemp,plusw1
 28646  01C758  0EF7               	movlw	-9
 28647  01C75A  006F FF8C  F02A    	movff	plusw1,btemp
 28648  01C760  0E00               	movlw	0
 28649  01C762  5A2A               	subwfb	btemp^0,f,c
 28650  01C764  0EF7               	movlw	-9
 28651  01C766  0060  F0AB  FFE3   	movff	btemp,plusw1
 28652  01C76C                     l11446:
 28653                           
 28654                           ;stkvar	_l @ sp[(-4)+2]
 28655  01C76C  0EFE               	movlw	-2
 28656  01C76E  006F FF8F FFF6     	movff	plusw1,tblptrl
 28657  01C774  0EFF               	movlw	-1
 28658  01C776  006F FF8F FFF7     	movff	plusw1,tblptrh
 28659  01C77C  0E00               	movlw	low (__mediumconst shr (0+16))
 28660  01C77E  6EF8               	movwf	tblptru,c
 28661  01C780  0E1F               	movlw	(high __ramtop+-1)
 28662  01C782  64F7               	cpfsgt	tblptrh,c
 28663  01C784  D003               	bra	u10417
 28664  01C786  0008               	tblrd		*
 28665  01C788  50F5               	movf	tablat,w,c
 28666  01C78A  D007               	bra	u10410
 28667  01C78C                     u10417:
 28668  01C78C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28669  01C792  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28670  01C798  50EF               	movf	indf0,w,c
 28671  01C79A                     u10410:
 28672  01C79A  0900               	iorlw	0
 28673  01C79C  B4D8               	btfsc	status,2,c
 28674  01C79E  D04A               	goto	u10450
 28675                           
 28676                           ;stkvar	_r @ sp[(-4)+0]
 28677  01C7A0  50E1               	movf	fsr1l,w,c
 28678  01C7A2  0FFC               	addlw	-4
 28679  01C7A4  6ED9               	movwf	fsr2l,c
 28680  01C7A6  50E2               	movf	fsr1h,w,c
 28681  01C7A8  6EDA               	movwf	fsr2h,c
 28682  01C7AA  0EFF               	movlw	255
 28683  01C7AC  22DA               	addwfc	fsr2h,f,c
 28684  01C7AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 28685  01C7B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 28686  01C7BA                     	if	0	;tblptru may be non-zero
 28687  01C7BA                     	endif
 28688  01C7BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28689  01C7BA  0E00               	movlw	low (__mediumconst shr (0+16))
 28690  01C7BC  6EF8               	movwf	tblptru,c
 28691  01C7BE                     	endif
 28692  01C7BE  0008               	tblrd		*
 28693  01C7C0  50F5               	movf	tablat,w,c
 28694  01C7C2  0900               	iorlw	0
 28695  01C7C4  B4D8               	btfsc	status,2,c
 28696  01C7C6  D036               	goto	u10450
 28697                           
 28698                           ;stkvar	_n @ sp[(-4)+-6]
 28699  01C7C8  0EF6               	movlw	-10
 28700  01C7CA  006F FF8C  F02A    	movff	plusw1,btemp
 28701  01C7D0  0EF7               	movlw	-9
 28702  01C7D2  50E3               	movf	plusw1,w,c
 28703  01C7D4  102A               	iorwf	btemp^0,w,c
 28704  01C7D6  B4D8               	btfsc	status,2,c
 28705  01C7D8  D02D               	goto	u10450
 28706                           
 28707                           ;stkvar	_r @ sp[(-4)+0]
 28708  01C7DA  50E1               	movf	fsr1l,w,c
 28709  01C7DC  0FFC               	addlw	-4
 28710  01C7DE  6ED9               	movwf	fsr2l,c
 28711  01C7E0  50E2               	movf	fsr1h,w,c
 28712  01C7E2  6EDA               	movwf	fsr2h,c
 28713  01C7E4  0EFF               	movlw	255
 28714  01C7E6  22DA               	addwfc	fsr2h,f,c
 28715  01C7E8  006F FF7B FFF6     	movff	postinc2,tblptrl
 28716  01C7EE  006F FF77 FFF7     	movff	postdec2,tblptrh
 28717  01C7F4                     	if	0	;tblptru may be non-zero
 28718  01C7F4                     	endif
 28719  01C7F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28720  01C7F4  0E00               	movlw	low (__mediumconst shr (0+16))
 28721  01C7F6  6EF8               	movwf	tblptru,c
 28722  01C7F8                     	endif
 28723  01C7F8  0008               	tblrd		*
 28724  01C7FA  006F FFD4  F035    	movff	tablat,btemp+11
 28725                           
 28726                           ;stkvar	_l @ sp[(-4)+2]
 28727  01C800  0EFE               	movlw	-2
 28728  01C802  006F FF8F FFF6     	movff	plusw1,tblptrl
 28729  01C808  0EFF               	movlw	-1
 28730  01C80A  006F FF8F FFF7     	movff	plusw1,tblptrh
 28731  01C810  0E00               	movlw	low (__mediumconst shr (0+16))
 28732  01C812  6EF8               	movwf	tblptru,c
 28733  01C814  0E1F               	movlw	(high __ramtop+-1)
 28734  01C816  64F7               	cpfsgt	tblptrh,c
 28735  01C818  D003               	bra	u10457
 28736  01C81A  0008               	tblrd		*
 28737  01C81C  50F5               	movf	tablat,w,c
 28738  01C81E  D007               	bra	u10455
 28739  01C820                     u10457:
 28740  01C820  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28741  01C826  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28742  01C82C  50EF               	movf	indf0,w,c
 28743  01C82E                     u10455:
 28744  01C82E  1835               	xorwf	(btemp+11)^0,w,c
 28745  01C830  B4D8               	btfsc	status,2,c
 28746  01C832  D766               	goto	l11444
 28747  01C834                     u10450:
 28748                           
 28749                           ;stkvar	_l @ sp[(-4)+2]
 28750  01C834  0EFE               	movlw	-2
 28751  01C836  006F FF8F FFF6     	movff	plusw1,tblptrl
 28752  01C83C  0EFF               	movlw	-1
 28753  01C83E  006F FF8F FFF7     	movff	plusw1,tblptrh
 28754  01C844  0E00               	movlw	low (__mediumconst shr (0+16))
 28755  01C846  6EF8               	movwf	tblptru,c
 28756  01C848  0E1F               	movlw	(high __ramtop+-1)
 28757  01C84A  64F7               	cpfsgt	tblptrh,c
 28758  01C84C  D003               	bra	u10467
 28759  01C84E  0008               	tblrd		*
 28760  01C850  50F5               	movf	tablat,w,c
 28761  01C852  D007               	bra	u10460
 28762  01C854                     u10467:
 28763  01C854  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28764  01C85A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28765  01C860  50EF               	movf	indf0,w,c
 28766  01C862                     u10460:
 28767  01C862  6E2A               	movwf	btemp^0,c
 28768  01C864  6A2B               	clrf	(btemp+1)^0,c
 28769                           
 28770                           ;stkvar	_r @ sp[(-4)+0]
 28771  01C866  50E1               	movf	fsr1l,w,c
 28772  01C868  0FFC               	addlw	-4
 28773  01C86A  6ED9               	movwf	fsr2l,c
 28774  01C86C  50E2               	movf	fsr1h,w,c
 28775  01C86E  6EDA               	movwf	fsr2h,c
 28776  01C870  0EFF               	movlw	255
 28777  01C872  22DA               	addwfc	fsr2h,f,c
 28778  01C874  006F FF7B FFF6     	movff	postinc2,tblptrl
 28779  01C87A  006F FF77 FFF7     	movff	postdec2,tblptrh
 28780  01C880                     	if	0	;tblptru may be non-zero
 28781  01C880                     	endif
 28782  01C880                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28783  01C880  0E00               	movlw	low (__mediumconst shr (0+16))
 28784  01C882  6EF8               	movwf	tblptru,c
 28785  01C884                     	endif
 28786  01C884  0008               	tblrd		*
 28787  01C886  50F5               	movf	tablat,w,c
 28788  01C888  5E2A               	subwf	btemp^0,f,c
 28789  01C88A  0E00               	movlw	0
 28790  01C88C  5A2B               	subwfb	(btemp+1)^0,f,c
 28791  01C88E                     l3794:
 28792                           
 28793                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 28794  01C88E  0EF6               	movlw	246
 28795  01C890  26E1               	addwf	fsr1l,f,c
 28796  01C892  0EFF               	movlw	255
 28797  01C894  22E2               	addwfc	fsr1h,f,c
 28798  01C896  0012               	return		;funcret
 28799  01C898                     __end_of_strncmp:
 28800                           	opt callstack 0
 28801                           
 28802 ;; *************** function _stoa *****************
 28803 ;; Defined at:
 28804 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28805 ;; Parameters:    Size  Location     Type
 28806 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28807 ;;		 -> f(6), NULL(0), 
 28808 ;;  s               2  [STACK] PTR unsigned char 
 28809 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_71(9), 
 28810 ;;		 -> STR_70(12), D.lcd(640), D(642), T(176), 
 28811 ;;		 -> STR_3(5), V(181), 
 28812 ;; Auto vars:     Size  Location     Type
 28813 ;;  nuls            7  [STACK] unsigned char [7]
 28814 ;;  l               2  [STACK] int 
 28815 ;;  p               2  [STACK] int 
 28816 ;;  cp              2  [STACK] PTR unsigned char 
 28817 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 28818 ;;		 -> STR_71(9), STR_70(12), D.lcd(640), D(642), 
 28819 ;;		 -> T(176), STR_3(5), V(181), 
 28820 ;;  w               2  [STACK] int 
 28821 ;;  i               2  [STACK] int 
 28822 ;; Return value:  Size  Location     Type
 28823 ;;                  2  [STACK] int 
 28824 ;; Registers used:
 28825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 28826 ;; Tracked objects:
 28827 ;;		On entry : 0/0
 28828 ;;		On exit  : 0/0
 28829 ;;		Unchanged: 0/0
 28830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28835 ;;Total ram usage:        0 bytes
 28836 ;; Hardware stack levels used:    1
 28837 ;; Hardware stack levels required when called:   18
 28838 ;; This function calls:
 28839 ;;		_fputc
 28840 ;;		_strlen
 28841 ;; This function is called by:
 28842 ;;		_vfpfcnvrt
 28843 ;; This function uses a reentrant model
 28844 ;;
 28845                           
 28846                           	psect	text100
 28847  01B0AA                     __ptext100:
 28848                           	opt callstack 0
 28849  01B0AA                     _stoa:
 28850                           	opt callstack 0
 28851                           
 28852                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28853  01B0AA  0E11               	movlw	17
 28854  01B0AC  26E1               	addwf	fsr1l,f,c
 28855  01B0AE  0E00               	movlw	0
 28856  01B0B0  22E2               	addwfc	fsr1h,f,c
 28857                           
 28858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 28859                           
 28860                           ;incstack = 0
 28861 ;; hardware stack exceeded
 28862  01B0B2  EE20  F100         	lfsr	2,stoa@F1166
 28863                           
 28864                           ;stkvar	_nuls @ sp[(-17)+0]
 28865  01B0B6  0E07               	movlw	7
 28866  01B0B8  6E2A               	movwf	btemp^0,c
 28867  01B0BA  0EEF               	movlw	-17
 28868  01B0BC                     us1497999:
 28869  01B0BC  006F FF7B FFE3     	movff	postinc2,plusw1
 28870  01B0C2  28E8               	incf	wreg,w,c
 28871  01B0C4  2E2A               	decfsz	btemp^0,f,c
 28872  01B0C6  D7FA               	bra	us1497999
 28873                           
 28874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 28875                           ;stkvar	_s @ sp[(-17)+-4]
 28876  01B0C8  0EEB               	movlw	-21
 28877  01B0CA  006F FF8C  F034    	movff	plusw1,btemp+10
 28878  01B0D0  0EEC               	movlw	-20
 28879  01B0D2  006F FF8C  F035    	movff	plusw1,btemp+11
 28880                           
 28881                           ;stkvar	_cp @ sp[(-17)+11]
 28882  01B0D8  0EFB               	movlw	-5
 28883  01B0DA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28884  01B0E0  0EFA               	movlw	-6
 28885  01B0E2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28886                           
 28887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 28888                           ;stkvar	_cp @ sp[(-17)+11]
 28889  01B0E8  0EFA               	movlw	-6
 28890  01B0EA  006F FF8C  F02A    	movff	plusw1,btemp
 28891  01B0F0  0EFB               	movlw	-5
 28892  01B0F2  50E3               	movf	plusw1,w,c
 28893  01B0F4  102A               	iorwf	btemp^0,w,c
 28894  01B0F6  A4D8               	btfss	status,2,c
 28895  01B0F8  D00E               	goto	l15712
 28896                           
 28897                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 28898                           ;stkvar	_nuls @ sp[(-17)+0]
 28899  01B0FA  0EEF               	movlw	239
 28900  01B0FC  24E1               	addwf	fsr1l,w,c
 28901  01B0FE  6E34               	movwf	(btemp+10)^0,c
 28902  01B100  0EFF               	movlw	255
 28903  01B102  20E2               	addwfc	fsr1h,w,c
 28904  01B104  6E35               	movwf	(btemp+11)^0,c
 28905                           
 28906                           ;stkvar	_cp @ sp[(-17)+11]
 28907  01B106  0EFB               	movlw	-5
 28908  01B108  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28909  01B10E  0EFA               	movlw	-6
 28910  01B110  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28911  01B116                     l15712:
 28912                           
 28913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 28914                           ;stkvar	_cp @ sp[(-17)+11]
 28915  01B116  0EFA               	movlw	-6
 28916  01B118  006F FF8F FFE6     	movff	plusw1,postinc1
 28917  01B11E  006F FF8F FFE6     	movff	plusw1,postinc1
 28918  01B124  EC5F  F002         	call	_strlen	;wreg free
 28919                           
 28920                           ;stkvar	_l @ sp[(-17)+7]
 28921  01B128  0EF6               	movlw	-10
 28922  01B12A  0060  F0AB  FFE3   	movff	btemp,plusw1
 28923  01B130  0EF7               	movlw	-9
 28924  01B132  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 28925                           
 28926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 28927                           ;stkvar	_p @ sp[(-17)+9]
 28928  01B138  0EF8               	movlw	-8
 28929  01B13A  0060  F133  FFE3   	movff	_prec,plusw1
 28930  01B140  0EF9               	movlw	-7
 28931  01B142  0060  F137  FFE3   	movff	_prec+1,plusw1
 28932                           
 28933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 28934                           ;stkvar	_p @ sp[(-17)+9]
 28935  01B148  0EF9               	movlw	-7
 28936  01B14A  BEE3               	btfsc	plusw1,7,c
 28937  01B14C  D023               	goto	l2589
 28938                           
 28939                           ;stkvar	_l @ sp[(-17)+7]
 28940                           ;stkvar	_p @ sp[(-17)+9]
 28941  01B14E  50E1               	movf	fsr1l,w,c
 28942  01B150  0FF8               	addlw	-8
 28943  01B152  6ED9               	movwf	fsr2l,c
 28944  01B154  50E2               	movf	fsr1h,w,c
 28945  01B156  6EDA               	movwf	fsr2h,c
 28946  01B158  0EFF               	movlw	255
 28947  01B15A  22DA               	addwfc	fsr2h,f,c
 28948  01B15C  0EF6               	movlw	-10
 28949  01B15E  50E3               	movf	plusw1,w,c
 28950  01B160  5CDE               	subwf	postinc2,w,c
 28951  01B162  50DE               	movf	postinc2,w,c
 28952  01B164  0A80               	xorlw	128
 28953  01B166  6E2A               	movwf	btemp^0,c
 28954  01B168  0EF7               	movlw	-9
 28955  01B16A  50E3               	movf	plusw1,w,c
 28956  01B16C  0A80               	xorlw	128
 28957  01B16E  582A               	subwfb	btemp^0,w,c
 28958  01B170  B0D8               	btfsc	status,0,c
 28959  01B172  D010               	goto	l2589
 28960                           
 28961                           ;stkvar	_p @ sp[(-17)+9]
 28962                           ;stkvar	_l @ sp[(-17)+7]
 28963  01B174  0EF8               	movlw	-8
 28964  01B176  006F FF8C  F02A    	movff	plusw1,btemp
 28965  01B17C  0EF6               	movlw	-10
 28966  01B17E  0060  F0AB  FFE3   	movff	btemp,plusw1
 28967  01B184  0EF9               	movlw	-7
 28968  01B186  006F FF8C  F02A    	movff	plusw1,btemp
 28969  01B18C  0EF7               	movlw	-9
 28970  01B18E  0060  F0AB  FFE3   	movff	btemp,plusw1
 28971  01B194                     l2589:
 28972                           
 28973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 28974                           ;stkvar	_l @ sp[(-17)+7]
 28975                           ;stkvar	_p @ sp[(-17)+9]
 28976  01B194  0EF6               	movlw	-10
 28977  01B196  006F FF8C  F02A    	movff	plusw1,btemp
 28978  01B19C  0EF8               	movlw	-8
 28979  01B19E  0060  F0AB  FFE3   	movff	btemp,plusw1
 28980  01B1A4  0EF7               	movlw	-9
 28981  01B1A6  006F FF8C  F02A    	movff	plusw1,btemp
 28982  01B1AC  0EF9               	movlw	-7
 28983  01B1AE  0060  F0AB  FFE3   	movff	btemp,plusw1
 28984                           
 28985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 28986                           ;stkvar	_w @ sp[(-17)+13]
 28987  01B1B4  0EFC               	movlw	-4
 28988  01B1B6  0060  F12B  FFE3   	movff	_width,plusw1
 28989  01B1BC  0EFD               	movlw	-3
 28990  01B1BE  0060  F12F  FFE3   	movff	_width+1,plusw1
 28991                           
 28992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 28993  01B1C4  A04E               	btfss	_flags^0,0,c
 28994  01B1C6  D01F               	goto	l15732
 28995  01B1C8  D031               	goto	u15020
 28996  01B1CA                     l15728:
 28997                           
 28998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 28999                           ;stkvar	_fp @ sp[(-17)+-2]
 29000  01B1CA  0EED               	movlw	-19
 29001  01B1CC  006F FF8F FFE6     	movff	plusw1,postinc1
 29002  01B1D2  006F FF8F FFE6     	movff	plusw1,postinc1
 29003  01B1D8  0E20               	movlw	32
 29004  01B1DA  6EE6               	movwf	postinc1,c
 29005  01B1DC  0E00               	movlw	0
 29006  01B1DE  6EE6               	movwf	postinc1,c
 29007  01B1E0  ECCC  F0F6         	call	_fputc	;wreg free
 29008                           
 29009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 29010                           ;stkvar	_l @ sp[(-17)+7]
 29011  01B1E4  0EF6               	movlw	-10
 29012  01B1E6  50E3               	movf	plusw1,w,c
 29013  01B1E8  0F01               	addlw	1
 29014  01B1EA  6E2A               	movwf	btemp^0,c
 29015  01B1EC  0EF6               	movlw	-10
 29016  01B1EE  0060  F0AB  FFE3   	movff	btemp,plusw1
 29017  01B1F4  6A2A               	clrf	btemp^0,c
 29018  01B1F6  0EF7               	movlw	-9
 29019  01B1F8  50E3               	movf	plusw1,w,c
 29020  01B1FA  202A               	addwfc	btemp^0,w,c
 29021  01B1FC  6E2A               	movwf	btemp^0,c
 29022  01B1FE  0EF7               	movlw	-9
 29023  01B200  0060  F0AB  FFE3   	movff	btemp,plusw1
 29024  01B206                     l15732:
 29025                           
 29026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 29027                           ;stkvar	_w @ sp[(-17)+13]
 29028                           ;stkvar	_l @ sp[(-17)+7]
 29029  01B206  50E1               	movf	fsr1l,w,c
 29030  01B208  0FF6               	addlw	-10
 29031  01B20A  6ED9               	movwf	fsr2l,c
 29032  01B20C  50E2               	movf	fsr1h,w,c
 29033  01B20E  6EDA               	movwf	fsr2h,c
 29034  01B210  0EFF               	movlw	255
 29035  01B212  22DA               	addwfc	fsr2h,f,c
 29036  01B214  0EFC               	movlw	-4
 29037  01B216  50E3               	movf	plusw1,w,c
 29038  01B218  5CDE               	subwf	postinc2,w,c
 29039  01B21A  50DE               	movf	postinc2,w,c
 29040  01B21C  0A80               	xorlw	128
 29041  01B21E  6E2A               	movwf	btemp^0,c
 29042  01B220  0EFD               	movlw	-3
 29043  01B222  50E3               	movf	plusw1,w,c
 29044  01B224  0A80               	xorlw	128
 29045  01B226  582A               	subwfb	btemp^0,w,c
 29046  01B228  A0D8               	btfss	status,0,c
 29047  01B22A  D7CF               	goto	l15728
 29048  01B22C                     u15020:
 29049                           
 29050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 29051                           ;stkvar	_i @ sp[(-17)+15]
 29052  01B22C  0EFE               	movlw	-2
 29053  01B22E  6AE3               	clrf	plusw1,c
 29054  01B230  0EFF               	movlw	-1
 29055  01B232  6AE3               	clrf	plusw1,c
 29056                           
 29057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 29058  01B234  D045               	goto	l15742
 29059  01B236                     l15736:
 29060                           
 29061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 29062                           ;stkvar	_fp @ sp[(-17)+-2]
 29063  01B236  0EED               	movlw	-19
 29064  01B238  006F FF8F FFE6     	movff	plusw1,postinc1
 29065  01B23E  006F FF8F FFE6     	movff	plusw1,postinc1
 29066                           
 29067                           ;stkvar	_cp @ sp[(-19)+11]
 29068  01B244  0EF8               	movlw	-8
 29069  01B246  006F FF8F FFF6     	movff	plusw1,tblptrl
 29070  01B24C  0EF9               	movlw	-7
 29071  01B24E  006F FF8F FFF7     	movff	plusw1,tblptrh
 29072  01B254  0E00               	movlw	low (__mediumconst shr (0+16))
 29073  01B256  6EF8               	movwf	tblptru,c
 29074  01B258  0E1F               	movlw	(high __ramtop+-1)
 29075  01B25A  64F7               	cpfsgt	tblptrh,c
 29076  01B25C  D003               	bra	u15037
 29077  01B25E  0008               	tblrd		*
 29078  01B260  50F5               	movf	tablat,w,c
 29079  01B262  D007               	bra	u15030
 29080  01B264                     u15037:
 29081  01B264  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29082  01B26A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29083  01B270  50EF               	movf	indf0,w,c
 29084  01B272                     u15030:
 29085  01B272  6EE6               	movwf	postinc1,c
 29086  01B274  0E00               	movlw	0
 29087  01B276  6EE6               	movwf	postinc1,c
 29088  01B278  ECCC  F0F6         	call	_fputc	;wreg free
 29089                           
 29090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 29091                           ;stkvar	_cp @ sp[(-17)+11]
 29092  01B27C  0EFA               	movlw	-6
 29093  01B27E  50E3               	movf	plusw1,w,c
 29094  01B280  0F01               	addlw	1
 29095  01B282  6E2A               	movwf	btemp^0,c
 29096  01B284  0EFA               	movlw	-6
 29097  01B286  0060  F0AB  FFE3   	movff	btemp,plusw1
 29098  01B28C  6A2A               	clrf	btemp^0,c
 29099  01B28E  0EFB               	movlw	-5
 29100  01B290  50E3               	movf	plusw1,w,c
 29101  01B292  202A               	addwfc	btemp^0,w,c
 29102  01B294  6E2A               	movwf	btemp^0,c
 29103  01B296  0EFB               	movlw	-5
 29104  01B298  0060  F0AB  FFE3   	movff	btemp,plusw1
 29105                           
 29106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 29107                           ;stkvar	_i @ sp[(-17)+15]
 29108  01B29E  0EFE               	movlw	-2
 29109  01B2A0  50E3               	movf	plusw1,w,c
 29110  01B2A2  0F01               	addlw	1
 29111  01B2A4  6E2A               	movwf	btemp^0,c
 29112  01B2A6  0EFE               	movlw	-2
 29113  01B2A8  0060  F0AB  FFE3   	movff	btemp,plusw1
 29114  01B2AE  6A2A               	clrf	btemp^0,c
 29115  01B2B0  0EFF               	movlw	-1
 29116  01B2B2  50E3               	movf	plusw1,w,c
 29117  01B2B4  202A               	addwfc	btemp^0,w,c
 29118  01B2B6  6E2A               	movwf	btemp^0,c
 29119  01B2B8  0EFF               	movlw	-1
 29120  01B2BA  0060  F0AB  FFE3   	movff	btemp,plusw1
 29121  01B2C0                     l15742:
 29122                           
 29123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 29124                           ;stkvar	_p @ sp[(-17)+9]
 29125                           ;stkvar	_i @ sp[(-17)+15]
 29126  01B2C0  50E1               	movf	fsr1l,w,c
 29127  01B2C2  0FFE               	addlw	-2
 29128  01B2C4  6ED9               	movwf	fsr2l,c
 29129  01B2C6  50E2               	movf	fsr1h,w,c
 29130  01B2C8  6EDA               	movwf	fsr2h,c
 29131  01B2CA  0EFF               	movlw	255
 29132  01B2CC  22DA               	addwfc	fsr2h,f,c
 29133  01B2CE  0EF8               	movlw	-8
 29134  01B2D0  50E3               	movf	plusw1,w,c
 29135  01B2D2  5CDE               	subwf	postinc2,w,c
 29136  01B2D4  50DE               	movf	postinc2,w,c
 29137  01B2D6  0A80               	xorlw	128
 29138  01B2D8  6E2A               	movwf	btemp^0,c
 29139  01B2DA  0EF9               	movlw	-7
 29140  01B2DC  50E3               	movf	plusw1,w,c
 29141  01B2DE  0A80               	xorlw	128
 29142  01B2E0  582A               	subwfb	btemp^0,w,c
 29143  01B2E2  A0D8               	btfss	status,0,c
 29144  01B2E4  D7A8               	goto	l15736
 29145                           
 29146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 29147  01B2E6  B04E               	btfsc	_flags^0,0,c
 29148  01B2E8  D01F               	goto	l15750
 29149  01B2EA  D031               	goto	u15060
 29150  01B2EC                     l15746:
 29151                           
 29152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 29153                           ;stkvar	_fp @ sp[(-17)+-2]
 29154  01B2EC  0EED               	movlw	-19
 29155  01B2EE  006F FF8F FFE6     	movff	plusw1,postinc1
 29156  01B2F4  006F FF8F FFE6     	movff	plusw1,postinc1
 29157  01B2FA  0E20               	movlw	32
 29158  01B2FC  6EE6               	movwf	postinc1,c
 29159  01B2FE  0E00               	movlw	0
 29160  01B300  6EE6               	movwf	postinc1,c
 29161  01B302  ECCC  F0F6         	call	_fputc	;wreg free
 29162                           
 29163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 29164                           ;stkvar	_l @ sp[(-17)+7]
 29165  01B306  0EF6               	movlw	-10
 29166  01B308  50E3               	movf	plusw1,w,c
 29167  01B30A  0F01               	addlw	1
 29168  01B30C  6E2A               	movwf	btemp^0,c
 29169  01B30E  0EF6               	movlw	-10
 29170  01B310  0060  F0AB  FFE3   	movff	btemp,plusw1
 29171  01B316  6A2A               	clrf	btemp^0,c
 29172  01B318  0EF7               	movlw	-9
 29173  01B31A  50E3               	movf	plusw1,w,c
 29174  01B31C  202A               	addwfc	btemp^0,w,c
 29175  01B31E  6E2A               	movwf	btemp^0,c
 29176  01B320  0EF7               	movlw	-9
 29177  01B322  0060  F0AB  FFE3   	movff	btemp,plusw1
 29178  01B328                     l15750:
 29179                           
 29180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 29181                           ;stkvar	_w @ sp[(-17)+13]
 29182                           ;stkvar	_l @ sp[(-17)+7]
 29183  01B328  50E1               	movf	fsr1l,w,c
 29184  01B32A  0FF6               	addlw	-10
 29185  01B32C  6ED9               	movwf	fsr2l,c
 29186  01B32E  50E2               	movf	fsr1h,w,c
 29187  01B330  6EDA               	movwf	fsr2h,c
 29188  01B332  0EFF               	movlw	255
 29189  01B334  22DA               	addwfc	fsr2h,f,c
 29190  01B336  0EFC               	movlw	-4
 29191  01B338  50E3               	movf	plusw1,w,c
 29192  01B33A  5CDE               	subwf	postinc2,w,c
 29193  01B33C  50DE               	movf	postinc2,w,c
 29194  01B33E  0A80               	xorlw	128
 29195  01B340  6E2A               	movwf	btemp^0,c
 29196  01B342  0EFD               	movlw	-3
 29197  01B344  50E3               	movf	plusw1,w,c
 29198  01B346  0A80               	xorlw	128
 29199  01B348  582A               	subwfb	btemp^0,w,c
 29200  01B34A  A0D8               	btfss	status,0,c
 29201  01B34C  D7CF               	goto	l15746
 29202  01B34E                     u15060:
 29203                           
 29204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 29205                           ;stkvar	_l @ sp[(-17)+7]
 29206  01B34E  0EF6               	movlw	-10
 29207  01B350  006F FF8C  F02A    	movff	plusw1,btemp
 29208  01B356  0EF7               	movlw	-9
 29209  01B358  006F FF8C  F02B    	movff	plusw1,btemp+1
 29210                           
 29211                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 29212  01B35E  0EEB               	movlw	235
 29213  01B360  26E1               	addwf	fsr1l,f,c
 29214  01B362  0EFF               	movlw	255
 29215  01B364  22E2               	addwfc	fsr1h,f,c
 29216  01B366  0012               	return		;funcret
 29217  01B368                     __end_of_stoa:
 29218                           	opt callstack 0
 29219                           
 29220 ;; *************** function _efgtoa *****************
 29221 ;; Defined at:
 29222 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 29223 ;; Parameters:    Size  Location     Type
 29224 ;;  fp              2  [STACK] PTR struct _IO_FILE
 29225 ;;		 -> f(6), NULL(0), 
 29226 ;;  f               4  [STACK] PTR struct _IO_FILE
 29227 ;;  c               1  [STACK] unsigned char 
 29228 ;; Auto vars:     Size  Location     Type
 29229 ;;  u               4  [STACK] unsigned char 
 29230 ;;  g               4  [STACK] unsigned char 
 29231 ;;  l               4  [STACK] unsigned char 
 29232 ;;  h               4  [STACK] unsigned char 
 29233 ;;  ou              4  [STACK] unsigned char 
 29234 ;;  n               2  [STACK] int 
 29235 ;;  e               2  [STACK] int 
 29236 ;;  i               2  [STACK] int 
 29237 ;;  w               2  [STACK] int 
 29238 ;;  p               2  [STACK] int 
 29239 ;;  sign            2  [STACK] int 
 29240 ;;  d               2  [STACK] int 
 29241 ;;  ne              2  [STACK] int 
 29242 ;;  m               2  [STACK] int 
 29243 ;;  pp              2  [STACK] int 
 29244 ;;  t               2  [STACK] int 
 29245 ;;  mode            1  [STACK] unsigned char 
 29246 ;;  nmode           1  [STACK] unsigned char 
 29247 ;; Return value:  Size  Location     Type
 29248 ;;                  2  [STACK] int 
 29249 ;; Registers used:
 29250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 29251 ;; Tracked objects:
 29252 ;;		On entry : 0/0
 29253 ;;		On exit  : 0/0
 29254 ;;		Unchanged: 0/0
 29255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29260 ;;Total ram usage:        0 bytes
 29261 ;; Hardware stack levels used:    1
 29262 ;; Hardware stack levels required when called:   20
 29263 ;; This function calls:
 29264 ;;		___awdiv
 29265 ;;		___awmod
 29266 ;;		___fladd
 29267 ;;		___fldiv
 29268 ;;		___fleq
 29269 ;;		___flge
 29270 ;;		___flmul
 29271 ;;		___flneg
 29272 ;;		___flsub
 29273 ;;		___fltol
 29274 ;;		___fpclassifyf
 29275 ;;		_floorf
 29276 ;;		_isupper
 29277 ;;		_pad
 29278 ;;		_strcpy
 29279 ;;		_tolower
 29280 ;; This function is called by:
 29281 ;;		_vfpfcnvrt
 29282 ;; This function uses a reentrant model
 29283 ;;
 29284                           
 29285                           	psect	text101
 29286  011440                     __ptext101:
 29287                           	opt callstack 0
 29288  011440                     _efgtoa:
 29289                           	opt callstack 0
 29290                           
 29291                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 29292  011440  0E38               	movlw	56
 29293  011442  26E1               	addwf	fsr1l,f,c
 29294  011444  0E00               	movlw	0
 29295  011446  22E2               	addwfc	fsr1h,f,c
 29296                           
 29297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 29298                           ;stkvar	_sign @ sp[(-56)+42]
 29299                           
 29300                           ;incstack = 0
 29301 ;; hardware stack exceeded
 29302  011448  0EF2               	movlw	-14
 29303  01144A  6AE3               	clrf	plusw1,c
 29304  01144C  0EF3               	movlw	-13
 29305  01144E  6AE3               	clrf	plusw1,c
 29306                           
 29307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 29308                           ;stkvar	_f @ sp[(-56)+-6]
 29309  011450  0EC2               	movlw	-62
 29310  011452  006F FF8C  F032    	movff	plusw1,btemp+8
 29311  011458  0EC3               	movlw	-61
 29312  01145A  006F FF8C  F033    	movff	plusw1,btemp+9
 29313  011460  0EC4               	movlw	-60
 29314  011462  006F FF8C  F034    	movff	plusw1,btemp+10
 29315  011468  0EC5               	movlw	-59
 29316  01146A  006F FF8C  F035    	movff	plusw1,btemp+11
 29317                           
 29318                           ;stkvar	_g @ sp[(-56)+16]
 29319  011470  0ED8               	movlw	-40
 29320  011472  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 29321  011478  0ED9               	movlw	-39
 29322  01147A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 29323  011480  0EDA               	movlw	-38
 29324  011482  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29325  011488  0EDB               	movlw	-37
 29326  01148A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29327                           
 29328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 29329                           ;stkvar	_g @ sp[(-56)+16]
 29330  011490  0EDB               	movlw	-37
 29331  011492  AEE3               	btfss	plusw1,7,c
 29332  011494  D02B               	goto	l15410
 29333                           
 29334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 29335  011496  0E01               	movlw	1
 29336  011498  6E34               	movwf	(btemp+10)^0,c
 29337  01149A  0E00               	movlw	0
 29338  01149C  6E35               	movwf	(btemp+11)^0,c
 29339                           
 29340                           ;stkvar	_sign @ sp[(-56)+42]
 29341  01149E  0EF2               	movlw	-14
 29342  0114A0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29343  0114A6  0EF3               	movlw	-13
 29344  0114A8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29345                           
 29346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 29347                           ;stkvar	_g @ sp[(-56)+16]
 29348  0114AE  0ED8               	movlw	-40
 29349  0114B0  006F FF8F FFE6     	movff	plusw1,postinc1
 29350  0114B6  006F FF8F FFE6     	movff	plusw1,postinc1
 29351  0114BC  006F FF8F FFE6     	movff	plusw1,postinc1
 29352  0114C2  006F FF8F FFE6     	movff	plusw1,postinc1
 29353  0114C8  EC75  F00A         	call	___flneg	;wreg free
 29354                           
 29355                           ;stkvar	_g @ sp[(-56)+16]
 29356  0114CC  0ED8               	movlw	-40
 29357  0114CE  0060  F0AB  FFE3   	movff	btemp,plusw1
 29358  0114D4  0ED9               	movlw	-39
 29359  0114D6  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 29360  0114DC  0EDA               	movlw	-38
 29361  0114DE  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 29362  0114E4  0EDB               	movlw	-37
 29363  0114E6  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 29364  0114EC                     l15410:
 29365                           
 29366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 29367                           ;stkvar	_n @ sp[(-56)+32]
 29368  0114EC  0EE8               	movlw	-24
 29369  0114EE  6AE3               	clrf	plusw1,c
 29370  0114F0  0EE9               	movlw	-23
 29371  0114F2  6AE3               	clrf	plusw1,c
 29372                           
 29373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 29374                           ;stkvar	_w @ sp[(-56)+38]
 29375  0114F4  0EEE               	movlw	-18
 29376  0114F6  0060  F12B  FFE3   	movff	_width,plusw1
 29377  0114FC  0EEF               	movlw	-17
 29378  0114FE  0060  F12F  FFE3   	movff	_width+1,plusw1
 29379                           
 29380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 29381                           ;stkvar	_sign @ sp[(-56)+42]
 29382  011504  0EF2               	movlw	-14
 29383  011506  006F FF8C  F02A    	movff	plusw1,btemp
 29384  01150C  0EF3               	movlw	-13
 29385  01150E  50E3               	movf	plusw1,w,c
 29386  011510  102A               	iorwf	btemp^0,w,c
 29387  011512  A4D8               	btfss	status,2,c
 29388  011514  D002               	goto	u14470
 29389  011516  A44E               	btfss	_flags^0,2,c
 29390  011518  D036               	goto	l15430
 29391  01151A                     u14470:
 29392                           
 29393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 29394                           ;stkvar	_sign @ sp[(-56)+42]
 29395  01151A  0EF2               	movlw	-14
 29396  01151C  006F FF8C  F02A    	movff	plusw1,btemp
 29397  011522  0EF3               	movlw	-13
 29398  011524  50E3               	movf	plusw1,w,c
 29399  011526  102A               	iorwf	btemp^0,w,c
 29400  011528  A4D8               	btfss	status,2,c
 29401  01152A  D002               	goto	l15422
 29402  01152C  0E2B               	movlw	43
 29403  01152E  D001               	goto	L30
 29404  011530                     l15422:
 29405  011530  0E2D               	movlw	45
 29406  011532                     L30:
 29407  011532  6E34               	movwf	(btemp+10)^0,c
 29408  011534  0E00               	movlw	0
 29409  011536  6E35               	movwf	(btemp+11)^0,c
 29410                           
 29411                           ;stkvar	_efgtoa$6832 @ sp[(-56)+10]
 29412  011538  0ED2               	movlw	-46
 29413  01153A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29414  011540  0ED3               	movlw	-45
 29415  011542  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29416                           
 29417                           ;stkvar	_efgtoa$6832 @ sp[(-56)+10]
 29418  011548  0ED2               	movlw	-46
 29419  01154A  006F FF8C  F354    	movff	plusw1,_dbuf
 29420                           
 29421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 29422                           ;stkvar	_n @ sp[(-56)+32]
 29423  011550  0EE8               	movlw	-24
 29424  011552  50E3               	movf	plusw1,w,c
 29425  011554  0F01               	addlw	1
 29426  011556  6E2A               	movwf	btemp^0,c
 29427  011558  0EE8               	movlw	-24
 29428  01155A  0060  F0AB  FFE3   	movff	btemp,plusw1
 29429  011560  6A2A               	clrf	btemp^0,c
 29430  011562  0EE9               	movlw	-23
 29431  011564  50E3               	movf	plusw1,w,c
 29432  011566  202A               	addwfc	btemp^0,w,c
 29433  011568  6E2A               	movwf	btemp^0,c
 29434  01156A  0EE9               	movlw	-23
 29435  01156C  0060  F0AB  FFE3   	movff	btemp,plusw1
 29436                           
 29437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 29438                           ;stkvar	_w @ sp[(-56)+38]
 29439  011572  50E1               	movf	fsr1l,w,c
 29440  011574  0FEE               	addlw	-18
 29441  011576  6ED9               	movwf	fsr2l,c
 29442  011578  50E2               	movf	fsr1h,w,c
 29443  01157A  6EDA               	movwf	fsr2h,c
 29444  01157C  0EFF               	movlw	255
 29445  01157E  22DA               	addwfc	fsr2h,f,c
 29446  011580  06DE               	decf	postinc2,f,c
 29447  011582  0E00               	movlw	0
 29448  011584  5ADD               	subwfb	postdec2,f,c
 29449  011586                     l15430:
 29450                           
 29451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 29452                           ;stkvar	_g @ sp[(-56)+16]
 29453  011586  0ED8               	movlw	-40
 29454  011588  006F FF8F FFE6     	movff	plusw1,postinc1
 29455  01158E  006F FF8F FFE6     	movff	plusw1,postinc1
 29456  011594  006F FF8F FFE6     	movff	plusw1,postinc1
 29457  01159A  006F FF8F FFE6     	movff	plusw1,postinc1
 29458  0115A0  ECD9  F0EA         	call	___fpclassifyf	;wreg free
 29459  0115A4  042A               	decf	btemp^0,w,c
 29460  0115A6  102B               	iorwf	(btemp+1)^0,w,c
 29461  0115A8  A4D8               	btfss	status,2,c
 29462  0115AA  D076               	goto	l15448
 29463  0115AC  0EBF               	movlw	191
 29464  0115AE  6E34               	movwf	(btemp+10)^0,c
 29465  0115B0  0EFF               	movlw	255
 29466  0115B2  6E35               	movwf	(btemp+11)^0,c
 29467                           
 29468                           ;stkvar	_c @ sp[(-56)+-7]
 29469  0115B4  0EC1               	movlw	-63
 29470  0115B6  50E3               	movf	plusw1,w,c
 29471  0115B8  6E32               	movwf	(btemp+8)^0,c
 29472  0115BA  6A33               	clrf	(btemp+9)^0,c
 29473  0115BC  5034               	movf	(btemp+10)^0,w,c
 29474  0115BE  2632               	addwf	(btemp+8)^0,f,c
 29475  0115C0  5035               	movf	(btemp+11)^0,w,c
 29476  0115C2  2233               	addwfc	(btemp+9)^0,f,c
 29477  0115C4  5033               	movf	(btemp+9)^0,w,c
 29478  0115C6  E106               	bnz	u14500
 29479  0115C8  0E1A               	movlw	26
 29480  0115CA  5C32               	subwf	(btemp+8)^0,w,c
 29481  0115CC  B0D8               	btfsc	status,0,c
 29482  0115CE  D002               	goto	u14500
 29483  0115D0  0E01               	movlw	1
 29484  0115D2  D001               	goto	u14510
 29485  0115D4                     u14500:
 29486  0115D4  0E00               	movlw	0
 29487  0115D6                     u14510:
 29488  0115D6  6E34               	movwf	(btemp+10)^0,c
 29489  0115D8  6A35               	clrf	(btemp+11)^0,c
 29490                           
 29491                           ;stkvar	_efgtoa$6833 @ sp[(-56)+8]
 29492  0115DA  0ED0               	movlw	-48
 29493  0115DC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29494  0115E2  0ED1               	movlw	-47
 29495  0115E4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29496                           
 29497                           ;stkvar	_efgtoa$6833 @ sp[(-56)+8]
 29498  0115EA  0ED0               	movlw	-48
 29499  0115EC  006F FF8C  F02A    	movff	plusw1,btemp
 29500  0115F2  0ED1               	movlw	-47
 29501  0115F4  50E3               	movf	plusw1,w,c
 29502  0115F6  102A               	iorwf	btemp^0,w,c
 29503  0115F8  B4D8               	btfsc	status,2,c
 29504  0115FA  D017               	goto	l15440
 29505                           
 29506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 29507  0115FC  0ED6               	movlw	low STR_91
 29508  0115FE  6EE6               	movwf	postinc1,c
 29509  011600  0EFF               	movlw	high STR_91
 29510  011602  6EE6               	movwf	postinc1,c
 29511                           
 29512                           ;stkvar	_n @ sp[(-58)+32]
 29513  011604  0E54               	movlw	low _dbuf
 29514  011606  6E34               	movwf	(btemp+10)^0,c
 29515  011608  0E03               	movlw	high _dbuf
 29516  01160A  6E35               	movwf	(btemp+11)^0,c
 29517  01160C  0EE6               	movlw	-26
 29518  01160E  50E3               	movf	plusw1,w,c
 29519  011610  2634               	addwf	(btemp+10)^0,f,c
 29520  011612  0EE7               	movlw	-25
 29521  011614  50E3               	movf	plusw1,w,c
 29522  011616  2235               	addwfc	(btemp+11)^0,f,c
 29523  011618  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 29524  01161E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 29525  011624  EC4B  F0FD         	call	_strcpy	;wreg free
 29526                           
 29527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 29528  011628  D016               	goto	l15442
 29529  01162A                     l15440:
 29530                           
 29531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 29532  01162A  0EDE               	movlw	low STR_92
 29533  01162C  6EE6               	movwf	postinc1,c
 29534  01162E  0EFF               	movlw	high STR_92
 29535  011630  6EE6               	movwf	postinc1,c
 29536                           
 29537                           ;stkvar	_n @ sp[(-58)+32]
 29538  011632  0E54               	movlw	low _dbuf
 29539  011634  6E34               	movwf	(btemp+10)^0,c
 29540  011636  0E03               	movlw	high _dbuf
 29541  011638  6E35               	movwf	(btemp+11)^0,c
 29542  01163A  0EE6               	movlw	-26
 29543  01163C  50E3               	movf	plusw1,w,c
 29544  01163E  2634               	addwf	(btemp+10)^0,f,c
 29545  011640  0EE7               	movlw	-25
 29546  011642  50E3               	movf	plusw1,w,c
 29547  011644  2235               	addwfc	(btemp+11)^0,f,c
 29548  011646  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 29549  01164C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 29550  011652  EC4B  F0FD         	call	_strcpy	;wreg free
 29551  011656                     l15442:
 29552                           
 29553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 29554                           ;stkvar	_w @ sp[(-56)+38]
 29555  011656  50E1               	movf	fsr1l,w,c
 29556  011658  0FEE               	addlw	-18
 29557  01165A  6ED9               	movwf	fsr2l,c
 29558  01165C  50E2               	movf	fsr1h,w,c
 29559  01165E  6EDA               	movwf	fsr2h,c
 29560  011660  0EFF               	movlw	255
 29561  011662  22DA               	addwfc	fsr2h,f,c
 29562  011664  0EFD               	movlw	253
 29563  011666  26DE               	addwf	postinc2,f,c
 29564  011668  0EFF               	movlw	255
 29565  01166A  22DD               	addwfc	postdec2,f,c
 29566  01166C                     l15444:
 29567                           
 29568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 29569                           ;stkvar	_w @ sp[(-56)+38]
 29570  01166C  0EEE               	movlw	-18
 29571  01166E  006F FF8F FFE6     	movff	plusw1,postinc1
 29572  011674  006F FF8F FFE6     	movff	plusw1,postinc1
 29573  01167A  0E54               	movlw	low _dbuf
 29574  01167C  6EE6               	movwf	postinc1,c
 29575  01167E  0E03               	movlw	high _dbuf
 29576  011680  6EE6               	movwf	postinc1,c
 29577                           
 29578                           ;stkvar	_fp @ sp[(-60)+-2]
 29579  011682  0EC2               	movlw	-62
 29580  011684  006F FF8F FFE6     	movff	plusw1,postinc1
 29581  01168A  006F FF8F FFE6     	movff	plusw1,postinc1
 29582  011690  EC03  F0F9         	call	_pad	;wreg free
 29583  011694  EF3D  F093         	goto	l2507
 29584  011698                     l15448:
 29585                           
 29586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 29587                           ;stkvar	_g @ sp[(-56)+16]
 29588  011698  0ED8               	movlw	-40
 29589  01169A  006F FF8F FFE6     	movff	plusw1,postinc1
 29590  0116A0  006F FF8F FFE6     	movff	plusw1,postinc1
 29591  0116A6  006F FF8F FFE6     	movff	plusw1,postinc1
 29592  0116AC  006F FF8F FFE6     	movff	plusw1,postinc1
 29593  0116B2  ECD9  F0EA         	call	___fpclassifyf	;wreg free
 29594  0116B6  502A               	movf	btemp^0,w,c
 29595  0116B8  102B               	iorwf	(btemp+1)^0,w,c
 29596  0116BA  A4D8               	btfss	status,2,c
 29597  0116BC  D056               	goto	l15466
 29598  0116BE  0EBF               	movlw	191
 29599  0116C0  6E34               	movwf	(btemp+10)^0,c
 29600  0116C2  0EFF               	movlw	255
 29601  0116C4  6E35               	movwf	(btemp+11)^0,c
 29602                           
 29603                           ;stkvar	_c @ sp[(-56)+-7]
 29604  0116C6  0EC1               	movlw	-63
 29605  0116C8  50E3               	movf	plusw1,w,c
 29606  0116CA  6E32               	movwf	(btemp+8)^0,c
 29607  0116CC  6A33               	clrf	(btemp+9)^0,c
 29608  0116CE  5034               	movf	(btemp+10)^0,w,c
 29609  0116D0  2632               	addwf	(btemp+8)^0,f,c
 29610  0116D2  5035               	movf	(btemp+11)^0,w,c
 29611  0116D4  2233               	addwfc	(btemp+9)^0,f,c
 29612  0116D6  5033               	movf	(btemp+9)^0,w,c
 29613  0116D8  E106               	bnz	u14540
 29614  0116DA  0E1A               	movlw	26
 29615  0116DC  5C32               	subwf	(btemp+8)^0,w,c
 29616  0116DE  B0D8               	btfsc	status,0,c
 29617  0116E0  D002               	goto	u14540
 29618  0116E2  0E01               	movlw	1
 29619  0116E4  D001               	goto	u14550
 29620  0116E6                     u14540:
 29621  0116E6  0E00               	movlw	0
 29622  0116E8                     u14550:
 29623  0116E8  6E34               	movwf	(btemp+10)^0,c
 29624  0116EA  6A35               	clrf	(btemp+11)^0,c
 29625                           
 29626                           ;stkvar	_efgtoa$6837 @ sp[(-56)+6]
 29627  0116EC  0ECE               	movlw	-50
 29628  0116EE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29629  0116F4  0ECF               	movlw	-49
 29630  0116F6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29631                           
 29632                           ;stkvar	_efgtoa$6837 @ sp[(-56)+6]
 29633  0116FC  0ECE               	movlw	-50
 29634  0116FE  006F FF8C  F02A    	movff	plusw1,btemp
 29635  011704  0ECF               	movlw	-49
 29636  011706  50E3               	movf	plusw1,w,c
 29637  011708  102A               	iorwf	btemp^0,w,c
 29638  01170A  B4D8               	btfsc	status,2,c
 29639  01170C  D017               	goto	l15458
 29640                           
 29641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 29642  01170E  0EDA               	movlw	low STR_95
 29643  011710  6EE6               	movwf	postinc1,c
 29644  011712  0EFF               	movlw	high STR_95
 29645  011714  6EE6               	movwf	postinc1,c
 29646                           
 29647                           ;stkvar	_n @ sp[(-58)+32]
 29648  011716  0E54               	movlw	low _dbuf
 29649  011718  6E34               	movwf	(btemp+10)^0,c
 29650  01171A  0E03               	movlw	high _dbuf
 29651  01171C  6E35               	movwf	(btemp+11)^0,c
 29652  01171E  0EE6               	movlw	-26
 29653  011720  50E3               	movf	plusw1,w,c
 29654  011722  2634               	addwf	(btemp+10)^0,f,c
 29655  011724  0EE7               	movlw	-25
 29656  011726  50E3               	movf	plusw1,w,c
 29657  011728  2235               	addwfc	(btemp+11)^0,f,c
 29658  01172A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 29659  011730  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 29660  011736  EC4B  F0FD         	call	_strcpy	;wreg free
 29661                           
 29662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 29663  01173A  D78D               	goto	l15442
 29664  01173C                     l15458:
 29665                           
 29666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 29667  01173C  0EE2               	movlw	low STR_96
 29668  01173E  6EE6               	movwf	postinc1,c
 29669  011740  0EFF               	movlw	high STR_96
 29670  011742  6EE6               	movwf	postinc1,c
 29671                           
 29672                           ;stkvar	_n @ sp[(-58)+32]
 29673  011744  0E54               	movlw	low _dbuf
 29674  011746  6E34               	movwf	(btemp+10)^0,c
 29675  011748  0E03               	movlw	high _dbuf
 29676  01174A  6E35               	movwf	(btemp+11)^0,c
 29677  01174C  0EE6               	movlw	-26
 29678  01174E  50E3               	movf	plusw1,w,c
 29679  011750  2634               	addwf	(btemp+10)^0,f,c
 29680  011752  0EE7               	movlw	-25
 29681  011754  50E3               	movf	plusw1,w,c
 29682  011756  2235               	addwfc	(btemp+11)^0,f,c
 29683  011758  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 29684  01175E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 29685  011764  EC4B  F0FD         	call	_strcpy	;wreg free
 29686  011768  D776               	goto	l15442
 29687  01176A                     l15466:
 29688                           
 29689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 29690  01176A  0E00               	movlw	0
 29691  01176C  6E32               	movwf	(btemp+8)^0,c
 29692  01176E  0E00               	movlw	0
 29693  011770  6E33               	movwf	(btemp+9)^0,c
 29694  011772  0E80               	movlw	128
 29695  011774  6E34               	movwf	(btemp+10)^0,c
 29696  011776  0E3F               	movlw	63
 29697  011778  6E35               	movwf	(btemp+11)^0,c
 29698                           
 29699                           ;stkvar	_u @ sp[(-56)+12]
 29700  01177A  0ED4               	movlw	-44
 29701  01177C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 29702  011782  0ED5               	movlw	-43
 29703  011784  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 29704  01178A  0ED6               	movlw	-42
 29705  01178C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29706  011792  0ED7               	movlw	-41
 29707  011794  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29708                           
 29709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 29710                           ;stkvar	_e @ sp[(-56)+34]
 29711  01179A  0EEA               	movlw	-22
 29712  01179C  6AE3               	clrf	plusw1,c
 29713  01179E  0EEB               	movlw	-21
 29714  0117A0  6AE3               	clrf	plusw1,c
 29715                           
 29716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 29717  0117A2  0E00               	movlw	0
 29718  0117A4  6EE6               	movwf	postinc1,c
 29719  0117A6  0E00               	movlw	0
 29720  0117A8  6EE6               	movwf	postinc1,c
 29721  0117AA  0E00               	movlw	0
 29722  0117AC  6EE6               	movwf	postinc1,c
 29723  0117AE  0E00               	movlw	0
 29724  0117B0  6EE6               	movwf	postinc1,c
 29725                           
 29726                           ;stkvar	_g @ sp[(-60)+16]
 29727  0117B2  0ED4               	movlw	-44
 29728  0117B4  006F FF8F FFE6     	movff	plusw1,postinc1
 29729  0117BA  006F FF8F FFE6     	movff	plusw1,postinc1
 29730  0117C0  006F FF8F FFE6     	movff	plusw1,postinc1
 29731  0117C6  006F FF8F FFE6     	movff	plusw1,postinc1
 29732  0117CC  EC1C  F0FE         	call	___fleq	;wreg free
 29733  0117D0  A02A               	btfss	btemp& (0+255),0,c
 29734  0117D2  D039               	goto	l15478
 29735  0117D4  D0BC               	goto	u14590
 29736  0117D6                     l15474:
 29737                           
 29738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 29739  0117D6  0E00               	movlw	0
 29740  0117D8  6EE6               	movwf	postinc1,c
 29741  0117DA  0E00               	movlw	0
 29742  0117DC  6EE6               	movwf	postinc1,c
 29743  0117DE  0E20               	movlw	32
 29744  0117E0  6EE6               	movwf	postinc1,c
 29745  0117E2  0E41               	movlw	65
 29746  0117E4  6EE6               	movwf	postinc1,c
 29747                           
 29748                           ;stkvar	_u @ sp[(-60)+12]
 29749  0117E6  0ED0               	movlw	-48
 29750  0117E8  006F FF8F FFE6     	movff	plusw1,postinc1
 29751  0117EE  006F FF8F FFE6     	movff	plusw1,postinc1
 29752  0117F4  006F FF8F FFE6     	movff	plusw1,postinc1
 29753  0117FA  006F FF8F FFE6     	movff	plusw1,postinc1
 29754  011800  ECC2  F0B1         	call	___flmul	;wreg free
 29755                           
 29756                           ;stkvar	_u @ sp[(-56)+12]
 29757  011804  0ED4               	movlw	-44
 29758  011806  0060  F0AB  FFE3   	movff	btemp,plusw1
 29759  01180C  0ED5               	movlw	-43
 29760  01180E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 29761  011814  0ED6               	movlw	-42
 29762  011816  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 29763  01181C  0ED7               	movlw	-41
 29764  01181E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 29765                           
 29766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 29767                           ;stkvar	_e @ sp[(-56)+34]
 29768  011824  0EEA               	movlw	-22
 29769  011826  50E3               	movf	plusw1,w,c
 29770  011828  0F01               	addlw	1
 29771  01182A  6E2A               	movwf	btemp^0,c
 29772  01182C  0EEA               	movlw	-22
 29773  01182E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29774  011834  6A2A               	clrf	btemp^0,c
 29775  011836  0EEB               	movlw	-21
 29776  011838  50E3               	movf	plusw1,w,c
 29777  01183A  202A               	addwfc	btemp^0,w,c
 29778  01183C  6E2A               	movwf	btemp^0,c
 29779  01183E  0EEB               	movlw	-21
 29780  011840  0060  F0AB  FFE3   	movff	btemp,plusw1
 29781  011846                     l15478:
 29782                           
 29783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 29784  011846  0E00               	movlw	0
 29785  011848  6EE6               	movwf	postinc1,c
 29786  01184A  0E00               	movlw	0
 29787  01184C  6EE6               	movwf	postinc1,c
 29788  01184E  0E20               	movlw	32
 29789  011850  6EE6               	movwf	postinc1,c
 29790  011852  0E41               	movlw	65
 29791  011854  6EE6               	movwf	postinc1,c
 29792                           
 29793                           ;stkvar	_u @ sp[(-60)+12]
 29794  011856  0ED0               	movlw	-48
 29795  011858  006F FF8F FFE6     	movff	plusw1,postinc1
 29796  01185E  006F FF8F FFE6     	movff	plusw1,postinc1
 29797  011864  006F FF8F FFE6     	movff	plusw1,postinc1
 29798  01186A  006F FF8F FFE6     	movff	plusw1,postinc1
 29799  011870  ECC2  F0B1         	call	___flmul	;wreg free
 29800  011874  0060  F0AB  FFE6   	movff	btemp,postinc1
 29801  01187A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 29802  011880  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 29803  011886  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 29804                           
 29805                           ;stkvar	_g @ sp[(-60)+16]
 29806  01188C  0ED4               	movlw	-44
 29807  01188E  006F FF8F FFE6     	movff	plusw1,postinc1
 29808  011894  006F FF8F FFE6     	movff	plusw1,postinc1
 29809  01189A  006F FF8F FFE6     	movff	plusw1,postinc1
 29810  0118A0  006F FF8F FFE6     	movff	plusw1,postinc1
 29811  0118A6  ECDD  F0F0         	call	___flge	;wreg free
 29812  0118AA  A02A               	btfss	btemp& (0+255),0,c
 29813  0118AC  D032               	goto	l15484
 29814  0118AE  D793               	goto	l15474
 29815  0118B0                     l15480:
 29816                           
 29817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 29818  0118B0  0E00               	movlw	0
 29819  0118B2  6EE6               	movwf	postinc1,c
 29820  0118B4  0E00               	movlw	0
 29821  0118B6  6EE6               	movwf	postinc1,c
 29822  0118B8  0E20               	movlw	32
 29823  0118BA  6EE6               	movwf	postinc1,c
 29824  0118BC  0E41               	movlw	65
 29825  0118BE  6EE6               	movwf	postinc1,c
 29826                           
 29827                           ;stkvar	_u @ sp[(-60)+12]
 29828  0118C0  0ED0               	movlw	-48
 29829  0118C2  006F FF8F FFE6     	movff	plusw1,postinc1
 29830  0118C8  006F FF8F FFE6     	movff	plusw1,postinc1
 29831  0118CE  006F FF8F FFE6     	movff	plusw1,postinc1
 29832  0118D4  006F FF8F FFE6     	movff	plusw1,postinc1
 29833  0118DA  EC13  F0BD         	call	___fldiv	;wreg free
 29834                           
 29835                           ;stkvar	_u @ sp[(-56)+12]
 29836  0118DE  0ED4               	movlw	-44
 29837  0118E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 29838  0118E6  0ED5               	movlw	-43
 29839  0118E8  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 29840  0118EE  0ED6               	movlw	-42
 29841  0118F0  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 29842  0118F6  0ED7               	movlw	-41
 29843  0118F8  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 29844                           
 29845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 29846                           ;stkvar	_e @ sp[(-56)+34]
 29847  0118FE  50E1               	movf	fsr1l,w,c
 29848  011900  0FEA               	addlw	-22
 29849  011902  6ED9               	movwf	fsr2l,c
 29850  011904  50E2               	movf	fsr1h,w,c
 29851  011906  6EDA               	movwf	fsr2h,c
 29852  011908  0EFF               	movlw	255
 29853  01190A  22DA               	addwfc	fsr2h,f,c
 29854  01190C  06DE               	decf	postinc2,f,c
 29855  01190E  0E00               	movlw	0
 29856  011910  5ADD               	subwfb	postdec2,f,c
 29857  011912                     l15484:
 29858                           
 29859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 29860                           ;stkvar	_u @ sp[(-56)+12]
 29861  011912  0ED4               	movlw	-44
 29862  011914  006F FF8F FFE6     	movff	plusw1,postinc1
 29863  01191A  006F FF8F FFE6     	movff	plusw1,postinc1
 29864  011920  006F FF8F FFE6     	movff	plusw1,postinc1
 29865  011926  006F FF8F FFE6     	movff	plusw1,postinc1
 29866                           
 29867                           ;stkvar	_g @ sp[(-60)+16]
 29868  01192C  0ED4               	movlw	-44
 29869  01192E  006F FF8F FFE6     	movff	plusw1,postinc1
 29870  011934  006F FF8F FFE6     	movff	plusw1,postinc1
 29871  01193A  006F FF8F FFE6     	movff	plusw1,postinc1
 29872  011940  006F FF8F FFE6     	movff	plusw1,postinc1
 29873  011946  ECDD  F0F0         	call	___flge	;wreg free
 29874  01194A  A02A               	btfss	btemp& (0+255),0,c
 29875  01194C  D7B1               	goto	l15480
 29876  01194E                     u14590:
 29877                           
 29878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 29879                           ;stkvar	_c @ sp[(-56)+-7]
 29880  01194E  0EC1               	movlw	-63
 29881  011950  50E3               	movf	plusw1,w,c
 29882  011952  6EE6               	movwf	postinc1,c
 29883  011954  0E00               	movlw	0
 29884  011956  6EE6               	movwf	postinc1,c
 29885  011958  ECF3  F004         	call	_tolower	;wreg free
 29886                           
 29887                           ;stkvar	_mode @ sp[(-56)+54]
 29888  01195C  0EFE               	movlw	-2
 29889  01195E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29890                           
 29891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 29892                           ;stkvar	_mode @ sp[(-56)+54]
 29893                           ;stkvar	_nmode @ sp[(-56)+55]
 29894  011964  0EFE               	movlw	-2
 29895  011966  006F FF8C  F02A    	movff	plusw1,btemp
 29896  01196C  0EFF               	movlw	-1
 29897  01196E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29898                           
 29899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 29900                           ;stkvar	_mode @ sp[(-56)+54]
 29901  011974  0EFE               	movlw	-2
 29902  011976  006F FF8C  F02A    	movff	plusw1,btemp
 29903  01197C  0E67               	movlw	103
 29904  01197E  182A               	xorwf	btemp^0,w,c
 29905  011980  A4D8               	btfss	status,2,c
 29906  011982  D025               	goto	l15502
 29907                           
 29908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 29909  011984  504C               	movf	_prec^0,w,c
 29910  011986  104D               	iorwf	(_prec+1)^0,w,c
 29911  011988  A4D8               	btfss	status,2,c
 29912  01198A  D004               	goto	l15496
 29913                           
 29914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 29915  01198C  0E00               	movlw	0
 29916  01198E  6E4D               	movwf	(_prec+1)^0,c
 29917  011990  0E01               	movlw	1
 29918  011992  6E4C               	movwf	_prec^0,c
 29919  011994                     l15496:
 29920                           
 29921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 29922  011994  BE4D               	btfsc	(_prec+1)^0,7,c
 29923  011996  D005               	goto	u14620
 29924  011998  504D               	movf	(_prec+1)^0,w,c
 29925  01199A  E110               	bnz	l15500
 29926  01199C  044C               	decf	_prec^0,w,c
 29927  01199E  B0D8               	btfsc	status,0,c
 29928  0119A0  D00D               	goto	l15500
 29929  0119A2                     u14620:
 29930  0119A2  0E06               	movlw	6
 29931  0119A4  6E34               	movwf	(btemp+10)^0,c
 29932  0119A6  0E00               	movlw	0
 29933  0119A8  6E35               	movwf	(btemp+11)^0,c
 29934                           
 29935                           ;stkvar	_p @ sp[(-56)+40]
 29936  0119AA  0EF0               	movlw	-16
 29937  0119AC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29938  0119B2  0EF1               	movlw	-15
 29939  0119B4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29940  0119BA  D00C               	goto	l15508
 29941  0119BC                     l15500:
 29942                           
 29943                           ;stkvar	_p @ sp[(-56)+40]
 29944  0119BC  0EF0               	movlw	-16
 29945  0119BE  0060  F133  FFE3   	movff	_prec,plusw1
 29946  0119C4  0EF1               	movlw	-15
 29947  0119C6  0060  F137  FFE3   	movff	_prec+1,plusw1
 29948  0119CC  D003               	goto	l15508
 29949  0119CE                     l15502:
 29950                           
 29951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 29952  0119CE  AE4D               	btfss	(_prec+1)^0,7,c
 29953  0119D0  D7F5               	goto	l15500
 29954  0119D2  D7E7               	goto	u14620
 29955  0119D4                     l15508:
 29956                           
 29957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 29958                           ;stkvar	_mode @ sp[(-56)+54]
 29959  0119D4  0EFE               	movlw	-2
 29960  0119D6  006F FF8C  F02A    	movff	plusw1,btemp
 29961  0119DC  0E67               	movlw	103
 29962  0119DE  182A               	xorwf	btemp^0,w,c
 29963  0119E0  A4D8               	btfss	status,2,c
 29964  0119E2  D02F               	goto	l15518
 29965                           
 29966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 29967                           ;stkvar	_e @ sp[(-56)+34]
 29968  0119E4  0EEB               	movlw	-21
 29969  0119E6  AEE3               	btfss	plusw1,7,c
 29970  0119E8  D00E               	goto	u14650
 29971  0119EA  0EEA               	movlw	-22
 29972  0119EC  006F FF8C  F02A    	movff	plusw1,btemp
 29973  0119F2  0EFC               	movlw	252
 29974  0119F4  5E2A               	subwf	btemp^0,f,c
 29975  0119F6  0EEB               	movlw	-21
 29976  0119F8  006F FF8C  F02A    	movff	plusw1,btemp
 29977  0119FE  0EFF               	movlw	255
 29978  011A00  5A2A               	subwfb	btemp^0,f,c
 29979  011A02  A0D8               	btfss	status,0,c
 29980  011A04  D018               	goto	l15516
 29981  011A06                     u14650:
 29982                           
 29983                           ;stkvar	_e @ sp[(-56)+34]
 29984                           ;stkvar	_p @ sp[(-56)+40]
 29985  011A06  0EF0               	movlw	-16
 29986  011A08  50E3               	movf	plusw1,w,c
 29987  011A0A  0FFF               	addlw	255
 29988  011A0C  6E34               	movwf	(btemp+10)^0,c
 29989  011A0E  0EF1               	movlw	-15
 29990  011A10  006F FF8C  F035    	movff	plusw1,btemp+11
 29991  011A16  0EFF               	movlw	255
 29992  011A18  2235               	addwfc	(btemp+11)^0,f,c
 29993  011A1A  0EEA               	movlw	-22
 29994  011A1C  50E3               	movf	plusw1,w,c
 29995  011A1E  5C34               	subwf	(btemp+10)^0,w,c
 29996  011A20  5035               	movf	(btemp+11)^0,w,c
 29997  011A22  0A80               	xorlw	128
 29998  011A24  6E2A               	movwf	btemp^0,c
 29999  011A26  0EEB               	movlw	-21
 30000  011A28  50E3               	movf	plusw1,w,c
 30001  011A2A  0A80               	xorlw	128
 30002  011A2C  582A               	subwfb	btemp^0,w,c
 30003  011A2E  A0D8               	btfss	status,0,c
 30004  011A30  D002               	goto	l15516
 30005                           
 30006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 30007  011A32  0E66               	movlw	102
 30008  011A34  D001               	goto	L31
 30009  011A36                     l15516:
 30010                           
 30011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 30012  011A36  0E65               	movlw	101
 30013  011A38                     L31:
 30014  011A38  6E35               	movwf	(btemp+11)^0,c
 30015                           
 30016                           ;stkvar	_nmode @ sp[(-56)+55]
 30017  011A3A  0EFF               	movlw	-1
 30018  011A3C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30019  011A42                     l15518:
 30020                           
 30021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 30022                           ;stkvar	_p @ sp[(-56)+40]
 30023                           ;stkvar	_m @ sp[(-56)+48]
 30024  011A42  0EF0               	movlw	-16
 30025  011A44  006F FF8C  F02A    	movff	plusw1,btemp
 30026  011A4A  0EF8               	movlw	-8
 30027  011A4C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30028  011A52  0EF1               	movlw	-15
 30029  011A54  006F FF8C  F02A    	movff	plusw1,btemp
 30030  011A5A  0EF9               	movlw	-7
 30031  011A5C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30032                           
 30033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 30034                           ;stkvar	_mode @ sp[(-56)+54]
 30035  011A62  0EFE               	movlw	-2
 30036  011A64  006F FF8C  F02A    	movff	plusw1,btemp
 30037  011A6A  0E67               	movlw	103
 30038  011A6C  182A               	xorwf	btemp^0,w,c
 30039  011A6E  A4D8               	btfss	status,2,c
 30040  011A70  D00B               	goto	u14690
 30041                           
 30042                           ;stkvar	_nmode @ sp[(-56)+55]
 30043  011A72  0EFF               	movlw	-1
 30044  011A74  006F FF8C  F02A    	movff	plusw1,btemp
 30045  011A7A  0E66               	movlw	102
 30046  011A7C  182A               	xorwf	btemp^0,w,c
 30047  011A7E  A4D8               	btfss	status,2,c
 30048  011A80  D014               	goto	l2536
 30049                           
 30050                           ;stkvar	_e @ sp[(-56)+34]
 30051  011A82  0EEB               	movlw	-21
 30052  011A84  AEE3               	btfss	plusw1,7,c
 30053  011A86  D011               	goto	l2536
 30054  011A88                     u14690:
 30055                           
 30056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 30057                           ;stkvar	_m @ sp[(-56)+48]
 30058  011A88  0EF8               	movlw	-8
 30059  011A8A  50E3               	movf	plusw1,w,c
 30060  011A8C  0F01               	addlw	1
 30061  011A8E  6E2A               	movwf	btemp^0,c
 30062  011A90  0EF8               	movlw	-8
 30063  011A92  0060  F0AB  FFE3   	movff	btemp,plusw1
 30064  011A98  6A2A               	clrf	btemp^0,c
 30065  011A9A  0EF9               	movlw	-7
 30066  011A9C  50E3               	movf	plusw1,w,c
 30067  011A9E  202A               	addwfc	btemp^0,w,c
 30068  011AA0  6E2A               	movwf	btemp^0,c
 30069  011AA2  0EF9               	movlw	-7
 30070  011AA4  0060  F0AB  FFE3   	movff	btemp,plusw1
 30071  011AAA                     l2536:
 30072                           
 30073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 30074                           ;stkvar	_nmode @ sp[(-56)+55]
 30075  011AAA  0EFF               	movlw	-1
 30076  011AAC  006F FF8C  F02A    	movff	plusw1,btemp
 30077  011AB2  0E66               	movlw	102
 30078  011AB4  182A               	xorwf	btemp^0,w,c
 30079  011AB6  A4D8               	btfss	status,2,c
 30080  011AB8  D03B               	goto	l15538
 30081                           
 30082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 30083                           ;stkvar	_e @ sp[(-56)+34]
 30084  011ABA  0EEB               	movlw	-21
 30085  011ABC  AEE3               	btfss	plusw1,7,c
 30086  011ABE  D01C               	goto	l15534
 30087                           
 30088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 30089  011AC0  0E00               	movlw	0
 30090  011AC2  6E32               	movwf	(btemp+8)^0,c
 30091  011AC4  0E00               	movlw	0
 30092  011AC6  6E33               	movwf	(btemp+9)^0,c
 30093  011AC8  0E80               	movlw	128
 30094  011ACA  6E34               	movwf	(btemp+10)^0,c
 30095  011ACC  0E3F               	movlw	63
 30096  011ACE  6E35               	movwf	(btemp+11)^0,c
 30097                           
 30098                           ;stkvar	_u @ sp[(-56)+12]
 30099  011AD0  0ED4               	movlw	-44
 30100  011AD2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30101  011AD8  0ED5               	movlw	-43
 30102  011ADA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30103  011AE0  0ED6               	movlw	-42
 30104  011AE2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30105  011AE8  0ED7               	movlw	-41
 30106  011AEA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30107                           
 30108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 30109                           ;stkvar	_e @ sp[(-56)+34]
 30110  011AF0  0EEA               	movlw	-22
 30111  011AF2  6AE3               	clrf	plusw1,c
 30112  011AF4  0EEB               	movlw	-21
 30113  011AF6  6AE3               	clrf	plusw1,c
 30114  011AF8                     l15534:
 30115                           
 30116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 30117                           ;stkvar	_mode @ sp[(-56)+54]
 30118  011AF8  0EFE               	movlw	-2
 30119  011AFA  006F FF8C  F02A    	movff	plusw1,btemp
 30120  011B00  0E67               	movlw	103
 30121  011B02  182A               	xorwf	btemp^0,w,c
 30122  011B04  B4D8               	btfsc	status,2,c
 30123  011B06  D014               	goto	l15538
 30124                           
 30125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 30126                           ;stkvar	_e @ sp[(-56)+34]
 30127                           ;stkvar	_m @ sp[(-56)+48]
 30128  011B08  0EF8               	movlw	-8
 30129  011B0A  50E3               	movf	plusw1,w,c
 30130  011B0C  6E2A               	movwf	btemp^0,c
 30131  011B0E  0EEA               	movlw	-22
 30132  011B10  50E3               	movf	plusw1,w,c
 30133  011B12  262A               	addwf	btemp^0,f,c
 30134  011B14  0EF8               	movlw	-8
 30135  011B16  0060  F0AB  FFE3   	movff	btemp,plusw1
 30136  011B1C  0EF9               	movlw	-7
 30137  011B1E  50E3               	movf	plusw1,w,c
 30138  011B20  6E2A               	movwf	btemp^0,c
 30139  011B22  0EEB               	movlw	-21
 30140  011B24  50E3               	movf	plusw1,w,c
 30141  011B26  222A               	addwfc	btemp^0,f,c
 30142  011B28  0EF9               	movlw	-7
 30143  011B2A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30144  011B30                     l15538:
 30145                           
 30146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 30147                           ;stkvar	_i @ sp[(-56)+36]
 30148  011B30  0EEC               	movlw	-20
 30149  011B32  6AE3               	clrf	plusw1,c
 30150  011B34  0EED               	movlw	-19
 30151  011B36  6AE3               	clrf	plusw1,c
 30152                           
 30153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 30154                           ;stkvar	_g @ sp[(-56)+16]
 30155  011B38  0ED8               	movlw	-40
 30156  011B3A  006F FF8C  F032    	movff	plusw1,btemp+8
 30157  011B40  0ED9               	movlw	-39
 30158  011B42  006F FF8C  F033    	movff	plusw1,btemp+9
 30159  011B48  0EDA               	movlw	-38
 30160  011B4A  006F FF8C  F034    	movff	plusw1,btemp+10
 30161  011B50  0EDB               	movlw	-37
 30162  011B52  006F FF8C  F035    	movff	plusw1,btemp+11
 30163                           
 30164                           ;stkvar	_h @ sp[(-56)+24]
 30165  011B58  0EE0               	movlw	-32
 30166  011B5A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30167  011B60  0EE1               	movlw	-31
 30168  011B62  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30169  011B68  0EE2               	movlw	-30
 30170  011B6A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30171  011B70  0EE3               	movlw	-29
 30172  011B72  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30173                           
 30174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 30175                           ;stkvar	_u @ sp[(-56)+12]
 30176  011B78  0ED4               	movlw	-44
 30177  011B7A  006F FF8C  F032    	movff	plusw1,btemp+8
 30178  011B80  0ED5               	movlw	-43
 30179  011B82  006F FF8C  F033    	movff	plusw1,btemp+9
 30180  011B88  0ED6               	movlw	-42
 30181  011B8A  006F FF8C  F034    	movff	plusw1,btemp+10
 30182  011B90  0ED7               	movlw	-41
 30183  011B92  006F FF8C  F035    	movff	plusw1,btemp+11
 30184                           
 30185                           ;stkvar	_ou @ sp[(-56)+28]
 30186  011B98  0EE4               	movlw	-28
 30187  011B9A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30188  011BA0  0EE5               	movlw	-27
 30189  011BA2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30190  011BA8  0EE6               	movlw	-26
 30191  011BAA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30192  011BB0  0EE7               	movlw	-25
 30193  011BB2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30194                           
 30195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 30196  011BB8  D0D6               	goto	l15554
 30197  011BBA                     l15544:
 30198                           
 30199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 30200                           ;stkvar	_u @ sp[(-56)+12]
 30201  011BBA  0ED4               	movlw	-44
 30202  011BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 30203  011BC2  006F FF8F FFE6     	movff	plusw1,postinc1
 30204  011BC8  006F FF8F FFE6     	movff	plusw1,postinc1
 30205  011BCE  006F FF8F FFE6     	movff	plusw1,postinc1
 30206                           
 30207                           ;stkvar	_h @ sp[(-60)+24]
 30208  011BD4  0EDC               	movlw	-36
 30209  011BD6  006F FF8F FFE6     	movff	plusw1,postinc1
 30210  011BDC  006F FF8F FFE6     	movff	plusw1,postinc1
 30211  011BE2  006F FF8F FFE6     	movff	plusw1,postinc1
 30212  011BE8  006F FF8F FFE6     	movff	plusw1,postinc1
 30213  011BEE  EC13  F0BD         	call	___fldiv	;wreg free
 30214  011BF2  0060  F0AB  FFE6   	movff	btemp,postinc1
 30215  011BF8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30216  011BFE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30217  011C04  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30218  011C0A  ECF7  F0CE         	call	_floorf	;wreg free
 30219                           
 30220                           ;stkvar	_l @ sp[(-56)+20]
 30221  011C0E  0EDC               	movlw	-36
 30222  011C10  0060  F0AB  FFE3   	movff	btemp,plusw1
 30223  011C16  0EDD               	movlw	-35
 30224  011C18  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30225  011C1E  0EDE               	movlw	-34
 30226  011C20  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30227  011C26  0EDF               	movlw	-33
 30228  011C28  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30229                           
 30230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 30231                           ;stkvar	_l @ sp[(-56)+20]
 30232  011C2E  0EDC               	movlw	-36
 30233  011C30  006F FF8F FFE6     	movff	plusw1,postinc1
 30234  011C36  006F FF8F FFE6     	movff	plusw1,postinc1
 30235  011C3C  006F FF8F FFE6     	movff	plusw1,postinc1
 30236  011C42  006F FF8F FFE6     	movff	plusw1,postinc1
 30237  011C48  EC71  F0EF         	call	___fltol	;wreg free
 30238  011C4C  0060  F0A8  F034   	movff	btemp,btemp+10
 30239  011C52  0060  F0AC  F035   	movff	btemp+1,btemp+11
 30240                           
 30241                           ;stkvar	_d @ sp[(-56)+44]
 30242  011C58  0EF4               	movlw	-12
 30243  011C5A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30244  011C60  0EF5               	movlw	-11
 30245  011C62  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30246                           
 30247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 30248                           ;stkvar	_u @ sp[(-56)+12]
 30249  011C68  0ED4               	movlw	-44
 30250  011C6A  006F FF8F FFE6     	movff	plusw1,postinc1
 30251  011C70  006F FF8F FFE6     	movff	plusw1,postinc1
 30252  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 30253  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 30254                           
 30255                           ;stkvar	_l @ sp[(-60)+20]
 30256  011C82  0ED8               	movlw	-40
 30257  011C84  006F FF8F FFE6     	movff	plusw1,postinc1
 30258  011C8A  006F FF8F FFE6     	movff	plusw1,postinc1
 30259  011C90  006F FF8F FFE6     	movff	plusw1,postinc1
 30260  011C96  006F FF8F FFE6     	movff	plusw1,postinc1
 30261  011C9C  ECC2  F0B1         	call	___flmul	;wreg free
 30262  011CA0  0060  F0AB  FFE6   	movff	btemp,postinc1
 30263  011CA6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30264  011CAC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30265  011CB2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30266                           
 30267                           ;stkvar	_h @ sp[(-60)+24]
 30268  011CB8  0EDC               	movlw	-36
 30269  011CBA  006F FF8F FFE6     	movff	plusw1,postinc1
 30270  011CC0  006F FF8F FFE6     	movff	plusw1,postinc1
 30271  011CC6  006F FF8F FFE6     	movff	plusw1,postinc1
 30272  011CCC  006F FF8F FFE6     	movff	plusw1,postinc1
 30273  011CD2  EC28  F00B         	call	___flsub	;wreg free
 30274                           
 30275                           ;stkvar	_h @ sp[(-56)+24]
 30276  011CD6  0EE0               	movlw	-32
 30277  011CD8  0060  F0AB  FFE3   	movff	btemp,plusw1
 30278  011CDE  0EE1               	movlw	-31
 30279  011CE0  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30280  011CE6  0EE2               	movlw	-30
 30281  011CE8  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30282  011CEE  0EE3               	movlw	-29
 30283  011CF0  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30284                           
 30285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 30286  011CF6  0E00               	movlw	0
 30287  011CF8  6EE6               	movwf	postinc1,c
 30288  011CFA  0E00               	movlw	0
 30289  011CFC  6EE6               	movwf	postinc1,c
 30290  011CFE  0E20               	movlw	32
 30291  011D00  6EE6               	movwf	postinc1,c
 30292  011D02  0E41               	movlw	65
 30293  011D04  6EE6               	movwf	postinc1,c
 30294                           
 30295                           ;stkvar	_u @ sp[(-60)+12]
 30296  011D06  0ED0               	movlw	-48
 30297  011D08  006F FF8F FFE6     	movff	plusw1,postinc1
 30298  011D0E  006F FF8F FFE6     	movff	plusw1,postinc1
 30299  011D14  006F FF8F FFE6     	movff	plusw1,postinc1
 30300  011D1A  006F FF8F FFE6     	movff	plusw1,postinc1
 30301  011D20  EC13  F0BD         	call	___fldiv	;wreg free
 30302                           
 30303                           ;stkvar	_u @ sp[(-56)+12]
 30304  011D24  0ED4               	movlw	-44
 30305  011D26  0060  F0AB  FFE3   	movff	btemp,plusw1
 30306  011D2C  0ED5               	movlw	-43
 30307  011D2E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30308  011D34  0ED6               	movlw	-42
 30309  011D36  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30310  011D3C  0ED7               	movlw	-41
 30311  011D3E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30312                           
 30313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 30314                           ;stkvar	_i @ sp[(-56)+36]
 30315  011D44  0EEC               	movlw	-20
 30316  011D46  50E3               	movf	plusw1,w,c
 30317  011D48  0F01               	addlw	1
 30318  011D4A  6E2A               	movwf	btemp^0,c
 30319  011D4C  0EEC               	movlw	-20
 30320  011D4E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30321  011D54  6A2A               	clrf	btemp^0,c
 30322  011D56  0EED               	movlw	-19
 30323  011D58  50E3               	movf	plusw1,w,c
 30324  011D5A  202A               	addwfc	btemp^0,w,c
 30325  011D5C  6E2A               	movwf	btemp^0,c
 30326  011D5E  0EED               	movlw	-19
 30327  011D60  0060  F0AB  FFE3   	movff	btemp,plusw1
 30328  011D66                     l15554:
 30329                           
 30330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 30331                           ;stkvar	_m @ sp[(-56)+48]
 30332                           ;stkvar	_i @ sp[(-56)+36]
 30333  011D66  50E1               	movf	fsr1l,w,c
 30334  011D68  0FEC               	addlw	-20
 30335  011D6A  6ED9               	movwf	fsr2l,c
 30336  011D6C  50E2               	movf	fsr1h,w,c
 30337  011D6E  6EDA               	movwf	fsr2h,c
 30338  011D70  0EFF               	movlw	255
 30339  011D72  22DA               	addwfc	fsr2h,f,c
 30340  011D74  0EF8               	movlw	-8
 30341  011D76  50E3               	movf	plusw1,w,c
 30342  011D78  5CDE               	subwf	postinc2,w,c
 30343  011D7A  50DE               	movf	postinc2,w,c
 30344  011D7C  0A80               	xorlw	128
 30345  011D7E  6E2A               	movwf	btemp^0,c
 30346  011D80  0EF9               	movlw	-7
 30347  011D82  50E3               	movf	plusw1,w,c
 30348  011D84  0A80               	xorlw	128
 30349  011D86  582A               	subwfb	btemp^0,w,c
 30350  011D88  A0D8               	btfss	status,0,c
 30351  011D8A  D717               	goto	l15544
 30352                           
 30353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 30354  011D8C  0E00               	movlw	0
 30355  011D8E  6EE6               	movwf	postinc1,c
 30356  011D90  0E00               	movlw	0
 30357  011D92  6EE6               	movwf	postinc1,c
 30358  011D94  0EA0               	movlw	160
 30359  011D96  6EE6               	movwf	postinc1,c
 30360  011D98  0E40               	movlw	64
 30361  011D9A  6EE6               	movwf	postinc1,c
 30362                           
 30363                           ;stkvar	_u @ sp[(-60)+12]
 30364  011D9C  0ED0               	movlw	-48
 30365  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 30366  011DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 30367  011DAA  006F FF8F FFE6     	movff	plusw1,postinc1
 30368  011DB0  006F FF8F FFE6     	movff	plusw1,postinc1
 30369  011DB6  ECC2  F0B1         	call	___flmul	;wreg free
 30370                           
 30371                           ;stkvar	_l @ sp[(-56)+20]
 30372  011DBA  0EDC               	movlw	-36
 30373  011DBC  0060  F0AB  FFE3   	movff	btemp,plusw1
 30374  011DC2  0EDD               	movlw	-35
 30375  011DC4  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30376  011DCA  0EDE               	movlw	-34
 30377  011DCC  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30378  011DD2  0EDF               	movlw	-33
 30379  011DD4  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30380                           
 30381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 30382                           ;stkvar	_l @ sp[(-56)+20]
 30383  011DDA  0EDC               	movlw	-36
 30384  011DDC  006F FF8F FFE6     	movff	plusw1,postinc1
 30385  011DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 30386  011DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 30387  011DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 30388                           
 30389                           ;stkvar	_h @ sp[(-60)+24]
 30390  011DF4  0EDC               	movlw	-36
 30391  011DF6  006F FF8F FFE6     	movff	plusw1,postinc1
 30392  011DFC  006F FF8F FFE6     	movff	plusw1,postinc1
 30393  011E02  006F FF8F FFE6     	movff	plusw1,postinc1
 30394  011E08  006F FF8F FFE6     	movff	plusw1,postinc1
 30395  011E0E  ECDD  F0F0         	call	___flge	;wreg free
 30396  011E12  A02A               	btfss	btemp& (0+255),0,c
 30397  011E14  D021               	goto	u14760
 30398                           
 30399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 30400                           ;stkvar	_l @ sp[(-56)+20]
 30401                           
 30402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 30403                           
 30404                           ;stkvar	_l @ sp[(-56)+20]
 30405                           
 30406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 30407  011E16  0EDC               	movlw	-36
 30408  011E18  006F FF8F FFE6     	movff	plusw1,postinc1
 30409  011E1E  006F FF8F FFE6     	movff	plusw1,postinc1
 30410  011E24  006F FF8F FFE6     	movff	plusw1,postinc1
 30411  011E2A  006F FF8F FFE6     	movff	plusw1,postinc1
 30412                           
 30413                           ;stkvar	_h @ sp[(-60)+24]
 30414  011E30  0EDC               	movlw	-36
 30415  011E32  006F FF8F FFE6     	movff	plusw1,postinc1
 30416  011E38  006F FF8F FFE6     	movff	plusw1,postinc1
 30417  011E3E  006F FF8F FFE6     	movff	plusw1,postinc1
 30418  011E44  006F FF8F FFE6     	movff	plusw1,postinc1
 30419  011E4A  EC1C  F0FE         	call	___fleq	;wreg free
 30420  011E4E  A02A               	btfss	btemp& (0+255),0,c
 30421  011E50  D01B               	goto	l15568
 30422                           
 30423                           ;stkvar	_d @ sp[(-56)+44]
 30424  011E52  0EF4               	movlw	-12
 30425  011E54  B0E3               	btfsc	plusw1,0,c
 30426  011E56  D018               	goto	l15568
 30427  011E58                     u14760:
 30428                           
 30429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 30430  011E58  0E00               	movlw	0
 30431  011E5A  6E32               	movwf	(btemp+8)^0,c
 30432  011E5C  0E00               	movlw	0
 30433  011E5E  6E33               	movwf	(btemp+9)^0,c
 30434  011E60  0E00               	movlw	0
 30435  011E62  6E34               	movwf	(btemp+10)^0,c
 30436  011E64  0E00               	movlw	0
 30437  011E66  6E35               	movwf	(btemp+11)^0,c
 30438                           
 30439                           ;stkvar	_l @ sp[(-56)+20]
 30440  011E68  0EDC               	movlw	-36
 30441  011E6A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30442  011E70  0EDD               	movlw	-35
 30443  011E72  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30444  011E78  0EDE               	movlw	-34
 30445  011E7A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30446  011E80  0EDF               	movlw	-33
 30447  011E82  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30448  011E88                     l15568:
 30449                           
 30450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 30451                           ;stkvar	_l @ sp[(-56)+20]
 30452  011E88  0EDC               	movlw	-36
 30453  011E8A  006F FF8F FFE6     	movff	plusw1,postinc1
 30454  011E90  006F FF8F FFE6     	movff	plusw1,postinc1
 30455  011E96  006F FF8F FFE6     	movff	plusw1,postinc1
 30456  011E9C  006F FF8F FFE6     	movff	plusw1,postinc1
 30457                           
 30458                           ;stkvar	_g @ sp[(-60)+16]
 30459  011EA2  0ED4               	movlw	-44
 30460  011EA4  006F FF8F FFE6     	movff	plusw1,postinc1
 30461  011EAA  006F FF8F FFE6     	movff	plusw1,postinc1
 30462  011EB0  006F FF8F FFE6     	movff	plusw1,postinc1
 30463  011EB6  006F FF8F FFE6     	movff	plusw1,postinc1
 30464  011EBC  ECD7  F0B5         	call	___fladd	;wreg free
 30465                           
 30466                           ;stkvar	_h @ sp[(-56)+24]
 30467  011EC0  0EE0               	movlw	-32
 30468  011EC2  0060  F0AB  FFE3   	movff	btemp,plusw1
 30469  011EC8  0EE1               	movlw	-31
 30470  011ECA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30471  011ED0  0EE2               	movlw	-30
 30472  011ED2  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30473  011ED8  0EE3               	movlw	-29
 30474  011EDA  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30475                           
 30476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 30477                           ;stkvar	_ou @ sp[(-56)+28]
 30478  011EE0  0EE4               	movlw	-28
 30479  011EE2  006F FF8C  F032    	movff	plusw1,btemp+8
 30480  011EE8  0EE5               	movlw	-27
 30481  011EEA  006F FF8C  F033    	movff	plusw1,btemp+9
 30482  011EF0  0EE6               	movlw	-26
 30483  011EF2  006F FF8C  F034    	movff	plusw1,btemp+10
 30484  011EF8  0EE7               	movlw	-25
 30485  011EFA  006F FF8C  F035    	movff	plusw1,btemp+11
 30486                           
 30487                           ;stkvar	_u @ sp[(-56)+12]
 30488  011F00  0ED4               	movlw	-44
 30489  011F02  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30490  011F08  0ED5               	movlw	-43
 30491  011F0A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30492  011F10  0ED6               	movlw	-42
 30493  011F12  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30494  011F18  0ED7               	movlw	-41
 30495  011F1A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30496                           
 30497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 30498                           ;stkvar	_nmode @ sp[(-56)+55]
 30499  011F20  0EFF               	movlw	-1
 30500  011F22  006F FF8C  F02A    	movff	plusw1,btemp
 30501  011F28  0E65               	movlw	101
 30502  011F2A  182A               	xorwf	btemp^0,w,c
 30503  011F2C  B4D8               	btfsc	status,2,c
 30504  011F2E  D011               	goto	l15576
 30505                           
 30506                           ;stkvar	_e @ sp[(-56)+34]
 30507                           ;stkvar	_ne @ sp[(-56)+46]
 30508  011F30  0EEA               	movlw	-22
 30509  011F32  006F FF8C  F02A    	movff	plusw1,btemp
 30510  011F38  0EF6               	movlw	-10
 30511  011F3A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30512  011F40  0EEB               	movlw	-21
 30513  011F42  006F FF8C  F02A    	movff	plusw1,btemp
 30514  011F48  0EF7               	movlw	-9
 30515  011F4A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30516  011F50  D004               	goto	l2551
 30517  011F52                     l15576:
 30518                           
 30519                           ;stkvar	_ne @ sp[(-56)+46]
 30520  011F52  0EF6               	movlw	-10
 30521  011F54  6AE3               	clrf	plusw1,c
 30522  011F56  0EF7               	movlw	-9
 30523  011F58  6AE3               	clrf	plusw1,c
 30524  011F5A                     l2551:
 30525                           
 30526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 30527                           ;stkvar	_pp @ sp[(-56)+50]
 30528  011F5A  0EFA               	movlw	-6
 30529  011F5C  6AE3               	clrf	plusw1,c
 30530  011F5E  0EFB               	movlw	-5
 30531  011F60  6AE3               	clrf	plusw1,c
 30532                           
 30533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 30534                           ;stkvar	_t @ sp[(-56)+52]
 30535  011F62  0EFC               	movlw	-4
 30536  011F64  6AE3               	clrf	plusw1,c
 30537  011F66  0EFD               	movlw	-3
 30538  011F68  6AE3               	clrf	plusw1,c
 30539                           
 30540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 30541                           ;stkvar	_i @ sp[(-56)+36]
 30542  011F6A  0EEC               	movlw	-20
 30543  011F6C  6AE3               	clrf	plusw1,c
 30544  011F6E  0EED               	movlw	-19
 30545  011F70  6AE3               	clrf	plusw1,c
 30546                           
 30547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 30548  011F72  D1B7               	goto	l15628
 30549  011F74                     l15578:
 30550                           
 30551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 30552                           ;stkvar	_u @ sp[(-56)+12]
 30553  011F74  0ED4               	movlw	-44
 30554  011F76  006F FF8F FFE6     	movff	plusw1,postinc1
 30555  011F7C  006F FF8F FFE6     	movff	plusw1,postinc1
 30556  011F82  006F FF8F FFE6     	movff	plusw1,postinc1
 30557  011F88  006F FF8F FFE6     	movff	plusw1,postinc1
 30558                           
 30559                           ;stkvar	_h @ sp[(-60)+24]
 30560  011F8E  0EDC               	movlw	-36
 30561  011F90  006F FF8F FFE6     	movff	plusw1,postinc1
 30562  011F96  006F FF8F FFE6     	movff	plusw1,postinc1
 30563  011F9C  006F FF8F FFE6     	movff	plusw1,postinc1
 30564  011FA2  006F FF8F FFE6     	movff	plusw1,postinc1
 30565  011FA8  EC13  F0BD         	call	___fldiv	;wreg free
 30566  011FAC  0060  F0AB  FFE6   	movff	btemp,postinc1
 30567  011FB2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30568  011FB8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30569  011FBE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30570  011FC4  ECF7  F0CE         	call	_floorf	;wreg free
 30571                           
 30572                           ;stkvar	_l @ sp[(-56)+20]
 30573  011FC8  0EDC               	movlw	-36
 30574  011FCA  0060  F0AB  FFE3   	movff	btemp,plusw1
 30575  011FD0  0EDD               	movlw	-35
 30576  011FD2  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30577  011FD8  0EDE               	movlw	-34
 30578  011FDA  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30579  011FE0  0EDF               	movlw	-33
 30580  011FE2  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30581                           
 30582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 30583                           ;stkvar	_l @ sp[(-56)+20]
 30584  011FE8  0EDC               	movlw	-36
 30585  011FEA  006F FF8F FFE6     	movff	plusw1,postinc1
 30586  011FF0  006F FF8F FFE6     	movff	plusw1,postinc1
 30587  011FF6  006F FF8F FFE6     	movff	plusw1,postinc1
 30588  011FFC  006F FF8F FFE6     	movff	plusw1,postinc1
 30589  012002  EC71  F0EF         	call	___fltol	;wreg free
 30590  012006  0060  F0A8  F034   	movff	btemp,btemp+10
 30591  01200C  0060  F0AC  F035   	movff	btemp+1,btemp+11
 30592                           
 30593                           ;stkvar	_d @ sp[(-56)+44]
 30594  012012  0EF4               	movlw	-12
 30595  012014  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30596  01201A  0EF5               	movlw	-11
 30597  01201C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30598                           
 30599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 30600  012022  B84E               	btfsc	_flags^0,4,c
 30601  012024  D026               	goto	l15592
 30602                           
 30603                           ;stkvar	_d @ sp[(-56)+44]
 30604  012026  0EF4               	movlw	-12
 30605  012028  006F FF8C  F02A    	movff	plusw1,btemp
 30606  01202E  0EF5               	movlw	-11
 30607  012030  50E3               	movf	plusw1,w,c
 30608  012032  102A               	iorwf	btemp^0,w,c
 30609  012034  A4D8               	btfss	status,2,c
 30610  012036  D01D               	goto	l15592
 30611                           
 30612                           ;stkvar	_mode @ sp[(-56)+54]
 30613  012038  0EFE               	movlw	-2
 30614  01203A  006F FF8C  F02A    	movff	plusw1,btemp
 30615  012040  0E67               	movlw	103
 30616  012042  182A               	xorwf	btemp^0,w,c
 30617  012044  A4D8               	btfss	status,2,c
 30618  012046  D015               	goto	l15592
 30619                           
 30620                           ;stkvar	_ne @ sp[(-56)+46]
 30621  012048  0EF7               	movlw	-9
 30622  01204A  AEE3               	btfss	plusw1,7,c
 30623  01204C  D012               	goto	l15592
 30624                           
 30625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 30626                           ;stkvar	_t @ sp[(-56)+52]
 30627  01204E  0EFC               	movlw	-4
 30628  012050  50E3               	movf	plusw1,w,c
 30629  012052  0F01               	addlw	1
 30630  012054  6E2A               	movwf	btemp^0,c
 30631  012056  0EFC               	movlw	-4
 30632  012058  0060  F0AB  FFE3   	movff	btemp,plusw1
 30633  01205E  6A2A               	clrf	btemp^0,c
 30634  012060  0EFD               	movlw	-3
 30635  012062  50E3               	movf	plusw1,w,c
 30636  012064  202A               	addwfc	btemp^0,w,c
 30637  012066  6E2A               	movwf	btemp^0,c
 30638  012068  0EFD               	movlw	-3
 30639  01206A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30640                           
 30641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 30642  012070  D0AF               	goto	l15620
 30643  012072                     l15592:
 30644                           
 30645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 30646                           ;stkvar	_pp @ sp[(-56)+50]
 30647  012072  0EFA               	movlw	-6
 30648  012074  006F FF8C  F02A    	movff	plusw1,btemp
 30649  01207A  0EFB               	movlw	-5
 30650  01207C  50E3               	movf	plusw1,w,c
 30651  01207E  102A               	iorwf	btemp^0,w,c
 30652  012080  A4D8               	btfss	status,2,c
 30653  012082  D070               	goto	l15612
 30654                           
 30655                           ;stkvar	_ne @ sp[(-56)+46]
 30656  012084  0EF7               	movlw	-9
 30657  012086  AEE3               	btfss	plusw1,7,c
 30658  012088  D06D               	goto	l15612
 30659                           
 30660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 30661                           ;stkvar	_n @ sp[(-56)+32]
 30662  01208A  0EE8               	movlw	-24
 30663  01208C  006F FF8C  F034    	movff	plusw1,btemp+10
 30664  012092  0EE9               	movlw	-23
 30665  012094  006F FF8C  F035    	movff	plusw1,btemp+11
 30666  01209A  0E54               	movlw	low _dbuf
 30667  01209C  2434               	addwf	(btemp+10)^0,w,c
 30668  01209E  6ED9               	movwf	fsr2l,c
 30669  0120A0  0E03               	movlw	high _dbuf
 30670  0120A2  2035               	addwfc	(btemp+11)^0,w,c
 30671  0120A4  6EDA               	movwf	fsr2h,c
 30672  0120A6  0E2E               	movlw	46
 30673  0120A8  6EDF               	movwf	indf2,c
 30674                           
 30675                           ;stkvar	_n @ sp[(-56)+32]
 30676  0120AA  0EE8               	movlw	-24
 30677  0120AC  50E3               	movf	plusw1,w,c
 30678  0120AE  0F01               	addlw	1
 30679  0120B0  6E2A               	movwf	btemp^0,c
 30680  0120B2  0EE8               	movlw	-24
 30681  0120B4  0060  F0AB  FFE3   	movff	btemp,plusw1
 30682  0120BA  6A2A               	clrf	btemp^0,c
 30683  0120BC  0EE9               	movlw	-23
 30684  0120BE  50E3               	movf	plusw1,w,c
 30685  0120C0  202A               	addwfc	btemp^0,w,c
 30686  0120C2  6E2A               	movwf	btemp^0,c
 30687  0120C4  0EE9               	movlw	-23
 30688  0120C6  0060  F0AB  FFE3   	movff	btemp,plusw1
 30689                           
 30690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 30691                           ;stkvar	_w @ sp[(-56)+38]
 30692  0120CC  50E1               	movf	fsr1l,w,c
 30693  0120CE  0FEE               	addlw	-18
 30694  0120D0  6ED9               	movwf	fsr2l,c
 30695  0120D2  50E2               	movf	fsr1h,w,c
 30696  0120D4  6EDA               	movwf	fsr2h,c
 30697  0120D6  0EFF               	movlw	255
 30698  0120D8  22DA               	addwfc	fsr2h,f,c
 30699  0120DA  06DE               	decf	postinc2,f,c
 30700  0120DC  0E00               	movlw	0
 30701  0120DE  5ADD               	subwfb	postdec2,f,c
 30702                           
 30703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 30704  0120E0  0E01               	movlw	1
 30705  0120E2  6E34               	movwf	(btemp+10)^0,c
 30706  0120E4  0E00               	movlw	0
 30707  0120E6  6E35               	movwf	(btemp+11)^0,c
 30708                           
 30709                           ;stkvar	_pp @ sp[(-56)+50]
 30710  0120E8  0EFA               	movlw	-6
 30711  0120EA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30712  0120F0  0EFB               	movlw	-5
 30713  0120F2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30714  0120F8  D035               	goto	l15612
 30715  0120FA                     l15604:
 30716                           
 30717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 30718                           ;stkvar	_n @ sp[(-56)+32]
 30719  0120FA  0EE8               	movlw	-24
 30720  0120FC  006F FF8C  F034    	movff	plusw1,btemp+10
 30721  012102  0EE9               	movlw	-23
 30722  012104  006F FF8C  F035    	movff	plusw1,btemp+11
 30723  01210A  0E54               	movlw	low _dbuf
 30724  01210C  2434               	addwf	(btemp+10)^0,w,c
 30725  01210E  6ED9               	movwf	fsr2l,c
 30726  012110  0E03               	movlw	high _dbuf
 30727  012112  2035               	addwfc	(btemp+11)^0,w,c
 30728  012114  6EDA               	movwf	fsr2h,c
 30729  012116  0E30               	movlw	48
 30730  012118  6EDF               	movwf	indf2,c
 30731                           
 30732                           ;stkvar	_n @ sp[(-56)+32]
 30733  01211A  0EE8               	movlw	-24
 30734  01211C  50E3               	movf	plusw1,w,c
 30735  01211E  0F01               	addlw	1
 30736  012120  6E2A               	movwf	btemp^0,c
 30737  012122  0EE8               	movlw	-24
 30738  012124  0060  F0AB  FFE3   	movff	btemp,plusw1
 30739  01212A  6A2A               	clrf	btemp^0,c
 30740  01212C  0EE9               	movlw	-23
 30741  01212E  50E3               	movf	plusw1,w,c
 30742  012130  202A               	addwfc	btemp^0,w,c
 30743  012132  6E2A               	movwf	btemp^0,c
 30744  012134  0EE9               	movlw	-23
 30745  012136  0060  F0AB  FFE3   	movff	btemp,plusw1
 30746                           
 30747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 30748                           ;stkvar	_w @ sp[(-56)+38]
 30749  01213C  50E1               	movf	fsr1l,w,c
 30750  01213E  0FEE               	addlw	-18
 30751  012140  6ED9               	movwf	fsr2l,c
 30752  012142  50E2               	movf	fsr1h,w,c
 30753  012144  6EDA               	movwf	fsr2h,c
 30754  012146  0EFF               	movlw	255
 30755  012148  22DA               	addwfc	fsr2h,f,c
 30756  01214A  06DE               	decf	postinc2,f,c
 30757  01214C  0E00               	movlw	0
 30758  01214E  5ADD               	subwfb	postdec2,f,c
 30759                           
 30760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 30761                           ;stkvar	_t @ sp[(-56)+52]
 30762  012150  50E1               	movf	fsr1l,w,c
 30763  012152  0FFC               	addlw	-4
 30764  012154  6ED9               	movwf	fsr2l,c
 30765  012156  50E2               	movf	fsr1h,w,c
 30766  012158  6EDA               	movwf	fsr2h,c
 30767  01215A  0EFF               	movlw	255
 30768  01215C  22DA               	addwfc	fsr2h,f,c
 30769  01215E  06DE               	decf	postinc2,f,c
 30770  012160  0E00               	movlw	0
 30771  012162  5ADD               	subwfb	postdec2,f,c
 30772  012164                     l15612:
 30773                           
 30774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 30775                           ;stkvar	_t @ sp[(-56)+52]
 30776  012164  0EFC               	movlw	-4
 30777  012166  006F FF8C  F02A    	movff	plusw1,btemp
 30778  01216C  0EFD               	movlw	-3
 30779  01216E  50E3               	movf	plusw1,w,c
 30780  012170  102A               	iorwf	btemp^0,w,c
 30781  012172  A4D8               	btfss	status,2,c
 30782  012174  D7C2               	goto	l15604
 30783                           
 30784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 30785                           ;stkvar	_n @ sp[(-56)+32]
 30786  012176  0EE8               	movlw	-24
 30787  012178  006F FF8C  F034    	movff	plusw1,btemp+10
 30788  01217E  0EE9               	movlw	-23
 30789  012180  006F FF8C  F035    	movff	plusw1,btemp+11
 30790  012186  0E54               	movlw	low _dbuf
 30791  012188  2434               	addwf	(btemp+10)^0,w,c
 30792  01218A  6ED9               	movwf	fsr2l,c
 30793  01218C  0E03               	movlw	high _dbuf
 30794  01218E  2035               	addwfc	(btemp+11)^0,w,c
 30795  012190  6EDA               	movwf	fsr2h,c
 30796                           
 30797                           ;stkvar	_d @ sp[(-56)+44]
 30798  012192  0EF4               	movlw	-12
 30799  012194  50E3               	movf	plusw1,w,c
 30800  012196  0F30               	addlw	48
 30801  012198  6EDF               	movwf	indf2,c
 30802                           
 30803                           ;stkvar	_n @ sp[(-56)+32]
 30804  01219A  0EE8               	movlw	-24
 30805  01219C  50E3               	movf	plusw1,w,c
 30806  01219E  0F01               	addlw	1
 30807  0121A0  6E2A               	movwf	btemp^0,c
 30808  0121A2  0EE8               	movlw	-24
 30809  0121A4  0060  F0AB  FFE3   	movff	btemp,plusw1
 30810  0121AA  6A2A               	clrf	btemp^0,c
 30811  0121AC  0EE9               	movlw	-23
 30812  0121AE  50E3               	movf	plusw1,w,c
 30813  0121B0  202A               	addwfc	btemp^0,w,c
 30814  0121B2  6E2A               	movwf	btemp^0,c
 30815  0121B4  0EE9               	movlw	-23
 30816  0121B6  0060  F0AB  FFE3   	movff	btemp,plusw1
 30817                           
 30818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 30819                           ;stkvar	_w @ sp[(-56)+38]
 30820  0121BC  50E1               	movf	fsr1l,w,c
 30821  0121BE  0FEE               	addlw	-18
 30822  0121C0  6ED9               	movwf	fsr2l,c
 30823  0121C2  50E2               	movf	fsr1h,w,c
 30824  0121C4  6EDA               	movwf	fsr2h,c
 30825  0121C6  0EFF               	movlw	255
 30826  0121C8  22DA               	addwfc	fsr2h,f,c
 30827  0121CA  06DE               	decf	postinc2,f,c
 30828  0121CC  0E00               	movlw	0
 30829  0121CE  5ADD               	subwfb	postdec2,f,c
 30830  0121D0                     l15620:
 30831                           
 30832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 30833                           ;stkvar	_u @ sp[(-56)+12]
 30834  0121D0  0ED4               	movlw	-44
 30835  0121D2  006F FF8F FFE6     	movff	plusw1,postinc1
 30836  0121D8  006F FF8F FFE6     	movff	plusw1,postinc1
 30837  0121DE  006F FF8F FFE6     	movff	plusw1,postinc1
 30838  0121E4  006F FF8F FFE6     	movff	plusw1,postinc1
 30839                           
 30840                           ;stkvar	_l @ sp[(-60)+20]
 30841  0121EA  0ED8               	movlw	-40
 30842  0121EC  006F FF8F FFE6     	movff	plusw1,postinc1
 30843  0121F2  006F FF8F FFE6     	movff	plusw1,postinc1
 30844  0121F8  006F FF8F FFE6     	movff	plusw1,postinc1
 30845  0121FE  006F FF8F FFE6     	movff	plusw1,postinc1
 30846  012204  ECC2  F0B1         	call	___flmul	;wreg free
 30847  012208  0060  F0AB  FFE6   	movff	btemp,postinc1
 30848  01220E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30849  012214  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30850  01221A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30851                           
 30852                           ;stkvar	_h @ sp[(-60)+24]
 30853  012220  0EDC               	movlw	-36
 30854  012222  006F FF8F FFE6     	movff	plusw1,postinc1
 30855  012228  006F FF8F FFE6     	movff	plusw1,postinc1
 30856  01222E  006F FF8F FFE6     	movff	plusw1,postinc1
 30857  012234  006F FF8F FFE6     	movff	plusw1,postinc1
 30858  01223A  EC28  F00B         	call	___flsub	;wreg free
 30859                           
 30860                           ;stkvar	_h @ sp[(-56)+24]
 30861  01223E  0EE0               	movlw	-32
 30862  012240  0060  F0AB  FFE3   	movff	btemp,plusw1
 30863  012246  0EE1               	movlw	-31
 30864  012248  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30865  01224E  0EE2               	movlw	-30
 30866  012250  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30867  012256  0EE3               	movlw	-29
 30868  012258  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30869                           
 30870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 30871  01225E  0E00               	movlw	0
 30872  012260  6EE6               	movwf	postinc1,c
 30873  012262  0E00               	movlw	0
 30874  012264  6EE6               	movwf	postinc1,c
 30875  012266  0E20               	movlw	32
 30876  012268  6EE6               	movwf	postinc1,c
 30877  01226A  0E41               	movlw	65
 30878  01226C  6EE6               	movwf	postinc1,c
 30879                           
 30880                           ;stkvar	_u @ sp[(-60)+12]
 30881  01226E  0ED0               	movlw	-48
 30882  012270  006F FF8F FFE6     	movff	plusw1,postinc1
 30883  012276  006F FF8F FFE6     	movff	plusw1,postinc1
 30884  01227C  006F FF8F FFE6     	movff	plusw1,postinc1
 30885  012282  006F FF8F FFE6     	movff	plusw1,postinc1
 30886  012288  EC13  F0BD         	call	___fldiv	;wreg free
 30887                           
 30888                           ;stkvar	_u @ sp[(-56)+12]
 30889  01228C  0ED4               	movlw	-44
 30890  01228E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30891  012294  0ED5               	movlw	-43
 30892  012296  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30893  01229C  0ED6               	movlw	-42
 30894  01229E  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30895  0122A4  0ED7               	movlw	-41
 30896  0122A6  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30897                           
 30898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 30899                           ;stkvar	_ne @ sp[(-56)+46]
 30900  0122AC  50E1               	movf	fsr1l,w,c
 30901  0122AE  0FF6               	addlw	-10
 30902  0122B0  6ED9               	movwf	fsr2l,c
 30903  0122B2  50E2               	movf	fsr1h,w,c
 30904  0122B4  6EDA               	movwf	fsr2h,c
 30905  0122B6  0EFF               	movlw	255
 30906  0122B8  22DA               	addwfc	fsr2h,f,c
 30907  0122BA  06DE               	decf	postinc2,f,c
 30908  0122BC  0E00               	movlw	0
 30909  0122BE  5ADD               	subwfb	postdec2,f,c
 30910                           
 30911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 30912                           ;stkvar	_i @ sp[(-56)+36]
 30913  0122C0  0EEC               	movlw	-20
 30914  0122C2  50E3               	movf	plusw1,w,c
 30915  0122C4  0F01               	addlw	1
 30916  0122C6  6E2A               	movwf	btemp^0,c
 30917  0122C8  0EEC               	movlw	-20
 30918  0122CA  0060  F0AB  FFE3   	movff	btemp,plusw1
 30919  0122D0  6A2A               	clrf	btemp^0,c
 30920  0122D2  0EED               	movlw	-19
 30921  0122D4  50E3               	movf	plusw1,w,c
 30922  0122D6  202A               	addwfc	btemp^0,w,c
 30923  0122D8  6E2A               	movwf	btemp^0,c
 30924  0122DA  0EED               	movlw	-19
 30925  0122DC  0060  F0AB  FFE3   	movff	btemp,plusw1
 30926  0122E2                     l15628:
 30927                           
 30928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 30929                           ;stkvar	_m @ sp[(-56)+48]
 30930                           ;stkvar	_i @ sp[(-56)+36]
 30931  0122E2  50E1               	movf	fsr1l,w,c
 30932  0122E4  0FEC               	addlw	-20
 30933  0122E6  6ED9               	movwf	fsr2l,c
 30934  0122E8  50E2               	movf	fsr1h,w,c
 30935  0122EA  6EDA               	movwf	fsr2h,c
 30936  0122EC  0EFF               	movlw	255
 30937  0122EE  22DA               	addwfc	fsr2h,f,c
 30938  0122F0  0EF8               	movlw	-8
 30939  0122F2  50E3               	movf	plusw1,w,c
 30940  0122F4  5CDE               	subwf	postinc2,w,c
 30941  0122F6  50DE               	movf	postinc2,w,c
 30942  0122F8  0A80               	xorlw	128
 30943  0122FA  6E2A               	movwf	btemp^0,c
 30944  0122FC  0EF9               	movlw	-7
 30945  0122FE  50E3               	movf	plusw1,w,c
 30946  012300  0A80               	xorlw	128
 30947  012302  582A               	subwfb	btemp^0,w,c
 30948  012304  B0D8               	btfsc	status,0,c
 30949  012306  D00E               	goto	u14860
 30950                           
 30951                           ;stkvar	_n @ sp[(-56)+32]
 30952  012308  0EE9               	movlw	-23
 30953  01230A  BEE3               	btfsc	plusw1,7,c
 30954  01230C  D633               	goto	l15578
 30955  01230E  0EE9               	movlw	-23
 30956  012310  50E3               	movf	plusw1,w,c
 30957  012312  E108               	bnz	u14860
 30958  012314  0EE8               	movlw	-24
 30959  012316  006F FF8C  F02A    	movff	plusw1,btemp
 30960  01231C  0E4B               	movlw	75
 30961  01231E  5E2A               	subwf	btemp^0,f,c
 30962  012320  A0D8               	btfss	status,0,c
 30963  012322  D628               	goto	l15578
 30964  012324                     u14860:
 30965                           
 30966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 30967                           ;stkvar	_pp @ sp[(-56)+50]
 30968  012324  0EFA               	movlw	-6
 30969  012326  006F FF8C  F02A    	movff	plusw1,btemp
 30970  01232C  0EFB               	movlw	-5
 30971  01232E  50E3               	movf	plusw1,w,c
 30972  012330  102A               	iorwf	btemp^0,w,c
 30973  012332  B4D8               	btfsc	status,2,c
 30974  012334  A84E               	btfss	_flags^0,4,c
 30975  012336  D021               	goto	l15640
 30976                           
 30977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 30978                           ;stkvar	_n @ sp[(-56)+32]
 30979  012338  0EE8               	movlw	-24
 30980  01233A  006F FF8C  F034    	movff	plusw1,btemp+10
 30981  012340  0EE9               	movlw	-23
 30982  012342  006F FF8C  F035    	movff	plusw1,btemp+11
 30983  012348  0E54               	movlw	low _dbuf
 30984  01234A  2434               	addwf	(btemp+10)^0,w,c
 30985  01234C  6ED9               	movwf	fsr2l,c
 30986  01234E  0E03               	movlw	high _dbuf
 30987  012350  2035               	addwfc	(btemp+11)^0,w,c
 30988  012352  6EDA               	movwf	fsr2h,c
 30989  012354  0E2E               	movlw	46
 30990  012356  6EDF               	movwf	indf2,c
 30991                           
 30992                           ;stkvar	_n @ sp[(-56)+32]
 30993  012358  0EE8               	movlw	-24
 30994  01235A  50E3               	movf	plusw1,w,c
 30995  01235C  0F01               	addlw	1
 30996  01235E  6E2A               	movwf	btemp^0,c
 30997  012360  0EE8               	movlw	-24
 30998  012362  0060  F0AB  FFE3   	movff	btemp,plusw1
 30999  012368  6A2A               	clrf	btemp^0,c
 31000  01236A  0EE9               	movlw	-23
 31001  01236C  50E3               	movf	plusw1,w,c
 31002  01236E  202A               	addwfc	btemp^0,w,c
 31003  012370  6E2A               	movwf	btemp^0,c
 31004  012372  0EE9               	movlw	-23
 31005  012374  0060  F0AB  FFE3   	movff	btemp,plusw1
 31006  01237A                     l15640:
 31007                           
 31008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 31009                           ;stkvar	_n @ sp[(-56)+32]
 31010  01237A  0EE8               	movlw	-24
 31011  01237C  006F FF8C  F034    	movff	plusw1,btemp+10
 31012  012382  0EE9               	movlw	-23
 31013  012384  006F FF8C  F035    	movff	plusw1,btemp+11
 31014  01238A  0E54               	movlw	low _dbuf
 31015  01238C  2434               	addwf	(btemp+10)^0,w,c
 31016  01238E  6ED9               	movwf	fsr2l,c
 31017  012390  0E03               	movlw	high _dbuf
 31018  012392  2035               	addwfc	(btemp+11)^0,w,c
 31019  012394  6EDA               	movwf	fsr2h,c
 31020  012396  0E00               	movlw	0
 31021  012398  6EDF               	movwf	indf2,c
 31022                           
 31023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 31024                           ;stkvar	_nmode @ sp[(-56)+55]
 31025  01239A  0EFF               	movlw	-1
 31026  01239C  006F FF8C  F02A    	movff	plusw1,btemp
 31027  0123A2  0E65               	movlw	101
 31028  0123A4  182A               	xorwf	btemp^0,w,c
 31029  0123A6  A4D8               	btfss	status,2,c
 31030  0123A8  EF36  F08B         	goto	l15444
 31031                           
 31032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 31033  0123AC  0E4F               	movlw	79
 31034  0123AE  6E34               	movwf	(btemp+10)^0,c
 31035  0123B0  0E00               	movlw	0
 31036  0123B2  6E35               	movwf	(btemp+11)^0,c
 31037                           
 31038                           ;stkvar	_i @ sp[(-56)+36]
 31039  0123B4  0EEC               	movlw	-20
 31040  0123B6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31041  0123BC  0EED               	movlw	-19
 31042  0123BE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31043                           
 31044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 31045                           ;stkvar	_i @ sp[(-56)+36]
 31046  0123C4  0EEC               	movlw	-20
 31047  0123C6  006F FF8C  F034    	movff	plusw1,btemp+10
 31048  0123CC  0EED               	movlw	-19
 31049  0123CE  006F FF8C  F035    	movff	plusw1,btemp+11
 31050  0123D4  0E54               	movlw	low _dbuf
 31051  0123D6  2434               	addwf	(btemp+10)^0,w,c
 31052  0123D8  6ED9               	movwf	fsr2l,c
 31053  0123DA  0E03               	movlw	high _dbuf
 31054  0123DC  2035               	addwfc	(btemp+11)^0,w,c
 31055  0123DE  6EDA               	movwf	fsr2h,c
 31056  0123E0  0E00               	movlw	0
 31057  0123E2  6EDF               	movwf	indf2,c
 31058                           
 31059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 31060                           ;stkvar	_sign @ sp[(-56)+42]
 31061  0123E4  0EF2               	movlw	-14
 31062  0123E6  6AE3               	clrf	plusw1,c
 31063  0123E8  0EF3               	movlw	-13
 31064  0123EA  6AE3               	clrf	plusw1,c
 31065                           
 31066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 31067                           ;stkvar	_e @ sp[(-56)+34]
 31068  0123EC  0EEB               	movlw	-21
 31069  0123EE  AEE3               	btfss	plusw1,7,c
 31070  0123F0  D012               	goto	l15654
 31071                           
 31072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 31073  0123F2  0E01               	movlw	1
 31074  0123F4  6E34               	movwf	(btemp+10)^0,c
 31075  0123F6  0E00               	movlw	0
 31076  0123F8  6E35               	movwf	(btemp+11)^0,c
 31077                           
 31078                           ;stkvar	_sign @ sp[(-56)+42]
 31079  0123FA  0EF2               	movlw	-14
 31080  0123FC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31081  012402  0EF3               	movlw	-13
 31082  012404  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31083                           
 31084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 31085                           ;stkvar	_e @ sp[(-56)+34]
 31086                           ;stkvar	_e @ sp[(-56)+34]
 31087  01240A  0EEA               	movlw	-22
 31088  01240C  6CE3               	negf	plusw1,c
 31089  01240E  0EEB               	movlw	-21
 31090  012410  1EE3               	comf	plusw1,f,c
 31091  012412  B0D8               	btfsc	status,0,c
 31092  012414  2AE3               	incf	plusw1,f,c
 31093  012416                     l15654:
 31094                           
 31095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 31096  012416  0E02               	movlw	2
 31097  012418  6E34               	movwf	(btemp+10)^0,c
 31098  01241A  0E00               	movlw	0
 31099  01241C  6E35               	movwf	(btemp+11)^0,c
 31100                           
 31101                           ;stkvar	_p @ sp[(-56)+40]
 31102  01241E  0EF0               	movlw	-16
 31103  012420  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31104  012426  0EF1               	movlw	-15
 31105  012428  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31106                           
 31107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 31108  01242E  D051               	goto	l15666
 31109  012430                     l15656:
 31110                           
 31111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 31112                           ;stkvar	_i @ sp[(-56)+36]
 31113  012430  50E1               	movf	fsr1l,w,c
 31114  012432  0FEC               	addlw	-20
 31115  012434  6ED9               	movwf	fsr2l,c
 31116  012436  50E2               	movf	fsr1h,w,c
 31117  012438  6EDA               	movwf	fsr2h,c
 31118  01243A  0EFF               	movlw	255
 31119  01243C  22DA               	addwfc	fsr2h,f,c
 31120  01243E  06DE               	decf	postinc2,f,c
 31121  012440  0E00               	movlw	0
 31122  012442  5ADD               	subwfb	postdec2,f,c
 31123                           
 31124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 31125                           ;stkvar	_i @ sp[(-56)+36]
 31126  012444  0EEC               	movlw	-20
 31127  012446  006F FF8C  F034    	movff	plusw1,btemp+10
 31128  01244C  0EED               	movlw	-19
 31129  01244E  006F FF8C  F035    	movff	plusw1,btemp+11
 31130  012454  0E54               	movlw	low _dbuf
 31131  012456  2434               	addwf	(btemp+10)^0,w,c
 31132  012458  6ED9               	movwf	fsr2l,c
 31133  01245A  0E03               	movlw	high _dbuf
 31134  01245C  2035               	addwfc	(btemp+11)^0,w,c
 31135  01245E  6EDA               	movwf	fsr2h,c
 31136  012460  0E0A               	movlw	10
 31137  012462  6EE6               	movwf	postinc1,c
 31138  012464  0E00               	movlw	0
 31139  012466  6EE6               	movwf	postinc1,c
 31140                           
 31141                           ;stkvar	_e @ sp[(-58)+34]
 31142  012468  0EE8               	movlw	-24
 31143  01246A  006F FF8F FFE6     	movff	plusw1,postinc1
 31144  012470  006F FF8F FFE6     	movff	plusw1,postinc1
 31145  012476  EC77  F0F8         	call	___awmod	;wreg free
 31146  01247A  502A               	movf	btemp^0,w,c
 31147  01247C  0F30               	addlw	48
 31148  01247E  6EDF               	movwf	indf2,c
 31149                           
 31150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 31151  012480  0E0A               	movlw	10
 31152  012482  6EE6               	movwf	postinc1,c
 31153  012484  0E00               	movlw	0
 31154  012486  6EE6               	movwf	postinc1,c
 31155                           
 31156                           ;stkvar	_e @ sp[(-58)+34]
 31157  012488  0EE8               	movlw	-24
 31158  01248A  006F FF8F FFE6     	movff	plusw1,postinc1
 31159  012490  006F FF8F FFE6     	movff	plusw1,postinc1
 31160  012496  EC48  F0F4         	call	___awdiv	;wreg free
 31161                           
 31162                           ;stkvar	_e @ sp[(-56)+34]
 31163  01249A  0EEA               	movlw	-22
 31164  01249C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31165  0124A2  0EEB               	movlw	-21
 31166  0124A4  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31167                           
 31168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 31169                           ;stkvar	_p @ sp[(-56)+40]
 31170  0124AA  50E1               	movf	fsr1l,w,c
 31171  0124AC  0FF0               	addlw	-16
 31172  0124AE  6ED9               	movwf	fsr2l,c
 31173  0124B0  50E2               	movf	fsr1h,w,c
 31174  0124B2  6EDA               	movwf	fsr2h,c
 31175  0124B4  0EFF               	movlw	255
 31176  0124B6  22DA               	addwfc	fsr2h,f,c
 31177  0124B8  06DE               	decf	postinc2,f,c
 31178  0124BA  0E00               	movlw	0
 31179  0124BC  5ADD               	subwfb	postdec2,f,c
 31180                           
 31181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 31182                           ;stkvar	_w @ sp[(-56)+38]
 31183  0124BE  50E1               	movf	fsr1l,w,c
 31184  0124C0  0FEE               	addlw	-18
 31185  0124C2  6ED9               	movwf	fsr2l,c
 31186  0124C4  50E2               	movf	fsr1h,w,c
 31187  0124C6  6EDA               	movwf	fsr2h,c
 31188  0124C8  0EFF               	movlw	255
 31189  0124CA  22DA               	addwfc	fsr2h,f,c
 31190  0124CC  06DE               	decf	postinc2,f,c
 31191  0124CE  0E00               	movlw	0
 31192  0124D0  5ADD               	subwfb	postdec2,f,c
 31193  0124D2                     l15666:
 31194                           
 31195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 31196                           ;stkvar	_e @ sp[(-56)+34]
 31197  0124D2  0EEA               	movlw	-22
 31198  0124D4  006F FF8C  F02A    	movff	plusw1,btemp
 31199  0124DA  0EEB               	movlw	-21
 31200  0124DC  50E3               	movf	plusw1,w,c
 31201  0124DE  102A               	iorwf	btemp^0,w,c
 31202  0124E0  A4D8               	btfss	status,2,c
 31203  0124E2  D7A6               	goto	l15656
 31204                           
 31205                           ;stkvar	_p @ sp[(-56)+40]
 31206  0124E4  0EF1               	movlw	-15
 31207  0124E6  BEE3               	btfsc	plusw1,7,c
 31208  0124E8  D007               	goto	u14920
 31209  0124EA  0EF1               	movlw	-15
 31210  0124EC  50E3               	movf	plusw1,w,c
 31211  0124EE  E1A0               	bnz	l15656
 31212  0124F0  0EF0               	movlw	-16
 31213  0124F2  04E3               	decf	plusw1,w,c
 31214  0124F4  B0D8               	btfsc	status,0,c
 31215  0124F6  D79C               	goto	l15656
 31216  0124F8                     u14920:
 31217                           
 31218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 31219                           ;stkvar	_i @ sp[(-56)+36]
 31220  0124F8  50E1               	movf	fsr1l,w,c
 31221  0124FA  0FEC               	addlw	-20
 31222  0124FC  6ED9               	movwf	fsr2l,c
 31223  0124FE  50E2               	movf	fsr1h,w,c
 31224  012500  6EDA               	movwf	fsr2h,c
 31225  012502  0EFF               	movlw	255
 31226  012504  22DA               	addwfc	fsr2h,f,c
 31227  012506  06DE               	decf	postinc2,f,c
 31228  012508  0E00               	movlw	0
 31229  01250A  5ADD               	subwfb	postdec2,f,c
 31230                           
 31231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 31232                           ;stkvar	_sign @ sp[(-56)+42]
 31233  01250C  0EF2               	movlw	-14
 31234  01250E  006F FF8C  F02A    	movff	plusw1,btemp
 31235  012514  0EF3               	movlw	-13
 31236  012516  50E3               	movf	plusw1,w,c
 31237  012518  102A               	iorwf	btemp^0,w,c
 31238  01251A  A4D8               	btfss	status,2,c
 31239  01251C  D002               	goto	l15676
 31240  01251E  0E2B               	movlw	43
 31241  012520  D001               	goto	L32
 31242  012522                     l15676:
 31243  012522  0E2D               	movlw	45
 31244  012524                     L32:
 31245  012524  6E34               	movwf	(btemp+10)^0,c
 31246  012526  0E00               	movlw	0
 31247  012528  6E35               	movwf	(btemp+11)^0,c
 31248                           
 31249                           ;stkvar	_efgtoa$6841 @ sp[(-56)+4]
 31250  01252A  0ECC               	movlw	-52
 31251  01252C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31252  012532  0ECD               	movlw	-51
 31253  012534  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31254                           
 31255                           ;stkvar	_efgtoa$6841 @ sp[(-56)+4]
 31256                           ;stkvar	_i @ sp[(-56)+36]
 31257  01253A  0EEC               	movlw	-20
 31258  01253C  006F FF8C  F034    	movff	plusw1,btemp+10
 31259  012542  0EED               	movlw	-19
 31260  012544  006F FF8C  F035    	movff	plusw1,btemp+11
 31261  01254A  0E54               	movlw	low _dbuf
 31262  01254C  2434               	addwf	(btemp+10)^0,w,c
 31263  01254E  6ED9               	movwf	fsr2l,c
 31264  012550  0E03               	movlw	high _dbuf
 31265  012552  2035               	addwfc	(btemp+11)^0,w,c
 31266  012554  6EDA               	movwf	fsr2h,c
 31267  012556  0ECC               	movlw	-52
 31268  012558  006F FF8F FFDF     	movff	plusw1,indf2
 31269                           
 31270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 31271                           ;stkvar	_w @ sp[(-56)+38]
 31272  01255E  50E1               	movf	fsr1l,w,c
 31273  012560  0FEE               	addlw	-18
 31274  012562  6ED9               	movwf	fsr2l,c
 31275  012564  50E2               	movf	fsr1h,w,c
 31276  012566  6EDA               	movwf	fsr2h,c
 31277  012568  0EFF               	movlw	255
 31278  01256A  22DA               	addwfc	fsr2h,f,c
 31279  01256C  06DE               	decf	postinc2,f,c
 31280  01256E  0E00               	movlw	0
 31281  012570  5ADD               	subwfb	postdec2,f,c
 31282                           
 31283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 31284                           ;stkvar	_i @ sp[(-56)+36]
 31285  012572  50E1               	movf	fsr1l,w,c
 31286  012574  0FEC               	addlw	-20
 31287  012576  6ED9               	movwf	fsr2l,c
 31288  012578  50E2               	movf	fsr1h,w,c
 31289  01257A  6EDA               	movwf	fsr2h,c
 31290  01257C  0EFF               	movlw	255
 31291  01257E  22DA               	addwfc	fsr2h,f,c
 31292  012580  06DE               	decf	postinc2,f,c
 31293  012582  0E00               	movlw	0
 31294  012584  5ADD               	subwfb	postdec2,f,c
 31295  012586  0EBF               	movlw	191
 31296  012588  6E34               	movwf	(btemp+10)^0,c
 31297  01258A  0EFF               	movlw	255
 31298  01258C  6E35               	movwf	(btemp+11)^0,c
 31299                           
 31300                           ;stkvar	_c @ sp[(-56)+-7]
 31301  01258E  0EC1               	movlw	-63
 31302  012590  50E3               	movf	plusw1,w,c
 31303  012592  6E32               	movwf	(btemp+8)^0,c
 31304  012594  6A33               	clrf	(btemp+9)^0,c
 31305  012596  5034               	movf	(btemp+10)^0,w,c
 31306  012598  2632               	addwf	(btemp+8)^0,f,c
 31307  01259A  5035               	movf	(btemp+11)^0,w,c
 31308  01259C  2233               	addwfc	(btemp+9)^0,f,c
 31309  01259E  5033               	movf	(btemp+9)^0,w,c
 31310  0125A0  E106               	bnz	u14940
 31311  0125A2  0E1A               	movlw	26
 31312  0125A4  5C32               	subwf	(btemp+8)^0,w,c
 31313  0125A6  B0D8               	btfsc	status,0,c
 31314  0125A8  D002               	goto	u14940
 31315  0125AA  0E01               	movlw	1
 31316  0125AC  D001               	goto	u14950
 31317  0125AE                     u14940:
 31318  0125AE  0E00               	movlw	0
 31319  0125B0                     u14950:
 31320  0125B0  6E34               	movwf	(btemp+10)^0,c
 31321  0125B2  6A35               	clrf	(btemp+11)^0,c
 31322                           
 31323                           ;stkvar	_efgtoa$6843 @ sp[(-56)+0]
 31324  0125B4  0EC8               	movlw	-56
 31325  0125B6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31326  0125BC  0EC9               	movlw	-55
 31327  0125BE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31328                           
 31329                           ;stkvar	_efgtoa$6843 @ sp[(-56)+0]
 31330  0125C4  0EC8               	movlw	-56
 31331  0125C6  006F FF8C  F02A    	movff	plusw1,btemp
 31332  0125CC  0EC9               	movlw	-55
 31333  0125CE  50E3               	movf	plusw1,w,c
 31334  0125D0  102A               	iorwf	btemp^0,w,c
 31335  0125D2  A4D8               	btfss	status,2,c
 31336  0125D4  D002               	goto	l15692
 31337  0125D6  0E65               	movlw	101
 31338  0125D8  D001               	goto	L33
 31339  0125DA                     l15692:
 31340  0125DA  0E45               	movlw	69
 31341  0125DC                     L33:
 31342  0125DC  6E34               	movwf	(btemp+10)^0,c
 31343  0125DE  0E00               	movlw	0
 31344  0125E0  6E35               	movwf	(btemp+11)^0,c
 31345                           
 31346                           ;stkvar	_efgtoa$6842 @ sp[(-56)+2]
 31347  0125E2  0ECA               	movlw	-54
 31348  0125E4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31349  0125EA  0ECB               	movlw	-53
 31350  0125EC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31351                           
 31352                           ;stkvar	_efgtoa$6842 @ sp[(-56)+2]
 31353                           ;stkvar	_i @ sp[(-56)+36]
 31354  0125F2  0EEC               	movlw	-20
 31355  0125F4  006F FF8C  F034    	movff	plusw1,btemp+10
 31356  0125FA  0EED               	movlw	-19
 31357  0125FC  006F FF8C  F035    	movff	plusw1,btemp+11
 31358  012602  0E54               	movlw	low _dbuf
 31359  012604  2434               	addwf	(btemp+10)^0,w,c
 31360  012606  6ED9               	movwf	fsr2l,c
 31361  012608  0E03               	movlw	high _dbuf
 31362  01260A  2035               	addwfc	(btemp+11)^0,w,c
 31363  01260C  6EDA               	movwf	fsr2h,c
 31364  01260E  0ECA               	movlw	-54
 31365  012610  006F FF8F FFDF     	movff	plusw1,indf2
 31366                           
 31367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 31368                           ;stkvar	_w @ sp[(-56)+38]
 31369  012616  50E1               	movf	fsr1l,w,c
 31370  012618  0FEE               	addlw	-18
 31371  01261A  6ED9               	movwf	fsr2l,c
 31372  01261C  50E2               	movf	fsr1h,w,c
 31373  01261E  6EDA               	movwf	fsr2h,c
 31374  012620  0EFF               	movlw	255
 31375  012622  22DA               	addwfc	fsr2h,f,c
 31376  012624  06DE               	decf	postinc2,f,c
 31377  012626  0E00               	movlw	0
 31378  012628  5ADD               	subwfb	postdec2,f,c
 31379                           
 31380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 31381                           ;stkvar	_i @ sp[(-56)+36]
 31382  01262A  0EEC               	movlw	-20
 31383  01262C  006F FF8C  F034    	movff	plusw1,btemp+10
 31384  012632  0EED               	movlw	-19
 31385  012634  006F FF8C  F035    	movff	plusw1,btemp+11
 31386  01263A  0E54               	movlw	low _dbuf
 31387  01263C  2434               	addwf	(btemp+10)^0,w,c
 31388  01263E  6E32               	movwf	(btemp+8)^0,c
 31389  012640  0E03               	movlw	high _dbuf
 31390  012642  2035               	addwfc	(btemp+11)^0,w,c
 31391  012644  6E33               	movwf	(btemp+9)^0,c
 31392  012646  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 31393  01264C  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 31394                           
 31395                           ;stkvar	_n @ sp[(-58)+32]
 31396  012652  0E54               	movlw	low _dbuf
 31397  012654  6E34               	movwf	(btemp+10)^0,c
 31398  012656  0E03               	movlw	high _dbuf
 31399  012658  6E35               	movwf	(btemp+11)^0,c
 31400  01265A  0EE6               	movlw	-26
 31401  01265C  50E3               	movf	plusw1,w,c
 31402  01265E  2634               	addwf	(btemp+10)^0,f,c
 31403  012660  0EE7               	movlw	-25
 31404  012662  50E3               	movf	plusw1,w,c
 31405  012664  2235               	addwfc	(btemp+11)^0,f,c
 31406  012666  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31407  01266C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31408  012672  EC4B  F0FD         	call	_strcpy	;wreg free
 31409  012676  EF36  F08B         	goto	l15444
 31410  01267A                     l2507:
 31411                           
 31412                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 31413  01267A  0EC1               	movlw	193
 31414  01267C  26E1               	addwf	fsr1l,f,c
 31415  01267E  0EFF               	movlw	255
 31416  012680  22E2               	addwfc	fsr1h,f,c
 31417  012682  0012               	return		;funcret
 31418  012684                     __end_of_efgtoa:
 31419                           	opt callstack 0
 31420                           
 31421 ;; *************** function _tolower *****************
 31422 ;; Defined at:
 31423 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 31424 ;; Parameters:    Size  Location     Type
 31425 ;;  c               2  [STACK] int 
 31426 ;; Auto vars:     Size  Location     Type
 31427 ;;		None
 31428 ;; Return value:  Size  Location     Type
 31429 ;;                  2  [STACK] int 
 31430 ;; Registers used:
 31431 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 31432 ;; Tracked objects:
 31433 ;;		On entry : 0/0
 31434 ;;		On exit  : 0/0
 31435 ;;		Unchanged: 0/0
 31436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31441 ;;Total ram usage:        0 bytes
 31442 ;; Hardware stack levels used:    1
 31443 ;; Hardware stack levels required when called:   16
 31444 ;; This function calls:
 31445 ;;		_isupper
 31446 ;; This function is called by:
 31447 ;;		_efgtoa
 31448 ;;		_vfpfcnvrt
 31449 ;; This function uses a reentrant model
 31450 ;;
 31451                           
 31452                           	psect	text102
 31453  0009E6                     __ptext102:
 31454                           	opt callstack 0
 31455  0009E6                     _tolower:
 31456                           	opt callstack 0
 31457                           
 31458                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31459  0009E6  52E6               	movf	postinc1,f,c
 31460  0009E8  52E6               	movf	postinc1,f,c
 31461                           
 31462                           ;stkvar	_c @ sp[(-2)+-2]
 31463                           
 31464                           ;incstack = 0
 31465 ;; hardware stack exceeded
 31466  0009EA  0EFC               	movlw	-4
 31467  0009EC  50E3               	movf	plusw1,w,c
 31468  0009EE  0FBF               	addlw	191
 31469  0009F0  6E34               	movwf	(btemp+10)^0,c
 31470  0009F2  0EFD               	movlw	-3
 31471  0009F4  006F FF8C  F035    	movff	plusw1,btemp+11
 31472  0009FA  0EFF               	movlw	255
 31473  0009FC  2235               	addwfc	(btemp+11)^0,f,c
 31474  0009FE  5035               	movf	(btemp+11)^0,w,c
 31475  000A00  E106               	bnz	u7790
 31476  000A02  0E1A               	movlw	26
 31477  000A04  5C34               	subwf	(btemp+10)^0,w,c
 31478  000A06  B0D8               	btfsc	status,0,c
 31479  000A08  D002               	goto	u7790
 31480  000A0A  0E01               	movlw	1
 31481  000A0C  D001               	goto	u7800
 31482  000A0E                     u7790:
 31483  000A0E  0E00               	movlw	0
 31484  000A10                     u7800:
 31485  000A10  6E34               	movwf	(btemp+10)^0,c
 31486  000A12  6A35               	clrf	(btemp+11)^0,c
 31487                           
 31488                           ;stkvar	_tolower$7797 @ sp[(-2)+0]
 31489  000A14  0EFE               	movlw	-2
 31490  000A16  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31491  000A1C  0EFF               	movlw	-1
 31492  000A1E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31493                           
 31494                           ;stkvar	_tolower$7797 @ sp[(-2)+0]
 31495  000A24  0EFE               	movlw	-2
 31496  000A26  006F FF8C  F02A    	movff	plusw1,btemp
 31497  000A2C  0EFF               	movlw	-1
 31498  000A2E  50E3               	movf	plusw1,w,c
 31499  000A30  102A               	iorwf	btemp^0,w,c
 31500  000A32  B4D8               	btfsc	status,2,c
 31501  000A34  D00D               	goto	l10062
 31502                           
 31503                           ;stkvar	_c @ sp[(-2)+-2]
 31504  000A36  0EFC               	movlw	-4
 31505  000A38  006F FF8C  F02A    	movff	plusw1,btemp
 31506  000A3E  0EFD               	movlw	-3
 31507  000A40  006F FF8C  F02B    	movff	plusw1,btemp+1
 31508  000A46  0E20               	movlw	32
 31509  000A48  122A               	iorwf	btemp^0,f,c
 31510  000A4A  0E00               	movlw	0
 31511  000A4C  122B               	iorwf	(btemp+1)^0,f,c
 31512  000A4E  D008               	goto	l3809
 31513  000A50                     l10062:
 31514                           
 31515                           ;stkvar	_c @ sp[(-2)+-2]
 31516  000A50  0EFC               	movlw	-4
 31517  000A52  006F FF8C  F02A    	movff	plusw1,btemp
 31518  000A58  0EFD               	movlw	-3
 31519  000A5A  006F FF8C  F02B    	movff	plusw1,btemp+1
 31520  000A60                     l3809:
 31521                           
 31522                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 31523  000A60  52E5               	movf	postdec1,f,c
 31524  000A62  52E5               	movf	postdec1,f,c
 31525  000A64  52E5               	movf	postdec1,f,c
 31526  000A66  52E5               	movf	postdec1,f,c
 31527  000A68  0012               	return		;funcret
 31528  000A6A                     __end_of_tolower:
 31529                           	opt callstack 0
 31530                           
 31531 ;; *************** function _isupper *****************
 31532 ;; Defined at:
 31533 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 31534 ;; Parameters:    Size  Location     Type
 31535 ;;  c               2  [STACK] int 
 31536 ;; Auto vars:     Size  Location     Type
 31537 ;;		None
 31538 ;; Return value:  Size  Location     Type
 31539 ;;                  2  [STACK] int 
 31540 ;; Registers used:
 31541 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 31542 ;; Tracked objects:
 31543 ;;		On entry : 0/0
 31544 ;;		On exit  : 0/0
 31545 ;;		Unchanged: 0/0
 31546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31551 ;;Total ram usage:        0 bytes
 31552 ;; Hardware stack levels used:    1
 31553 ;; Hardware stack levels required when called:   15
 31554 ;; This function calls:
 31555 ;;		Nothing
 31556 ;; This function is called by:
 31557 ;;		_efgtoa
 31558 ;;		_xtoa
 31559 ;;		_vfpfcnvrt
 31560 ;;		_tolower
 31561 ;; This function uses a reentrant model
 31562 ;;
 31563                           
 31564                           	psect	text103
 31565  001B18                     __ptext103:
 31566                           	opt callstack 0
 31567  001B18                     _isupper:
 31568                           	opt callstack 0
 31569                           
 31570                           ;stkvar	_c @ sp[(0)+-2]
 31571                           
 31572                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31573                           ;incstack = 0
 31574 ;; hardware stack exceeded
 31575  001B18  0EFE               	movlw	-2
 31576  001B1A  50E3               	movf	plusw1,w,c
 31577  001B1C  0FBF               	addlw	191
 31578  001B1E  6E34               	movwf	(btemp+10)^0,c
 31579  001B20  0EFF               	movlw	-1
 31580  001B22  006F FF8C  F035    	movff	plusw1,btemp+11
 31581  001B28  0EFF               	movlw	255
 31582  001B2A  2235               	addwfc	(btemp+11)^0,f,c
 31583  001B2C  5035               	movf	(btemp+11)^0,w,c
 31584  001B2E  E106               	bnz	u7130
 31585  001B30  0E1A               	movlw	26
 31586  001B32  5C34               	subwf	(btemp+10)^0,w,c
 31587  001B34  B0D8               	btfsc	status,0,c
 31588  001B36  D002               	goto	u7130
 31589  001B38  0E01               	movlw	1
 31590  001B3A  D001               	goto	u7140
 31591  001B3C                     u7130:
 31592  001B3C  0E00               	movlw	0
 31593  001B3E                     u7140:
 31594  001B3E  6E2A               	movwf	btemp^0,c
 31595  001B40  6A2B               	clrf	(btemp+1)^0,c
 31596                           
 31597                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 31598  001B42  52E5               	movf	postdec1,f,c
 31599  001B44  52E5               	movf	postdec1,f,c
 31600  001B46  0012               	return		;funcret
 31601  001B48                     __end_of_isupper:
 31602                           	opt callstack 0
 31603                           
 31604 ;; *************** function _strcpy *****************
 31605 ;; Defined at:
 31606 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 31607 ;; Parameters:    Size  Location     Type
 31608 ;;  dest            2  [STACK] PTR unsigned char 
 31609 ;;		 -> dbuf(80), 
 31610 ;;  src             2  [STACK] PTR const unsigned char 
 31611 ;;		 -> STR_96(4), STR_95(4), STR_92(4), STR_91(4), 
 31612 ;;		 -> dbuf(80), 
 31613 ;; Auto vars:     Size  Location     Type
 31614 ;;  d               2  [STACK] PTR unsigned char 
 31615 ;;		 -> dbuf(80), 
 31616 ;;  s               2  [STACK] PTR const unsigned char 
 31617 ;;		 -> STR_96(4), STR_95(4), STR_92(4), STR_91(4), 
 31618 ;;		 -> dbuf(80), 
 31619 ;; Return value:  Size  Location     Type
 31620 ;;                  2  [STACK] PTR unsigned char 
 31621 ;; Registers used:
 31622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 31623 ;; Tracked objects:
 31624 ;;		On entry : 0/0
 31625 ;;		On exit  : 0/0
 31626 ;;		Unchanged: 0/0
 31627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31632 ;;Total ram usage:        0 bytes
 31633 ;; Hardware stack levels used:    1
 31634 ;; Hardware stack levels required when called:   15
 31635 ;; This function calls:
 31636 ;;		Nothing
 31637 ;; This function is called by:
 31638 ;;		_efgtoa
 31639 ;; This function uses a reentrant model
 31640 ;;
 31641                           
 31642                           	psect	text104
 31643  01FA96                     __ptext104:
 31644                           	opt callstack 0
 31645  01FA96                     _strcpy:
 31646                           	opt callstack 0
 31647                           
 31648                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31649  01FA96  52E6               	movf	postinc1,f,c
 31650  01FA98  52E6               	movf	postinc1,f,c
 31651  01FA9A  52E6               	movf	postinc1,f,c
 31652  01FA9C  52E6               	movf	postinc1,f,c
 31653                           
 31654                           ;stkvar	_src @ sp[(-4)+-4]
 31655                           
 31656                           ;incstack = 0
 31657 ;; hardware stack exceeded
 31658  01FA9E  0EF8               	movlw	-8
 31659  01FAA0  006F FF8C  F034    	movff	plusw1,btemp+10
 31660  01FAA6  0EF9               	movlw	-7
 31661  01FAA8  006F FF8C  F035    	movff	plusw1,btemp+11
 31662                           
 31663                           ;stkvar	_s @ sp[(-4)+2]
 31664  01FAAE  0EFF               	movlw	-1
 31665  01FAB0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31666  01FAB6  0EFE               	movlw	-2
 31667  01FAB8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31668                           
 31669                           ;stkvar	_dest @ sp[(-4)+-2]
 31670  01FABE  0EFA               	movlw	-6
 31671  01FAC0  006F FF8C  F034    	movff	plusw1,btemp+10
 31672  01FAC6  0EFB               	movlw	-5
 31673  01FAC8  006F FF8C  F035    	movff	plusw1,btemp+11
 31674                           
 31675                           ;stkvar	_d @ sp[(-4)+0]
 31676  01FACE  0EFD               	movlw	-3
 31677  01FAD0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31678  01FAD6  0EFC               	movlw	-4
 31679  01FAD8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31680  01FADE                     l15306:
 31681                           
 31682                           ;stkvar	_s @ sp[(-4)+2]
 31683  01FADE  50E1               	movf	fsr1l,w,c
 31684  01FAE0  0FFE               	addlw	-2
 31685  01FAE2  6ED9               	movwf	fsr2l,c
 31686  01FAE4  50E2               	movf	fsr1h,w,c
 31687  01FAE6  6EDA               	movwf	fsr2h,c
 31688  01FAE8  0EFF               	movlw	255
 31689  01FAEA  22DA               	addwfc	fsr2h,f,c
 31690  01FAEC  006F FF7C  F034    	movff	indf2,btemp+10
 31691  01FAF2  0E01               	movlw	1
 31692  01FAF4  26DE               	addwf	postinc2,f,c
 31693  01FAF6  006F FF7C  F035    	movff	indf2,btemp+11
 31694  01FAFC  0E00               	movlw	0
 31695  01FAFE  22DD               	addwfc	postdec2,f,c
 31696  01FB00  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 31697  01FB06  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 31698  01FB0C  0E00               	movlw	low (__mediumconst shr (0+16))
 31699  01FB0E  6EF8               	movwf	tblptru,c
 31700                           
 31701                           ;stkvar	_d @ sp[(-4)+0]
 31702  01FB10  50E1               	movf	fsr1l,w,c
 31703  01FB12  0FFC               	addlw	-4
 31704  01FB14  6ED9               	movwf	fsr2l,c
 31705  01FB16  50E2               	movf	fsr1h,w,c
 31706  01FB18  6EDA               	movwf	fsr2h,c
 31707  01FB1A  0EFF               	movlw	255
 31708  01FB1C  22DA               	addwfc	fsr2h,f,c
 31709  01FB1E  006F FF7C  F034    	movff	indf2,btemp+10
 31710  01FB24  0E01               	movlw	1
 31711  01FB26  26DE               	addwf	postinc2,f,c
 31712  01FB28  006F FF7C  F035    	movff	indf2,btemp+11
 31713  01FB2E  0E00               	movlw	0
 31714  01FB30  22DD               	addwfc	postdec2,f,c
 31715  01FB32  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 31716  01FB38  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 31717  01FB3E  0E1F               	movlw	(high __ramtop+-1)
 31718  01FB40  64F7               	cpfsgt	tblptrh,c
 31719  01FB42  D003               	bra	u14247
 31720  01FB44  0008               	tblrd		*
 31721  01FB46  50F5               	movf	tablat,w,c
 31722  01FB48  D007               	bra	u14240
 31723  01FB4A                     u14247:
 31724  01FB4A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 31725  01FB50  006F FFDF FFEA     	movff	tblptrh,fsr0h
 31726  01FB56  50EF               	movf	indf0,w,c
 31727  01FB58                     u14240:
 31728  01FB58  6EDF               	movwf	indf2,c
 31729  01FB5A  50DF               	movf	indf2,w,c
 31730  01FB5C  A4D8               	btfss	status,2,c
 31731  01FB5E  D7BF               	goto	l15306
 31732                           
 31733                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 31734  01FB60  0EF8               	movlw	248
 31735  01FB62  26E1               	addwf	fsr1l,f,c
 31736  01FB64  0EFF               	movlw	255
 31737  01FB66  22E2               	addwfc	fsr1h,f,c
 31738  01FB68  0012               	return		;funcret
 31739  01FB6A                     __end_of_strcpy:
 31740                           	opt callstack 0
 31741                           
 31742 ;; *************** function _floorf *****************
 31743 ;; Defined at:
 31744 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 31745 ;; Parameters:    Size  Location     Type
 31746 ;;  x               4  [STACK] float 
 31747 ;; Auto vars:     Size  Location     Type
 31748 ;;  u               4  [STACK] struct .
 31749 ;;  m               4  [STACK] unsigned long 
 31750 ;;  e               2  [STACK] int 
 31751 ;; Return value:  Size  Location     Type
 31752 ;;                  4  [STACK] float 
 31753 ;; Registers used:
 31754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 31755 ;; Tracked objects:
 31756 ;;		On entry : 0/0
 31757 ;;		On exit  : 0/0
 31758 ;;		Unchanged: 0/0
 31759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31764 ;;Total ram usage:        0 bytes
 31765 ;; Hardware stack levels used:    1
 31766 ;; Hardware stack levels required when called:   15
 31767 ;; This function calls:
 31768 ;;		Nothing
 31769 ;; This function is called by:
 31770 ;;		_efgtoa
 31771 ;; This function uses a reentrant model
 31772 ;;
 31773                           
 31774                           	psect	text105
 31775  019DEE                     __ptext105:
 31776                           	opt callstack 0
 31777  019DEE                     _floorf:
 31778                           	opt callstack 0
 31779                           
 31780                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 31781  019DEE  0E0A               	movlw	10
 31782  019DF0  26E1               	addwf	fsr1l,f,c
 31783  019DF2  0E00               	movlw	0
 31784  019DF4  22E2               	addwfc	fsr1h,f,c
 31785                           
 31786                           ;incstack = 0
 31787 ;; hardware stack exceeded
 31788  019DF6  0060  F1E8  F032   	movff	floorf@F524,btemp+8
 31789  019DFC  0060  F1EC  F033   	movff	floorf@F524+1,btemp+9
 31790  019E02  0060  F1F0  F034   	movff	floorf@F524+2,btemp+10
 31791  019E08  0060  F1F4  F035   	movff	floorf@F524+3,btemp+11
 31792                           
 31793                           ;stkvar	_u @ sp[(-10)+0]
 31794  019E0E  0EF6               	movlw	-10
 31795  019E10  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31796  019E16  0EF7               	movlw	-9
 31797  019E18  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31798  019E1E  0EF8               	movlw	-8
 31799  019E20  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31800  019E26  0EF9               	movlw	-7
 31801  019E28  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31802                           
 31803                           ;stkvar	_x @ sp[(-10)+-4]
 31804  019E2E  0EF2               	movlw	-14
 31805  019E30  006F FF8C  F032    	movff	plusw1,btemp+8
 31806  019E36  0EF3               	movlw	-13
 31807  019E38  006F FF8C  F033    	movff	plusw1,btemp+9
 31808  019E3E  0EF4               	movlw	-12
 31809  019E40  006F FF8C  F034    	movff	plusw1,btemp+10
 31810  019E46  0EF5               	movlw	-11
 31811  019E48  006F FF8C  F035    	movff	plusw1,btemp+11
 31812                           
 31813                           ;stkvar	_u @ sp[(-10)+0]
 31814  019E4E  0EF6               	movlw	-10
 31815  019E50  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31816  019E56  0EF7               	movlw	-9
 31817  019E58  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31818  019E5E  0EF8               	movlw	-8
 31819  019E60  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31820  019E66  0EF9               	movlw	-7
 31821  019E68  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31822  019E6E  0E81               	movlw	129
 31823  019E70  6E34               	movwf	(btemp+10)^0,c
 31824  019E72  0EFF               	movlw	255
 31825  019E74  6E35               	movwf	(btemp+11)^0,c
 31826                           
 31827                           ;stkvar	_u @ sp[(-10)+0]
 31828  019E76  0EF6               	movlw	-10
 31829  019E78  006F FF8C  F02E    	movff	plusw1,btemp+4
 31830  019E7E  0EF7               	movlw	-9
 31831  019E80  006F FF8C  F02F    	movff	plusw1,btemp+5
 31832  019E86  0EF8               	movlw	-8
 31833  019E88  006F FF8C  F030    	movff	plusw1,btemp+6
 31834  019E8E  0EF9               	movlw	-7
 31835  019E90  006F FF8C  F031    	movff	plusw1,btemp+7
 31836  019E96  0E18               	movlw	24
 31837  019E98  D005               	goto	u7820
 31838  019E9A                     u7825:
 31839  019E9A  90D8               	bcf	status,0,c
 31840  019E9C  3231               	rrcf	(btemp+7)^0,f,c
 31841  019E9E  3230               	rrcf	(btemp+6)^0,f,c
 31842  019EA0  322F               	rrcf	(btemp+5)^0,f,c
 31843  019EA2  322E               	rrcf	(btemp+4)^0,f,c
 31844  019EA4                     u7820:
 31845  019EA4  2EE8               	decfsz	wreg,f,c
 31846  019EA6  D7F9               	goto	u7825
 31847  019EA8  0060  F0B8  F032   	movff	btemp+4,btemp+8
 31848  019EAE  0060  F0BC  F033   	movff	btemp+5,btemp+9
 31849  019EB4  0EFF               	movlw	255
 31850  019EB6  1632               	andwf	(btemp+8)^0,f,c
 31851  019EB8  0E00               	movlw	0
 31852  019EBA  1633               	andwf	(btemp+9)^0,f,c
 31853  019EBC  5034               	movf	(btemp+10)^0,w,c
 31854  019EBE  2632               	addwf	(btemp+8)^0,f,c
 31855  019EC0  5035               	movf	(btemp+11)^0,w,c
 31856  019EC2  2233               	addwfc	(btemp+9)^0,f,c
 31857                           
 31858                           ;stkvar	_e @ sp[(-10)+8]
 31859  019EC4  0EFE               	movlw	-2
 31860  019EC6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31861  019ECC  0EFF               	movlw	-1
 31862  019ECE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31863                           
 31864                           ;stkvar	_e @ sp[(-10)+8]
 31865  019ED4  0EFF               	movlw	-1
 31866  019ED6  BEE3               	btfsc	plusw1,7,c
 31867  019ED8  D019               	goto	l10076
 31868  019EDA  0EFF               	movlw	-1
 31869  019EDC  50E3               	movf	plusw1,w,c
 31870  019EDE  E108               	bnz	u7830
 31871  019EE0  0EFE               	movlw	-2
 31872  019EE2  006F FF8C  F02A    	movff	plusw1,btemp
 31873  019EE8  0E17               	movlw	23
 31874  019EEA  5E2A               	subwf	btemp^0,f,c
 31875  019EEC  A0D8               	btfss	status,0,c
 31876  019EEE  D00E               	goto	l10076
 31877  019EF0                     u7830:
 31878                           
 31879                           ;stkvar	_x @ sp[(-10)+-4]
 31880  019EF0  0EF2               	movlw	-14
 31881  019EF2  006F FF8C  F02A    	movff	plusw1,btemp
 31882  019EF8  0EF3               	movlw	-13
 31883  019EFA  006F FF8C  F02B    	movff	plusw1,btemp+1
 31884  019F00  0EF4               	movlw	-12
 31885  019F02  006F FF8C  F02C    	movff	plusw1,btemp+2
 31886  019F08  0EF5               	movlw	-11
 31887  019F0A  D11F               	goto	L34
 31888  019F0C                     l10076:
 31889                           
 31890                           ;stkvar	_e @ sp[(-10)+8]
 31891  019F0C  0EFF               	movlw	-1
 31892  019F0E  BEE3               	btfsc	plusw1,7,c
 31893  019F10  D0B4               	goto	l10092
 31894                           
 31895                           ;stkvar	_e @ sp[(-10)+8]
 31896  019F12  0EFE               	movlw	-2
 31897  019F14  006F FF8C  F035    	movff	plusw1,btemp+11
 31898  019F1A  0EFF               	movlw	255
 31899  019F1C  6E2E               	movwf	(btemp+4)^0,c
 31900  019F1E  0EFF               	movlw	255
 31901  019F20  6E2F               	movwf	(btemp+5)^0,c
 31902  019F22  0E7F               	movlw	127
 31903  019F24  6E30               	movwf	(btemp+6)^0,c
 31904  019F26  0E00               	movlw	0
 31905  019F28  6E31               	movwf	(btemp+7)^0,c
 31906  019F2A                     u7855:
 31907  019F2A  6635               	tstfsz	(btemp+11)^0,c
 31908  019F2C  D001               	goto	u7856
 31909  019F2E  D007               	goto	u7857
 31910  019F30                     u7856:
 31911  019F30  3431               	rlcf	(btemp+7)^0,w,c
 31912  019F32  3231               	rrcf	(btemp+7)^0,f,c
 31913  019F34  3230               	rrcf	(btemp+6)^0,f,c
 31914  019F36  322F               	rrcf	(btemp+5)^0,f,c
 31915  019F38  322E               	rrcf	(btemp+4)^0,f,c
 31916  019F3A  2E35               	decfsz	(btemp+11)^0,f,c
 31917  019F3C  D7F6               	goto	u7855
 31918  019F3E                     u7857:
 31919                           
 31920                           ;stkvar	_m @ sp[(-10)+4]
 31921  019F3E  0EFA               	movlw	-6
 31922  019F40  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 31923  019F46  0EFB               	movlw	-5
 31924  019F48  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 31925  019F4E  0EFC               	movlw	-4
 31926  019F50  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 31927  019F56  0EFD               	movlw	-3
 31928  019F58  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 31929                           
 31930                           ;stkvar	_m @ sp[(-10)+4]
 31931                           ;stkvar	_u @ sp[(-10)+0]
 31932  019F5E  0EF6               	movlw	-10
 31933  019F60  006F FF8C  F032    	movff	plusw1,btemp+8
 31934  019F66  0EF7               	movlw	-9
 31935  019F68  006F FF8C  F033    	movff	plusw1,btemp+9
 31936  019F6E  0EF8               	movlw	-8
 31937  019F70  006F FF8C  F034    	movff	plusw1,btemp+10
 31938  019F76  0EF9               	movlw	-7
 31939  019F78  006F FF8C  F035    	movff	plusw1,btemp+11
 31940  019F7E  0EFA               	movlw	-6
 31941  019F80  50E3               	movf	plusw1,w,c
 31942  019F82  1632               	andwf	(btemp+8)^0,f,c
 31943  019F84  0EFB               	movlw	-5
 31944  019F86  50E3               	movf	plusw1,w,c
 31945  019F88  1633               	andwf	(btemp+9)^0,f,c
 31946  019F8A  0EFC               	movlw	-4
 31947  019F8C  50E3               	movf	plusw1,w,c
 31948  019F8E  1634               	andwf	(btemp+10)^0,f,c
 31949  019F90  0EFD               	movlw	-3
 31950  019F92  50E3               	movf	plusw1,w,c
 31951  019F94  1635               	andwf	(btemp+11)^0,f,c
 31952  019F96  5032               	movf	(btemp+8)^0,w,c
 31953  019F98  1033               	iorwf	(btemp+9)^0,w,c
 31954  019F9A  1034               	iorwf	(btemp+10)^0,w,c
 31955  019F9C  1035               	iorwf	(btemp+11)^0,w,c
 31956  019F9E  B4D8               	btfsc	status,2,c
 31957  019FA0  D7A7               	goto	u7830
 31958                           
 31959                           ;stkvar	_u @ sp[(-10)+0]
 31960  019FA2  0EF6               	movlw	-10
 31961  019FA4  006F FF8C  F032    	movff	plusw1,btemp+8
 31962  019FAA  0EF7               	movlw	-9
 31963  019FAC  006F FF8C  F033    	movff	plusw1,btemp+9
 31964  019FB2  0EF8               	movlw	-8
 31965  019FB4  006F FF8C  F034    	movff	plusw1,btemp+10
 31966  019FBA  0EF9               	movlw	-7
 31967  019FBC  006F FF8C  F035    	movff	plusw1,btemp+11
 31968  019FC2  0E20               	movlw	32
 31969  019FC4  D005               	goto	u7870
 31970  019FC6                     u7875:
 31971  019FC6  90D8               	bcf	status,0,c
 31972  019FC8  3235               	rrcf	(btemp+11)^0,f,c
 31973  019FCA  3234               	rrcf	(btemp+10)^0,f,c
 31974  019FCC  3233               	rrcf	(btemp+9)^0,f,c
 31975  019FCE  3232               	rrcf	(btemp+8)^0,f,c
 31976  019FD0                     u7870:
 31977  019FD0  2EE8               	decfsz	wreg,f,c
 31978  019FD2  D7F9               	goto	u7875
 31979  019FD4  5032               	movf	(btemp+8)^0,w,c
 31980  019FD6  B4D8               	btfsc	status,2,c
 31981  019FD8  D028               	goto	l10090
 31982                           
 31983                           ;stkvar	_m @ sp[(-10)+4]
 31984                           ;stkvar	_u @ sp[(-10)+0]
 31985  019FDA  0EF6               	movlw	-10
 31986  019FDC  50E3               	movf	plusw1,w,c
 31987  019FDE  6E2A               	movwf	btemp^0,c
 31988  019FE0  0EFA               	movlw	-6
 31989  019FE2  50E3               	movf	plusw1,w,c
 31990  019FE4  262A               	addwf	btemp^0,f,c
 31991  019FE6  0EF6               	movlw	-10
 31992  019FE8  0060  F0AB  FFE3   	movff	btemp,plusw1
 31993  019FEE  0EF7               	movlw	-9
 31994  019FF0  50E3               	movf	plusw1,w,c
 31995  019FF2  6E2A               	movwf	btemp^0,c
 31996  019FF4  0EFB               	movlw	-5
 31997  019FF6  50E3               	movf	plusw1,w,c
 31998  019FF8  222A               	addwfc	btemp^0,f,c
 31999  019FFA  0EF7               	movlw	-9
 32000  019FFC  0060  F0AB  FFE3   	movff	btemp,plusw1
 32001  01A002  0EF8               	movlw	-8
 32002  01A004  50E3               	movf	plusw1,w,c
 32003  01A006  6E2A               	movwf	btemp^0,c
 32004  01A008  0EFC               	movlw	-4
 32005  01A00A  50E3               	movf	plusw1,w,c
 32006  01A00C  222A               	addwfc	btemp^0,f,c
 32007  01A00E  0EF8               	movlw	-8
 32008  01A010  0060  F0AB  FFE3   	movff	btemp,plusw1
 32009  01A016  0EF9               	movlw	-7
 32010  01A018  50E3               	movf	plusw1,w,c
 32011  01A01A  6E2A               	movwf	btemp^0,c
 32012  01A01C  0EFD               	movlw	-3
 32013  01A01E  50E3               	movf	plusw1,w,c
 32014  01A020  222A               	addwfc	btemp^0,f,c
 32015  01A022  0EF9               	movlw	-7
 32016  01A024  0060  F0AB  FFE3   	movff	btemp,plusw1
 32017  01A02A                     l10090:
 32018                           
 32019                           ;stkvar	_m @ sp[(-10)+4]
 32020  01A02A  0EFA               	movlw	-6
 32021  01A02C  006F FF8C  F032    	movff	plusw1,btemp+8
 32022  01A032  0EFB               	movlw	-5
 32023  01A034  006F FF8C  F033    	movff	plusw1,btemp+9
 32024  01A03A  0EFC               	movlw	-4
 32025  01A03C  006F FF8C  F034    	movff	plusw1,btemp+10
 32026  01A042  0EFD               	movlw	-3
 32027  01A044  006F FF8C  F035    	movff	plusw1,btemp+11
 32028  01A04A  1C32               	comf	(btemp+8)^0,w,c
 32029  01A04C  6E2E               	movwf	(btemp+4)^0,c
 32030  01A04E  1C33               	comf	(btemp+9)^0,w,c
 32031  01A050  6E2F               	movwf	(btemp+5)^0,c
 32032  01A052  1C34               	comf	(btemp+10)^0,w,c
 32033  01A054  6E30               	movwf	(btemp+6)^0,c
 32034  01A056  1C35               	comf	(btemp+11)^0,w,c
 32035  01A058  6E31               	movwf	(btemp+7)^0,c
 32036                           
 32037                           ;stkvar	_u @ sp[(-10)+0]
 32038  01A05A  50E1               	movf	fsr1l,w,c
 32039  01A05C  0FF6               	addlw	-10
 32040  01A05E  6ED9               	movwf	fsr2l,c
 32041  01A060  50E2               	movf	fsr1h,w,c
 32042  01A062  6EDA               	movwf	fsr2h,c
 32043  01A064  0EFF               	movlw	255
 32044  01A066  22DA               	addwfc	fsr2h,f,c
 32045  01A068  502E               	movf	(btemp+4)^0,w,c
 32046  01A06A  16DE               	andwf	postinc2,f,c
 32047  01A06C  502F               	movf	(btemp+5)^0,w,c
 32048  01A06E  16DE               	andwf	postinc2,f,c
 32049  01A070  5030               	movf	(btemp+6)^0,w,c
 32050  01A072  16DE               	andwf	postinc2,f,c
 32051  01A074  5031               	movf	(btemp+7)^0,w,c
 32052  01A076  16DE               	andwf	postinc2,f,c
 32053  01A078  D05B               	goto	l10100
 32054  01A07A                     l10092:
 32055                           
 32056                           ;stkvar	_u @ sp[(-10)+0]
 32057  01A07A  0EF6               	movlw	-10
 32058  01A07C  006F FF8C  F032    	movff	plusw1,btemp+8
 32059  01A082  0EF7               	movlw	-9
 32060  01A084  006F FF8C  F033    	movff	plusw1,btemp+9
 32061  01A08A  0EF8               	movlw	-8
 32062  01A08C  006F FF8C  F034    	movff	plusw1,btemp+10
 32063  01A092  0EF9               	movlw	-7
 32064  01A094  006F FF8C  F035    	movff	plusw1,btemp+11
 32065  01A09A  0E20               	movlw	32
 32066  01A09C  D005               	goto	u7890
 32067  01A09E                     u7895:
 32068  01A09E  90D8               	bcf	status,0,c
 32069  01A0A0  3235               	rrcf	(btemp+11)^0,f,c
 32070  01A0A2  3234               	rrcf	(btemp+10)^0,f,c
 32071  01A0A4  3233               	rrcf	(btemp+9)^0,f,c
 32072  01A0A6  3232               	rrcf	(btemp+8)^0,f,c
 32073  01A0A8                     u7890:
 32074  01A0A8  2EE8               	decfsz	wreg,f,c
 32075  01A0AA  D7F9               	goto	u7895
 32076  01A0AC  6632               	tstfsz	(btemp+8)^0,c
 32077  01A0AE  D009               	goto	l10096
 32078                           
 32079                           ;stkvar	_u @ sp[(-10)+0]
 32080  01A0B0  0EF6               	movlw	-10
 32081  01A0B2  6AE3               	clrf	plusw1,c
 32082  01A0B4  0EF7               	movlw	-9
 32083  01A0B6  6AE3               	clrf	plusw1,c
 32084  01A0B8  0EF8               	movlw	-8
 32085  01A0BA  6AE3               	clrf	plusw1,c
 32086  01A0BC  0EF9               	movlw	-7
 32087  01A0BE  6AE3               	clrf	plusw1,c
 32088  01A0C0  D037               	goto	l10100
 32089  01A0C2                     l10096:
 32090                           
 32091                           ;stkvar	_u @ sp[(-10)+0]
 32092  01A0C2  0EF6               	movlw	-10
 32093  01A0C4  006F FF8C  F032    	movff	plusw1,btemp+8
 32094  01A0CA  0EF7               	movlw	-9
 32095  01A0CC  006F FF8C  F033    	movff	plusw1,btemp+9
 32096  01A0D2  0EF8               	movlw	-8
 32097  01A0D4  006F FF8C  F034    	movff	plusw1,btemp+10
 32098  01A0DA  0EF9               	movlw	-7
 32099  01A0DC  006F FF8C  F035    	movff	plusw1,btemp+11
 32100  01A0E2  90D8               	bcf	status,0,c
 32101  01A0E4  3432               	rlcf	(btemp+8)^0,w,c
 32102  01A0E6  6E2E               	movwf	(btemp+4)^0,c
 32103  01A0E8  3433               	rlcf	(btemp+9)^0,w,c
 32104  01A0EA  6E2F               	movwf	(btemp+5)^0,c
 32105  01A0EC  3434               	rlcf	(btemp+10)^0,w,c
 32106  01A0EE  6E30               	movwf	(btemp+6)^0,c
 32107  01A0F0  3435               	rlcf	(btemp+11)^0,w,c
 32108  01A0F2  6E31               	movwf	(btemp+7)^0,c
 32109  01A0F4  502E               	movf	(btemp+4)^0,w,c
 32110  01A0F6  102F               	iorwf	(btemp+5)^0,w,c
 32111  01A0F8  1030               	iorwf	(btemp+6)^0,w,c
 32112  01A0FA  1031               	iorwf	(btemp+7)^0,w,c
 32113  01A0FC  B4D8               	btfsc	status,2,c
 32114  01A0FE  D018               	goto	l10100
 32115  01A100  0E00               	movlw	0
 32116  01A102  6E32               	movwf	(btemp+8)^0,c
 32117  01A104  0E00               	movlw	0
 32118  01A106  6E33               	movwf	(btemp+9)^0,c
 32119  01A108  0E80               	movlw	128
 32120  01A10A  6E34               	movwf	(btemp+10)^0,c
 32121  01A10C  0EBF               	movlw	191
 32122  01A10E  6E35               	movwf	(btemp+11)^0,c
 32123                           
 32124                           ;stkvar	_u @ sp[(-10)+0]
 32125  01A110  0EF6               	movlw	-10
 32126  01A112  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32127  01A118  0EF7               	movlw	-9
 32128  01A11A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32129  01A120  0EF8               	movlw	-8
 32130  01A122  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32131  01A128  0EF9               	movlw	-7
 32132  01A12A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32133  01A130                     l10100:
 32134                           
 32135                           ;stkvar	_u @ sp[(-10)+0]
 32136  01A130  0EF6               	movlw	-10
 32137  01A132  006F FF8C  F02A    	movff	plusw1,btemp
 32138  01A138  0EF7               	movlw	-9
 32139  01A13A  006F FF8C  F02B    	movff	plusw1,btemp+1
 32140  01A140  0EF8               	movlw	-8
 32141  01A142  006F FF8C  F02C    	movff	plusw1,btemp+2
 32142  01A148  0EF9               	movlw	-7
 32143  01A14A                     L34:
 32144  01A14A  006F FF8C  F02D    	movff	plusw1,btemp+3
 32145                           
 32146                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 32147  01A150  0EF2               	movlw	242
 32148  01A152  26E1               	addwf	fsr1l,f,c
 32149  01A154  0EFF               	movlw	255
 32150  01A156  22E2               	addwfc	fsr1h,f,c
 32151  01A158  0012               	return		;funcret
 32152  01A15A                     __end_of_floorf:
 32153                           	opt callstack 0
 32154                           
 32155 ;; *************** function ___fpclassifyf *****************
 32156 ;; Defined at:
 32157 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 32158 ;; Parameters:    Size  Location     Type
 32159 ;;  x               4  [STACK] float 
 32160 ;; Auto vars:     Size  Location     Type
 32161 ;;  u               4  [STACK] struct .
 32162 ;;  e               2  [STACK] int 
 32163 ;; Return value:  Size  Location     Type
 32164 ;;                  2  [STACK] int 
 32165 ;; Registers used:
 32166 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 32167 ;; Tracked objects:
 32168 ;;		On entry : 0/0
 32169 ;;		On exit  : 0/0
 32170 ;;		Unchanged: 0/0
 32171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32176 ;;Total ram usage:        0 bytes
 32177 ;; Hardware stack levels used:    1
 32178 ;; Hardware stack levels required when called:   15
 32179 ;; This function calls:
 32180 ;;		Nothing
 32181 ;; This function is called by:
 32182 ;;		_efgtoa
 32183 ;; This function uses a reentrant model
 32184 ;;
 32185                           
 32186                           	psect	text106
 32187  01D5B2                     __ptext106:
 32188                           	opt callstack 0
 32189  01D5B2                     ___fpclassifyf:
 32190                           	opt callstack 0
 32191                           
 32192                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32193  01D5B2  0E06               	movlw	6
 32194  01D5B4  26E1               	addwf	fsr1l,f,c
 32195  01D5B6  0E00               	movlw	0
 32196  01D5B8  22E2               	addwfc	fsr1h,f,c
 32197                           
 32198                           ;incstack = 0
 32199 ;; hardware stack exceeded
 32200  01D5BA  0060  F208  F032   	movff	___fpclassifyf@F463,btemp+8
 32201  01D5C0  0060  F20C  F033   	movff	___fpclassifyf@F463+1,btemp+9
 32202  01D5C6  0060  F210  F034   	movff	___fpclassifyf@F463+2,btemp+10
 32203  01D5CC  0060  F214  F035   	movff	___fpclassifyf@F463+3,btemp+11
 32204                           
 32205                           ;stkvar	_u @ sp[(-6)+0]
 32206  01D5D2  0EFA               	movlw	-6
 32207  01D5D4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32208  01D5DA  0EFB               	movlw	-5
 32209  01D5DC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32210  01D5E2  0EFC               	movlw	-4
 32211  01D5E4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32212  01D5EA  0EFD               	movlw	-3
 32213  01D5EC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32214                           
 32215                           ;stkvar	_x @ sp[(-6)+-4]
 32216  01D5F2  0EF6               	movlw	-10
 32217  01D5F4  006F FF8C  F032    	movff	plusw1,btemp+8
 32218  01D5FA  0EF7               	movlw	-9
 32219  01D5FC  006F FF8C  F033    	movff	plusw1,btemp+9
 32220  01D602  0EF8               	movlw	-8
 32221  01D604  006F FF8C  F034    	movff	plusw1,btemp+10
 32222  01D60A  0EF9               	movlw	-7
 32223  01D60C  006F FF8C  F035    	movff	plusw1,btemp+11
 32224                           
 32225                           ;stkvar	_u @ sp[(-6)+0]
 32226  01D612  0EFA               	movlw	-6
 32227  01D614  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32228  01D61A  0EFB               	movlw	-5
 32229  01D61C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32230  01D622  0EFC               	movlw	-4
 32231  01D624  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32232  01D62A  0EFD               	movlw	-3
 32233  01D62C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32234                           
 32235                           ;stkvar	_u @ sp[(-6)+0]
 32236  01D632  0EFA               	movlw	-6
 32237  01D634  006F FF8C  F032    	movff	plusw1,btemp+8
 32238  01D63A  0EFB               	movlw	-5
 32239  01D63C  006F FF8C  F033    	movff	plusw1,btemp+9
 32240  01D642  0EFC               	movlw	-4
 32241  01D644  006F FF8C  F034    	movff	plusw1,btemp+10
 32242  01D64A  0EFD               	movlw	-3
 32243  01D64C  006F FF8C  F035    	movff	plusw1,btemp+11
 32244  01D652  0E18               	movlw	24
 32245  01D654  D005               	goto	u7700
 32246  01D656                     u7705:
 32247  01D656  90D8               	bcf	status,0,c
 32248  01D658  3235               	rrcf	(btemp+11)^0,f,c
 32249  01D65A  3234               	rrcf	(btemp+10)^0,f,c
 32250  01D65C  3233               	rrcf	(btemp+9)^0,f,c
 32251  01D65E  3232               	rrcf	(btemp+8)^0,f,c
 32252  01D660                     u7700:
 32253  01D660  2EE8               	decfsz	wreg,f,c
 32254  01D662  D7F9               	goto	u7705
 32255  01D664  0060  F0C8  F030   	movff	btemp+8,btemp+6
 32256  01D66A  0060  F0CC  F031   	movff	btemp+9,btemp+7
 32257  01D670  0EFF               	movlw	255
 32258  01D672  1630               	andwf	(btemp+6)^0,f,c
 32259  01D674  0E00               	movlw	0
 32260  01D676  1631               	andwf	(btemp+7)^0,f,c
 32261                           
 32262                           ;stkvar	_e @ sp[(-6)+4]
 32263  01D678  0EFE               	movlw	-2
 32264  01D67A  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 32265  01D680  0EFF               	movlw	-1
 32266  01D682  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 32267                           
 32268                           ;stkvar	_e @ sp[(-6)+4]
 32269  01D688  0EFE               	movlw	-2
 32270  01D68A  006F FF8C  F02A    	movff	plusw1,btemp
 32271  01D690  0EFF               	movlw	-1
 32272  01D692  50E3               	movf	plusw1,w,c
 32273  01D694  102A               	iorwf	btemp^0,w,c
 32274  01D696  A4D8               	btfss	status,2,c
 32275  01D698  D023               	goto	l10038
 32276                           
 32277                           ;stkvar	_u @ sp[(-6)+0]
 32278  01D69A  0EFA               	movlw	-6
 32279  01D69C  006F FF8C  F032    	movff	plusw1,btemp+8
 32280  01D6A2  0EFB               	movlw	-5
 32281  01D6A4  006F FF8C  F033    	movff	plusw1,btemp+9
 32282  01D6AA  0EFC               	movlw	-4
 32283  01D6AC  006F FF8C  F034    	movff	plusw1,btemp+10
 32284  01D6B2  0EFD               	movlw	-3
 32285  01D6B4  006F FF8C  F035    	movff	plusw1,btemp+11
 32286  01D6BA  90D8               	bcf	status,0,c
 32287  01D6BC  3432               	rlcf	(btemp+8)^0,w,c
 32288  01D6BE  6E2E               	movwf	(btemp+4)^0,c
 32289  01D6C0  3433               	rlcf	(btemp+9)^0,w,c
 32290  01D6C2  6E2F               	movwf	(btemp+5)^0,c
 32291  01D6C4  3434               	rlcf	(btemp+10)^0,w,c
 32292  01D6C6  6E30               	movwf	(btemp+6)^0,c
 32293  01D6C8  3435               	rlcf	(btemp+11)^0,w,c
 32294  01D6CA  6E31               	movwf	(btemp+7)^0,c
 32295  01D6CC  502E               	movf	(btemp+4)^0,w,c
 32296  01D6CE  102F               	iorwf	(btemp+5)^0,w,c
 32297  01D6D0  1030               	iorwf	(btemp+6)^0,w,c
 32298  01D6D2  1031               	iorwf	(btemp+7)^0,w,c
 32299  01D6D4  A4D8               	btfss	status,2,c
 32300  01D6D6  D002               	goto	l10034
 32301  01D6D8  0E02               	movlw	2
 32302  01D6DA  D02E               	goto	L35
 32303  01D6DC                     l10034:
 32304  01D6DC  0E03               	movlw	3
 32305  01D6DE  D02C               	goto	L35
 32306  01D6E0                     l10038:
 32307                           
 32308                           ;stkvar	_e @ sp[(-6)+4]
 32309  01D6E0  0EFE               	movlw	-2
 32310  01D6E2  28E3               	incf	plusw1,w,c
 32311  01D6E4  E128               	bnz	l10044
 32312  01D6E6  0EFF               	movlw	-1
 32313  01D6E8  50E3               	movf	plusw1,w,c
 32314  01D6EA  A4D8               	btfss	status,2,c
 32315  01D6EC  D024               	goto	l10044
 32316                           
 32317                           ;stkvar	_u @ sp[(-6)+0]
 32318  01D6EE  0EFA               	movlw	-6
 32319  01D6F0  006F FF8C  F032    	movff	plusw1,btemp+8
 32320  01D6F6  0EFB               	movlw	-5
 32321  01D6F8  006F FF8C  F033    	movff	plusw1,btemp+9
 32322  01D6FE  0EFC               	movlw	-4
 32323  01D700  006F FF8C  F034    	movff	plusw1,btemp+10
 32324  01D706  0EFD               	movlw	-3
 32325  01D708  006F FF8C  F035    	movff	plusw1,btemp+11
 32326  01D70E  0E09               	movlw	9
 32327  01D710                     u7745:
 32328  01D710  90D8               	bcf	status,0,c
 32329  01D712  3632               	rlcf	(btemp+8)^0,f,c
 32330  01D714  3633               	rlcf	(btemp+9)^0,f,c
 32331  01D716  3634               	rlcf	(btemp+10)^0,f,c
 32332  01D718  3635               	rlcf	(btemp+11)^0,f,c
 32333  01D71A  2EE8               	decfsz	wreg,f,c
 32334  01D71C  D7F9               	goto	u7745
 32335  01D71E  5032               	movf	(btemp+8)^0,w,c
 32336  01D720  1033               	iorwf	(btemp+9)^0,w,c
 32337  01D722  1034               	iorwf	(btemp+10)^0,w,c
 32338  01D724  1035               	iorwf	(btemp+11)^0,w,c
 32339  01D726  A4D8               	btfss	status,2,c
 32340  01D728  D002               	goto	u7750
 32341  01D72A  0E01               	movlw	1
 32342  01D72C  D001               	goto	u7760
 32343  01D72E                     u7750:
 32344  01D72E  0E00               	movlw	0
 32345  01D730                     u7760:
 32346  01D730  6E2A               	movwf	btemp^0,c
 32347  01D732  6A2B               	clrf	(btemp+1)^0,c
 32348  01D734  D004               	goto	l3389
 32349  01D736                     l10044:
 32350  01D736  0E04               	movlw	4
 32351  01D738                     L35:
 32352  01D738  6E2A               	movwf	btemp^0,c
 32353  01D73A  0E00               	movlw	0
 32354  01D73C  6E2B               	movwf	(btemp+1)^0,c
 32355  01D73E                     l3389:
 32356                           
 32357                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 32358  01D73E  0EF6               	movlw	246
 32359  01D740  26E1               	addwf	fsr1l,f,c
 32360  01D742  0EFF               	movlw	255
 32361  01D744  22E2               	addwfc	fsr1h,f,c
 32362  01D746  0012               	return		;funcret
 32363  01D748                     __end_of___fpclassifyf:
 32364                           	opt callstack 0
 32365                           
 32366 ;; *************** function ___fltol *****************
 32367 ;; Defined at:
 32368 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 32369 ;; Parameters:    Size  Location     Type
 32370 ;;  f1              4  [STACK] int 
 32371 ;; Auto vars:     Size  Location     Type
 32372 ;;  exp1            1  [STACK] unsigned char 
 32373 ;;  sign1           1  [STACK] unsigned char 
 32374 ;; Return value:  Size  Location     Type
 32375 ;;                  4  [STACK] long 
 32376 ;; Registers used:
 32377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 32378 ;; Tracked objects:
 32379 ;;		On entry : 0/0
 32380 ;;		On exit  : 0/0
 32381 ;;		Unchanged: 0/0
 32382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32387 ;;Total ram usage:        0 bytes
 32388 ;; Hardware stack levels used:    1
 32389 ;; Hardware stack levels required when called:   15
 32390 ;; This function calls:
 32391 ;;		Nothing
 32392 ;; This function is called by:
 32393 ;;		_main
 32394 ;;		_convert_dac_raw
 32395 ;;		_calc_bsoc
 32396 ;;		_init_bsoc
 32397 ;;		_efgtoa
 32398 ;; This function uses a reentrant model
 32399 ;;
 32400                           
 32401                           	psect	text107
 32402  01DEE2                     __ptext107:
 32403                           	opt callstack 0
 32404  01DEE2                     ___fltol:
 32405                           	opt callstack 0
 32406                           
 32407                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32408  01DEE2  52E6               	movf	postinc1,f,c
 32409  01DEE4  52E6               	movf	postinc1,f,c
 32410                           
 32411                           ;stkvar	_f1 @ sp[(-2)+-4]
 32412                           
 32413                           ;incstack = 0
 32414 ;; hardware stack exceeded
 32415  01DEE6  0EFA               	movlw	-6
 32416  01DEE8  006F FF8C  F032    	movff	plusw1,btemp+8
 32417  01DEEE  0EFB               	movlw	-5
 32418  01DEF0  006F FF8C  F033    	movff	plusw1,btemp+9
 32419  01DEF6  0EFC               	movlw	-4
 32420  01DEF8  006F FF8C  F034    	movff	plusw1,btemp+10
 32421  01DEFE  0EFD               	movlw	-3
 32422  01DF00  006F FF8C  F035    	movff	plusw1,btemp+11
 32423  01DF06  0E18               	movlw	24
 32424  01DF08  D005               	goto	u8970
 32425  01DF0A                     u8975:
 32426  01DF0A  90D8               	bcf	status,0,c
 32427  01DF0C  3235               	rrcf	(btemp+11)^0,f,c
 32428  01DF0E  3234               	rrcf	(btemp+10)^0,f,c
 32429  01DF10  3233               	rrcf	(btemp+9)^0,f,c
 32430  01DF12  3232               	rrcf	(btemp+8)^0,f,c
 32431  01DF14                     u8970:
 32432  01DF14  2EE8               	decfsz	wreg,f,c
 32433  01DF16  D7F9               	goto	u8975
 32434                           
 32435                           ;stkvar	_exp1 @ sp[(-2)+0]
 32436  01DF18  0EFE               	movlw	-2
 32437  01DF1A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32438  01DF20  0EFE               	movlw	-2
 32439  01DF22  50E3               	movf	plusw1,w,c
 32440  01DF24  A4D8               	btfss	status,2,c
 32441  01DF26  D006               	goto	l10690
 32442  01DF28                     u8980:
 32443  01DF28  0E00               	movlw	0
 32444  01DF2A  6E2A               	movwf	btemp^0,c
 32445  01DF2C  6A2B               	clrf	(btemp+1)^0,c
 32446  01DF2E  6A2C               	clrf	(btemp+2)^0,c
 32447  01DF30  6A2D               	clrf	(btemp+3)^0,c
 32448  01DF32  D08B               	goto	l3005
 32449  01DF34                     l10690:
 32450                           
 32451                           ;stkvar	_f1 @ sp[(-2)+-4]
 32452  01DF34  0EFA               	movlw	-6
 32453  01DF36  006F FF8C  F032    	movff	plusw1,btemp+8
 32454  01DF3C  0EFB               	movlw	-5
 32455  01DF3E  006F FF8C  F033    	movff	plusw1,btemp+9
 32456  01DF44  0EFC               	movlw	-4
 32457  01DF46  006F FF8C  F034    	movff	plusw1,btemp+10
 32458  01DF4C  0EFD               	movlw	-3
 32459  01DF4E  006F FF8C  F035    	movff	plusw1,btemp+11
 32460  01DF54  0E20               	movlw	32
 32461  01DF56  D005               	goto	u8990
 32462  01DF58                     u8995:
 32463  01DF58  90D8               	bcf	status,0,c
 32464  01DF5A  3235               	rrcf	(btemp+11)^0,f,c
 32465  01DF5C  3234               	rrcf	(btemp+10)^0,f,c
 32466  01DF5E  3233               	rrcf	(btemp+9)^0,f,c
 32467  01DF60  3232               	rrcf	(btemp+8)^0,f,c
 32468  01DF62                     u8990:
 32469  01DF62  2EE8               	decfsz	wreg,f,c
 32470  01DF64  D7F9               	goto	u8995
 32471                           
 32472                           ;stkvar	_sign1 @ sp[(-2)+1]
 32473  01DF66  0EFF               	movlw	-1
 32474  01DF68  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32475                           
 32476                           ;stkvar	_f1 @ sp[(-2)+-4]
 32477  01DF6E  0EFC               	movlw	-4
 32478  01DF70  8EE3               	bsf	plusw1,7,c
 32479                           
 32480                           ;stkvar	_f1 @ sp[(-2)+-4]
 32481  01DF72  50E1               	movf	fsr1l,w,c
 32482  01DF74  0FFA               	addlw	-6
 32483  01DF76  6ED9               	movwf	fsr2l,c
 32484  01DF78  50E2               	movf	fsr1h,w,c
 32485  01DF7A  6EDA               	movwf	fsr2h,c
 32486  01DF7C  0EFF               	movlw	255
 32487  01DF7E  22DA               	addwfc	fsr2h,f,c
 32488  01DF80  0EFF               	movlw	255
 32489  01DF82  16DE               	andwf	postinc2,f,c
 32490  01DF84  0EFF               	movlw	255
 32491  01DF86  16DE               	andwf	postinc2,f,c
 32492  01DF88  0EFF               	movlw	255
 32493  01DF8A  16DE               	andwf	postinc2,f,c
 32494  01DF8C  0E00               	movlw	0
 32495  01DF8E  16DE               	andwf	postinc2,f,c
 32496                           
 32497                           ;stkvar	_exp1 @ sp[(-2)+0]
 32498  01DF90  0EFE               	movlw	-2
 32499  01DF92  006F FF8C  F02A    	movff	plusw1,btemp
 32500  01DF98  0E96               	movlw	150
 32501  01DF9A  5E2A               	subwf	btemp^0,f,c
 32502  01DF9C  0EFE               	movlw	-2
 32503  01DF9E  0060  F0AB  FFE3   	movff	btemp,plusw1
 32504                           
 32505                           ;stkvar	_exp1 @ sp[(-2)+0]
 32506  01DFA4  0EFE               	movlw	-2
 32507  01DFA6  AEE3               	btfss	plusw1,7,c
 32508  01DFA8  D014               	goto	l10708
 32509                           
 32510                           ;stkvar	_exp1 @ sp[(-2)+0]
 32511  01DFAA  0EFE               	movlw	-2
 32512  01DFAC  50E3               	movf	plusw1,w,c
 32513  01DFAE  0A80               	xorlw	128
 32514  01DFB0  0F97               	addlw	151
 32515  01DFB2  A0D8               	btfss	status,0,c
 32516  01DFB4  D7B9               	goto	u8980
 32517  01DFB6                     l10706:
 32518                           
 32519                           ;stkvar	_f1 @ sp[(-2)+-4]
 32520  01DFB6  90D8               	bcf	status,0,c
 32521  01DFB8  0EFD               	movlw	-3
 32522  01DFBA  32E3               	rrcf	plusw1,f,c
 32523  01DFBC  0EFC               	movlw	-4
 32524  01DFBE  32E3               	rrcf	plusw1,f,c
 32525  01DFC0  0EFB               	movlw	-5
 32526  01DFC2  32E3               	rrcf	plusw1,f,c
 32527  01DFC4  0EFA               	movlw	-6
 32528  01DFC6  32E3               	rrcf	plusw1,f,c
 32529                           
 32530                           ;stkvar	_exp1 @ sp[(-2)+0]
 32531  01DFC8  0EFE               	movlw	-2
 32532  01DFCA  2AE3               	incf	plusw1,f,c
 32533  01DFCC  B4D8               	btfsc	status,2,c
 32534  01DFCE  D018               	goto	u9040
 32535  01DFD0  D7F2               	goto	l10706
 32536  01DFD2                     l10708:
 32537                           
 32538                           ;stkvar	_exp1 @ sp[(-2)+0]
 32539  01DFD2  0EFE               	movlw	-2
 32540  01DFD4  006F FF8C  F02A    	movff	plusw1,btemp
 32541  01DFDA  0E1F               	movlw	31
 32542  01DFDC  642A               	cpfsgt	btemp^0,c
 32543  01DFDE  D00C               	goto	l10716
 32544  01DFE0  D7A3               	goto	u8980
 32545  01DFE2                     l10714:
 32546                           
 32547                           ;stkvar	_f1 @ sp[(-2)+-4]
 32548  01DFE2  90D8               	bcf	status,0,c
 32549  01DFE4  0EFA               	movlw	-6
 32550  01DFE6  36E3               	rlcf	plusw1,f,c
 32551  01DFE8  0EFB               	movlw	-5
 32552  01DFEA  36E3               	rlcf	plusw1,f,c
 32553  01DFEC  0EFC               	movlw	-4
 32554  01DFEE  36E3               	rlcf	plusw1,f,c
 32555  01DFF0  0EFD               	movlw	-3
 32556  01DFF2  36E3               	rlcf	plusw1,f,c
 32557                           
 32558                           ;stkvar	_exp1 @ sp[(-2)+0]
 32559  01DFF4  0EFE               	movlw	-2
 32560  01DFF6  06E3               	decf	plusw1,f,c
 32561  01DFF8                     l10716:
 32562                           
 32563                           ;stkvar	_exp1 @ sp[(-2)+0]
 32564  01DFF8  0EFE               	movlw	-2
 32565  01DFFA  50E3               	movf	plusw1,w,c
 32566  01DFFC  A4D8               	btfss	status,2,c
 32567  01DFFE  D7F1               	goto	l10714
 32568  01E000                     u9040:
 32569                           
 32570                           ;stkvar	_sign1 @ sp[(-2)+1]
 32571  01E000  0EFF               	movlw	-1
 32572  01E002  50E3               	movf	plusw1,w,c
 32573  01E004  B4D8               	btfsc	status,2,c
 32574  01E006  D011               	goto	u9060
 32575                           
 32576                           ;stkvar	_f1 @ sp[(-2)+-4]
 32577                           ;stkvar	_f1 @ sp[(-2)+-4]
 32578  01E008  0EFA               	movlw	-6
 32579  01E00A  6CE3               	negf	plusw1,c
 32580  01E00C  0EFB               	movlw	-5
 32581  01E00E  1EE3               	comf	plusw1,f,c
 32582  01E010  0EFC               	movlw	-4
 32583  01E012  1EE3               	comf	plusw1,f,c
 32584  01E014  0EFD               	movlw	-3
 32585  01E016  1EE3               	comf	plusw1,f,c
 32586  01E018  E308               	bnc	u9060
 32587  01E01A  0EFB               	movlw	-5
 32588  01E01C  2AE3               	incf	plusw1,f,c
 32589  01E01E  E305               	bnc	u9060
 32590  01E020  0EFC               	movlw	-4
 32591  01E022  2AE3               	incf	plusw1,f,c
 32592  01E024  E302               	bnc	u9060
 32593  01E026  0EFD               	movlw	-3
 32594  01E028  2AE3               	incf	plusw1,f,c
 32595  01E02A                     u9060:
 32596                           
 32597                           ;stkvar	_f1 @ sp[(-2)+-4]
 32598  01E02A  0EFA               	movlw	-6
 32599  01E02C  006F FF8C  F02A    	movff	plusw1,btemp
 32600  01E032  0EFB               	movlw	-5
 32601  01E034  006F FF8C  F02B    	movff	plusw1,btemp+1
 32602  01E03A  0EFC               	movlw	-4
 32603  01E03C  006F FF8C  F02C    	movff	plusw1,btemp+2
 32604  01E042  0EFD               	movlw	-3
 32605  01E044  006F FF8C  F02D    	movff	plusw1,btemp+3
 32606  01E04A                     l3005:
 32607                           
 32608                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 32609  01E04A  0EFA               	movlw	250
 32610  01E04C  26E1               	addwf	fsr1l,f,c
 32611  01E04E  0EFF               	movlw	255
 32612  01E050  22E2               	addwfc	fsr1h,f,c
 32613  01E052  0012               	return		;funcret
 32614  01E054                     __end_of___fltol:
 32615                           	opt callstack 0
 32616                           
 32617 ;; *************** function ___flneg *****************
 32618 ;; Defined at:
 32619 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 32620 ;; Parameters:    Size  Location     Type
 32621 ;;  f1              4  [STACK] long 
 32622 ;; Auto vars:     Size  Location     Type
 32623 ;;		None
 32624 ;; Return value:  Size  Location     Type
 32625 ;;                  4  [STACK] long 
 32626 ;; Registers used:
 32627 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 32628 ;; Tracked objects:
 32629 ;;		On entry : 0/0
 32630 ;;		On exit  : 0/0
 32631 ;;		Unchanged: 0/0
 32632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32637 ;;Total ram usage:        0 bytes
 32638 ;; Hardware stack levels used:    1
 32639 ;; Hardware stack levels required when called:   15
 32640 ;; This function calls:
 32641 ;;		Nothing
 32642 ;; This function is called by:
 32643 ;;		_calc_bsoc
 32644 ;;		_efgtoa
 32645 ;; This function uses a reentrant model
 32646 ;;
 32647                           
 32648                           	psect	text108
 32649  0014EA                     __ptext108:
 32650                           	opt callstack 0
 32651  0014EA                     ___flneg:
 32652                           	opt callstack 0
 32653                           
 32654                           ;stkvar	_f1 @ sp[(0)+-4]
 32655                           
 32656                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32657                           ;incstack = 0
 32658 ;; hardware stack exceeded
 32659  0014EA  0EFC               	movlw	-4
 32660  0014EC  50E3               	movf	plusw1,w,c
 32661  0014EE  E10A               	bnz	u8960
 32662  0014F0  0EFD               	movlw	-3
 32663  0014F2  50E3               	movf	plusw1,w,c
 32664  0014F4  E107               	bnz	u8960
 32665  0014F6  0EFE               	movlw	-2
 32666  0014F8  50E3               	movf	plusw1,w,c
 32667  0014FA  E104               	bnz	u8960
 32668  0014FC  0EFF               	movlw	-1
 32669  0014FE  50E3               	movf	plusw1,w,c
 32670  001500  B4D8               	btfsc	status,2,c
 32671  001502  D002               	goto	l10680
 32672  001504                     u8960:
 32673                           
 32674                           ;stkvar	_f1 @ sp[(0)+-4]
 32675  001504  0EFF               	movlw	-1
 32676  001506  7EE3               	btg	plusw1,7,c
 32677  001508                     l10680:
 32678                           
 32679                           ;stkvar	_f1 @ sp[(0)+-4]
 32680  001508  0EFC               	movlw	-4
 32681  00150A  006F FF8C  F02A    	movff	plusw1,btemp
 32682  001510  0EFD               	movlw	-3
 32683  001512  006F FF8C  F02B    	movff	plusw1,btemp+1
 32684  001518  0EFE               	movlw	-2
 32685  00151A  006F FF8C  F02C    	movff	plusw1,btemp+2
 32686  001520  0EFF               	movlw	-1
 32687  001522  006F FF8C  F02D    	movff	plusw1,btemp+3
 32688                           
 32689                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 32690  001528  52E5               	movf	postdec1,f,c
 32691  00152A  52E5               	movf	postdec1,f,c
 32692  00152C  52E5               	movf	postdec1,f,c
 32693  00152E  52E5               	movf	postdec1,f,c
 32694  001530  0012               	return		;funcret
 32695  001532                     __end_of___flneg:
 32696                           	opt callstack 0
 32697                           
 32698 ;; *************** function ___fleq *****************
 32699 ;; Defined at:
 32700 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 32701 ;; Parameters:    Size  Location     Type
 32702 ;;  ff1             4  [STACK] long 
 32703 ;;  ff2             4  [STACK] long 
 32704 ;; Auto vars:     Size  Location     Type
 32705 ;;		None
 32706 ;; Return value:  Size  Location     Type
 32707 ;;		None               void
 32708 ;; Registers used:
 32709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 32710 ;; Tracked objects:
 32711 ;;		On entry : 0/0
 32712 ;;		On exit  : 0/0
 32713 ;;		Unchanged: 0/0
 32714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32719 ;;Total ram usage:        0 bytes
 32720 ;; Hardware stack levels used:    1
 32721 ;; Hardware stack levels required when called:   15
 32722 ;; This function calls:
 32723 ;;		Nothing
 32724 ;; This function is called by:
 32725 ;;		_efgtoa
 32726 ;; This function uses a reentrant model
 32727 ;;
 32728                           
 32729                           	psect	text109
 32730  01FC38                     __ptext109:
 32731                           	opt callstack 0
 32732  01FC38                     ___fleq:
 32733                           	opt callstack 0
 32734                           
 32735                           ;stkvar	_ff1 @ sp[(0)+-4]
 32736                           
 32737                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32738                           ;incstack = 0
 32739 ;; hardware stack exceeded
 32740  01FC38  50E1               	movf	fsr1l,w,c
 32741  01FC3A  0FFC               	addlw	-4
 32742  01FC3C  6ED9               	movwf	fsr2l,c
 32743  01FC3E  50E2               	movf	fsr1h,w,c
 32744  01FC40  6EDA               	movwf	fsr2h,c
 32745  01FC42  0EFF               	movlw	255
 32746  01FC44  22DA               	addwfc	fsr2h,f,c
 32747  01FC46  0E00               	movlw	0
 32748  01FC48  14DE               	andwf	postinc2,w,c
 32749  01FC4A  6E32               	movwf	(btemp+8)^0,c
 32750  01FC4C  0E00               	movlw	0
 32751  01FC4E  14DE               	andwf	postinc2,w,c
 32752  01FC50  6E33               	movwf	(btemp+9)^0,c
 32753  01FC52  0E80               	movlw	128
 32754  01FC54  14DE               	andwf	postinc2,w,c
 32755  01FC56  6E34               	movwf	(btemp+10)^0,c
 32756  01FC58  0E7F               	movlw	127
 32757  01FC5A  14DE               	andwf	postinc2,w,c
 32758  01FC5C  6E35               	movwf	(btemp+11)^0,c
 32759  01FC5E  5032               	movf	(btemp+8)^0,w,c
 32760  01FC60  1033               	iorwf	(btemp+9)^0,w,c
 32761  01FC62  1034               	iorwf	(btemp+10)^0,w,c
 32762  01FC64  1035               	iorwf	(btemp+11)^0,w,c
 32763  01FC66  A4D8               	btfss	status,2,c
 32764  01FC68  D008               	goto	l10638
 32765                           
 32766                           ;stkvar	_ff1 @ sp[(0)+-4]
 32767  01FC6A  0EFC               	movlw	-4
 32768  01FC6C  6AE3               	clrf	plusw1,c
 32769  01FC6E  0EFD               	movlw	-3
 32770  01FC70  6AE3               	clrf	plusw1,c
 32771  01FC72  0EFE               	movlw	-2
 32772  01FC74  6AE3               	clrf	plusw1,c
 32773  01FC76  0EFF               	movlw	-1
 32774  01FC78  6AE3               	clrf	plusw1,c
 32775  01FC7A                     l10638:
 32776                           
 32777                           ;stkvar	_ff2 @ sp[(0)+-8]
 32778  01FC7A  50E1               	movf	fsr1l,w,c
 32779  01FC7C  0FF8               	addlw	-8
 32780  01FC7E  6ED9               	movwf	fsr2l,c
 32781  01FC80  50E2               	movf	fsr1h,w,c
 32782  01FC82  6EDA               	movwf	fsr2h,c
 32783  01FC84  0EFF               	movlw	255
 32784  01FC86  22DA               	addwfc	fsr2h,f,c
 32785  01FC88  0E00               	movlw	0
 32786  01FC8A  14DE               	andwf	postinc2,w,c
 32787  01FC8C  6E32               	movwf	(btemp+8)^0,c
 32788  01FC8E  0E00               	movlw	0
 32789  01FC90  14DE               	andwf	postinc2,w,c
 32790  01FC92  6E33               	movwf	(btemp+9)^0,c
 32791  01FC94  0E80               	movlw	128
 32792  01FC96  14DE               	andwf	postinc2,w,c
 32793  01FC98  6E34               	movwf	(btemp+10)^0,c
 32794  01FC9A  0E7F               	movlw	127
 32795  01FC9C  14DE               	andwf	postinc2,w,c
 32796  01FC9E  6E35               	movwf	(btemp+11)^0,c
 32797  01FCA0  5032               	movf	(btemp+8)^0,w,c
 32798  01FCA2  1033               	iorwf	(btemp+9)^0,w,c
 32799  01FCA4  1034               	iorwf	(btemp+10)^0,w,c
 32800  01FCA6  1035               	iorwf	(btemp+11)^0,w,c
 32801  01FCA8  A4D8               	btfss	status,2,c
 32802  01FCAA  D008               	goto	l10642
 32803                           
 32804                           ;stkvar	_ff2 @ sp[(0)+-8]
 32805  01FCAC  0EF8               	movlw	-8
 32806  01FCAE  6AE3               	clrf	plusw1,c
 32807  01FCB0  0EF9               	movlw	-7
 32808  01FCB2  6AE3               	clrf	plusw1,c
 32809  01FCB4  0EFA               	movlw	-6
 32810  01FCB6  6AE3               	clrf	plusw1,c
 32811  01FCB8  0EFB               	movlw	-5
 32812  01FCBA  6AE3               	clrf	plusw1,c
 32813  01FCBC                     l10642:
 32814                           
 32815                           ;stkvar	_ff2 @ sp[(0)+-8]
 32816                           ;stkvar	_ff1 @ sp[(0)+-4]
 32817  01FCBC  50E1               	movf	fsr1l,w,c
 32818  01FCBE  0FFC               	addlw	-4
 32819  01FCC0  6ED9               	movwf	fsr2l,c
 32820  01FCC2  50E2               	movf	fsr1h,w,c
 32821  01FCC4  6EDA               	movwf	fsr2h,c
 32822  01FCC6  0EFF               	movlw	255
 32823  01FCC8  22DA               	addwfc	fsr2h,f,c
 32824  01FCCA  0EF8               	movlw	-8
 32825  01FCCC  50E3               	movf	plusw1,w,c
 32826  01FCCE  18DE               	xorwf	postinc2,w,c
 32827  01FCD0  E10D               	bnz	u8900
 32828  01FCD2  0EF9               	movlw	-7
 32829  01FCD4  50E3               	movf	plusw1,w,c
 32830  01FCD6  18DE               	xorwf	postinc2,w,c
 32831  01FCD8  E109               	bnz	u8900
 32832  01FCDA  0EFA               	movlw	-6
 32833  01FCDC  50E3               	movf	plusw1,w,c
 32834  01FCDE  18DE               	xorwf	postinc2,w,c
 32835  01FCE0  E105               	bnz	u8900
 32836  01FCE2  0EFB               	movlw	-5
 32837  01FCE4  50E3               	movf	plusw1,w,c
 32838  01FCE6  18DE               	xorwf	postinc2,w,c
 32839  01FCE8  B4D8               	btfsc	status,2,c
 32840  01FCEA  D002               	goto	l10646
 32841  01FCEC                     u8900:
 32842  01FCEC  902A               	bcf	btemp& (0+255),0,c
 32843  01FCEE  D001               	goto	l2967
 32844  01FCF0                     l10646:
 32845  01FCF0  802A               	bsf	btemp& (0+255),0,c
 32846  01FCF2                     l2967:
 32847                           
 32848                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 32849  01FCF2  0EF8               	movlw	248
 32850  01FCF4  26E1               	addwf	fsr1l,f,c
 32851  01FCF6  0EFF               	movlw	255
 32852  01FCF8  22E2               	addwfc	fsr1h,f,c
 32853  01FCFA  0012               	return		;funcret
 32854  01FCFC                     __end_of___fleq:
 32855                           	opt callstack 0
 32856                           
 32857 ;; *************** function ___awmod *****************
 32858 ;; Defined at:
 32859 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 32860 ;; Parameters:    Size  Location     Type
 32861 ;;  dividend        2  [STACK] int 
 32862 ;;  divisor         2  [STACK] int 
 32863 ;; Auto vars:     Size  Location     Type
 32864 ;;  sign            1  [STACK] unsigned char 
 32865 ;;  counter         1  [STACK] unsigned char 
 32866 ;; Return value:  Size  Location     Type
 32867 ;;                  2  [STACK] int 
 32868 ;; Registers used:
 32869 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 32870 ;; Tracked objects:
 32871 ;;		On entry : 0/3
 32872 ;;		On exit  : 0/0
 32873 ;;		Unchanged: 0/0
 32874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32879 ;;Total ram usage:        0 bytes
 32880 ;; Hardware stack levels used:    1
 32881 ;; Hardware stack levels required when called:   15
 32882 ;; This function calls:
 32883 ;;		Nothing
 32884 ;; This function is called by:
 32885 ;;		_efgtoa
 32886 ;;		_asctime
 32887 ;; This function uses a reentrant model
 32888 ;;
 32889                           
 32890                           	psect	text110
 32891  01F0EE                     __ptext110:
 32892                           	opt callstack 0
 32893  01F0EE                     ___awmod:
 32894                           	opt callstack 0
 32895                           
 32896                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32897  01F0EE  52E6               	movf	postinc1,f,c
 32898  01F0F0  52E6               	movf	postinc1,f,c
 32899                           
 32900                           ;stkvar	_sign @ sp[(-2)+0]
 32901                           
 32902                           ;incstack = 0
 32903 ;; hardware stack exceeded
 32904  01F0F2  0EFE               	movlw	-2
 32905  01F0F4  6AE3               	clrf	plusw1,c
 32906                           
 32907                           ;stkvar	_dividend @ sp[(-2)+-2]
 32908  01F0F6  0EFD               	movlw	-3
 32909  01F0F8  AEE3               	btfss	plusw1,7,c
 32910  01F0FA  D009               	goto	l10604
 32911                           
 32912                           ;stkvar	_dividend @ sp[(-2)+-2]
 32913                           ;stkvar	_dividend @ sp[(-2)+-2]
 32914  01F0FC  0EFC               	movlw	-4
 32915  01F0FE  6CE3               	negf	plusw1,c
 32916  01F100  0EFD               	movlw	-3
 32917  01F102  1EE3               	comf	plusw1,f,c
 32918  01F104  B0D8               	btfsc	status,0,c
 32919  01F106  2AE3               	incf	plusw1,f,c
 32920                           
 32921                           ;stkvar	_sign @ sp[(-2)+0]
 32922  01F108  0EFE               	movlw	-2
 32923  01F10A  6AE3               	clrf	plusw1,c
 32924  01F10C  2AE3               	incf	plusw1,f,c
 32925  01F10E                     l10604:
 32926                           
 32927                           ;stkvar	_divisor @ sp[(-2)+-4]
 32928  01F10E  0EFB               	movlw	-5
 32929  01F110  AEE3               	btfss	plusw1,7,c
 32930  01F112  D006               	goto	l10608
 32931                           
 32932                           ;stkvar	_divisor @ sp[(-2)+-4]
 32933                           ;stkvar	_divisor @ sp[(-2)+-4]
 32934  01F114  0EFA               	movlw	-6
 32935  01F116  6CE3               	negf	plusw1,c
 32936  01F118  0EFB               	movlw	-5
 32937  01F11A  1EE3               	comf	plusw1,f,c
 32938  01F11C  B0D8               	btfsc	status,0,c
 32939  01F11E  2AE3               	incf	plusw1,f,c
 32940  01F120                     l10608:
 32941                           
 32942                           ;stkvar	_divisor @ sp[(-2)+-4]
 32943  01F120  0EFA               	movlw	-6
 32944  01F122  006F FF8C  F02A    	movff	plusw1,btemp
 32945  01F128  0EFB               	movlw	-5
 32946  01F12A  50E3               	movf	plusw1,w,c
 32947  01F12C  102A               	iorwf	btemp^0,w,c
 32948  01F12E  B4D8               	btfsc	status,2,c
 32949  01F130  D053               	goto	u8860
 32950                           
 32951                           ;stkvar	_counter @ sp[(-2)+1]
 32952  01F132  0EFF               	movlw	-1
 32953  01F134  6AE3               	clrf	plusw1,c
 32954  01F136  D012               	goto	L36
 32955  01F138                     l10612:
 32956                           
 32957                           ;stkvar	_divisor @ sp[(-2)+-4]
 32958  01F138  0EFA               	movlw	-6
 32959  01F13A  50E3               	movf	plusw1,w,c
 32960  01F13C  90D8               	bcf	status,0,c
 32961  01F13E  34E8               	rlcf	wreg,w,c
 32962  01F140  6E2A               	movwf	btemp^0,c
 32963  01F142  0EFA               	movlw	-6
 32964  01F144  0060  F0AB  FFE3   	movff	btemp,plusw1
 32965  01F14A  0EFB               	movlw	-5
 32966  01F14C  50E3               	movf	plusw1,w,c
 32967  01F14E  34E8               	rlcf	wreg,w,c
 32968  01F150  6E2A               	movwf	btemp^0,c
 32969  01F152  0EFB               	movlw	-5
 32970  01F154  0060  F0AB  FFE3   	movff	btemp,plusw1
 32971                           
 32972                           ;stkvar	_counter @ sp[(-2)+1]
 32973  01F15A  0EFF               	movlw	-1
 32974  01F15C                     L36:
 32975  01F15C  2AE3               	incf	plusw1,f,c
 32976                           
 32977                           ;stkvar	_divisor @ sp[(-2)+-4]
 32978  01F15E  0EFB               	movlw	-5
 32979  01F160  AEE3               	btfss	plusw1,7,c
 32980  01F162  D7EA               	goto	l10612
 32981  01F164                     u8840:
 32982                           
 32983                           ;stkvar	_divisor @ sp[(-2)+-4]
 32984  01F164  0EFA               	movlw	-6
 32985  01F166  006F FF8C  F034    	movff	plusw1,btemp+10
 32986  01F16C  0EFB               	movlw	-5
 32987  01F16E  006F FF8C  F035    	movff	plusw1,btemp+11
 32988                           
 32989                           ;stkvar	_dividend @ sp[(-2)+-2]
 32990  01F174  0EFC               	movlw	-4
 32991  01F176  006F FF8C  F032    	movff	plusw1,btemp+8
 32992  01F17C  0EFD               	movlw	-3
 32993  01F17E  006F FF8C  F033    	movff	plusw1,btemp+9
 32994  01F184  5034               	movf	(btemp+10)^0,w,c
 32995  01F186  5C32               	subwf	(btemp+8)^0,w,c
 32996  01F188  5035               	movf	(btemp+11)^0,w,c
 32997  01F18A  5833               	subwfb	(btemp+9)^0,w,c
 32998  01F18C  A0D8               	btfss	status,0,c
 32999  01F18E  D014               	goto	l10622
 33000                           
 33001                           ;stkvar	_divisor @ sp[(-2)+-4]
 33002                           ;stkvar	_dividend @ sp[(-2)+-2]
 33003  01F190  0EFC               	movlw	-4
 33004  01F192  50E3               	movf	plusw1,w,c
 33005  01F194  6E2A               	movwf	btemp^0,c
 33006  01F196  0EFA               	movlw	-6
 33007  01F198  50E3               	movf	plusw1,w,c
 33008  01F19A  5E2A               	subwf	btemp^0,f,c
 33009  01F19C  0EFC               	movlw	-4
 33010  01F19E  0060  F0AB  FFE3   	movff	btemp,plusw1
 33011  01F1A4  0EFD               	movlw	-3
 33012  01F1A6  50E3               	movf	plusw1,w,c
 33013  01F1A8  6E2A               	movwf	btemp^0,c
 33014  01F1AA  0EFB               	movlw	-5
 33015  01F1AC  50E3               	movf	plusw1,w,c
 33016  01F1AE  5A2A               	subwfb	btemp^0,f,c
 33017  01F1B0  0EFD               	movlw	-3
 33018  01F1B2  0060  F0AB  FFE3   	movff	btemp,plusw1
 33019  01F1B8                     l10622:
 33020                           
 33021                           ;stkvar	_divisor @ sp[(-2)+-4]
 33022  01F1B8  90D8               	bcf	status,0,c
 33023  01F1BA  0EFB               	movlw	-5
 33024  01F1BC  32E3               	rrcf	plusw1,f,c
 33025  01F1BE  0EFA               	movlw	-6
 33026  01F1C0  32E3               	rrcf	plusw1,f,c
 33027                           
 33028                           ;stkvar	_counter @ sp[(-2)+1]
 33029  01F1C2  0EFF               	movlw	-1
 33030  01F1C4  50E3               	movf	plusw1,w,c
 33031  01F1C6  6E2A               	movwf	btemp^0,c
 33032  01F1C8  0E01               	movlw	1
 33033  01F1CA  5E2A               	subwf	btemp^0,f,c
 33034  01F1CC  0EFF               	movlw	-1
 33035  01F1CE  0060  F0AB  FFE3   	movff	btemp,plusw1
 33036  01F1D4  A4D8               	btfss	status,2,c
 33037  01F1D6  D7C6               	goto	u8840
 33038  01F1D8                     u8860:
 33039                           
 33040                           ;stkvar	_sign @ sp[(-2)+0]
 33041  01F1D8  0EFE               	movlw	-2
 33042  01F1DA  50E3               	movf	plusw1,w,c
 33043  01F1DC  B4D8               	btfsc	status,2,c
 33044  01F1DE  D006               	goto	l10630
 33045                           
 33046                           ;stkvar	_dividend @ sp[(-2)+-2]
 33047                           ;stkvar	_dividend @ sp[(-2)+-2]
 33048  01F1E0  0EFC               	movlw	-4
 33049  01F1E2  6CE3               	negf	plusw1,c
 33050  01F1E4  0EFD               	movlw	-3
 33051  01F1E6  1EE3               	comf	plusw1,f,c
 33052  01F1E8  B0D8               	btfsc	status,0,c
 33053  01F1EA  2AE3               	incf	plusw1,f,c
 33054  01F1EC                     l10630:
 33055                           
 33056                           ;stkvar	_dividend @ sp[(-2)+-2]
 33057  01F1EC  0EFC               	movlw	-4
 33058  01F1EE  006F FF8C  F02A    	movff	plusw1,btemp
 33059  01F1F4  0EFD               	movlw	-3
 33060  01F1F6  006F FF8C  F02B    	movff	plusw1,btemp+1
 33061                           
 33062                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33063  01F1FC  0EFA               	movlw	250
 33064  01F1FE  26E1               	addwf	fsr1l,f,c
 33065  01F200  0EFF               	movlw	255
 33066  01F202  22E2               	addwfc	fsr1h,f,c
 33067  01F204  0012               	return		;funcret
 33068  01F206                     __end_of___awmod:
 33069                           	opt callstack 0
 33070                           
 33071 ;; *************** function ___awdiv *****************
 33072 ;; Defined at:
 33073 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 33074 ;; Parameters:    Size  Location     Type
 33075 ;;  dividend        2  [STACK] int 
 33076 ;;  divisor         2  [STACK] int 
 33077 ;; Auto vars:     Size  Location     Type
 33078 ;;  quotient        2  [STACK] int 
 33079 ;;  sign            1  [STACK] unsigned char 
 33080 ;;  counter         1  [STACK] unsigned char 
 33081 ;; Return value:  Size  Location     Type
 33082 ;;                  2  [STACK] int 
 33083 ;; Registers used:
 33084 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 33085 ;; Tracked objects:
 33086 ;;		On entry : 0/3
 33087 ;;		On exit  : 0/0
 33088 ;;		Unchanged: 0/0
 33089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33094 ;;Total ram usage:        0 bytes
 33095 ;; Hardware stack levels used:    1
 33096 ;; Hardware stack levels required when called:   15
 33097 ;; This function calls:
 33098 ;;		Nothing
 33099 ;; This function is called by:
 33100 ;;		_efgtoa
 33101 ;;		_put2d
 33102 ;;		_asctime
 33103 ;;		_scan_trans
 33104 ;; This function uses a reentrant model
 33105 ;;
 33106                           
 33107                           	psect	text111
 33108  01E890                     __ptext111:
 33109                           	opt callstack 0
 33110  01E890                     ___awdiv:
 33111                           	opt callstack 0
 33112                           
 33113                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33114  01E890  52E6               	movf	postinc1,f,c
 33115  01E892  52E6               	movf	postinc1,f,c
 33116  01E894  52E6               	movf	postinc1,f,c
 33117  01E896  52E6               	movf	postinc1,f,c
 33118                           
 33119                           ;stkvar	_sign @ sp[(-4)+2]
 33120                           
 33121                           ;incstack = 0
 33122 ;; hardware stack exceeded
 33123  01E898  0EFE               	movlw	-2
 33124  01E89A  6AE3               	clrf	plusw1,c
 33125                           
 33126                           ;stkvar	_divisor @ sp[(-4)+-4]
 33127  01E89C  0EF9               	movlw	-7
 33128  01E89E  AEE3               	btfss	plusw1,7,c
 33129  01E8A0  D009               	goto	l10558
 33130                           
 33131                           ;stkvar	_divisor @ sp[(-4)+-4]
 33132                           ;stkvar	_divisor @ sp[(-4)+-4]
 33133  01E8A2  0EF8               	movlw	-8
 33134  01E8A4  6CE3               	negf	plusw1,c
 33135  01E8A6  0EF9               	movlw	-7
 33136  01E8A8  1EE3               	comf	plusw1,f,c
 33137  01E8AA  B0D8               	btfsc	status,0,c
 33138  01E8AC  2AE3               	incf	plusw1,f,c
 33139                           
 33140                           ;stkvar	_sign @ sp[(-4)+2]
 33141  01E8AE  0EFE               	movlw	-2
 33142  01E8B0  6AE3               	clrf	plusw1,c
 33143  01E8B2  2AE3               	incf	plusw1,f,c
 33144  01E8B4                     l10558:
 33145                           
 33146                           ;stkvar	_dividend @ sp[(-4)+-2]
 33147  01E8B4  0EFB               	movlw	-5
 33148  01E8B6  AEE3               	btfss	plusw1,7,c
 33149  01E8B8  D008               	goto	l10564
 33150                           
 33151                           ;stkvar	_dividend @ sp[(-4)+-2]
 33152                           ;stkvar	_dividend @ sp[(-4)+-2]
 33153  01E8BA  0EFA               	movlw	-6
 33154  01E8BC  6CE3               	negf	plusw1,c
 33155  01E8BE  0EFB               	movlw	-5
 33156  01E8C0  1EE3               	comf	plusw1,f,c
 33157  01E8C2  B0D8               	btfsc	status,0,c
 33158  01E8C4  2AE3               	incf	plusw1,f,c
 33159                           
 33160                           ;stkvar	_sign @ sp[(-4)+2]
 33161  01E8C6  0EFE               	movlw	-2
 33162  01E8C8  70E3               	btg	plusw1,0,c
 33163  01E8CA                     l10564:
 33164                           
 33165                           ;stkvar	_quotient @ sp[(-4)+0]
 33166  01E8CA  0EFC               	movlw	-4
 33167  01E8CC  6AE3               	clrf	plusw1,c
 33168  01E8CE  0EFD               	movlw	-3
 33169  01E8D0  6AE3               	clrf	plusw1,c
 33170                           
 33171                           ;stkvar	_divisor @ sp[(-4)+-4]
 33172  01E8D2  0EF8               	movlw	-8
 33173  01E8D4  006F FF8C  F02A    	movff	plusw1,btemp
 33174  01E8DA  0EF9               	movlw	-7
 33175  01E8DC  50E3               	movf	plusw1,w,c
 33176  01E8DE  102A               	iorwf	btemp^0,w,c
 33177  01E8E0  B4D8               	btfsc	status,2,c
 33178  01E8E2  D066               	goto	u8790
 33179                           
 33180                           ;stkvar	_counter @ sp[(-4)+3]
 33181  01E8E4  0EFF               	movlw	-1
 33182  01E8E6  6AE3               	clrf	plusw1,c
 33183  01E8E8  D012               	goto	L37
 33184  01E8EA                     l10570:
 33185                           
 33186                           ;stkvar	_divisor @ sp[(-4)+-4]
 33187  01E8EA  0EF8               	movlw	-8
 33188  01E8EC  50E3               	movf	plusw1,w,c
 33189  01E8EE  90D8               	bcf	status,0,c
 33190  01E8F0  34E8               	rlcf	wreg,w,c
 33191  01E8F2  6E2A               	movwf	btemp^0,c
 33192  01E8F4  0EF8               	movlw	-8
 33193  01E8F6  0060  F0AB  FFE3   	movff	btemp,plusw1
 33194  01E8FC  0EF9               	movlw	-7
 33195  01E8FE  50E3               	movf	plusw1,w,c
 33196  01E900  34E8               	rlcf	wreg,w,c
 33197  01E902  6E2A               	movwf	btemp^0,c
 33198  01E904  0EF9               	movlw	-7
 33199  01E906  0060  F0AB  FFE3   	movff	btemp,plusw1
 33200                           
 33201                           ;stkvar	_counter @ sp[(-4)+3]
 33202  01E90C  0EFF               	movlw	-1
 33203  01E90E                     L37:
 33204  01E90E  2AE3               	incf	plusw1,f,c
 33205                           
 33206                           ;stkvar	_divisor @ sp[(-4)+-4]
 33207  01E910  0EF9               	movlw	-7
 33208  01E912  AEE3               	btfss	plusw1,7,c
 33209  01E914  D7EA               	goto	l10570
 33210  01E916                     u8770:
 33211                           
 33212                           ;stkvar	_quotient @ sp[(-4)+0]
 33213  01E916  0EFC               	movlw	-4
 33214  01E918  50E3               	movf	plusw1,w,c
 33215  01E91A  90D8               	bcf	status,0,c
 33216  01E91C  34E8               	rlcf	wreg,w,c
 33217  01E91E  6E2A               	movwf	btemp^0,c
 33218  01E920  0EFC               	movlw	-4
 33219  01E922  0060  F0AB  FFE3   	movff	btemp,plusw1
 33220  01E928  0EFD               	movlw	-3
 33221  01E92A  50E3               	movf	plusw1,w,c
 33222  01E92C  34E8               	rlcf	wreg,w,c
 33223  01E92E  6E2A               	movwf	btemp^0,c
 33224  01E930  0EFD               	movlw	-3
 33225  01E932  0060  F0AB  FFE3   	movff	btemp,plusw1
 33226                           
 33227                           ;stkvar	_divisor @ sp[(-4)+-4]
 33228  01E938  0EF8               	movlw	-8
 33229  01E93A  006F FF8C  F034    	movff	plusw1,btemp+10
 33230  01E940  0EF9               	movlw	-7
 33231  01E942  006F FF8C  F035    	movff	plusw1,btemp+11
 33232                           
 33233                           ;stkvar	_dividend @ sp[(-4)+-2]
 33234  01E948  0EFA               	movlw	-6
 33235  01E94A  006F FF8C  F032    	movff	plusw1,btemp+8
 33236  01E950  0EFB               	movlw	-5
 33237  01E952  006F FF8C  F033    	movff	plusw1,btemp+9
 33238  01E958  5034               	movf	(btemp+10)^0,w,c
 33239  01E95A  5C32               	subwf	(btemp+8)^0,w,c
 33240  01E95C  5035               	movf	(btemp+11)^0,w,c
 33241  01E95E  5833               	subwfb	(btemp+9)^0,w,c
 33242  01E960  A0D8               	btfss	status,0,c
 33243  01E962  D016               	goto	l10584
 33244                           
 33245                           ;stkvar	_divisor @ sp[(-4)+-4]
 33246                           ;stkvar	_dividend @ sp[(-4)+-2]
 33247  01E964  0EFA               	movlw	-6
 33248  01E966  50E3               	movf	plusw1,w,c
 33249  01E968  6E2A               	movwf	btemp^0,c
 33250  01E96A  0EF8               	movlw	-8
 33251  01E96C  50E3               	movf	plusw1,w,c
 33252  01E96E  5E2A               	subwf	btemp^0,f,c
 33253  01E970  0EFA               	movlw	-6
 33254  01E972  0060  F0AB  FFE3   	movff	btemp,plusw1
 33255  01E978  0EFB               	movlw	-5
 33256  01E97A  50E3               	movf	plusw1,w,c
 33257  01E97C  6E2A               	movwf	btemp^0,c
 33258  01E97E  0EF9               	movlw	-7
 33259  01E980  50E3               	movf	plusw1,w,c
 33260  01E982  5A2A               	subwfb	btemp^0,f,c
 33261  01E984  0EFB               	movlw	-5
 33262  01E986  0060  F0AB  FFE3   	movff	btemp,plusw1
 33263                           
 33264                           ;stkvar	_quotient @ sp[(-4)+0]
 33265  01E98C  0EFC               	movlw	-4
 33266  01E98E  80E3               	bsf	plusw1,0,c
 33267  01E990                     l10584:
 33268                           
 33269                           ;stkvar	_divisor @ sp[(-4)+-4]
 33270  01E990  90D8               	bcf	status,0,c
 33271  01E992  0EF9               	movlw	-7
 33272  01E994  32E3               	rrcf	plusw1,f,c
 33273  01E996  0EF8               	movlw	-8
 33274  01E998  32E3               	rrcf	plusw1,f,c
 33275                           
 33276                           ;stkvar	_counter @ sp[(-4)+3]
 33277  01E99A  0EFF               	movlw	-1
 33278  01E99C  50E3               	movf	plusw1,w,c
 33279  01E99E  6E2A               	movwf	btemp^0,c
 33280  01E9A0  0E01               	movlw	1
 33281  01E9A2  5E2A               	subwf	btemp^0,f,c
 33282  01E9A4  0EFF               	movlw	-1
 33283  01E9A6  0060  F0AB  FFE3   	movff	btemp,plusw1
 33284  01E9AC  A4D8               	btfss	status,2,c
 33285  01E9AE  D7B3               	goto	u8770
 33286  01E9B0                     u8790:
 33287                           
 33288                           ;stkvar	_sign @ sp[(-4)+2]
 33289  01E9B0  0EFE               	movlw	-2
 33290  01E9B2  50E3               	movf	plusw1,w,c
 33291  01E9B4  B4D8               	btfsc	status,2,c
 33292  01E9B6  D006               	goto	l10592
 33293                           
 33294                           ;stkvar	_quotient @ sp[(-4)+0]
 33295                           ;stkvar	_quotient @ sp[(-4)+0]
 33296  01E9B8  0EFC               	movlw	-4
 33297  01E9BA  6CE3               	negf	plusw1,c
 33298  01E9BC  0EFD               	movlw	-3
 33299  01E9BE  1EE3               	comf	plusw1,f,c
 33300  01E9C0  B0D8               	btfsc	status,0,c
 33301  01E9C2  2AE3               	incf	plusw1,f,c
 33302  01E9C4                     l10592:
 33303                           
 33304                           ;stkvar	_quotient @ sp[(-4)+0]
 33305  01E9C4  0EFC               	movlw	-4
 33306  01E9C6  006F FF8C  F02A    	movff	plusw1,btemp
 33307  01E9CC  0EFD               	movlw	-3
 33308  01E9CE  006F FF8C  F02B    	movff	plusw1,btemp+1
 33309                           
 33310                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33311  01E9D4  0EF8               	movlw	248
 33312  01E9D6  26E1               	addwf	fsr1l,f,c
 33313  01E9D8  0EFF               	movlw	255
 33314  01E9DA  22E2               	addwfc	fsr1h,f,c
 33315  01E9DC  0012               	return		;funcret
 33316  01E9DE                     __end_of___awdiv:
 33317                           	opt callstack 0
 33318                           
 33319 ;; *************** function _dtoa *****************
 33320 ;; Defined at:
 33321 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 33322 ;; Parameters:    Size  Location     Type
 33323 ;;  fp              2  [STACK] PTR struct _IO_FILE
 33324 ;;		 -> f(6), NULL(0), 
 33325 ;;  d               8  [STACK] long long 
 33326 ;; Auto vars:     Size  Location     Type
 33327 ;;  n               8  [STACK] long long 
 33328 ;;  i               2  [STACK] int 
 33329 ;;  s               2  [STACK] int 
 33330 ;;  w               2  [STACK] int 
 33331 ;;  p               2  [STACK] int 
 33332 ;; Return value:  Size  Location     Type
 33333 ;;                  2  [STACK] int 
 33334 ;; Registers used:
 33335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 33336 ;; Tracked objects:
 33337 ;;		On entry : 0/0
 33338 ;;		On exit  : 0/0
 33339 ;;		Unchanged: 0/0
 33340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33345 ;;Total ram usage:        0 bytes
 33346 ;; Hardware stack levels used:    1
 33347 ;; Hardware stack levels required when called:   20
 33348 ;; This function calls:
 33349 ;;		___aodiv
 33350 ;;		___aomod
 33351 ;;		_abs
 33352 ;;		_pad
 33353 ;; This function is called by:
 33354 ;;		_vfpfcnvrt
 33355 ;; This function uses a reentrant model
 33356 ;;
 33357                           
 33358                           	psect	text112
 33359  018972                     __ptext112:
 33360                           	opt callstack 0
 33361  018972                     _dtoa:
 33362                           	opt callstack 0
 33363                           
 33364                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 33365  018972  0E12               	movlw	18
 33366  018974  26E1               	addwf	fsr1l,f,c
 33367  018976  0E00               	movlw	0
 33368  018978  22E2               	addwfc	fsr1h,f,c
 33369                           
 33370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 33371                           ;stkvar	_d @ sp[(-18)+-10]
 33372                           
 33373                           ;incstack = 0
 33374 ;; hardware stack exceeded
 33375  01897A  0EE4               	movlw	228
 33376  01897C  24E1               	addwf	fsr1l,w,c
 33377  01897E  6ED9               	movwf	fsr2l,c
 33378  018980  0EFF               	movlw	255
 33379  018982  20E2               	addwfc	fsr1h,w,c
 33380  018984  6EDA               	movwf	fsr2h,c
 33381                           
 33382                           ;stkvar	_n @ sp[(-18)+2]
 33383  018986  0E08               	movlw	8
 33384  018988  6E2A               	movwf	btemp^0,c
 33385  01898A  0EF0               	movlw	-16
 33386  01898C                     us1428999:
 33387  01898C  006F FF7B FFE3     	movff	postinc2,plusw1
 33388  018992  28E8               	incf	wreg,w,c
 33389  018994  2E2A               	decfsz	btemp^0,f,c
 33390  018996  D7FA               	bra	us1428999
 33391                           
 33392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 33393                           ;stkvar	_n @ sp[(-18)+2]
 33394  018998  0EF7               	movlw	-9
 33395  01899A  AEE3               	btfss	plusw1,7,c
 33396  01899C  D002               	goto	u14290
 33397  01899E  0E01               	movlw	1
 33398  0189A0  D001               	goto	u14300
 33399  0189A2                     u14290:
 33400  0189A2  0E00               	movlw	0
 33401  0189A4                     u14300:
 33402  0189A4  6E34               	movwf	(btemp+10)^0,c
 33403  0189A6  6A35               	clrf	(btemp+11)^0,c
 33404                           
 33405                           ;stkvar	_s @ sp[(-18)+12]
 33406  0189A8  0EFA               	movlw	-6
 33407  0189AA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33408  0189B0  0EFB               	movlw	-5
 33409  0189B2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33410                           
 33411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 33412                           ;stkvar	_s @ sp[(-18)+12]
 33413  0189B8  0EFA               	movlw	-6
 33414  0189BA  006F FF8C  F02A    	movff	plusw1,btemp
 33415  0189C0  0EFB               	movlw	-5
 33416  0189C2  50E3               	movf	plusw1,w,c
 33417  0189C4  102A               	iorwf	btemp^0,w,c
 33418  0189C6  B4D8               	btfsc	status,2,c
 33419  0189C8  D025               	goto	u14320
 33420                           
 33421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 33422                           ;stkvar	_n @ sp[(-18)+2]
 33423                           ;stkvar	_n @ sp[(-18)+2]
 33424  0189CA  0EF0               	movlw	-16
 33425  0189CC  6CE3               	negf	plusw1,c
 33426  0189CE  0EF1               	movlw	-15
 33427  0189D0  1EE3               	comf	plusw1,f,c
 33428  0189D2  0EF2               	movlw	-14
 33429  0189D4  1EE3               	comf	plusw1,f,c
 33430  0189D6  0EF3               	movlw	-13
 33431  0189D8  1EE3               	comf	plusw1,f,c
 33432  0189DA  0EF4               	movlw	-12
 33433  0189DC  1EE3               	comf	plusw1,f,c
 33434  0189DE  0EF5               	movlw	-11
 33435  0189E0  1EE3               	comf	plusw1,f,c
 33436  0189E2  0EF6               	movlw	-10
 33437  0189E4  1EE3               	comf	plusw1,f,c
 33438  0189E6  0EF7               	movlw	-9
 33439  0189E8  1EE3               	comf	plusw1,f,c
 33440  0189EA  E314               	bnc	u14320
 33441  0189EC  0EF1               	movlw	-15
 33442  0189EE  2AE3               	incf	plusw1,f,c
 33443  0189F0  E311               	bnc	u14320
 33444  0189F2  0EF2               	movlw	-14
 33445  0189F4  2AE3               	incf	plusw1,f,c
 33446  0189F6  E30E               	bnc	u14320
 33447  0189F8  0EF3               	movlw	-13
 33448  0189FA  2AE3               	incf	plusw1,f,c
 33449  0189FC  E30B               	bnc	u14320
 33450  0189FE  0EF4               	movlw	-12
 33451  018A00  2AE3               	incf	plusw1,f,c
 33452  018A02  E308               	bnc	u14320
 33453  018A04  0EF5               	movlw	-11
 33454  018A06  2AE3               	incf	plusw1,f,c
 33455  018A08  E305               	bnc	u14320
 33456  018A0A  0EF6               	movlw	-10
 33457  018A0C  2AE3               	incf	plusw1,f,c
 33458  018A0E  E302               	bnc	u14320
 33459  018A10  0EF7               	movlw	-9
 33460  018A12  2AE3               	incf	plusw1,f,c
 33461  018A14                     u14320:
 33462                           
 33463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 33464  018A14  AE4D               	btfss	(_prec+1)^0,7,c
 33465                           
 33466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 33467  018A16  924E               	bcf	_flags^0,1,c
 33468                           
 33469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 33470  018A18  BE4D               	btfsc	(_prec+1)^0,7,c
 33471  018A1A  D005               	goto	u14340
 33472  018A1C  504D               	movf	(_prec+1)^0,w,c
 33473  018A1E  E110               	bnz	l15350
 33474  018A20  044C               	decf	_prec^0,w,c
 33475  018A22  B0D8               	btfsc	status,0,c
 33476  018A24  D00D               	goto	l15350
 33477  018A26                     u14340:
 33478  018A26  0E01               	movlw	1
 33479  018A28  6E34               	movwf	(btemp+10)^0,c
 33480  018A2A  0E00               	movlw	0
 33481  018A2C  6E35               	movwf	(btemp+11)^0,c
 33482                           
 33483                           ;stkvar	_p @ sp[(-18)+16]
 33484  018A2E  0EFE               	movlw	-2
 33485  018A30  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33486  018A36  0EFF               	movlw	-1
 33487  018A38  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33488  018A3E  D008               	goto	l2471
 33489  018A40                     l15350:
 33490                           
 33491                           ;stkvar	_p @ sp[(-18)+16]
 33492  018A40  0EFE               	movlw	-2
 33493  018A42  0060  F133  FFE3   	movff	_prec,plusw1
 33494  018A48  0EFF               	movlw	-1
 33495  018A4A  0060  F137  FFE3   	movff	_prec+1,plusw1
 33496  018A50                     l2471:
 33497                           
 33498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 33499                           ;stkvar	_w @ sp[(-18)+14]
 33500  018A50  0EFC               	movlw	-4
 33501  018A52  0060  F12B  FFE3   	movff	_width,plusw1
 33502  018A58  0EFD               	movlw	-3
 33503  018A5A  0060  F12F  FFE3   	movff	_width+1,plusw1
 33504                           
 33505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 33506                           ;stkvar	_s @ sp[(-18)+12]
 33507  018A60  0EFA               	movlw	-6
 33508  018A62  006F FF8C  F02A    	movff	plusw1,btemp
 33509  018A68  0EFB               	movlw	-5
 33510  018A6A  50E3               	movf	plusw1,w,c
 33511  018A6C  102A               	iorwf	btemp^0,w,c
 33512  018A6E  A4D8               	btfss	status,2,c
 33513  018A70  D002               	goto	u14360
 33514  018A72  A44E               	btfss	_flags^0,2,c
 33515  018A74  D00A               	goto	l15358
 33516  018A76                     u14360:
 33517                           
 33518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 33519                           ;stkvar	_w @ sp[(-18)+14]
 33520  018A76  50E1               	movf	fsr1l,w,c
 33521  018A78  0FFC               	addlw	-4
 33522  018A7A  6ED9               	movwf	fsr2l,c
 33523  018A7C  50E2               	movf	fsr1h,w,c
 33524  018A7E  6EDA               	movwf	fsr2h,c
 33525  018A80  0EFF               	movlw	255
 33526  018A82  22DA               	addwfc	fsr2h,f,c
 33527  018A84  06DE               	decf	postinc2,f,c
 33528  018A86  0E00               	movlw	0
 33529  018A88  5ADD               	subwfb	postdec2,f,c
 33530  018A8A                     l15358:
 33531                           
 33532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 33533  018A8A  0E4F               	movlw	79
 33534  018A8C  6E34               	movwf	(btemp+10)^0,c
 33535  018A8E  0E00               	movlw	0
 33536  018A90  6E35               	movwf	(btemp+11)^0,c
 33537                           
 33538                           ;stkvar	_i @ sp[(-18)+10]
 33539  018A92  0EF8               	movlw	-8
 33540  018A94  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33541  018A9A  0EF9               	movlw	-7
 33542  018A9C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33543                           
 33544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 33545  018AA2  0103               	movlb	3	; () banked
 33546  018AA4  6BA3               	clrf	(_dbuf+79)& (0+255),b
 33547                           
 33548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 33549  018AA6  D109               	goto	l15372
 33550  018AA8                     l15362:
 33551                           
 33552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 33553                           ;stkvar	_i @ sp[(-18)+10]
 33554  018AA8  50E1               	movf	fsr1l,w,c
 33555  018AAA  0FF8               	addlw	-8
 33556  018AAC  6ED9               	movwf	fsr2l,c
 33557  018AAE  50E2               	movf	fsr1h,w,c
 33558  018AB0  6EDA               	movwf	fsr2h,c
 33559  018AB2  0EFF               	movlw	255
 33560  018AB4  22DA               	addwfc	fsr2h,f,c
 33561  018AB6  06DE               	decf	postinc2,f,c
 33562  018AB8  0E00               	movlw	0
 33563  018ABA  5ADD               	subwfb	postdec2,f,c
 33564                           
 33565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 33566  018ABC  0E0A               	movlw	10
 33567  018ABE  6EE6               	movwf	postinc1,c
 33568  018AC0  0E00               	movlw	0
 33569  018AC2  6EE6               	movwf	postinc1,c
 33570  018AC4  0E00               	movlw	0
 33571  018AC6  6EE6               	movwf	postinc1,c
 33572  018AC8  0E00               	movlw	0
 33573  018ACA  6EE6               	movwf	postinc1,c
 33574  018ACC  0E00               	movlw	0
 33575  018ACE  6EE6               	movwf	postinc1,c
 33576  018AD0  0E00               	movlw	0
 33577  018AD2  6EE6               	movwf	postinc1,c
 33578  018AD4  0E00               	movlw	0
 33579  018AD6  6EE6               	movwf	postinc1,c
 33580  018AD8  0E00               	movlw	0
 33581  018ADA  6EE6               	movwf	postinc1,c
 33582                           
 33583                           ;stkvar	_n @ sp[(-26)+2]
 33584  018ADC  50E1               	movf	fsr1l,w,c
 33585  018ADE  0FE8               	addlw	-24
 33586  018AE0  6ED9               	movwf	fsr2l,c
 33587  018AE2  50E2               	movf	fsr1h,w,c
 33588  018AE4  6EDA               	movwf	fsr2h,c
 33589  018AE6  0EFF               	movlw	255
 33590  018AE8  22DA               	addwfc	fsr2h,f,c
 33591  018AEA  006F FF7B FFE6     	movff	postinc2,postinc1
 33592  018AF0  006F FF7B FFE6     	movff	postinc2,postinc1
 33593  018AF6  006F FF7B FFE6     	movff	postinc2,postinc1
 33594  018AFC  006F FF7B FFE6     	movff	postinc2,postinc1
 33595  018B02  006F FF7B FFE6     	movff	postinc2,postinc1
 33596  018B08  006F FF7B FFE6     	movff	postinc2,postinc1
 33597  018B0E  006F FF7B FFE6     	movff	postinc2,postinc1
 33598  018B14  006F FF7B FFE6     	movff	postinc2,postinc1
 33599  018B1A  EC04  F0E1         	call	___aomod	;wreg free
 33600  018B1E  52E5               	movf	postdec1,f,c
 33601  018B20  006F FF9C  F041    	movff	indf1,btemp+23
 33602  018B26  52E5               	movf	postdec1,f,c
 33603  018B28  006F FF9C  F040    	movff	indf1,btemp+22
 33604  018B2E  52E5               	movf	postdec1,f,c
 33605  018B30  006F FF9C  F03F    	movff	indf1,btemp+21
 33606  018B36  52E5               	movf	postdec1,f,c
 33607  018B38  006F FF9C  F03E    	movff	indf1,btemp+20
 33608  018B3E  52E5               	movf	postdec1,f,c
 33609  018B40  006F FF9C  F03D    	movff	indf1,btemp+19
 33610  018B46  52E5               	movf	postdec1,f,c
 33611  018B48  006F FF9C  F03C    	movff	indf1,btemp+18
 33612  018B4E  52E5               	movf	postdec1,f,c
 33613  018B50  006F FF9C  F03B    	movff	indf1,btemp+17
 33614  018B56  52E5               	movf	postdec1,f,c
 33615  018B58  006F FF9C  F03A    	movff	indf1,btemp+16
 33616  018B5E  0EF8               	movlw	248
 33617  018B60  26E1               	addwf	fsr1l,f,c
 33618  018B62  0EFF               	movlw	255
 33619  018B64  22E2               	addwfc	fsr1h,f,c
 33620  018B66  0060  F0E8  F034   	movff	btemp+16,btemp+10
 33621  018B6C  0060  F0EC  F035   	movff	btemp+17,btemp+11
 33622  018B72  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 33623  018B78  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 33624  018B7E  EC05  F00B         	call	_abs	;wreg free
 33625  018B82  0E30               	movlw	48
 33626  018B84  262A               	addwf	btemp^0,f,c
 33627                           
 33628                           ;stkvar	_i @ sp[(-18)+10]
 33629  018B86  0EF8               	movlw	-8
 33630  018B88  006F FF8C  F034    	movff	plusw1,btemp+10
 33631  018B8E  0EF9               	movlw	-7
 33632  018B90  006F FF8C  F035    	movff	plusw1,btemp+11
 33633  018B96  0E54               	movlw	low _dbuf
 33634  018B98  2434               	addwf	(btemp+10)^0,w,c
 33635  018B9A  6ED9               	movwf	fsr2l,c
 33636  018B9C  0E03               	movlw	high _dbuf
 33637  018B9E  2035               	addwfc	(btemp+11)^0,w,c
 33638  018BA0  6EDA               	movwf	fsr2h,c
 33639  018BA2  0060  F0AB  FFDF   	movff	btemp,indf2
 33640                           
 33641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 33642                           ;stkvar	_p @ sp[(-18)+16]
 33643  018BA8  50E1               	movf	fsr1l,w,c
 33644  018BAA  0FFE               	addlw	-2
 33645  018BAC  6ED9               	movwf	fsr2l,c
 33646  018BAE  50E2               	movf	fsr1h,w,c
 33647  018BB0  6EDA               	movwf	fsr2h,c
 33648  018BB2  0EFF               	movlw	255
 33649  018BB4  22DA               	addwfc	fsr2h,f,c
 33650  018BB6  06DE               	decf	postinc2,f,c
 33651  018BB8  0E00               	movlw	0
 33652  018BBA  5ADD               	subwfb	postdec2,f,c
 33653                           
 33654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 33655                           ;stkvar	_w @ sp[(-18)+14]
 33656  018BBC  50E1               	movf	fsr1l,w,c
 33657  018BBE  0FFC               	addlw	-4
 33658  018BC0  6ED9               	movwf	fsr2l,c
 33659  018BC2  50E2               	movf	fsr1h,w,c
 33660  018BC4  6EDA               	movwf	fsr2h,c
 33661  018BC6  0EFF               	movlw	255
 33662  018BC8  22DA               	addwfc	fsr2h,f,c
 33663  018BCA  06DE               	decf	postinc2,f,c
 33664  018BCC  0E00               	movlw	0
 33665  018BCE  5ADD               	subwfb	postdec2,f,c
 33666                           
 33667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 33668  018BD0  0E0A               	movlw	10
 33669  018BD2  6EE6               	movwf	postinc1,c
 33670  018BD4  0E00               	movlw	0
 33671  018BD6  6EE6               	movwf	postinc1,c
 33672  018BD8  0E00               	movlw	0
 33673  018BDA  6EE6               	movwf	postinc1,c
 33674  018BDC  0E00               	movlw	0
 33675  018BDE  6EE6               	movwf	postinc1,c
 33676  018BE0  0E00               	movlw	0
 33677  018BE2  6EE6               	movwf	postinc1,c
 33678  018BE4  0E00               	movlw	0
 33679  018BE6  6EE6               	movwf	postinc1,c
 33680  018BE8  0E00               	movlw	0
 33681  018BEA  6EE6               	movwf	postinc1,c
 33682  018BEC  0E00               	movlw	0
 33683  018BEE  6EE6               	movwf	postinc1,c
 33684                           
 33685                           ;stkvar	_n @ sp[(-26)+2]
 33686  018BF0  50E1               	movf	fsr1l,w,c
 33687  018BF2  0FE8               	addlw	-24
 33688  018BF4  6ED9               	movwf	fsr2l,c
 33689  018BF6  50E2               	movf	fsr1h,w,c
 33690  018BF8  6EDA               	movwf	fsr2h,c
 33691  018BFA  0EFF               	movlw	255
 33692  018BFC  22DA               	addwfc	fsr2h,f,c
 33693  018BFE  006F FF7B FFE6     	movff	postinc2,postinc1
 33694  018C04  006F FF7B FFE6     	movff	postinc2,postinc1
 33695  018C0A  006F FF7B FFE6     	movff	postinc2,postinc1
 33696  018C10  006F FF7B FFE6     	movff	postinc2,postinc1
 33697  018C16  006F FF7B FFE6     	movff	postinc2,postinc1
 33698  018C1C  006F FF7B FFE6     	movff	postinc2,postinc1
 33699  018C22  006F FF7B FFE6     	movff	postinc2,postinc1
 33700  018C28  006F FF7B FFE6     	movff	postinc2,postinc1
 33701  018C2E  EC34  F0DC         	call	___aodiv	;wreg free
 33702  018C32  52E5               	movf	postdec1,f,c
 33703  018C34  006F FF9C  F041    	movff	indf1,btemp+23
 33704  018C3A  52E5               	movf	postdec1,f,c
 33705  018C3C  006F FF9C  F040    	movff	indf1,btemp+22
 33706  018C42  52E5               	movf	postdec1,f,c
 33707  018C44  006F FF9C  F03F    	movff	indf1,btemp+21
 33708  018C4A  52E5               	movf	postdec1,f,c
 33709  018C4C  006F FF9C  F03E    	movff	indf1,btemp+20
 33710  018C52  52E5               	movf	postdec1,f,c
 33711  018C54  006F FF9C  F03D    	movff	indf1,btemp+19
 33712  018C5A  52E5               	movf	postdec1,f,c
 33713  018C5C  006F FF9C  F03C    	movff	indf1,btemp+18
 33714  018C62  52E5               	movf	postdec1,f,c
 33715  018C64  006F FF9C  F03B    	movff	indf1,btemp+17
 33716  018C6A  52E5               	movf	postdec1,f,c
 33717  018C6C  006F FF9C  F03A    	movff	indf1,btemp+16
 33718  018C72  0EF8               	movlw	248
 33719  018C74  26E1               	addwf	fsr1l,f,c
 33720  018C76  0EFF               	movlw	255
 33721  018C78  22E2               	addwfc	fsr1h,f,c
 33722                           
 33723                           ;stkvar	_n @ sp[(-18)+2]
 33724  018C7A  0EF0               	movlw	-16
 33725  018C7C  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 33726  018C82  0EF1               	movlw	-15
 33727  018C84  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 33728  018C8A  0EF2               	movlw	-14
 33729  018C8C  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 33730  018C92  0EF3               	movlw	-13
 33731  018C94  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 33732  018C9A  0EF4               	movlw	-12
 33733  018C9C  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 33734  018CA2  0EF5               	movlw	-11
 33735  018CA4  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 33736  018CAA  0EF6               	movlw	-10
 33737  018CAC  0060  F103  FFE3   	movff	btemp+22,plusw1
 33738  018CB2  0EF7               	movlw	-9
 33739  018CB4  0060  F107  FFE3   	movff	btemp+23,plusw1
 33740  018CBA                     l15372:
 33741                           
 33742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 33743                           ;stkvar	_i @ sp[(-18)+10]
 33744  018CBA  0EF9               	movlw	-7
 33745  018CBC  BEE3               	btfsc	plusw1,7,c
 33746  018CBE  D036               	goto	u14410
 33747  018CC0  0EF9               	movlw	-7
 33748  018CC2  50E3               	movf	plusw1,w,c
 33749  018CC4  E104               	bnz	u14370
 33750  018CC6  0EF8               	movlw	-8
 33751  018CC8  04E3               	decf	plusw1,w,c
 33752  018CCA  A0D8               	btfss	status,0,c
 33753  018CCC  D02F               	goto	u14410
 33754  018CCE                     u14370:
 33755                           
 33756                           ;stkvar	_n @ sp[(-18)+2]
 33757  018CCE  0EF0               	movlw	-16
 33758  018CD0  50E3               	movf	plusw1,w,c
 33759  018CD2  E115               	bnz	u14381
 33760  018CD4  0EF1               	movlw	-15
 33761  018CD6  50E3               	movf	plusw1,w,c
 33762  018CD8  E112               	bnz	u14381
 33763  018CDA  0EF2               	movlw	-14
 33764  018CDC  50E3               	movf	plusw1,w,c
 33765  018CDE  E10F               	bnz	u14381
 33766  018CE0  0EF3               	movlw	-13
 33767  018CE2  50E3               	movf	plusw1,w,c
 33768  018CE4  E10C               	bnz	u14381
 33769  018CE6  0EF4               	movlw	-12
 33770  018CE8  50E3               	movf	plusw1,w,c
 33771  018CEA  E109               	bnz	u14381
 33772  018CEC  0EF5               	movlw	-11
 33773  018CEE  50E3               	movf	plusw1,w,c
 33774  018CF0  E106               	bnz	u14381
 33775  018CF2  0EF6               	movlw	-10
 33776  018CF4  50E3               	movf	plusw1,w,c
 33777  018CF6  E103               	bnz	u14381
 33778  018CF8  0EF7               	movlw	-9
 33779  018CFA  50E3               	movf	plusw1,w,c
 33780  018CFC  A4D8               	btfss	status,2,c
 33781  018CFE                     u14381:
 33782  018CFE  D6D4               	goto	l15362
 33783                           
 33784                           ;stkvar	_p @ sp[(-18)+16]
 33785  018D00  0EFF               	movlw	-1
 33786  018D02  BEE3               	btfsc	plusw1,7,c
 33787  018D04  D007               	goto	u14390
 33788  018D06  0EFF               	movlw	-1
 33789  018D08  50E3               	movf	plusw1,w,c
 33790  018D0A  E103               	bnz	u14391
 33791  018D0C  0EFE               	movlw	-2
 33792  018D0E  04E3               	decf	plusw1,w,c
 33793  018D10  B0D8               	btfsc	status,0,c
 33794  018D12                     u14391:
 33795  018D12  D6CA               	goto	l15362
 33796  018D14                     u14390:
 33797                           
 33798                           ;stkvar	_w @ sp[(-18)+14]
 33799  018D14  0EFD               	movlw	-3
 33800  018D16  BEE3               	btfsc	plusw1,7,c
 33801  018D18  D009               	goto	u14410
 33802  018D1A  0EFD               	movlw	-3
 33803  018D1C  50E3               	movf	plusw1,w,c
 33804  018D1E  E104               	bnz	u14400
 33805  018D20  0EFC               	movlw	-4
 33806  018D22  04E3               	decf	plusw1,w,c
 33807  018D24  A0D8               	btfss	status,0,c
 33808  018D26  D002               	goto	u14410
 33809  018D28                     u14400:
 33810  018D28  B24E               	btfsc	_flags^0,1,c
 33811  018D2A  D6BE               	goto	l15362
 33812  018D2C                     u14410:
 33813                           
 33814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 33815                           ;stkvar	_s @ sp[(-18)+12]
 33816  018D2C  0EFA               	movlw	-6
 33817  018D2E  006F FF8C  F02A    	movff	plusw1,btemp
 33818  018D34  0EFB               	movlw	-5
 33819  018D36  50E3               	movf	plusw1,w,c
 33820  018D38  102A               	iorwf	btemp^0,w,c
 33821  018D3A  A4D8               	btfss	status,2,c
 33822  018D3C  D002               	goto	u14430
 33823  018D3E  A44E               	btfss	_flags^0,2,c
 33824  018D40  D033               	goto	l15396
 33825  018D42                     u14430:
 33826                           
 33827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 33828                           ;stkvar	_i @ sp[(-18)+10]
 33829  018D42  50E1               	movf	fsr1l,w,c
 33830  018D44  0FF8               	addlw	-8
 33831  018D46  6ED9               	movwf	fsr2l,c
 33832  018D48  50E2               	movf	fsr1h,w,c
 33833  018D4A  6EDA               	movwf	fsr2h,c
 33834  018D4C  0EFF               	movlw	255
 33835  018D4E  22DA               	addwfc	fsr2h,f,c
 33836  018D50  06DE               	decf	postinc2,f,c
 33837  018D52  0E00               	movlw	0
 33838  018D54  5ADD               	subwfb	postdec2,f,c
 33839                           
 33840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 33841                           ;stkvar	_s @ sp[(-18)+12]
 33842  018D56  0EFA               	movlw	-6
 33843  018D58  006F FF8C  F02A    	movff	plusw1,btemp
 33844  018D5E  0EFB               	movlw	-5
 33845  018D60  50E3               	movf	plusw1,w,c
 33846  018D62  102A               	iorwf	btemp^0,w,c
 33847  018D64  A4D8               	btfss	status,2,c
 33848  018D66  D002               	goto	l15392
 33849  018D68  0E2B               	movlw	43
 33850  018D6A  D001               	goto	L38
 33851  018D6C                     l15392:
 33852  018D6C  0E2D               	movlw	45
 33853  018D6E                     L38:
 33854  018D6E  6E34               	movwf	(btemp+10)^0,c
 33855  018D70  0E00               	movlw	0
 33856  018D72  6E35               	movwf	(btemp+11)^0,c
 33857                           
 33858                           ;stkvar	_dtoa$6809 @ sp[(-18)+0]
 33859  018D74  0EEE               	movlw	-18
 33860  018D76  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33861  018D7C  0EEF               	movlw	-17
 33862  018D7E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33863                           
 33864                           ;stkvar	_dtoa$6809 @ sp[(-18)+0]
 33865                           ;stkvar	_i @ sp[(-18)+10]
 33866  018D84  0EF8               	movlw	-8
 33867  018D86  006F FF8C  F034    	movff	plusw1,btemp+10
 33868  018D8C  0EF9               	movlw	-7
 33869  018D8E  006F FF8C  F035    	movff	plusw1,btemp+11
 33870  018D94  0E54               	movlw	low _dbuf
 33871  018D96  2434               	addwf	(btemp+10)^0,w,c
 33872  018D98  6ED9               	movwf	fsr2l,c
 33873  018D9A  0E03               	movlw	high _dbuf
 33874  018D9C  2035               	addwfc	(btemp+11)^0,w,c
 33875  018D9E  6EDA               	movwf	fsr2h,c
 33876  018DA0  0EEE               	movlw	-18
 33877  018DA2  006F FF8F FFDF     	movff	plusw1,indf2
 33878  018DA8                     l15396:
 33879                           
 33880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 33881                           ;stkvar	_w @ sp[(-18)+14]
 33882  018DA8  0EFC               	movlw	-4
 33883  018DAA  006F FF8F FFE6     	movff	plusw1,postinc1
 33884  018DB0  006F FF8F FFE6     	movff	plusw1,postinc1
 33885                           
 33886                           ;stkvar	_i @ sp[(-20)+10]
 33887  018DB6  0E54               	movlw	low _dbuf
 33888  018DB8  6E34               	movwf	(btemp+10)^0,c
 33889  018DBA  0E03               	movlw	high _dbuf
 33890  018DBC  6E35               	movwf	(btemp+11)^0,c
 33891  018DBE  0EF6               	movlw	-10
 33892  018DC0  50E3               	movf	plusw1,w,c
 33893  018DC2  2634               	addwf	(btemp+10)^0,f,c
 33894  018DC4  0EF7               	movlw	-9
 33895  018DC6  50E3               	movf	plusw1,w,c
 33896  018DC8  2235               	addwfc	(btemp+11)^0,f,c
 33897  018DCA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 33898  018DD0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 33899                           
 33900                           ;stkvar	_fp @ sp[(-22)+-2]
 33901  018DD6  0EE8               	movlw	-24
 33902  018DD8  006F FF8F FFE6     	movff	plusw1,postinc1
 33903  018DDE  006F FF8F FFE6     	movff	plusw1,postinc1
 33904  018DE4  EC03  F0F9         	call	_pad	;wreg free
 33905                           
 33906                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 33907  018DE8  0EE4               	movlw	228
 33908  018DEA  26E1               	addwf	fsr1l,f,c
 33909  018DEC  0EFF               	movlw	255
 33910  018DEE  22E2               	addwfc	fsr1h,f,c
 33911  018DF0  0012               	return		;funcret
 33912  018DF2                     __end_of_dtoa:
 33913                           	opt callstack 0
 33914                           
 33915 ;; *************** function _abs *****************
 33916 ;; Defined at:
 33917 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 33918 ;; Parameters:    Size  Location     Type
 33919 ;;  a               2  [STACK] int 
 33920 ;; Auto vars:     Size  Location     Type
 33921 ;;		None
 33922 ;; Return value:  Size  Location     Type
 33923 ;;                  2  [STACK] int 
 33924 ;; Registers used:
 33925 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 33926 ;; Tracked objects:
 33927 ;;		On entry : 0/3
 33928 ;;		On exit  : 0/0
 33929 ;;		Unchanged: 0/0
 33930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33935 ;;Total ram usage:        0 bytes
 33936 ;; Hardware stack levels used:    1
 33937 ;; Hardware stack levels required when called:   15
 33938 ;; This function calls:
 33939 ;;		Nothing
 33940 ;; This function is called by:
 33941 ;;		_dtoa
 33942 ;; This function uses a reentrant model
 33943 ;;
 33944                           
 33945                           	psect	text113
 33946  00160A                     __ptext113:
 33947                           	opt callstack 0
 33948  00160A                     _abs:
 33949                           	opt callstack 0
 33950                           
 33951                           ;stkvar	_a @ sp[(0)+-2]
 33952                           
 33953                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33954                           ;incstack = 0
 33955 ;; hardware stack exceeded
 33956  00160A  0EFF               	movlw	-1
 33957  00160C  BEE3               	btfsc	plusw1,7,c
 33958  00160E  D007               	goto	u7690
 33959  001610  0EFF               	movlw	-1
 33960  001612  50E3               	movf	plusw1,w,c
 33961  001614  E112               	bnz	l10020
 33962  001616  0EFE               	movlw	-2
 33963  001618  04E3               	decf	plusw1,w,c
 33964  00161A  B0D8               	btfsc	status,0,c
 33965  00161C  D00E               	goto	l10020
 33966  00161E                     u7690:
 33967                           
 33968                           ;stkvar	_a @ sp[(0)+-2]
 33969  00161E  0EFE               	movlw	-2
 33970  001620  006F FF8C  F02A    	movff	plusw1,btemp
 33971  001626  1E2A               	comf	btemp^0,f,c
 33972  001628  0EFF               	movlw	-1
 33973  00162A  006F FF8C  F02B    	movff	plusw1,btemp+1
 33974  001630  1E2B               	comf	(btemp+1)^0,f,c
 33975  001632  2A2A               	incf	btemp^0,f,c
 33976  001634  B4D8               	btfsc	status,2,c
 33977  001636  2A2B               	incf	(btemp+1)^0,f,c
 33978  001638  D008               	goto	l3397
 33979  00163A                     l10020:
 33980                           
 33981                           ;stkvar	_a @ sp[(0)+-2]
 33982  00163A  0EFE               	movlw	-2
 33983  00163C  006F FF8C  F02A    	movff	plusw1,btemp
 33984  001642  0EFF               	movlw	-1
 33985  001644  006F FF8C  F02B    	movff	plusw1,btemp+1
 33986  00164A                     l3397:
 33987                           
 33988                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 33989  00164A  52E5               	movf	postdec1,f,c
 33990  00164C  52E5               	movf	postdec1,f,c
 33991  00164E  0012               	return		;funcret
 33992  001650                     __end_of_abs:
 33993                           	opt callstack 0
 33994                           
 33995 ;; *************** function ___aomod *****************
 33996 ;; Defined at:
 33997 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 33998 ;; Parameters:    Size  Location     Type
 33999 ;;  dividend        8  [STACK] long long 
 34000 ;;  divisor         8  [STACK] long long 
 34001 ;; Auto vars:     Size  Location     Type
 34002 ;;  sign            1  [STACK] unsigned char 
 34003 ;;  counter         1  [STACK] unsigned char 
 34004 ;; Return value:  Size  Location     Type
 34005 ;;                  8  [STACK] long long 
 34006 ;; Registers used:
 34007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 34008 ;; Tracked objects:
 34009 ;;		On entry : 0/0
 34010 ;;		On exit  : 0/0
 34011 ;;		Unchanged: 0/0
 34012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34017 ;;Total ram usage:        0 bytes
 34018 ;; Hardware stack levels used:    1
 34019 ;; Hardware stack levels required when called:   15
 34020 ;; This function calls:
 34021 ;;		Nothing
 34022 ;; This function is called by:
 34023 ;;		_dtoa
 34024 ;;		___secs_to_tm
 34025 ;;		_rule_to_secs
 34026 ;;		___year_to_secs
 34027 ;; This function uses a reentrant model
 34028 ;;
 34029                           
 34030                           	psect	text114
 34031  01C208                     __ptext114:
 34032                           	opt callstack 0
 34033  01C208                     ___aomod:
 34034                           	opt callstack 0
 34035                           
 34036                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 34037  01C208  52E6               	movf	postinc1,f,c
 34038  01C20A  52E6               	movf	postinc1,f,c
 34039                           
 34040                           ;stkvar	_sign @ sp[(-2)+0]
 34041                           
 34042                           ;incstack = 0
 34043 ;; hardware stack exceeded
 34044  01C20C  0EFE               	movlw	-2
 34045  01C20E  6AE3               	clrf	plusw1,c
 34046                           
 34047                           ;stkvar	_dividend @ sp[(-2)+-8]
 34048  01C210  0EFD               	movlw	-3
 34049  01C212  AEE3               	btfss	plusw1,7,c
 34050  01C214  D028               	goto	l10204
 34051                           
 34052                           ;stkvar	_dividend @ sp[(-2)+-8]
 34053                           ;stkvar	_dividend @ sp[(-2)+-8]
 34054  01C216  0EF6               	movlw	-10
 34055  01C218  6CE3               	negf	plusw1,c
 34056  01C21A  0EF7               	movlw	-9
 34057  01C21C  1EE3               	comf	plusw1,f,c
 34058  01C21E  0EF8               	movlw	-8
 34059  01C220  1EE3               	comf	plusw1,f,c
 34060  01C222  0EF9               	movlw	-7
 34061  01C224  1EE3               	comf	plusw1,f,c
 34062  01C226  0EFA               	movlw	-6
 34063  01C228  1EE3               	comf	plusw1,f,c
 34064  01C22A  0EFB               	movlw	-5
 34065  01C22C  1EE3               	comf	plusw1,f,c
 34066  01C22E  0EFC               	movlw	-4
 34067  01C230  1EE3               	comf	plusw1,f,c
 34068  01C232  0EFD               	movlw	-3
 34069  01C234  1EE3               	comf	plusw1,f,c
 34070  01C236  E314               	bnc	u8180
 34071  01C238  0EF7               	movlw	-9
 34072  01C23A  2AE3               	incf	plusw1,f,c
 34073  01C23C  E311               	bnc	u8180
 34074  01C23E  0EF8               	movlw	-8
 34075  01C240  2AE3               	incf	plusw1,f,c
 34076  01C242  E30E               	bnc	u8180
 34077  01C244  0EF9               	movlw	-7
 34078  01C246  2AE3               	incf	plusw1,f,c
 34079  01C248  E30B               	bnc	u8180
 34080  01C24A  0EFA               	movlw	-6
 34081  01C24C  2AE3               	incf	plusw1,f,c
 34082  01C24E  E308               	bnc	u8180
 34083  01C250  0EFB               	movlw	-5
 34084  01C252  2AE3               	incf	plusw1,f,c
 34085  01C254  E305               	bnc	u8180
 34086  01C256  0EFC               	movlw	-4
 34087  01C258  2AE3               	incf	plusw1,f,c
 34088  01C25A  E302               	bnc	u8180
 34089  01C25C  0EFD               	movlw	-3
 34090  01C25E  2AE3               	incf	plusw1,f,c
 34091  01C260                     u8180:
 34092                           
 34093                           ;stkvar	_sign @ sp[(-2)+0]
 34094  01C260  0EFE               	movlw	-2
 34095  01C262  6AE3               	clrf	plusw1,c
 34096  01C264  2AE3               	incf	plusw1,f,c
 34097  01C266                     l10204:
 34098                           
 34099                           ;stkvar	_divisor @ sp[(-2)+-16]
 34100  01C266  0EF5               	movlw	-11
 34101  01C268  AEE3               	btfss	plusw1,7,c
 34102  01C26A  D025               	goto	u8200
 34103                           
 34104                           ;stkvar	_divisor @ sp[(-2)+-16]
 34105                           ;stkvar	_divisor @ sp[(-2)+-16]
 34106  01C26C  0EEE               	movlw	-18
 34107  01C26E  6CE3               	negf	plusw1,c
 34108  01C270  0EEF               	movlw	-17
 34109  01C272  1EE3               	comf	plusw1,f,c
 34110  01C274  0EF0               	movlw	-16
 34111  01C276  1EE3               	comf	plusw1,f,c
 34112  01C278  0EF1               	movlw	-15
 34113  01C27A  1EE3               	comf	plusw1,f,c
 34114  01C27C  0EF2               	movlw	-14
 34115  01C27E  1EE3               	comf	plusw1,f,c
 34116  01C280  0EF3               	movlw	-13
 34117  01C282  1EE3               	comf	plusw1,f,c
 34118  01C284  0EF4               	movlw	-12
 34119  01C286  1EE3               	comf	plusw1,f,c
 34120  01C288  0EF5               	movlw	-11
 34121  01C28A  1EE3               	comf	plusw1,f,c
 34122  01C28C  E314               	bnc	u8200
 34123  01C28E  0EEF               	movlw	-17
 34124  01C290  2AE3               	incf	plusw1,f,c
 34125  01C292  E311               	bnc	u8200
 34126  01C294  0EF0               	movlw	-16
 34127  01C296  2AE3               	incf	plusw1,f,c
 34128  01C298  E30E               	bnc	u8200
 34129  01C29A  0EF1               	movlw	-15
 34130  01C29C  2AE3               	incf	plusw1,f,c
 34131  01C29E  E30B               	bnc	u8200
 34132  01C2A0  0EF2               	movlw	-14
 34133  01C2A2  2AE3               	incf	plusw1,f,c
 34134  01C2A4  E308               	bnc	u8200
 34135  01C2A6  0EF3               	movlw	-13
 34136  01C2A8  2AE3               	incf	plusw1,f,c
 34137  01C2AA  E305               	bnc	u8200
 34138  01C2AC  0EF4               	movlw	-12
 34139  01C2AE  2AE3               	incf	plusw1,f,c
 34140  01C2B0  E302               	bnc	u8200
 34141  01C2B2  0EF5               	movlw	-11
 34142  01C2B4  2AE3               	incf	plusw1,f,c
 34143  01C2B6                     u8200:
 34144                           
 34145                           ;stkvar	_divisor @ sp[(-2)+-16]
 34146  01C2B6  0EEE               	movlw	-18
 34147  01C2B8  50E3               	movf	plusw1,w,c
 34148  01C2BA  E116               	bnz	u8210
 34149  01C2BC  0EEF               	movlw	-17
 34150  01C2BE  50E3               	movf	plusw1,w,c
 34151  01C2C0  E113               	bnz	u8210
 34152  01C2C2  0EF0               	movlw	-16
 34153  01C2C4  50E3               	movf	plusw1,w,c
 34154  01C2C6  E110               	bnz	u8210
 34155  01C2C8  0EF1               	movlw	-15
 34156  01C2CA  50E3               	movf	plusw1,w,c
 34157  01C2CC  E10D               	bnz	u8210
 34158  01C2CE  0EF2               	movlw	-14
 34159  01C2D0  50E3               	movf	plusw1,w,c
 34160  01C2D2  E10A               	bnz	u8210
 34161  01C2D4  0EF3               	movlw	-13
 34162  01C2D6  50E3               	movf	plusw1,w,c
 34163  01C2D8  E107               	bnz	u8210
 34164  01C2DA  0EF4               	movlw	-12
 34165  01C2DC  50E3               	movf	plusw1,w,c
 34166  01C2DE  E104               	bnz	u8210
 34167  01C2E0  0EF5               	movlw	-11
 34168  01C2E2  50E3               	movf	plusw1,w,c
 34169  01C2E4  B4D8               	btfsc	status,2,c
 34170  01C2E6  D075               	goto	u8240
 34171  01C2E8                     u8210:
 34172                           
 34173                           ;stkvar	_counter @ sp[(-2)+1]
 34174  01C2E8  0EFF               	movlw	-1
 34175  01C2EA  6AE3               	clrf	plusw1,c
 34176  01C2EC  D012               	goto	L39
 34177  01C2EE                     l10212:
 34178                           
 34179                           ;stkvar	_divisor @ sp[(-2)+-16]
 34180  01C2EE  90D8               	bcf	status,0,c
 34181  01C2F0  0EEE               	movlw	-18
 34182  01C2F2  36E3               	rlcf	plusw1,f,c
 34183  01C2F4  0EEF               	movlw	-17
 34184  01C2F6  36E3               	rlcf	plusw1,f,c
 34185  01C2F8  0EF0               	movlw	-16
 34186  01C2FA  36E3               	rlcf	plusw1,f,c
 34187  01C2FC  0EF1               	movlw	-15
 34188  01C2FE  36E3               	rlcf	plusw1,f,c
 34189  01C300  0EF2               	movlw	-14
 34190  01C302  36E3               	rlcf	plusw1,f,c
 34191  01C304  0EF3               	movlw	-13
 34192  01C306  36E3               	rlcf	plusw1,f,c
 34193  01C308  0EF4               	movlw	-12
 34194  01C30A  36E3               	rlcf	plusw1,f,c
 34195  01C30C  0EF5               	movlw	-11
 34196  01C30E  36E3               	rlcf	plusw1,f,c
 34197                           
 34198                           ;stkvar	_counter @ sp[(-2)+1]
 34199  01C310  0EFF               	movlw	-1
 34200  01C312                     L39:
 34201  01C312  2AE3               	incf	plusw1,f,c
 34202                           
 34203                           ;stkvar	_divisor @ sp[(-2)+-16]
 34204  01C314  0EF5               	movlw	-11
 34205  01C316  AEE3               	btfss	plusw1,7,c
 34206  01C318  D7EA               	goto	l10212
 34207  01C31A                     u8220:
 34208                           
 34209                           ;stkvar	_divisor @ sp[(-2)+-16]
 34210                           ;stkvar	_dividend @ sp[(-2)+-8]
 34211  01C31A  50E1               	movf	fsr1l,w,c
 34212  01C31C  0FF6               	addlw	-10
 34213  01C31E  6ED9               	movwf	fsr2l,c
 34214  01C320  50E2               	movf	fsr1h,w,c
 34215  01C322  6EDA               	movwf	fsr2h,c
 34216  01C324  0EFF               	movlw	255
 34217  01C326  22DA               	addwfc	fsr2h,f,c
 34218  01C328  0EEE               	movlw	-18
 34219  01C32A  50E3               	movf	plusw1,w,c
 34220  01C32C  5CDE               	subwf	postinc2,w,c
 34221  01C32E  0EEF               	movlw	-17
 34222  01C330  50E3               	movf	plusw1,w,c
 34223  01C332  58DE               	subwfb	postinc2,w,c
 34224  01C334  0EF0               	movlw	-16
 34225  01C336  50E3               	movf	plusw1,w,c
 34226  01C338  58DE               	subwfb	postinc2,w,c
 34227  01C33A  0EF1               	movlw	-15
 34228  01C33C  50E3               	movf	plusw1,w,c
 34229  01C33E  58DE               	subwfb	postinc2,w,c
 34230  01C340  0EF2               	movlw	-14
 34231  01C342  50E3               	movf	plusw1,w,c
 34232  01C344  58DE               	subwfb	postinc2,w,c
 34233  01C346  0EF3               	movlw	-13
 34234  01C348  50E3               	movf	plusw1,w,c
 34235  01C34A  58DE               	subwfb	postinc2,w,c
 34236  01C34C  0EF4               	movlw	-12
 34237  01C34E  50E3               	movf	plusw1,w,c
 34238  01C350  58DE               	subwfb	postinc2,w,c
 34239  01C352  0EF5               	movlw	-11
 34240  01C354  50E3               	movf	plusw1,w,c
 34241  01C356  58DE               	subwfb	postinc2,w,c
 34242  01C358  A0D8               	btfss	status,0,c
 34243  01C35A  D01F               	goto	l10220
 34244                           
 34245                           ;stkvar	_divisor @ sp[(-2)+-16]
 34246                           ;stkvar	_dividend @ sp[(-2)+-8]
 34247  01C35C  50E1               	movf	fsr1l,w,c
 34248  01C35E  0FF6               	addlw	-10
 34249  01C360  6ED9               	movwf	fsr2l,c
 34250  01C362  50E2               	movf	fsr1h,w,c
 34251  01C364  6EDA               	movwf	fsr2h,c
 34252  01C366  0EFF               	movlw	255
 34253  01C368  22DA               	addwfc	fsr2h,f,c
 34254  01C36A  0EEE               	movlw	-18
 34255  01C36C  50E3               	movf	plusw1,w,c
 34256  01C36E  5EDE               	subwf	postinc2,f,c
 34257  01C370  0EEF               	movlw	-17
 34258  01C372  50E3               	movf	plusw1,w,c
 34259  01C374  5ADE               	subwfb	postinc2,f,c
 34260  01C376  0EF0               	movlw	-16
 34261  01C378  50E3               	movf	plusw1,w,c
 34262  01C37A  5ADE               	subwfb	postinc2,f,c
 34263  01C37C  0EF1               	movlw	-15
 34264  01C37E  50E3               	movf	plusw1,w,c
 34265  01C380  5ADE               	subwfb	postinc2,f,c
 34266  01C382  0EF2               	movlw	-14
 34267  01C384  50E3               	movf	plusw1,w,c
 34268  01C386  5ADE               	subwfb	postinc2,f,c
 34269  01C388  0EF3               	movlw	-13
 34270  01C38A  50E3               	movf	plusw1,w,c
 34271  01C38C  5ADE               	subwfb	postinc2,f,c
 34272  01C38E  0EF4               	movlw	-12
 34273  01C390  50E3               	movf	plusw1,w,c
 34274  01C392  5ADE               	subwfb	postinc2,f,c
 34275  01C394  0EF5               	movlw	-11
 34276  01C396  50E3               	movf	plusw1,w,c
 34277  01C398  5ADE               	subwfb	postinc2,f,c
 34278  01C39A                     l10220:
 34279                           
 34280                           ;stkvar	_divisor @ sp[(-2)+-16]
 34281  01C39A  90D8               	bcf	status,0,c
 34282  01C39C  0EF5               	movlw	-11
 34283  01C39E  32E3               	rrcf	plusw1,f,c
 34284  01C3A0  0EF4               	movlw	-12
 34285  01C3A2  32E3               	rrcf	plusw1,f,c
 34286  01C3A4  0EF3               	movlw	-13
 34287  01C3A6  32E3               	rrcf	plusw1,f,c
 34288  01C3A8  0EF2               	movlw	-14
 34289  01C3AA  32E3               	rrcf	plusw1,f,c
 34290  01C3AC  0EF1               	movlw	-15
 34291  01C3AE  32E3               	rrcf	plusw1,f,c
 34292  01C3B0  0EF0               	movlw	-16
 34293  01C3B2  32E3               	rrcf	plusw1,f,c
 34294  01C3B4  0EEF               	movlw	-17
 34295  01C3B6  32E3               	rrcf	plusw1,f,c
 34296  01C3B8  0EEE               	movlw	-18
 34297  01C3BA  32E3               	rrcf	plusw1,f,c
 34298                           
 34299                           ;stkvar	_counter @ sp[(-2)+1]
 34300  01C3BC  0EFF               	movlw	-1
 34301  01C3BE  50E3               	movf	plusw1,w,c
 34302  01C3C0  6E2A               	movwf	btemp^0,c
 34303  01C3C2  0E01               	movlw	1
 34304  01C3C4  5E2A               	subwf	btemp^0,f,c
 34305  01C3C6  0EFF               	movlw	-1
 34306  01C3C8  0060  F0AB  FFE3   	movff	btemp,plusw1
 34307  01C3CE  A4D8               	btfss	status,2,c
 34308  01C3D0  D7A4               	goto	u8220
 34309  01C3D2                     u8240:
 34310                           
 34311                           ;stkvar	_sign @ sp[(-2)+0]
 34312  01C3D2  0EFE               	movlw	-2
 34313  01C3D4  50E3               	movf	plusw1,w,c
 34314  01C3D6  B4D8               	btfsc	status,2,c
 34315  01C3D8  D025               	goto	u8260
 34316                           
 34317                           ;stkvar	_dividend @ sp[(-2)+-8]
 34318                           ;stkvar	_dividend @ sp[(-2)+-8]
 34319  01C3DA  0EF6               	movlw	-10
 34320  01C3DC  6CE3               	negf	plusw1,c
 34321  01C3DE  0EF7               	movlw	-9
 34322  01C3E0  1EE3               	comf	plusw1,f,c
 34323  01C3E2  0EF8               	movlw	-8
 34324  01C3E4  1EE3               	comf	plusw1,f,c
 34325  01C3E6  0EF9               	movlw	-7
 34326  01C3E8  1EE3               	comf	plusw1,f,c
 34327  01C3EA  0EFA               	movlw	-6
 34328  01C3EC  1EE3               	comf	plusw1,f,c
 34329  01C3EE  0EFB               	movlw	-5
 34330  01C3F0  1EE3               	comf	plusw1,f,c
 34331  01C3F2  0EFC               	movlw	-4
 34332  01C3F4  1EE3               	comf	plusw1,f,c
 34333  01C3F6  0EFD               	movlw	-3
 34334  01C3F8  1EE3               	comf	plusw1,f,c
 34335  01C3FA  E314               	bnc	u8260
 34336  01C3FC  0EF7               	movlw	-9
 34337  01C3FE  2AE3               	incf	plusw1,f,c
 34338  01C400  E311               	bnc	u8260
 34339  01C402  0EF8               	movlw	-8
 34340  01C404  2AE3               	incf	plusw1,f,c
 34341  01C406  E30E               	bnc	u8260
 34342  01C408  0EF9               	movlw	-7
 34343  01C40A  2AE3               	incf	plusw1,f,c
 34344  01C40C  E30B               	bnc	u8260
 34345  01C40E  0EFA               	movlw	-6
 34346  01C410  2AE3               	incf	plusw1,f,c
 34347  01C412  E308               	bnc	u8260
 34348  01C414  0EFB               	movlw	-5
 34349  01C416  2AE3               	incf	plusw1,f,c
 34350  01C418  E305               	bnc	u8260
 34351  01C41A  0EFC               	movlw	-4
 34352  01C41C  2AE3               	incf	plusw1,f,c
 34353  01C41E  E302               	bnc	u8260
 34354  01C420  0EFD               	movlw	-3
 34355  01C422  2AE3               	incf	plusw1,f,c
 34356  01C424                     u8260:
 34357                           
 34358                           ;stkvar	_dividend @ sp[(-2)+-8]
 34359  01C424  0EF6               	movlw	246
 34360  01C426  24E1               	addwf	fsr1l,w,c
 34361  01C428  6ED9               	movwf	fsr2l,c
 34362  01C42A  0EFF               	movlw	255
 34363  01C42C  20E2               	addwfc	fsr1h,w,c
 34364  01C42E  6EDA               	movwf	fsr2h,c
 34365                           
 34366                           ;stkvar	?___aomod @ sp[(-2)+-8]
 34367  01C430  0E08               	movlw	8
 34368  01C432  6E2A               	movwf	btemp^0,c
 34369  01C434  0EF6               	movlw	-10
 34370  01C436                     us827999:
 34371  01C436  006F FF7B FFE3     	movff	postinc2,plusw1
 34372  01C43C  28E8               	incf	wreg,w,c
 34373  01C43E  2E2A               	decfsz	btemp^0,f,c
 34374  01C440  D7FA               	bra	us827999
 34375                           
 34376                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 34377  01C442  52E5               	movf	postdec1,f,c
 34378  01C444  52E5               	movf	postdec1,f,c
 34379  01C446  0012               	return		;funcret
 34380  01C448                     __end_of___aomod:
 34381                           	opt callstack 0
 34382                           
 34383 ;; *************** function ___aodiv *****************
 34384 ;; Defined at:
 34385 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 34386 ;; Parameters:    Size  Location     Type
 34387 ;;  dividend        8  [STACK] long long 
 34388 ;;  divisor         8  [STACK] long long 
 34389 ;; Auto vars:     Size  Location     Type
 34390 ;;  quotient        8  [STACK] long long 
 34391 ;;  sign            1  [STACK] unsigned char 
 34392 ;;  counter         1  [STACK] unsigned char 
 34393 ;; Return value:  Size  Location     Type
 34394 ;;                  8  [STACK] long long 
 34395 ;; Registers used:
 34396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 34397 ;; Tracked objects:
 34398 ;;		On entry : 0/0
 34399 ;;		On exit  : 0/0
 34400 ;;		Unchanged: 0/0
 34401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34406 ;;Total ram usage:        0 bytes
 34407 ;; Hardware stack levels used:    1
 34408 ;; Hardware stack levels required when called:   15
 34409 ;; This function calls:
 34410 ;;		Nothing
 34411 ;; This function is called by:
 34412 ;;		_dtoa
 34413 ;;		___secs_to_tm
 34414 ;;		___secs_to_zone
 34415 ;;		___year_to_secs
 34416 ;; This function uses a reentrant model
 34417 ;;
 34418                           
 34419                           	psect	text115
 34420  01B868                     __ptext115:
 34421                           	opt callstack 0
 34422  01B868                     ___aodiv:
 34423                           	opt callstack 0
 34424                           
 34425                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 34426  01B868  0E0A               	movlw	10
 34427  01B86A  26E1               	addwf	fsr1l,f,c
 34428  01B86C  0E00               	movlw	0
 34429  01B86E  22E2               	addwfc	fsr1h,f,c
 34430                           
 34431                           ;stkvar	_sign @ sp[(-10)+8]
 34432                           
 34433                           ;incstack = 0
 34434 ;; hardware stack exceeded
 34435  01B870  0EFE               	movlw	-2
 34436  01B872  6AE3               	clrf	plusw1,c
 34437                           
 34438                           ;stkvar	_divisor @ sp[(-10)+-16]
 34439  01B874  0EED               	movlw	-19
 34440  01B876  AEE3               	btfss	plusw1,7,c
 34441  01B878  D028               	goto	l10160
 34442                           
 34443                           ;stkvar	_divisor @ sp[(-10)+-16]
 34444                           ;stkvar	_divisor @ sp[(-10)+-16]
 34445  01B87A  0EE6               	movlw	-26
 34446  01B87C  6CE3               	negf	plusw1,c
 34447  01B87E  0EE7               	movlw	-25
 34448  01B880  1EE3               	comf	plusw1,f,c
 34449  01B882  0EE8               	movlw	-24
 34450  01B884  1EE3               	comf	plusw1,f,c
 34451  01B886  0EE9               	movlw	-23
 34452  01B888  1EE3               	comf	plusw1,f,c
 34453  01B88A  0EEA               	movlw	-22
 34454  01B88C  1EE3               	comf	plusw1,f,c
 34455  01B88E  0EEB               	movlw	-21
 34456  01B890  1EE3               	comf	plusw1,f,c
 34457  01B892  0EEC               	movlw	-20
 34458  01B894  1EE3               	comf	plusw1,f,c
 34459  01B896  0EED               	movlw	-19
 34460  01B898  1EE3               	comf	plusw1,f,c
 34461  01B89A  E314               	bnc	u8060
 34462  01B89C  0EE7               	movlw	-25
 34463  01B89E  2AE3               	incf	plusw1,f,c
 34464  01B8A0  E311               	bnc	u8060
 34465  01B8A2  0EE8               	movlw	-24
 34466  01B8A4  2AE3               	incf	plusw1,f,c
 34467  01B8A6  E30E               	bnc	u8060
 34468  01B8A8  0EE9               	movlw	-23
 34469  01B8AA  2AE3               	incf	plusw1,f,c
 34470  01B8AC  E30B               	bnc	u8060
 34471  01B8AE  0EEA               	movlw	-22
 34472  01B8B0  2AE3               	incf	plusw1,f,c
 34473  01B8B2  E308               	bnc	u8060
 34474  01B8B4  0EEB               	movlw	-21
 34475  01B8B6  2AE3               	incf	plusw1,f,c
 34476  01B8B8  E305               	bnc	u8060
 34477  01B8BA  0EEC               	movlw	-20
 34478  01B8BC  2AE3               	incf	plusw1,f,c
 34479  01B8BE  E302               	bnc	u8060
 34480  01B8C0  0EED               	movlw	-19
 34481  01B8C2  2AE3               	incf	plusw1,f,c
 34482  01B8C4                     u8060:
 34483                           
 34484                           ;stkvar	_sign @ sp[(-10)+8]
 34485  01B8C4  0EFE               	movlw	-2
 34486  01B8C6  6AE3               	clrf	plusw1,c
 34487  01B8C8  2AE3               	incf	plusw1,f,c
 34488  01B8CA                     l10160:
 34489                           
 34490                           ;stkvar	_dividend @ sp[(-10)+-8]
 34491  01B8CA  0EF5               	movlw	-11
 34492  01B8CC  AEE3               	btfss	plusw1,7,c
 34493  01B8CE  D027               	goto	l10166
 34494                           
 34495                           ;stkvar	_dividend @ sp[(-10)+-8]
 34496                           ;stkvar	_dividend @ sp[(-10)+-8]
 34497  01B8D0  0EEE               	movlw	-18
 34498  01B8D2  6CE3               	negf	plusw1,c
 34499  01B8D4  0EEF               	movlw	-17
 34500  01B8D6  1EE3               	comf	plusw1,f,c
 34501  01B8D8  0EF0               	movlw	-16
 34502  01B8DA  1EE3               	comf	plusw1,f,c
 34503  01B8DC  0EF1               	movlw	-15
 34504  01B8DE  1EE3               	comf	plusw1,f,c
 34505  01B8E0  0EF2               	movlw	-14
 34506  01B8E2  1EE3               	comf	plusw1,f,c
 34507  01B8E4  0EF3               	movlw	-13
 34508  01B8E6  1EE3               	comf	plusw1,f,c
 34509  01B8E8  0EF4               	movlw	-12
 34510  01B8EA  1EE3               	comf	plusw1,f,c
 34511  01B8EC  0EF5               	movlw	-11
 34512  01B8EE  1EE3               	comf	plusw1,f,c
 34513  01B8F0  E314               	bnc	u8080
 34514  01B8F2  0EEF               	movlw	-17
 34515  01B8F4  2AE3               	incf	plusw1,f,c
 34516  01B8F6  E311               	bnc	u8080
 34517  01B8F8  0EF0               	movlw	-16
 34518  01B8FA  2AE3               	incf	plusw1,f,c
 34519  01B8FC  E30E               	bnc	u8080
 34520  01B8FE  0EF1               	movlw	-15
 34521  01B900  2AE3               	incf	plusw1,f,c
 34522  01B902  E30B               	bnc	u8080
 34523  01B904  0EF2               	movlw	-14
 34524  01B906  2AE3               	incf	plusw1,f,c
 34525  01B908  E308               	bnc	u8080
 34526  01B90A  0EF3               	movlw	-13
 34527  01B90C  2AE3               	incf	plusw1,f,c
 34528  01B90E  E305               	bnc	u8080
 34529  01B910  0EF4               	movlw	-12
 34530  01B912  2AE3               	incf	plusw1,f,c
 34531  01B914  E302               	bnc	u8080
 34532  01B916  0EF5               	movlw	-11
 34533  01B918  2AE3               	incf	plusw1,f,c
 34534  01B91A                     u8080:
 34535                           
 34536                           ;stkvar	_sign @ sp[(-10)+8]
 34537  01B91A  0EFE               	movlw	-2
 34538  01B91C  70E3               	btg	plusw1,0,c
 34539  01B91E                     l10166:
 34540                           
 34541                           ;stkvar	_quotient @ sp[(-10)+0]
 34542  01B91E  0E07               	movlw	7
 34543  01B920  6E2A               	movwf	btemp^0,c
 34544  01B922  0EF6               	movlw	-10
 34545  01B924                     u8091:
 34546  01B924  6AE3               	clrf	plusw1,c
 34547  01B926  2AE8               	incf	wreg,f,c
 34548  01B928  062A               	decf	btemp^0,f,c
 34549  01B92A  E2FC               	bc	u8091
 34550                           
 34551                           ;stkvar	_divisor @ sp[(-10)+-16]
 34552  01B92C  0EE6               	movlw	-26
 34553  01B92E  50E3               	movf	plusw1,w,c
 34554  01B930  E116               	bnz	u8100
 34555  01B932  0EE7               	movlw	-25
 34556  01B934  50E3               	movf	plusw1,w,c
 34557  01B936  E113               	bnz	u8100
 34558  01B938  0EE8               	movlw	-24
 34559  01B93A  50E3               	movf	plusw1,w,c
 34560  01B93C  E110               	bnz	u8100
 34561  01B93E  0EE9               	movlw	-23
 34562  01B940  50E3               	movf	plusw1,w,c
 34563  01B942  E10D               	bnz	u8100
 34564  01B944  0EEA               	movlw	-22
 34565  01B946  50E3               	movf	plusw1,w,c
 34566  01B948  E10A               	bnz	u8100
 34567  01B94A  0EEB               	movlw	-21
 34568  01B94C  50E3               	movf	plusw1,w,c
 34569  01B94E  E107               	bnz	u8100
 34570  01B950  0EEC               	movlw	-20
 34571  01B952  50E3               	movf	plusw1,w,c
 34572  01B954  E104               	bnz	u8100
 34573  01B956  0EED               	movlw	-19
 34574  01B958  50E3               	movf	plusw1,w,c
 34575  01B95A  B4D8               	btfsc	status,2,c
 34576  01B95C  D088               	goto	u8130
 34577  01B95E                     u8100:
 34578                           
 34579                           ;stkvar	_counter @ sp[(-10)+9]
 34580  01B95E  0EFF               	movlw	-1
 34581  01B960  6AE3               	clrf	plusw1,c
 34582  01B962  D012               	goto	L40
 34583  01B964                     l10172:
 34584                           
 34585                           ;stkvar	_divisor @ sp[(-10)+-16]
 34586  01B964  90D8               	bcf	status,0,c
 34587  01B966  0EE6               	movlw	-26
 34588  01B968  36E3               	rlcf	plusw1,f,c
 34589  01B96A  0EE7               	movlw	-25
 34590  01B96C  36E3               	rlcf	plusw1,f,c
 34591  01B96E  0EE8               	movlw	-24
 34592  01B970  36E3               	rlcf	plusw1,f,c
 34593  01B972  0EE9               	movlw	-23
 34594  01B974  36E3               	rlcf	plusw1,f,c
 34595  01B976  0EEA               	movlw	-22
 34596  01B978  36E3               	rlcf	plusw1,f,c
 34597  01B97A  0EEB               	movlw	-21
 34598  01B97C  36E3               	rlcf	plusw1,f,c
 34599  01B97E  0EEC               	movlw	-20
 34600  01B980  36E3               	rlcf	plusw1,f,c
 34601  01B982  0EED               	movlw	-19
 34602  01B984  36E3               	rlcf	plusw1,f,c
 34603                           
 34604                           ;stkvar	_counter @ sp[(-10)+9]
 34605  01B986  0EFF               	movlw	-1
 34606  01B988                     L40:
 34607  01B988  2AE3               	incf	plusw1,f,c
 34608                           
 34609                           ;stkvar	_divisor @ sp[(-10)+-16]
 34610  01B98A  0EED               	movlw	-19
 34611  01B98C  AEE3               	btfss	plusw1,7,c
 34612  01B98E  D7EA               	goto	l10172
 34613  01B990                     u8110:
 34614                           
 34615                           ;stkvar	_quotient @ sp[(-10)+0]
 34616  01B990  90D8               	bcf	status,0,c
 34617  01B992  0EF6               	movlw	-10
 34618  01B994  36E3               	rlcf	plusw1,f,c
 34619  01B996  0EF7               	movlw	-9
 34620  01B998  36E3               	rlcf	plusw1,f,c
 34621  01B99A  0EF8               	movlw	-8
 34622  01B99C  36E3               	rlcf	plusw1,f,c
 34623  01B99E  0EF9               	movlw	-7
 34624  01B9A0  36E3               	rlcf	plusw1,f,c
 34625  01B9A2  0EFA               	movlw	-6
 34626  01B9A4  36E3               	rlcf	plusw1,f,c
 34627  01B9A6  0EFB               	movlw	-5
 34628  01B9A8  36E3               	rlcf	plusw1,f,c
 34629  01B9AA  0EFC               	movlw	-4
 34630  01B9AC  36E3               	rlcf	plusw1,f,c
 34631  01B9AE  0EFD               	movlw	-3
 34632  01B9B0  36E3               	rlcf	plusw1,f,c
 34633                           
 34634                           ;stkvar	_divisor @ sp[(-10)+-16]
 34635                           ;stkvar	_dividend @ sp[(-10)+-8]
 34636  01B9B2  50E1               	movf	fsr1l,w,c
 34637  01B9B4  0FEE               	addlw	-18
 34638  01B9B6  6ED9               	movwf	fsr2l,c
 34639  01B9B8  50E2               	movf	fsr1h,w,c
 34640  01B9BA  6EDA               	movwf	fsr2h,c
 34641  01B9BC  0EFF               	movlw	255
 34642  01B9BE  22DA               	addwfc	fsr2h,f,c
 34643  01B9C0  0EE6               	movlw	-26
 34644  01B9C2  50E3               	movf	plusw1,w,c
 34645  01B9C4  5CDE               	subwf	postinc2,w,c
 34646  01B9C6  0EE7               	movlw	-25
 34647  01B9C8  50E3               	movf	plusw1,w,c
 34648  01B9CA  58DE               	subwfb	postinc2,w,c
 34649  01B9CC  0EE8               	movlw	-24
 34650  01B9CE  50E3               	movf	plusw1,w,c
 34651  01B9D0  58DE               	subwfb	postinc2,w,c
 34652  01B9D2  0EE9               	movlw	-23
 34653  01B9D4  50E3               	movf	plusw1,w,c
 34654  01B9D6  58DE               	subwfb	postinc2,w,c
 34655  01B9D8  0EEA               	movlw	-22
 34656  01B9DA  50E3               	movf	plusw1,w,c
 34657  01B9DC  58DE               	subwfb	postinc2,w,c
 34658  01B9DE  0EEB               	movlw	-21
 34659  01B9E0  50E3               	movf	plusw1,w,c
 34660  01B9E2  58DE               	subwfb	postinc2,w,c
 34661  01B9E4  0EEC               	movlw	-20
 34662  01B9E6  50E3               	movf	plusw1,w,c
 34663  01B9E8  58DE               	subwfb	postinc2,w,c
 34664  01B9EA  0EED               	movlw	-19
 34665  01B9EC  50E3               	movf	plusw1,w,c
 34666  01B9EE  58DE               	subwfb	postinc2,w,c
 34667  01B9F0  A0D8               	btfss	status,0,c
 34668  01B9F2  D021               	goto	l10184
 34669                           
 34670                           ;stkvar	_divisor @ sp[(-10)+-16]
 34671                           ;stkvar	_dividend @ sp[(-10)+-8]
 34672  01B9F4  50E1               	movf	fsr1l,w,c
 34673  01B9F6  0FEE               	addlw	-18
 34674  01B9F8  6ED9               	movwf	fsr2l,c
 34675  01B9FA  50E2               	movf	fsr1h,w,c
 34676  01B9FC  6EDA               	movwf	fsr2h,c
 34677  01B9FE  0EFF               	movlw	255
 34678  01BA00  22DA               	addwfc	fsr2h,f,c
 34679  01BA02  0EE6               	movlw	-26
 34680  01BA04  50E3               	movf	plusw1,w,c
 34681  01BA06  5EDE               	subwf	postinc2,f,c
 34682  01BA08  0EE7               	movlw	-25
 34683  01BA0A  50E3               	movf	plusw1,w,c
 34684  01BA0C  5ADE               	subwfb	postinc2,f,c
 34685  01BA0E  0EE8               	movlw	-24
 34686  01BA10  50E3               	movf	plusw1,w,c
 34687  01BA12  5ADE               	subwfb	postinc2,f,c
 34688  01BA14  0EE9               	movlw	-23
 34689  01BA16  50E3               	movf	plusw1,w,c
 34690  01BA18  5ADE               	subwfb	postinc2,f,c
 34691  01BA1A  0EEA               	movlw	-22
 34692  01BA1C  50E3               	movf	plusw1,w,c
 34693  01BA1E  5ADE               	subwfb	postinc2,f,c
 34694  01BA20  0EEB               	movlw	-21
 34695  01BA22  50E3               	movf	plusw1,w,c
 34696  01BA24  5ADE               	subwfb	postinc2,f,c
 34697  01BA26  0EEC               	movlw	-20
 34698  01BA28  50E3               	movf	plusw1,w,c
 34699  01BA2A  5ADE               	subwfb	postinc2,f,c
 34700  01BA2C  0EED               	movlw	-19
 34701  01BA2E  50E3               	movf	plusw1,w,c
 34702  01BA30  5ADE               	subwfb	postinc2,f,c
 34703                           
 34704                           ;stkvar	_quotient @ sp[(-10)+0]
 34705  01BA32  0EF6               	movlw	-10
 34706  01BA34  80E3               	bsf	plusw1,0,c
 34707  01BA36                     l10184:
 34708                           
 34709                           ;stkvar	_divisor @ sp[(-10)+-16]
 34710  01BA36  90D8               	bcf	status,0,c
 34711  01BA38  0EED               	movlw	-19
 34712  01BA3A  32E3               	rrcf	plusw1,f,c
 34713  01BA3C  0EEC               	movlw	-20
 34714  01BA3E  32E3               	rrcf	plusw1,f,c
 34715  01BA40  0EEB               	movlw	-21
 34716  01BA42  32E3               	rrcf	plusw1,f,c
 34717  01BA44  0EEA               	movlw	-22
 34718  01BA46  32E3               	rrcf	plusw1,f,c
 34719  01BA48  0EE9               	movlw	-23
 34720  01BA4A  32E3               	rrcf	plusw1,f,c
 34721  01BA4C  0EE8               	movlw	-24
 34722  01BA4E  32E3               	rrcf	plusw1,f,c
 34723  01BA50  0EE7               	movlw	-25
 34724  01BA52  32E3               	rrcf	plusw1,f,c
 34725  01BA54  0EE6               	movlw	-26
 34726  01BA56  32E3               	rrcf	plusw1,f,c
 34727                           
 34728                           ;stkvar	_counter @ sp[(-10)+9]
 34729  01BA58  0EFF               	movlw	-1
 34730  01BA5A  50E3               	movf	plusw1,w,c
 34731  01BA5C  6E2A               	movwf	btemp^0,c
 34732  01BA5E  0E01               	movlw	1
 34733  01BA60  5E2A               	subwf	btemp^0,f,c
 34734  01BA62  0EFF               	movlw	-1
 34735  01BA64  0060  F0AB  FFE3   	movff	btemp,plusw1
 34736  01BA6A  A4D8               	btfss	status,2,c
 34737  01BA6C  D791               	goto	u8110
 34738  01BA6E                     u8130:
 34739                           
 34740                           ;stkvar	_sign @ sp[(-10)+8]
 34741  01BA6E  0EFE               	movlw	-2
 34742  01BA70  50E3               	movf	plusw1,w,c
 34743  01BA72  B4D8               	btfsc	status,2,c
 34744  01BA74  D025               	goto	u8150
 34745                           
 34746                           ;stkvar	_quotient @ sp[(-10)+0]
 34747                           ;stkvar	_quotient @ sp[(-10)+0]
 34748  01BA76  0EF6               	movlw	-10
 34749  01BA78  6CE3               	negf	plusw1,c
 34750  01BA7A  0EF7               	movlw	-9
 34751  01BA7C  1EE3               	comf	plusw1,f,c
 34752  01BA7E  0EF8               	movlw	-8
 34753  01BA80  1EE3               	comf	plusw1,f,c
 34754  01BA82  0EF9               	movlw	-7
 34755  01BA84  1EE3               	comf	plusw1,f,c
 34756  01BA86  0EFA               	movlw	-6
 34757  01BA88  1EE3               	comf	plusw1,f,c
 34758  01BA8A  0EFB               	movlw	-5
 34759  01BA8C  1EE3               	comf	plusw1,f,c
 34760  01BA8E  0EFC               	movlw	-4
 34761  01BA90  1EE3               	comf	plusw1,f,c
 34762  01BA92  0EFD               	movlw	-3
 34763  01BA94  1EE3               	comf	plusw1,f,c
 34764  01BA96  E314               	bnc	u8150
 34765  01BA98  0EF7               	movlw	-9
 34766  01BA9A  2AE3               	incf	plusw1,f,c
 34767  01BA9C  E311               	bnc	u8150
 34768  01BA9E  0EF8               	movlw	-8
 34769  01BAA0  2AE3               	incf	plusw1,f,c
 34770  01BAA2  E30E               	bnc	u8150
 34771  01BAA4  0EF9               	movlw	-7
 34772  01BAA6  2AE3               	incf	plusw1,f,c
 34773  01BAA8  E30B               	bnc	u8150
 34774  01BAAA  0EFA               	movlw	-6
 34775  01BAAC  2AE3               	incf	plusw1,f,c
 34776  01BAAE  E308               	bnc	u8150
 34777  01BAB0  0EFB               	movlw	-5
 34778  01BAB2  2AE3               	incf	plusw1,f,c
 34779  01BAB4  E305               	bnc	u8150
 34780  01BAB6  0EFC               	movlw	-4
 34781  01BAB8  2AE3               	incf	plusw1,f,c
 34782  01BABA  E302               	bnc	u8150
 34783  01BABC  0EFD               	movlw	-3
 34784  01BABE  2AE3               	incf	plusw1,f,c
 34785  01BAC0                     u8150:
 34786                           
 34787                           ;stkvar	_quotient @ sp[(-10)+0]
 34788  01BAC0  0EF6               	movlw	246
 34789  01BAC2  24E1               	addwf	fsr1l,w,c
 34790  01BAC4  6ED9               	movwf	fsr2l,c
 34791  01BAC6  0EFF               	movlw	255
 34792  01BAC8  20E2               	addwfc	fsr1h,w,c
 34793  01BACA  6EDA               	movwf	fsr2h,c
 34794                           
 34795                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 34796  01BACC  0E08               	movlw	8
 34797  01BACE  6E2A               	movwf	btemp^0,c
 34798  01BAD0  0EEE               	movlw	-18
 34799  01BAD2                     us816999:
 34800  01BAD2  006F FF7B FFE3     	movff	postinc2,plusw1
 34801  01BAD8  28E8               	incf	wreg,w,c
 34802  01BADA  2E2A               	decfsz	btemp^0,f,c
 34803  01BADC  D7FA               	bra	us816999
 34804                           
 34805                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 34806  01BADE  0EF6               	movlw	246
 34807  01BAE0  26E1               	addwf	fsr1l,f,c
 34808  01BAE2  0EFF               	movlw	255
 34809  01BAE4  22E2               	addwfc	fsr1h,f,c
 34810  01BAE6  0012               	return		;funcret
 34811  01BAE8                     __end_of___aodiv:
 34812                           	opt callstack 0
 34813                           
 34814 ;; *************** function _ctoa *****************
 34815 ;; Defined at:
 34816 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 34817 ;; Parameters:    Size  Location     Type
 34818 ;;  fp              2  [STACK] PTR struct _IO_FILE
 34819 ;;		 -> f(6), NULL(0), 
 34820 ;;  c               1  [STACK] unsigned char 
 34821 ;; Auto vars:     Size  Location     Type
 34822 ;;  w               2  [STACK] int 
 34823 ;;  l               2    0        int 
 34824 ;; Return value:  Size  Location     Type
 34825 ;;                  2  [STACK] int 
 34826 ;; Registers used:
 34827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 34828 ;; Tracked objects:
 34829 ;;		On entry : 0/0
 34830 ;;		On exit  : 0/0
 34831 ;;		Unchanged: 0/0
 34832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34837 ;;Total ram usage:        0 bytes
 34838 ;; Hardware stack levels used:    1
 34839 ;; Hardware stack levels required when called:   20
 34840 ;; This function calls:
 34841 ;;		_pad
 34842 ;; This function is called by:
 34843 ;;		_vfpfcnvrt
 34844 ;; This function uses a reentrant model
 34845 ;;
 34846                           
 34847                           	psect	text116
 34848  0008DA                     __ptext116:
 34849                           	opt callstack 0
 34850  0008DA                     _ctoa:
 34851                           	opt callstack 0
 34852                           
 34853                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34854  0008DA  52E6               	movf	postinc1,f,c
 34855  0008DC  52E6               	movf	postinc1,f,c
 34856                           
 34857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 34858                           
 34859                           ;incstack = 0
 34860 ;; hardware stack exceeded
 34861  0008DE  504A               	movf	_width^0,w,c
 34862  0008E0  104B               	iorwf	(_width+1)^0,w,c
 34863  0008E2  A4D8               	btfss	status,2,c
 34864  0008E4  D009               	goto	l15324
 34865                           
 34866                           ;stkvar	_w @ sp[(-2)+0]
 34867  0008E6  0EFE               	movlw	-2
 34868  0008E8  0060  F12B  FFE3   	movff	_width,plusw1
 34869  0008EE  0EFF               	movlw	-1
 34870  0008F0  0060  F12F  FFE3   	movff	_width+1,plusw1
 34871  0008F6  D016               	goto	l15326
 34872  0008F8                     l15324:
 34873  0008F8  0EFF               	movlw	255
 34874  0008FA  6E34               	movwf	(btemp+10)^0,c
 34875  0008FC  0EFF               	movlw	255
 34876  0008FE  6E35               	movwf	(btemp+11)^0,c
 34877  000900  0060  F128  F032   	movff	_width,btemp+8
 34878  000906  0060  F12C  F033   	movff	_width+1,btemp+9
 34879  00090C  5034               	movf	(btemp+10)^0,w,c
 34880  00090E  2632               	addwf	(btemp+8)^0,f,c
 34881  000910  5035               	movf	(btemp+11)^0,w,c
 34882  000912  2233               	addwfc	(btemp+9)^0,f,c
 34883                           
 34884                           ;stkvar	_w @ sp[(-2)+0]
 34885  000914  0EFE               	movlw	-2
 34886  000916  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 34887  00091C  0EFF               	movlw	-1
 34888  00091E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 34889  000924                     l15326:
 34890                           
 34891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 34892                           ;stkvar	_c @ sp[(-2)+-3]
 34893  000924  0EFB               	movlw	-5
 34894  000926  006F FF8C  F354    	movff	plusw1,_dbuf
 34895                           
 34896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 34897  00092C  0103               	movlb	3	; () banked
 34898  00092E  6B55               	clrf	(_dbuf+1)& (0+255),b
 34899                           
 34900                           ; BSR set to: 3
 34901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 34902                           ;stkvar	_w @ sp[(-2)+0]
 34903  000930  0EFE               	movlw	-2
 34904  000932  006F FF8F FFE6     	movff	plusw1,postinc1
 34905  000938  006F FF8F FFE6     	movff	plusw1,postinc1
 34906  00093E  0E54               	movlw	low _dbuf
 34907  000940  6EE6               	movwf	postinc1,c
 34908  000942  0E03               	movlw	high _dbuf
 34909  000944  6EE6               	movwf	postinc1,c
 34910                           
 34911                           ;stkvar	_fp @ sp[(-6)+-2]
 34912  000946  0EF8               	movlw	-8
 34913  000948  006F FF8F FFE6     	movff	plusw1,postinc1
 34914  00094E  006F FF8F FFE6     	movff	plusw1,postinc1
 34915  000954  EC03  F0F9         	call	_pad	;wreg free
 34916                           
 34917                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 34918  000958  0EFB               	movlw	251
 34919  00095A  26E1               	addwf	fsr1l,f,c
 34920  00095C  0EFF               	movlw	255
 34921  00095E  22E2               	addwfc	fsr1h,f,c
 34922  000960  0012               	return		;funcret
 34923  000962                     __end_of_ctoa:
 34924                           	opt callstack 0
 34925                           
 34926 ;; *************** function _pad *****************
 34927 ;; Defined at:
 34928 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 34929 ;; Parameters:    Size  Location     Type
 34930 ;;  fp              2  [STACK] PTR struct _IO_FILE
 34931 ;;		 -> f(6), NULL(0), 
 34932 ;;  buf             2  [STACK] PTR unsigned char 
 34933 ;;		 -> dbuf(80), 
 34934 ;;  p               2  [STACK] int 
 34935 ;; Auto vars:     Size  Location     Type
 34936 ;;  w               2  [STACK] int 
 34937 ;;  i               2  [STACK] int 
 34938 ;; Return value:  Size  Location     Type
 34939 ;;                  2  [STACK] int 
 34940 ;; Registers used:
 34941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 34942 ;; Tracked objects:
 34943 ;;		On entry : 0/3
 34944 ;;		On exit  : 0/0
 34945 ;;		Unchanged: 0/0
 34946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34951 ;;Total ram usage:        0 bytes
 34952 ;; Hardware stack levels used:    1
 34953 ;; Hardware stack levels required when called:   19
 34954 ;; This function calls:
 34955 ;;		_fputc
 34956 ;;		_fputs
 34957 ;;		_strlen
 34958 ;; This function is called by:
 34959 ;;		_ctoa
 34960 ;;		_dtoa
 34961 ;;		_efgtoa
 34962 ;;		_utoa
 34963 ;;		_xtoa
 34964 ;; This function uses a reentrant model
 34965 ;;
 34966                           
 34967                           	psect	text117
 34968  01F206                     __ptext117:
 34969                           	opt callstack 0
 34970  01F206                     _pad:
 34971                           	opt callstack 0
 34972                           
 34973                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34974  01F206  52E6               	movf	postinc1,f,c
 34975  01F208  52E6               	movf	postinc1,f,c
 34976  01F20A  52E6               	movf	postinc1,f,c
 34977  01F20C  52E6               	movf	postinc1,f,c
 34978                           
 34979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 34980                           
 34981                           ;incstack = 0
 34982 ;; hardware stack exceeded
 34983  01F20E  A04E               	btfss	_flags^0,0,c
 34984  01F210  D010               	goto	l15286
 34985                           
 34986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 34987                           ;stkvar	_fp @ sp[(-4)+-2]
 34988  01F212  0EFA               	movlw	-6
 34989  01F214  006F FF8F FFE6     	movff	plusw1,postinc1
 34990  01F21A  006F FF8F FFE6     	movff	plusw1,postinc1
 34991                           
 34992                           ;stkvar	_buf @ sp[(-6)+-4]
 34993  01F220  0EF6               	movlw	-10
 34994  01F222  006F FF8F FFE6     	movff	plusw1,postinc1
 34995  01F228  006F FF8F FFE6     	movff	plusw1,postinc1
 34996  01F22E  ECFD  F002         	call	_fputs	;wreg free
 34997  01F232                     l15286:
 34998                           
 34999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 35000                           ;stkvar	_p @ sp[(-4)+-6]
 35001  01F232  0EF7               	movlw	-9
 35002  01F234  BEE3               	btfsc	plusw1,7,c
 35003  01F236  D011               	goto	l15290
 35004                           
 35005                           ;stkvar	_p @ sp[(-4)+-6]
 35006                           ;stkvar	_w @ sp[(-4)+0]
 35007  01F238  0EF6               	movlw	-10
 35008  01F23A  006F FF8C  F02A    	movff	plusw1,btemp
 35009  01F240  0EFC               	movlw	-4
 35010  01F242  0060  F0AB  FFE3   	movff	btemp,plusw1
 35011  01F248  0EF7               	movlw	-9
 35012  01F24A  006F FF8C  F02A    	movff	plusw1,btemp
 35013  01F250  0EFD               	movlw	-3
 35014  01F252  0060  F0AB  FFE3   	movff	btemp,plusw1
 35015  01F258  D004               	goto	l2451
 35016  01F25A                     l15290:
 35017                           
 35018                           ;stkvar	_w @ sp[(-4)+0]
 35019  01F25A  0EFC               	movlw	-4
 35020  01F25C  6AE3               	clrf	plusw1,c
 35021  01F25E  0EFD               	movlw	-3
 35022  01F260  6AE3               	clrf	plusw1,c
 35023  01F262                     l2451:
 35024                           
 35025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 35026                           ;stkvar	_i @ sp[(-4)+2]
 35027  01F262  0EFE               	movlw	-2
 35028  01F264  6AE3               	clrf	plusw1,c
 35029  01F266  0EFF               	movlw	-1
 35030  01F268  6AE3               	clrf	plusw1,c
 35031                           
 35032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 35033  01F26A  D01E               	goto	l15296
 35034  01F26C                     l15292:
 35035                           
 35036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 35037                           ;stkvar	_fp @ sp[(-4)+-2]
 35038  01F26C  0EFA               	movlw	-6
 35039  01F26E  006F FF8F FFE6     	movff	plusw1,postinc1
 35040  01F274  006F FF8F FFE6     	movff	plusw1,postinc1
 35041  01F27A  0E20               	movlw	32
 35042  01F27C  6EE6               	movwf	postinc1,c
 35043  01F27E  0E00               	movlw	0
 35044  01F280  6EE6               	movwf	postinc1,c
 35045  01F282  ECCC  F0F6         	call	_fputc	;wreg free
 35046                           
 35047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 35048                           ;stkvar	_i @ sp[(-4)+2]
 35049  01F286  0EFE               	movlw	-2
 35050  01F288  50E3               	movf	plusw1,w,c
 35051  01F28A  0F01               	addlw	1
 35052  01F28C  6E2A               	movwf	btemp^0,c
 35053  01F28E  0EFE               	movlw	-2
 35054  01F290  0060  F0AB  FFE3   	movff	btemp,plusw1
 35055  01F296  6A2A               	clrf	btemp^0,c
 35056  01F298  0EFF               	movlw	-1
 35057  01F29A  50E3               	movf	plusw1,w,c
 35058  01F29C  202A               	addwfc	btemp^0,w,c
 35059  01F29E  6E2A               	movwf	btemp^0,c
 35060  01F2A0  0EFF               	movlw	-1
 35061  01F2A2  0060  F0AB  FFE3   	movff	btemp,plusw1
 35062  01F2A8                     l15296:
 35063                           
 35064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 35065                           ;stkvar	_w @ sp[(-4)+0]
 35066                           ;stkvar	_i @ sp[(-4)+2]
 35067  01F2A8  50E1               	movf	fsr1l,w,c
 35068  01F2AA  0FFE               	addlw	-2
 35069  01F2AC  6ED9               	movwf	fsr2l,c
 35070  01F2AE  50E2               	movf	fsr1h,w,c
 35071  01F2B0  6EDA               	movwf	fsr2h,c
 35072  01F2B2  0EFF               	movlw	255
 35073  01F2B4  22DA               	addwfc	fsr2h,f,c
 35074  01F2B6  0EFC               	movlw	-4
 35075  01F2B8  50E3               	movf	plusw1,w,c
 35076  01F2BA  5CDE               	subwf	postinc2,w,c
 35077  01F2BC  50DE               	movf	postinc2,w,c
 35078  01F2BE  0A80               	xorlw	128
 35079  01F2C0  6E2A               	movwf	btemp^0,c
 35080  01F2C2  0EFD               	movlw	-3
 35081  01F2C4  50E3               	movf	plusw1,w,c
 35082  01F2C6  0A80               	xorlw	128
 35083  01F2C8  582A               	subwfb	btemp^0,w,c
 35084  01F2CA  A0D8               	btfss	status,0,c
 35085  01F2CC  D7CF               	goto	l15292
 35086                           
 35087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 35088  01F2CE  B04E               	btfsc	_flags^0,0,c
 35089  01F2D0  D010               	goto	l15300
 35090                           
 35091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 35092                           ;stkvar	_fp @ sp[(-4)+-2]
 35093  01F2D2  0EFA               	movlw	-6
 35094  01F2D4  006F FF8F FFE6     	movff	plusw1,postinc1
 35095  01F2DA  006F FF8F FFE6     	movff	plusw1,postinc1
 35096                           
 35097                           ;stkvar	_buf @ sp[(-6)+-4]
 35098  01F2E0  0EF6               	movlw	-10
 35099  01F2E2  006F FF8F FFE6     	movff	plusw1,postinc1
 35100  01F2E8  006F FF8F FFE6     	movff	plusw1,postinc1
 35101  01F2EE  ECFD  F002         	call	_fputs	;wreg free
 35102  01F2F2                     l15300:
 35103                           
 35104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 35105                           ;stkvar	_w @ sp[(-4)+0]
 35106                           ;stkvar	_buf @ sp[(-4)+-4]
 35107  01F2F2  0EF8               	movlw	-8
 35108  01F2F4  006F FF8F FFE6     	movff	plusw1,postinc1
 35109  01F2FA  006F FF8F FFE6     	movff	plusw1,postinc1
 35110  01F300  EC5F  F002         	call	_strlen	;wreg free
 35111  01F304  0EFC               	movlw	-4
 35112  01F306  50E3               	movf	plusw1,w,c
 35113  01F308  262A               	addwf	btemp^0,f,c
 35114  01F30A  0EFD               	movlw	-3
 35115  01F30C  50E3               	movf	plusw1,w,c
 35116  01F30E  222B               	addwfc	(btemp+1)^0,f,c
 35117                           
 35118                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 35119  01F310  0EF6               	movlw	246
 35120  01F312  26E1               	addwf	fsr1l,f,c
 35121  01F314  0EFF               	movlw	255
 35122  01F316  22E2               	addwfc	fsr1h,f,c
 35123  01F318  0012               	return		;funcret
 35124  01F31A                     __end_of_pad:
 35125                           	opt callstack 0
 35126                           
 35127 ;; *************** function _strlen *****************
 35128 ;; Defined at:
 35129 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 35130 ;; Parameters:    Size  Location     Type
 35131 ;;  s               2  [STACK] PTR const unsigned char 
 35132 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 35133 ;;		 -> dbuf(80), spin(120), STR_71(9), STR_70(12), 
 35134 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 35135 ;;		 -> STR_3(5), V(181), 
 35136 ;; Auto vars:     Size  Location     Type
 35137 ;;  a               2  [STACK] PTR const unsigned char 
 35138 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 35139 ;;		 -> dbuf(80), spin(120), STR_71(9), STR_70(12), 
 35140 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 35141 ;;		 -> STR_3(5), V(181), 
 35142 ;; Return value:  Size  Location     Type
 35143 ;;                  2  [STACK] unsigned int 
 35144 ;; Registers used:
 35145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 35146 ;; Tracked objects:
 35147 ;;		On entry : 0/0
 35148 ;;		On exit  : 0/0
 35149 ;;		Unchanged: 0/0
 35150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35155 ;;Total ram usage:        0 bytes
 35156 ;; Hardware stack levels used:    1
 35157 ;; Hardware stack levels required when called:   15
 35158 ;; This function calls:
 35159 ;;		Nothing
 35160 ;; This function is called by:
 35161 ;;		_eaDogM_WriteString
 35162 ;;		_spinners
 35163 ;;		_calc_bsoc
 35164 ;;		_pad
 35165 ;;		_stoa
 35166 ;; This function uses a reentrant model
 35167 ;;
 35168                           
 35169                           	psect	text118
 35170  0004BE                     __ptext118:
 35171                           	opt callstack 0
 35172  0004BE                     _strlen:
 35173                           	opt callstack 0
 35174                           
 35175                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35176  0004BE  52E6               	movf	postinc1,f,c
 35177  0004C0  52E6               	movf	postinc1,f,c
 35178                           
 35179                           ;stkvar	_s @ sp[(-2)+-2]
 35180                           
 35181                           ;incstack = 0
 35182 ;; hardware stack exceeded
 35183  0004C2  0EFC               	movlw	-4
 35184  0004C4  006F FF8C  F034    	movff	plusw1,btemp+10
 35185  0004CA  0EFD               	movlw	-3
 35186  0004CC  006F FF8C  F035    	movff	plusw1,btemp+11
 35187                           
 35188                           ;stkvar	_a @ sp[(-2)+0]
 35189  0004D2  0EFF               	movlw	-1
 35190  0004D4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35191  0004DA  0EFE               	movlw	-2
 35192  0004DC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35193  0004E2  D011               	goto	l9698
 35194  0004E4                     l9696:
 35195                           
 35196                           ;stkvar	_s @ sp[(-2)+-2]
 35197  0004E4  0EFC               	movlw	-4
 35198  0004E6  50E3               	movf	plusw1,w,c
 35199  0004E8  0F01               	addlw	1
 35200  0004EA  6E2A               	movwf	btemp^0,c
 35201  0004EC  0EFC               	movlw	-4
 35202  0004EE  0060  F0AB  FFE3   	movff	btemp,plusw1
 35203  0004F4  6A2A               	clrf	btemp^0,c
 35204  0004F6  0EFD               	movlw	-3
 35205  0004F8  50E3               	movf	plusw1,w,c
 35206  0004FA  202A               	addwfc	btemp^0,w,c
 35207  0004FC  6E2A               	movwf	btemp^0,c
 35208  0004FE  0EFD               	movlw	-3
 35209  000500  0060  F0AB  FFE3   	movff	btemp,plusw1
 35210  000506                     l9698:
 35211                           
 35212                           ;stkvar	_s @ sp[(-2)+-2]
 35213  000506  0EFC               	movlw	-4
 35214  000508  006F FF8F FFF6     	movff	plusw1,tblptrl
 35215  00050E  0EFD               	movlw	-3
 35216  000510  006F FF8F FFF7     	movff	plusw1,tblptrh
 35217  000516  0E00               	movlw	low (__mediumconst shr (0+16))
 35218  000518  6EF8               	movwf	tblptru,c
 35219  00051A  0E1F               	movlw	(high __ramtop+-1)
 35220  00051C  64F7               	cpfsgt	tblptrh,c
 35221  00051E  D003               	bra	u7107
 35222  000520  0008               	tblrd		*
 35223  000522  50F5               	movf	tablat,w,c
 35224  000524  D007               	bra	u7100
 35225  000526                     u7107:
 35226  000526  006F FFDB FFE9     	movff	tblptrl,fsr0l
 35227  00052C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 35228  000532  50EF               	movf	indf0,w,c
 35229  000534                     u7100:
 35230  000534  0900               	iorlw	0
 35231  000536  A4D8               	btfss	status,2,c
 35232  000538  D7D5               	goto	l9696
 35233                           
 35234                           ;stkvar	_a @ sp[(-2)+0]
 35235                           ;stkvar	_s @ sp[(-2)+-2]
 35236  00053A  0EFC               	movlw	-4
 35237  00053C  006F FF8C  F02A    	movff	plusw1,btemp
 35238  000542  0EFD               	movlw	-3
 35239  000544  006F FF8C  F02B    	movff	plusw1,btemp+1
 35240  00054A  0EFE               	movlw	-2
 35241  00054C  50E3               	movf	plusw1,w,c
 35242  00054E  5E2A               	subwf	btemp^0,f,c
 35243  000550  0EFF               	movlw	-1
 35244  000552  50E3               	movf	plusw1,w,c
 35245  000554  5A2B               	subwfb	(btemp+1)^0,f,c
 35246                           
 35247                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 35248  000556  52E5               	movf	postdec1,f,c
 35249  000558  52E5               	movf	postdec1,f,c
 35250  00055A  52E5               	movf	postdec1,f,c
 35251  00055C  52E5               	movf	postdec1,f,c
 35252  00055E  0012               	return		;funcret
 35253  000560                     __end_of_strlen:
 35254                           	opt callstack 0
 35255                           
 35256 ;; *************** function _fputs *****************
 35257 ;; Defined at:
 35258 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 35259 ;; Parameters:    Size  Location     Type
 35260 ;;  s               2  [STACK] PTR const unsigned char 
 35261 ;;		 -> dbuf(80), 
 35262 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35263 ;;		 -> f(6), NULL(0), 
 35264 ;; Auto vars:     Size  Location     Type
 35265 ;;  i               2  [STACK] int 
 35266 ;;  c               1  [STACK] unsigned char 
 35267 ;; Return value:  Size  Location     Type
 35268 ;;                  2  [STACK] int 
 35269 ;; Registers used:
 35270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 35271 ;; Tracked objects:
 35272 ;;		On entry : 0/3
 35273 ;;		On exit  : 0/0
 35274 ;;		Unchanged: 0/0
 35275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35280 ;;Total ram usage:        0 bytes
 35281 ;; Hardware stack levels used:    1
 35282 ;; Hardware stack levels required when called:   18
 35283 ;; This function calls:
 35284 ;;		_fputc
 35285 ;; This function is called by:
 35286 ;;		_pad
 35287 ;; This function uses a reentrant model
 35288 ;;
 35289                           
 35290                           	psect	text119
 35291  0005FA                     __ptext119:
 35292                           	opt callstack 0
 35293  0005FA                     _fputs:
 35294                           	opt callstack 0
 35295                           
 35296                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35297  0005FA  52E6               	movf	postinc1,f,c
 35298  0005FC  52E6               	movf	postinc1,f,c
 35299  0005FE  52E6               	movf	postinc1,f,c
 35300                           
 35301                           ;stkvar	_i @ sp[(-3)+0]
 35302                           
 35303                           ;incstack = 0
 35304 ;; hardware stack exceeded
 35305  000600  0EFD               	movlw	-3
 35306  000602  6AE3               	clrf	plusw1,c
 35307  000604  0EFE               	movlw	-2
 35308  000606  6AE3               	clrf	plusw1,c
 35309  000608  D01F               	goto	l15238
 35310  00060A                     l15234:
 35311                           
 35312                           ;stkvar	_fp @ sp[(-3)+-4]
 35313  00060A  0EF9               	movlw	-7
 35314  00060C  006F FF8F FFE6     	movff	plusw1,postinc1
 35315  000612  006F FF8F FFE6     	movff	plusw1,postinc1
 35316                           
 35317                           ;stkvar	_c @ sp[(-5)+2]
 35318  000618  0EFD               	movlw	-3
 35319  00061A  50E3               	movf	plusw1,w,c
 35320  00061C  6EE6               	movwf	postinc1,c
 35321  00061E  0E00               	movlw	0
 35322  000620  6EE6               	movwf	postinc1,c
 35323  000622  ECCC  F0F6         	call	_fputc	;wreg free
 35324                           
 35325                           ;stkvar	_i @ sp[(-3)+0]
 35326  000626  0EFD               	movlw	-3
 35327  000628  50E3               	movf	plusw1,w,c
 35328  00062A  0F01               	addlw	1
 35329  00062C  6E2A               	movwf	btemp^0,c
 35330  00062E  0EFD               	movlw	-3
 35331  000630  0060  F0AB  FFE3   	movff	btemp,plusw1
 35332  000636  6A2A               	clrf	btemp^0,c
 35333  000638  0EFE               	movlw	-2
 35334  00063A  50E3               	movf	plusw1,w,c
 35335  00063C  202A               	addwfc	btemp^0,w,c
 35336  00063E  6E2A               	movwf	btemp^0,c
 35337  000640  0EFE               	movlw	-2
 35338  000642  0060  F0AB  FFE3   	movff	btemp,plusw1
 35339  000648                     l15238:
 35340                           
 35341                           ;stkvar	_i @ sp[(-3)+0]
 35342  000648  0EFD               	movlw	-3
 35343  00064A  006F FF8C  F034    	movff	plusw1,btemp+10
 35344  000650  0EFE               	movlw	-2
 35345  000652  006F FF8C  F035    	movff	plusw1,btemp+11
 35346                           
 35347                           ;stkvar	_s @ sp[(-3)+-2]
 35348  000658  0EFB               	movlw	-5
 35349  00065A  006F FF8C  F032    	movff	plusw1,btemp+8
 35350  000660  0EFC               	movlw	-4
 35351  000662  006F FF8C  F033    	movff	plusw1,btemp+9
 35352  000668  5034               	movf	(btemp+10)^0,w,c
 35353  00066A  2432               	addwf	(btemp+8)^0,w,c
 35354  00066C  6ED9               	movwf	fsr2l,c
 35355  00066E  5035               	movf	(btemp+11)^0,w,c
 35356  000670  2033               	addwfc	(btemp+9)^0,w,c
 35357  000672  6EDA               	movwf	fsr2h,c
 35358  000674  50DF               	movf	indf2,w,c
 35359  000676  6E35               	movwf	(btemp+11)^0,c
 35360                           
 35361                           ;stkvar	_c @ sp[(-3)+2]
 35362  000678  0EFF               	movlw	-1
 35363  00067A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35364  000680  0EFF               	movlw	-1
 35365  000682  50E3               	movf	plusw1,w,c
 35366  000684  A4D8               	btfss	status,2,c
 35367  000686  D7C1               	goto	l15234
 35368                           
 35369                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 35370  000688  0EF9               	movlw	249
 35371  00068A  26E1               	addwf	fsr1l,f,c
 35372  00068C  0EFF               	movlw	255
 35373  00068E  22E2               	addwfc	fsr1h,f,c
 35374  000690  0012               	return		;funcret
 35375  000692                     __end_of_fputs:
 35376                           	opt callstack 0
 35377                           
 35378 ;; *************** function _fputc *****************
 35379 ;; Defined at:
 35380 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 35381 ;; Parameters:    Size  Location     Type
 35382 ;;  c               2  [STACK] int 
 35383 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35384 ;;		 -> f(6), NULL(0), 
 35385 ;; Auto vars:     Size  Location     Type
 35386 ;;		None
 35387 ;; Return value:  Size  Location     Type
 35388 ;;                  2  [STACK] int 
 35389 ;; Registers used:
 35390 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 35391 ;; Tracked objects:
 35392 ;;		On entry : 0/0
 35393 ;;		On exit  : 0/0
 35394 ;;		Unchanged: 0/0
 35395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35400 ;;Total ram usage:        0 bytes
 35401 ;; Hardware stack levels used:    1
 35402 ;; Hardware stack levels required when called:   17
 35403 ;; This function calls:
 35404 ;;		_putch
 35405 ;; This function is called by:
 35406 ;;		_pad
 35407 ;;		_stoa
 35408 ;;		_vfpfcnvrt
 35409 ;;		_fputs
 35410 ;; This function uses a reentrant model
 35411 ;;
 35412                           
 35413                           	psect	text120
 35414  01ED98                     __ptext120:
 35415                           	opt callstack 0
 35416  01ED98                     _fputc:
 35417                           	opt callstack 0
 35418                           
 35419                           ;stkvar	_fp @ sp[(0)+-4]
 35420                           
 35421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35422                           ;incstack = 0
 35423 ;; hardware stack exceeded
 35424  01ED98  0EFC               	movlw	-4
 35425  01ED9A  006F FF8C  F02A    	movff	plusw1,btemp
 35426  01EDA0  0EFD               	movlw	-3
 35427  01EDA2  50E3               	movf	plusw1,w,c
 35428  01EDA4  102A               	iorwf	btemp^0,w,c
 35429  01EDA6  B4D8               	btfsc	status,2,c
 35430  01EDA8  D009               	goto	u14110
 35431                           
 35432                           ;stkvar	_fp @ sp[(0)+-4]
 35433  01EDAA  0EFC               	movlw	-4
 35434  01EDAC  006F FF8C  F02A    	movff	plusw1,btemp
 35435  01EDB2  0EFD               	movlw	-3
 35436  01EDB4  50E3               	movf	plusw1,w,c
 35437  01EDB6  102A               	iorwf	btemp^0,w,c
 35438  01EDB8  A4D8               	btfss	status,2,c
 35439  01EDBA  D006               	goto	l15222
 35440  01EDBC                     u14110:
 35441                           
 35442                           ;stkvar	_c @ sp[(0)+-2]
 35443  01EDBC  0EFE               	movlw	-2
 35444  01EDBE  50E3               	movf	plusw1,w,c
 35445  01EDC0  6EE6               	movwf	postinc1,c
 35446  01EDC2  EC64  F010         	call	_putch	;wreg free
 35447  01EDC6  D075               	goto	l3527
 35448  01EDC8                     l15222:
 35449                           
 35450                           ;stkvar	_fp @ sp[(0)+-4]
 35451  01EDC8  0EFC               	movlw	-4
 35452  01EDCA  006F FF8C  F034    	movff	plusw1,btemp+10
 35453  01EDD0  0EFD               	movlw	-3
 35454  01EDD2  006F FF8C  F035    	movff	plusw1,btemp+11
 35455  01EDD8  0E04               	movlw	4
 35456  01EDDA  2434               	addwf	(btemp+10)^0,w,c
 35457  01EDDC  6ED9               	movwf	fsr2l,c
 35458  01EDDE  0E00               	movlw	0
 35459  01EDE0  2035               	addwfc	(btemp+11)^0,w,c
 35460  01EDE2  6EDA               	movwf	fsr2h,c
 35461  01EDE4  50DE               	movf	postinc2,w,c
 35462  01EDE6  10DE               	iorwf	postinc2,w,c
 35463  01EDE8  B4D8               	btfsc	status,2,c
 35464  01EDEA  D026               	goto	u14130
 35465                           
 35466                           ;stkvar	_fp @ sp[(0)+-4]
 35467  01EDEC  0EFC               	movlw	-4
 35468  01EDEE  006F FF8C  F034    	movff	plusw1,btemp+10
 35469  01EDF4  0EFD               	movlw	-3
 35470  01EDF6  006F FF8C  F035    	movff	plusw1,btemp+11
 35471  01EDFC  0E04               	movlw	4
 35472  01EDFE  2434               	addwf	(btemp+10)^0,w,c
 35473  01EE00  6ED9               	movwf	fsr2l,c
 35474  01EE02  0E00               	movlw	0
 35475  01EE04  2035               	addwfc	(btemp+11)^0,w,c
 35476  01EE06  6EDA               	movwf	fsr2h,c
 35477                           
 35478                           ;stkvar	_fp @ sp[(0)+-4]
 35479  01EE08  0EFC               	movlw	-4
 35480  01EE0A  006F FF8C  F034    	movff	plusw1,btemp+10
 35481  01EE10  0EFD               	movlw	-3
 35482  01EE12  006F FF8C  F035    	movff	plusw1,btemp+11
 35483  01EE18  0E02               	movlw	2
 35484  01EE1A  2434               	addwf	(btemp+10)^0,w,c
 35485  01EE1C  6EE9               	movwf	fsr0l,c
 35486  01EE1E  0E00               	movlw	0
 35487  01EE20  2035               	addwfc	(btemp+11)^0,w,c
 35488  01EE22  6EEA               	movwf	fsr0h,c
 35489  01EE24  50DE               	movf	postinc2,w,c
 35490  01EE26  5CEE               	subwf	postinc0,w,c
 35491  01EE28  50EE               	movf	postinc0,w,c
 35492  01EE2A  0A80               	xorlw	128
 35493  01EE2C  6E2A               	movwf	btemp^0,c
 35494  01EE2E  50DE               	movf	postinc2,w,c
 35495  01EE30  0A80               	xorlw	128
 35496  01EE32  582A               	subwfb	btemp^0,w,c
 35497  01EE34  B0D8               	btfsc	status,0,c
 35498  01EE36  D03D               	goto	l3527
 35499  01EE38                     u14130:
 35500                           
 35501                           ;stkvar	_c @ sp[(0)+-2]
 35502                           ;stkvar	_fp @ sp[(0)+-4]
 35503  01EE38  0EFC               	movlw	-4
 35504  01EE3A  006F FF8C  F034    	movff	plusw1,btemp+10
 35505  01EE40  0EFD               	movlw	-3
 35506  01EE42  006F FF8C  F035    	movff	plusw1,btemp+11
 35507  01EE48  0E02               	movlw	2
 35508  01EE4A  2434               	addwf	(btemp+10)^0,w,c
 35509  01EE4C  6ED9               	movwf	fsr2l,c
 35510  01EE4E  0E00               	movlw	0
 35511  01EE50  2035               	addwfc	(btemp+11)^0,w,c
 35512  01EE52  6EDA               	movwf	fsr2h,c
 35513  01EE54  006F FF78  F034    	movff	postinc2,btemp+10
 35514  01EE5A  006F FF74  F035    	movff	postdec2,btemp+11
 35515                           
 35516                           ;stkvar	_fp @ sp[(0)+-4]
 35517  01EE60  0EFC               	movlw	-4
 35518  01EE62  006F FF8F FFD9     	movff	plusw1,fsr2l
 35519  01EE68  0EFD               	movlw	-3
 35520  01EE6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 35521  01EE70  006F FF78  F032    	movff	postinc2,btemp+8
 35522  01EE76  006F FF74  F033    	movff	postdec2,btemp+9
 35523  01EE7C  5034               	movf	(btemp+10)^0,w,c
 35524  01EE7E  2432               	addwf	(btemp+8)^0,w,c
 35525  01EE80  6ED9               	movwf	fsr2l,c
 35526  01EE82  5035               	movf	(btemp+11)^0,w,c
 35527  01EE84  2033               	addwfc	(btemp+9)^0,w,c
 35528  01EE86  6EDA               	movwf	fsr2h,c
 35529  01EE88  0EFE               	movlw	-2
 35530  01EE8A  006F FF8F FFDF     	movff	plusw1,indf2
 35531                           
 35532                           ;stkvar	_fp @ sp[(0)+-4]
 35533  01EE90  0EFC               	movlw	-4
 35534  01EE92  006F FF8C  F034    	movff	plusw1,btemp+10
 35535  01EE98  0EFD               	movlw	-3
 35536  01EE9A  006F FF8C  F035    	movff	plusw1,btemp+11
 35537  01EEA0  0E02               	movlw	2
 35538  01EEA2  2434               	addwf	(btemp+10)^0,w,c
 35539  01EEA4  6ED9               	movwf	fsr2l,c
 35540  01EEA6  0E00               	movlw	0
 35541  01EEA8  2035               	addwfc	(btemp+11)^0,w,c
 35542  01EEAA  6EDA               	movwf	fsr2h,c
 35543  01EEAC  2ADE               	incf	postinc2,f,c
 35544  01EEAE  0E00               	movlw	0
 35545  01EEB0  22DD               	addwfc	postdec2,f,c
 35546  01EEB2                     l3527:
 35547                           
 35548                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 35549  01EEB2  52E5               	movf	postdec1,f,c
 35550  01EEB4  52E5               	movf	postdec1,f,c
 35551  01EEB6  52E5               	movf	postdec1,f,c
 35552  01EEB8  52E5               	movf	postdec1,f,c
 35553  01EEBA  0012               	return		;funcret
 35554  01EEBC                     __end_of_fputc:
 35555                           	opt callstack 0
 35556                           
 35557 ;; *************** function _putch *****************
 35558 ;; Defined at:
 35559 ;;		line 421 in file "eadog.c"
 35560 ;; Parameters:    Size  Location     Type
 35561 ;;  c               1  [STACK] unsigned char 
 35562 ;; Auto vars:     Size  Location     Type
 35563 ;;		None
 35564 ;; Return value:  Size  Location     Type
 35565 ;;                  1  [STACK] void 
 35566 ;; Registers used:
 35567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 35568 ;; Tracked objects:
 35569 ;;		On entry : 0/0
 35570 ;;		On exit  : 0/0
 35571 ;;		Unchanged: 0/0
 35572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35577 ;;Total ram usage:        0 bytes
 35578 ;; Hardware stack levels used:    1
 35579 ;; Hardware stack levels required when called:   16
 35580 ;; This function calls:
 35581 ;;		_ringBufS_put_dma
 35582 ;; This function is called by:
 35583 ;;		_fputc
 35584 ;; This function uses a reentrant model
 35585 ;;
 35586                           
 35587                           	psect	text121
 35588  0020C8                     __ptext121:
 35589                           	opt callstack 0
 35590  0020C8                     _putch:
 35591                           	opt callstack 0
 35592                           
 35593                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 35594                           ;stkvar	_c @ sp[(0)+-1]
 35595                           
 35596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35597                           ;incstack = 0
 35598 ;; hardware stack exceeded
 35599  0020C8  0EFF               	movlw	-1
 35600  0020CA  50E3               	movf	plusw1,w,c
 35601  0020CC  6EE6               	movwf	postinc1,c
 35602  0020CE  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 35603  0020D4  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 35604  0020DA  EC63  F001         	call	_ringBufS_put_dma	;wreg free
 35605                           
 35606                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 35607  0020DE  52E5               	movf	postdec1,f,c
 35608  0020E0  0012               	return		;funcret
 35609  0020E2                     __end_of_putch:
 35610                           	opt callstack 0
 35611                           
 35612 ;; *************** function _ringBufS_put_dma *****************
 35613 ;; Defined at:
 35614 ;;		line 67 in file "ringbufs.c"
 35615 ;; Parameters:    Size  Location     Type
 35616 ;;  _this           2  [STACK] PTR struct ringBufS_t
 35617 ;;		 -> ring_buf1(67), 
 35618 ;;  c               1  [STACK] const unsigned char 
 35619 ;; Auto vars:     Size  Location     Type
 35620 ;;		None
 35621 ;; Return value:  Size  Location     Type
 35622 ;;                  1  [STACK] void 
 35623 ;; Registers used:
 35624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 35625 ;; Tracked objects:
 35626 ;;		On entry : 0/0
 35627 ;;		On exit  : 0/0
 35628 ;;		Unchanged: 0/0
 35629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35634 ;;Total ram usage:        0 bytes
 35635 ;; Hardware stack levels used:    1
 35636 ;; Hardware stack levels required when called:   15
 35637 ;; This function calls:
 35638 ;;		Nothing
 35639 ;; This function is called by:
 35640 ;;		_putch
 35641 ;; This function uses a reentrant model
 35642 ;;
 35643                           
 35644                           	psect	text122
 35645  0002C6                     __ptext122:
 35646                           	opt callstack 0
 35647  0002C6                     _ringBufS_put_dma:
 35648                           	opt callstack 0
 35649                           
 35650                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 35651                           ;stkvar	__this @ sp[(0)+-2]
 35652                           
 35653                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35654                           ;incstack = 0
 35655 ;; hardware stack exceeded
 35656  0002C6  0EFE               	movlw	-2
 35657  0002C8  006F FF8C  F034    	movff	plusw1,btemp+10
 35658  0002CE  0EFF               	movlw	-1
 35659  0002D0  006F FF8C  F035    	movff	plusw1,btemp+11
 35660  0002D6  0E42               	movlw	66
 35661  0002D8  2434               	addwf	(btemp+10)^0,w,c
 35662  0002DA  6ED9               	movwf	fsr2l,c
 35663  0002DC  0E00               	movlw	0
 35664  0002DE  2035               	addwfc	(btemp+11)^0,w,c
 35665  0002E0  6EDA               	movwf	fsr2h,c
 35666  0002E2  0E40               	movlw	64
 35667  0002E4  60DF               	cpfslt	indf2,c
 35668  0002E6  D040               	goto	l1735
 35669                           
 35670                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 35671                           ;stkvar	_c @ sp[(0)+-3]
 35672                           ;stkvar	__this @ sp[(0)+-2]
 35673  0002E8  0EFE               	movlw	-2
 35674  0002EA  006F FF8C  F034    	movff	plusw1,btemp+10
 35675  0002F0  0EFF               	movlw	-1
 35676  0002F2  006F FF8C  F035    	movff	plusw1,btemp+11
 35677  0002F8  0E40               	movlw	64
 35678  0002FA  2434               	addwf	(btemp+10)^0,w,c
 35679  0002FC  6ED9               	movwf	fsr2l,c
 35680  0002FE  0E00               	movlw	0
 35681  000300  2035               	addwfc	(btemp+11)^0,w,c
 35682  000302  6EDA               	movwf	fsr2h,c
 35683  000304  50DF               	movf	indf2,w,c
 35684  000306  6E35               	movwf	(btemp+11)^0,c
 35685                           
 35686                           ;stkvar	__this @ sp[(0)+-2]
 35687  000308  0EFE               	movlw	-2
 35688  00030A  006F FF8C  F032    	movff	plusw1,btemp+8
 35689  000310  0EFF               	movlw	-1
 35690  000312  006F FF8C  F033    	movff	plusw1,btemp+9
 35691  000318  5035               	movf	(btemp+11)^0,w,c
 35692  00031A  2432               	addwf	(btemp+8)^0,w,c
 35693  00031C  6ED9               	movwf	fsr2l,c
 35694  00031E  0E00               	movlw	0
 35695  000320  2033               	addwfc	(btemp+9)^0,w,c
 35696  000322  6EDA               	movwf	fsr2h,c
 35697  000324  0EFD               	movlw	-3
 35698  000326  006F FF8F FFDF     	movff	plusw1,indf2
 35699                           
 35700                           ;ringbufs.c: 71:   ++_this->head;
 35701                           ;stkvar	__this @ sp[(0)+-2]
 35702  00032C  0EFE               	movlw	-2
 35703  00032E  006F FF8C  F034    	movff	plusw1,btemp+10
 35704  000334  0EFF               	movlw	-1
 35705  000336  006F FF8C  F035    	movff	plusw1,btemp+11
 35706  00033C  0E40               	movlw	64
 35707  00033E  2434               	addwf	(btemp+10)^0,w,c
 35708  000340  6ED9               	movwf	fsr2l,c
 35709  000342  0E00               	movlw	0
 35710  000344  2035               	addwfc	(btemp+11)^0,w,c
 35711  000346  6EDA               	movwf	fsr2h,c
 35712  000348  2ADF               	incf	indf2,f,c
 35713                           
 35714                           ;ringbufs.c: 72:   ++_this->count;
 35715                           ;stkvar	__this @ sp[(0)+-2]
 35716  00034A  0EFE               	movlw	-2
 35717  00034C  006F FF8C  F034    	movff	plusw1,btemp+10
 35718  000352  0EFF               	movlw	-1
 35719  000354  006F FF8C  F035    	movff	plusw1,btemp+11
 35720  00035A  0E42               	movlw	66
 35721  00035C  2434               	addwf	(btemp+10)^0,w,c
 35722  00035E  6ED9               	movwf	fsr2l,c
 35723  000360  0E00               	movlw	0
 35724  000362  2035               	addwfc	(btemp+11)^0,w,c
 35725  000364  6EDA               	movwf	fsr2h,c
 35726  000366  2ADF               	incf	indf2,f,c
 35727  000368                     l1735:
 35728                           
 35729                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 35730  000368  52E5               	movf	postdec1,f,c
 35731  00036A  52E5               	movf	postdec1,f,c
 35732  00036C  52E5               	movf	postdec1,f,c
 35733  00036E  0012               	return		;funcret
 35734  000370                     __end_of_ringBufS_put_dma:
 35735                           	opt callstack 0
 35736                           
 35737 ;; *************** function _atoi *****************
 35738 ;; Defined at:
 35739 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 35740 ;; Parameters:    Size  Location     Type
 35741 ;;  s               2  [STACK] PTR const unsigned char 
 35742 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(19), 
 35743 ;;		 -> STR_85(19), STR_84(19), STR_83(19), STR_82(19), 
 35744 ;;		 -> STR_81(19), STR_80(24), STR_79(15), STR_78(15), 
 35745 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 35746 ;;		 -> STR_73(19), STR_72(19), STR_69(3), STR_68(3), 
 35747 ;;		 -> STR_67(14), STR_66(21), STR_65(21), STR_64(21), 
 35748 ;;		 -> STR_63(21), STR_62(21), STR_61(21), STR_60(21), 
 35749 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 35750 ;;		 -> STR_55(21), STR_54(20), STR_53(21), STR_52(21), 
 35751 ;;		 -> STR_51(21), STR_50(22), STR_49(22), STR_48(22), 
 35752 ;;		 -> STR_47(23), STR_46(23), STR_45(23), STR_44(29), 
 35753 ;;		 -> STR_43(23), STR_42(23), STR_41(22), STR_40(22), 
 35754 ;;		 -> STR_39(22), STR_38(22), STR_37(22), STR_36(22), 
 35755 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 35756 ;;		 -> STR_31(22), STR_30(22), STR_29(17), STR_28(16), 
 35757 ;;		 -> STR_27(16), STR_26(21), STR_25(21), STR_24(21), 
 35758 ;;		 -> STR_23(26), STR_22(26), STR_21(22), STR_20(21), 
 35759 ;;		 -> STR_19(21), STR_18(21), STR_17(21), STR_16(22), 
 35760 ;;		 -> STR_15(22), STR_14(22), STR_13(26), STR_12(21), 
 35761 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 35762 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 35763 ;;		 -> STR_2(21), STR_1(21), 
 35764 ;; Auto vars:     Size  Location     Type
 35765 ;;  n               2  [STACK] int 
 35766 ;;  neg             2  [STACK] int 
 35767 ;; Return value:  Size  Location     Type
 35768 ;;                  2  [STACK] int 
 35769 ;; Registers used:
 35770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 35771 ;; Tracked objects:
 35772 ;;		On entry : 0/0
 35773 ;;		On exit  : 0/0
 35774 ;;		Unchanged: 0/0
 35775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35780 ;;Total ram usage:        0 bytes
 35781 ;; Hardware stack levels used:    1
 35782 ;; Hardware stack levels required when called:   16
 35783 ;; This function calls:
 35784 ;;		_isdigit
 35785 ;;		_isspace
 35786 ;; This function is called by:
 35787 ;;		_vfpfcnvrt
 35788 ;; This function uses a reentrant model
 35789 ;;
 35790                           
 35791                           	psect	text123
 35792  01BAE8                     __ptext123:
 35793                           	opt callstack 0
 35794  01BAE8                     _atoi:
 35795                           	opt callstack 0
 35796                           
 35797                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35798  01BAE8  0E09               	movlw	9
 35799  01BAEA  26E1               	addwf	fsr1l,f,c
 35800  01BAEC  0E00               	movlw	0
 35801  01BAEE  22E2               	addwfc	fsr1h,f,c
 35802                           
 35803                           ;stkvar	_n @ sp[(-9)+5]
 35804                           
 35805                           ;incstack = 0
 35806 ;; hardware stack exceeded
 35807  01BAF0  0EFC               	movlw	-4
 35808  01BAF2  6AE3               	clrf	plusw1,c
 35809  01BAF4  0EFD               	movlw	-3
 35810  01BAF6  6AE3               	clrf	plusw1,c
 35811                           
 35812                           ;stkvar	_neg @ sp[(-9)+7]
 35813  01BAF8  0EFE               	movlw	-2
 35814  01BAFA  6AE3               	clrf	plusw1,c
 35815  01BAFC  0EFF               	movlw	-1
 35816  01BAFE  6AE3               	clrf	plusw1,c
 35817  01BB00  D011               	goto	l11394
 35818  01BB02                     l11392:
 35819                           
 35820                           ;stkvar	_s @ sp[(-9)+-2]
 35821  01BB02  0EF5               	movlw	-11
 35822  01BB04  50E3               	movf	plusw1,w,c
 35823  01BB06  0F01               	addlw	1
 35824  01BB08  6E2A               	movwf	btemp^0,c
 35825  01BB0A  0EF5               	movlw	-11
 35826  01BB0C  0060  F0AB  FFE3   	movff	btemp,plusw1
 35827  01BB12  6A2A               	clrf	btemp^0,c
 35828  01BB14  0EF6               	movlw	-10
 35829  01BB16  50E3               	movf	plusw1,w,c
 35830  01BB18  202A               	addwfc	btemp^0,w,c
 35831  01BB1A  6E2A               	movwf	btemp^0,c
 35832  01BB1C  0EF6               	movlw	-10
 35833  01BB1E  0060  F0AB  FFE3   	movff	btemp,plusw1
 35834  01BB24                     l11394:
 35835                           
 35836                           ;stkvar	_atoi$7428 @ sp[(-9)+4]
 35837  01BB24  0EFB               	movlw	-5
 35838  01BB26  6AE3               	clrf	plusw1,c
 35839  01BB28  2AE3               	incf	plusw1,f,c
 35840                           
 35841                           ;stkvar	_s @ sp[(-9)+-2]
 35842  01BB2A  50E1               	movf	fsr1l,w,c
 35843  01BB2C  0FF5               	addlw	-11
 35844  01BB2E  6ED9               	movwf	fsr2l,c
 35845  01BB30  50E2               	movf	fsr1h,w,c
 35846  01BB32  6EDA               	movwf	fsr2h,c
 35847  01BB34  0EFF               	movlw	255
 35848  01BB36  22DA               	addwfc	fsr2h,f,c
 35849  01BB38  006F FF7B FFF6     	movff	postinc2,tblptrl
 35850  01BB3E  006F FF77 FFF7     	movff	postdec2,tblptrh
 35851  01BB44                     	if	0	;tblptru may be non-zero
 35852  01BB44                     	endif
 35853  01BB44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35854  01BB44  0E00               	movlw	low (__mediumconst shr (0+16))
 35855  01BB46  6EF8               	movwf	tblptru,c
 35856  01BB48                     	endif
 35857  01BB48  0008               	tblrd		*
 35858  01BB4A  50F5               	movf	tablat,w,c
 35859  01BB4C  0A20               	xorlw	32
 35860  01BB4E  B4D8               	btfsc	status,2,c
 35861  01BB50  D023               	goto	l11402
 35862  01BB52  0EF7               	movlw	247
 35863  01BB54  6E34               	movwf	(btemp+10)^0,c
 35864  01BB56  0EFF               	movlw	255
 35865  01BB58  6E35               	movwf	(btemp+11)^0,c
 35866                           
 35867                           ;stkvar	_s @ sp[(-9)+-2]
 35868  01BB5A  50E1               	movf	fsr1l,w,c
 35869  01BB5C  0FF5               	addlw	-11
 35870  01BB5E  6ED9               	movwf	fsr2l,c
 35871  01BB60  50E2               	movf	fsr1h,w,c
 35872  01BB62  6EDA               	movwf	fsr2h,c
 35873  01BB64  0EFF               	movlw	255
 35874  01BB66  22DA               	addwfc	fsr2h,f,c
 35875  01BB68  006F FF7B FFF6     	movff	postinc2,tblptrl
 35876  01BB6E  006F FF77 FFF7     	movff	postdec2,tblptrh
 35877  01BB74                     	if	0	;tblptru may be non-zero
 35878  01BB74                     	endif
 35879  01BB74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35880  01BB74  0E00               	movlw	low (__mediumconst shr (0+16))
 35881  01BB76  6EF8               	movwf	tblptru,c
 35882  01BB78                     	endif
 35883  01BB78  0008               	tblrd		*
 35884  01BB7A  50F5               	movf	tablat,w,c
 35885  01BB7C  6E32               	movwf	(btemp+8)^0,c
 35886  01BB7E  6A33               	clrf	(btemp+9)^0,c
 35887  01BB80  5034               	movf	(btemp+10)^0,w,c
 35888  01BB82  2632               	addwf	(btemp+8)^0,f,c
 35889  01BB84  5035               	movf	(btemp+11)^0,w,c
 35890  01BB86  2233               	addwfc	(btemp+9)^0,f,c
 35891  01BB88  5033               	movf	(btemp+9)^0,w,c
 35892  01BB8A  E104               	bnz	u10340
 35893  01BB8C  0E05               	movlw	5
 35894  01BB8E  5C32               	subwf	(btemp+8)^0,w,c
 35895  01BB90  A0D8               	btfss	status,0,c
 35896  01BB92  D002               	goto	l11402
 35897  01BB94                     u10340:
 35898                           
 35899                           ;stkvar	_atoi$7428 @ sp[(-9)+4]
 35900  01BB94  0EFB               	movlw	-5
 35901  01BB96  6AE3               	clrf	plusw1,c
 35902  01BB98                     l11402:
 35903                           
 35904                           ;stkvar	_atoi$7428 @ sp[(-9)+4]
 35905  01BB98  0EFB               	movlw	-5
 35906  01BB9A  50E3               	movf	plusw1,w,c
 35907  01BB9C  6E34               	movwf	(btemp+10)^0,c
 35908  01BB9E  6A35               	clrf	(btemp+11)^0,c
 35909                           
 35910                           ;stkvar	_atoi$7427 @ sp[(-9)+2]
 35911  01BBA0  0EF9               	movlw	-7
 35912  01BBA2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35913  01BBA8  0EFA               	movlw	-6
 35914  01BBAA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35915                           
 35916                           ;stkvar	_atoi$7427 @ sp[(-9)+2]
 35917  01BBB0  0EF9               	movlw	-7
 35918  01BBB2  006F FF8C  F02A    	movff	plusw1,btemp
 35919  01BBB8  0EFA               	movlw	-6
 35920  01BBBA  50E3               	movf	plusw1,w,c
 35921  01BBBC  102A               	iorwf	btemp^0,w,c
 35922  01BBBE  B4D8               	btfsc	status,2,c
 35923  01BBC0  D01F               	goto	l11412
 35924  01BBC2  D79F               	goto	l11392
 35925  01BBC4                     l11408:
 35926  01BBC4  0E01               	movlw	1
 35927  01BBC6  6E34               	movwf	(btemp+10)^0,c
 35928  01BBC8  0E00               	movlw	0
 35929  01BBCA  6E35               	movwf	(btemp+11)^0,c
 35930                           
 35931                           ;stkvar	_neg @ sp[(-9)+7]
 35932  01BBCC  0EFE               	movlw	-2
 35933  01BBCE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35934  01BBD4  0EFF               	movlw	-1
 35935  01BBD6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35936  01BBDC                     l11410:
 35937                           
 35938                           ;stkvar	_s @ sp[(-9)+-2]
 35939  01BBDC  0EF5               	movlw	-11
 35940  01BBDE  50E3               	movf	plusw1,w,c
 35941  01BBE0  0F01               	addlw	1
 35942  01BBE2  6E2A               	movwf	btemp^0,c
 35943  01BBE4  0EF5               	movlw	-11
 35944  01BBE6  0060  F0AB  FFE3   	movff	btemp,plusw1
 35945  01BBEC  6A2A               	clrf	btemp^0,c
 35946  01BBEE  0EF6               	movlw	-10
 35947  01BBF0  50E3               	movf	plusw1,w,c
 35948  01BBF2  202A               	addwfc	btemp^0,w,c
 35949  01BBF4  6E2A               	movwf	btemp^0,c
 35950  01BBF6  0EF6               	movlw	-10
 35951  01BBF8  0060  F0AB  FFE3   	movff	btemp,plusw1
 35952  01BBFE  D053               	goto	l11418
 35953  01BC00                     l11412:
 35954                           
 35955                           ;stkvar	_s @ sp[(-9)+-2]
 35956  01BC00  50E1               	movf	fsr1l,w,c
 35957  01BC02  0FF5               	addlw	-11
 35958  01BC04  6ED9               	movwf	fsr2l,c
 35959  01BC06  50E2               	movf	fsr1h,w,c
 35960  01BC08  6EDA               	movwf	fsr2h,c
 35961  01BC0A  0EFF               	movlw	255
 35962  01BC0C  22DA               	addwfc	fsr2h,f,c
 35963  01BC0E  006F FF7B FFF6     	movff	postinc2,tblptrl
 35964  01BC14  006F FF77 FFF7     	movff	postdec2,tblptrh
 35965  01BC1A                     	if	0	;tblptru may be non-zero
 35966  01BC1A                     	endif
 35967  01BC1A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35968  01BC1A  0E00               	movlw	low (__mediumconst shr (0+16))
 35969  01BC1C  6EF8               	movwf	tblptru,c
 35970  01BC1E                     	endif
 35971  01BC1E  0008               	tblrd		*
 35972  01BC20  50F5               	movf	tablat,w,c
 35973  01BC22  6E34               	movwf	(btemp+10)^0,c
 35974  01BC24  6A35               	clrf	(btemp+11)^0,c
 35975                           
 35976                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35977                           ; Switch size 1, requested type "simple"
 35978                           ; Number of cases is 1, Range of values is 0 to 0
 35979                           ; switch strategies available:
 35980                           ; Name         Instructions Cycles
 35981                           ; simple_byte            4     3 (average)
 35982                           ;	Chosen strategy is simple_byte
 35983  01BC26  5035               	movf	(btemp+11)^0,w,c
 35984  01BC28  0A00               	xorlw	0	; case 0
 35985  01BC2A  A4D8               	btfss	status,2,c
 35986  01BC2C  D03C               	goto	l11418
 35987                           
 35988                           ; Switch size 1, requested type "simple"
 35989                           ; Number of cases is 2, Range of values is 43 to 45
 35990                           ; switch strategies available:
 35991                           ; Name         Instructions Cycles
 35992                           ; simple_byte            7     4 (average)
 35993                           ;	Chosen strategy is simple_byte
 35994  01BC2E  5034               	movf	(btemp+10)^0,w,c
 35995  01BC30  0A2B               	xorlw	43	; case 43
 35996  01BC32  B4D8               	btfsc	status,2,c
 35997  01BC34  D7D3               	goto	l11410
 35998  01BC36  0A06               	xorlw	6	; case 45
 35999  01BC38  B4D8               	btfsc	status,2,c
 36000  01BC3A  D7C4               	goto	l11408
 36001  01BC3C  D034               	goto	l11418
 36002  01BC3E                     l11414:
 36003                           
 36004                           ;stkvar	_n @ sp[(-9)+5]
 36005  01BC3E  0EFC               	movlw	-4
 36006  01BC40  006F FF8C  F034    	movff	plusw1,btemp+10
 36007  01BC46  0EFD               	movlw	-3
 36008  01BC48  006F FF8C  F035    	movff	plusw1,btemp+11
 36009  01BC4E  0E0A               	movlw	10
 36010  01BC50  0234               	mulwf	(btemp+10)^0,c
 36011  01BC52  006F FFCC  F032    	movff	prodl,btemp+8
 36012  01BC58  006F FFD0  F033    	movff	prodh,btemp+9
 36013  01BC5E  0235               	mulwf	(btemp+11)^0,c
 36014  01BC60  50F3               	movf	prodl,w,c
 36015  01BC62  2633               	addwf	(btemp+9)^0,f,c
 36016                           
 36017                           ;stkvar	_s @ sp[(-9)+-2]
 36018  01BC64  50E1               	movf	fsr1l,w,c
 36019  01BC66  0FF5               	addlw	-11
 36020  01BC68  6ED9               	movwf	fsr2l,c
 36021  01BC6A  50E2               	movf	fsr1h,w,c
 36022  01BC6C  6EDA               	movwf	fsr2h,c
 36023  01BC6E  0EFF               	movlw	255
 36024  01BC70  22DA               	addwfc	fsr2h,f,c
 36025  01BC72  006F FF7B FFF6     	movff	postinc2,tblptrl
 36026  01BC78  006F FF77 FFF7     	movff	postdec2,tblptrh
 36027  01BC7E                     	if	0	;tblptru may be non-zero
 36028  01BC7E                     	endif
 36029  01BC7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36030  01BC7E  0E00               	movlw	low (__mediumconst shr (0+16))
 36031  01BC80  6EF8               	movwf	tblptru,c
 36032  01BC82                     	endif
 36033  01BC82  0008               	tblrd		*
 36034  01BC84  50F5               	movf	tablat,w,c
 36035  01BC86  5E32               	subwf	(btemp+8)^0,f,c
 36036  01BC88  0E00               	movlw	0
 36037  01BC8A  5A33               	subwfb	(btemp+9)^0,f,c
 36038  01BC8C  0E30               	movlw	48
 36039  01BC8E  2632               	addwf	(btemp+8)^0,f,c
 36040  01BC90  0E00               	movlw	0
 36041  01BC92  2233               	addwfc	(btemp+9)^0,f,c
 36042                           
 36043                           ;stkvar	_n @ sp[(-9)+5]
 36044  01BC94  0EFC               	movlw	-4
 36045  01BC96  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 36046  01BC9C  0EFD               	movlw	-3
 36047  01BC9E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 36048  01BCA4  D79B               	goto	l11410
 36049  01BCA6                     l11418:
 36050  01BCA6  0ED0               	movlw	208
 36051  01BCA8  6E34               	movwf	(btemp+10)^0,c
 36052  01BCAA  0EFF               	movlw	255
 36053  01BCAC  6E35               	movwf	(btemp+11)^0,c
 36054                           
 36055                           ;stkvar	_s @ sp[(-9)+-2]
 36056  01BCAE  50E1               	movf	fsr1l,w,c
 36057  01BCB0  0FF5               	addlw	-11
 36058  01BCB2  6ED9               	movwf	fsr2l,c
 36059  01BCB4  50E2               	movf	fsr1h,w,c
 36060  01BCB6  6EDA               	movwf	fsr2h,c
 36061  01BCB8  0EFF               	movlw	255
 36062  01BCBA  22DA               	addwfc	fsr2h,f,c
 36063  01BCBC  006F FF7B FFF6     	movff	postinc2,tblptrl
 36064  01BCC2  006F FF77 FFF7     	movff	postdec2,tblptrh
 36065  01BCC8                     	if	0	;tblptru may be non-zero
 36066  01BCC8                     	endif
 36067  01BCC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36068  01BCC8  0E00               	movlw	low (__mediumconst shr (0+16))
 36069  01BCCA  6EF8               	movwf	tblptru,c
 36070  01BCCC                     	endif
 36071  01BCCC  0008               	tblrd		*
 36072  01BCCE  50F5               	movf	tablat,w,c
 36073  01BCD0  6E32               	movwf	(btemp+8)^0,c
 36074  01BCD2  6A33               	clrf	(btemp+9)^0,c
 36075  01BCD4  5034               	movf	(btemp+10)^0,w,c
 36076  01BCD6  2632               	addwf	(btemp+8)^0,f,c
 36077  01BCD8  5035               	movf	(btemp+11)^0,w,c
 36078  01BCDA  2233               	addwfc	(btemp+9)^0,f,c
 36079  01BCDC  5033               	movf	(btemp+9)^0,w,c
 36080  01BCDE  E106               	bnz	u10360
 36081  01BCE0  0E0A               	movlw	10
 36082  01BCE2  5C32               	subwf	(btemp+8)^0,w,c
 36083  01BCE4  B0D8               	btfsc	status,0,c
 36084  01BCE6  D002               	goto	u10360
 36085  01BCE8  0E01               	movlw	1
 36086  01BCEA  D001               	goto	u10370
 36087  01BCEC                     u10360:
 36088  01BCEC  0E00               	movlw	0
 36089  01BCEE                     u10370:
 36090  01BCEE  6E34               	movwf	(btemp+10)^0,c
 36091  01BCF0  6A35               	clrf	(btemp+11)^0,c
 36092                           
 36093                           ;stkvar	_atoi$7429 @ sp[(-9)+0]
 36094  01BCF2  0EF7               	movlw	-9
 36095  01BCF4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36096  01BCFA  0EF8               	movlw	-8
 36097  01BCFC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36098                           
 36099                           ;stkvar	_atoi$7429 @ sp[(-9)+0]
 36100  01BD02  0EF7               	movlw	-9
 36101  01BD04  006F FF8C  F02A    	movff	plusw1,btemp
 36102  01BD0A  0EF8               	movlw	-8
 36103  01BD0C  50E3               	movf	plusw1,w,c
 36104  01BD0E  102A               	iorwf	btemp^0,w,c
 36105  01BD10  A4D8               	btfss	status,2,c
 36106  01BD12  D795               	goto	l11414
 36107                           
 36108                           ;stkvar	_neg @ sp[(-9)+7]
 36109  01BD14  0EFE               	movlw	-2
 36110  01BD16  006F FF8C  F02A    	movff	plusw1,btemp
 36111  01BD1C  0EFF               	movlw	-1
 36112  01BD1E  50E3               	movf	plusw1,w,c
 36113  01BD20  102A               	iorwf	btemp^0,w,c
 36114  01BD22  A4D8               	btfss	status,2,c
 36115  01BD24  D00E               	goto	l11428
 36116                           
 36117                           ;stkvar	_n @ sp[(-9)+5]
 36118  01BD26  0EFC               	movlw	-4
 36119  01BD28  006F FF8C  F02A    	movff	plusw1,btemp
 36120  01BD2E  1E2A               	comf	btemp^0,f,c
 36121  01BD30  0EFD               	movlw	-3
 36122  01BD32  006F FF8C  F02B    	movff	plusw1,btemp+1
 36123  01BD38  1E2B               	comf	(btemp+1)^0,f,c
 36124  01BD3A  2A2A               	incf	btemp^0,f,c
 36125  01BD3C  B4D8               	btfsc	status,2,c
 36126  01BD3E  2A2B               	incf	(btemp+1)^0,f,c
 36127  01BD40  D008               	goto	l3438
 36128  01BD42                     l11428:
 36129                           
 36130                           ;stkvar	_n @ sp[(-9)+5]
 36131  01BD42  0EFC               	movlw	-4
 36132  01BD44  006F FF8C  F02A    	movff	plusw1,btemp
 36133  01BD4A  0EFD               	movlw	-3
 36134  01BD4C  006F FF8C  F02B    	movff	plusw1,btemp+1
 36135  01BD52                     l3438:
 36136                           
 36137                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 36138  01BD52  0EF5               	movlw	245
 36139  01BD54  26E1               	addwf	fsr1l,f,c
 36140  01BD56  0EFF               	movlw	255
 36141  01BD58  22E2               	addwfc	fsr1h,f,c
 36142  01BD5A  0012               	return		;funcret
 36143  01BD5C                     __end_of_atoi:
 36144                           	opt callstack 0
 36145                           
 36146 ;; *************** function _isspace *****************
 36147 ;; Defined at:
 36148 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 36149 ;; Parameters:    Size  Location     Type
 36150 ;;  c               2  [STACK] int 
 36151 ;; Auto vars:     Size  Location     Type
 36152 ;;		None
 36153 ;; Return value:  Size  Location     Type
 36154 ;;                  2  [STACK] int 
 36155 ;; Registers used:
 36156 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 36157 ;; Tracked objects:
 36158 ;;		On entry : 0/0
 36159 ;;		On exit  : 0/0
 36160 ;;		Unchanged: 0/0
 36161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36166 ;;Total ram usage:        0 bytes
 36167 ;; Hardware stack levels used:    1
 36168 ;; Hardware stack levels required when called:   15
 36169 ;; This function calls:
 36170 ;;		Nothing
 36171 ;; This function is called by:
 36172 ;;		_atoi
 36173 ;; This function uses a reentrant model
 36174 ;;
 36175                           
 36176                           	psect	text124
 36177  001360                     __ptext124:
 36178                           	opt callstack 0
 36179  001360                     _isspace:
 36180                           	opt callstack 0
 36181                           
 36182                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36183  001360  52E6               	movf	postinc1,f,c
 36184                           
 36185                           ;stkvar	_isspace$7478 @ sp[(-1)+0]
 36186                           
 36187                           ;incstack = 0
 36188 ;; hardware stack exceeded
 36189  001362  0EFF               	movlw	-1
 36190  001364  6AE3               	clrf	plusw1,c
 36191  001366  2AE3               	incf	plusw1,f,c
 36192                           
 36193                           ;stkvar	_c @ sp[(-1)+-2]
 36194  001368  0EFD               	movlw	-3
 36195  00136A  006F FF8C  F02A    	movff	plusw1,btemp
 36196  001370  0E20               	movlw	32
 36197  001372  182A               	xorwf	btemp^0,w,c
 36198  001374  E104               	bnz	u9180
 36199  001376  0EFE               	movlw	-2
 36200  001378  50E3               	movf	plusw1,w,c
 36201  00137A  B4D8               	btfsc	status,2,c
 36202  00137C  D012               	goto	l10778
 36203  00137E                     u9180:
 36204                           
 36205                           ;stkvar	_c @ sp[(-1)+-2]
 36206  00137E  0EFD               	movlw	-3
 36207  001380  50E3               	movf	plusw1,w,c
 36208  001382  0FF7               	addlw	247
 36209  001384  6E34               	movwf	(btemp+10)^0,c
 36210  001386  0EFE               	movlw	-2
 36211  001388  006F FF8C  F035    	movff	plusw1,btemp+11
 36212  00138E  0EFF               	movlw	255
 36213  001390  2235               	addwfc	(btemp+11)^0,f,c
 36214  001392  5035               	movf	(btemp+11)^0,w,c
 36215  001394  E104               	bnz	u9190
 36216  001396  0E05               	movlw	5
 36217  001398  5C34               	subwf	(btemp+10)^0,w,c
 36218  00139A  A0D8               	btfss	status,0,c
 36219  00139C  D002               	goto	l10778
 36220  00139E                     u9190:
 36221                           
 36222                           ;stkvar	_isspace$7478 @ sp[(-1)+0]
 36223  00139E  0EFF               	movlw	-1
 36224  0013A0  6AE3               	clrf	plusw1,c
 36225  0013A2                     l10778:
 36226                           
 36227                           ;stkvar	_isspace$7478 @ sp[(-1)+0]
 36228  0013A2  0EFF               	movlw	-1
 36229  0013A4  50E3               	movf	plusw1,w,c
 36230  0013A6  6E2A               	movwf	btemp^0,c
 36231  0013A8  6A2B               	clrf	(btemp+1)^0,c
 36232                           
 36233                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 36234  0013AA  52E5               	movf	postdec1,f,c
 36235  0013AC  52E5               	movf	postdec1,f,c
 36236  0013AE  52E5               	movf	postdec1,f,c
 36237  0013B0  0012               	return		;funcret
 36238  0013B2                     __end_of_isspace:
 36239                           	opt callstack 0
 36240                           
 36241 ;; *************** function _isdigit *****************
 36242 ;; Defined at:
 36243 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 36244 ;; Parameters:    Size  Location     Type
 36245 ;;  c               2  [STACK] int 
 36246 ;; Auto vars:     Size  Location     Type
 36247 ;;		None
 36248 ;; Return value:  Size  Location     Type
 36249 ;;                  2  [STACK] int 
 36250 ;; Registers used:
 36251 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 36252 ;; Tracked objects:
 36253 ;;		On entry : 0/0
 36254 ;;		On exit  : 0/0
 36255 ;;		Unchanged: 0/0
 36256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36261 ;;Total ram usage:        0 bytes
 36262 ;; Hardware stack levels used:    1
 36263 ;; Hardware stack levels required when called:   15
 36264 ;; This function calls:
 36265 ;;		Nothing
 36266 ;; This function is called by:
 36267 ;;		_vfpfcnvrt
 36268 ;;		_atoi
 36269 ;; This function uses a reentrant model
 36270 ;;
 36271                           
 36272                           	psect	text125
 36273  001B48                     __ptext125:
 36274                           	opt callstack 0
 36275  001B48                     _isdigit:
 36276                           	opt callstack 0
 36277                           
 36278                           ;stkvar	_c @ sp[(0)+-2]
 36279                           
 36280                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36281                           ;incstack = 0
 36282 ;; hardware stack exceeded
 36283  001B48  0EFE               	movlw	-2
 36284  001B4A  50E3               	movf	plusw1,w,c
 36285  001B4C  0FD0               	addlw	208
 36286  001B4E  6E34               	movwf	(btemp+10)^0,c
 36287  001B50  0EFF               	movlw	-1
 36288  001B52  006F FF8C  F035    	movff	plusw1,btemp+11
 36289  001B58  0EFF               	movlw	255
 36290  001B5A  2235               	addwfc	(btemp+11)^0,f,c
 36291  001B5C  5035               	movf	(btemp+11)^0,w,c
 36292  001B5E  E106               	bnz	u7970
 36293  001B60  0E0A               	movlw	10
 36294  001B62  5C34               	subwf	(btemp+10)^0,w,c
 36295  001B64  B0D8               	btfsc	status,0,c
 36296  001B66  D002               	goto	u7970
 36297  001B68  0E01               	movlw	1
 36298  001B6A  D001               	goto	u7980
 36299  001B6C                     u7970:
 36300  001B6C  0E00               	movlw	0
 36301  001B6E                     u7980:
 36302  001B6E  6E2A               	movwf	btemp^0,c
 36303  001B70  6A2B               	clrf	(btemp+1)^0,c
 36304                           
 36305                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 36306  001B72  52E5               	movf	postdec1,f,c
 36307  001B74  52E5               	movf	postdec1,f,c
 36308  001B76  0012               	return		;funcret
 36309  001B78                     __end_of_isdigit:
 36310                           	opt callstack 0
 36311                           
 36312 ;; *************** function _set_vterm *****************
 36313 ;; Defined at:
 36314 ;;		line 110 in file "mconfig.c"
 36315 ;; Parameters:    Size  Location     Type
 36316 ;;  vterm           1  [STACK] const unsigned char 
 36317 ;; Auto vars:     Size  Location     Type
 36318 ;;		None
 36319 ;; Return value:  Size  Location     Type
 36320 ;;                  1  [STACK] unsigned char 
 36321 ;; Registers used:
 36322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 36323 ;; Tracked objects:
 36324 ;;		On entry : 0/2
 36325 ;;		On exit  : 0/0
 36326 ;;		Unchanged: 0/0
 36327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36332 ;;Total ram usage:        0 bytes
 36333 ;; Hardware stack levels used:    1
 36334 ;; Hardware stack levels required when called:   15
 36335 ;; This function calls:
 36336 ;;		Nothing
 36337 ;; This function is called by:
 36338 ;;		_main
 36339 ;;		_check_help
 36340 ;; This function uses a reentrant model
 36341 ;;
 36342                           
 36343                           	psect	text126
 36344  00208C                     __ptext126:
 36345                           	opt callstack 0
 36346  00208C                     _set_vterm:
 36347                           	opt callstack 15
 36348                           
 36349                           ;mconfig.c: 110: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 111: {;mconfig.c: 112
      +                          :  D.vterm = vterm & 0x03;
 36350                           ;stkvar	_vterm @ sp[(0)+-1]
 36351                           
 36352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36353                           ;incstack = 0
 36354  00208C  0EFF               	movlw	-1
 36355  00208E  006F FF8C  F035    	movff	plusw1,btemp+11
 36356  002094  0E03               	movlw	3
 36357  002096  1635               	andwf	(btemp+11)^0,f,c
 36358  002098  EE23  F0CF         	lfsr	2,_D+640
 36359  00209C  50DF               	movf	223,w,c
 36360  00209E  1835               	xorwf	(btemp+11)^0,w,c
 36361  0020A0  0BFE               	andlw	-2
 36362  0020A2  1835               	xorwf	(btemp+11)^0,w,c
 36363  0020A4  6EDF               	movwf	223,c
 36364                           
 36365                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 36366  0020A6  52E5               	movf	postdec1,f,c
 36367  0020A8  0012               	return		;funcret
 36368  0020AA                     __end_of_set_vterm:
 36369                           	opt callstack 0
 36370                           
 36371 ;; *************** function _set_temp_display_help *****************
 36372 ;; Defined at:
 36373 ;;		line 217 in file "mconfig.c"
 36374 ;; Parameters:    Size  Location     Type
 36375 ;;  new_response    1  [STACK] const enum E16677
 36376 ;; Auto vars:     Size  Location     Type
 36377 ;;		None
 36378 ;; Return value:  Size  Location     Type
 36379 ;;                  1  [STACK] enum E16677
 36380 ;; Registers used:
 36381 ;;		wreg, fsr1l, fsr1h
 36382 ;; Tracked objects:
 36383 ;;		On entry : 0/2
 36384 ;;		On exit  : 3F/2
 36385 ;;		Unchanged: 0/0
 36386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36391 ;;Total ram usage:        0 bytes
 36392 ;; Hardware stack levels used:    1
 36393 ;; Hardware stack levels required when called:   15
 36394 ;; This function calls:
 36395 ;;		Nothing
 36396 ;; This function is called by:
 36397 ;;		_check_help
 36398 ;; This function uses a reentrant model
 36399 ;;
 36400                           
 36401                           	psect	text127
 36402  0021F0                     __ptext127:
 36403                           	opt callstack 0
 36404  0021F0                     _set_temp_display_help:
 36405                           	opt callstack 14
 36406                           
 36407                           ;mconfig.c: 217: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 218: {;mconfig.c: 219:  static D_CODES old_info;;mconfig.c: 221:  old_info = V.respon
      +                          se.help_temp;
 36408                           
 36409                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36410                           ;incstack = 0
 36411  0021F0  0102               	movlb	2	; () banked
 36412  0021F2  51A2               	movf	(_V+162)& (0+255),w,b	;volatile
 36413                           
 36414                           ; BSR set to: 2
 36415                           ;mconfig.c: 222:  V.response.help_temp = new_response_info;
 36416                           ;stkvar	_new_response_info @ sp[(0)+-1]
 36417  0021F4  0EFF               	movlw	-1
 36418  0021F6  006F FF8C  F2A2    	movff	plusw1,_V+162	;volatile
 36419                           
 36420                           ; BSR set to: 2
 36421                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 36422  0021FC  52E5               	movf	postdec1,f,c
 36423  0021FE  0012               	return		;funcret
 36424  002200                     __end_of_set_temp_display_help:
 36425                           	opt callstack 0
 36426                           
 36427 ;; *************** function _set_display_info *****************
 36428 ;; Defined at:
 36429 ;;		line 206 in file "mconfig.c"
 36430 ;; Parameters:    Size  Location     Type
 36431 ;;  new_response    1  [STACK] const enum E16677
 36432 ;; Auto vars:     Size  Location     Type
 36433 ;;		None
 36434 ;; Return value:  Size  Location     Type
 36435 ;;                  1  [STACK] enum E17160
 36436 ;; Registers used:
 36437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 36438 ;; Tracked objects:
 36439 ;;		On entry : 0/2
 36440 ;;		On exit  : 0/0
 36441 ;;		Unchanged: 0/0
 36442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36447 ;;Total ram usage:        0 bytes
 36448 ;; Hardware stack levels used:    1
 36449 ;; Hardware stack levels required when called:   16
 36450 ;; This function calls:
 36451 ;;		_TimerDone
 36452 ;; This function is called by:
 36453 ;;		_main
 36454 ;;		_check_help
 36455 ;; This function uses a reentrant model
 36456 ;;
 36457                           
 36458                           	psect	text128
 36459  0020AA                     __ptext128:
 36460                           	opt callstack 0
 36461  0020AA                     _set_display_info:
 36462                           	opt callstack 14
 36463                           
 36464                           ;mconfig.c: 206: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          7: {;mconfig.c: 208:  static D_CODES old_info = DIS_STR;;mconfig.c: 210:  if (TimerDone(
      +                          TMR_INFO)) {
 36465                           
 36466                           ; BSR set to: 2
 36467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36468                           ;incstack = 0
 36469  0020AA  0E07               	movlw	7
 36470  0020AC  6EE6               	movwf	postinc1,c
 36471  0020AE  EC3F  F00E         	call	_TimerDone	;wreg free
 36472  0020B2  502A               	movf	btemp^0,w,c
 36473  0020B4  B4D8               	btfsc	status,2,c
 36474  0020B6  D006               	goto	l1870
 36475                           
 36476                           ;mconfig.c: 211:   old_info = V.response.info;
 36477  0020B8  0102               	movlb	2	; () banked
 36478  0020BA  51A1               	movf	(_V+161)& (0+255),w,b	;volatile
 36479                           
 36480                           ; BSR set to: 2
 36481                           ;mconfig.c: 212:   V.response.info = new_response_info;
 36482                           ;stkvar	_new_response_info @ sp[(0)+-1]
 36483  0020BC  0EFF               	movlw	-1
 36484  0020BE  006F FF8C  F2A1    	movff	plusw1,_V+161	;volatile
 36485  0020C4                     l1870:
 36486                           
 36487                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 36488  0020C4  52E5               	movf	postdec1,f,c
 36489  0020C6  0012               	return		;funcret
 36490  0020C8                     __end_of_set_display_info:
 36491                           	opt callstack 0
 36492                           
 36493 ;; *************** function _mode_lamp_dim *****************
 36494 ;; Defined at:
 36495 ;;		line 13 in file "mconfig.c"
 36496 ;; Parameters:    Size  Location     Type
 36497 ;;  level           2  [STACK] const unsigned short 
 36498 ;; Auto vars:     Size  Location     Type
 36499 ;;		None
 36500 ;; Return value:  Size  Location     Type
 36501 ;;                  1  [STACK] void 
 36502 ;; Registers used:
 36503 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 36504 ;; Tracked objects:
 36505 ;;		On entry : 0/2
 36506 ;;		On exit  : 0/0
 36507 ;;		Unchanged: 0/0
 36508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36513 ;;Total ram usage:        0 bytes
 36514 ;; Hardware stack levels used:    1
 36515 ;; Hardware stack levels required when called:   16
 36516 ;; This function calls:
 36517 ;;		_PWM8_LoadDutyValue
 36518 ;; This function is called by:
 36519 ;;		_main
 36520 ;;		_check_help
 36521 ;; This function uses a reentrant model
 36522 ;;
 36523                           
 36524                           	psect	text129
 36525  002116                     __ptext129:
 36526                           	opt callstack 0
 36527  002116                     _mode_lamp_dim:
 36528                           	opt callstack 14
 36529                           
 36530                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 36531                           ;stkvar	_level @ sp[(0)+-2]
 36532                           
 36533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36534                           ;incstack = 0
 36535  002116  0EFE               	movlw	-2
 36536  002118  006F FF8F FFE6     	movff	plusw1,postinc1
 36537  00211E  006F FF8F FFE6     	movff	plusw1,postinc1
 36538  002124  EC6D  F00B         	call	_PWM8_LoadDutyValue	;wreg free
 36539                           
 36540                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 36541  002128  52E5               	movf	postdec1,f,c
 36542  00212A  52E5               	movf	postdec1,f,c
 36543  00212C  0012               	return		;funcret
 36544  00212E                     __end_of_mode_lamp_dim:
 36545                           	opt callstack 0
 36546                           
 36547 ;; *************** function _mode_lamp_bright *****************
 36548 ;; Defined at:
 36549 ;;		line 18 in file "mconfig.c"
 36550 ;; Parameters:    Size  Location     Type
 36551 ;;		None
 36552 ;; Auto vars:     Size  Location     Type
 36553 ;;		None
 36554 ;; Return value:  Size  Location     Type
 36555 ;;                  1  [STACK] void 
 36556 ;; Registers used:
 36557 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 36558 ;; Tracked objects:
 36559 ;;		On entry : 0/0
 36560 ;;		On exit  : 0/0
 36561 ;;		Unchanged: 0/0
 36562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36567 ;;Total ram usage:        0 bytes
 36568 ;; Hardware stack levels used:    1
 36569 ;; Hardware stack levels required when called:   16
 36570 ;; This function calls:
 36571 ;;		_PWM8_LoadDutyValue
 36572 ;; This function is called by:
 36573 ;;		_check_help
 36574 ;; This function uses a reentrant model
 36575 ;;
 36576                           
 36577                           	psect	text130
 36578  00221E                     __ptext130:
 36579                           	opt callstack 0
 36580  00221E                     _mode_lamp_bright:
 36581                           	opt callstack 13
 36582                           
 36583                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 36584                           
 36585                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36586                           ;incstack = 0
 36587  00221E  0E2C               	movlw	44
 36588  002220  6EE6               	movwf	postinc1,c
 36589  002222  0E01               	movlw	1
 36590  002224  6EE6               	movwf	postinc1,c
 36591  002226  EC6D  F00B         	call	_PWM8_LoadDutyValue	;wreg free
 36592                           
 36593                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 36594  00222A  0012               	return		;funcret
 36595  00222C                     __end_of_mode_lamp_bright:
 36596                           	opt callstack 0
 36597                           
 36598 ;; *************** function _PWM8_LoadDutyValue *****************
 36599 ;; Defined at:
 36600 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 36601 ;; Parameters:    Size  Location     Type
 36602 ;;  dutyValue       2  [STACK] unsigned short 
 36603 ;; Auto vars:     Size  Location     Type
 36604 ;;		None
 36605 ;; Return value:  Size  Location     Type
 36606 ;;                  1  [STACK] void 
 36607 ;; Registers used:
 36608 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 36609 ;; Tracked objects:
 36610 ;;		On entry : 0/2
 36611 ;;		On exit  : 0/0
 36612 ;;		Unchanged: 0/0
 36613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36618 ;;Total ram usage:        0 bytes
 36619 ;; Hardware stack levels used:    1
 36620 ;; Hardware stack levels required when called:   15
 36621 ;; This function calls:
 36622 ;;		Nothing
 36623 ;; This function is called by:
 36624 ;;		_mode_lamp_dim
 36625 ;;		_mode_lamp_bright
 36626 ;; This function uses a reentrant model
 36627 ;;
 36628                           
 36629                           	psect	text131
 36630  0016DA                     __ptext131:
 36631                           	opt callstack 0
 36632  0016DA                     _PWM8_LoadDutyValue:
 36633                           	opt callstack 14
 36634                           
 36635                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 36636                           ;stkvar	_dutyValue @ sp[(0)+-2]
 36637                           
 36638                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36639                           ;incstack = 0
 36640  0016DA  0EFE               	movlw	-2
 36641  0016DC  006F FF8C  F034    	movff	plusw1,btemp+10
 36642  0016E2  0EFF               	movlw	-1
 36643  0016E4  006F FF8C  F035    	movff	plusw1,btemp+11
 36644  0016EA  90D8               	bcf	status,0,c
 36645  0016EC  3235               	rrcf	(btemp+11)^0,f,c
 36646  0016EE  3234               	rrcf	(btemp+10)^0,f,c
 36647  0016F0  90D8               	bcf	status,0,c
 36648  0016F2  3235               	rrcf	(btemp+11)^0,f,c
 36649  0016F4  3234               	rrcf	(btemp+10)^0,f,c
 36650  0016F6  5034               	movf	(btemp+10)^0,w,c
 36651  0016F8  6E61               	movwf	97,c	;volatile
 36652                           
 36653                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 36654                           ;stkvar	_dutyValue @ sp[(0)+-2]
 36655  0016FA  0EFE               	movlw	-2
 36656  0016FC  006F FF8C  F035    	movff	plusw1,btemp+11
 36657  001702  0E03               	movlw	3
 36658  001704  1635               	andwf	(btemp+11)^0,f,c
 36659  001706  0E06               	movlw	6
 36660  001708  6E2A               	movwf	btemp^0,c
 36661  00170A                     u12185:
 36662  00170A  90D8               	bcf	status,0,c
 36663  00170C  3635               	rlcf	(btemp+11)^0,f,c
 36664  00170E  2E2A               	decfsz	btemp^0,f,c
 36665  001710  D7FC               	goto	u12185
 36666  001712  5035               	movf	(btemp+11)^0,w,c
 36667  001714  6E60               	movwf	96,c	;volatile
 36668                           
 36669                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 36670  001716  52E5               	movf	postdec1,f,c
 36671  001718  52E5               	movf	postdec1,f,c
 36672  00171A  0012               	return		;funcret
 36673  00171C                     __end_of_PWM8_LoadDutyValue:
 36674                           	opt callstack 0
 36675                           
 36676 ;; *************** function _help_button *****************
 36677 ;; Defined at:
 36678 ;;		line 26 in file "mconfig.c"
 36679 ;; Parameters:    Size  Location     Type
 36680 ;;		None
 36681 ;; Auto vars:     Size  Location     Type
 36682 ;;		None
 36683 ;; Return value:  Size  Location     Type
 36684 ;;                  1  [STACK] _Bool 
 36685 ;; Registers used:
 36686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 36687 ;; Tracked objects:
 36688 ;;		On entry : 0/2
 36689 ;;		On exit  : 0/0
 36690 ;;		Unchanged: 0/0
 36691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36696 ;;Total ram usage:        0 bytes
 36697 ;; Hardware stack levels used:    1
 36698 ;; Hardware stack levels required when called:   16
 36699 ;; This function calls:
 36700 ;;		_StartTimer
 36701 ;;		_TimerDone
 36702 ;; This function is called by:
 36703 ;;		_check_help
 36704 ;; This function uses a reentrant model
 36705 ;;
 36706                           
 36707                           	psect	text132
 36708  001910                     __ptext132:
 36709                           	opt callstack 0
 36710  001910                     _help_button:
 36711                           	opt callstack 13
 36712                           
 36713                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 36714                           
 36715                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36716                           ;incstack = 0
 36717  001910  B0CB               	btfsc	203,0,c	;volatile
 36718  001912  D00C               	goto	l1813
 36719                           
 36720                           ;mconfig.c: 29:   V.help = 1;
 36721  001914  0102               	movlb	2	; () banked
 36722  001916  8598               	bsf	(_V+152)& (0+255),2,b	;volatile
 36723                           
 36724                           ; BSR set to: 2
 36725                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 36726  001918  0E08               	movlw	8
 36727  00191A  6EE6               	movwf	postinc1,c
 36728  00191C  EC3F  F00E         	call	_TimerDone	;wreg free
 36729  001920  502A               	movf	btemp^0,w,c
 36730  001922  B4D8               	btfsc	status,2,c
 36731  001924  D003               	goto	l1813
 36732                           
 36733                           ;mconfig.c: 31:    return 1;
 36734  001926  0E01               	movlw	1
 36735  001928  6E2A               	movwf	btemp^0,c
 36736  00192A  0012               	return	
 36737  00192C                     l1813:
 36738                           
 36739                           ;mconfig.c: 34:  if (!V.help)
 36740  00192C  0102               	movlb	2	; () banked
 36741  00192E  B598               	btfsc	(_V+152)& (0+255),2,b	;volatile
 36742  001930  D008               	goto	l13534
 36743                           
 36744                           ; BSR set to: 2
 36745                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 36746  001932  0E2C               	movlw	44
 36747  001934  6EE6               	movwf	postinc1,c
 36748  001936  0E01               	movlw	1
 36749  001938  6EE6               	movwf	postinc1,c
 36750  00193A  0E08               	movlw	8
 36751  00193C  6EE6               	movwf	postinc1,c
 36752  00193E  ECCE  F00B         	call	_StartTimer	;wreg free
 36753  001942                     l13534:
 36754                           
 36755                           ;mconfig.c: 37:  return 0;
 36756  001942  0E00               	movlw	0
 36757  001944  6E2A               	movwf	btemp^0,c
 36758                           
 36759                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 36760  001946  0012               	return		;funcret
 36761  001948                     __end_of_help_button:
 36762                           	opt callstack 0
 36763                           
 36764 ;; *************** function _TimerDone *****************
 36765 ;; Defined at:
 36766 ;;		line 20 in file "timers.c"
 36767 ;; Parameters:    Size  Location     Type
 36768 ;;  timer           1  [STACK] const unsigned char 
 36769 ;; Auto vars:     Size  Location     Type
 36770 ;;		None
 36771 ;; Return value:  Size  Location     Type
 36772 ;;                  1  [STACK] _Bool 
 36773 ;; Registers used:
 36774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 36775 ;; Tracked objects:
 36776 ;;		On entry : 0/2
 36777 ;;		On exit  : 0/0
 36778 ;;		Unchanged: 0/0
 36779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36784 ;;Total ram usage:        0 bytes
 36785 ;; Hardware stack levels used:    1
 36786 ;; Hardware stack levels required when called:   15
 36787 ;; This function calls:
 36788 ;;		Nothing
 36789 ;; This function is called by:
 36790 ;;		_main
 36791 ;;		_WaitMs
 36792 ;;		_help_button
 36793 ;;		_check_help
 36794 ;;		_set_display_info
 36795 ;;		_update_adc_result
 36796 ;;		_esr_check
 36797 ;; This function uses a reentrant model
 36798 ;;
 36799                           
 36800                           	psect	text133
 36801  001C7E                     __ptext133:
 36802                           	opt callstack 0
 36803  001C7E                     _TimerDone:
 36804                           	opt callstack 14
 36805                           
 36806                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36807                           ;incstack = 0
 36808  001C7E  0004               	clrwdt		;# 
 36809                           
 36810                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 36811                           ;stkvar	_timer @ sp[(0)+-1]
 36812  001C80  0EFF               	movlw	-1
 36813  001C82  50E3               	movf	plusw1,w,c
 36814  001C84  0D02               	mullw	2
 36815  001C86  0EB5               	movlw	low _tickCount
 36816  001C88  24F3               	addwf	243,w,c
 36817  001C8A  6ED9               	movwf	fsr2l,c
 36818  001C8C  0E02               	movlw	high _tickCount
 36819  001C8E  20F4               	addwfc	prodh,w,c
 36820  001C90  6EDA               	movwf	fsr2h,c
 36821  001C92  50DE               	movf	postinc2,w,c
 36822  001C94  10DE               	iorwf	postinc2,w,c
 36823  001C96  A4D8               	btfss	status,2,c
 36824  001C98  D002               	goto	l12290
 36825                           
 36826                           ;timers.c: 24:   return 1;
 36827  001C9A  0E01               	movlw	1
 36828  001C9C  D001               	goto	L41
 36829  001C9E                     l12290:
 36830                           
 36831                           ;timers.c: 26:  return 0;
 36832  001C9E  0E00               	movlw	0
 36833  001CA0                     L41:
 36834  001CA0  6E2A               	movwf	btemp^0,c
 36835                           
 36836                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 36837  001CA2  52E5               	movf	postdec1,f,c
 36838  001CA4  0012               	return		;funcret
 36839  001CA6                     __end_of_TimerDone:
 36840                           	opt callstack 0
 36841                           
 36842 ;; *************** function _StartTimer *****************
 36843 ;; Defined at:
 36844 ;;		line 12 in file "timers.c"
 36845 ;; Parameters:    Size  Location     Type
 36846 ;;  timer           1  [STACK] const unsigned char 
 36847 ;;  count           2  [STACK] const unsigned short 
 36848 ;; Auto vars:     Size  Location     Type
 36849 ;;		None
 36850 ;; Return value:  Size  Location     Type
 36851 ;;                  1  [STACK] void 
 36852 ;; Registers used:
 36853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 36854 ;; Tracked objects:
 36855 ;;		On entry : 0/0
 36856 ;;		On exit  : 0/0
 36857 ;;		Unchanged: 0/0
 36858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36863 ;;Total ram usage:        0 bytes
 36864 ;; Hardware stack levels used:    1
 36865 ;; Hardware stack levels required when called:   15
 36866 ;; This function calls:
 36867 ;;		Nothing
 36868 ;; This function is called by:
 36869 ;;		_main
 36870 ;;		_WaitMs
 36871 ;;		_help_button
 36872 ;;		_check_help
 36873 ;;		_update_adc_result
 36874 ;;		_calc_bsoc
 36875 ;;		_esr_check
 36876 ;; This function uses a reentrant model
 36877 ;;
 36878                           
 36879                           	psect	text134
 36880  00179C                     __ptext134:
 36881                           	opt callstack 0
 36882  00179C                     _StartTimer:
 36883                           	opt callstack 0
 36884                           
 36885                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 36886                           ;stkvar	_count @ sp[(0)+-3]
 36887                           
 36888                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36889                           ;incstack = 0
 36890 ;; hardware stack exceeded
 36891  00179C  0EFD               	movlw	-3
 36892  00179E  006F FF8C  F034    	movff	plusw1,btemp+10
 36893  0017A4  0EFE               	movlw	-2
 36894  0017A6  006F FF8C  F035    	movff	plusw1,btemp+11
 36895  0017AC  90D8               	bcf	status,0,c
 36896  0017AE  3434               	rlcf	(btemp+10)^0,w,c
 36897  0017B0  6E32               	movwf	(btemp+8)^0,c
 36898  0017B2  3435               	rlcf	(btemp+11)^0,w,c
 36899  0017B4  6E33               	movwf	(btemp+9)^0,c
 36900                           
 36901                           ;stkvar	_timer @ sp[(0)+-1]
 36902  0017B6  0EFF               	movlw	-1
 36903  0017B8  50E3               	movf	plusw1,w,c
 36904  0017BA  0D02               	mullw	2
 36905  0017BC  0EB5               	movlw	low _tickCount
 36906  0017BE  24F3               	addwf	243,w,c
 36907  0017C0  6ED9               	movwf	fsr2l,c
 36908  0017C2  0E02               	movlw	high _tickCount
 36909  0017C4  20F4               	addwfc	prodh,w,c
 36910  0017C6  6EDA               	movwf	fsr2h,c
 36911  0017C8  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 36912  0017CE  0060  F0CF  FFDD   	movff	btemp+9,postdec2
 36913                           
 36914                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 36915  0017D4  52E5               	movf	postdec1,f,c
 36916  0017D6  52E5               	movf	postdec1,f,c
 36917  0017D8  52E5               	movf	postdec1,f,c
 36918  0017DA  0012               	return		;funcret
 36919  0017DC                     __end_of_StartTimer:
 36920                           	opt callstack 0
 36921                           
 36922 ;; *************** function _display_info *****************
 36923 ;; Defined at:
 36924 ;;		line 196 in file "mconfig.c"
 36925 ;; Parameters:    Size  Location     Type
 36926 ;;		None
 36927 ;; Auto vars:     Size  Location     Type
 36928 ;;		None
 36929 ;; Return value:  Size  Location     Type
 36930 ;;                  1  [STACK] enum E16677
 36931 ;; Registers used:
 36932 ;;		btemp
 36933 ;; Tracked objects:
 36934 ;;		On entry : 0/2
 36935 ;;		On exit  : 0/0
 36936 ;;		Unchanged: 0/0
 36937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36942 ;;Total ram usage:        0 bytes
 36943 ;; Hardware stack levels used:    1
 36944 ;; Hardware stack levels required when called:   15
 36945 ;; This function calls:
 36946 ;;		Nothing
 36947 ;; This function is called by:
 36948 ;;		_check_help
 36949 ;; This function uses a reentrant model
 36950 ;;
 36951                           
 36952                           	psect	text135
 36953  0022A2                     __ptext135:
 36954                           	opt callstack 0
 36955  0022A2                     _display_info:
 36956                           	opt callstack 14
 36957                           
 36958                           ;mconfig.c: 198:  return V.response.info;
 36959                           
 36960                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36961                           ;incstack = 0
 36962  0022A2  0060  FA84  F02A   	movff	_V+161,btemp	;volatile
 36963                           
 36964                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 36965  0022A8  0012               	return		;funcret
 36966  0022AA                     __end_of_display_info:
 36967                           	opt callstack 0
 36968                           
 36969 ;; *************** function _display_help *****************
 36970 ;; Defined at:
 36971 ;;		line 201 in file "mconfig.c"
 36972 ;; Parameters:    Size  Location     Type
 36973 ;;		None
 36974 ;; Auto vars:     Size  Location     Type
 36975 ;;		None
 36976 ;; Return value:  Size  Location     Type
 36977 ;;                  1  [STACK] enum E16677
 36978 ;; Registers used:
 36979 ;;		btemp
 36980 ;; Tracked objects:
 36981 ;;		On entry : 3F/2
 36982 ;;		On exit  : 0/0
 36983 ;;		Unchanged: 0/0
 36984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36989 ;;Total ram usage:        0 bytes
 36990 ;; Hardware stack levels used:    1
 36991 ;; Hardware stack levels required when called:   15
 36992 ;; This function calls:
 36993 ;;		Nothing
 36994 ;; This function is called by:
 36995 ;;		_check_help
 36996 ;; This function uses a reentrant model
 36997 ;;
 36998                           
 36999                           	psect	text136
 37000  0022AA                     __ptext136:
 37001                           	opt callstack 0
 37002  0022AA                     _display_help:
 37003                           	opt callstack 14
 37004                           
 37005                           ;mconfig.c: 203:  return V.response.help_temp;
 37006                           
 37007                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37008                           ;incstack = 0
 37009  0022AA  0060  FA88  F02A   	movff	_V+162,btemp	;volatile
 37010                           
 37011                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 37012  0022B0  0012               	return		;funcret
 37013  0022B2                     __end_of_display_help:
 37014                           	opt callstack 0
 37015                           
 37016 ;; *************** function _check_enter_button *****************
 37017 ;; Defined at:
 37018 ;;		line 49 in file "hid.c"
 37019 ;; Parameters:    Size  Location     Type
 37020 ;;  h               2  [STACK] PTR struct H_data
 37021 ;;		 -> H(9), 
 37022 ;; Auto vars:     Size  Location     Type
 37023 ;;		None
 37024 ;; Return value:  Size  Location     Type
 37025 ;;                  1  [STACK] _Bool 
 37026 ;; Registers used:
 37027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 37028 ;; Tracked objects:
 37029 ;;		On entry : 0/0
 37030 ;;		On exit  : 0/0
 37031 ;;		Unchanged: 0/0
 37032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37037 ;;Total ram usage:        0 bytes
 37038 ;; Hardware stack levels used:    1
 37039 ;; Hardware stack levels required when called:   15
 37040 ;; This function calls:
 37041 ;;		Nothing
 37042 ;; This function is called by:
 37043 ;;		_main
 37044 ;; This function uses a reentrant model
 37045 ;;
 37046                           
 37047                           	psect	text137
 37048  000C5E                     __ptext137:
 37049                           	opt callstack 0
 37050  000C5E                     _check_enter_button:
 37051                           	opt callstack 15
 37052                           
 37053                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 37054                           ;stkvar	_h @ sp[(0)+-2]
 37055                           
 37056                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37057                           ;incstack = 0
 37058  000C5E  0EFE               	movlw	-2
 37059  000C60  006F FF8C  F034    	movff	plusw1,btemp+10
 37060  000C66  0EFF               	movlw	-1
 37061  000C68  006F FF8C  F035    	movff	plusw1,btemp+11
 37062  000C6E  0E04               	movlw	4
 37063  000C70  2434               	addwf	(btemp+10)^0,w,c
 37064  000C72  6ED9               	movwf	fsr2l,c
 37065  000C74  0E00               	movlw	0
 37066  000C76  2035               	addwfc	(btemp+11)^0,w,c
 37067  000C78  6EDA               	movwf	fsr2h,c
 37068  000C7A  50DF               	movf	indf2,w,c
 37069  000C7C  A4D8               	btfss	status,2,c
 37070  000C7E  D023               	goto	l16936
 37071                           
 37072                           ;stkvar	_h @ sp[(0)+-2]
 37073  000C80  0EFE               	movlw	-2
 37074  000C82  006F FF8C  F034    	movff	plusw1,btemp+10
 37075  000C88  0EFF               	movlw	-1
 37076  000C8A  006F FF8C  F035    	movff	plusw1,btemp+11
 37077  000C90  0E05               	movlw	5
 37078  000C92  2434               	addwf	(btemp+10)^0,w,c
 37079  000C94  6ED9               	movwf	fsr2l,c
 37080  000C96  0E00               	movlw	0
 37081  000C98  2035               	addwfc	(btemp+11)^0,w,c
 37082  000C9A  6EDA               	movwf	fsr2h,c
 37083  000C9C  50DF               	movf	indf2,w,c
 37084  000C9E  A4D8               	btfss	status,2,c
 37085  000CA0  D012               	goto	l16936
 37086                           
 37087                           ;hid.c: 52:   h->wait_enter = 1;
 37088                           ;stkvar	_h @ sp[(0)+-2]
 37089  000CA2  0EFE               	movlw	-2
 37090  000CA4  006F FF8C  F034    	movff	plusw1,btemp+10
 37091  000CAA  0EFF               	movlw	-1
 37092  000CAC  006F FF8C  F035    	movff	plusw1,btemp+11
 37093  000CB2  0E04               	movlw	4
 37094  000CB4  2434               	addwf	(btemp+10)^0,w,c
 37095  000CB6  6ED9               	movwf	fsr2l,c
 37096  000CB8  0E00               	movlw	0
 37097  000CBA  2035               	addwfc	(btemp+11)^0,w,c
 37098  000CBC  6EDA               	movwf	fsr2h,c
 37099  000CBE  0E01               	movlw	1
 37100  000CC0  6EDF               	movwf	indf2,c
 37101                           
 37102                           ;hid.c: 53:   return 1;
 37103  000CC2  0E01               	movlw	1
 37104  000CC4  D001               	goto	L42
 37105  000CC6                     l16936:
 37106                           
 37107                           ;hid.c: 55:  return 0;
 37108  000CC6  0E00               	movlw	0
 37109  000CC8                     L42:
 37110  000CC8  6E2A               	movwf	btemp^0,c
 37111                           
 37112                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 37113  000CCA  52E5               	movf	postdec1,f,c
 37114  000CCC  52E5               	movf	postdec1,f,c
 37115  000CCE  0012               	return		;funcret
 37116  000CD0                     __end_of_check_enter_button:
 37117                           	opt callstack 0
 37118                           
 37119 ;; *************** function _calc_ror_data *****************
 37120 ;; Defined at:
 37121 ;;		line 103 in file "mbmc.c"
 37122 ;; Parameters:    Size  Location     Type
 37123 ;;		None
 37124 ;; Auto vars:     Size  Location     Type
 37125 ;;		None
 37126 ;; Return value:  Size  Location     Type
 37127 ;;                  1  [STACK] void 
 37128 ;; Registers used:
 37129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37130 ;; Tracked objects:
 37131 ;;		On entry : 0/0
 37132 ;;		On exit  : 0/0
 37133 ;;		Unchanged: 0/0
 37134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37139 ;;Total ram usage:        0 bytes
 37140 ;; Hardware stack levels used:    1
 37141 ;; Hardware stack levels required when called:   18
 37142 ;; This function calls:
 37143 ;;		___flge
 37144 ;;		___flsub
 37145 ;;		_conv_raw_result
 37146 ;;		_fabsf
 37147 ;; This function is called by:
 37148 ;;		_main
 37149 ;; This function uses a reentrant model
 37150 ;;
 37151                           
 37152                           	psect	text138
 37153  01DA6A                     __ptext138:
 37154                           	opt callstack 0
 37155  01DA6A                     _calc_ror_data:
 37156                           	opt callstack 12
 37157                           
 37158                           ;mbmc.c: 105:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 107:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 37159                           
 37160                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37161                           ;incstack = 0
 37162  01DA6A  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 37163  01DA70  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 37164  01DA76  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 37165  01DA7C  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 37166  01DA82  0E00               	movlw	0
 37167  01DA84  6EE6               	movwf	postinc1,c
 37168  01DA86  0E00               	movlw	0
 37169  01DA88  6EE6               	movwf	postinc1,c
 37170  01DA8A  EC5B  F0C2         	call	_conv_raw_result	;wreg free
 37171  01DA8E  0060  F0AB  FFE6   	movff	btemp,postinc1
 37172  01DA94  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37173  01DA9A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37174  01DAA0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37175  01DAA6  EC28  F00B         	call	___flsub	;wreg free
 37176  01DAAA  0060  F0AB  FFE6   	movff	btemp,postinc1
 37177  01DAB0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37178  01DAB6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37179  01DABC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37180  01DAC2  ECB6  F000         	call	_fabsf	;wreg free
 37181  01DAC6  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 37182  01DACC  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 37183  01DAD2  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 37184  01DAD8  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 37185                           
 37186                           ;mbmc.c: 108:  bcror = conv_raw_result(C_BATT, CONV);
 37187  01DADE  0E00               	movlw	0
 37188  01DAE0  6EE6               	movwf	postinc1,c
 37189  01DAE2  0E00               	movlw	0
 37190  01DAE4  6EE6               	movwf	postinc1,c
 37191  01DAE6  EC5B  F0C2         	call	_conv_raw_result	;wreg free
 37192  01DAEA  0060  F0A8  F086   	movff	btemp,calc_ror_data@bcror
 37193  01DAF0  0060  F0AC  F087   	movff	btemp+1,calc_ror_data@bcror+1
 37194  01DAF6  0060  F0B0  F088   	movff	btemp+2,calc_ror_data@bcror+2
 37195  01DAFC  0060  F0B4  F089   	movff	btemp+3,calc_ror_data@bcror+3
 37196                           
 37197                           ;mbmc.c: 109:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 37198  01DB02  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 37199  01DB08  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 37200  01DB0E  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 37201  01DB14  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 37202  01DB1A  0E00               	movlw	0
 37203  01DB1C  6EE6               	movwf	postinc1,c
 37204  01DB1E  0E04               	movlw	4
 37205  01DB20  6EE6               	movwf	postinc1,c
 37206  01DB22  EC5B  F0C2         	call	_conv_raw_result	;wreg free
 37207  01DB26  0060  F0AB  FFE6   	movff	btemp,postinc1
 37208  01DB2C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37209  01DB32  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37210  01DB38  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37211  01DB3E  EC28  F00B         	call	___flsub	;wreg free
 37212  01DB42  0060  F0AB  FFE6   	movff	btemp,postinc1
 37213  01DB48  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37214  01DB4E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37215  01DB54  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37216  01DB5A  ECB6  F000         	call	_fabsf	;wreg free
 37217  01DB5E  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 37218  01DB64  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 37219  01DB6A  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 37220  01DB70  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 37221                           
 37222                           ;mbmc.c: 110:  if (C.bv_ror < 0.0051)
 37223  01DB76  0EE7               	movlw	231
 37224  01DB78  6EE6               	movwf	postinc1,c
 37225  01DB7A  0E1D               	movlw	29
 37226  01DB7C  6EE6               	movwf	postinc1,c
 37227  01DB7E  0EA7               	movlw	167
 37228  01DB80  6EE6               	movwf	postinc1,c
 37229  01DB82  0E3B               	movlw	59
 37230  01DB84  6EE6               	movwf	postinc1,c
 37231  01DB86  EE22  F16B         	lfsr	2,_C+108	;volatile
 37232  01DB8A  006F FF7B FFE6     	movff	postinc2,postinc1
 37233  01DB90  006F FF7B FFE6     	movff	postinc2,postinc1
 37234  01DB96  006F FF7B FFE6     	movff	postinc2,postinc1
 37235  01DB9C  006F FF7B FFE6     	movff	postinc2,postinc1
 37236  01DBA2  ECDD  F0F0         	call	___flge	;wreg free
 37237  01DBA6  B02A               	btfsc	btemp& (0+255),0,c
 37238  01DBA8  D010               	goto	l14114
 37239                           
 37240                           ;mbmc.c: 111:   C.bv_ror = 0.0140 + 0.0001;
 37241  01DBAA  0EB0               	movlw	176
 37242  01DBAC  006F FFA0  F96B    	movff	wreg,_C+108	;volatile
 37243  01DBB2  0E03               	movlw	3
 37244  01DBB4  006F FFA0  F96C    	movff	wreg,_C+109	;volatile
 37245  01DBBA  0E67               	movlw	103
 37246  01DBBC  006F FFA0  F96D    	movff	wreg,_C+110	;volatile
 37247  01DBC2  0E3C               	movlw	60
 37248  01DBC4  006F FFA0  F96E    	movff	wreg,_C+111	;volatile
 37249  01DBCA                     l14114:
 37250                           
 37251                           ;mbmc.c: 112:  bvror = conv_raw_result(V_BAT, CONV);
 37252  01DBCA  0E00               	movlw	0
 37253  01DBCC  6EE6               	movwf	postinc1,c
 37254  01DBCE  0E04               	movlw	4
 37255  01DBD0  6EE6               	movwf	postinc1,c
 37256  01DBD2  EC5B  F0C2         	call	_conv_raw_result	;wreg free
 37257  01DBD6  0060  F0A8  F08A   	movff	btemp,calc_ror_data@bvror
 37258  01DBDC  0060  F0AC  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 37259  01DBE2  0060  F0B0  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 37260  01DBE8  0060  F0B4  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 37261                           
 37262                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 37263  01DBEE  0012               	return		;funcret
 37264  01DBF0                     __end_of_calc_ror_data:
 37265                           	opt callstack 0
 37266                           
 37267 ;; *************** function _fabsf *****************
 37268 ;; Defined at:
 37269 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 37270 ;; Parameters:    Size  Location     Type
 37271 ;;  x               4  [STACK] float 
 37272 ;; Auto vars:     Size  Location     Type
 37273 ;;  u               4  [STACK] struct .
 37274 ;; Return value:  Size  Location     Type
 37275 ;;                  4  [STACK] float 
 37276 ;; Registers used:
 37277 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 37278 ;; Tracked objects:
 37279 ;;		On entry : 0/0
 37280 ;;		On exit  : 0/0
 37281 ;;		Unchanged: 0/0
 37282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37287 ;;Total ram usage:        0 bytes
 37288 ;; Hardware stack levels used:    1
 37289 ;; Hardware stack levels required when called:   15
 37290 ;; This function calls:
 37291 ;;		Nothing
 37292 ;; This function is called by:
 37293 ;;		_main
 37294 ;;		_calc_ror_data
 37295 ;;		_calc_bsoc
 37296 ;;		_esr_check
 37297 ;; This function uses a reentrant model
 37298 ;;
 37299                           
 37300                           	psect	text139
 37301  00016C                     __ptext139:
 37302                           	opt callstack 0
 37303  00016C                     _fabsf:
 37304                           	opt callstack 0
 37305                           
 37306                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37307  00016C  52E6               	movf	postinc1,f,c
 37308  00016E  52E6               	movf	postinc1,f,c
 37309  000170  52E6               	movf	postinc1,f,c
 37310  000172  52E6               	movf	postinc1,f,c
 37311                           
 37312                           ;incstack = 0
 37313 ;; hardware stack exceeded
 37314  000174  0060  F1F8  F032   	movff	fabsf@F463,btemp+8
 37315  00017A  0060  F1FC  F033   	movff	fabsf@F463+1,btemp+9
 37316  000180  0060  F200  F034   	movff	fabsf@F463+2,btemp+10
 37317  000186  0060  F204  F035   	movff	fabsf@F463+3,btemp+11
 37318                           
 37319                           ;stkvar	_u @ sp[(-4)+0]
 37320  00018C  0EFC               	movlw	-4
 37321  00018E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 37322  000194  0EFD               	movlw	-3
 37323  000196  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 37324  00019C  0EFE               	movlw	-2
 37325  00019E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37326  0001A4  0EFF               	movlw	-1
 37327  0001A6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37328                           
 37329                           ;stkvar	_x @ sp[(-4)+-4]
 37330  0001AC  0EF8               	movlw	-8
 37331  0001AE  006F FF8C  F032    	movff	plusw1,btemp+8
 37332  0001B4  0EF9               	movlw	-7
 37333  0001B6  006F FF8C  F033    	movff	plusw1,btemp+9
 37334  0001BC  0EFA               	movlw	-6
 37335  0001BE  006F FF8C  F034    	movff	plusw1,btemp+10
 37336  0001C4  0EFB               	movlw	-5
 37337  0001C6  006F FF8C  F035    	movff	plusw1,btemp+11
 37338                           
 37339                           ;stkvar	_u @ sp[(-4)+0]
 37340  0001CC  0EFC               	movlw	-4
 37341  0001CE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 37342  0001D4  0EFD               	movlw	-3
 37343  0001D6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 37344  0001DC  0EFE               	movlw	-2
 37345  0001DE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37346  0001E4  0EFF               	movlw	-1
 37347  0001E6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37348                           
 37349                           ;stkvar	_u @ sp[(-4)+0]
 37350  0001EC  0EFF               	movlw	-1
 37351  0001EE  9EE3               	bcf	plusw1,7,c
 37352                           
 37353                           ;stkvar	_u @ sp[(-4)+0]
 37354  0001F0  0EFC               	movlw	-4
 37355  0001F2  006F FF8C  F02A    	movff	plusw1,btemp
 37356  0001F8  0EFD               	movlw	-3
 37357  0001FA  006F FF8C  F02B    	movff	plusw1,btemp+1
 37358  000200  0EFE               	movlw	-2
 37359  000202  006F FF8C  F02C    	movff	plusw1,btemp+2
 37360  000208  0EFF               	movlw	-1
 37361  00020A  006F FF8C  F02D    	movff	plusw1,btemp+3
 37362                           
 37363                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 37364  000210  0EF8               	movlw	248
 37365  000212  26E1               	addwf	fsr1l,f,c
 37366  000214  0EFF               	movlw	255
 37367  000216  22E2               	addwfc	fsr1h,f,c
 37368  000218  0012               	return		;funcret
 37369  00021A                     __end_of_fabsf:
 37370                           	opt callstack 0
 37371                           
 37372 ;; *************** function _conv_raw_result *****************
 37373 ;; Defined at:
 37374 ;;		line 133 in file "daq.c"
 37375 ;; Parameters:    Size  Location     Type
 37376 ;;  chan            1  [STACK] const enum E16605
 37377 ;;  to_what         1  [STACK] const enum E16996
 37378 ;; Auto vars:     Size  Location     Type
 37379 ;;		None
 37380 ;; Return value:  Size  Location     Type
 37381 ;;                  4  [STACK] float 
 37382 ;; Registers used:
 37383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37384 ;; Tracked objects:
 37385 ;;		On entry : 0/0
 37386 ;;		On exit  : 0/0
 37387 ;;		Unchanged: 0/0
 37388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37393 ;;Total ram usage:        0 bytes
 37394 ;; Hardware stack levels used:    1
 37395 ;; Hardware stack levels required when called:   17
 37396 ;; This function calls:
 37397 ;;		___fldiv
 37398 ;;		___flmul
 37399 ;;		___flsub
 37400 ;;		___xxtofl
 37401 ;;		_get_raw_result
 37402 ;;		_nanf
 37403 ;; This function is called by:
 37404 ;;		_main
 37405 ;;		_convert_adc_data
 37406 ;;		_calc_ror_data
 37407 ;;		_check_day_time
 37408 ;;		_init_bsoc
 37409 ;;		_esr_check
 37410 ;; This function uses a reentrant model
 37411 ;;
 37412                           
 37413                           	psect	text140
 37414  0184B6                     __ptext140:
 37415                           	opt callstack 0
 37416  0184B6                     _conv_raw_result:
 37417                           	opt callstack 0
 37418                           
 37419                           ;daq.c: 133: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 134: {;daq.c: 136:  switch (to_what) {
 37420                           
 37421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37422                           ;incstack = 0
 37423 ;; hardware stack exceeded
 37424  0184B6  D24A               	goto	l12272
 37425  0184B8                     l12218:
 37426                           
 37427                           ;daq.c: 138:   if (!(0b0011110001110111 >> chan & 0x1))
 37428                           ;stkvar	_chan @ sp[(0)+-1]
 37429  0184B8  0EFF               	movlw	-1
 37430  0184BA  006F FF8C  F035    	movff	plusw1,btemp+11
 37431  0184C0  0E77               	movlw	119
 37432  0184C2  6E32               	movwf	(btemp+8)^0,c
 37433  0184C4  0E3C               	movlw	60
 37434  0184C6  6E33               	movwf	(btemp+9)^0,c
 37435  0184C8  2A35               	incf	(btemp+11)^0,f,c
 37436  0184CA  D003               	goto	u11534
 37437  0184CC                     u11535:
 37438  0184CC  3433               	rlcf	(btemp+9)^0,w,c
 37439  0184CE  3233               	rrcf	(btemp+9)^0,f,c
 37440  0184D0  3232               	rrcf	(btemp+8)^0,f,c
 37441  0184D2                     u11534:
 37442  0184D2  2E35               	decfsz	(btemp+11)^0,f,c
 37443  0184D4  D7FB               	goto	u11535
 37444  0184D6  B032               	btfsc	(btemp+8)^0,0,c
 37445  0184D8  D007               	goto	l12224
 37446                           
 37447                           ;daq.c: 139:    return nanf("");
 37448  0184DA  0EBD               	movlw	low (STR_90+126)
 37449  0184DC  6EE6               	movwf	postinc1,c
 37450  0184DE  0EFA               	movlw	high (STR_90+126)
 37451  0184E0  6EE6               	movwf	postinc1,c
 37452  0184E2  EC6E  F008         	call	_nanf	;wreg free
 37453  0184E6  D242               	goto	l1970
 37454  0184E8                     l12224:
 37455                           
 37456                           ;daq.c: 141:   if (0b0000000000000011 >> chan & 0x1) {
 37457                           ;stkvar	_chan @ sp[(0)+-1]
 37458  0184E8  0EFF               	movlw	-1
 37459  0184EA  006F FF8C  F035    	movff	plusw1,btemp+11
 37460  0184F0  0E03               	movlw	3
 37461  0184F2  6E32               	movwf	(btemp+8)^0,c
 37462  0184F4  0E00               	movlw	0
 37463  0184F6  6E33               	movwf	(btemp+9)^0,c
 37464  0184F8  2A35               	incf	(btemp+11)^0,f,c
 37465  0184FA  D003               	goto	u11554
 37466  0184FC                     u11555:
 37467  0184FC  3433               	rlcf	(btemp+9)^0,w,c
 37468  0184FE  3233               	rrcf	(btemp+9)^0,f,c
 37469  018500  3232               	rrcf	(btemp+8)^0,f,c
 37470  018502                     u11554:
 37471  018502  2E35               	decfsz	(btemp+11)^0,f,c
 37472  018504  D7FB               	goto	u11555
 37473  018506  A032               	btfss	(btemp+8)^0,0,c
 37474  018508  D0F3               	goto	l12238
 37475                           
 37476                           ;daq.c: 142:    if (0b0000000000000001 >> chan & 0x1) {
 37477                           ;stkvar	_chan @ sp[(0)+-1]
 37478  01850A  0EFF               	movlw	-1
 37479  01850C  006F FF8C  F035    	movff	plusw1,btemp+11
 37480  018512  0E01               	movlw	1
 37481  018514  6E32               	movwf	(btemp+8)^0,c
 37482  018516  0E00               	movlw	0
 37483  018518  6E33               	movwf	(btemp+9)^0,c
 37484  01851A  2A35               	incf	(btemp+11)^0,f,c
 37485  01851C  D003               	goto	u11574
 37486  01851E                     u11575:
 37487  01851E  3433               	rlcf	(btemp+9)^0,w,c
 37488  018520  3233               	rrcf	(btemp+9)^0,f,c
 37489  018522  3232               	rrcf	(btemp+8)^0,f,c
 37490  018524                     u11574:
 37491  018524  2E35               	decfsz	(btemp+11)^0,f,c
 37492  018526  D7FB               	goto	u11575
 37493  018528  A032               	btfss	(btemp+8)^0,0,c
 37494  01852A  D071               	goto	l12234
 37495                           
 37496                           ;daq.c: 143:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 37497  01852C  0060  F4C7  FFE6   	movff	_R+42,postinc1
 37498  018532  0060  F4CB  FFE6   	movff	_R+43,postinc1
 37499  018538  0060  F4CF  FFE6   	movff	_R+44,postinc1
 37500  01853E  0060  F4D3  FFE6   	movff	_R+45,postinc1
 37501  018544  0060  F4B4  F032   	movff	_R+38,btemp+8	;volatile
 37502  01854A  0060  F4B8  F033   	movff	_R+39,btemp+9	;volatile
 37503  018550  0E00               	movlw	0
 37504  018552  BE33               	btfsc	(btemp+9)^0,7,c
 37505  018554  0EFF               	movlw	255
 37506  018556  6E34               	movwf	(btemp+10)^0,c
 37507  018558  6E35               	movwf	(btemp+11)^0,c
 37508  01855A  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 37509  018560  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 37510  018566  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 37511  01856C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 37512  018572  0E01               	movlw	1
 37513  018574  6EE6               	movwf	postinc1,c
 37514  018576  EC63  F0E6         	call	___xxtofl	;wreg free
 37515  01857A  0060  F0AB  FFE6   	movff	btemp,postinc1
 37516  018580  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37517  018586  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37518  01858C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37519                           
 37520                           ;stkvar	_chan @ sp[(-8)+-1]
 37521  018592  0EF7               	movlw	-9
 37522  018594  50E3               	movf	plusw1,w,c
 37523  018596  6EE6               	movwf	postinc1,c
 37524  018598  ECD5  F00F         	call	_get_raw_result	;wreg free
 37525  01859C  0060  F0A8  F034   	movff	btemp,btemp+10
 37526  0185A2  0060  F0AC  F035   	movff	btemp+1,btemp+11
 37527  0185A8  5034               	movf	(btemp+10)^0,w,c
 37528  0185AA  6E2E               	movwf	(btemp+4)^0,c
 37529  0185AC  5035               	movf	(btemp+11)^0,w,c
 37530  0185AE  6E2F               	movwf	(btemp+5)^0,c
 37531  0185B0  6A30               	clrf	(btemp+6)^0,c
 37532  0185B2  6A31               	clrf	(btemp+7)^0,c
 37533  0185B4  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 37534  0185BA  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 37535  0185C0  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 37536  0185C6  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 37537  0185CC  0E00               	movlw	0
 37538  0185CE  6EE6               	movwf	postinc1,c
 37539  0185D0  EC63  F0E6         	call	___xxtofl	;wreg free
 37540  0185D4  0060  F0AB  FFE6   	movff	btemp,postinc1
 37541  0185DA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37542  0185E0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37543  0185E6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37544  0185EC  EC28  F00B         	call	___flsub	;wreg free
 37545  0185F0  0060  F0AB  FFE6   	movff	btemp,postinc1
 37546  0185F6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37547  0185FC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37548  018602  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37549  018608  ECC2  F0B1         	call	___flmul	;wreg free
 37550  01860C  D1AF               	goto	l1970
 37551  01860E                     l12234:
 37552                           
 37553                           ;daq.c: 145:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 37554  01860E  0060  F4D7  FFE6   	movff	_R+46,postinc1
 37555  018614  0060  F4DB  FFE6   	movff	_R+47,postinc1
 37556  01861A  0060  F4DF  FFE6   	movff	_R+48,postinc1
 37557  018620  0060  F4E3  FFE6   	movff	_R+49,postinc1
 37558  018626  0060  F4BC  F032   	movff	_R+40,btemp+8	;volatile
 37559  01862C  0060  F4C0  F033   	movff	_R+41,btemp+9	;volatile
 37560  018632  0E00               	movlw	0
 37561  018634  BE33               	btfsc	(btemp+9)^0,7,c
 37562  018636  0EFF               	movlw	255
 37563  018638  6E34               	movwf	(btemp+10)^0,c
 37564  01863A  6E35               	movwf	(btemp+11)^0,c
 37565  01863C  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 37566  018642  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 37567  018648  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 37568  01864E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 37569  018654  0E01               	movlw	1
 37570  018656  6EE6               	movwf	postinc1,c
 37571  018658  EC63  F0E6         	call	___xxtofl	;wreg free
 37572  01865C  0060  F0AB  FFE6   	movff	btemp,postinc1
 37573  018662  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37574  018668  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37575  01866E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37576                           
 37577                           ;stkvar	_chan @ sp[(-8)+-1]
 37578  018674  0EF7               	movlw	-9
 37579  018676  50E3               	movf	plusw1,w,c
 37580  018678  6EE6               	movwf	postinc1,c
 37581  01867A  ECD5  F00F         	call	_get_raw_result	;wreg free
 37582  01867E  0060  F0A8  F034   	movff	btemp,btemp+10
 37583  018684  0060  F0AC  F035   	movff	btemp+1,btemp+11
 37584  01868A  5034               	movf	(btemp+10)^0,w,c
 37585  01868C  6E2E               	movwf	(btemp+4)^0,c
 37586  01868E  5035               	movf	(btemp+11)^0,w,c
 37587  018690  6E2F               	movwf	(btemp+5)^0,c
 37588  018692  6A30               	clrf	(btemp+6)^0,c
 37589  018694  6A31               	clrf	(btemp+7)^0,c
 37590  018696  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 37591  01869C  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 37592  0186A2  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 37593  0186A8  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 37594  0186AE  0E00               	movlw	0
 37595  0186B0  6EE6               	movwf	postinc1,c
 37596  0186B2  EC63  F0E6         	call	___xxtofl	;wreg free
 37597  0186B6  0060  F0AB  FFE6   	movff	btemp,postinc1
 37598  0186BC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37599  0186C2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37600  0186C8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37601  0186CE  EC28  F00B         	call	___flsub	;wreg free
 37602  0186D2  0060  F0AB  FFE6   	movff	btemp,postinc1
 37603  0186D8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37604  0186DE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37605  0186E4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37606  0186EA  ECC2  F0B1         	call	___flmul	;wreg free
 37607  0186EE  D13E               	goto	l1970
 37608  0186F0                     l12238:
 37609                           
 37610                           ;daq.c: 148:    if (0b0000100000000000 >> chan & 0x1) {
 37611                           ;stkvar	_chan @ sp[(0)+-1]
 37612  0186F0  0EFF               	movlw	-1
 37613  0186F2  006F FF8C  F035    	movff	plusw1,btemp+11
 37614  0186F8  0E00               	movlw	0
 37615  0186FA  6E32               	movwf	(btemp+8)^0,c
 37616  0186FC  0E08               	movlw	8
 37617  0186FE  6E33               	movwf	(btemp+9)^0,c
 37618  018700  2A35               	incf	(btemp+11)^0,f,c
 37619  018702  D003               	goto	u11594
 37620  018704                     u11595:
 37621  018704  3433               	rlcf	(btemp+9)^0,w,c
 37622  018706  3233               	rrcf	(btemp+9)^0,f,c
 37623  018708  3232               	rrcf	(btemp+8)^0,f,c
 37624  01870A                     u11594:
 37625  01870A  2E35               	decfsz	(btemp+11)^0,f,c
 37626  01870C  D7FB               	goto	u11595
 37627  01870E  A032               	btfss	(btemp+8)^0,0,c
 37628  018710  D008               	goto	l12246
 37629                           
 37630                           ;daq.c: 149:     return 25.0;
 37631  018712  0E00               	movlw	0
 37632  018714  6E2A               	movwf	btemp^0,c
 37633  018716  0E00               	movlw	0
 37634  018718  6E2B               	movwf	(btemp+1)^0,c
 37635  01871A  0EC8               	movlw	200
 37636  01871C  6E2C               	movwf	(btemp+2)^0,c
 37637  01871E  0E41               	movlw	65
 37638  018720  D113               	goto	L43
 37639  018722                     l12246:
 37640                           
 37641                           ;daq.c: 151:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 37642  018722  0E00               	movlw	0
 37643  018724  6EE6               	movwf	postinc1,c
 37644  018726  0E00               	movlw	0
 37645  018728  6EE6               	movwf	postinc1,c
 37646  01872A  0E7A               	movlw	122
 37647  01872C  6EE6               	movwf	postinc1,c
 37648  01872E  0E44               	movlw	68
 37649  018730  6EE6               	movwf	postinc1,c
 37650  018732  0E61               	movlw	97
 37651  018734  6EE6               	movwf	postinc1,c
 37652  018736  0E03               	movlw	3
 37653  018738  6EE6               	movwf	postinc1,c
 37654  01873A  0E84               	movlw	132
 37655  01873C  6EE6               	movwf	postinc1,c
 37656  01873E  0E40               	movlw	64
 37657  018740  6EE6               	movwf	postinc1,c
 37658                           
 37659                           ;stkvar	_chan @ sp[(-8)+-1]
 37660  018742  0EF7               	movlw	-9
 37661  018744  50E3               	movf	plusw1,w,c
 37662  018746  6EE6               	movwf	postinc1,c
 37663  018748  ECD5  F00F         	call	_get_raw_result	;wreg free
 37664  01874C  0060  F0A8  F034   	movff	btemp,btemp+10
 37665  018752  0060  F0AC  F035   	movff	btemp+1,btemp+11
 37666  018758  5034               	movf	(btemp+10)^0,w,c
 37667  01875A  6E2E               	movwf	(btemp+4)^0,c
 37668  01875C  5035               	movf	(btemp+11)^0,w,c
 37669  01875E  6E2F               	movwf	(btemp+5)^0,c
 37670  018760  6A30               	clrf	(btemp+6)^0,c
 37671  018762  6A31               	clrf	(btemp+7)^0,c
 37672  018764  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 37673  01876A  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 37674  018770  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 37675  018776  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 37676  01877C  0E00               	movlw	0
 37677  01877E  6EE6               	movwf	postinc1,c
 37678  018780  EC63  F0E6         	call	___xxtofl	;wreg free
 37679  018784  0060  F0AB  FFE6   	movff	btemp,postinc1
 37680  01878A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37681  018790  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37682  018796  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37683  01879C  ECC2  F0B1         	call	___flmul	;wreg free
 37684  0187A0  0060  F0AB  FFE6   	movff	btemp,postinc1
 37685  0187A6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37686  0187AC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37687  0187B2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37688  0187B8  EC13  F0BD         	call	___fldiv	;wreg free
 37689  0187BC  D0D7               	goto	l1970
 37690  0187BE                     l12250:
 37691                           
 37692                           ;daq.c: 156:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 37693                           ;stkvar	_chan @ sp[(0)+-1]
 37694  0187BE  0EFF               	movlw	-1
 37695  0187C0  006F FF8C  F035    	movff	plusw1,btemp+11
 37696  0187C6  0E03               	movlw	3
 37697  0187C8  6E32               	movwf	(btemp+8)^0,c
 37698  0187CA  0E00               	movlw	0
 37699  0187CC  6E33               	movwf	(btemp+9)^0,c
 37700  0187CE  2A35               	incf	(btemp+11)^0,f,c
 37701  0187D0  D003               	goto	u11614
 37702  0187D2                     u11615:
 37703  0187D2  3433               	rlcf	(btemp+9)^0,w,c
 37704  0187D4  3233               	rrcf	(btemp+9)^0,f,c
 37705  0187D6  3232               	rrcf	(btemp+8)^0,f,c
 37706  0187D8                     u11614:
 37707  0187D8  2E35               	decfsz	(btemp+11)^0,f,c
 37708  0187DA  D7FB               	goto	u11615
 37709  0187DC  B032               	btfsc	(btemp+8)^0,0,c
 37710  0187DE  D011               	goto	u11640
 37711                           
 37712                           ;stkvar	_chan @ sp[(0)+-1]
 37713  0187E0  0EFF               	movlw	-1
 37714  0187E2  006F FF8C  F035    	movff	plusw1,btemp+11
 37715  0187E8  0E00               	movlw	0
 37716  0187EA  6E32               	movwf	(btemp+8)^0,c
 37717  0187EC  0E08               	movlw	8
 37718  0187EE  6E33               	movwf	(btemp+9)^0,c
 37719  0187F0  2A35               	incf	(btemp+11)^0,f,c
 37720  0187F2  D003               	goto	u11634
 37721  0187F4                     u11635:
 37722  0187F4  3433               	rlcf	(btemp+9)^0,w,c
 37723  0187F6  3233               	rrcf	(btemp+9)^0,f,c
 37724  0187F8  3232               	rrcf	(btemp+8)^0,f,c
 37725  0187FA                     u11634:
 37726  0187FA  2E35               	decfsz	(btemp+11)^0,f,c
 37727  0187FC  D7FB               	goto	u11635
 37728  0187FE  A032               	btfss	(btemp+8)^0,0,c
 37729  018800  D04E               	goto	l12258
 37730  018802                     u11640:
 37731                           
 37732                           ;daq.c: 157:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 37733  018802  0E00               	movlw	0
 37734  018804  6EE6               	movwf	postinc1,c
 37735  018806  0E00               	movlw	0
 37736  018808  6EE6               	movwf	postinc1,c
 37737  01880A  0E7A               	movlw	122
 37738  01880C  6EE6               	movwf	postinc1,c
 37739  01880E  0E44               	movlw	68
 37740  018810  6EE6               	movwf	postinc1,c
 37741  018812  0E00               	movlw	0
 37742  018814  6EE6               	movwf	postinc1,c
 37743  018816  0E00               	movlw	0
 37744  018818  6EE6               	movwf	postinc1,c
 37745  01881A  0E20               	movlw	32
 37746  01881C  6EE6               	movwf	postinc1,c
 37747  01881E  0E3F               	movlw	63
 37748  018820  6EE6               	movwf	postinc1,c
 37749                           
 37750                           ;stkvar	_chan @ sp[(-8)+-1]
 37751  018822  0EF7               	movlw	-9
 37752  018824  50E3               	movf	plusw1,w,c
 37753  018826  6EE6               	movwf	postinc1,c
 37754  018828  ECD5  F00F         	call	_get_raw_result	;wreg free
 37755  01882C  0060  F0A8  F034   	movff	btemp,btemp+10
 37756  018832  0060  F0AC  F035   	movff	btemp+1,btemp+11
 37757  018838  5034               	movf	(btemp+10)^0,w,c
 37758  01883A  6E2E               	movwf	(btemp+4)^0,c
 37759  01883C  5035               	movf	(btemp+11)^0,w,c
 37760  01883E  6E2F               	movwf	(btemp+5)^0,c
 37761  018840  6A30               	clrf	(btemp+6)^0,c
 37762  018842  6A31               	clrf	(btemp+7)^0,c
 37763  018844  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 37764  01884A  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 37765  018850  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 37766  018856  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 37767  01885C  0E00               	movlw	0
 37768  01885E  6EE6               	movwf	postinc1,c
 37769  018860  EC63  F0E6         	call	___xxtofl	;wreg free
 37770  018864  0060  F0AB  FFE6   	movff	btemp,postinc1
 37771  01886A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37772  018870  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37773  018876  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37774  01887C  ECC2  F0B1         	call	___flmul	;wreg free
 37775  018880  0060  F0AB  FFE6   	movff	btemp,postinc1
 37776  018886  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37777  01888C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37778  018892  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37779  018898  EC13  F0BD         	call	___fldiv	;wreg free
 37780  01889C  D067               	goto	l1970
 37781  01889E                     l12258:
 37782                           
 37783                           ;daq.c: 159:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 37784  01889E  0E00               	movlw	0
 37785  0188A0  6EE6               	movwf	postinc1,c
 37786  0188A2  0E00               	movlw	0
 37787  0188A4  6EE6               	movwf	postinc1,c
 37788  0188A6  0E7A               	movlw	122
 37789  0188A8  6EE6               	movwf	postinc1,c
 37790  0188AA  0E44               	movlw	68
 37791  0188AC  6EE6               	movwf	postinc1,c
 37792  0188AE  0E61               	movlw	97
 37793  0188B0  6EE6               	movwf	postinc1,c
 37794  0188B2  0E03               	movlw	3
 37795  0188B4  6EE6               	movwf	postinc1,c
 37796  0188B6  0E84               	movlw	132
 37797  0188B8  6EE6               	movwf	postinc1,c
 37798  0188BA  0E40               	movlw	64
 37799  0188BC  6EE6               	movwf	postinc1,c
 37800                           
 37801                           ;stkvar	_chan @ sp[(-8)+-1]
 37802  0188BE  0EF7               	movlw	-9
 37803  0188C0  50E3               	movf	plusw1,w,c
 37804  0188C2  6EE6               	movwf	postinc1,c
 37805  0188C4  ECD5  F00F         	call	_get_raw_result	;wreg free
 37806  0188C8  0060  F0A8  F034   	movff	btemp,btemp+10
 37807  0188CE  0060  F0AC  F035   	movff	btemp+1,btemp+11
 37808  0188D4  5034               	movf	(btemp+10)^0,w,c
 37809  0188D6  6E2E               	movwf	(btemp+4)^0,c
 37810  0188D8  5035               	movf	(btemp+11)^0,w,c
 37811  0188DA  6E2F               	movwf	(btemp+5)^0,c
 37812  0188DC  6A30               	clrf	(btemp+6)^0,c
 37813  0188DE  6A31               	clrf	(btemp+7)^0,c
 37814  0188E0  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 37815  0188E6  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 37816  0188EC  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 37817  0188F2  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 37818  0188F8  0E00               	movlw	0
 37819  0188FA  6EE6               	movwf	postinc1,c
 37820  0188FC  EC63  F0E6         	call	___xxtofl	;wreg free
 37821  018900  0060  F0AB  FFE6   	movff	btemp,postinc1
 37822  018906  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37823  01890C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37824  018912  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37825  018918  ECC2  F0B1         	call	___flmul	;wreg free
 37826  01891C  0060  F0AB  FFE6   	movff	btemp,postinc1
 37827  018922  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37828  018928  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37829  01892E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37830  018934  EC13  F0BD         	call	___fldiv	;wreg free
 37831  018938  D019               	goto	l1970
 37832  01893A                     l12264:
 37833                           
 37834                           ;daq.c: 162:   return 0.0;
 37835  01893A  0E00               	movlw	0
 37836  01893C  6E2A               	movwf	btemp^0,c
 37837  01893E  0E00               	movlw	0
 37838  018940  6E2B               	movwf	(btemp+1)^0,c
 37839  018942  0E00               	movlw	0
 37840  018944  6E2C               	movwf	(btemp+2)^0,c
 37841  018946  0E00               	movlw	0
 37842  018948                     L43:
 37843  018948  6E2D               	movwf	(btemp+3)^0,c
 37844  01894A  D010               	goto	l1970
 37845  01894C                     l12272:
 37846                           
 37847                           ;stkvar	_to_what @ sp[(0)+-2]
 37848  01894C  0EFE               	movlw	-2
 37849  01894E  50E3               	movf	plusw1,w,c
 37850  018950  6E34               	movwf	(btemp+10)^0,c
 37851  018952  6A35               	clrf	(btemp+11)^0,c
 37852                           
 37853                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37854                           ; Switch size 1, requested type "simple"
 37855                           ; Number of cases is 1, Range of values is 0 to 0
 37856                           ; switch strategies available:
 37857                           ; Name         Instructions Cycles
 37858                           ; simple_byte            4     3 (average)
 37859                           ;	Chosen strategy is simple_byte
 37860  018954  5035               	movf	(btemp+11)^0,w,c
 37861  018956  0A00               	xorlw	0	; case 0
 37862  018958  A4D8               	btfss	status,2,c
 37863  01895A  D7EF               	goto	l12264
 37864                           
 37865                           ; Switch size 1, requested type "simple"
 37866                           ; Number of cases is 2, Range of values is 0 to 1
 37867                           ; switch strategies available:
 37868                           ; Name         Instructions Cycles
 37869                           ; simple_byte            7     4 (average)
 37870                           ;	Chosen strategy is simple_byte
 37871  01895C  5034               	movf	(btemp+10)^0,w,c
 37872  01895E  0A00               	xorlw	0	; case 0
 37873  018960  B4D8               	btfsc	status,2,c
 37874  018962  D5AA               	goto	l12218
 37875  018964  0A01               	xorlw	1	; case 1
 37876  018966  B4D8               	btfsc	status,2,c
 37877  018968  D72A               	goto	l12250
 37878  01896A  D7E7               	goto	l12264
 37879  01896C                     l1970:
 37880                           
 37881                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 37882  01896C  52E5               	movf	postdec1,f,c
 37883  01896E  52E5               	movf	postdec1,f,c
 37884  018970  0012               	return		;funcret
 37885  018972                     __end_of_conv_raw_result:
 37886                           	opt callstack 0
 37887                           
 37888 ;; *************** function _nanf *****************
 37889 ;; Defined at:
 37890 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 37891 ;; Parameters:    Size  Location     Type
 37892 ;;  s               2  [STACK] PTR const unsigned char 
 37893 ;;		 -> STR_129(1), STR_89(1), 
 37894 ;; Auto vars:     Size  Location     Type
 37895 ;;  u               4  [STACK] struct .
 37896 ;; Return value:  Size  Location     Type
 37897 ;;                  4  [STACK] float 
 37898 ;; Registers used:
 37899 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 37900 ;; Tracked objects:
 37901 ;;		On entry : 0/0
 37902 ;;		On exit  : 0/0
 37903 ;;		Unchanged: 0/0
 37904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37909 ;;Total ram usage:        0 bytes
 37910 ;; Hardware stack levels used:    1
 37911 ;; Hardware stack levels required when called:   15
 37912 ;; This function calls:
 37913 ;;		Nothing
 37914 ;; This function is called by:
 37915 ;;		_conv_raw_result
 37916 ;; This function uses a reentrant model
 37917 ;;
 37918                           
 37919                           	psect	text141
 37920  0010DC                     __ptext141:
 37921                           	opt callstack 0
 37922  0010DC                     _nanf:
 37923                           	opt callstack 0
 37924                           
 37925                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37926  0010DC  52E6               	movf	postinc1,f,c
 37927  0010DE  52E6               	movf	postinc1,f,c
 37928  0010E0  52E6               	movf	postinc1,f,c
 37929  0010E2  52E6               	movf	postinc1,f,c
 37930                           
 37931                           ;incstack = 0
 37932 ;; hardware stack exceeded
 37933  0010E4  0EFF               	movlw	255
 37934  0010E6  6E32               	movwf	(btemp+8)^0,c
 37935  0010E8  0EFF               	movlw	255
 37936  0010EA  6E33               	movwf	(btemp+9)^0,c
 37937  0010EC  0EFF               	movlw	255
 37938  0010EE  6E34               	movwf	(btemp+10)^0,c
 37939  0010F0  0E7F               	movlw	127
 37940  0010F2  6E35               	movwf	(btemp+11)^0,c
 37941                           
 37942                           ;stkvar	_u @ sp[(-4)+0]
 37943  0010F4  0EFC               	movlw	-4
 37944  0010F6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 37945  0010FC  0EFD               	movlw	-3
 37946  0010FE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 37947  001104  0EFE               	movlw	-2
 37948  001106  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37949  00110C  0EFF               	movlw	-1
 37950  00110E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37951                           
 37952                           ;stkvar	_u @ sp[(-4)+0]
 37953  001114  0EFC               	movlw	-4
 37954  001116  006F FF8C  F02A    	movff	plusw1,btemp
 37955  00111C  0EFD               	movlw	-3
 37956  00111E  006F FF8C  F02B    	movff	plusw1,btemp+1
 37957  001124  0EFE               	movlw	-2
 37958  001126  006F FF8C  F02C    	movff	plusw1,btemp+2
 37959  00112C  0EFF               	movlw	-1
 37960  00112E  006F FF8C  F02D    	movff	plusw1,btemp+3
 37961                           
 37962                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 37963  001134  0EFA               	movlw	250
 37964  001136  26E1               	addwf	fsr1l,f,c
 37965  001138  0EFF               	movlw	255
 37966  00113A  22E2               	addwfc	fsr1h,f,c
 37967  00113C  0012               	return		;funcret
 37968  00113E                     __end_of_nanf:
 37969                           	opt callstack 0
 37970                           
 37971 ;; *************** function _get_raw_result *****************
 37972 ;; Defined at:
 37973 ;;		line 125 in file "daq.c"
 37974 ;; Parameters:    Size  Location     Type
 37975 ;;  index           1  [STACK] const enum E16605
 37976 ;; Auto vars:     Size  Location     Type
 37977 ;;		None
 37978 ;; Return value:  Size  Location     Type
 37979 ;;                  2  [STACK] unsigned short 
 37980 ;; Registers used:
 37981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 37982 ;; Tracked objects:
 37983 ;;		On entry : 0/2
 37984 ;;		On exit  : 0/0
 37985 ;;		Unchanged: 0/0
 37986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37991 ;;Total ram usage:        0 bytes
 37992 ;; Hardware stack levels used:    1
 37993 ;; Hardware stack levels required when called:   15
 37994 ;; This function calls:
 37995 ;;		Nothing
 37996 ;; This function is called by:
 37997 ;;		_main
 37998 ;;		_current_sensor_cal
 37999 ;;		_conv_raw_result
 38000 ;; This function uses a reentrant model
 38001 ;;
 38002                           
 38003                           	psect	text142
 38004  001FAA                     __ptext142:
 38005                           	opt callstack 0
 38006  001FAA                     _get_raw_result:
 38007                           	opt callstack 0
 38008                           
 38009                           ;daq.c: 125: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 126: {;daq.c
      +                          : 127:  return R.raw_adc[index];
 38010                           ;stkvar	_index @ sp[(0)+-1]
 38011                           
 38012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38013                           ;incstack = 0
 38014 ;; hardware stack exceeded
 38015  001FAA  0EFF               	movlw	-1
 38016  001FAC  50E3               	movf	plusw1,w,c
 38017  001FAE  0D02               	mullw	2
 38018  001FB0  0E07               	movlw	low _R
 38019  001FB2  24F3               	addwf	243,w,c
 38020  001FB4  6ED9               	movwf	fsr2l,c
 38021  001FB6  0E01               	movlw	high _R
 38022  001FB8  20F4               	addwfc	prodh,w,c
 38023  001FBA  6EDA               	movwf	fsr2h,c
 38024  001FBC  006F FF78  F02A    	movff	postinc2,btemp
 38025  001FC2  006F FF74  F02B    	movff	postdec2,btemp+1
 38026                           
 38027                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 38028  001FC8  52E5               	movf	postdec1,f,c
 38029  001FCA  0012               	return		;funcret
 38030  001FCC                     __end_of_get_raw_result:
 38031                           	opt callstack 0
 38032                           
 38033 ;; *************** function ___xxtofl *****************
 38034 ;; Defined at:
 38035 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 38036 ;; Parameters:    Size  Location     Type
 38037 ;;  sign            1  [STACK] unsigned char 
 38038 ;;  val             4  [STACK] long 
 38039 ;; Auto vars:     Size  Location     Type
 38040 ;;  arg             4  [STACK] unsigned long 
 38041 ;;  exp             1  [STACK] unsigned char 
 38042 ;; Return value:  Size  Location     Type
 38043 ;;                  4  [STACK] unsigned char 
 38044 ;; Registers used:
 38045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 38046 ;; Tracked objects:
 38047 ;;		On entry : 0/1
 38048 ;;		On exit  : 0/0
 38049 ;;		Unchanged: 0/0
 38050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38055 ;;Total ram usage:        0 bytes
 38056 ;; Hardware stack levels used:    1
 38057 ;; Hardware stack levels required when called:   15
 38058 ;; This function calls:
 38059 ;;		Nothing
 38060 ;; This function is called by:
 38061 ;;		_conv_raw_result
 38062 ;;		_init_bsoc
 38063 ;; This function uses a reentrant model
 38064 ;;
 38065                           
 38066                           	psect	text143
 38067  01CCC6                     __ptext143:
 38068                           	opt callstack 0
 38069  01CCC6                     ___xxtofl:
 38070                           	opt callstack 0
 38071                           
 38072                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38073  01CCC6  0E05               	movlw	5
 38074  01CCC8  26E1               	addwf	fsr1l,f,c
 38075  01CCCA  0E00               	movlw	0
 38076  01CCCC  22E2               	addwfc	fsr1h,f,c
 38077                           
 38078                           ;stkvar	_sign @ sp[(-5)+-1]
 38079                           
 38080                           ;incstack = 0
 38081 ;; hardware stack exceeded
 38082  01CCCE  0EFA               	movlw	-6
 38083  01CCD0  50E3               	movf	plusw1,w,c
 38084  01CCD2  B4D8               	btfsc	status,2,c
 38085  01CCD4  D01D               	goto	l11954
 38086                           
 38087                           ;stkvar	_val @ sp[(-5)+-5]
 38088  01CCD6  0EF9               	movlw	-7
 38089  01CCD8  AEE3               	btfss	plusw1,7,c
 38090  01CCDA  D01A               	goto	l11954
 38091                           
 38092                           ;stkvar	_val @ sp[(-5)+-5]
 38093  01CCDC  0EF6               	movlw	-10
 38094  01CCDE  006F FF8C  F032    	movff	plusw1,btemp+8
 38095  01CCE4  0EF7               	movlw	-9
 38096  01CCE6  006F FF8C  F033    	movff	plusw1,btemp+9
 38097  01CCEC  0EF8               	movlw	-8
 38098  01CCEE  006F FF8C  F034    	movff	plusw1,btemp+10
 38099  01CCF4  0EF9               	movlw	-7
 38100  01CCF6  006F FF8C  F035    	movff	plusw1,btemp+11
 38101  01CCFC  1E32               	comf	(btemp+8)^0,f,c
 38102  01CCFE  1E33               	comf	(btemp+9)^0,f,c
 38103  01CD00  1E34               	comf	(btemp+10)^0,f,c
 38104  01CD02  1E35               	comf	(btemp+11)^0,f,c
 38105  01CD04  2A32               	incf	(btemp+8)^0,f,c
 38106  01CD06  0E00               	movlw	0
 38107  01CD08  2233               	addwfc	(btemp+9)^0,f,c
 38108  01CD0A  2234               	addwfc	(btemp+10)^0,f,c
 38109  01CD0C  2235               	addwfc	(btemp+11)^0,f,c
 38110  01CD0E  D010               	goto	L44
 38111  01CD10                     l11954:
 38112                           
 38113                           ;stkvar	_val @ sp[(-5)+-5]
 38114  01CD10  0EF6               	movlw	-10
 38115  01CD12  006F FF8C  F032    	movff	plusw1,btemp+8
 38116  01CD18  0EF7               	movlw	-9
 38117  01CD1A  006F FF8C  F033    	movff	plusw1,btemp+9
 38118  01CD20  0EF8               	movlw	-8
 38119  01CD22  006F FF8C  F034    	movff	plusw1,btemp+10
 38120  01CD28  0EF9               	movlw	-7
 38121  01CD2A  006F FF8C  F035    	movff	plusw1,btemp+11
 38122  01CD30                     L44:
 38123                           
 38124                           ;stkvar	_arg @ sp[(-5)+0]
 38125  01CD30  0EFB               	movlw	-5
 38126  01CD32  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38127  01CD38  0EFC               	movlw	-4
 38128  01CD3A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38129  01CD40  0EFD               	movlw	-3
 38130  01CD42  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38131  01CD48  0EFE               	movlw	-2
 38132  01CD4A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38133                           
 38134                           ;stkvar	_val @ sp[(-5)+-5]
 38135  01CD50  0EF6               	movlw	-10
 38136  01CD52  50E3               	movf	plusw1,w,c
 38137  01CD54  E113               	bnz	l11962
 38138  01CD56  0EF7               	movlw	-9
 38139  01CD58  50E3               	movf	plusw1,w,c
 38140  01CD5A  E110               	bnz	l11962
 38141  01CD5C  0EF8               	movlw	-8
 38142  01CD5E  50E3               	movf	plusw1,w,c
 38143  01CD60  E10D               	bnz	l11962
 38144  01CD62  0EF9               	movlw	-7
 38145  01CD64  50E3               	movf	plusw1,w,c
 38146  01CD66  A4D8               	btfss	status,2,c
 38147  01CD68  D009               	goto	l11962
 38148  01CD6A  0E00               	movlw	0
 38149  01CD6C  6E2A               	movwf	btemp^0,c
 38150  01CD6E  0E00               	movlw	0
 38151  01CD70  6E2B               	movwf	(btemp+1)^0,c
 38152  01CD72  0E00               	movlw	0
 38153  01CD74  6E2C               	movwf	(btemp+2)^0,c
 38154  01CD76  0E00               	movlw	0
 38155  01CD78  6E2D               	movwf	(btemp+3)^0,c
 38156  01CD7A  D0A2               	goto	l3366
 38157  01CD7C                     l11962:
 38158  01CD7C  0E96               	movlw	150
 38159  01CD7E  6E35               	movwf	(btemp+11)^0,c
 38160                           
 38161                           ;stkvar	_exp @ sp[(-5)+4]
 38162  01CD80  0EFF               	movlw	-1
 38163  01CD82  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38164  01CD88  D00B               	goto	l11966
 38165  01CD8A                     l11964:
 38166                           
 38167                           ;stkvar	_exp @ sp[(-5)+4]
 38168  01CD8A  0EFF               	movlw	-1
 38169  01CD8C  2AE3               	incf	plusw1,f,c
 38170                           
 38171                           ;stkvar	_arg @ sp[(-5)+0]
 38172  01CD8E  90D8               	bcf	status,0,c
 38173  01CD90  0EFE               	movlw	-2
 38174  01CD92  32E3               	rrcf	plusw1,f,c
 38175  01CD94  0EFD               	movlw	-3
 38176  01CD96  32E3               	rrcf	plusw1,f,c
 38177  01CD98  0EFC               	movlw	-4
 38178  01CD9A  32E3               	rrcf	plusw1,f,c
 38179  01CD9C  0EFB               	movlw	-5
 38180  01CD9E  32E3               	rrcf	plusw1,f,c
 38181  01CDA0                     l11966:
 38182                           
 38183                           ;stkvar	_arg @ sp[(-5)+0]
 38184  01CDA0  50E1               	movf	fsr1l,w,c
 38185  01CDA2  0FFB               	addlw	-5
 38186  01CDA4  6ED9               	movwf	fsr2l,c
 38187  01CDA6  50E2               	movf	fsr1h,w,c
 38188  01CDA8  6EDA               	movwf	fsr2h,c
 38189  01CDAA  0EFF               	movlw	255
 38190  01CDAC  22DA               	addwfc	fsr2h,f,c
 38191  01CDAE  52DE               	movf	postinc2,f,c
 38192  01CDB0  52DE               	movf	postinc2,f,c
 38193  01CDB2  52DE               	movf	postinc2,f,c
 38194  01CDB4  0EFE               	movlw	254
 38195  01CDB6  14DD               	andwf	postdec2,w,c
 38196  01CDB8  B4D8               	btfsc	status,2,c
 38197  01CDBA  D018               	goto	l11974
 38198  01CDBC  D7E6               	goto	l11964
 38199  01CDBE                     l11968:
 38200                           
 38201                           ;stkvar	_exp @ sp[(-5)+4]
 38202  01CDBE  0EFF               	movlw	-1
 38203  01CDC0  2AE3               	incf	plusw1,f,c
 38204                           
 38205                           ;stkvar	_arg @ sp[(-5)+0]
 38206  01CDC2  50E1               	movf	fsr1l,w,c
 38207  01CDC4  0FFB               	addlw	-5
 38208  01CDC6  6ED9               	movwf	fsr2l,c
 38209  01CDC8  50E2               	movf	fsr1h,w,c
 38210  01CDCA  6EDA               	movwf	fsr2h,c
 38211  01CDCC  0EFF               	movlw	255
 38212  01CDCE  22DA               	addwfc	fsr2h,f,c
 38213  01CDD0  2ADE               	incf	postinc2,f,c
 38214  01CDD2  0E00               	movlw	0
 38215  01CDD4  22DE               	addwfc	postinc2,f,c
 38216  01CDD6  22DE               	addwfc	postinc2,f,c
 38217  01CDD8  22DE               	addwfc	postinc2,f,c
 38218                           
 38219                           ;stkvar	_arg @ sp[(-5)+0]
 38220  01CDDA  90D8               	bcf	status,0,c
 38221  01CDDC  0EFE               	movlw	-2
 38222  01CDDE  32E3               	rrcf	plusw1,f,c
 38223  01CDE0  0EFD               	movlw	-3
 38224  01CDE2  32E3               	rrcf	plusw1,f,c
 38225  01CDE4  0EFC               	movlw	-4
 38226  01CDE6  32E3               	rrcf	plusw1,f,c
 38227  01CDE8  0EFB               	movlw	-5
 38228  01CDEA  32E3               	rrcf	plusw1,f,c
 38229  01CDEC                     l11974:
 38230                           
 38231                           ;stkvar	_arg @ sp[(-5)+0]
 38232  01CDEC  50E1               	movf	fsr1l,w,c
 38233  01CDEE  0FFB               	addlw	-5
 38234  01CDF0  6ED9               	movwf	fsr2l,c
 38235  01CDF2  50E2               	movf	fsr1h,w,c
 38236  01CDF4  6EDA               	movwf	fsr2h,c
 38237  01CDF6  0EFF               	movlw	255
 38238  01CDF8  22DA               	addwfc	fsr2h,f,c
 38239  01CDFA  52DE               	movf	postinc2,f,c
 38240  01CDFC  52DE               	movf	postinc2,f,c
 38241  01CDFE  52DE               	movf	postinc2,f,c
 38242  01CE00  0EFF               	movlw	255
 38243  01CE02  14DD               	andwf	postdec2,w,c
 38244  01CE04  B4D8               	btfsc	status,2,c
 38245  01CE06  D00C               	goto	l11978
 38246  01CE08  D7DA               	goto	l11968
 38247  01CE0A                     l11976:
 38248                           
 38249                           ;stkvar	_exp @ sp[(-5)+4]
 38250  01CE0A  0EFF               	movlw	-1
 38251  01CE0C  06E3               	decf	plusw1,f,c
 38252                           
 38253                           ;stkvar	_arg @ sp[(-5)+0]
 38254  01CE0E  90D8               	bcf	status,0,c
 38255  01CE10  0EFB               	movlw	-5
 38256  01CE12  36E3               	rlcf	plusw1,f,c
 38257  01CE14  0EFC               	movlw	-4
 38258  01CE16  36E3               	rlcf	plusw1,f,c
 38259  01CE18  0EFD               	movlw	-3
 38260  01CE1A  36E3               	rlcf	plusw1,f,c
 38261  01CE1C  0EFE               	movlw	-2
 38262  01CE1E  36E3               	rlcf	plusw1,f,c
 38263  01CE20                     l11978:
 38264                           
 38265                           ;stkvar	_arg @ sp[(-5)+0]
 38266  01CE20  0EFD               	movlw	-3
 38267  01CE22  BEE3               	btfsc	plusw1,7,c
 38268  01CE24  D007               	goto	u11310
 38269                           
 38270                           ;stkvar	_exp @ sp[(-5)+4]
 38271  01CE26  0EFF               	movlw	-1
 38272  01CE28  006F FF8C  F02A    	movff	plusw1,btemp
 38273  01CE2E  0E02               	movlw	2
 38274  01CE30  602A               	cpfslt	btemp^0,c
 38275  01CE32  D7EB               	goto	l11976
 38276  01CE34                     u11310:
 38277                           
 38278                           ;stkvar	_exp @ sp[(-5)+4]
 38279  01CE34  0EFF               	movlw	-1
 38280  01CE36  B0E3               	btfsc	plusw1,0,c
 38281  01CE38  D002               	goto	l11986
 38282                           
 38283                           ;stkvar	_arg @ sp[(-5)+0]
 38284  01CE3A  0EFD               	movlw	-3
 38285  01CE3C  9EE3               	bcf	plusw1,7,c
 38286  01CE3E                     l11986:
 38287                           
 38288                           ;stkvar	_exp @ sp[(-5)+4]
 38289  01CE3E  50E1               	movf	fsr1l,w,c
 38290  01CE40  0FFF               	addlw	-1
 38291  01CE42  6ED9               	movwf	fsr2l,c
 38292  01CE44  50E2               	movf	fsr1h,w,c
 38293  01CE46  6EDA               	movwf	fsr2h,c
 38294  01CE48  0EFF               	movlw	255
 38295  01CE4A  22DA               	addwfc	fsr2h,f,c
 38296  01CE4C  90D8               	bcf	status,0,c
 38297  01CE4E  32DF               	rrcf	indf2,f,c
 38298                           
 38299                           ;stkvar	_exp @ sp[(-5)+4]
 38300  01CE50  0EFF               	movlw	-1
 38301  01CE52  006F FF8C  F035    	movff	plusw1,btemp+11
 38302  01CE58  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 38303  01CE5E  6A2F               	clrf	(btemp+5)^0,c
 38304  01CE60  6A30               	clrf	(btemp+6)^0,c
 38305  01CE62  6A31               	clrf	(btemp+7)^0,c
 38306  01CE64  0060  F0B8  F031   	movff	btemp+4,btemp+7
 38307  01CE6A  6A30               	clrf	(btemp+6)^0,c
 38308  01CE6C  6A2F               	clrf	(btemp+5)^0,c
 38309  01CE6E  6A2E               	clrf	(btemp+4)^0,c
 38310                           
 38311                           ;stkvar	_arg @ sp[(-5)+0]
 38312  01CE70  50E1               	movf	fsr1l,w,c
 38313  01CE72  0FFB               	addlw	-5
 38314  01CE74  6ED9               	movwf	fsr2l,c
 38315  01CE76  50E2               	movf	fsr1h,w,c
 38316  01CE78  6EDA               	movwf	fsr2h,c
 38317  01CE7A  0EFF               	movlw	255
 38318  01CE7C  22DA               	addwfc	fsr2h,f,c
 38319  01CE7E  502E               	movf	(btemp+4)^0,w,c
 38320  01CE80  12DE               	iorwf	postinc2,f,c
 38321  01CE82  502F               	movf	(btemp+5)^0,w,c
 38322  01CE84  12DE               	iorwf	postinc2,f,c
 38323  01CE86  5030               	movf	(btemp+6)^0,w,c
 38324  01CE88  12DE               	iorwf	postinc2,f,c
 38325  01CE8A  5031               	movf	(btemp+7)^0,w,c
 38326  01CE8C  12DE               	iorwf	postinc2,f,c
 38327                           
 38328                           ;stkvar	_sign @ sp[(-5)+-1]
 38329  01CE8E  0EFA               	movlw	-6
 38330  01CE90  50E3               	movf	plusw1,w,c
 38331  01CE92  B4D8               	btfsc	status,2,c
 38332  01CE94  D005               	goto	l11996
 38333                           
 38334                           ;stkvar	_val @ sp[(-5)+-5]
 38335  01CE96  0EF9               	movlw	-7
 38336  01CE98  AEE3               	btfss	plusw1,7,c
 38337  01CE9A  D002               	goto	l11996
 38338                           
 38339                           ;stkvar	_arg @ sp[(-5)+0]
 38340  01CE9C  0EFE               	movlw	-2
 38341  01CE9E  8EE3               	bsf	plusw1,7,c
 38342  01CEA0                     l11996:
 38343                           
 38344                           ;stkvar	_arg @ sp[(-5)+0]
 38345  01CEA0  0EFB               	movlw	-5
 38346  01CEA2  006F FF8C  F02A    	movff	plusw1,btemp
 38347  01CEA8  0EFC               	movlw	-4
 38348  01CEAA  006F FF8C  F02B    	movff	plusw1,btemp+1
 38349  01CEB0  0EFD               	movlw	-3
 38350  01CEB2  006F FF8C  F02C    	movff	plusw1,btemp+2
 38351  01CEB8  0EFE               	movlw	-2
 38352  01CEBA  006F FF8C  F02D    	movff	plusw1,btemp+3
 38353  01CEC0                     l3366:
 38354                           
 38355                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 38356  01CEC0  0EF6               	movlw	246
 38357  01CEC2  26E1               	addwf	fsr1l,f,c
 38358  01CEC4  0EFF               	movlw	255
 38359  01CEC6  22E2               	addwfc	fsr1h,f,c
 38360  01CEC8  0012               	return		;funcret
 38361  01CECA                     __end_of___xxtofl:
 38362                           	opt callstack 0
 38363                           
 38364 ;; *************** function ___fldiv *****************
 38365 ;; Defined at:
 38366 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 38367 ;; Parameters:    Size  Location     Type
 38368 ;;  b               4  [STACK] unsigned char 
 38369 ;;  a               4  [STACK] unsigned char 
 38370 ;; Auto vars:     Size  Location     Type
 38371 ;;  grs             4  [STACK] unsigned long 
 38372 ;;  rem             4  [STACK] unsigned long 
 38373 ;;  new_exp         2  [STACK] short 
 38374 ;;  aexp            1  [STACK] unsigned char 
 38375 ;;  bexp            1  [STACK] unsigned char 
 38376 ;;  sign            1  [STACK] unsigned char 
 38377 ;; Return value:  Size  Location     Type
 38378 ;;                  4  [STACK] unsigned char 
 38379 ;; Registers used:
 38380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 38381 ;; Tracked objects:
 38382 ;;		On entry : 0/0
 38383 ;;		On exit  : 0/0
 38384 ;;		Unchanged: 0/0
 38385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38390 ;;Total ram usage:        0 bytes
 38391 ;; Hardware stack levels used:    1
 38392 ;; Hardware stack levels required when called:   15
 38393 ;; This function calls:
 38394 ;;		Nothing
 38395 ;; This function is called by:
 38396 ;;		_conv_raw_result
 38397 ;;		_convert_dac_raw
 38398 ;;		_calc_bsoc
 38399 ;;		_init_bsoc
 38400 ;;		_esr_check
 38401 ;;		_efgtoa
 38402 ;; This function uses a reentrant model
 38403 ;;
 38404                           
 38405                           	psect	text144
 38406  017A26                     __ptext144:
 38407                           	opt callstack 0
 38408  017A26                     ___fldiv:
 38409                           	opt callstack 0
 38410                           
 38411                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 38412  017A26  0E0D               	movlw	13
 38413  017A28  26E1               	addwf	fsr1l,f,c
 38414  017A2A  0E00               	movlw	0
 38415  017A2C  22E2               	addwfc	fsr1h,f,c
 38416                           
 38417                           ;stkvar	_b @ sp[(-13)+-4]
 38418                           
 38419                           ;incstack = 0
 38420 ;; hardware stack exceeded
 38421  017A2E  0EF2               	movlw	242
 38422  017A30  24E1               	addwf	fsr1l,w,c
 38423  017A32  6ED9               	movwf	fsr2l,c
 38424  017A34  0EFF               	movlw	255
 38425  017A36  20E2               	addwfc	fsr1h,w,c
 38426  017A38  6EDA               	movwf	fsr2h,c
 38427  017A3A  50DF               	movf	indf2,w,c
 38428  017A3C  6E35               	movwf	(btemp+11)^0,c
 38429  017A3E  0E80               	movlw	128
 38430  017A40  1635               	andwf	(btemp+11)^0,f,c
 38431                           
 38432                           ;stkvar	_sign @ sp[(-13)+12]
 38433  017A42  0EFF               	movlw	-1
 38434  017A44  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38435                           
 38436                           ;stkvar	_b @ sp[(-13)+-4]
 38437  017A4A  0EF2               	movlw	242
 38438  017A4C  24E1               	addwf	fsr1l,w,c
 38439  017A4E  6ED9               	movwf	fsr2l,c
 38440  017A50  0EFF               	movlw	255
 38441  017A52  20E2               	addwfc	fsr1h,w,c
 38442  017A54  6EDA               	movwf	fsr2h,c
 38443  017A56  50DF               	movf	indf2,w,c
 38444  017A58  6E35               	movwf	(btemp+11)^0,c
 38445  017A5A  90D8               	bcf	status,0,c
 38446  017A5C  3435               	rlcf	(btemp+11)^0,w,c
 38447  017A5E  6E34               	movwf	(btemp+10)^0,c
 38448                           
 38449                           ;stkvar	_bexp @ sp[(-13)+11]
 38450  017A60  0EFE               	movlw	-2
 38451  017A62  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38452                           
 38453                           ;stkvar	_b @ sp[(-13)+-4]
 38454  017A68  0EF1               	movlw	241
 38455  017A6A  24E1               	addwf	fsr1l,w,c
 38456  017A6C  6ED9               	movwf	fsr2l,c
 38457  017A6E  0EFF               	movlw	255
 38458  017A70  20E2               	addwfc	fsr1h,w,c
 38459  017A72  6EDA               	movwf	fsr2h,c
 38460  017A74  AEDF               	btfss	indf2,7,c
 38461  017A76  D002               	goto	l10240
 38462                           
 38463                           ;stkvar	_bexp @ sp[(-13)+11]
 38464  017A78  0EFE               	movlw	-2
 38465  017A7A  80E3               	bsf	plusw1,0,c
 38466  017A7C                     l10240:
 38467                           
 38468                           ;stkvar	_bexp @ sp[(-13)+11]
 38469  017A7C  0EFE               	movlw	-2
 38470  017A7E  50E3               	movf	plusw1,w,c
 38471  017A80  B4D8               	btfsc	status,2,c
 38472  017A82  D027               	goto	l10250
 38473                           
 38474                           ;stkvar	_bexp @ sp[(-13)+11]
 38475  017A84  0EFE               	movlw	-2
 38476  017A86  28E3               	incf	plusw1,w,c
 38477  017A88  A4D8               	btfss	status,2,c
 38478  017A8A  D018               	goto	l10246
 38479  017A8C  0E00               	movlw	0
 38480  017A8E  6E32               	movwf	(btemp+8)^0,c
 38481  017A90  0E00               	movlw	0
 38482  017A92  6E33               	movwf	(btemp+9)^0,c
 38483  017A94  0E00               	movlw	0
 38484  017A96  6E34               	movwf	(btemp+10)^0,c
 38485  017A98  0E00               	movlw	0
 38486  017A9A  6E35               	movwf	(btemp+11)^0,c
 38487                           
 38488                           ;stkvar	_b @ sp[(-13)+-4]
 38489  017A9C  0EEF               	movlw	-17
 38490  017A9E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38491  017AA4  0EF0               	movlw	-16
 38492  017AA6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38493  017AAC  0EF1               	movlw	-15
 38494  017AAE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38495  017AB4  0EF2               	movlw	-14
 38496  017AB6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38497  017ABC                     l10246:
 38498                           
 38499                           ;stkvar	_b @ sp[(-13)+-4]
 38500  017ABC  0EF1               	movlw	-15
 38501  017ABE  8EE3               	bsf	plusw1,7,c
 38502                           
 38503                           ;stkvar	_b @ sp[(-13)+-4]
 38504  017AC0  0EF2               	movlw	242
 38505  017AC2  24E1               	addwf	fsr1l,w,c
 38506  017AC4  6ED9               	movwf	fsr2l,c
 38507  017AC6  0EFF               	movlw	255
 38508  017AC8  20E2               	addwfc	fsr1h,w,c
 38509  017ACA  6EDA               	movwf	fsr2h,c
 38510  017ACC  0E00               	movlw	0
 38511  017ACE  6EDF               	movwf	indf2,c
 38512  017AD0  D018               	goto	l10252
 38513  017AD2                     l10250:
 38514  017AD2  0E00               	movlw	0
 38515  017AD4  6E32               	movwf	(btemp+8)^0,c
 38516  017AD6  0E00               	movlw	0
 38517  017AD8  6E33               	movwf	(btemp+9)^0,c
 38518  017ADA  0E00               	movlw	0
 38519  017ADC  6E34               	movwf	(btemp+10)^0,c
 38520  017ADE  0E00               	movlw	0
 38521  017AE0  6E35               	movwf	(btemp+11)^0,c
 38522                           
 38523                           ;stkvar	_b @ sp[(-13)+-4]
 38524  017AE2  0EEF               	movlw	-17
 38525  017AE4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38526  017AEA  0EF0               	movlw	-16
 38527  017AEC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38528  017AF2  0EF1               	movlw	-15
 38529  017AF4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38530  017AFA  0EF2               	movlw	-14
 38531  017AFC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38532  017B02                     l10252:
 38533                           
 38534                           ;stkvar	_a @ sp[(-13)+-8]
 38535  017B02  0EEE               	movlw	238
 38536  017B04  24E1               	addwf	fsr1l,w,c
 38537  017B06  6ED9               	movwf	fsr2l,c
 38538  017B08  0EFF               	movlw	255
 38539  017B0A  20E2               	addwfc	fsr1h,w,c
 38540  017B0C  6EDA               	movwf	fsr2h,c
 38541  017B0E  50DF               	movf	indf2,w,c
 38542  017B10  6E35               	movwf	(btemp+11)^0,c
 38543  017B12  0E80               	movlw	128
 38544  017B14  1635               	andwf	(btemp+11)^0,f,c
 38545                           
 38546                           ;stkvar	_sign @ sp[(-13)+12]
 38547  017B16  50E1               	movf	fsr1l,w,c
 38548  017B18  0FFF               	addlw	-1
 38549  017B1A  6ED9               	movwf	fsr2l,c
 38550  017B1C  50E2               	movf	fsr1h,w,c
 38551  017B1E  6EDA               	movwf	fsr2h,c
 38552  017B20  0EFF               	movlw	255
 38553  017B22  22DA               	addwfc	fsr2h,f,c
 38554  017B24  5035               	movf	(btemp+11)^0,w,c
 38555  017B26  1ADF               	xorwf	indf2,f,c
 38556                           
 38557                           ;stkvar	_a @ sp[(-13)+-8]
 38558  017B28  0EEE               	movlw	238
 38559  017B2A  24E1               	addwf	fsr1l,w,c
 38560  017B2C  6ED9               	movwf	fsr2l,c
 38561  017B2E  0EFF               	movlw	255
 38562  017B30  20E2               	addwfc	fsr1h,w,c
 38563  017B32  6EDA               	movwf	fsr2h,c
 38564  017B34  50DF               	movf	indf2,w,c
 38565  017B36  6E35               	movwf	(btemp+11)^0,c
 38566  017B38  90D8               	bcf	status,0,c
 38567  017B3A  3435               	rlcf	(btemp+11)^0,w,c
 38568  017B3C  6E34               	movwf	(btemp+10)^0,c
 38569                           
 38570                           ;stkvar	_aexp @ sp[(-13)+10]
 38571  017B3E  0EFD               	movlw	-3
 38572  017B40  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38573                           
 38574                           ;stkvar	_a @ sp[(-13)+-8]
 38575  017B46  0EED               	movlw	237
 38576  017B48  24E1               	addwf	fsr1l,w,c
 38577  017B4A  6ED9               	movwf	fsr2l,c
 38578  017B4C  0EFF               	movlw	255
 38579  017B4E  20E2               	addwfc	fsr1h,w,c
 38580  017B50  6EDA               	movwf	fsr2h,c
 38581  017B52  AEDF               	btfss	indf2,7,c
 38582  017B54  D002               	goto	l10260
 38583                           
 38584                           ;stkvar	_aexp @ sp[(-13)+10]
 38585  017B56  0EFD               	movlw	-3
 38586  017B58  80E3               	bsf	plusw1,0,c
 38587  017B5A                     l10260:
 38588                           
 38589                           ;stkvar	_aexp @ sp[(-13)+10]
 38590  017B5A  0EFD               	movlw	-3
 38591  017B5C  50E3               	movf	plusw1,w,c
 38592  017B5E  B4D8               	btfsc	status,2,c
 38593  017B60  D027               	goto	l10270
 38594                           
 38595                           ;stkvar	_aexp @ sp[(-13)+10]
 38596  017B62  0EFD               	movlw	-3
 38597  017B64  28E3               	incf	plusw1,w,c
 38598  017B66  A4D8               	btfss	status,2,c
 38599  017B68  D018               	goto	l10266
 38600  017B6A  0E00               	movlw	0
 38601  017B6C  6E32               	movwf	(btemp+8)^0,c
 38602  017B6E  0E00               	movlw	0
 38603  017B70  6E33               	movwf	(btemp+9)^0,c
 38604  017B72  0E00               	movlw	0
 38605  017B74  6E34               	movwf	(btemp+10)^0,c
 38606  017B76  0E00               	movlw	0
 38607  017B78  6E35               	movwf	(btemp+11)^0,c
 38608                           
 38609                           ;stkvar	_a @ sp[(-13)+-8]
 38610  017B7A  0EEB               	movlw	-21
 38611  017B7C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38612  017B82  0EEC               	movlw	-20
 38613  017B84  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38614  017B8A  0EED               	movlw	-19
 38615  017B8C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38616  017B92  0EEE               	movlw	-18
 38617  017B94  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38618  017B9A                     l10266:
 38619                           
 38620                           ;stkvar	_a @ sp[(-13)+-8]
 38621  017B9A  0EED               	movlw	-19
 38622  017B9C  8EE3               	bsf	plusw1,7,c
 38623                           
 38624                           ;stkvar	_a @ sp[(-13)+-8]
 38625  017B9E  0EEE               	movlw	238
 38626  017BA0  24E1               	addwf	fsr1l,w,c
 38627  017BA2  6ED9               	movwf	fsr2l,c
 38628  017BA4  0EFF               	movlw	255
 38629  017BA6  20E2               	addwfc	fsr1h,w,c
 38630  017BA8  6EDA               	movwf	fsr2h,c
 38631  017BAA  0E00               	movlw	0
 38632  017BAC  6EDF               	movwf	indf2,c
 38633  017BAE  D018               	goto	l10272
 38634  017BB0                     l10270:
 38635  017BB0  0E00               	movlw	0
 38636  017BB2  6E32               	movwf	(btemp+8)^0,c
 38637  017BB4  0E00               	movlw	0
 38638  017BB6  6E33               	movwf	(btemp+9)^0,c
 38639  017BB8  0E00               	movlw	0
 38640  017BBA  6E34               	movwf	(btemp+10)^0,c
 38641  017BBC  0E00               	movlw	0
 38642  017BBE  6E35               	movwf	(btemp+11)^0,c
 38643                           
 38644                           ;stkvar	_a @ sp[(-13)+-8]
 38645  017BC0  0EEB               	movlw	-21
 38646  017BC2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38647  017BC8  0EEC               	movlw	-20
 38648  017BCA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38649  017BD0  0EED               	movlw	-19
 38650  017BD2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38651  017BD8  0EEE               	movlw	-18
 38652  017BDA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38653  017BE0                     l10272:
 38654                           
 38655                           ;stkvar	_a @ sp[(-13)+-8]
 38656  017BE0  0EEB               	movlw	-21
 38657  017BE2  50E3               	movf	plusw1,w,c
 38658  017BE4  E139               	bnz	l10284
 38659  017BE6  0EEC               	movlw	-20
 38660  017BE8  50E3               	movf	plusw1,w,c
 38661  017BEA  E136               	bnz	l10284
 38662  017BEC  0EED               	movlw	-19
 38663  017BEE  50E3               	movf	plusw1,w,c
 38664  017BF0  E133               	bnz	l10284
 38665  017BF2  0EEE               	movlw	-18
 38666  017BF4  50E3               	movf	plusw1,w,c
 38667  017BF6  A4D8               	btfss	status,2,c
 38668  017BF8  D02F               	goto	l10284
 38669                           
 38670                           ;stkvar	_b @ sp[(-13)+-4]
 38671  017BFA  0EEF               	movlw	-17
 38672  017BFC  6AE3               	clrf	plusw1,c
 38673  017BFE  0EF0               	movlw	-16
 38674  017C00  6AE3               	clrf	plusw1,c
 38675  017C02  0EF1               	movlw	-15
 38676  017C04  6AE3               	clrf	plusw1,c
 38677  017C06  0EF2               	movlw	-14
 38678  017C08  6AE3               	clrf	plusw1,c
 38679                           
 38680                           ;stkvar	_b @ sp[(-13)+-4]
 38681  017C0A  0EF1               	movlw	241
 38682  017C0C  24E1               	addwf	fsr1l,w,c
 38683  017C0E  6ED9               	movwf	fsr2l,c
 38684  017C10  0EFF               	movlw	255
 38685  017C12  20E2               	addwfc	fsr1h,w,c
 38686  017C14  6EDA               	movwf	fsr2h,c
 38687  017C16  0E80               	movlw	128
 38688  017C18  12DE               	iorwf	postinc2,f,c
 38689  017C1A  0E7F               	movlw	127
 38690  017C1C  12DD               	iorwf	postdec2,f,c
 38691  017C1E                     l10278:
 38692                           
 38693                           ;stkvar	_sign @ sp[(-13)+12]
 38694  017C1E  0EFF               	movlw	-1
 38695  017C20  006F FF8C  F035    	movff	plusw1,btemp+11
 38696                           
 38697                           ;stkvar	_b @ sp[(-13)+-4]
 38698  017C26  0EF2               	movlw	242
 38699  017C28  24E1               	addwf	fsr1l,w,c
 38700  017C2A  6ED9               	movwf	fsr2l,c
 38701  017C2C  0EFF               	movlw	255
 38702  017C2E  20E2               	addwfc	fsr1h,w,c
 38703  017C30  6EDA               	movwf	fsr2h,c
 38704  017C32  5035               	movf	(btemp+11)^0,w,c
 38705  017C34  12DF               	iorwf	indf2,f,c
 38706                           
 38707                           ;stkvar	_b @ sp[(-13)+-4]
 38708  017C36  0EEF               	movlw	-17
 38709  017C38  006F FF8C  F02A    	movff	plusw1,btemp
 38710  017C3E  0EF0               	movlw	-16
 38711  017C40  006F FF8C  F02B    	movff	plusw1,btemp+1
 38712  017C46  0EF1               	movlw	-15
 38713  017C48  006F FF8C  F02C    	movff	plusw1,btemp+2
 38714  017C4E  0EF2               	movlw	-14
 38715  017C50  006F FF8C  F02D    	movff	plusw1,btemp+3
 38716  017C56  D19F               	goto	l3290
 38717  017C58                     l10284:
 38718                           
 38719                           ;stkvar	_bexp @ sp[(-13)+11]
 38720  017C58  0EFE               	movlw	-2
 38721  017C5A  50E3               	movf	plusw1,w,c
 38722  017C5C  A4D8               	btfss	status,2,c
 38723  017C5E  D009               	goto	l10292
 38724  017C60  0E00               	movlw	0
 38725  017C62  6E2A               	movwf	btemp^0,c
 38726  017C64  0E00               	movlw	0
 38727  017C66  6E2B               	movwf	(btemp+1)^0,c
 38728  017C68  0E00               	movlw	0
 38729  017C6A  6E2C               	movwf	(btemp+2)^0,c
 38730  017C6C  0E00               	movlw	0
 38731  017C6E  6E2D               	movwf	(btemp+3)^0,c
 38732  017C70  D192               	goto	l3290
 38733  017C72                     l10292:
 38734                           
 38735                           ;stkvar	_bexp @ sp[(-13)+11]
 38736  017C72  0EFE               	movlw	-2
 38737  017C74  50E3               	movf	plusw1,w,c
 38738  017C76  6E34               	movwf	(btemp+10)^0,c
 38739  017C78  6A35               	clrf	(btemp+11)^0,c
 38740                           
 38741                           ;stkvar	_aexp @ sp[(-13)+10]
 38742  017C7A  0EFD               	movlw	-3
 38743  017C7C  50E3               	movf	plusw1,w,c
 38744  017C7E  5E34               	subwf	(btemp+10)^0,f,c
 38745  017C80  0E00               	movlw	0
 38746  017C82  5A35               	subwfb	(btemp+11)^0,f,c
 38747  017C84  0E7F               	movlw	127
 38748  017C86  2634               	addwf	(btemp+10)^0,f,c
 38749  017C88  0E00               	movlw	0
 38750  017C8A  2235               	addwfc	(btemp+11)^0,f,c
 38751                           
 38752                           ;stkvar	_new_exp @ sp[(-13)+8]
 38753  017C8C  0EFB               	movlw	-5
 38754  017C8E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38755  017C94  0EFC               	movlw	-4
 38756  017C96  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38757                           
 38758                           ;stkvar	_b @ sp[(-13)+-4]
 38759  017C9C  0EEF               	movlw	-17
 38760  017C9E  006F FF8C  F032    	movff	plusw1,btemp+8
 38761  017CA4  0EF0               	movlw	-16
 38762  017CA6  006F FF8C  F033    	movff	plusw1,btemp+9
 38763  017CAC  0EF1               	movlw	-15
 38764  017CAE  006F FF8C  F034    	movff	plusw1,btemp+10
 38765  017CB4  0EF2               	movlw	-14
 38766  017CB6  006F FF8C  F035    	movff	plusw1,btemp+11
 38767                           
 38768                           ;stkvar	_rem @ sp[(-13)+4]
 38769  017CBC  0EF7               	movlw	-9
 38770  017CBE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38771  017CC4  0EF8               	movlw	-8
 38772  017CC6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38773  017CCC  0EF9               	movlw	-7
 38774  017CCE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38775  017CD4  0EFA               	movlw	-6
 38776  017CD6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38777                           
 38778                           ;stkvar	_b @ sp[(-13)+-4]
 38779  017CDC  0EEF               	movlw	-17
 38780  017CDE  6AE3               	clrf	plusw1,c
 38781  017CE0  0EF0               	movlw	-16
 38782  017CE2  6AE3               	clrf	plusw1,c
 38783  017CE4  0EF1               	movlw	-15
 38784  017CE6  6AE3               	clrf	plusw1,c
 38785  017CE8  0EF2               	movlw	-14
 38786  017CEA  6AE3               	clrf	plusw1,c
 38787                           
 38788                           ;stkvar	_grs @ sp[(-13)+0]
 38789  017CEC  0EF3               	movlw	-13
 38790  017CEE  6AE3               	clrf	plusw1,c
 38791  017CF0  0EF4               	movlw	-12
 38792  017CF2  6AE3               	clrf	plusw1,c
 38793  017CF4  0EF5               	movlw	-11
 38794  017CF6  6AE3               	clrf	plusw1,c
 38795  017CF8  0EF6               	movlw	-10
 38796  017CFA  6AE3               	clrf	plusw1,c
 38797                           
 38798                           ;stkvar	_aexp @ sp[(-13)+10]
 38799  017CFC  0EFD               	movlw	-3
 38800  017CFE  6AE3               	clrf	plusw1,c
 38801  017D00  D050               	goto	l10320
 38802  017D02                     l10302:
 38803                           
 38804                           ;stkvar	_aexp @ sp[(-13)+10]
 38805  017D02  0EFD               	movlw	-3
 38806  017D04  50E3               	movf	plusw1,w,c
 38807  017D06  B4D8               	btfsc	status,2,c
 38808  017D08  D020               	goto	l10312
 38809                           
 38810                           ;stkvar	_rem @ sp[(-13)+4]
 38811  017D0A  90D8               	bcf	status,0,c
 38812  017D0C  0EF7               	movlw	-9
 38813  017D0E  36E3               	rlcf	plusw1,f,c
 38814  017D10  0EF8               	movlw	-8
 38815  017D12  36E3               	rlcf	plusw1,f,c
 38816  017D14  0EF9               	movlw	-7
 38817  017D16  36E3               	rlcf	plusw1,f,c
 38818  017D18  0EFA               	movlw	-6
 38819  017D1A  36E3               	rlcf	plusw1,f,c
 38820                           
 38821                           ;stkvar	_b @ sp[(-13)+-4]
 38822  017D1C  90D8               	bcf	status,0,c
 38823  017D1E  0EEF               	movlw	-17
 38824  017D20  36E3               	rlcf	plusw1,f,c
 38825  017D22  0EF0               	movlw	-16
 38826  017D24  36E3               	rlcf	plusw1,f,c
 38827  017D26  0EF1               	movlw	-15
 38828  017D28  36E3               	rlcf	plusw1,f,c
 38829  017D2A  0EF2               	movlw	-14
 38830  017D2C  36E3               	rlcf	plusw1,f,c
 38831                           
 38832                           ;stkvar	_grs @ sp[(-13)+0]
 38833  017D2E  0EF6               	movlw	-10
 38834  017D30  AEE3               	btfss	plusw1,7,c
 38835  017D32  D002               	goto	l10310
 38836                           
 38837                           ;stkvar	_b @ sp[(-13)+-4]
 38838  017D34  0EEF               	movlw	-17
 38839  017D36  80E3               	bsf	plusw1,0,c
 38840  017D38                     l10310:
 38841                           
 38842                           ;stkvar	_grs @ sp[(-13)+0]
 38843  017D38  90D8               	bcf	status,0,c
 38844  017D3A  0EF3               	movlw	-13
 38845  017D3C  36E3               	rlcf	plusw1,f,c
 38846  017D3E  0EF4               	movlw	-12
 38847  017D40  36E3               	rlcf	plusw1,f,c
 38848  017D42  0EF5               	movlw	-11
 38849  017D44  36E3               	rlcf	plusw1,f,c
 38850  017D46  0EF6               	movlw	-10
 38851  017D48  36E3               	rlcf	plusw1,f,c
 38852  017D4A                     l10312:
 38853                           
 38854                           ;stkvar	_a @ sp[(-13)+-8]
 38855                           ;stkvar	_rem @ sp[(-13)+4]
 38856  017D4A  50E1               	movf	fsr1l,w,c
 38857  017D4C  0FF7               	addlw	-9
 38858  017D4E  6ED9               	movwf	fsr2l,c
 38859  017D50  50E2               	movf	fsr1h,w,c
 38860  017D52  6EDA               	movwf	fsr2h,c
 38861  017D54  0EFF               	movlw	255
 38862  017D56  22DA               	addwfc	fsr2h,f,c
 38863  017D58  0EEB               	movlw	-21
 38864  017D5A  50E3               	movf	plusw1,w,c
 38865  017D5C  5CDE               	subwf	postinc2,w,c
 38866  017D5E  0EEC               	movlw	-20
 38867  017D60  50E3               	movf	plusw1,w,c
 38868  017D62  58DE               	subwfb	postinc2,w,c
 38869  017D64  0EED               	movlw	-19
 38870  017D66  50E3               	movf	plusw1,w,c
 38871  017D68  58DE               	subwfb	postinc2,w,c
 38872  017D6A  0EEE               	movlw	-18
 38873  017D6C  50E3               	movf	plusw1,w,c
 38874  017D6E  58DE               	subwfb	postinc2,w,c
 38875  017D70  A0D8               	btfss	status,0,c
 38876  017D72  D015               	goto	l10318
 38877                           
 38878                           ;stkvar	_grs @ sp[(-13)+0]
 38879  017D74  0EF6               	movlw	-10
 38880  017D76  8CE3               	bsf	plusw1,6,c
 38881                           
 38882                           ;stkvar	_a @ sp[(-13)+-8]
 38883                           ;stkvar	_rem @ sp[(-13)+4]
 38884  017D78  50E1               	movf	fsr1l,w,c
 38885  017D7A  0FF7               	addlw	-9
 38886  017D7C  6ED9               	movwf	fsr2l,c
 38887  017D7E  50E2               	movf	fsr1h,w,c
 38888  017D80  6EDA               	movwf	fsr2h,c
 38889  017D82  0EFF               	movlw	255
 38890  017D84  22DA               	addwfc	fsr2h,f,c
 38891  017D86  0EEB               	movlw	-21
 38892  017D88  50E3               	movf	plusw1,w,c
 38893  017D8A  5EDE               	subwf	postinc2,f,c
 38894  017D8C  0EEC               	movlw	-20
 38895  017D8E  50E3               	movf	plusw1,w,c
 38896  017D90  5ADE               	subwfb	postinc2,f,c
 38897  017D92  0EED               	movlw	-19
 38898  017D94  50E3               	movf	plusw1,w,c
 38899  017D96  5ADE               	subwfb	postinc2,f,c
 38900  017D98  0EEE               	movlw	-18
 38901  017D9A  50E3               	movf	plusw1,w,c
 38902  017D9C  5ADE               	subwfb	postinc2,f,c
 38903  017D9E                     l10318:
 38904                           
 38905                           ;stkvar	_aexp @ sp[(-13)+10]
 38906  017D9E  0EFD               	movlw	-3
 38907  017DA0  2AE3               	incf	plusw1,f,c
 38908  017DA2                     l10320:
 38909                           
 38910                           ;stkvar	_aexp @ sp[(-13)+10]
 38911  017DA2  0EFD               	movlw	-3
 38912  017DA4  006F FF8C  F02A    	movff	plusw1,btemp
 38913  017DAA  0E19               	movlw	25
 38914  017DAC  642A               	cpfsgt	btemp^0,c
 38915  017DAE  D7A9               	goto	l10302
 38916                           
 38917                           ;stkvar	_rem @ sp[(-13)+4]
 38918  017DB0  0EF7               	movlw	-9
 38919  017DB2  50E3               	movf	plusw1,w,c
 38920  017DB4  E10A               	bnz	u8400
 38921  017DB6  0EF8               	movlw	-8
 38922  017DB8  50E3               	movf	plusw1,w,c
 38923  017DBA  E107               	bnz	u8400
 38924  017DBC  0EF9               	movlw	-7
 38925  017DBE  50E3               	movf	plusw1,w,c
 38926  017DC0  E104               	bnz	u8400
 38927  017DC2  0EFA               	movlw	-6
 38928  017DC4  50E3               	movf	plusw1,w,c
 38929  017DC6  B4D8               	btfsc	status,2,c
 38930  017DC8  D024               	goto	l10336
 38931  017DCA                     u8400:
 38932                           
 38933                           ;stkvar	_grs @ sp[(-13)+0]
 38934  017DCA  0EF3               	movlw	-13
 38935  017DCC  80E3               	bsf	plusw1,0,c
 38936  017DCE  D021               	goto	l10336
 38937  017DD0                     l10326:
 38938                           
 38939                           ;stkvar	_b @ sp[(-13)+-4]
 38940  017DD0  90D8               	bcf	status,0,c
 38941  017DD2  0EEF               	movlw	-17
 38942  017DD4  36E3               	rlcf	plusw1,f,c
 38943  017DD6  0EF0               	movlw	-16
 38944  017DD8  36E3               	rlcf	plusw1,f,c
 38945  017DDA  0EF1               	movlw	-15
 38946  017DDC  36E3               	rlcf	plusw1,f,c
 38947  017DDE  0EF2               	movlw	-14
 38948  017DE0  36E3               	rlcf	plusw1,f,c
 38949                           
 38950                           ;stkvar	_grs @ sp[(-13)+0]
 38951  017DE2  0EF6               	movlw	-10
 38952  017DE4  AEE3               	btfss	plusw1,7,c
 38953  017DE6  D002               	goto	l10332
 38954                           
 38955                           ;stkvar	_b @ sp[(-13)+-4]
 38956  017DE8  0EEF               	movlw	-17
 38957  017DEA  80E3               	bsf	plusw1,0,c
 38958  017DEC                     l10332:
 38959                           
 38960                           ;stkvar	_grs @ sp[(-13)+0]
 38961  017DEC  90D8               	bcf	status,0,c
 38962  017DEE  0EF3               	movlw	-13
 38963  017DF0  36E3               	rlcf	plusw1,f,c
 38964  017DF2  0EF4               	movlw	-12
 38965  017DF4  36E3               	rlcf	plusw1,f,c
 38966  017DF6  0EF5               	movlw	-11
 38967  017DF8  36E3               	rlcf	plusw1,f,c
 38968  017DFA  0EF6               	movlw	-10
 38969  017DFC  36E3               	rlcf	plusw1,f,c
 38970                           
 38971                           ;stkvar	_new_exp @ sp[(-13)+8]
 38972  017DFE  50E1               	movf	fsr1l,w,c
 38973  017E00  0FFB               	addlw	-5
 38974  017E02  6ED9               	movwf	fsr2l,c
 38975  017E04  50E2               	movf	fsr1h,w,c
 38976  017E06  6EDA               	movwf	fsr2h,c
 38977  017E08  0EFF               	movlw	255
 38978  017E0A  22DA               	addwfc	fsr2h,f,c
 38979  017E0C  06DE               	decf	postinc2,f,c
 38980  017E0E  0E00               	movlw	0
 38981  017E10  5ADD               	subwfb	postdec2,f,c
 38982  017E12                     l10336:
 38983                           
 38984                           ;stkvar	_b @ sp[(-13)+-4]
 38985  017E12  0EF1               	movlw	-15
 38986  017E14  AEE3               	btfss	plusw1,7,c
 38987  017E16  D7DC               	goto	l10326
 38988                           
 38989                           ;stkvar	_aexp @ sp[(-13)+10]
 38990  017E18  0EFD               	movlw	-3
 38991  017E1A  6AE3               	clrf	plusw1,c
 38992                           
 38993                           ;stkvar	_grs @ sp[(-13)+0]
 38994  017E1C  0EF6               	movlw	-10
 38995  017E1E  AEE3               	btfss	plusw1,7,c
 38996  017E20  D020               	goto	l10350
 38997                           
 38998                           ;stkvar	_grs @ sp[(-13)+0]
 38999  017E22  50E1               	movf	fsr1l,w,c
 39000  017E24  0FF3               	addlw	-13
 39001  017E26  6ED9               	movwf	fsr2l,c
 39002  017E28  50E2               	movf	fsr1h,w,c
 39003  017E2A  6EDA               	movwf	fsr2h,c
 39004  017E2C  0EFF               	movlw	255
 39005  017E2E  22DA               	addwfc	fsr2h,f,c
 39006  017E30  0EFF               	movlw	255
 39007  017E32  14DE               	andwf	postinc2,w,c
 39008  017E34  6E32               	movwf	(btemp+8)^0,c
 39009  017E36  0EFF               	movlw	255
 39010  017E38  14DE               	andwf	postinc2,w,c
 39011  017E3A  6E33               	movwf	(btemp+9)^0,c
 39012  017E3C  0EFF               	movlw	255
 39013  017E3E  14DE               	andwf	postinc2,w,c
 39014  017E40  6E34               	movwf	(btemp+10)^0,c
 39015  017E42  0E7F               	movlw	127
 39016  017E44  14DE               	andwf	postinc2,w,c
 39017  017E46  6E35               	movwf	(btemp+11)^0,c
 39018  017E48  5032               	movf	(btemp+8)^0,w,c
 39019  017E4A  1033               	iorwf	(btemp+9)^0,w,c
 39020  017E4C  1034               	iorwf	(btemp+10)^0,w,c
 39021  017E4E  1035               	iorwf	(btemp+11)^0,w,c
 39022  017E50  B4D8               	btfsc	status,2,c
 39023  017E52  D004               	goto	l10346
 39024  017E54                     u8440:
 39025                           
 39026                           ;stkvar	_aexp @ sp[(-13)+10]
 39027  017E54  0EFD               	movlw	-3
 39028  017E56  6AE3               	clrf	plusw1,c
 39029  017E58  2AE3               	incf	plusw1,f,c
 39030  017E5A  D003               	goto	l10350
 39031  017E5C                     l10346:
 39032                           
 39033                           ;stkvar	_b @ sp[(-13)+-4]
 39034  017E5C  0EEF               	movlw	-17
 39035  017E5E  B0E3               	btfsc	plusw1,0,c
 39036  017E60  D7F9               	goto	u8440
 39037  017E62                     l10350:
 39038                           
 39039                           ;stkvar	_aexp @ sp[(-13)+10]
 39040  017E62  0EFD               	movlw	-3
 39041  017E64  50E3               	movf	plusw1,w,c
 39042  017E66  B4D8               	btfsc	status,2,c
 39043  017E68  D036               	goto	l10360
 39044                           
 39045                           ;stkvar	_b @ sp[(-13)+-4]
 39046  017E6A  50E1               	movf	fsr1l,w,c
 39047  017E6C  0FEF               	addlw	-17
 39048  017E6E  6ED9               	movwf	fsr2l,c
 39049  017E70  50E2               	movf	fsr1h,w,c
 39050  017E72  6EDA               	movwf	fsr2h,c
 39051  017E74  0EFF               	movlw	255
 39052  017E76  22DA               	addwfc	fsr2h,f,c
 39053  017E78  2ADE               	incf	postinc2,f,c
 39054  017E7A  0E00               	movlw	0
 39055  017E7C  22DE               	addwfc	postinc2,f,c
 39056  017E7E  22DE               	addwfc	postinc2,f,c
 39057  017E80  22DE               	addwfc	postinc2,f,c
 39058                           
 39059                           ;stkvar	_b @ sp[(-13)+-4]
 39060  017E82  0EF2               	movlw	-14
 39061  017E84  A0E3               	btfss	plusw1,0,c
 39062  017E86  D027               	goto	l10360
 39063  017E88  0E01               	movlw	1
 39064  017E8A  6E35               	movwf	(btemp+11)^0,c
 39065                           
 39066                           ;stkvar	_b @ sp[(-13)+-4]
 39067  017E8C  50E1               	movf	fsr1l,w,c
 39068  017E8E  0FEF               	addlw	-17
 39069  017E90  6ED9               	movwf	fsr2l,c
 39070  017E92  50E2               	movf	fsr1h,w,c
 39071  017E94  6EDA               	movwf	fsr2h,c
 39072  017E96  0EFF               	movlw	255
 39073  017E98  22DA               	addwfc	fsr2h,f,c
 39074  017E9A  2835               	incf	(btemp+11)^0,w,c
 39075  017E9C  52DE               	movf	postinc2,f,c
 39076  017E9E  D008               	goto	u8480
 39077  017EA0                     u8485:
 39078  017EA0  52DE               	movf	postinc2,f,c
 39079  017EA2  90D8               	bcf	status,0,c
 39080  017EA4  BEDC               	btfsc	preinc2,7,c
 39081  017EA6  80D8               	bsf	status,0,c
 39082  017EA8  32DD               	rrcf	postdec2,f,c
 39083  017EAA  32DD               	rrcf	postdec2,f,c
 39084  017EAC  32DD               	rrcf	postdec2,f,c
 39085  017EAE  32DE               	rrcf	postinc2,f,c
 39086  017EB0                     u8480:
 39087  017EB0  2EE8               	decfsz	wreg,f,c
 39088  017EB2  D7F6               	goto	u8485
 39089                           
 39090                           ;stkvar	_new_exp @ sp[(-13)+8]
 39091  017EB4  0EFB               	movlw	-5
 39092  017EB6  50E3               	movf	plusw1,w,c
 39093  017EB8  0F01               	addlw	1
 39094  017EBA  6E2A               	movwf	btemp^0,c
 39095  017EBC  0EFB               	movlw	-5
 39096  017EBE  0060  F0AB  FFE3   	movff	btemp,plusw1
 39097  017EC4  6A2A               	clrf	btemp^0,c
 39098  017EC6  0EFC               	movlw	-4
 39099  017EC8  50E3               	movf	plusw1,w,c
 39100  017ECA  202A               	addwfc	btemp^0,w,c
 39101  017ECC  6E2A               	movwf	btemp^0,c
 39102  017ECE  0EFC               	movlw	-4
 39103  017ED0  0060  F0AB  FFE3   	movff	btemp,plusw1
 39104  017ED6                     l10360:
 39105                           
 39106                           ;stkvar	_new_exp @ sp[(-13)+8]
 39107  017ED6  0EFC               	movlw	-4
 39108  017ED8  BEE3               	btfsc	plusw1,7,c
 39109  017EDA  D01B               	goto	l10366
 39110  017EDC  0EFC               	movlw	-4
 39111  017EDE  50E3               	movf	plusw1,w,c
 39112  017EE0  E104               	bnz	u8490
 39113  017EE2  0EFB               	movlw	-5
 39114  017EE4  28E3               	incf	plusw1,w,c
 39115  017EE6  A0D8               	btfss	status,0,c
 39116  017EE8  D014               	goto	l10366
 39117  017EEA                     u8490:
 39118  017EEA  0EFF               	movlw	255
 39119  017EEC  6E34               	movwf	(btemp+10)^0,c
 39120  017EEE  0E00               	movlw	0
 39121  017EF0  6E35               	movwf	(btemp+11)^0,c
 39122                           
 39123                           ;stkvar	_new_exp @ sp[(-13)+8]
 39124  017EF2  0EFB               	movlw	-5
 39125  017EF4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39126  017EFA  0EFC               	movlw	-4
 39127  017EFC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39128                           
 39129                           ;stkvar	_b @ sp[(-13)+-4]
 39130  017F02  0EEF               	movlw	-17
 39131  017F04  6AE3               	clrf	plusw1,c
 39132  017F06  0EF0               	movlw	-16
 39133  017F08  6AE3               	clrf	plusw1,c
 39134  017F0A  0EF1               	movlw	-15
 39135  017F0C  6AE3               	clrf	plusw1,c
 39136  017F0E  0EF2               	movlw	-14
 39137  017F10  6AE3               	clrf	plusw1,c
 39138  017F12                     l10366:
 39139                           
 39140                           ;stkvar	_new_exp @ sp[(-13)+8]
 39141  017F12  0EFC               	movlw	-4
 39142  017F14  BEE3               	btfsc	plusw1,7,c
 39143  017F16  D007               	goto	u8500
 39144  017F18  0EFC               	movlw	-4
 39145  017F1A  50E3               	movf	plusw1,w,c
 39146  017F1C  E112               	bnz	l10372
 39147  017F1E  0EFB               	movlw	-5
 39148  017F20  04E3               	decf	plusw1,w,c
 39149  017F22  B0D8               	btfsc	status,0,c
 39150  017F24  D00E               	goto	l10372
 39151  017F26                     u8500:
 39152                           
 39153                           ;stkvar	_new_exp @ sp[(-13)+8]
 39154  017F26  0EFB               	movlw	-5
 39155  017F28  6AE3               	clrf	plusw1,c
 39156  017F2A  0EFC               	movlw	-4
 39157  017F2C  6AE3               	clrf	plusw1,c
 39158                           
 39159                           ;stkvar	_b @ sp[(-13)+-4]
 39160  017F2E  0EEF               	movlw	-17
 39161  017F30  6AE3               	clrf	plusw1,c
 39162  017F32  0EF0               	movlw	-16
 39163  017F34  6AE3               	clrf	plusw1,c
 39164  017F36  0EF1               	movlw	-15
 39165  017F38  6AE3               	clrf	plusw1,c
 39166  017F3A  0EF2               	movlw	-14
 39167  017F3C  6AE3               	clrf	plusw1,c
 39168                           
 39169                           ;stkvar	_sign @ sp[(-13)+12]
 39170  017F3E  0EFF               	movlw	-1
 39171  017F40  6AE3               	clrf	plusw1,c
 39172  017F42                     l10372:
 39173                           
 39174                           ;stkvar	_new_exp @ sp[(-13)+8]
 39175                           ;stkvar	_bexp @ sp[(-13)+11]
 39176  017F42  0EFB               	movlw	-5
 39177  017F44  006F FF8C  F02A    	movff	plusw1,btemp
 39178  017F4A  0EFE               	movlw	-2
 39179  017F4C  0060  F0AB  FFE3   	movff	btemp,plusw1
 39180                           
 39181                           ;stkvar	_bexp @ sp[(-13)+11]
 39182  017F52  0EFE               	movlw	-2
 39183  017F54  A0E3               	btfss	plusw1,0,c
 39184  017F56  D009               	goto	l10378
 39185                           
 39186                           ;stkvar	_b @ sp[(-13)+-4]
 39187  017F58  0EF1               	movlw	241
 39188  017F5A  24E1               	addwf	fsr1l,w,c
 39189  017F5C  6ED9               	movwf	fsr2l,c
 39190  017F5E  0EFF               	movlw	255
 39191  017F60  20E2               	addwfc	fsr1h,w,c
 39192  017F62  6EDA               	movwf	fsr2h,c
 39193  017F64  0E00               	movlw	0
 39194  017F66  8EDB               	bsf	plusw2,7,c
 39195  017F68  D008               	goto	l10380
 39196  017F6A                     l10378:
 39197                           
 39198                           ;stkvar	_b @ sp[(-13)+-4]
 39199  017F6A  0EF1               	movlw	241
 39200  017F6C  24E1               	addwf	fsr1l,w,c
 39201  017F6E  6ED9               	movwf	fsr2l,c
 39202  017F70  0EFF               	movlw	255
 39203  017F72  20E2               	addwfc	fsr1h,w,c
 39204  017F74  6EDA               	movwf	fsr2h,c
 39205  017F76  0E7F               	movlw	127
 39206  017F78  16DF               	andwf	indf2,f,c
 39207  017F7A                     l10380:
 39208                           
 39209                           ;stkvar	_b @ sp[(-13)+-4]
 39210  017F7A  0EF2               	movlw	242
 39211  017F7C  24E1               	addwf	fsr1l,w,c
 39212  017F7E  6ED9               	movwf	fsr2l,c
 39213  017F80  0EFF               	movlw	255
 39214  017F82  20E2               	addwfc	fsr1h,w,c
 39215  017F84  6EDA               	movwf	fsr2h,c
 39216                           
 39217                           ;stkvar	_bexp @ sp[(-13)+11]
 39218  017F86  0EFE               	movlw	-2
 39219  017F88  006F FF8C  F035    	movff	plusw1,btemp+11
 39220  017F8E  90D8               	bcf	status,0,c
 39221  017F90  3035               	rrcf	(btemp+11)^0,w,c
 39222  017F92  6EDF               	movwf	indf2,c
 39223  017F94  D644               	goto	l10278
 39224  017F96                     l3290:
 39225                           
 39226                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 39227  017F96  0EEB               	movlw	235
 39228  017F98  26E1               	addwf	fsr1l,f,c
 39229  017F9A  0EFF               	movlw	255
 39230  017F9C  22E2               	addwfc	fsr1h,f,c
 39231  017F9E  0012               	return		;funcret
 39232  017FA0                     __end_of___fldiv:
 39233                           	opt callstack 0
 39234                           
 39235 ;; *************** function ___flge *****************
 39236 ;; Defined at:
 39237 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 39238 ;; Parameters:    Size  Location     Type
 39239 ;;  ff1             4  [STACK] unsigned char 
 39240 ;;  ff2             4  [STACK] unsigned char 
 39241 ;; Auto vars:     Size  Location     Type
 39242 ;;		None
 39243 ;; Return value:  Size  Location     Type
 39244 ;;		None               void
 39245 ;; Registers used:
 39246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 39247 ;; Tracked objects:
 39248 ;;		On entry : 0/1
 39249 ;;		On exit  : 0/0
 39250 ;;		Unchanged: 0/0
 39251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39256 ;;Total ram usage:        0 bytes
 39257 ;; Hardware stack levels used:    1
 39258 ;; Hardware stack levels required when called:   15
 39259 ;; This function calls:
 39260 ;;		Nothing
 39261 ;; This function is called by:
 39262 ;;		_main
 39263 ;;		_convert_dac_raw
 39264 ;;		_calc_ror_data
 39265 ;;		_check_day_time
 39266 ;;		_calc_bsoc
 39267 ;;		_efgtoa
 39268 ;; This function uses a reentrant model
 39269 ;;
 39270                           
 39271                           	psect	text145
 39272  01E1BA                     __ptext145:
 39273                           	opt callstack 0
 39274  01E1BA                     ___flge:
 39275                           	opt callstack 0
 39276                           
 39277                           ;stkvar	_ff1 @ sp[(0)+-4]
 39278                           
 39279                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39280                           ;incstack = 0
 39281 ;; hardware stack exceeded
 39282  01E1BA  50E1               	movf	fsr1l,w,c
 39283  01E1BC  0FFC               	addlw	-4
 39284  01E1BE  6ED9               	movwf	fsr2l,c
 39285  01E1C0  50E2               	movf	fsr1h,w,c
 39286  01E1C2  6EDA               	movwf	fsr2h,c
 39287  01E1C4  0EFF               	movlw	255
 39288  01E1C6  22DA               	addwfc	fsr2h,f,c
 39289  01E1C8  0E00               	movlw	0
 39290  01E1CA  14DE               	andwf	postinc2,w,c
 39291  01E1CC  6E32               	movwf	(btemp+8)^0,c
 39292  01E1CE  0E00               	movlw	0
 39293  01E1D0  14DE               	andwf	postinc2,w,c
 39294  01E1D2  6E33               	movwf	(btemp+9)^0,c
 39295  01E1D4  0E80               	movlw	128
 39296  01E1D6  14DE               	andwf	postinc2,w,c
 39297  01E1D8  6E34               	movwf	(btemp+10)^0,c
 39298  01E1DA  0E7F               	movlw	127
 39299  01E1DC  14DE               	andwf	postinc2,w,c
 39300  01E1DE  6E35               	movwf	(btemp+11)^0,c
 39301  01E1E0  5032               	movf	(btemp+8)^0,w,c
 39302  01E1E2  1033               	iorwf	(btemp+9)^0,w,c
 39303  01E1E4  1034               	iorwf	(btemp+10)^0,w,c
 39304  01E1E6  1035               	iorwf	(btemp+11)^0,w,c
 39305  01E1E8  A4D8               	btfss	status,2,c
 39306  01E1EA  D008               	goto	l10654
 39307                           
 39308                           ;stkvar	_ff1 @ sp[(0)+-4]
 39309  01E1EC  0EFC               	movlw	-4
 39310  01E1EE  6AE3               	clrf	plusw1,c
 39311  01E1F0  0EFD               	movlw	-3
 39312  01E1F2  6AE3               	clrf	plusw1,c
 39313  01E1F4  0EFE               	movlw	-2
 39314  01E1F6  6AE3               	clrf	plusw1,c
 39315  01E1F8  0EFF               	movlw	-1
 39316  01E1FA  6AE3               	clrf	plusw1,c
 39317  01E1FC                     l10654:
 39318                           
 39319                           ;stkvar	_ff2 @ sp[(0)+-8]
 39320  01E1FC  50E1               	movf	fsr1l,w,c
 39321  01E1FE  0FF8               	addlw	-8
 39322  01E200  6ED9               	movwf	fsr2l,c
 39323  01E202  50E2               	movf	fsr1h,w,c
 39324  01E204  6EDA               	movwf	fsr2h,c
 39325  01E206  0EFF               	movlw	255
 39326  01E208  22DA               	addwfc	fsr2h,f,c
 39327  01E20A  0E00               	movlw	0
 39328  01E20C  14DE               	andwf	postinc2,w,c
 39329  01E20E  6E32               	movwf	(btemp+8)^0,c
 39330  01E210  0E00               	movlw	0
 39331  01E212  14DE               	andwf	postinc2,w,c
 39332  01E214  6E33               	movwf	(btemp+9)^0,c
 39333  01E216  0E80               	movlw	128
 39334  01E218  14DE               	andwf	postinc2,w,c
 39335  01E21A  6E34               	movwf	(btemp+10)^0,c
 39336  01E21C  0E7F               	movlw	127
 39337  01E21E  14DE               	andwf	postinc2,w,c
 39338  01E220  6E35               	movwf	(btemp+11)^0,c
 39339  01E222  5032               	movf	(btemp+8)^0,w,c
 39340  01E224  1033               	iorwf	(btemp+9)^0,w,c
 39341  01E226  1034               	iorwf	(btemp+10)^0,w,c
 39342  01E228  1035               	iorwf	(btemp+11)^0,w,c
 39343  01E22A  A4D8               	btfss	status,2,c
 39344  01E22C  D008               	goto	l2971
 39345                           
 39346                           ;stkvar	_ff2 @ sp[(0)+-8]
 39347  01E22E  0EF8               	movlw	-8
 39348  01E230  6AE3               	clrf	plusw1,c
 39349  01E232  0EF9               	movlw	-7
 39350  01E234  6AE3               	clrf	plusw1,c
 39351  01E236  0EFA               	movlw	-6
 39352  01E238  6AE3               	clrf	plusw1,c
 39353  01E23A  0EFB               	movlw	-5
 39354  01E23C  6AE3               	clrf	plusw1,c
 39355  01E23E                     l2971:
 39356                           
 39357                           ;stkvar	_ff1 @ sp[(0)+-4]
 39358  01E23E  0EFF               	movlw	-1
 39359  01E240  AEE3               	btfss	plusw1,7,c
 39360  01E242  D024               	goto	l10660
 39361                           
 39362                           ;stkvar	_ff1 @ sp[(0)+-4]
 39363  01E244  0E00               	movlw	0
 39364  01E246  6E32               	movwf	(btemp+8)^0,c
 39365  01E248  0E00               	movlw	0
 39366  01E24A  6E33               	movwf	(btemp+9)^0,c
 39367  01E24C  0E00               	movlw	0
 39368  01E24E  6E34               	movwf	(btemp+10)^0,c
 39369  01E250  0E80               	movlw	128
 39370  01E252  6E35               	movwf	(btemp+11)^0,c
 39371  01E254  0EFC               	movlw	-4
 39372  01E256  50E3               	movf	plusw1,w,c
 39373  01E258  5E32               	subwf	(btemp+8)^0,f,c
 39374  01E25A  0EFD               	movlw	-3
 39375  01E25C  50E3               	movf	plusw1,w,c
 39376  01E25E  5A33               	subwfb	(btemp+9)^0,f,c
 39377  01E260  0EFE               	movlw	-2
 39378  01E262  50E3               	movf	plusw1,w,c
 39379  01E264  5A34               	subwfb	(btemp+10)^0,f,c
 39380  01E266  0EFF               	movlw	-1
 39381  01E268  50E3               	movf	plusw1,w,c
 39382  01E26A  5A35               	subwfb	(btemp+11)^0,f,c
 39383                           
 39384                           ;stkvar	_ff1 @ sp[(0)+-4]
 39385  01E26C  0EFC               	movlw	-4
 39386  01E26E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39387  01E274  0EFD               	movlw	-3
 39388  01E276  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39389  01E27C  0EFE               	movlw	-2
 39390  01E27E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39391  01E284  0EFF               	movlw	-1
 39392  01E286  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39393  01E28C                     l10660:
 39394                           
 39395                           ;stkvar	_ff2 @ sp[(0)+-8]
 39396  01E28C  0EFB               	movlw	-5
 39397  01E28E  AEE3               	btfss	plusw1,7,c
 39398  01E290  D024               	goto	l10664
 39399                           
 39400                           ;stkvar	_ff2 @ sp[(0)+-8]
 39401  01E292  0E00               	movlw	0
 39402  01E294  6E32               	movwf	(btemp+8)^0,c
 39403  01E296  0E00               	movlw	0
 39404  01E298  6E33               	movwf	(btemp+9)^0,c
 39405  01E29A  0E00               	movlw	0
 39406  01E29C  6E34               	movwf	(btemp+10)^0,c
 39407  01E29E  0E80               	movlw	128
 39408  01E2A0  6E35               	movwf	(btemp+11)^0,c
 39409  01E2A2  0EF8               	movlw	-8
 39410  01E2A4  50E3               	movf	plusw1,w,c
 39411  01E2A6  5E32               	subwf	(btemp+8)^0,f,c
 39412  01E2A8  0EF9               	movlw	-7
 39413  01E2AA  50E3               	movf	plusw1,w,c
 39414  01E2AC  5A33               	subwfb	(btemp+9)^0,f,c
 39415  01E2AE  0EFA               	movlw	-6
 39416  01E2B0  50E3               	movf	plusw1,w,c
 39417  01E2B2  5A34               	subwfb	(btemp+10)^0,f,c
 39418  01E2B4  0EFB               	movlw	-5
 39419  01E2B6  50E3               	movf	plusw1,w,c
 39420  01E2B8  5A35               	subwfb	(btemp+11)^0,f,c
 39421                           
 39422                           ;stkvar	_ff2 @ sp[(0)+-8]
 39423  01E2BA  0EF8               	movlw	-8
 39424  01E2BC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39425  01E2C2  0EF9               	movlw	-7
 39426  01E2C4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39427  01E2CA  0EFA               	movlw	-6
 39428  01E2CC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39429  01E2D2  0EFB               	movlw	-5
 39430  01E2D4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39431  01E2DA                     l10664:
 39432                           
 39433                           ;stkvar	_ff1 @ sp[(0)+-4]
 39434  01E2DA  0EFF               	movlw	-1
 39435  01E2DC  7EE3               	btg	plusw1,7,c
 39436                           
 39437                           ;stkvar	_ff2 @ sp[(0)+-8]
 39438  01E2DE  0EFB               	movlw	-5
 39439  01E2E0  7EE3               	btg	plusw1,7,c
 39440                           
 39441                           ;stkvar	_ff2 @ sp[(0)+-8]
 39442                           ;stkvar	_ff1 @ sp[(0)+-4]
 39443  01E2E2  50E1               	movf	fsr1l,w,c
 39444  01E2E4  0FFC               	addlw	-4
 39445  01E2E6  6ED9               	movwf	fsr2l,c
 39446  01E2E8  50E2               	movf	fsr1h,w,c
 39447  01E2EA  6EDA               	movwf	fsr2h,c
 39448  01E2EC  0EFF               	movlw	255
 39449  01E2EE  22DA               	addwfc	fsr2h,f,c
 39450  01E2F0  0EF8               	movlw	-8
 39451  01E2F2  50E3               	movf	plusw1,w,c
 39452  01E2F4  5CDE               	subwf	postinc2,w,c
 39453  01E2F6  0EF9               	movlw	-7
 39454  01E2F8  50E3               	movf	plusw1,w,c
 39455  01E2FA  58DE               	subwfb	postinc2,w,c
 39456  01E2FC  0EFA               	movlw	-6
 39457  01E2FE  50E3               	movf	plusw1,w,c
 39458  01E300  58DE               	subwfb	postinc2,w,c
 39459  01E302  0EFB               	movlw	-5
 39460  01E304  50E3               	movf	plusw1,w,c
 39461  01E306  58DE               	subwfb	postinc2,w,c
 39462  01E308  B0D8               	btfsc	status,0,c
 39463  01E30A  D002               	goto	l10672
 39464  01E30C  902A               	bcf	btemp& (0+255),0,c
 39465  01E30E  D001               	goto	l2978
 39466  01E310                     l10672:
 39467  01E310  802A               	bsf	btemp& (0+255),0,c
 39468  01E312                     l2978:
 39469                           
 39470                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 39471  01E312  0EF8               	movlw	248
 39472  01E314  26E1               	addwf	fsr1l,f,c
 39473  01E316  0EFF               	movlw	255
 39474  01E318  22E2               	addwfc	fsr1h,f,c
 39475  01E31A  0012               	return		;funcret
 39476  01E31C                     __end_of___flge:
 39477                           	opt callstack 0
 39478                           
 39479 ;; *************** function _calc_model_data *****************
 39480 ;; Defined at:
 39481 ;;		line 67 in file "mbmc.c"
 39482 ;; Parameters:    Size  Location     Type
 39483 ;;		None
 39484 ;; Auto vars:     Size  Location     Type
 39485 ;;		None
 39486 ;; Return value:  Size  Location     Type
 39487 ;;                  1  [STACK] void 
 39488 ;; Registers used:
 39489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 39490 ;; Tracked objects:
 39491 ;;		On entry : 0/2
 39492 ;;		On exit  : 3F/39
 39493 ;;		Unchanged: 0/0
 39494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39499 ;;Total ram usage:        0 bytes
 39500 ;; Hardware stack levels used:    1
 39501 ;; Hardware stack levels required when called:   18
 39502 ;; This function calls:
 39503 ;;		___fladd
 39504 ;;		___flmul
 39505 ;;		___flsub
 39506 ;;		_lp_filter
 39507 ;;		_start_bsoc
 39508 ;;		_stop_bsoc
 39509 ;; This function is called by:
 39510 ;;		_main
 39511 ;; This function uses a reentrant model
 39512 ;;
 39513                           
 39514                           	psect	text146
 39515  019266                     __ptext146:
 39516                           	opt callstack 0
 39517  019266                     _calc_model_data:
 39518                           	opt callstack 12
 39519                           
 39520                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 39521                           
 39522                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39523                           ;incstack = 0
 39524  019266  EC69  F011         	call	_stop_bsoc	;wreg free
 39525                           
 39526                           ; BSR set to: 57
 39527                           ;mbmc.c: 72:  if (!V.calib) {
 39528  01926A  0102               	movlb	2	; () banked
 39529  01926C  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 39530  01926E  A4D8               	btfss	status,2,c
 39531  019270  D220               	goto	l14338
 39532                           
 39533                           ; BSR set to: 2
 39534                           ;mbmc.c: 73:   C.updates++;
 39535  019272  EE22  F24B         	lfsr	2,_C+332	;volatile
 39536  019276  2ADE               	incf	postinc2,f,c
 39537  019278  0E00               	movlw	0
 39538  01927A  22DE               	addwfc	postinc2,f,c
 39539  01927C  22DE               	addwfc	postinc2,f,c
 39540  01927E  22DE               	addwfc	postinc2,f,c
 39541                           
 39542                           ; BSR set to: 2
 39543                           ;mbmc.c: 74:   C.c_bat = C.calc[C_BATT];
 39544  019280  EE22  F0FF         	lfsr	2,_C
 39545  019284  006F FF78  F943    	movff	postinc2,_C+68	;volatile
 39546  01928A  006F FF78  F944    	movff	postinc2,_C+69	;volatile
 39547  019290  006F FF78  F945    	movff	postinc2,_C+70	;volatile
 39548  019296  006F FF74  F946    	movff	postdec2,_C+71	;volatile
 39549                           
 39550                           ; BSR set to: 2
 39551                           ;mbmc.c: 75:   C.bc_ror = C.c_bat - bcror;
 39552  01929C  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 39553  0192A2  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 39554  0192A8  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 39555  0192AE  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 39556  0192B4  EE22  F143         	lfsr	2,_C+68	;volatile
 39557  0192B8  006F FF7B FFE6     	movff	postinc2,postinc1
 39558  0192BE  006F FF7B FFE6     	movff	postinc2,postinc1
 39559  0192C4  006F FF7B FFE6     	movff	postinc2,postinc1
 39560  0192CA  006F FF7B FFE6     	movff	postinc2,postinc1
 39561  0192D0  EC28  F00B         	call	___flsub	;wreg free
 39562  0192D4  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 39563  0192DA  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 39564  0192E0  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 39565  0192E6  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 39566                           
 39567                           ;mbmc.c: 76:   bcror = C.c_bat;
 39568  0192EC  C943  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 39569  0192F0  C944  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 39570  0192F4  C945  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 39571  0192F8  C946  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 39572                           
 39573                           ;mbmc.c: 77:   C.c_pv = C.calc[C_PV];
 39574  0192FC  EE22  F103         	lfsr	2,_C+4	;volatile
 39575  019300  006F FF78  F947    	movff	postinc2,_C+72	;volatile
 39576  019306  006F FF78  F948    	movff	postinc2,_C+73	;volatile
 39577  01930C  006F FF78  F949    	movff	postinc2,_C+74	;volatile
 39578  019312  006F FF74  F94A    	movff	postdec2,_C+75	;volatile
 39579                           
 39580                           ;mbmc.c: 78:   C.v_bat = C.calc[V_BAT];
 39581  019318  EE22  F10F         	lfsr	2,_C+16	;volatile
 39582  01931C  006F FF78  F953    	movff	postinc2,_C+84	;volatile
 39583  019322  006F FF78  F954    	movff	postinc2,_C+85	;volatile
 39584  019328  006F FF78  F955    	movff	postinc2,_C+86	;volatile
 39585  01932E  006F FF74  F956    	movff	postdec2,_C+87	;volatile
 39586                           
 39587                           ;mbmc.c: 79:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 39588  019334  EE22  F133         	lfsr	2,_C+52	;volatile
 39589  019338  006F FF78  F967    	movff	postinc2,_C+104	;volatile
 39590  01933E  006F FF78  F968    	movff	postinc2,_C+105	;volatile
 39591  019344  006F FF78  F969    	movff	postinc2,_C+106	;volatile
 39592  01934A  006F FF74  F96A    	movff	postdec2,_C+107	;volatile
 39593                           
 39594                           ;mbmc.c: 80:   C.bv_ror = C.v_bat - bvror;
 39595  019350  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 39596  019356  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 39597  01935C  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 39598  019362  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 39599  019368  EE22  F153         	lfsr	2,_C+84	;volatile
 39600  01936C  006F FF7B FFE6     	movff	postinc2,postinc1
 39601  019372  006F FF7B FFE6     	movff	postinc2,postinc1
 39602  019378  006F FF7B FFE6     	movff	postinc2,postinc1
 39603  01937E  006F FF7B FFE6     	movff	postinc2,postinc1
 39604  019384  EC28  F00B         	call	___flsub	;wreg free
 39605  019388  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 39606  01938E  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 39607  019394  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 39608  01939A  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 39609                           
 39610                           ;mbmc.c: 81:   bvror = C.v_bat;
 39611  0193A0  C953  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 39612  0193A4  C954  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 39613  0193A8  C955  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 39614  0193AC  C956  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 39615                           
 39616                           ;mbmc.c: 82:   C.v_pv = C.calc[V_PV];
 39617  0193B0  EE22  F113         	lfsr	2,_C+20	;volatile
 39618  0193B4  006F FF78  F94F    	movff	postinc2,_C+80	;volatile
 39619  0193BA  006F FF78  F950    	movff	postinc2,_C+81	;volatile
 39620  0193C0  006F FF78  F951    	movff	postinc2,_C+82	;volatile
 39621  0193C6  006F FF74  F952    	movff	postdec2,_C+83	;volatile
 39622                           
 39623                           ;mbmc.c: 83:   C.v_cc = C.calc[V_CC];
 39624  0193CC  EE22  F107         	lfsr	2,_C+8	;volatile
 39625  0193D0  006F FF78  F94B    	movff	postinc2,_C+76	;volatile
 39626  0193D6  006F FF78  F94C    	movff	postinc2,_C+77	;volatile
 39627  0193DC  006F FF78  F94D    	movff	postinc2,_C+78	;volatile
 39628  0193E2  006F FF74  F94E    	movff	postdec2,_C+79	;volatile
 39629                           
 39630                           ;mbmc.c: 84:   C.v_inverter = C.calc[V_INVERTER];
 39631  0193E8  EE22  F12F         	lfsr	2,_C+48	;volatile
 39632  0193EC  006F FF78  F963    	movff	postinc2,_C+100	;volatile
 39633  0193F2  006F FF78  F964    	movff	postinc2,_C+101	;volatile
 39634  0193F8  006F FF78  F965    	movff	postinc2,_C+102	;volatile
 39635  0193FE  006F FF74  F966    	movff	postdec2,_C+103	;volatile
 39636                           
 39637                           ;mbmc.c: 85:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 39638  019404  0E01               	movlw	1
 39639  019406  6EE6               	movwf	postinc1,c
 39640  019408  0E10               	movlw	16
 39641  01940A  6EE6               	movwf	postinc1,c
 39642  01940C  EE22  F0FF         	lfsr	2,_C
 39643  019410  006F FF7B FFE6     	movff	postinc2,postinc1
 39644  019416  006F FF7B FFE6     	movff	postinc2,postinc1
 39645  01941C  006F FF7B FFE6     	movff	postinc2,postinc1
 39646  019422  006F FF7B FFE6     	movff	postinc2,postinc1
 39647  019428  EE22  F103         	lfsr	2,_C+4	;volatile
 39648  01942C  006F FF7B FFE6     	movff	postinc2,postinc1
 39649  019432  006F FF7B FFE6     	movff	postinc2,postinc1
 39650  019438  006F FF7B FFE6     	movff	postinc2,postinc1
 39651  01943E  006F FF7B FFE6     	movff	postinc2,postinc1
 39652  019444  EC28  F00B         	call	___flsub	;wreg free
 39653  019448  0060  F0AB  FFE6   	movff	btemp,postinc1
 39654  01944E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39655  019454  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39656  01945A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39657  019460  EC29  F0E9         	call	_lp_filter	;wreg free
 39658  019464  0060  F0A8  F93F   	movff	btemp,_C+64	;volatile
 39659  01946A  0060  F0AC  F940   	movff	btemp+1,_C+65	;volatile
 39660  019470  0060  F0B0  F941   	movff	btemp+2,_C+66	;volatile
 39661  019476  0060  F0B4  F942   	movff	btemp+3,_C+67	;volatile
 39662                           
 39663                           ;mbmc.c: 86:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 39664  01947C  0E01               	movlw	1
 39665  01947E  6EE6               	movwf	postinc1,c
 39666  019480  0E11               	movlw	17
 39667  019482  6EE6               	movwf	postinc1,c
 39668  019484  EE22  F153         	lfsr	2,_C+84	;volatile
 39669  019488  006F FF7B FFE6     	movff	postinc2,postinc1
 39670  01948E  006F FF7B FFE6     	movff	postinc2,postinc1
 39671  019494  006F FF7B FFE6     	movff	postinc2,postinc1
 39672  01949A  006F FF7B FFE6     	movff	postinc2,postinc1
 39673  0194A0  EE22  F13F         	lfsr	2,_C+64	;volatile
 39674  0194A4  006F FF7B FFE6     	movff	postinc2,postinc1
 39675  0194AA  006F FF7B FFE6     	movff	postinc2,postinc1
 39676  0194B0  006F FF7B FFE6     	movff	postinc2,postinc1
 39677  0194B6  006F FF7B FFE6     	movff	postinc2,postinc1
 39678  0194BC  ECC2  F0B1         	call	___flmul	;wreg free
 39679  0194C0  0060  F0AB  FFE6   	movff	btemp,postinc1
 39680  0194C6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39681  0194CC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39682  0194D2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39683  0194D8  EC29  F0E9         	call	_lp_filter	;wreg free
 39684  0194DC  0060  F0A8  F973   	movff	btemp,_C+116	;volatile
 39685  0194E2  0060  F0AC  F974   	movff	btemp+1,_C+117	;volatile
 39686  0194E8  0060  F0B0  F975   	movff	btemp+2,_C+118	;volatile
 39687  0194EE  0060  F0B4  F976   	movff	btemp+3,_C+119	;volatile
 39688                           
 39689                           ;mbmc.c: 87:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 39690  0194F4  0E01               	movlw	1
 39691  0194F6  6EE6               	movwf	postinc1,c
 39692  0194F8  0E12               	movlw	18
 39693  0194FA  6EE6               	movwf	postinc1,c
 39694  0194FC  EE22  F14F         	lfsr	2,_C+80	;volatile
 39695  019500  006F FF7B FFE6     	movff	postinc2,postinc1
 39696  019506  006F FF7B FFE6     	movff	postinc2,postinc1
 39697  01950C  006F FF7B FFE6     	movff	postinc2,postinc1
 39698  019512  006F FF7B FFE6     	movff	postinc2,postinc1
 39699  019518  EE22  F147         	lfsr	2,_C+72	;volatile
 39700  01951C  006F FF7B FFE6     	movff	postinc2,postinc1
 39701  019522  006F FF7B FFE6     	movff	postinc2,postinc1
 39702  019528  006F FF7B FFE6     	movff	postinc2,postinc1
 39703  01952E  006F FF7B FFE6     	movff	postinc2,postinc1
 39704  019534  ECC2  F0B1         	call	___flmul	;wreg free
 39705  019538  0060  F0AB  FFE6   	movff	btemp,postinc1
 39706  01953E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39707  019544  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39708  01954A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39709  019550  EC29  F0E9         	call	_lp_filter	;wreg free
 39710  019554  0060  F0A8  F97B   	movff	btemp,_C+124	;volatile
 39711  01955A  0060  F0AC  F97C   	movff	btemp+1,_C+125	;volatile
 39712  019560  0060  F0B0  F97D   	movff	btemp+2,_C+126	;volatile
 39713  019566  0060  F0B4  F97E   	movff	btemp+3,_C+127	;volatile
 39714                           
 39715                           ;mbmc.c: 88:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 39716  01956C  0E01               	movlw	1
 39717  01956E  6EE6               	movwf	postinc1,c
 39718  019570  0E13               	movlw	19
 39719  019572  6EE6               	movwf	postinc1,c
 39720  019574  0E00               	movlw	0
 39721  019576  6EE6               	movwf	postinc1,c
 39722  019578  0E00               	movlw	0
 39723  01957A  6EE6               	movwf	postinc1,c
 39724  01957C  0E60               	movlw	96
 39725  01957E  6EE6               	movwf	postinc1,c
 39726  019580  0EC1               	movlw	193
 39727  019582  6EE6               	movwf	postinc1,c
 39728  019584  EE22  F163         	lfsr	2,_C+100	;volatile
 39729  019588  006F FF7B FFE6     	movff	postinc2,postinc1
 39730  01958E  006F FF7B FFE6     	movff	postinc2,postinc1
 39731  019594  006F FF7B FFE6     	movff	postinc2,postinc1
 39732  01959A  006F FF7B FFE6     	movff	postinc2,postinc1
 39733  0195A0  EE22  F13F         	lfsr	2,_C+64	;volatile
 39734  0195A4  006F FF7B FFE6     	movff	postinc2,postinc1
 39735  0195AA  006F FF7B FFE6     	movff	postinc2,postinc1
 39736  0195B0  006F FF7B FFE6     	movff	postinc2,postinc1
 39737  0195B6  006F FF7B FFE6     	movff	postinc2,postinc1
 39738  0195BC  ECC2  F0B1         	call	___flmul	;wreg free
 39739  0195C0  0060  F0AB  FFE6   	movff	btemp,postinc1
 39740  0195C6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39741  0195CC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39742  0195D2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39743  0195D8  ECD7  F0B5         	call	___fladd	;wreg free
 39744  0195DC  0060  F0AB  FFE6   	movff	btemp,postinc1
 39745  0195E2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39746  0195E8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39747  0195EE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39748  0195F4  EC29  F0E9         	call	_lp_filter	;wreg free
 39749  0195F8  0060  F0A8  F977   	movff	btemp,_C+120	;volatile
 39750  0195FE  0060  F0AC  F978   	movff	btemp+1,_C+121	;volatile
 39751  019604  0060  F0B0  F979   	movff	btemp+2,_C+122	;volatile
 39752  01960A  0060  F0B4  F97A   	movff	btemp+3,_C+123	;volatile
 39753                           
 39754                           ;mbmc.c: 89:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 39755  019610  0E01               	movlw	1
 39756  019612  6EE6               	movwf	postinc1,c
 39757  019614  0E14               	movlw	20
 39758  019616  6EE6               	movwf	postinc1,c
 39759  019618  EE22  F153         	lfsr	2,_C+84	;volatile
 39760  01961C  006F FF7B FFE6     	movff	postinc2,postinc1
 39761  019622  006F FF7B FFE6     	movff	postinc2,postinc1
 39762  019628  006F FF7B FFE6     	movff	postinc2,postinc1
 39763  01962E  006F FF7B FFE6     	movff	postinc2,postinc1
 39764  019634  EE22  F143         	lfsr	2,_C+68	;volatile
 39765  019638  006F FF7B FFE6     	movff	postinc2,postinc1
 39766  01963E  006F FF7B FFE6     	movff	postinc2,postinc1
 39767  019644  006F FF7B FFE6     	movff	postinc2,postinc1
 39768  01964A  006F FF7B FFE6     	movff	postinc2,postinc1
 39769  019650  ECC2  F0B1         	call	___flmul	;wreg free
 39770  019654  0060  F0AB  FFE6   	movff	btemp,postinc1
 39771  01965A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39772  019660  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39773  019666  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39774  01966C  EC29  F0E9         	call	_lp_filter	;wreg free
 39775  019670  0060  F0A8  F97F   	movff	btemp,_C+128	;volatile
 39776  019676  0060  F0AC  F980   	movff	btemp+1,_C+129	;volatile
 39777  01967C  0060  F0B0  F981   	movff	btemp+2,_C+130	;volatile
 39778  019682  0060  F0B4  F982   	movff	btemp+3,_C+131	;volatile
 39779                           
 39780                           ;mbmc.c: 93:   if (C.p_inverter < 0.0)
 39781  019688  EE22  F177         	lfsr	2,_C+120	;volatile
 39782  01968C  0E03               	movlw	3
 39783  01968E  AEDB               	btfss	plusw2,7,c
 39784  019690  D010               	goto	l14338
 39785                           
 39786                           ;mbmc.c: 94:    C.p_inverter = 0.0001;
 39787  019692  0E17               	movlw	23
 39788  019694  006F FFA0  F977    	movff	wreg,_C+120	;volatile
 39789  01969A  0EB7               	movlw	183
 39790  01969C  006F FFA0  F978    	movff	wreg,_C+121	;volatile
 39791  0196A2  0ED1               	movlw	209
 39792  0196A4  006F FFA0  F979    	movff	wreg,_C+122	;volatile
 39793  0196AA  0E38               	movlw	56
 39794  0196AC  006F FFA0  F97A    	movff	wreg,_C+123	;volatile
 39795  0196B2                     l14338:
 39796                           
 39797                           ;mbmc.c: 96:  start_bsoc();
 39798  0196B2  ECE6  F00F         	call	_start_bsoc	;wreg free
 39799                           
 39800                           ; BSR set to: 57
 39801                           ;mbmc.c: 97:  C.update = 1;
 39802  0196B6  0E01               	movlw	1
 39803  0196B8  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 39804                           
 39805                           ; BSR set to: 57
 39806                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 39807  0196BE  0012               	return		;funcret
 39808  0196C0                     __end_of_calc_model_data:
 39809                           	opt callstack 0
 39810                           
 39811 ;; *************** function _stop_bsoc *****************
 39812 ;; Defined at:
 39813 ;;		line 130 in file "bsoc.c"
 39814 ;; Parameters:    Size  Location     Type
 39815 ;;		None
 39816 ;; Auto vars:     Size  Location     Type
 39817 ;;		None
 39818 ;; Return value:  Size  Location     Type
 39819 ;;                  1  [STACK] void 
 39820 ;; Registers used:
 39821 ;;		None
 39822 ;; Tracked objects:
 39823 ;;		On entry : 0/39
 39824 ;;		On exit  : 3F/39
 39825 ;;		Unchanged: 0/0
 39826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39831 ;;Total ram usage:        0 bytes
 39832 ;; Hardware stack levels used:    1
 39833 ;; Hardware stack levels required when called:   15
 39834 ;; This function calls:
 39835 ;;		Nothing
 39836 ;; This function is called by:
 39837 ;;		_calc_model_data
 39838 ;;		_load_hist_data
 39839 ;; This function uses a reentrant model
 39840 ;;
 39841                           
 39842                           	psect	text147
 39843  0022D2                     __ptext147:
 39844                           	opt callstack 0
 39845  0022D2                     _stop_bsoc:
 39846                           	opt callstack 14
 39847                           
 39848                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 39849                           
 39850                           ; BSR set to: 57
 39851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39852                           ;incstack = 0
 39853  0022D2  0139               	movlb	57	; () banked
 39854  0022D4  9D96               	bcf	150,6,b	;volatile
 39855                           
 39856                           ; BSR set to: 57
 39857                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 39858  0022D6  0012               	return		;funcret
 39859  0022D8                     __end_of_stop_bsoc:
 39860                           	opt callstack 0
 39861                           
 39862 ;; *************** function _start_bsoc *****************
 39863 ;; Defined at:
 39864 ;;		line 121 in file "bsoc.c"
 39865 ;; Parameters:    Size  Location     Type
 39866 ;;		None
 39867 ;; Auto vars:     Size  Location     Type
 39868 ;;		None
 39869 ;; Return value:  Size  Location     Type
 39870 ;;                  1  [STACK] void 
 39871 ;; Registers used:
 39872 ;;		wreg, status,2, status,0, btemp+11
 39873 ;; Tracked objects:
 39874 ;;		On entry : 0/39
 39875 ;;		On exit  : 3F/39
 39876 ;;		Unchanged: 0/0
 39877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39882 ;;Total ram usage:        0 bytes
 39883 ;; Hardware stack levels used:    1
 39884 ;; Hardware stack levels required when called:   15
 39885 ;; This function calls:
 39886 ;;		Nothing
 39887 ;; This function is called by:
 39888 ;;		_calc_model_data
 39889 ;;		_load_hist_data
 39890 ;; This function uses a reentrant model
 39891 ;;
 39892                           
 39893                           	psect	text148
 39894  001FCC                     __ptext148:
 39895                           	opt callstack 0
 39896  001FCC                     _start_bsoc:
 39897                           	opt callstack 14
 39898                           
 39899                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 39900                           
 39901                           ; BSR set to: 57
 39902                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39903                           ;incstack = 0
 39904  001FCC  0139               	movlb	57	; () banked
 39905  001FCE  8D96               	bsf	150,6,b	;volatile
 39906                           
 39907                           ; BSR set to: 57
 39908  001FD0  A4BE               	btfss	190,2,c	;volatile
 39909  001FD2  D002               	goto	u12710
 39910  001FD4  0E01               	movlw	1
 39911  001FD6  D001               	goto	u12716
 39912  001FD8                     u12710:
 39913  001FD8  0E00               	movlw	0
 39914  001FDA                     u12716:
 39915  001FDA  0AFF               	xorlw	255
 39916  001FDC  6E35               	movwf	(btemp+11)^0,c
 39917  001FDE  4635               	rlncf	(btemp+11)^0,f,c
 39918  001FE0  4635               	rlncf	(btemp+11)^0,f,c
 39919  001FE2  50BE               	movf	190,w,c	;volatile
 39920  001FE4  1835               	xorwf	(btemp+11)^0,w,c
 39921  001FE6  0BFB               	andlw	-5
 39922  001FE8  1835               	xorwf	(btemp+11)^0,w,c
 39923  001FEA  6EBE               	movwf	190,c	;volatile
 39924                           
 39925                           ; BSR set to: 57
 39926                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 39927  001FEC  0012               	return		;funcret
 39928  001FEE                     __end_of_start_bsoc:
 39929                           	opt callstack 0
 39930                           
 39931 ;; *************** function _lp_filter *****************
 39932 ;; Defined at:
 39933 ;;		line 29 in file "mbmc.c"
 39934 ;; Parameters:    Size  Location     Type
 39935 ;;  new             4  [STACK] const float 
 39936 ;;  bn              1  [STACK] const unsigned char 
 39937 ;;  slow            1  [STACK] const char 
 39938 ;; Auto vars:     Size  Location     Type
 39939 ;;  lp_speed        4  [STACK] float 
 39940 ;; Return value:  Size  Location     Type
 39941 ;;                  4  [STACK] float 
 39942 ;; Registers used:
 39943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 39944 ;; Tracked objects:
 39945 ;;		On entry : 0/2
 39946 ;;		On exit  : 0/0
 39947 ;;		Unchanged: 0/0
 39948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39953 ;;Total ram usage:        0 bytes
 39954 ;; Hardware stack levels used:    1
 39955 ;; Hardware stack levels required when called:   17
 39956 ;; This function calls:
 39957 ;;		___fladd
 39958 ;;		___flmul
 39959 ;;		___flsub
 39960 ;; This function is called by:
 39961 ;;		_main
 39962 ;;		_convert_adc_data
 39963 ;;		_calc_model_data
 39964 ;; This function uses a reentrant model
 39965 ;;
 39966                           
 39967                           	psect	text149
 39968  01D252                     __ptext149:
 39969                           	opt callstack 0
 39970  01D252                     _lp_filter:
 39971                           	opt callstack 0
 39972                           
 39973                           ; BSR set to: 57
 39974                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39975  01D252  52E6               	movf	postinc1,f,c
 39976  01D254  52E6               	movf	postinc1,f,c
 39977  01D256  52E6               	movf	postinc1,f,c
 39978  01D258  52E6               	movf	postinc1,f,c
 39979                           
 39980                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 39981                           ;stkvar	_bn @ sp[(-4)+-5]
 39982                           
 39983                           ;incstack = 0
 39984  01D25A  0EF7               	movlw	-9
 39985  01D25C  006F FF8C  F02A    	movff	plusw1,btemp
 39986  01D262  0E14               	movlw	20
 39987  01D264  642A               	cpfsgt	btemp^0,c
 39988  01D266  D011               	goto	l13396
 39989  01D268                     u12540:
 39990                           
 39991                           ;mbmc.c: 35:   return new;
 39992                           ;stkvar	_new @ sp[(-4)+-4]
 39993  01D268  0EF8               	movlw	-8
 39994  01D26A  006F FF8C  F02A    	movff	plusw1,btemp
 39995  01D270  0EF9               	movlw	-7
 39996  01D272  006F FF8C  F02B    	movff	plusw1,btemp+1
 39997  01D278  0EFA               	movlw	-6
 39998  01D27A  006F FF8C  F02C    	movff	plusw1,btemp+2
 39999  01D280  0EFB               	movlw	-5
 40000  01D282  006F FF8C  F02D    	movff	plusw1,btemp+3
 40001  01D288  D0BD               	goto	l2126
 40002  01D28A                     l13396:
 40003                           
 40004                           ;mbmc.c: 37:  if (slow == (-1)) {
 40005                           ;stkvar	_slow @ sp[(-4)+-6]
 40006  01D28A  0EF6               	movlw	-10
 40007  01D28C  28E3               	incf	plusw1,w,c
 40008  01D28E  A4D8               	btfss	status,2,c
 40009  01D290  D012               	goto	l13404
 40010                           
 40011                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 40012                           ;stkvar	_bn @ sp[(-4)+-5]
 40013  01D292  0EF7               	movlw	-9
 40014  01D294  50E3               	movf	plusw1,w,c
 40015  01D296  0D04               	mullw	4
 40016  01D298  0E00               	movlw	low lp_filter@smooth
 40017  01D29A  24F3               	addwf	243,w,c
 40018  01D29C  6ED9               	movwf	fsr2l,c
 40019  01D29E  0E03               	movlw	high lp_filter@smooth
 40020  01D2A0  20F4               	addwfc	prodh,w,c
 40021  01D2A2  6EDA               	movwf	fsr2h,c
 40022  01D2A4  0E00               	movlw	0
 40023  01D2A6  6EDE               	movwf	postinc2,c
 40024  01D2A8  0E00               	movlw	0
 40025  01D2AA  6EDE               	movwf	postinc2,c
 40026  01D2AC  0E00               	movlw	0
 40027  01D2AE  6EDE               	movwf	postinc2,c
 40028  01D2B0  0E00               	movlw	0
 40029  01D2B2  6EDD               	movwf	postdec2,c
 40030  01D2B4  D7D9               	goto	u12540
 40031  01D2B6                     l13404:
 40032                           
 40033                           ;mbmc.c: 42:  if (slow) {
 40034                           ;stkvar	_slow @ sp[(-4)+-6]
 40035  01D2B6  0EF6               	movlw	-10
 40036  01D2B8  50E3               	movf	plusw1,w,c
 40037  01D2BA  B4D8               	btfsc	status,2,c
 40038  01D2BC  D006               	goto	l13408
 40039                           
 40040                           ;mbmc.c: 43:   lp_speed = 0.033;
 40041  01D2BE  0E02               	movlw	2
 40042  01D2C0  6E32               	movwf	(btemp+8)^0,c
 40043  01D2C2  0E2B               	movlw	43
 40044  01D2C4  6E33               	movwf	(btemp+9)^0,c
 40045  01D2C6  0E07               	movlw	7
 40046  01D2C8  D005               	goto	L45
 40047  01D2CA                     l13408:
 40048                           
 40049                           ;mbmc.c: 45:   lp_speed = 0.066;
 40050  01D2CA  0E02               	movlw	2
 40051  01D2CC  6E32               	movwf	(btemp+8)^0,c
 40052  01D2CE  0E2B               	movlw	43
 40053  01D2D0  6E33               	movwf	(btemp+9)^0,c
 40054  01D2D2  0E87               	movlw	135
 40055  01D2D4                     L45:
 40056  01D2D4  6E34               	movwf	(btemp+10)^0,c
 40057  01D2D6  0E3D               	movlw	61
 40058  01D2D8  6E35               	movwf	(btemp+11)^0,c
 40059                           
 40060                           ;stkvar	_lp_speed @ sp[(-4)+0]
 40061  01D2DA  0EFC               	movlw	-4
 40062  01D2DC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40063  01D2E2  0EFD               	movlw	-3
 40064  01D2E4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40065  01D2EA  0EFE               	movlw	-2
 40066  01D2EC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40067  01D2F2  0EFF               	movlw	-1
 40068  01D2F4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40069                           
 40070                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 40071                           ;stkvar	_bn @ sp[(-4)+-5]
 40072  01D2FA  0EF7               	movlw	-9
 40073  01D2FC  50E3               	movf	plusw1,w,c
 40074  01D2FE  0D04               	mullw	4
 40075  01D300  0E00               	movlw	low lp_filter@smooth
 40076  01D302  24F3               	addwf	243,w,c
 40077  01D304  6ED9               	movwf	fsr2l,c
 40078  01D306  0E03               	movlw	high lp_filter@smooth
 40079  01D308  20F4               	addwfc	prodh,w,c
 40080  01D30A  6EDA               	movwf	fsr2h,c
 40081  01D30C  006F FF7B FFE6     	movff	postinc2,postinc1
 40082  01D312  006F FF7B FFE6     	movff	postinc2,postinc1
 40083  01D318  006F FF7B FFE6     	movff	postinc2,postinc1
 40084  01D31E  006F FF7B FFE6     	movff	postinc2,postinc1
 40085                           
 40086                           ;stkvar	_lp_speed @ sp[(-8)+0]
 40087  01D324  0EF8               	movlw	-8
 40088  01D326  006F FF8F FFE6     	movff	plusw1,postinc1
 40089  01D32C  006F FF8F FFE6     	movff	plusw1,postinc1
 40090  01D332  006F FF8F FFE6     	movff	plusw1,postinc1
 40091  01D338  006F FF8F FFE6     	movff	plusw1,postinc1
 40092                           
 40093                           ;stkvar	_bn @ sp[(-12)+-5]
 40094  01D33E  0EEF               	movlw	-17
 40095  01D340  50E3               	movf	plusw1,w,c
 40096  01D342  0D04               	mullw	4
 40097  01D344  0E00               	movlw	low lp_filter@smooth
 40098  01D346  24F3               	addwf	243,w,c
 40099  01D348  6ED9               	movwf	fsr2l,c
 40100  01D34A  0E03               	movlw	high lp_filter@smooth
 40101  01D34C  20F4               	addwfc	prodh,w,c
 40102  01D34E  6EDA               	movwf	fsr2h,c
 40103  01D350  006F FF7B FFE6     	movff	postinc2,postinc1
 40104  01D356  006F FF7B FFE6     	movff	postinc2,postinc1
 40105  01D35C  006F FF7B FFE6     	movff	postinc2,postinc1
 40106  01D362  006F FF7B FFE6     	movff	postinc2,postinc1
 40107                           
 40108                           ;stkvar	_new @ sp[(-16)+-4]
 40109  01D368  0EEC               	movlw	-20
 40110  01D36A  006F FF8F FFE6     	movff	plusw1,postinc1
 40111  01D370  006F FF8F FFE6     	movff	plusw1,postinc1
 40112  01D376  006F FF8F FFE6     	movff	plusw1,postinc1
 40113  01D37C  006F FF8F FFE6     	movff	plusw1,postinc1
 40114  01D382  EC28  F00B         	call	___flsub	;wreg free
 40115  01D386  0060  F0AB  FFE6   	movff	btemp,postinc1
 40116  01D38C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40117  01D392  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40118  01D398  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40119  01D39E  ECC2  F0B1         	call	___flmul	;wreg free
 40120  01D3A2  0060  F0AB  FFE6   	movff	btemp,postinc1
 40121  01D3A8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40122  01D3AE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40123  01D3B4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40124  01D3BA  ECD7  F0B5         	call	___fladd	;wreg free
 40125                           
 40126                           ;stkvar	_bn @ sp[(-4)+-5]
 40127  01D3BE  0EF7               	movlw	-9
 40128  01D3C0  50E3               	movf	plusw1,w,c
 40129  01D3C2  0D04               	mullw	4
 40130  01D3C4  0E00               	movlw	low lp_filter@smooth
 40131  01D3C6  24F3               	addwf	243,w,c
 40132  01D3C8  6ED9               	movwf	fsr2l,c
 40133  01D3CA  0E03               	movlw	high lp_filter@smooth
 40134  01D3CC  20F4               	addwfc	prodh,w,c
 40135  01D3CE  6EDA               	movwf	fsr2h,c
 40136  01D3D0  0060  F0AB  FFDE   	movff	btemp,postinc2
 40137  01D3D6  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 40138  01D3DC  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 40139  01D3E2  0060  F0B7  FFDD   	movff	btemp+3,postdec2
 40140  01D3E8  52DD               	movf	postdec2,f,c
 40141  01D3EA  52DD               	movf	postdec2,f,c
 40142  01D3EC  006F FF78  F02A    	movff	postinc2,btemp
 40143  01D3F2  006F FF78  F02B    	movff	postinc2,btemp+1
 40144  01D3F8  006F FF78  F02C    	movff	postinc2,btemp+2
 40145  01D3FE  006F FF78  F02D    	movff	postinc2,btemp+3
 40146  01D404                     l2126:
 40147                           
 40148                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 40149  01D404  0EF6               	movlw	246
 40150  01D406  26E1               	addwf	fsr1l,f,c
 40151  01D408  0EFF               	movlw	255
 40152  01D40A  22E2               	addwfc	fsr1h,f,c
 40153  01D40C  0012               	return		;funcret
 40154  01D40E                     __end_of_lp_filter:
 40155                           	opt callstack 0
 40156                           
 40157 ;; *************** function ___flsub *****************
 40158 ;; Defined at:
 40159 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 40160 ;; Parameters:    Size  Location     Type
 40161 ;;  b               4  [STACK] float 
 40162 ;;  a               4  [STACK] float 
 40163 ;; Auto vars:     Size  Location     Type
 40164 ;;		None
 40165 ;; Return value:  Size  Location     Type
 40166 ;;                  4  [STACK] float 
 40167 ;; Registers used:
 40168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 40169 ;; Tracked objects:
 40170 ;;		On entry : 0/0
 40171 ;;		On exit  : 0/0
 40172 ;;		Unchanged: 0/0
 40173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40178 ;;Total ram usage:        0 bytes
 40179 ;; Hardware stack levels used:    1
 40180 ;; Hardware stack levels required when called:   16
 40181 ;; This function calls:
 40182 ;;		___fladd
 40183 ;; This function is called by:
 40184 ;;		_conv_raw_result
 40185 ;;		_lp_filter
 40186 ;;		_calc_model_data
 40187 ;;		_calc_ror_data
 40188 ;;		_esr_check
 40189 ;;		_efgtoa
 40190 ;; This function uses a reentrant model
 40191 ;;
 40192                           
 40193                           	psect	text150
 40194  001650                     __ptext150:
 40195                           	opt callstack 0
 40196  001650                     ___flsub:
 40197                           	opt callstack 0
 40198                           
 40199                           ;stkvar	_a @ sp[(0)+-8]
 40200                           
 40201                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40202                           ;incstack = 0
 40203 ;; hardware stack exceeded
 40204  001650  0EFB               	movlw	-5
 40205  001652  7EE3               	btg	plusw1,7,c
 40206                           
 40207                           ;stkvar	_a @ sp[(0)+-8]
 40208  001654  0EF8               	movlw	-8
 40209  001656  006F FF8F FFE6     	movff	plusw1,postinc1
 40210  00165C  006F FF8F FFE6     	movff	plusw1,postinc1
 40211  001662  006F FF8F FFE6     	movff	plusw1,postinc1
 40212  001668  006F FF8F FFE6     	movff	plusw1,postinc1
 40213                           
 40214                           ;stkvar	_b @ sp[(-4)+-4]
 40215  00166E  0EF8               	movlw	-8
 40216  001670  006F FF8F FFE6     	movff	plusw1,postinc1
 40217  001676  006F FF8F FFE6     	movff	plusw1,postinc1
 40218  00167C  006F FF8F FFE6     	movff	plusw1,postinc1
 40219  001682  006F FF8F FFE6     	movff	plusw1,postinc1
 40220  001688  ECD7  F0B5         	call	___fladd	;wreg free
 40221                           
 40222                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 40223  00168C  0EF8               	movlw	248
 40224  00168E  26E1               	addwf	fsr1l,f,c
 40225  001690  0EFF               	movlw	255
 40226  001692  22E2               	addwfc	fsr1h,f,c
 40227  001694  0012               	return		;funcret
 40228  001696                     __end_of___flsub:
 40229                           	opt callstack 0
 40230                           
 40231 ;; *************** function ___fladd *****************
 40232 ;; Defined at:
 40233 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 40234 ;; Parameters:    Size  Location     Type
 40235 ;;  b               4  [STACK] float 
 40236 ;;  a               4  [STACK] float 
 40237 ;; Auto vars:     Size  Location     Type
 40238 ;;  grs             1  [STACK] unsigned char 
 40239 ;;  bexp            1  [STACK] unsigned char 
 40240 ;;  aexp            1  [STACK] unsigned char 
 40241 ;;  signs           1  [STACK] unsigned char 
 40242 ;; Return value:  Size  Location     Type
 40243 ;;                  4  [STACK] unsigned char 
 40244 ;; Registers used:
 40245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 40246 ;; Tracked objects:
 40247 ;;		On entry : 0/0
 40248 ;;		On exit  : 0/0
 40249 ;;		Unchanged: 0/0
 40250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40255 ;;Total ram usage:        0 bytes
 40256 ;; Hardware stack levels used:    1
 40257 ;; Hardware stack levels required when called:   15
 40258 ;; This function calls:
 40259 ;;		Nothing
 40260 ;; This function is called by:
 40261 ;;		_main
 40262 ;;		_lp_filter
 40263 ;;		_calc_model_data
 40264 ;;		_efgtoa
 40265 ;;		___asfladd
 40266 ;;		___flsub
 40267 ;; This function uses a reentrant model
 40268 ;;
 40269                           
 40270                           	psect	text151
 40271  016BAE                     __ptext151:
 40272                           	opt callstack 0
 40273  016BAE                     ___fladd:
 40274                           	opt callstack 0
 40275                           
 40276                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40277  016BAE  52E6               	movf	postinc1,f,c
 40278  016BB0  52E6               	movf	postinc1,f,c
 40279  016BB2  52E6               	movf	postinc1,f,c
 40280  016BB4  52E6               	movf	postinc1,f,c
 40281                           
 40282                           ;stkvar	_b @ sp[(-4)+-4]
 40283                           
 40284                           ;incstack = 0
 40285 ;; hardware stack exceeded
 40286  016BB6  0EFB               	movlw	251
 40287  016BB8  24E1               	addwf	fsr1l,w,c
 40288  016BBA  6ED9               	movwf	fsr2l,c
 40289  016BBC  0EFF               	movlw	255
 40290  016BBE  20E2               	addwfc	fsr1h,w,c
 40291  016BC0  6EDA               	movwf	fsr2h,c
 40292  016BC2  50DF               	movf	indf2,w,c
 40293  016BC4  6E35               	movwf	(btemp+11)^0,c
 40294  016BC6  0E80               	movlw	128
 40295  016BC8  1635               	andwf	(btemp+11)^0,f,c
 40296                           
 40297                           ;stkvar	_signs @ sp[(-4)+3]
 40298  016BCA  0EFF               	movlw	-1
 40299  016BCC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40300                           
 40301                           ;stkvar	_b @ sp[(-4)+-4]
 40302  016BD2  0EFB               	movlw	251
 40303  016BD4  24E1               	addwf	fsr1l,w,c
 40304  016BD6  6ED9               	movwf	fsr2l,c
 40305  016BD8  0EFF               	movlw	255
 40306  016BDA  20E2               	addwfc	fsr1h,w,c
 40307  016BDC  6EDA               	movwf	fsr2h,c
 40308  016BDE  50DF               	movf	indf2,w,c
 40309  016BE0  6E35               	movwf	(btemp+11)^0,c
 40310  016BE2  90D8               	bcf	status,0,c
 40311  016BE4  3435               	rlcf	(btemp+11)^0,w,c
 40312  016BE6  6E34               	movwf	(btemp+10)^0,c
 40313                           
 40314                           ;stkvar	_bexp @ sp[(-4)+1]
 40315  016BE8  0EFD               	movlw	-3
 40316  016BEA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40317                           
 40318                           ;stkvar	_b @ sp[(-4)+-4]
 40319  016BF0  0EFA               	movlw	250
 40320  016BF2  24E1               	addwf	fsr1l,w,c
 40321  016BF4  6ED9               	movwf	fsr2l,c
 40322  016BF6  0EFF               	movlw	255
 40323  016BF8  20E2               	addwfc	fsr1h,w,c
 40324  016BFA  6EDA               	movwf	fsr2h,c
 40325  016BFC  AEDF               	btfss	indf2,7,c
 40326  016BFE  D002               	goto	l9724
 40327                           
 40328                           ;stkvar	_bexp @ sp[(-4)+1]
 40329  016C00  0EFD               	movlw	-3
 40330  016C02  80E3               	bsf	plusw1,0,c
 40331  016C04                     l9724:
 40332                           
 40333                           ;stkvar	_bexp @ sp[(-4)+1]
 40334  016C04  0EFD               	movlw	-3
 40335  016C06  50E3               	movf	plusw1,w,c
 40336  016C08  B4D8               	btfsc	status,2,c
 40337  016C0A  D027               	goto	l9734
 40338                           
 40339                           ;stkvar	_bexp @ sp[(-4)+1]
 40340  016C0C  0EFD               	movlw	-3
 40341  016C0E  28E3               	incf	plusw1,w,c
 40342  016C10  A4D8               	btfss	status,2,c
 40343  016C12  D018               	goto	l9730
 40344  016C14  0E00               	movlw	0
 40345  016C16  6E32               	movwf	(btemp+8)^0,c
 40346  016C18  0E00               	movlw	0
 40347  016C1A  6E33               	movwf	(btemp+9)^0,c
 40348  016C1C  0E00               	movlw	0
 40349  016C1E  6E34               	movwf	(btemp+10)^0,c
 40350  016C20  0E00               	movlw	0
 40351  016C22  6E35               	movwf	(btemp+11)^0,c
 40352                           
 40353                           ;stkvar	_b @ sp[(-4)+-4]
 40354  016C24  0EF8               	movlw	-8
 40355  016C26  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40356  016C2C  0EF9               	movlw	-7
 40357  016C2E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40358  016C34  0EFA               	movlw	-6
 40359  016C36  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40360  016C3C  0EFB               	movlw	-5
 40361  016C3E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40362  016C44                     l9730:
 40363                           
 40364                           ;stkvar	_b @ sp[(-4)+-4]
 40365  016C44  0EFA               	movlw	-6
 40366  016C46  8EE3               	bsf	plusw1,7,c
 40367                           
 40368                           ;stkvar	_b @ sp[(-4)+-4]
 40369  016C48  0EFB               	movlw	251
 40370  016C4A  24E1               	addwf	fsr1l,w,c
 40371  016C4C  6ED9               	movwf	fsr2l,c
 40372  016C4E  0EFF               	movlw	255
 40373  016C50  20E2               	addwfc	fsr1h,w,c
 40374  016C52  6EDA               	movwf	fsr2h,c
 40375  016C54  0E00               	movlw	0
 40376  016C56  6EDF               	movwf	indf2,c
 40377  016C58  D018               	goto	l9736
 40378  016C5A                     l9734:
 40379  016C5A  0E00               	movlw	0
 40380  016C5C  6E32               	movwf	(btemp+8)^0,c
 40381  016C5E  0E00               	movlw	0
 40382  016C60  6E33               	movwf	(btemp+9)^0,c
 40383  016C62  0E00               	movlw	0
 40384  016C64  6E34               	movwf	(btemp+10)^0,c
 40385  016C66  0E00               	movlw	0
 40386  016C68  6E35               	movwf	(btemp+11)^0,c
 40387                           
 40388                           ;stkvar	_b @ sp[(-4)+-4]
 40389  016C6A  0EF8               	movlw	-8
 40390  016C6C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40391  016C72  0EF9               	movlw	-7
 40392  016C74  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40393  016C7A  0EFA               	movlw	-6
 40394  016C7C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40395  016C82  0EFB               	movlw	-5
 40396  016C84  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40397  016C8A                     l9736:
 40398                           
 40399                           ;stkvar	_a @ sp[(-4)+-8]
 40400  016C8A  0EF7               	movlw	247
 40401  016C8C  24E1               	addwf	fsr1l,w,c
 40402  016C8E  6ED9               	movwf	fsr2l,c
 40403  016C90  0EFF               	movlw	255
 40404  016C92  20E2               	addwfc	fsr1h,w,c
 40405  016C94  6EDA               	movwf	fsr2h,c
 40406  016C96  50DF               	movf	indf2,w,c
 40407  016C98  6E35               	movwf	(btemp+11)^0,c
 40408  016C9A  0E80               	movlw	128
 40409  016C9C  1635               	andwf	(btemp+11)^0,f,c
 40410                           
 40411                           ;stkvar	_aexp @ sp[(-4)+2]
 40412  016C9E  0EFE               	movlw	-2
 40413  016CA0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40414                           
 40415                           ;stkvar	_signs @ sp[(-4)+3]
 40416                           ;stkvar	_aexp @ sp[(-4)+2]
 40417  016CA6  50E1               	movf	fsr1l,w,c
 40418  016CA8  0FFE               	addlw	-2
 40419  016CAA  6ED9               	movwf	fsr2l,c
 40420  016CAC  50E2               	movf	fsr1h,w,c
 40421  016CAE  6EDA               	movwf	fsr2h,c
 40422  016CB0  0EFF               	movlw	255
 40423  016CB2  22DA               	addwfc	fsr2h,f,c
 40424  016CB4  0EFF               	movlw	-1
 40425  016CB6  50E3               	movf	plusw1,w,c
 40426  016CB8  18DE               	xorwf	postinc2,w,c
 40427  016CBA  B4D8               	btfsc	status,2,c
 40428  016CBC  D002               	goto	l9742
 40429                           
 40430                           ;stkvar	_signs @ sp[(-4)+3]
 40431  016CBE  0EFF               	movlw	-1
 40432  016CC0  8CE3               	bsf	plusw1,6,c
 40433  016CC2                     l9742:
 40434                           
 40435                           ;stkvar	_a @ sp[(-4)+-8]
 40436  016CC2  0EF7               	movlw	247
 40437  016CC4  24E1               	addwf	fsr1l,w,c
 40438  016CC6  6ED9               	movwf	fsr2l,c
 40439  016CC8  0EFF               	movlw	255
 40440  016CCA  20E2               	addwfc	fsr1h,w,c
 40441  016CCC  6EDA               	movwf	fsr2h,c
 40442  016CCE  50DF               	movf	indf2,w,c
 40443  016CD0  6E35               	movwf	(btemp+11)^0,c
 40444  016CD2  90D8               	bcf	status,0,c
 40445  016CD4  3435               	rlcf	(btemp+11)^0,w,c
 40446  016CD6  6E34               	movwf	(btemp+10)^0,c
 40447                           
 40448                           ;stkvar	_aexp @ sp[(-4)+2]
 40449  016CD8  0EFE               	movlw	-2
 40450  016CDA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40451                           
 40452                           ;stkvar	_a @ sp[(-4)+-8]
 40453  016CE0  0EF6               	movlw	246
 40454  016CE2  24E1               	addwf	fsr1l,w,c
 40455  016CE4  6ED9               	movwf	fsr2l,c
 40456  016CE6  0EFF               	movlw	255
 40457  016CE8  20E2               	addwfc	fsr1h,w,c
 40458  016CEA  6EDA               	movwf	fsr2h,c
 40459  016CEC  AEDF               	btfss	indf2,7,c
 40460  016CEE  D002               	goto	l9748
 40461                           
 40462                           ;stkvar	_aexp @ sp[(-4)+2]
 40463  016CF0  0EFE               	movlw	-2
 40464  016CF2  80E3               	bsf	plusw1,0,c
 40465  016CF4                     l9748:
 40466                           
 40467                           ;stkvar	_aexp @ sp[(-4)+2]
 40468  016CF4  0EFE               	movlw	-2
 40469  016CF6  50E3               	movf	plusw1,w,c
 40470  016CF8  B4D8               	btfsc	status,2,c
 40471  016CFA  D027               	goto	l9758
 40472                           
 40473                           ;stkvar	_aexp @ sp[(-4)+2]
 40474  016CFC  0EFE               	movlw	-2
 40475  016CFE  28E3               	incf	plusw1,w,c
 40476  016D00  A4D8               	btfss	status,2,c
 40477  016D02  D018               	goto	l9754
 40478  016D04  0E00               	movlw	0
 40479  016D06  6E32               	movwf	(btemp+8)^0,c
 40480  016D08  0E00               	movlw	0
 40481  016D0A  6E33               	movwf	(btemp+9)^0,c
 40482  016D0C  0E00               	movlw	0
 40483  016D0E  6E34               	movwf	(btemp+10)^0,c
 40484  016D10  0E00               	movlw	0
 40485  016D12  6E35               	movwf	(btemp+11)^0,c
 40486                           
 40487                           ;stkvar	_a @ sp[(-4)+-8]
 40488  016D14  0EF4               	movlw	-12
 40489  016D16  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40490  016D1C  0EF5               	movlw	-11
 40491  016D1E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40492  016D24  0EF6               	movlw	-10
 40493  016D26  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40494  016D2C  0EF7               	movlw	-9
 40495  016D2E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40496  016D34                     l9754:
 40497                           
 40498                           ;stkvar	_a @ sp[(-4)+-8]
 40499  016D34  0EF6               	movlw	-10
 40500  016D36  8EE3               	bsf	plusw1,7,c
 40501                           
 40502                           ;stkvar	_a @ sp[(-4)+-8]
 40503  016D38  0EF7               	movlw	247
 40504  016D3A  24E1               	addwf	fsr1l,w,c
 40505  016D3C  6ED9               	movwf	fsr2l,c
 40506  016D3E  0EFF               	movlw	255
 40507  016D40  20E2               	addwfc	fsr1h,w,c
 40508  016D42  6EDA               	movwf	fsr2h,c
 40509  016D44  0E00               	movlw	0
 40510  016D46  6EDF               	movwf	indf2,c
 40511  016D48  D018               	goto	l9760
 40512  016D4A                     l9758:
 40513  016D4A  0E00               	movlw	0
 40514  016D4C  6E32               	movwf	(btemp+8)^0,c
 40515  016D4E  0E00               	movlw	0
 40516  016D50  6E33               	movwf	(btemp+9)^0,c
 40517  016D52  0E00               	movlw	0
 40518  016D54  6E34               	movwf	(btemp+10)^0,c
 40519  016D56  0E00               	movlw	0
 40520  016D58  6E35               	movwf	(btemp+11)^0,c
 40521                           
 40522                           ;stkvar	_a @ sp[(-4)+-8]
 40523  016D5A  0EF4               	movlw	-12
 40524  016D5C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40525  016D62  0EF5               	movlw	-11
 40526  016D64  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40527  016D6A  0EF6               	movlw	-10
 40528  016D6C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40529  016D72  0EF7               	movlw	-9
 40530  016D74  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40531  016D7A                     l9760:
 40532                           
 40533                           ;stkvar	_bexp @ sp[(-4)+1]
 40534                           ;stkvar	_aexp @ sp[(-4)+2]
 40535  016D7A  50E1               	movf	fsr1l,w,c
 40536  016D7C  0FFE               	addlw	-2
 40537  016D7E  6ED9               	movwf	fsr2l,c
 40538  016D80  50E2               	movf	fsr1h,w,c
 40539  016D82  6EDA               	movwf	fsr2h,c
 40540  016D84  0EFF               	movlw	255
 40541  016D86  22DA               	addwfc	fsr2h,f,c
 40542  016D88  0EFD               	movlw	-3
 40543  016D8A  50E3               	movf	plusw1,w,c
 40544  016D8C  5CDE               	subwf	postinc2,w,c
 40545  016D8E  B0D8               	btfsc	status,0,c
 40546  016D90  D0A4               	goto	l9796
 40547                           
 40548                           ;stkvar	_signs @ sp[(-4)+3]
 40549  016D92  0EFF               	movlw	-1
 40550  016D94  ACE3               	btfss	plusw1,6,c
 40551  016D96  D002               	goto	l9766
 40552                           
 40553                           ;stkvar	_signs @ sp[(-4)+3]
 40554  016D98  0EFF               	movlw	-1
 40555  016D9A  7EE3               	btg	plusw1,7,c
 40556  016D9C                     l9766:
 40557                           
 40558                           ;stkvar	_bexp @ sp[(-4)+1]
 40559                           ;stkvar	_grs @ sp[(-4)+0]
 40560  016D9C  0EFD               	movlw	-3
 40561  016D9E  006F FF8C  F02A    	movff	plusw1,btemp
 40562  016DA4  0EFC               	movlw	-4
 40563  016DA6  0060  F0AB  FFE3   	movff	btemp,plusw1
 40564                           
 40565                           ;stkvar	_aexp @ sp[(-4)+2]
 40566                           ;stkvar	_bexp @ sp[(-4)+1]
 40567  016DAC  0EFE               	movlw	-2
 40568  016DAE  006F FF8C  F02A    	movff	plusw1,btemp
 40569  016DB4  0EFD               	movlw	-3
 40570  016DB6  0060  F0AB  FFE3   	movff	btemp,plusw1
 40571                           
 40572                           ;stkvar	_grs @ sp[(-4)+0]
 40573                           ;stkvar	_aexp @ sp[(-4)+2]
 40574  016DBC  0EFC               	movlw	-4
 40575  016DBE  006F FF8C  F02A    	movff	plusw1,btemp
 40576  016DC4  0EFE               	movlw	-2
 40577  016DC6  0060  F0AB  FFE3   	movff	btemp,plusw1
 40578                           
 40579                           ;stkvar	_b @ sp[(-4)+-4]
 40580                           ;stkvar	_grs @ sp[(-4)+0]
 40581  016DCC  0EF8               	movlw	-8
 40582  016DCE  006F FF8C  F02A    	movff	plusw1,btemp
 40583  016DD4  0EFC               	movlw	-4
 40584  016DD6  0060  F0AB  FFE3   	movff	btemp,plusw1
 40585                           
 40586                           ;stkvar	_a @ sp[(-4)+-8]
 40587                           ;stkvar	_b @ sp[(-4)+-4]
 40588  016DDC  0EF4               	movlw	-12
 40589  016DDE  006F FF8C  F02A    	movff	plusw1,btemp
 40590  016DE4  0EF8               	movlw	-8
 40591  016DE6  0060  F0AB  FFE3   	movff	btemp,plusw1
 40592                           
 40593                           ;stkvar	_grs @ sp[(-4)+0]
 40594                           ;stkvar	_a @ sp[(-4)+-8]
 40595  016DEC  0EFC               	movlw	-4
 40596  016DEE  006F FF8C  F02A    	movff	plusw1,btemp
 40597  016DF4  0EF4               	movlw	-12
 40598  016DF6  0060  F0AB  FFE3   	movff	btemp,plusw1
 40599                           
 40600                           ;stkvar	_b @ sp[(-4)+-4]
 40601  016DFC  0EF9               	movlw	249
 40602  016DFE  24E1               	addwf	fsr1l,w,c
 40603  016E00  6ED9               	movwf	fsr2l,c
 40604  016E02  0EFF               	movlw	255
 40605  016E04  20E2               	addwfc	fsr1h,w,c
 40606  016E06  6EDA               	movwf	fsr2h,c
 40607  016E08  50DF               	movf	indf2,w,c
 40608  016E0A  6E35               	movwf	(btemp+11)^0,c
 40609                           
 40610                           ;stkvar	_grs @ sp[(-4)+0]
 40611  016E0C  0EFC               	movlw	-4
 40612  016E0E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40613                           
 40614                           ;stkvar	_a @ sp[(-4)+-8]
 40615  016E14  0EF5               	movlw	245
 40616  016E16  24E1               	addwf	fsr1l,w,c
 40617  016E18  6ED9               	movwf	fsr2l,c
 40618  016E1A  0EFF               	movlw	255
 40619  016E1C  20E2               	addwfc	fsr1h,w,c
 40620  016E1E  6EDA               	movwf	fsr2h,c
 40621                           
 40622                           ;stkvar	_b @ sp[(-4)+-4]
 40623  016E20  0EF9               	movlw	249
 40624  016E22  24E1               	addwf	fsr1l,w,c
 40625  016E24  6EE9               	movwf	fsr0l,c
 40626  016E26  0EFF               	movlw	255
 40627  016E28  20E2               	addwfc	fsr1h,w,c
 40628  016E2A  6EEA               	movwf	fsr0h,c
 40629  016E2C  006F FF7F FFEF     	movff	indf2,indf0
 40630                           
 40631                           ;stkvar	_grs @ sp[(-4)+0]
 40632                           ;stkvar	_a @ sp[(-4)+-8]
 40633  016E32  0EF5               	movlw	245
 40634  016E34  24E1               	addwf	fsr1l,w,c
 40635  016E36  6ED9               	movwf	fsr2l,c
 40636  016E38  0EFF               	movlw	255
 40637  016E3A  20E2               	addwfc	fsr1h,w,c
 40638  016E3C  6EDA               	movwf	fsr2h,c
 40639  016E3E  0EFC               	movlw	-4
 40640  016E40  006F FF8F FFDF     	movff	plusw1,indf2
 40641                           
 40642                           ;stkvar	_b @ sp[(-4)+-4]
 40643  016E46  0EFA               	movlw	250
 40644  016E48  24E1               	addwf	fsr1l,w,c
 40645  016E4A  6ED9               	movwf	fsr2l,c
 40646  016E4C  0EFF               	movlw	255
 40647  016E4E  20E2               	addwfc	fsr1h,w,c
 40648  016E50  6EDA               	movwf	fsr2h,c
 40649  016E52  50DF               	movf	indf2,w,c
 40650  016E54  6E35               	movwf	(btemp+11)^0,c
 40651                           
 40652                           ;stkvar	_grs @ sp[(-4)+0]
 40653  016E56  0EFC               	movlw	-4
 40654  016E58  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40655                           
 40656                           ;stkvar	_a @ sp[(-4)+-8]
 40657  016E5E  0EF6               	movlw	246
 40658  016E60  24E1               	addwf	fsr1l,w,c
 40659  016E62  6ED9               	movwf	fsr2l,c
 40660  016E64  0EFF               	movlw	255
 40661  016E66  20E2               	addwfc	fsr1h,w,c
 40662  016E68  6EDA               	movwf	fsr2h,c
 40663                           
 40664                           ;stkvar	_b @ sp[(-4)+-4]
 40665  016E6A  0EFA               	movlw	250
 40666  016E6C  24E1               	addwf	fsr1l,w,c
 40667  016E6E  6EE9               	movwf	fsr0l,c
 40668  016E70  0EFF               	movlw	255
 40669  016E72  20E2               	addwfc	fsr1h,w,c
 40670  016E74  6EEA               	movwf	fsr0h,c
 40671  016E76  006F FF7F FFEF     	movff	indf2,indf0
 40672                           
 40673                           ;stkvar	_grs @ sp[(-4)+0]
 40674                           ;stkvar	_a @ sp[(-4)+-8]
 40675  016E7C  0EF6               	movlw	246
 40676  016E7E  24E1               	addwf	fsr1l,w,c
 40677  016E80  6ED9               	movwf	fsr2l,c
 40678  016E82  0EFF               	movlw	255
 40679  016E84  20E2               	addwfc	fsr1h,w,c
 40680  016E86  6EDA               	movwf	fsr2h,c
 40681  016E88  0EFC               	movlw	-4
 40682  016E8A  006F FF8F FFDF     	movff	plusw1,indf2
 40683                           
 40684                           ;stkvar	_b @ sp[(-4)+-4]
 40685  016E90  0EFB               	movlw	251
 40686  016E92  24E1               	addwf	fsr1l,w,c
 40687  016E94  6ED9               	movwf	fsr2l,c
 40688  016E96  0EFF               	movlw	255
 40689  016E98  20E2               	addwfc	fsr1h,w,c
 40690  016E9A  6EDA               	movwf	fsr2h,c
 40691  016E9C  50DF               	movf	indf2,w,c
 40692  016E9E  6E35               	movwf	(btemp+11)^0,c
 40693                           
 40694                           ;stkvar	_grs @ sp[(-4)+0]
 40695  016EA0  0EFC               	movlw	-4
 40696  016EA2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40697                           
 40698                           ;stkvar	_a @ sp[(-4)+-8]
 40699  016EA8  0EF7               	movlw	247
 40700  016EAA  24E1               	addwf	fsr1l,w,c
 40701  016EAC  6ED9               	movwf	fsr2l,c
 40702  016EAE  0EFF               	movlw	255
 40703  016EB0  20E2               	addwfc	fsr1h,w,c
 40704  016EB2  6EDA               	movwf	fsr2h,c
 40705                           
 40706                           ;stkvar	_b @ sp[(-4)+-4]
 40707  016EB4  0EFB               	movlw	251
 40708  016EB6  24E1               	addwf	fsr1l,w,c
 40709  016EB8  6EE9               	movwf	fsr0l,c
 40710  016EBA  0EFF               	movlw	255
 40711  016EBC  20E2               	addwfc	fsr1h,w,c
 40712  016EBE  6EEA               	movwf	fsr0h,c
 40713  016EC0  006F FF7F FFEF     	movff	indf2,indf0
 40714                           
 40715                           ;stkvar	_grs @ sp[(-4)+0]
 40716                           ;stkvar	_a @ sp[(-4)+-8]
 40717  016EC6  0EF7               	movlw	247
 40718  016EC8  24E1               	addwf	fsr1l,w,c
 40719  016ECA  6ED9               	movwf	fsr2l,c
 40720  016ECC  0EFF               	movlw	255
 40721  016ECE  20E2               	addwfc	fsr1h,w,c
 40722  016ED0  6EDA               	movwf	fsr2h,c
 40723  016ED2  0EFC               	movlw	-4
 40724  016ED4  006F FF8F FFDF     	movff	plusw1,indf2
 40725  016EDA                     l9796:
 40726                           
 40727                           ;stkvar	_grs @ sp[(-4)+0]
 40728  016EDA  0EFC               	movlw	-4
 40729  016EDC  6AE3               	clrf	plusw1,c
 40730                           
 40731                           ;stkvar	_aexp @ sp[(-4)+2]
 40732  016EDE  0EFE               	movlw	-2
 40733  016EE0  50E3               	movf	plusw1,w,c
 40734  016EE2  6E34               	movwf	(btemp+10)^0,c
 40735  016EE4  6A35               	clrf	(btemp+11)^0,c
 40736                           
 40737                           ;stkvar	_bexp @ sp[(-4)+1]
 40738  016EE6  0EFD               	movlw	-3
 40739  016EE8  50E3               	movf	plusw1,w,c
 40740  016EEA  5E34               	subwf	(btemp+10)^0,f,c
 40741  016EEC  0E00               	movlw	0
 40742  016EEE  5A35               	subwfb	(btemp+11)^0,f,c
 40743  016EF0  BE35               	btfsc	(btemp+11)^0,7,c
 40744  016EF2  D062               	goto	l9820
 40745  016EF4  5035               	movf	(btemp+11)^0,w,c
 40746  016EF6  E104               	bnz	u7240
 40747  016EF8  0E1A               	movlw	26
 40748  016EFA  5C34               	subwf	(btemp+10)^0,w,c
 40749  016EFC  A0D8               	btfss	status,0,c
 40750  016EFE  D05C               	goto	l9820
 40751  016F00                     u7240:
 40752                           
 40753                           ;stkvar	_b @ sp[(-4)+-4]
 40754  016F00  0EF8               	movlw	-8
 40755  016F02  50E3               	movf	plusw1,w,c
 40756  016F04  E10A               	bnz	u7251
 40757  016F06  0EF9               	movlw	-7
 40758  016F08  50E3               	movf	plusw1,w,c
 40759  016F0A  E107               	bnz	u7251
 40760  016F0C  0EFA               	movlw	-6
 40761  016F0E  50E3               	movf	plusw1,w,c
 40762  016F10  E104               	bnz	u7251
 40763  016F12  0EFB               	movlw	-5
 40764  016F14  50E3               	movf	plusw1,w,c
 40765  016F16  B4D8               	btfsc	status,2,c
 40766  016F18  D003               	goto	u7250
 40767  016F1A                     u7251:
 40768  016F1A  6A35               	clrf	(btemp+11)^0,c
 40769  016F1C  2A35               	incf	(btemp+11)^0,f,c
 40770  016F1E  D001               	goto	u7268
 40771  016F20                     u7250:
 40772  016F20  6A35               	clrf	(btemp+11)^0,c
 40773  016F22                     u7268:
 40774                           
 40775                           ;stkvar	_grs @ sp[(-4)+0]
 40776  016F22  0EFC               	movlw	-4
 40777  016F24  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40778                           
 40779                           ;stkvar	_b @ sp[(-4)+-4]
 40780  016F2A  0EF8               	movlw	-8
 40781  016F2C  6AE3               	clrf	plusw1,c
 40782  016F2E  0EF9               	movlw	-7
 40783  016F30  6AE3               	clrf	plusw1,c
 40784  016F32  0EFA               	movlw	-6
 40785  016F34  6AE3               	clrf	plusw1,c
 40786  016F36  0EFB               	movlw	-5
 40787  016F38  6AE3               	clrf	plusw1,c
 40788                           
 40789                           ;stkvar	_aexp @ sp[(-4)+2]
 40790                           ;stkvar	_bexp @ sp[(-4)+1]
 40791  016F3A  0EFE               	movlw	-2
 40792  016F3C  006F FF8C  F02A    	movff	plusw1,btemp
 40793  016F42  0EFD               	movlw	-3
 40794  016F44  0060  F0AB  FFE3   	movff	btemp,plusw1
 40795  016F4A  D042               	goto	u7300
 40796  016F4C                     l9806:
 40797                           
 40798                           ;stkvar	_grs @ sp[(-4)+0]
 40799  016F4C  0EFC               	movlw	-4
 40800  016F4E  A0E3               	btfss	plusw1,0,c
 40801  016F50  D00D               	goto	l9810
 40802                           
 40803                           ;stkvar	_grs @ sp[(-4)+0]
 40804  016F52  0EFC               	movlw	-4
 40805  016F54  006F FF8C  F035    	movff	plusw1,btemp+11
 40806  016F5A  90D8               	bcf	status,0,c
 40807  016F5C  3235               	rrcf	(btemp+11)^0,f,c
 40808  016F5E  0E01               	movlw	1
 40809  016F60  1235               	iorwf	(btemp+11)^0,f,c
 40810                           
 40811                           ;stkvar	_grs @ sp[(-4)+0]
 40812  016F62  0EFC               	movlw	-4
 40813  016F64  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40814  016F6A  D009               	goto	l9812
 40815  016F6C                     l9810:
 40816                           
 40817                           ;stkvar	_grs @ sp[(-4)+0]
 40818  016F6C  50E1               	movf	fsr1l,w,c
 40819  016F6E  0FFC               	addlw	-4
 40820  016F70  6ED9               	movwf	fsr2l,c
 40821  016F72  50E2               	movf	fsr1h,w,c
 40822  016F74  6EDA               	movwf	fsr2h,c
 40823  016F76  0EFF               	movlw	255
 40824  016F78  22DA               	addwfc	fsr2h,f,c
 40825  016F7A  90D8               	bcf	status,0,c
 40826  016F7C  32DF               	rrcf	indf2,f,c
 40827  016F7E                     l9812:
 40828                           
 40829                           ;stkvar	_b @ sp[(-4)+-4]
 40830  016F7E  0EF8               	movlw	-8
 40831  016F80  A0E3               	btfss	plusw1,0,c
 40832  016F82  D002               	goto	l9816
 40833                           
 40834                           ;stkvar	_grs @ sp[(-4)+0]
 40835  016F84  0EFC               	movlw	-4
 40836  016F86  8EE3               	bsf	plusw1,7,c
 40837  016F88                     l9816:
 40838  016F88  0E01               	movlw	1
 40839  016F8A  6E35               	movwf	(btemp+11)^0,c
 40840                           
 40841                           ;stkvar	_b @ sp[(-4)+-4]
 40842  016F8C  50E1               	movf	fsr1l,w,c
 40843  016F8E  0FF8               	addlw	-8
 40844  016F90  6ED9               	movwf	fsr2l,c
 40845  016F92  50E2               	movf	fsr1h,w,c
 40846  016F94  6EDA               	movwf	fsr2h,c
 40847  016F96  0EFF               	movlw	255
 40848  016F98  22DA               	addwfc	fsr2h,f,c
 40849  016F9A  2835               	incf	(btemp+11)^0,w,c
 40850  016F9C  52DE               	movf	postinc2,f,c
 40851  016F9E  D008               	goto	u7290
 40852  016FA0                     u7295:
 40853  016FA0  52DE               	movf	postinc2,f,c
 40854  016FA2  90D8               	bcf	status,0,c
 40855  016FA4  BEDC               	btfsc	preinc2,7,c
 40856  016FA6  80D8               	bsf	status,0,c
 40857  016FA8  32DD               	rrcf	postdec2,f,c
 40858  016FAA  32DD               	rrcf	postdec2,f,c
 40859  016FAC  32DD               	rrcf	postdec2,f,c
 40860  016FAE  32DE               	rrcf	postinc2,f,c
 40861  016FB0                     u7290:
 40862  016FB0  2EE8               	decfsz	wreg,f,c
 40863  016FB2  D7F6               	goto	u7295
 40864                           
 40865                           ;stkvar	_bexp @ sp[(-4)+1]
 40866  016FB4  0EFD               	movlw	-3
 40867  016FB6  2AE3               	incf	plusw1,f,c
 40868  016FB8                     l9820:
 40869                           
 40870                           ;stkvar	_aexp @ sp[(-4)+2]
 40871                           ;stkvar	_bexp @ sp[(-4)+1]
 40872  016FB8  50E1               	movf	fsr1l,w,c
 40873  016FBA  0FFD               	addlw	-3
 40874  016FBC  6ED9               	movwf	fsr2l,c
 40875  016FBE  50E2               	movf	fsr1h,w,c
 40876  016FC0  6EDA               	movwf	fsr2h,c
 40877  016FC2  0EFF               	movlw	255
 40878  016FC4  22DA               	addwfc	fsr2h,f,c
 40879  016FC6  0EFE               	movlw	-2
 40880  016FC8  50E3               	movf	plusw1,w,c
 40881  016FCA  5CDE               	subwf	postinc2,w,c
 40882  016FCC  A0D8               	btfss	status,0,c
 40883  016FCE  D7BE               	goto	l9806
 40884  016FD0                     u7300:
 40885                           
 40886                           ;stkvar	_signs @ sp[(-4)+3]
 40887  016FD0  0EFF               	movlw	-1
 40888  016FD2  BCE3               	btfsc	plusw1,6,c
 40889  016FD4  D066               	goto	l9848
 40890                           
 40891                           ;stkvar	_bexp @ sp[(-4)+1]
 40892  016FD6  0EFD               	movlw	-3
 40893  016FD8  50E3               	movf	plusw1,w,c
 40894  016FDA  B4D8               	btfsc	status,2,c
 40895  016FDC  D0F2               	goto	u7400
 40896                           
 40897                           ;stkvar	_a @ sp[(-4)+-8]
 40898                           ;stkvar	_b @ sp[(-4)+-4]
 40899  016FDE  0EF8               	movlw	-8
 40900  016FE0  50E3               	movf	plusw1,w,c
 40901  016FE2  6E2A               	movwf	btemp^0,c
 40902  016FE4  0EF4               	movlw	-12
 40903  016FE6  50E3               	movf	plusw1,w,c
 40904  016FE8  262A               	addwf	btemp^0,f,c
 40905  016FEA  0EF8               	movlw	-8
 40906  016FEC  0060  F0AB  FFE3   	movff	btemp,plusw1
 40907  016FF2  0EF9               	movlw	-7
 40908  016FF4  50E3               	movf	plusw1,w,c
 40909  016FF6  6E2A               	movwf	btemp^0,c
 40910  016FF8  0EF5               	movlw	-11
 40911  016FFA  50E3               	movf	plusw1,w,c
 40912  016FFC  222A               	addwfc	btemp^0,f,c
 40913  016FFE  0EF9               	movlw	-7
 40914  017000  0060  F0AB  FFE3   	movff	btemp,plusw1
 40915  017006  0EFA               	movlw	-6
 40916  017008  50E3               	movf	plusw1,w,c
 40917  01700A  6E2A               	movwf	btemp^0,c
 40918  01700C  0EF6               	movlw	-10
 40919  01700E  50E3               	movf	plusw1,w,c
 40920  017010  222A               	addwfc	btemp^0,f,c
 40921  017012  0EFA               	movlw	-6
 40922  017014  0060  F0AB  FFE3   	movff	btemp,plusw1
 40923  01701A  0EFB               	movlw	-5
 40924  01701C  50E3               	movf	plusw1,w,c
 40925  01701E  6E2A               	movwf	btemp^0,c
 40926  017020  0EF7               	movlw	-9
 40927  017022  50E3               	movf	plusw1,w,c
 40928  017024  222A               	addwfc	btemp^0,f,c
 40929  017026  0EFB               	movlw	-5
 40930  017028  0060  F0AB  FFE3   	movff	btemp,plusw1
 40931                           
 40932                           ;stkvar	_b @ sp[(-4)+-4]
 40933  01702E  0EFB               	movlw	-5
 40934  017030  A0E3               	btfss	plusw1,0,c
 40935  017032  D101               	goto	u7440
 40936                           
 40937                           ;stkvar	_grs @ sp[(-4)+0]
 40938  017034  0EFC               	movlw	-4
 40939  017036  A0E3               	btfss	plusw1,0,c
 40940  017038  D00D               	goto	l9838
 40941                           
 40942                           ;stkvar	_grs @ sp[(-4)+0]
 40943  01703A  0EFC               	movlw	-4
 40944  01703C  006F FF8C  F035    	movff	plusw1,btemp+11
 40945  017042  90D8               	bcf	status,0,c
 40946  017044  3235               	rrcf	(btemp+11)^0,f,c
 40947  017046  0E01               	movlw	1
 40948  017048  1235               	iorwf	(btemp+11)^0,f,c
 40949                           
 40950                           ;stkvar	_grs @ sp[(-4)+0]
 40951  01704A  0EFC               	movlw	-4
 40952  01704C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40953  017052  D009               	goto	l9840
 40954  017054                     l9838:
 40955                           
 40956                           ;stkvar	_grs @ sp[(-4)+0]
 40957  017054  50E1               	movf	fsr1l,w,c
 40958  017056  0FFC               	addlw	-4
 40959  017058  6ED9               	movwf	fsr2l,c
 40960  01705A  50E2               	movf	fsr1h,w,c
 40961  01705C  6EDA               	movwf	fsr2h,c
 40962  01705E  0EFF               	movlw	255
 40963  017060  22DA               	addwfc	fsr2h,f,c
 40964  017062  90D8               	bcf	status,0,c
 40965  017064  32DF               	rrcf	indf2,f,c
 40966  017066                     l9840:
 40967                           
 40968                           ;stkvar	_b @ sp[(-4)+-4]
 40969  017066  0EF8               	movlw	-8
 40970  017068  A0E3               	btfss	plusw1,0,c
 40971  01706A  D002               	goto	l9844
 40972                           
 40973                           ;stkvar	_grs @ sp[(-4)+0]
 40974  01706C  0EFC               	movlw	-4
 40975  01706E  8EE3               	bsf	plusw1,7,c
 40976  017070                     l9844:
 40977  017070  0E01               	movlw	1
 40978  017072  6E35               	movwf	(btemp+11)^0,c
 40979                           
 40980                           ;stkvar	_b @ sp[(-4)+-4]
 40981  017074  50E1               	movf	fsr1l,w,c
 40982  017076  0FF8               	addlw	-8
 40983  017078  6ED9               	movwf	fsr2l,c
 40984  01707A  50E2               	movf	fsr1h,w,c
 40985  01707C  6EDA               	movwf	fsr2h,c
 40986  01707E  0EFF               	movlw	255
 40987  017080  22DA               	addwfc	fsr2h,f,c
 40988  017082  2835               	incf	(btemp+11)^0,w,c
 40989  017084  52DE               	movf	postinc2,f,c
 40990  017086  D008               	goto	u7360
 40991  017088                     u7365:
 40992  017088  52DE               	movf	postinc2,f,c
 40993  01708A  90D8               	bcf	status,0,c
 40994  01708C  BEDC               	btfsc	preinc2,7,c
 40995  01708E  80D8               	bsf	status,0,c
 40996  017090  32DD               	rrcf	postdec2,f,c
 40997  017092  32DD               	rrcf	postdec2,f,c
 40998  017094  32DD               	rrcf	postdec2,f,c
 40999  017096  32DE               	rrcf	postinc2,f,c
 41000  017098                     u7360:
 41001  017098  2EE8               	decfsz	wreg,f,c
 41002  01709A  D7F6               	goto	u7365
 41003                           
 41004                           ;stkvar	_bexp @ sp[(-4)+1]
 41005  01709C  0EFD               	movlw	-3
 41006  01709E  2AE3               	incf	plusw1,f,c
 41007  0170A0  D0CA               	goto	u7440
 41008  0170A2                     l9848:
 41009                           
 41010                           ;stkvar	_a @ sp[(-4)+-8]
 41011                           ;stkvar	_b @ sp[(-4)+-4]
 41012  0170A2  50E1               	movf	fsr1l,w,c
 41013  0170A4  0FF8               	addlw	-8
 41014  0170A6  6ED9               	movwf	fsr2l,c
 41015  0170A8  50E2               	movf	fsr1h,w,c
 41016  0170AA  6EDA               	movwf	fsr2h,c
 41017  0170AC  0EFF               	movlw	255
 41018  0170AE  22DA               	addwfc	fsr2h,f,c
 41019  0170B0  0EF4               	movlw	-12
 41020  0170B2  50E3               	movf	plusw1,w,c
 41021  0170B4  5CDE               	subwf	postinc2,w,c
 41022  0170B6  0EF5               	movlw	-11
 41023  0170B8  50E3               	movf	plusw1,w,c
 41024  0170BA  58DE               	subwfb	postinc2,w,c
 41025  0170BC  0EF6               	movlw	-10
 41026  0170BE  50E3               	movf	plusw1,w,c
 41027  0170C0  58DE               	subwfb	postinc2,w,c
 41028  0170C2  50DE               	movf	postinc2,w,c
 41029  0170C4  0A80               	xorlw	128
 41030  0170C6  6E2A               	movwf	btemp^0,c
 41031  0170C8  0EF7               	movlw	-9
 41032  0170CA  50E3               	movf	plusw1,w,c
 41033  0170CC  0A80               	xorlw	128
 41034  0170CE  582A               	subwfb	btemp^0,w,c
 41035  0170D0  B0D8               	btfsc	status,0,c
 41036  0170D2  D053               	goto	l9860
 41037                           
 41038                           ;stkvar	_b @ sp[(-4)+-4]
 41039                           ;stkvar	_a @ sp[(-4)+-8]
 41040  0170D4  0EF4               	movlw	-12
 41041  0170D6  006F FF8C  F032    	movff	plusw1,btemp+8
 41042  0170DC  0EF5               	movlw	-11
 41043  0170DE  006F FF8C  F033    	movff	plusw1,btemp+9
 41044  0170E4  0EF6               	movlw	-10
 41045  0170E6  006F FF8C  F034    	movff	plusw1,btemp+10
 41046  0170EC  0EF7               	movlw	-9
 41047  0170EE  006F FF8C  F035    	movff	plusw1,btemp+11
 41048  0170F4  0EF8               	movlw	-8
 41049  0170F6  50E3               	movf	plusw1,w,c
 41050  0170F8  5E32               	subwf	(btemp+8)^0,f,c
 41051  0170FA  0EF9               	movlw	-7
 41052  0170FC  50E3               	movf	plusw1,w,c
 41053  0170FE  5A33               	subwfb	(btemp+9)^0,f,c
 41054  017100  0EFA               	movlw	-6
 41055  017102  50E3               	movf	plusw1,w,c
 41056  017104  5A34               	subwfb	(btemp+10)^0,f,c
 41057  017106  0EFB               	movlw	-5
 41058  017108  50E3               	movf	plusw1,w,c
 41059  01710A  5A35               	subwfb	(btemp+11)^0,f,c
 41060  01710C  0EFF               	movlw	255
 41061  01710E  2432               	addwf	(btemp+8)^0,w,c
 41062  017110  6E2E               	movwf	(btemp+4)^0,c
 41063  017112  0EFF               	movlw	255
 41064  017114  2033               	addwfc	(btemp+9)^0,w,c
 41065  017116  6E2F               	movwf	(btemp+5)^0,c
 41066  017118  0EFF               	movlw	255
 41067  01711A  2034               	addwfc	(btemp+10)^0,w,c
 41068  01711C  6E30               	movwf	(btemp+6)^0,c
 41069  01711E  0EFF               	movlw	255
 41070  017120  2035               	addwfc	(btemp+11)^0,w,c
 41071  017122  6E31               	movwf	(btemp+7)^0,c
 41072                           
 41073                           ;stkvar	_b @ sp[(-4)+-4]
 41074  017124  0EF8               	movlw	-8
 41075  017126  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 41076  01712C  0EF9               	movlw	-7
 41077  01712E  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 41078  017134  0EFA               	movlw	-6
 41079  017136  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 41080  01713C  0EFB               	movlw	-5
 41081  01713E  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 41082                           
 41083                           ;stkvar	_signs @ sp[(-4)+3]
 41084  017144  0EFF               	movlw	-1
 41085  017146  7EE3               	btg	plusw1,7,c
 41086                           
 41087                           ;stkvar	_grs @ sp[(-4)+0]
 41088  017148  0EFC               	movlw	-4
 41089  01714A  50E3               	movf	plusw1,w,c
 41090  01714C  0800               	sublw	0
 41091  01714E  6E35               	movwf	(btemp+11)^0,c
 41092                           
 41093                           ;stkvar	_grs @ sp[(-4)+0]
 41094  017150  0EFC               	movlw	-4
 41095  017152  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41096                           
 41097                           ;stkvar	_grs @ sp[(-4)+0]
 41098  017158  0EFC               	movlw	-4
 41099  01715A  50E3               	movf	plusw1,w,c
 41100  01715C  A4D8               	btfss	status,2,c
 41101  01715E  D020               	goto	l9862
 41102                           
 41103                           ;stkvar	_b @ sp[(-4)+-4]
 41104  017160  50E1               	movf	fsr1l,w,c
 41105  017162  0FF8               	addlw	-8
 41106  017164  6ED9               	movwf	fsr2l,c
 41107  017166  50E2               	movf	fsr1h,w,c
 41108  017168  6EDA               	movwf	fsr2h,c
 41109  01716A  0EFF               	movlw	255
 41110  01716C  22DA               	addwfc	fsr2h,f,c
 41111  01716E  2ADE               	incf	postinc2,f,c
 41112  017170  0E00               	movlw	0
 41113  017172  22DE               	addwfc	postinc2,f,c
 41114  017174  22DE               	addwfc	postinc2,f,c
 41115  017176  22DE               	addwfc	postinc2,f,c
 41116  017178  D013               	goto	l9862
 41117  01717A                     l9860:
 41118                           
 41119                           ;stkvar	_a @ sp[(-4)+-8]
 41120                           ;stkvar	_b @ sp[(-4)+-4]
 41121  01717A  50E1               	movf	fsr1l,w,c
 41122  01717C  0FF8               	addlw	-8
 41123  01717E  6ED9               	movwf	fsr2l,c
 41124  017180  50E2               	movf	fsr1h,w,c
 41125  017182  6EDA               	movwf	fsr2h,c
 41126  017184  0EFF               	movlw	255
 41127  017186  22DA               	addwfc	fsr2h,f,c
 41128  017188  0EF4               	movlw	-12
 41129  01718A  50E3               	movf	plusw1,w,c
 41130  01718C  5EDE               	subwf	postinc2,f,c
 41131  01718E  0EF5               	movlw	-11
 41132  017190  50E3               	movf	plusw1,w,c
 41133  017192  5ADE               	subwfb	postinc2,f,c
 41134  017194  0EF6               	movlw	-10
 41135  017196  50E3               	movf	plusw1,w,c
 41136  017198  5ADE               	subwfb	postinc2,f,c
 41137  01719A  0EF7               	movlw	-9
 41138  01719C  50E3               	movf	plusw1,w,c
 41139  01719E  5ADE               	subwfb	postinc2,f,c
 41140  0171A0                     l9862:
 41141                           
 41142                           ;stkvar	_b @ sp[(-4)+-4]
 41143  0171A0  0EF8               	movlw	-8
 41144  0171A2  50E3               	movf	plusw1,w,c
 41145  0171A4  E145               	bnz	l9884
 41146  0171A6  0EF9               	movlw	-7
 41147  0171A8  50E3               	movf	plusw1,w,c
 41148  0171AA  E142               	bnz	l9884
 41149  0171AC  0EFA               	movlw	-6
 41150  0171AE  50E3               	movf	plusw1,w,c
 41151  0171B0  E13F               	bnz	l9884
 41152  0171B2  0EFB               	movlw	-5
 41153  0171B4  50E3               	movf	plusw1,w,c
 41154  0171B6  A4D8               	btfss	status,2,c
 41155  0171B8  D03B               	goto	l9884
 41156                           
 41157                           ;stkvar	_grs @ sp[(-4)+0]
 41158  0171BA  0EFC               	movlw	-4
 41159  0171BC  50E3               	movf	plusw1,w,c
 41160  0171BE  A4D8               	btfss	status,2,c
 41161  0171C0  D037               	goto	l9884
 41162  0171C2                     u7400:
 41163  0171C2  0E00               	movlw	0
 41164  0171C4  6E2A               	movwf	btemp^0,c
 41165  0171C6  0E00               	movlw	0
 41166  0171C8  6E2B               	movwf	(btemp+1)^0,c
 41167  0171CA  0E00               	movlw	0
 41168  0171CC  6E2C               	movwf	(btemp+2)^0,c
 41169  0171CE  0E00               	movlw	0
 41170  0171D0  6E2D               	movwf	(btemp+3)^0,c
 41171  0171D2  D0C6               	goto	l3245
 41172  0171D4                     l9870:
 41173                           
 41174                           ;stkvar	_b @ sp[(-4)+-4]
 41175  0171D4  90D8               	bcf	status,0,c
 41176  0171D6  0EF8               	movlw	-8
 41177  0171D8  36E3               	rlcf	plusw1,f,c
 41178  0171DA  0EF9               	movlw	-7
 41179  0171DC  36E3               	rlcf	plusw1,f,c
 41180  0171DE  0EFA               	movlw	-6
 41181  0171E0  36E3               	rlcf	plusw1,f,c
 41182  0171E2  0EFB               	movlw	-5
 41183  0171E4  36E3               	rlcf	plusw1,f,c
 41184                           
 41185                           ;stkvar	_grs @ sp[(-4)+0]
 41186  0171E6  0EFC               	movlw	-4
 41187  0171E8  AEE3               	btfss	plusw1,7,c
 41188  0171EA  D002               	goto	l3257
 41189                           
 41190                           ;stkvar	_b @ sp[(-4)+-4]
 41191  0171EC  0EF8               	movlw	-8
 41192  0171EE  80E3               	bsf	plusw1,0,c
 41193  0171F0                     l3257:
 41194                           
 41195                           ;stkvar	_grs @ sp[(-4)+0]
 41196  0171F0  0EFC               	movlw	-4
 41197  0171F2  A0E3               	btfss	plusw1,0,c
 41198  0171F4  D00E               	goto	l9878
 41199                           
 41200                           ;stkvar	_grs @ sp[(-4)+0]
 41201  0171F6  0EFC               	movlw	-4
 41202  0171F8  006F FF8C  F035    	movff	plusw1,btemp+11
 41203  0171FE  90D8               	bcf	status,0,c
 41204  017200  3435               	rlcf	(btemp+11)^0,w,c
 41205  017202  6E34               	movwf	(btemp+10)^0,c
 41206  017204  0E01               	movlw	1
 41207  017206  1234               	iorwf	(btemp+10)^0,f,c
 41208                           
 41209                           ;stkvar	_grs @ sp[(-4)+0]
 41210  017208  0EFC               	movlw	-4
 41211  01720A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41212  017210  D009               	goto	l9880
 41213  017212                     l9878:
 41214                           
 41215                           ;stkvar	_grs @ sp[(-4)+0]
 41216  017212  50E1               	movf	fsr1l,w,c
 41217  017214  0FFC               	addlw	-4
 41218  017216  6ED9               	movwf	fsr2l,c
 41219  017218  50E2               	movf	fsr1h,w,c
 41220  01721A  6EDA               	movwf	fsr2h,c
 41221  01721C  0EFF               	movlw	255
 41222  01721E  22DA               	addwfc	fsr2h,f,c
 41223  017220  90D8               	bcf	status,0,c
 41224  017222  36DF               	rlcf	indf2,f,c
 41225  017224                     l9880:
 41226                           
 41227                           ;stkvar	_bexp @ sp[(-4)+1]
 41228  017224  0EFD               	movlw	-3
 41229  017226  50E3               	movf	plusw1,w,c
 41230  017228  B4D8               	btfsc	status,2,c
 41231  01722A  D002               	goto	l9884
 41232                           
 41233                           ;stkvar	_bexp @ sp[(-4)+1]
 41234  01722C  0EFD               	movlw	-3
 41235  01722E  06E3               	decf	plusw1,f,c
 41236  017230                     l9884:
 41237                           
 41238                           ;stkvar	_b @ sp[(-4)+-4]
 41239  017230  0EFA               	movlw	-6
 41240  017232  AEE3               	btfss	plusw1,7,c
 41241  017234  D7CF               	goto	l9870
 41242  017236                     u7440:
 41243                           
 41244                           ;stkvar	_aexp @ sp[(-4)+2]
 41245  017236  0EFE               	movlw	-2
 41246  017238  6AE3               	clrf	plusw1,c
 41247                           
 41248                           ;stkvar	_grs @ sp[(-4)+0]
 41249  01723A  0EFC               	movlw	-4
 41250  01723C  AEE3               	btfss	plusw1,7,c
 41251  01723E  D00F               	goto	l9898
 41252                           
 41253                           ;stkvar	_grs @ sp[(-4)+0]
 41254  017240  0EFC               	movlw	-4
 41255  017242  006F FF8C  F035    	movff	plusw1,btemp+11
 41256  017248  0E7F               	movlw	127
 41257  01724A  1635               	andwf	(btemp+11)^0,f,c
 41258  01724C  B4D8               	btfsc	status,2,c
 41259  01724E  D004               	goto	l9894
 41260  017250                     u7460:
 41261                           
 41262                           ;stkvar	_aexp @ sp[(-4)+2]
 41263  017250  0EFE               	movlw	-2
 41264  017252  6AE3               	clrf	plusw1,c
 41265  017254  2AE3               	incf	plusw1,f,c
 41266  017256  D003               	goto	l9898
 41267  017258                     l9894:
 41268                           
 41269                           ;stkvar	_b @ sp[(-4)+-4]
 41270  017258  0EF8               	movlw	-8
 41271  01725A  B0E3               	btfsc	plusw1,0,c
 41272  01725C  D7F9               	goto	u7460
 41273  01725E                     l9898:
 41274                           
 41275                           ;stkvar	_aexp @ sp[(-4)+2]
 41276  01725E  0EFE               	movlw	-2
 41277  017260  50E3               	movf	plusw1,w,c
 41278  017262  B4D8               	btfsc	status,2,c
 41279  017264  D02B               	goto	l9910
 41280                           
 41281                           ;stkvar	_b @ sp[(-4)+-4]
 41282  017266  50E1               	movf	fsr1l,w,c
 41283  017268  0FF8               	addlw	-8
 41284  01726A  6ED9               	movwf	fsr2l,c
 41285  01726C  50E2               	movf	fsr1h,w,c
 41286  01726E  6EDA               	movwf	fsr2h,c
 41287  017270  0EFF               	movlw	255
 41288  017272  22DA               	addwfc	fsr2h,f,c
 41289  017274  2ADE               	incf	postinc2,f,c
 41290  017276  0E00               	movlw	0
 41291  017278  22DE               	addwfc	postinc2,f,c
 41292  01727A  22DE               	addwfc	postinc2,f,c
 41293  01727C  22DE               	addwfc	postinc2,f,c
 41294                           
 41295                           ;stkvar	_b @ sp[(-4)+-4]
 41296  01727E  0EFB               	movlw	-5
 41297  017280  A0E3               	btfss	plusw1,0,c
 41298  017282  D01C               	goto	l9910
 41299  017284  0E01               	movlw	1
 41300  017286  6E35               	movwf	(btemp+11)^0,c
 41301                           
 41302                           ;stkvar	_b @ sp[(-4)+-4]
 41303  017288  50E1               	movf	fsr1l,w,c
 41304  01728A  0FF8               	addlw	-8
 41305  01728C  6ED9               	movwf	fsr2l,c
 41306  01728E  50E2               	movf	fsr1h,w,c
 41307  017290  6EDA               	movwf	fsr2h,c
 41308  017292  0EFF               	movlw	255
 41309  017294  22DA               	addwfc	fsr2h,f,c
 41310  017296  2835               	incf	(btemp+11)^0,w,c
 41311  017298  52DE               	movf	postinc2,f,c
 41312  01729A  D008               	goto	u7500
 41313  01729C                     u7505:
 41314  01729C  52DE               	movf	postinc2,f,c
 41315  01729E  90D8               	bcf	status,0,c
 41316  0172A0  BEDC               	btfsc	preinc2,7,c
 41317  0172A2  80D8               	bsf	status,0,c
 41318  0172A4  32DD               	rrcf	postdec2,f,c
 41319  0172A6  32DD               	rrcf	postdec2,f,c
 41320  0172A8  32DD               	rrcf	postdec2,f,c
 41321  0172AA  32DE               	rrcf	postinc2,f,c
 41322  0172AC                     u7500:
 41323  0172AC  2EE8               	decfsz	wreg,f,c
 41324  0172AE  D7F6               	goto	u7505
 41325                           
 41326                           ;stkvar	_bexp @ sp[(-4)+1]
 41327  0172B0  0EFD               	movlw	-3
 41328  0172B2  28E3               	incf	plusw1,w,c
 41329  0172B4  B4D8               	btfsc	status,2,c
 41330  0172B6  D002               	goto	l9910
 41331                           
 41332                           ;stkvar	_bexp @ sp[(-4)+1]
 41333  0172B8  0EFD               	movlw	-3
 41334  0172BA  2AE3               	incf	plusw1,f,c
 41335  0172BC                     l9910:
 41336                           
 41337                           ;stkvar	_bexp @ sp[(-4)+1]
 41338  0172BC  0EFD               	movlw	-3
 41339  0172BE  28E3               	incf	plusw1,w,c
 41340  0172C0  B4D8               	btfsc	status,2,c
 41341  0172C2  D004               	goto	u7530
 41342                           
 41343                           ;stkvar	_bexp @ sp[(-4)+1]
 41344  0172C4  0EFD               	movlw	-3
 41345  0172C6  50E3               	movf	plusw1,w,c
 41346  0172C8  A4D8               	btfss	status,2,c
 41347  0172CA  D00E               	goto	l9920
 41348  0172CC                     u7530:
 41349                           
 41350                           ;stkvar	_b @ sp[(-4)+-4]
 41351  0172CC  0EF8               	movlw	-8
 41352  0172CE  6AE3               	clrf	plusw1,c
 41353  0172D0  0EF9               	movlw	-7
 41354  0172D2  6AE3               	clrf	plusw1,c
 41355  0172D4  0EFA               	movlw	-6
 41356  0172D6  6AE3               	clrf	plusw1,c
 41357  0172D8  0EFB               	movlw	-5
 41358  0172DA  6AE3               	clrf	plusw1,c
 41359                           
 41360                           ;stkvar	_bexp @ sp[(-4)+1]
 41361  0172DC  0EFD               	movlw	-3
 41362  0172DE  50E3               	movf	plusw1,w,c
 41363  0172E0  A4D8               	btfss	status,2,c
 41364  0172E2  D002               	goto	l9920
 41365                           
 41366                           ;stkvar	_signs @ sp[(-4)+3]
 41367  0172E4  0EFF               	movlw	-1
 41368  0172E6  6AE3               	clrf	plusw1,c
 41369  0172E8                     l9920:
 41370                           
 41371                           ;stkvar	_bexp @ sp[(-4)+1]
 41372  0172E8  0EFD               	movlw	-3
 41373  0172EA  A0E3               	btfss	plusw1,0,c
 41374  0172EC  D009               	goto	l9924
 41375                           
 41376                           ;stkvar	_b @ sp[(-4)+-4]
 41377  0172EE  0EFA               	movlw	250
 41378  0172F0  24E1               	addwf	fsr1l,w,c
 41379  0172F2  6ED9               	movwf	fsr2l,c
 41380  0172F4  0EFF               	movlw	255
 41381  0172F6  20E2               	addwfc	fsr1h,w,c
 41382  0172F8  6EDA               	movwf	fsr2h,c
 41383  0172FA  0E00               	movlw	0
 41384  0172FC  8EDB               	bsf	plusw2,7,c
 41385  0172FE  D008               	goto	l9926
 41386  017300                     l9924:
 41387                           
 41388                           ;stkvar	_b @ sp[(-4)+-4]
 41389  017300  0EFA               	movlw	250
 41390  017302  24E1               	addwf	fsr1l,w,c
 41391  017304  6ED9               	movwf	fsr2l,c
 41392  017306  0EFF               	movlw	255
 41393  017308  20E2               	addwfc	fsr1h,w,c
 41394  01730A  6EDA               	movwf	fsr2h,c
 41395  01730C  0E7F               	movlw	127
 41396  01730E  16DF               	andwf	indf2,f,c
 41397  017310                     l9926:
 41398                           
 41399                           ;stkvar	_b @ sp[(-4)+-4]
 41400  017310  0EFB               	movlw	251
 41401  017312  24E1               	addwf	fsr1l,w,c
 41402  017314  6ED9               	movwf	fsr2l,c
 41403  017316  0EFF               	movlw	255
 41404  017318  20E2               	addwfc	fsr1h,w,c
 41405  01731A  6EDA               	movwf	fsr2h,c
 41406                           
 41407                           ;stkvar	_bexp @ sp[(-4)+1]
 41408  01731C  0EFD               	movlw	-3
 41409  01731E  006F FF8C  F035    	movff	plusw1,btemp+11
 41410  017324  90D8               	bcf	status,0,c
 41411  017326  3035               	rrcf	(btemp+11)^0,w,c
 41412  017328  6EDF               	movwf	indf2,c
 41413                           
 41414                           ;stkvar	_signs @ sp[(-4)+3]
 41415  01732A  0EFF               	movlw	-1
 41416  01732C  AEE3               	btfss	plusw1,7,c
 41417  01732E  D008               	goto	l9932
 41418                           
 41419                           ;stkvar	_b @ sp[(-4)+-4]
 41420  017330  0EFB               	movlw	251
 41421  017332  24E1               	addwf	fsr1l,w,c
 41422  017334  6ED9               	movwf	fsr2l,c
 41423  017336  0EFF               	movlw	255
 41424  017338  20E2               	addwfc	fsr1h,w,c
 41425  01733A  6EDA               	movwf	fsr2h,c
 41426  01733C  0E00               	movlw	0
 41427  01733E  8EDB               	bsf	plusw2,7,c
 41428  017340                     l9932:
 41429                           
 41430                           ;stkvar	_b @ sp[(-4)+-4]
 41431  017340  0EF8               	movlw	-8
 41432  017342  006F FF8C  F02A    	movff	plusw1,btemp
 41433  017348  0EF9               	movlw	-7
 41434  01734A  006F FF8C  F02B    	movff	plusw1,btemp+1
 41435  017350  0EFA               	movlw	-6
 41436  017352  006F FF8C  F02C    	movff	plusw1,btemp+2
 41437  017358  0EFB               	movlw	-5
 41438  01735A  006F FF8C  F02D    	movff	plusw1,btemp+3
 41439  017360                     l3245:
 41440                           
 41441                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 41442  017360  0EF4               	movlw	244
 41443  017362  26E1               	addwf	fsr1l,f,c
 41444  017364  0EFF               	movlw	255
 41445  017366  22E2               	addwfc	fsr1h,f,c
 41446  017368  0012               	return		;funcret
 41447  01736A                     __end_of___fladd:
 41448                           	opt callstack 0
 41449                           
 41450 ;; *************** function ___flmul *****************
 41451 ;; Defined at:
 41452 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 41453 ;; Parameters:    Size  Location     Type
 41454 ;;  b               4  [STACK] unsigned char 
 41455 ;;  a               4  [STACK] unsigned char 
 41456 ;; Auto vars:     Size  Location     Type
 41457 ;;  prod            4  [STACK] struct .
 41458 ;;  grs             4  [STACK] unsigned long 
 41459 ;;  temp            2  [STACK] struct .
 41460 ;;  bexp            1  [STACK] unsigned char 
 41461 ;;  aexp            1  [STACK] unsigned char 
 41462 ;;  sign            1  [STACK] unsigned char 
 41463 ;; Return value:  Size  Location     Type
 41464 ;;                  4  [STACK] unsigned char 
 41465 ;; Registers used:
 41466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 41467 ;; Tracked objects:
 41468 ;;		On entry : 0/1
 41469 ;;		On exit  : 0/0
 41470 ;;		Unchanged: 0/0
 41471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41476 ;;Total ram usage:        0 bytes
 41477 ;; Hardware stack levels used:    1
 41478 ;; Hardware stack levels required when called:   15
 41479 ;; This function calls:
 41480 ;;		Nothing
 41481 ;; This function is called by:
 41482 ;;		_conv_raw_result
 41483 ;;		_lp_filter
 41484 ;;		_calc_model_data
 41485 ;;		_calc_bsoc
 41486 ;;		_init_bsoc
 41487 ;;		_efgtoa
 41488 ;; This function uses a reentrant model
 41489 ;;
 41490                           
 41491                           	psect	text152
 41492  016384                     __ptext152:
 41493                           	opt callstack 0
 41494  016384                     ___flmul:
 41495                           	opt callstack 0
 41496                           
 41497                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 41498  016384  0E0D               	movlw	13
 41499  016386  26E1               	addwf	fsr1l,f,c
 41500  016388  0E00               	movlw	0
 41501  01638A  22E2               	addwfc	fsr1h,f,c
 41502                           
 41503                           ;stkvar	_b @ sp[(-13)+-4]
 41504                           
 41505                           ;incstack = 0
 41506 ;; hardware stack exceeded
 41507  01638C  0EF2               	movlw	242
 41508  01638E  24E1               	addwf	fsr1l,w,c
 41509  016390  6ED9               	movwf	fsr2l,c
 41510  016392  0EFF               	movlw	255
 41511  016394  20E2               	addwfc	fsr1h,w,c
 41512  016396  6EDA               	movwf	fsr2h,c
 41513  016398  50DF               	movf	indf2,w,c
 41514  01639A  6E35               	movwf	(btemp+11)^0,c
 41515  01639C  0E80               	movlw	128
 41516  01639E  1635               	andwf	(btemp+11)^0,f,c
 41517                           
 41518                           ;stkvar	_sign @ sp[(-13)+12]
 41519  0163A0  0EFF               	movlw	-1
 41520  0163A2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41521                           
 41522                           ;stkvar	_b @ sp[(-13)+-4]
 41523  0163A8  0EF2               	movlw	242
 41524  0163AA  24E1               	addwf	fsr1l,w,c
 41525  0163AC  6ED9               	movwf	fsr2l,c
 41526  0163AE  0EFF               	movlw	255
 41527  0163B0  20E2               	addwfc	fsr1h,w,c
 41528  0163B2  6EDA               	movwf	fsr2h,c
 41529  0163B4  50DF               	movf	indf2,w,c
 41530  0163B6  6E35               	movwf	(btemp+11)^0,c
 41531  0163B8  90D8               	bcf	status,0,c
 41532  0163BA  3435               	rlcf	(btemp+11)^0,w,c
 41533  0163BC  6E34               	movwf	(btemp+10)^0,c
 41534                           
 41535                           ;stkvar	_bexp @ sp[(-13)+10]
 41536  0163BE  0EFD               	movlw	-3
 41537  0163C0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41538                           
 41539                           ;stkvar	_b @ sp[(-13)+-4]
 41540  0163C6  0EF1               	movlw	241
 41541  0163C8  24E1               	addwf	fsr1l,w,c
 41542  0163CA  6ED9               	movwf	fsr2l,c
 41543  0163CC  0EFF               	movlw	255
 41544  0163CE  20E2               	addwfc	fsr1h,w,c
 41545  0163D0  6EDA               	movwf	fsr2h,c
 41546  0163D2  AEDF               	btfss	indf2,7,c
 41547  0163D4  D002               	goto	l10396
 41548                           
 41549                           ;stkvar	_bexp @ sp[(-13)+10]
 41550  0163D6  0EFD               	movlw	-3
 41551  0163D8  80E3               	bsf	plusw1,0,c
 41552  0163DA                     l10396:
 41553                           
 41554                           ;stkvar	_bexp @ sp[(-13)+10]
 41555  0163DA  0EFD               	movlw	-3
 41556  0163DC  50E3               	movf	plusw1,w,c
 41557  0163DE  B4D8               	btfsc	status,2,c
 41558  0163E0  D01F               	goto	l10404
 41559                           
 41560                           ;stkvar	_bexp @ sp[(-13)+10]
 41561  0163E2  0EFD               	movlw	-3
 41562  0163E4  28E3               	incf	plusw1,w,c
 41563  0163E6  A4D8               	btfss	status,2,c
 41564  0163E8  D018               	goto	l10402
 41565  0163EA  0E00               	movlw	0
 41566  0163EC  6E32               	movwf	(btemp+8)^0,c
 41567  0163EE  0E00               	movlw	0
 41568  0163F0  6E33               	movwf	(btemp+9)^0,c
 41569  0163F2  0E00               	movlw	0
 41570  0163F4  6E34               	movwf	(btemp+10)^0,c
 41571  0163F6  0E00               	movlw	0
 41572  0163F8  6E35               	movwf	(btemp+11)^0,c
 41573                           
 41574                           ;stkvar	_b @ sp[(-13)+-4]
 41575  0163FA  0EEF               	movlw	-17
 41576  0163FC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41577  016402  0EF0               	movlw	-16
 41578  016404  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41579  01640A  0EF1               	movlw	-15
 41580  01640C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41581  016412  0EF2               	movlw	-14
 41582  016414  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41583  01641A                     l10402:
 41584                           
 41585                           ;stkvar	_b @ sp[(-13)+-4]
 41586  01641A  0EF1               	movlw	-15
 41587  01641C  8EE3               	bsf	plusw1,7,c
 41588  01641E  D018               	goto	l10406
 41589  016420                     l10404:
 41590  016420  0E00               	movlw	0
 41591  016422  6E32               	movwf	(btemp+8)^0,c
 41592  016424  0E00               	movlw	0
 41593  016426  6E33               	movwf	(btemp+9)^0,c
 41594  016428  0E00               	movlw	0
 41595  01642A  6E34               	movwf	(btemp+10)^0,c
 41596  01642C  0E00               	movlw	0
 41597  01642E  6E35               	movwf	(btemp+11)^0,c
 41598                           
 41599                           ;stkvar	_b @ sp[(-13)+-4]
 41600  016430  0EEF               	movlw	-17
 41601  016432  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41602  016438  0EF0               	movlw	-16
 41603  01643A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41604  016440  0EF1               	movlw	-15
 41605  016442  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41606  016448  0EF2               	movlw	-14
 41607  01644A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41608  016450                     l10406:
 41609                           
 41610                           ;stkvar	_a @ sp[(-13)+-8]
 41611  016450  0EEE               	movlw	238
 41612  016452  24E1               	addwf	fsr1l,w,c
 41613  016454  6ED9               	movwf	fsr2l,c
 41614  016456  0EFF               	movlw	255
 41615  016458  20E2               	addwfc	fsr1h,w,c
 41616  01645A  6EDA               	movwf	fsr2h,c
 41617  01645C  50DF               	movf	indf2,w,c
 41618  01645E  6E35               	movwf	(btemp+11)^0,c
 41619  016460  0E80               	movlw	128
 41620  016462  1635               	andwf	(btemp+11)^0,f,c
 41621                           
 41622                           ;stkvar	_sign @ sp[(-13)+12]
 41623  016464  50E1               	movf	fsr1l,w,c
 41624  016466  0FFF               	addlw	-1
 41625  016468  6ED9               	movwf	fsr2l,c
 41626  01646A  50E2               	movf	fsr1h,w,c
 41627  01646C  6EDA               	movwf	fsr2h,c
 41628  01646E  0EFF               	movlw	255
 41629  016470  22DA               	addwfc	fsr2h,f,c
 41630  016472  5035               	movf	(btemp+11)^0,w,c
 41631  016474  1ADF               	xorwf	indf2,f,c
 41632                           
 41633                           ;stkvar	_a @ sp[(-13)+-8]
 41634  016476  0EEE               	movlw	238
 41635  016478  24E1               	addwf	fsr1l,w,c
 41636  01647A  6ED9               	movwf	fsr2l,c
 41637  01647C  0EFF               	movlw	255
 41638  01647E  20E2               	addwfc	fsr1h,w,c
 41639  016480  6EDA               	movwf	fsr2h,c
 41640  016482  50DF               	movf	indf2,w,c
 41641  016484  6E35               	movwf	(btemp+11)^0,c
 41642  016486  90D8               	bcf	status,0,c
 41643  016488  3435               	rlcf	(btemp+11)^0,w,c
 41644  01648A  6E34               	movwf	(btemp+10)^0,c
 41645                           
 41646                           ;stkvar	_aexp @ sp[(-13)+11]
 41647  01648C  0EFE               	movlw	-2
 41648  01648E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41649                           
 41650                           ;stkvar	_a @ sp[(-13)+-8]
 41651  016494  0EED               	movlw	237
 41652  016496  24E1               	addwf	fsr1l,w,c
 41653  016498  6ED9               	movwf	fsr2l,c
 41654  01649A  0EFF               	movlw	255
 41655  01649C  20E2               	addwfc	fsr1h,w,c
 41656  01649E  6EDA               	movwf	fsr2h,c
 41657  0164A0  AEDF               	btfss	indf2,7,c
 41658  0164A2  D002               	goto	l10414
 41659                           
 41660                           ;stkvar	_aexp @ sp[(-13)+11]
 41661  0164A4  0EFE               	movlw	-2
 41662  0164A6  80E3               	bsf	plusw1,0,c
 41663  0164A8                     l10414:
 41664                           
 41665                           ;stkvar	_aexp @ sp[(-13)+11]
 41666  0164A8  0EFE               	movlw	-2
 41667  0164AA  50E3               	movf	plusw1,w,c
 41668  0164AC  B4D8               	btfsc	status,2,c
 41669  0164AE  D01F               	goto	l10422
 41670                           
 41671                           ;stkvar	_aexp @ sp[(-13)+11]
 41672  0164B0  0EFE               	movlw	-2
 41673  0164B2  28E3               	incf	plusw1,w,c
 41674  0164B4  A4D8               	btfss	status,2,c
 41675  0164B6  D018               	goto	l10420
 41676  0164B8  0E00               	movlw	0
 41677  0164BA  6E32               	movwf	(btemp+8)^0,c
 41678  0164BC  0E00               	movlw	0
 41679  0164BE  6E33               	movwf	(btemp+9)^0,c
 41680  0164C0  0E00               	movlw	0
 41681  0164C2  6E34               	movwf	(btemp+10)^0,c
 41682  0164C4  0E00               	movlw	0
 41683  0164C6  6E35               	movwf	(btemp+11)^0,c
 41684                           
 41685                           ;stkvar	_a @ sp[(-13)+-8]
 41686  0164C8  0EEB               	movlw	-21
 41687  0164CA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41688  0164D0  0EEC               	movlw	-20
 41689  0164D2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41690  0164D8  0EED               	movlw	-19
 41691  0164DA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41692  0164E0  0EEE               	movlw	-18
 41693  0164E2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41694  0164E8                     l10420:
 41695                           
 41696                           ;stkvar	_a @ sp[(-13)+-8]
 41697  0164E8  0EED               	movlw	-19
 41698  0164EA  8EE3               	bsf	plusw1,7,c
 41699  0164EC  D018               	goto	l10424
 41700  0164EE                     l10422:
 41701  0164EE  0E00               	movlw	0
 41702  0164F0  6E32               	movwf	(btemp+8)^0,c
 41703  0164F2  0E00               	movlw	0
 41704  0164F4  6E33               	movwf	(btemp+9)^0,c
 41705  0164F6  0E00               	movlw	0
 41706  0164F8  6E34               	movwf	(btemp+10)^0,c
 41707  0164FA  0E00               	movlw	0
 41708  0164FC  6E35               	movwf	(btemp+11)^0,c
 41709                           
 41710                           ;stkvar	_a @ sp[(-13)+-8]
 41711  0164FE  0EEB               	movlw	-21
 41712  016500  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41713  016506  0EEC               	movlw	-20
 41714  016508  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41715  01650E  0EED               	movlw	-19
 41716  016510  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41717  016516  0EEE               	movlw	-18
 41718  016518  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41719  01651E                     l10424:
 41720                           
 41721                           ;stkvar	_aexp @ sp[(-13)+11]
 41722  01651E  0EFE               	movlw	-2
 41723  016520  50E3               	movf	plusw1,w,c
 41724  016522  B4D8               	btfsc	status,2,c
 41725  016524  D004               	goto	u8590
 41726                           
 41727                           ;stkvar	_bexp @ sp[(-13)+10]
 41728  016526  0EFD               	movlw	-3
 41729  016528  50E3               	movf	plusw1,w,c
 41730  01652A  A4D8               	btfss	status,2,c
 41731  01652C  D009               	goto	l10432
 41732  01652E                     u8590:
 41733  01652E  0E00               	movlw	0
 41734  016530  6E2A               	movwf	btemp^0,c
 41735  016532  0E00               	movlw	0
 41736  016534  6E2B               	movwf	(btemp+1)^0,c
 41737  016536  0E00               	movlw	0
 41738  016538  6E2C               	movwf	(btemp+2)^0,c
 41739  01653A  0E00               	movlw	0
 41740  01653C  6E2D               	movwf	(btemp+3)^0,c
 41741  01653E  D332               	goto	l3326
 41742  016540                     l10432:
 41743                           
 41744                           ;stkvar	_b @ sp[(-13)+-4]
 41745  016540  0EEF               	movlw	-17
 41746  016542  006F FF8C  F035    	movff	plusw1,btemp+11
 41747                           
 41748                           ;stkvar	_a @ sp[(-13)+-8]
 41749  016548  0EED               	movlw	237
 41750  01654A  24E1               	addwf	fsr1l,w,c
 41751  01654C  6ED9               	movwf	fsr2l,c
 41752  01654E  0EFF               	movlw	255
 41753  016550  20E2               	addwfc	fsr1h,w,c
 41754  016552  6EDA               	movwf	fsr2h,c
 41755  016554  50DF               	movf	indf2,w,c
 41756  016556  0235               	mulwf	(btemp+11)^0,c
 41757                           
 41758                           ;stkvar	_temp @ sp[(-13)+8]
 41759  016558  0EFB               	movlw	-5
 41760  01655A  006F FFCF FFE3     	movff	prodl,plusw1
 41761  016560  0EFC               	movlw	-4
 41762  016562  006F FFD3 FFE3     	movff	prodh,plusw1
 41763                           
 41764                           ;stkvar	_temp @ sp[(-13)+8]
 41765  016568  0EFB               	movlw	-5
 41766  01656A  006F FF8C  F035    	movff	plusw1,btemp+11
 41767  016570  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 41768  016576  6A2F               	clrf	(btemp+5)^0,c
 41769  016578  6A30               	clrf	(btemp+6)^0,c
 41770  01657A  6A31               	clrf	(btemp+7)^0,c
 41771                           
 41772                           ;stkvar	_grs @ sp[(-13)+4]
 41773  01657C  0EF7               	movlw	-9
 41774  01657E  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 41775  016584  0EF8               	movlw	-8
 41776  016586  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 41777  01658C  0EF9               	movlw	-7
 41778  01658E  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 41779  016594  0EFA               	movlw	-6
 41780  016596  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 41781                           
 41782                           ;stkvar	_temp @ sp[(-13)+8]
 41783  01659C  0EFC               	movlw	252
 41784  01659E  24E1               	addwf	fsr1l,w,c
 41785  0165A0  6ED9               	movwf	fsr2l,c
 41786  0165A2  0EFF               	movlw	255
 41787  0165A4  20E2               	addwfc	fsr1h,w,c
 41788  0165A6  6EDA               	movwf	fsr2h,c
 41789  0165A8  50DF               	movf	indf2,w,c
 41790  0165AA  6E35               	movwf	(btemp+11)^0,c
 41791  0165AC  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 41792  0165B2  6A2F               	clrf	(btemp+5)^0,c
 41793  0165B4  6A30               	clrf	(btemp+6)^0,c
 41794  0165B6  6A31               	clrf	(btemp+7)^0,c
 41795                           
 41796                           ;stkvar	_prod @ sp[(-13)+0]
 41797  0165B8  0EF3               	movlw	-13
 41798  0165BA  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 41799  0165C0  0EF4               	movlw	-12
 41800  0165C2  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 41801  0165C8  0EF5               	movlw	-11
 41802  0165CA  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 41803  0165D0  0EF6               	movlw	-10
 41804  0165D2  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 41805                           
 41806                           ;stkvar	_b @ sp[(-13)+-4]
 41807  0165D8  0EF0               	movlw	240
 41808  0165DA  24E1               	addwf	fsr1l,w,c
 41809  0165DC  6ED9               	movwf	fsr2l,c
 41810  0165DE  0EFF               	movlw	255
 41811  0165E0  20E2               	addwfc	fsr1h,w,c
 41812  0165E2  6EDA               	movwf	fsr2h,c
 41813  0165E4  50DF               	movf	indf2,w,c
 41814  0165E6  6E35               	movwf	(btemp+11)^0,c
 41815                           
 41816                           ;stkvar	_a @ sp[(-13)+-8]
 41817  0165E8  0EEC               	movlw	236
 41818  0165EA  24E1               	addwf	fsr1l,w,c
 41819  0165EC  6ED9               	movwf	fsr2l,c
 41820  0165EE  0EFF               	movlw	255
 41821  0165F0  20E2               	addwfc	fsr1h,w,c
 41822  0165F2  6EDA               	movwf	fsr2h,c
 41823  0165F4  50DF               	movf	indf2,w,c
 41824  0165F6  0235               	mulwf	(btemp+11)^0,c
 41825                           
 41826                           ;stkvar	_temp @ sp[(-13)+8]
 41827  0165F8  0EFB               	movlw	-5
 41828  0165FA  006F FFCF FFE3     	movff	prodl,plusw1
 41829  016600  0EFC               	movlw	-4
 41830  016602  006F FFD3 FFE3     	movff	prodh,plusw1
 41831                           
 41832                           ;stkvar	_grs @ sp[(-13)+4]
 41833  016608  50E1               	movf	fsr1l,w,c
 41834  01660A  0FF7               	addlw	-9
 41835  01660C  6ED9               	movwf	fsr2l,c
 41836  01660E  50E2               	movf	fsr1h,w,c
 41837  016610  6EDA               	movwf	fsr2h,c
 41838  016612  0EFF               	movlw	255
 41839  016614  22DA               	addwfc	fsr2h,f,c
 41840                           
 41841                           ;stkvar	_temp @ sp[(-13)+8]
 41842  016616  0EFB               	movlw	-5
 41843  016618  50E3               	movf	plusw1,w,c
 41844  01661A  26DE               	addwf	postinc2,f,c
 41845  01661C  0E00               	movlw	0
 41846  01661E  22DE               	addwfc	postinc2,f,c
 41847  016620  22DE               	addwfc	postinc2,f,c
 41848  016622  22DE               	addwfc	postinc2,f,c
 41849                           
 41850                           ;stkvar	_prod @ sp[(-13)+0]
 41851  016624  50E1               	movf	fsr1l,w,c
 41852  016626  0FF3               	addlw	-13
 41853  016628  6ED9               	movwf	fsr2l,c
 41854  01662A  50E2               	movf	fsr1h,w,c
 41855  01662C  6EDA               	movwf	fsr2h,c
 41856  01662E  0EFF               	movlw	255
 41857  016630  22DA               	addwfc	fsr2h,f,c
 41858                           
 41859                           ;stkvar	_temp @ sp[(-13)+8]
 41860  016632  0EFC               	movlw	252
 41861  016634  24E1               	addwf	fsr1l,w,c
 41862  016636  6EE9               	movwf	fsr0l,c
 41863  016638  0EFF               	movlw	255
 41864  01663A  20E2               	addwfc	fsr1h,w,c
 41865  01663C  6EEA               	movwf	fsr0h,c
 41866  01663E  50EF               	movf	indf0,w,c
 41867  016640  26DE               	addwf	postinc2,f,c
 41868  016642  0E00               	movlw	0
 41869  016644  22DE               	addwfc	postinc2,f,c
 41870  016646  22DE               	addwfc	postinc2,f,c
 41871  016648  22DE               	addwfc	postinc2,f,c
 41872                           
 41873                           ;stkvar	_b @ sp[(-13)+-4]
 41874  01664A  0EF1               	movlw	241
 41875  01664C  24E1               	addwf	fsr1l,w,c
 41876  01664E  6ED9               	movwf	fsr2l,c
 41877  016650  0EFF               	movlw	255
 41878  016652  20E2               	addwfc	fsr1h,w,c
 41879  016654  6EDA               	movwf	fsr2h,c
 41880  016656  50DF               	movf	indf2,w,c
 41881  016658  6E35               	movwf	(btemp+11)^0,c
 41882                           
 41883                           ;stkvar	_a @ sp[(-13)+-8]
 41884  01665A  0EEB               	movlw	-21
 41885  01665C  50E3               	movf	plusw1,w,c
 41886  01665E  0235               	mulwf	(btemp+11)^0,c
 41887                           
 41888                           ;stkvar	_temp @ sp[(-13)+8]
 41889  016660  0EFB               	movlw	-5
 41890  016662  006F FFCF FFE3     	movff	prodl,plusw1
 41891  016668  0EFC               	movlw	-4
 41892  01666A  006F FFD3 FFE3     	movff	prodh,plusw1
 41893                           
 41894                           ;stkvar	_grs @ sp[(-13)+4]
 41895  016670  50E1               	movf	fsr1l,w,c
 41896  016672  0FF7               	addlw	-9
 41897  016674  6ED9               	movwf	fsr2l,c
 41898  016676  50E2               	movf	fsr1h,w,c
 41899  016678  6EDA               	movwf	fsr2h,c
 41900  01667A  0EFF               	movlw	255
 41901  01667C  22DA               	addwfc	fsr2h,f,c
 41902                           
 41903                           ;stkvar	_temp @ sp[(-13)+8]
 41904  01667E  0EFB               	movlw	-5
 41905  016680  50E3               	movf	plusw1,w,c
 41906  016682  26DE               	addwf	postinc2,f,c
 41907  016684  0E00               	movlw	0
 41908  016686  22DE               	addwfc	postinc2,f,c
 41909  016688  22DE               	addwfc	postinc2,f,c
 41910  01668A  22DE               	addwfc	postinc2,f,c
 41911                           
 41912                           ;stkvar	_prod @ sp[(-13)+0]
 41913  01668C  50E1               	movf	fsr1l,w,c
 41914  01668E  0FF3               	addlw	-13
 41915  016690  6ED9               	movwf	fsr2l,c
 41916  016692  50E2               	movf	fsr1h,w,c
 41917  016694  6EDA               	movwf	fsr2h,c
 41918  016696  0EFF               	movlw	255
 41919  016698  22DA               	addwfc	fsr2h,f,c
 41920                           
 41921                           ;stkvar	_temp @ sp[(-13)+8]
 41922  01669A  0EFC               	movlw	252
 41923  01669C  24E1               	addwf	fsr1l,w,c
 41924  01669E  6EE9               	movwf	fsr0l,c
 41925  0166A0  0EFF               	movlw	255
 41926  0166A2  20E2               	addwfc	fsr1h,w,c
 41927  0166A4  6EEA               	movwf	fsr0h,c
 41928  0166A6  50EF               	movf	indf0,w,c
 41929  0166A8  26DE               	addwf	postinc2,f,c
 41930  0166AA  0E00               	movlw	0
 41931  0166AC  22DE               	addwfc	postinc2,f,c
 41932  0166AE  22DE               	addwfc	postinc2,f,c
 41933  0166B0  22DE               	addwfc	postinc2,f,c
 41934                           
 41935                           ;stkvar	_grs @ sp[(-13)+4]
 41936  0166B2  50E1               	movf	fsr1l,w,c
 41937  0166B4  0FF7               	addlw	-9
 41938  0166B6  6ED9               	movwf	fsr2l,c
 41939  0166B8  50E2               	movf	fsr1h,w,c
 41940  0166BA  6EDA               	movwf	fsr2h,c
 41941  0166BC  0EFF               	movlw	255
 41942  0166BE  22DA               	addwfc	fsr2h,f,c
 41943  0166C0  0E08               	movlw	8
 41944  0166C2                     u8605:
 41945  0166C2  90D8               	bcf	status,0,c
 41946  0166C4  36DE               	rlcf	postinc2,f,c
 41947  0166C6  36DE               	rlcf	postinc2,f,c
 41948  0166C8  36DE               	rlcf	postinc2,f,c
 41949  0166CA  36DD               	rlcf	postdec2,f,c
 41950  0166CC  52DD               	movf	postdec2,f,c
 41951  0166CE  52DD               	movf	postdec2,f,c
 41952  0166D0  2EE8               	decfsz	wreg,f,c
 41953  0166D2  D7F7               	goto	u8605
 41954                           
 41955                           ;stkvar	_b @ sp[(-13)+-4]
 41956  0166D4  0EF0               	movlw	240
 41957  0166D6  24E1               	addwf	fsr1l,w,c
 41958  0166D8  6ED9               	movwf	fsr2l,c
 41959  0166DA  0EFF               	movlw	255
 41960  0166DC  20E2               	addwfc	fsr1h,w,c
 41961  0166DE  6EDA               	movwf	fsr2h,c
 41962  0166E0  50DF               	movf	indf2,w,c
 41963  0166E2  6E35               	movwf	(btemp+11)^0,c
 41964                           
 41965                           ;stkvar	_a @ sp[(-13)+-8]
 41966  0166E4  0EEB               	movlw	-21
 41967  0166E6  50E3               	movf	plusw1,w,c
 41968  0166E8  0235               	mulwf	(btemp+11)^0,c
 41969                           
 41970                           ;stkvar	_temp @ sp[(-13)+8]
 41971  0166EA  0EFB               	movlw	-5
 41972  0166EC  006F FFCF FFE3     	movff	prodl,plusw1
 41973  0166F2  0EFC               	movlw	-4
 41974  0166F4  006F FFD3 FFE3     	movff	prodh,plusw1
 41975                           
 41976                           ;stkvar	_temp @ sp[(-13)+8]
 41977  0166FA  0EFB               	movlw	-5
 41978  0166FC  006F FF8C  F034    	movff	plusw1,btemp+10
 41979  016702  0EFC               	movlw	-4
 41980  016704  006F FF8C  F035    	movff	plusw1,btemp+11
 41981                           
 41982                           ;stkvar	_grs @ sp[(-13)+4]
 41983  01670A  50E1               	movf	fsr1l,w,c
 41984  01670C  0FF7               	addlw	-9
 41985  01670E  6ED9               	movwf	fsr2l,c
 41986  016710  50E2               	movf	fsr1h,w,c
 41987  016712  6EDA               	movwf	fsr2h,c
 41988  016714  0EFF               	movlw	255
 41989  016716  22DA               	addwfc	fsr2h,f,c
 41990  016718  5034               	movf	(btemp+10)^0,w,c
 41991  01671A  26DE               	addwf	postinc2,f,c
 41992  01671C  5035               	movf	(btemp+11)^0,w,c
 41993  01671E  22DE               	addwfc	postinc2,f,c
 41994  016720  0E00               	movlw	0
 41995  016722  22DE               	addwfc	postinc2,f,c
 41996  016724  22DE               	addwfc	postinc2,f,c
 41997                           
 41998                           ;stkvar	_b @ sp[(-13)+-4]
 41999  016726  0EEF               	movlw	-17
 42000  016728  006F FF8C  F035    	movff	plusw1,btemp+11
 42001                           
 42002                           ;stkvar	_a @ sp[(-13)+-8]
 42003  01672E  0EEC               	movlw	236
 42004  016730  24E1               	addwf	fsr1l,w,c
 42005  016732  6ED9               	movwf	fsr2l,c
 42006  016734  0EFF               	movlw	255
 42007  016736  20E2               	addwfc	fsr1h,w,c
 42008  016738  6EDA               	movwf	fsr2h,c
 42009  01673A  50DF               	movf	indf2,w,c
 42010  01673C  0235               	mulwf	(btemp+11)^0,c
 42011                           
 42012                           ;stkvar	_temp @ sp[(-13)+8]
 42013  01673E  0EFB               	movlw	-5
 42014  016740  006F FFCF FFE3     	movff	prodl,plusw1
 42015  016746  0EFC               	movlw	-4
 42016  016748  006F FFD3 FFE3     	movff	prodh,plusw1
 42017                           
 42018                           ;stkvar	_temp @ sp[(-13)+8]
 42019  01674E  0EFB               	movlw	-5
 42020  016750  006F FF8C  F034    	movff	plusw1,btemp+10
 42021  016756  0EFC               	movlw	-4
 42022  016758  006F FF8C  F035    	movff	plusw1,btemp+11
 42023                           
 42024                           ;stkvar	_grs @ sp[(-13)+4]
 42025  01675E  50E1               	movf	fsr1l,w,c
 42026  016760  0FF7               	addlw	-9
 42027  016762  6ED9               	movwf	fsr2l,c
 42028  016764  50E2               	movf	fsr1h,w,c
 42029  016766  6EDA               	movwf	fsr2h,c
 42030  016768  0EFF               	movlw	255
 42031  01676A  22DA               	addwfc	fsr2h,f,c
 42032  01676C  5034               	movf	(btemp+10)^0,w,c
 42033  01676E  26DE               	addwf	postinc2,f,c
 42034  016770  5035               	movf	(btemp+11)^0,w,c
 42035  016772  22DE               	addwfc	postinc2,f,c
 42036  016774  0E00               	movlw	0
 42037  016776  22DE               	addwfc	postinc2,f,c
 42038  016778  22DE               	addwfc	postinc2,f,c
 42039                           
 42040                           ;stkvar	_grs @ sp[(-13)+4]
 42041  01677A  50E1               	movf	fsr1l,w,c
 42042  01677C  0FF7               	addlw	-9
 42043  01677E  6ED9               	movwf	fsr2l,c
 42044  016780  50E2               	movf	fsr1h,w,c
 42045  016782  6EDA               	movwf	fsr2h,c
 42046  016784  0EFF               	movlw	255
 42047  016786  22DA               	addwfc	fsr2h,f,c
 42048  016788  0E08               	movlw	8
 42049  01678A                     u8615:
 42050  01678A  90D8               	bcf	status,0,c
 42051  01678C  36DE               	rlcf	postinc2,f,c
 42052  01678E  36DE               	rlcf	postinc2,f,c
 42053  016790  36DE               	rlcf	postinc2,f,c
 42054  016792  36DD               	rlcf	postdec2,f,c
 42055  016794  52DD               	movf	postdec2,f,c
 42056  016796  52DD               	movf	postdec2,f,c
 42057  016798  2EE8               	decfsz	wreg,f,c
 42058  01679A  D7F7               	goto	u8615
 42059                           
 42060                           ;stkvar	_b @ sp[(-13)+-4]
 42061  01679C  0EEF               	movlw	-17
 42062  01679E  006F FF8C  F035    	movff	plusw1,btemp+11
 42063                           
 42064                           ;stkvar	_a @ sp[(-13)+-8]
 42065  0167A4  0EEB               	movlw	-21
 42066  0167A6  50E3               	movf	plusw1,w,c
 42067  0167A8  0235               	mulwf	(btemp+11)^0,c
 42068                           
 42069                           ;stkvar	_temp @ sp[(-13)+8]
 42070  0167AA  0EFB               	movlw	-5
 42071  0167AC  006F FFCF FFE3     	movff	prodl,plusw1
 42072  0167B2  0EFC               	movlw	-4
 42073  0167B4  006F FFD3 FFE3     	movff	prodh,plusw1
 42074                           
 42075                           ;stkvar	_temp @ sp[(-13)+8]
 42076  0167BA  0EFB               	movlw	-5
 42077  0167BC  006F FF8C  F034    	movff	plusw1,btemp+10
 42078  0167C2  0EFC               	movlw	-4
 42079  0167C4  006F FF8C  F035    	movff	plusw1,btemp+11
 42080                           
 42081                           ;stkvar	_grs @ sp[(-13)+4]
 42082  0167CA  50E1               	movf	fsr1l,w,c
 42083  0167CC  0FF7               	addlw	-9
 42084  0167CE  6ED9               	movwf	fsr2l,c
 42085  0167D0  50E2               	movf	fsr1h,w,c
 42086  0167D2  6EDA               	movwf	fsr2h,c
 42087  0167D4  0EFF               	movlw	255
 42088  0167D6  22DA               	addwfc	fsr2h,f,c
 42089  0167D8  5034               	movf	(btemp+10)^0,w,c
 42090  0167DA  26DE               	addwf	postinc2,f,c
 42091  0167DC  5035               	movf	(btemp+11)^0,w,c
 42092  0167DE  22DE               	addwfc	postinc2,f,c
 42093  0167E0  0E00               	movlw	0
 42094  0167E2  22DE               	addwfc	postinc2,f,c
 42095  0167E4  22DE               	addwfc	postinc2,f,c
 42096                           
 42097                           ;stkvar	_b @ sp[(-13)+-4]
 42098  0167E6  0EF0               	movlw	240
 42099  0167E8  24E1               	addwf	fsr1l,w,c
 42100  0167EA  6ED9               	movwf	fsr2l,c
 42101  0167EC  0EFF               	movlw	255
 42102  0167EE  20E2               	addwfc	fsr1h,w,c
 42103  0167F0  6EDA               	movwf	fsr2h,c
 42104  0167F2  50DF               	movf	indf2,w,c
 42105  0167F4  6E35               	movwf	(btemp+11)^0,c
 42106                           
 42107                           ;stkvar	_a @ sp[(-13)+-8]
 42108  0167F6  0EED               	movlw	237
 42109  0167F8  24E1               	addwf	fsr1l,w,c
 42110  0167FA  6ED9               	movwf	fsr2l,c
 42111  0167FC  0EFF               	movlw	255
 42112  0167FE  20E2               	addwfc	fsr1h,w,c
 42113  016800  6EDA               	movwf	fsr2h,c
 42114  016802  50DF               	movf	indf2,w,c
 42115  016804  0235               	mulwf	(btemp+11)^0,c
 42116                           
 42117                           ;stkvar	_temp @ sp[(-13)+8]
 42118  016806  0EFB               	movlw	-5
 42119  016808  006F FFCF FFE3     	movff	prodl,plusw1
 42120  01680E  0EFC               	movlw	-4
 42121  016810  006F FFD3 FFE3     	movff	prodh,plusw1
 42122                           
 42123                           ;stkvar	_temp @ sp[(-13)+8]
 42124  016816  0EFB               	movlw	-5
 42125  016818  006F FF8C  F034    	movff	plusw1,btemp+10
 42126  01681E  0EFC               	movlw	-4
 42127  016820  006F FF8C  F035    	movff	plusw1,btemp+11
 42128                           
 42129                           ;stkvar	_prod @ sp[(-13)+0]
 42130  016826  50E1               	movf	fsr1l,w,c
 42131  016828  0FF3               	addlw	-13
 42132  01682A  6ED9               	movwf	fsr2l,c
 42133  01682C  50E2               	movf	fsr1h,w,c
 42134  01682E  6EDA               	movwf	fsr2h,c
 42135  016830  0EFF               	movlw	255
 42136  016832  22DA               	addwfc	fsr2h,f,c
 42137  016834  5034               	movf	(btemp+10)^0,w,c
 42138  016836  26DE               	addwf	postinc2,f,c
 42139  016838  5035               	movf	(btemp+11)^0,w,c
 42140  01683A  22DE               	addwfc	postinc2,f,c
 42141  01683C  0E00               	movlw	0
 42142  01683E  22DE               	addwfc	postinc2,f,c
 42143  016840  22DE               	addwfc	postinc2,f,c
 42144                           
 42145                           ;stkvar	_b @ sp[(-13)+-4]
 42146  016842  0EF1               	movlw	241
 42147  016844  24E1               	addwf	fsr1l,w,c
 42148  016846  6ED9               	movwf	fsr2l,c
 42149  016848  0EFF               	movlw	255
 42150  01684A  20E2               	addwfc	fsr1h,w,c
 42151  01684C  6EDA               	movwf	fsr2h,c
 42152  01684E  50DF               	movf	indf2,w,c
 42153  016850  6E35               	movwf	(btemp+11)^0,c
 42154                           
 42155                           ;stkvar	_a @ sp[(-13)+-8]
 42156  016852  0EEC               	movlw	236
 42157  016854  24E1               	addwf	fsr1l,w,c
 42158  016856  6ED9               	movwf	fsr2l,c
 42159  016858  0EFF               	movlw	255
 42160  01685A  20E2               	addwfc	fsr1h,w,c
 42161  01685C  6EDA               	movwf	fsr2h,c
 42162  01685E  50DF               	movf	indf2,w,c
 42163  016860  0235               	mulwf	(btemp+11)^0,c
 42164                           
 42165                           ;stkvar	_temp @ sp[(-13)+8]
 42166  016862  0EFB               	movlw	-5
 42167  016864  006F FFCF FFE3     	movff	prodl,plusw1
 42168  01686A  0EFC               	movlw	-4
 42169  01686C  006F FFD3 FFE3     	movff	prodh,plusw1
 42170                           
 42171                           ;stkvar	_temp @ sp[(-13)+8]
 42172  016872  0EFB               	movlw	-5
 42173  016874  006F FF8C  F034    	movff	plusw1,btemp+10
 42174  01687A  0EFC               	movlw	-4
 42175  01687C  006F FF8C  F035    	movff	plusw1,btemp+11
 42176                           
 42177                           ;stkvar	_prod @ sp[(-13)+0]
 42178  016882  50E1               	movf	fsr1l,w,c
 42179  016884  0FF3               	addlw	-13
 42180  016886  6ED9               	movwf	fsr2l,c
 42181  016888  50E2               	movf	fsr1h,w,c
 42182  01688A  6EDA               	movwf	fsr2h,c
 42183  01688C  0EFF               	movlw	255
 42184  01688E  22DA               	addwfc	fsr2h,f,c
 42185  016890  5034               	movf	(btemp+10)^0,w,c
 42186  016892  26DE               	addwf	postinc2,f,c
 42187  016894  5035               	movf	(btemp+11)^0,w,c
 42188  016896  22DE               	addwfc	postinc2,f,c
 42189  016898  0E00               	movlw	0
 42190  01689A  22DE               	addwfc	postinc2,f,c
 42191  01689C  22DE               	addwfc	postinc2,f,c
 42192                           
 42193                           ;stkvar	_b @ sp[(-13)+-4]
 42194  01689E  0EF1               	movlw	241
 42195  0168A0  24E1               	addwf	fsr1l,w,c
 42196  0168A2  6ED9               	movwf	fsr2l,c
 42197  0168A4  0EFF               	movlw	255
 42198  0168A6  20E2               	addwfc	fsr1h,w,c
 42199  0168A8  6EDA               	movwf	fsr2h,c
 42200  0168AA  50DF               	movf	indf2,w,c
 42201  0168AC  6E35               	movwf	(btemp+11)^0,c
 42202                           
 42203                           ;stkvar	_a @ sp[(-13)+-8]
 42204  0168AE  0EED               	movlw	237
 42205  0168B0  24E1               	addwf	fsr1l,w,c
 42206  0168B2  6ED9               	movwf	fsr2l,c
 42207  0168B4  0EFF               	movlw	255
 42208  0168B6  20E2               	addwfc	fsr1h,w,c
 42209  0168B8  6EDA               	movwf	fsr2h,c
 42210  0168BA  50DF               	movf	indf2,w,c
 42211  0168BC  0235               	mulwf	(btemp+11)^0,c
 42212                           
 42213                           ;stkvar	_temp @ sp[(-13)+8]
 42214  0168BE  0EFB               	movlw	-5
 42215  0168C0  006F FFCF FFE3     	movff	prodl,plusw1
 42216  0168C6  0EFC               	movlw	-4
 42217  0168C8  006F FFD3 FFE3     	movff	prodh,plusw1
 42218                           
 42219                           ;stkvar	_temp @ sp[(-13)+8]
 42220  0168CE  0EFB               	movlw	-5
 42221  0168D0  006F FF8C  F034    	movff	plusw1,btemp+10
 42222  0168D6  0EFC               	movlw	-4
 42223  0168D8  006F FF8C  F035    	movff	plusw1,btemp+11
 42224  0168DE  5034               	movf	(btemp+10)^0,w,c
 42225  0168E0  6E2E               	movwf	(btemp+4)^0,c
 42226  0168E2  5035               	movf	(btemp+11)^0,w,c
 42227  0168E4  6E2F               	movwf	(btemp+5)^0,c
 42228  0168E6  6A30               	clrf	(btemp+6)^0,c
 42229  0168E8  6A31               	clrf	(btemp+7)^0,c
 42230  0168EA  0060  F0C0  F031   	movff	btemp+6,btemp+7
 42231  0168F0  0060  F0BC  F030   	movff	btemp+5,btemp+6
 42232  0168F6  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 42233  0168FC  6A2E               	clrf	(btemp+4)^0,c
 42234                           
 42235                           ;stkvar	_prod @ sp[(-13)+0]
 42236  0168FE  50E1               	movf	fsr1l,w,c
 42237  016900  0FF3               	addlw	-13
 42238  016902  6ED9               	movwf	fsr2l,c
 42239  016904  50E2               	movf	fsr1h,w,c
 42240  016906  6EDA               	movwf	fsr2h,c
 42241  016908  0EFF               	movlw	255
 42242  01690A  22DA               	addwfc	fsr2h,f,c
 42243  01690C  502E               	movf	(btemp+4)^0,w,c
 42244  01690E  26DE               	addwf	postinc2,f,c
 42245  016910  502F               	movf	(btemp+5)^0,w,c
 42246  016912  22DE               	addwfc	postinc2,f,c
 42247  016914  5030               	movf	(btemp+6)^0,w,c
 42248  016916  22DE               	addwfc	postinc2,f,c
 42249  016918  5031               	movf	(btemp+7)^0,w,c
 42250  01691A  22DE               	addwfc	postinc2,f,c
 42251                           
 42252                           ;stkvar	_prod @ sp[(-13)+0]
 42253  01691C  50E1               	movf	fsr1l,w,c
 42254  01691E  0FF3               	addlw	-13
 42255  016920  6ED9               	movwf	fsr2l,c
 42256  016922  50E2               	movf	fsr1h,w,c
 42257  016924  6EDA               	movwf	fsr2h,c
 42258  016926  0EFF               	movlw	255
 42259  016928  22DA               	addwfc	fsr2h,f,c
 42260                           
 42261                           ;stkvar	_grs @ sp[(-13)+4]
 42262  01692A  0EFA               	movlw	250
 42263  01692C  24E1               	addwf	fsr1l,w,c
 42264  01692E  6EE9               	movwf	fsr0l,c
 42265  016930  0EFF               	movlw	255
 42266  016932  20E2               	addwfc	fsr1h,w,c
 42267  016934  6EEA               	movwf	fsr0h,c
 42268  016936  50EF               	movf	indf0,w,c
 42269  016938  26DE               	addwf	postinc2,f,c
 42270  01693A  0E00               	movlw	0
 42271  01693C  22DE               	addwfc	postinc2,f,c
 42272  01693E  22DE               	addwfc	postinc2,f,c
 42273  016940  22DE               	addwfc	postinc2,f,c
 42274                           
 42275                           ;stkvar	_grs @ sp[(-13)+4]
 42276  016942  50E1               	movf	fsr1l,w,c
 42277  016944  0FF7               	addlw	-9
 42278  016946  6ED9               	movwf	fsr2l,c
 42279  016948  50E2               	movf	fsr1h,w,c
 42280  01694A  6EDA               	movwf	fsr2h,c
 42281  01694C  0EFF               	movlw	255
 42282  01694E  22DA               	addwfc	fsr2h,f,c
 42283  016950  0E08               	movlw	8
 42284  016952                     u8625:
 42285  016952  90D8               	bcf	status,0,c
 42286  016954  36DE               	rlcf	postinc2,f,c
 42287  016956  36DE               	rlcf	postinc2,f,c
 42288  016958  36DE               	rlcf	postinc2,f,c
 42289  01695A  36DD               	rlcf	postdec2,f,c
 42290  01695C  52DD               	movf	postdec2,f,c
 42291  01695E  52DD               	movf	postdec2,f,c
 42292  016960  2EE8               	decfsz	wreg,f,c
 42293  016962  D7F7               	goto	u8625
 42294  016964  0E82               	movlw	130
 42295  016966  6E34               	movwf	(btemp+10)^0,c
 42296  016968  0EFF               	movlw	255
 42297  01696A  6E35               	movwf	(btemp+11)^0,c
 42298                           
 42299                           ;stkvar	_bexp @ sp[(-13)+10]
 42300  01696C  0EFD               	movlw	-3
 42301  01696E  50E3               	movf	plusw1,w,c
 42302  016970  6E32               	movwf	(btemp+8)^0,c
 42303  016972  6A33               	clrf	(btemp+9)^0,c
 42304                           
 42305                           ;stkvar	_aexp @ sp[(-13)+11]
 42306  016974  0EFE               	movlw	-2
 42307  016976  50E3               	movf	plusw1,w,c
 42308  016978  2632               	addwf	(btemp+8)^0,f,c
 42309  01697A  0E00               	movlw	0
 42310  01697C  2233               	addwfc	(btemp+9)^0,f,c
 42311  01697E  5034               	movf	(btemp+10)^0,w,c
 42312  016980  2632               	addwf	(btemp+8)^0,f,c
 42313  016982  5035               	movf	(btemp+11)^0,w,c
 42314  016984  2233               	addwfc	(btemp+9)^0,f,c
 42315                           
 42316                           ;stkvar	_temp @ sp[(-13)+8]
 42317  016986  0EFB               	movlw	-5
 42318  016988  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42319  01698E  0EFC               	movlw	-4
 42320  016990  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42321  016996  D021               	goto	l10494
 42322  016998                     l10484:
 42323                           
 42324                           ;stkvar	_prod @ sp[(-13)+0]
 42325  016998  90D8               	bcf	status,0,c
 42326  01699A  0EF3               	movlw	-13
 42327  01699C  36E3               	rlcf	plusw1,f,c
 42328  01699E  0EF4               	movlw	-12
 42329  0169A0  36E3               	rlcf	plusw1,f,c
 42330  0169A2  0EF5               	movlw	-11
 42331  0169A4  36E3               	rlcf	plusw1,f,c
 42332  0169A6  0EF6               	movlw	-10
 42333  0169A8  36E3               	rlcf	plusw1,f,c
 42334                           
 42335                           ;stkvar	_grs @ sp[(-13)+4]
 42336  0169AA  0EFA               	movlw	-6
 42337  0169AC  AEE3               	btfss	plusw1,7,c
 42338  0169AE  D002               	goto	l10490
 42339                           
 42340                           ;stkvar	_prod @ sp[(-13)+0]
 42341  0169B0  0EF3               	movlw	-13
 42342  0169B2  80E3               	bsf	plusw1,0,c
 42343  0169B4                     l10490:
 42344                           
 42345                           ;stkvar	_grs @ sp[(-13)+4]
 42346  0169B4  90D8               	bcf	status,0,c
 42347  0169B6  0EF7               	movlw	-9
 42348  0169B8  36E3               	rlcf	plusw1,f,c
 42349  0169BA  0EF8               	movlw	-8
 42350  0169BC  36E3               	rlcf	plusw1,f,c
 42351  0169BE  0EF9               	movlw	-7
 42352  0169C0  36E3               	rlcf	plusw1,f,c
 42353  0169C2  0EFA               	movlw	-6
 42354  0169C4  36E3               	rlcf	plusw1,f,c
 42355                           
 42356                           ;stkvar	_temp @ sp[(-13)+8]
 42357  0169C6  50E1               	movf	fsr1l,w,c
 42358  0169C8  0FFB               	addlw	-5
 42359  0169CA  6ED9               	movwf	fsr2l,c
 42360  0169CC  50E2               	movf	fsr1h,w,c
 42361  0169CE  6EDA               	movwf	fsr2h,c
 42362  0169D0  0EFF               	movlw	255
 42363  0169D2  22DA               	addwfc	fsr2h,f,c
 42364  0169D4  06DE               	decf	postinc2,f,c
 42365  0169D6  0E00               	movlw	0
 42366  0169D8  5ADD               	subwfb	postdec2,f,c
 42367  0169DA                     l10494:
 42368                           
 42369                           ;stkvar	_prod @ sp[(-13)+0]
 42370  0169DA  0EF5               	movlw	-11
 42371  0169DC  AEE3               	btfss	plusw1,7,c
 42372  0169DE  D7DC               	goto	l10484
 42373                           
 42374                           ;stkvar	_aexp @ sp[(-13)+11]
 42375  0169E0  0EFE               	movlw	-2
 42376  0169E2  6AE3               	clrf	plusw1,c
 42377                           
 42378                           ;stkvar	_grs @ sp[(-13)+4]
 42379  0169E4  0EFA               	movlw	-6
 42380  0169E6  AEE3               	btfss	plusw1,7,c
 42381  0169E8  D020               	goto	l10508
 42382                           
 42383                           ;stkvar	_grs @ sp[(-13)+4]
 42384  0169EA  50E1               	movf	fsr1l,w,c
 42385  0169EC  0FF7               	addlw	-9
 42386  0169EE  6ED9               	movwf	fsr2l,c
 42387  0169F0  50E2               	movf	fsr1h,w,c
 42388  0169F2  6EDA               	movwf	fsr2h,c
 42389  0169F4  0EFF               	movlw	255
 42390  0169F6  22DA               	addwfc	fsr2h,f,c
 42391  0169F8  0EFF               	movlw	255
 42392  0169FA  14DE               	andwf	postinc2,w,c
 42393  0169FC  6E32               	movwf	(btemp+8)^0,c
 42394  0169FE  0EFF               	movlw	255
 42395  016A00  14DE               	andwf	postinc2,w,c
 42396  016A02  6E33               	movwf	(btemp+9)^0,c
 42397  016A04  0EFF               	movlw	255
 42398  016A06  14DE               	andwf	postinc2,w,c
 42399  016A08  6E34               	movwf	(btemp+10)^0,c
 42400  016A0A  0E7F               	movlw	127
 42401  016A0C  14DE               	andwf	postinc2,w,c
 42402  016A0E  6E35               	movwf	(btemp+11)^0,c
 42403  016A10  5032               	movf	(btemp+8)^0,w,c
 42404  016A12  1033               	iorwf	(btemp+9)^0,w,c
 42405  016A14  1034               	iorwf	(btemp+10)^0,w,c
 42406  016A16  1035               	iorwf	(btemp+11)^0,w,c
 42407  016A18  B4D8               	btfsc	status,2,c
 42408  016A1A  D004               	goto	l10504
 42409  016A1C                     u8660:
 42410                           
 42411                           ;stkvar	_aexp @ sp[(-13)+11]
 42412  016A1C  0EFE               	movlw	-2
 42413  016A1E  6AE3               	clrf	plusw1,c
 42414  016A20  2AE3               	incf	plusw1,f,c
 42415  016A22  D003               	goto	l10508
 42416  016A24                     l10504:
 42417                           
 42418                           ;stkvar	_prod @ sp[(-13)+0]
 42419  016A24  0EF3               	movlw	-13
 42420  016A26  B0E3               	btfsc	plusw1,0,c
 42421  016A28  D7F9               	goto	u8660
 42422  016A2A                     l10508:
 42423                           
 42424                           ;stkvar	_aexp @ sp[(-13)+11]
 42425  016A2A  0EFE               	movlw	-2
 42426  016A2C  50E3               	movf	plusw1,w,c
 42427  016A2E  B4D8               	btfsc	status,2,c
 42428  016A30  D036               	goto	l10518
 42429                           
 42430                           ;stkvar	_prod @ sp[(-13)+0]
 42431  016A32  50E1               	movf	fsr1l,w,c
 42432  016A34  0FF3               	addlw	-13
 42433  016A36  6ED9               	movwf	fsr2l,c
 42434  016A38  50E2               	movf	fsr1h,w,c
 42435  016A3A  6EDA               	movwf	fsr2h,c
 42436  016A3C  0EFF               	movlw	255
 42437  016A3E  22DA               	addwfc	fsr2h,f,c
 42438  016A40  2ADE               	incf	postinc2,f,c
 42439  016A42  0E00               	movlw	0
 42440  016A44  22DE               	addwfc	postinc2,f,c
 42441  016A46  22DE               	addwfc	postinc2,f,c
 42442  016A48  22DE               	addwfc	postinc2,f,c
 42443                           
 42444                           ;stkvar	_prod @ sp[(-13)+0]
 42445  016A4A  0EF6               	movlw	-10
 42446  016A4C  A0E3               	btfss	plusw1,0,c
 42447  016A4E  D027               	goto	l10518
 42448  016A50  0E01               	movlw	1
 42449  016A52  6E35               	movwf	(btemp+11)^0,c
 42450                           
 42451                           ;stkvar	_prod @ sp[(-13)+0]
 42452  016A54  50E1               	movf	fsr1l,w,c
 42453  016A56  0FF3               	addlw	-13
 42454  016A58  6ED9               	movwf	fsr2l,c
 42455  016A5A  50E2               	movf	fsr1h,w,c
 42456  016A5C  6EDA               	movwf	fsr2h,c
 42457  016A5E  0EFF               	movlw	255
 42458  016A60  22DA               	addwfc	fsr2h,f,c
 42459  016A62  2835               	incf	(btemp+11)^0,w,c
 42460  016A64  52DE               	movf	postinc2,f,c
 42461  016A66  D008               	goto	u8700
 42462  016A68                     u8705:
 42463  016A68  52DE               	movf	postinc2,f,c
 42464  016A6A  90D8               	bcf	status,0,c
 42465  016A6C  BEDC               	btfsc	preinc2,7,c
 42466  016A6E  80D8               	bsf	status,0,c
 42467  016A70  32DD               	rrcf	postdec2,f,c
 42468  016A72  32DD               	rrcf	postdec2,f,c
 42469  016A74  32DD               	rrcf	postdec2,f,c
 42470  016A76  32DE               	rrcf	postinc2,f,c
 42471  016A78                     u8700:
 42472  016A78  2EE8               	decfsz	wreg,f,c
 42473  016A7A  D7F6               	goto	u8705
 42474                           
 42475                           ;stkvar	_temp @ sp[(-13)+8]
 42476  016A7C  0EFB               	movlw	-5
 42477  016A7E  50E3               	movf	plusw1,w,c
 42478  016A80  0F01               	addlw	1
 42479  016A82  6E2A               	movwf	btemp^0,c
 42480  016A84  0EFB               	movlw	-5
 42481  016A86  0060  F0AB  FFE3   	movff	btemp,plusw1
 42482  016A8C  6A2A               	clrf	btemp^0,c
 42483  016A8E  0EFC               	movlw	-4
 42484  016A90  50E3               	movf	plusw1,w,c
 42485  016A92  202A               	addwfc	btemp^0,w,c
 42486  016A94  6E2A               	movwf	btemp^0,c
 42487  016A96  0EFC               	movlw	-4
 42488  016A98  0060  F0AB  FFE3   	movff	btemp,plusw1
 42489  016A9E                     l10518:
 42490                           
 42491                           ;stkvar	_temp @ sp[(-13)+8]
 42492  016A9E  0EFC               	movlw	-4
 42493  016AA0  BEE3               	btfsc	plusw1,7,c
 42494  016AA2  D020               	goto	l10522
 42495  016AA4  0EFC               	movlw	-4
 42496  016AA6  50E3               	movf	plusw1,w,c
 42497  016AA8  E104               	bnz	u8710
 42498  016AAA  0EFB               	movlw	-5
 42499  016AAC  28E3               	incf	plusw1,w,c
 42500  016AAE  A0D8               	btfss	status,0,c
 42501  016AB0  D019               	goto	l10522
 42502  016AB2                     u8710:
 42503  016AB2  0E00               	movlw	0
 42504  016AB4  6E32               	movwf	(btemp+8)^0,c
 42505  016AB6  0E00               	movlw	0
 42506  016AB8  6E33               	movwf	(btemp+9)^0,c
 42507  016ABA  0E80               	movlw	128
 42508  016ABC  6E34               	movwf	(btemp+10)^0,c
 42509  016ABE  0E7F               	movlw	127
 42510  016AC0  6E35               	movwf	(btemp+11)^0,c
 42511                           
 42512                           ;stkvar	_prod @ sp[(-13)+0]
 42513  016AC2  0EF3               	movlw	-13
 42514  016AC4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42515  016ACA  0EF4               	movlw	-12
 42516  016ACC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42517  016AD2  0EF5               	movlw	-11
 42518  016AD4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42519  016ADA  0EF6               	movlw	-10
 42520  016ADC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42521  016AE2  D044               	goto	l10538
 42522  016AE4                     l10522:
 42523                           
 42524                           ;stkvar	_temp @ sp[(-13)+8]
 42525  016AE4  0EFC               	movlw	-4
 42526  016AE6  BEE3               	btfsc	plusw1,7,c
 42527  016AE8  D007               	goto	u8720
 42528  016AEA  0EFC               	movlw	-4
 42529  016AEC  50E3               	movf	plusw1,w,c
 42530  016AEE  E10F               	bnz	l10528
 42531  016AF0  0EFB               	movlw	-5
 42532  016AF2  04E3               	decf	plusw1,w,c
 42533  016AF4  B0D8               	btfsc	status,0,c
 42534  016AF6  D00B               	goto	l10528
 42535  016AF8                     u8720:
 42536                           
 42537                           ;stkvar	_prod @ sp[(-13)+0]
 42538  016AF8  0EF3               	movlw	-13
 42539  016AFA  6AE3               	clrf	plusw1,c
 42540  016AFC  0EF4               	movlw	-12
 42541  016AFE  6AE3               	clrf	plusw1,c
 42542  016B00  0EF5               	movlw	-11
 42543  016B02  6AE3               	clrf	plusw1,c
 42544  016B04  0EF6               	movlw	-10
 42545  016B06  6AE3               	clrf	plusw1,c
 42546                           
 42547                           ;stkvar	_sign @ sp[(-13)+12]
 42548  016B08  0EFF               	movlw	-1
 42549  016B0A  6AE3               	clrf	plusw1,c
 42550  016B0C  D02F               	goto	l10538
 42551  016B0E                     l10528:
 42552                           
 42553                           ;stkvar	_temp @ sp[(-13)+8]
 42554                           ;stkvar	_bexp @ sp[(-13)+10]
 42555  016B0E  0EFB               	movlw	-5
 42556  016B10  006F FF8C  F02A    	movff	plusw1,btemp
 42557  016B16  0EFD               	movlw	-3
 42558  016B18  0060  F0AB  FFE3   	movff	btemp,plusw1
 42559                           
 42560                           ;stkvar	_prod @ sp[(-13)+0]
 42561  016B1E  50E1               	movf	fsr1l,w,c
 42562  016B20  0FF3               	addlw	-13
 42563  016B22  6ED9               	movwf	fsr2l,c
 42564  016B24  50E2               	movf	fsr1h,w,c
 42565  016B26  6EDA               	movwf	fsr2h,c
 42566  016B28  0EFF               	movlw	255
 42567  016B2A  22DA               	addwfc	fsr2h,f,c
 42568  016B2C  0EFF               	movlw	255
 42569  016B2E  16DE               	andwf	postinc2,f,c
 42570  016B30  0EFF               	movlw	255
 42571  016B32  16DE               	andwf	postinc2,f,c
 42572  016B34  0E7F               	movlw	127
 42573  016B36  16DE               	andwf	postinc2,f,c
 42574  016B38  0E00               	movlw	0
 42575  016B3A  16DE               	andwf	postinc2,f,c
 42576                           
 42577                           ;stkvar	_bexp @ sp[(-13)+10]
 42578  016B3C  0EFD               	movlw	-3
 42579  016B3E  A0E3               	btfss	plusw1,0,c
 42580  016B40  D008               	goto	l10536
 42581                           
 42582                           ;stkvar	_prod @ sp[(-13)+0]
 42583  016B42  0EF5               	movlw	245
 42584  016B44  24E1               	addwf	fsr1l,w,c
 42585  016B46  6ED9               	movwf	fsr2l,c
 42586  016B48  0EFF               	movlw	255
 42587  016B4A  20E2               	addwfc	fsr1h,w,c
 42588  016B4C  6EDA               	movwf	fsr2h,c
 42589  016B4E  0E00               	movlw	0
 42590  016B50  8EDB               	bsf	plusw2,7,c
 42591  016B52                     l10536:
 42592                           
 42593                           ;stkvar	_prod @ sp[(-13)+0]
 42594  016B52  0EF6               	movlw	246
 42595  016B54  24E1               	addwf	fsr1l,w,c
 42596  016B56  6ED9               	movwf	fsr2l,c
 42597  016B58  0EFF               	movlw	255
 42598  016B5A  20E2               	addwfc	fsr1h,w,c
 42599  016B5C  6EDA               	movwf	fsr2h,c
 42600                           
 42601                           ;stkvar	_bexp @ sp[(-13)+10]
 42602  016B5E  0EFD               	movlw	-3
 42603  016B60  006F FF8C  F035    	movff	plusw1,btemp+11
 42604  016B66  90D8               	bcf	status,0,c
 42605  016B68  3035               	rrcf	(btemp+11)^0,w,c
 42606  016B6A  6EDF               	movwf	indf2,c
 42607  016B6C                     l10538:
 42608                           
 42609                           ;stkvar	_sign @ sp[(-13)+12]
 42610  016B6C  0EFF               	movlw	-1
 42611  016B6E  006F FF8C  F035    	movff	plusw1,btemp+11
 42612                           
 42613                           ;stkvar	_prod @ sp[(-13)+0]
 42614  016B74  0EF6               	movlw	246
 42615  016B76  24E1               	addwf	fsr1l,w,c
 42616  016B78  6ED9               	movwf	fsr2l,c
 42617  016B7A  0EFF               	movlw	255
 42618  016B7C  20E2               	addwfc	fsr1h,w,c
 42619  016B7E  6EDA               	movwf	fsr2h,c
 42620  016B80  5035               	movf	(btemp+11)^0,w,c
 42621  016B82  12DF               	iorwf	indf2,f,c
 42622                           
 42623                           ;stkvar	_prod @ sp[(-13)+0]
 42624  016B84  0EF3               	movlw	-13
 42625  016B86  006F FF8C  F02A    	movff	plusw1,btemp
 42626  016B8C  0EF4               	movlw	-12
 42627  016B8E  006F FF8C  F02B    	movff	plusw1,btemp+1
 42628  016B94  0EF5               	movlw	-11
 42629  016B96  006F FF8C  F02C    	movff	plusw1,btemp+2
 42630  016B9C  0EF6               	movlw	-10
 42631  016B9E  006F FF8C  F02D    	movff	plusw1,btemp+3
 42632  016BA4                     l3326:
 42633                           
 42634                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 42635  016BA4  0EEB               	movlw	235
 42636  016BA6  26E1               	addwf	fsr1l,f,c
 42637  016BA8  0EFF               	movlw	255
 42638  016BAA  22E2               	addwfc	fsr1h,f,c
 42639  016BAC  0012               	return		;funcret
 42640  016BAE                     __end_of___flmul:
 42641                           	opt callstack 0
 42642                           
 42643 ;; *************** function _SYSTEM_Initialize *****************
 42644 ;; Defined at:
 42645 ;;		line 50 in file "mcc_generated_files/mcc.c"
 42646 ;; Parameters:    Size  Location     Type
 42647 ;;		None
 42648 ;; Auto vars:     Size  Location     Type
 42649 ;;		None
 42650 ;; Return value:  Size  Location     Type
 42651 ;;                  1  [STACK] void 
 42652 ;; Registers used:
 42653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 42654 ;; Tracked objects:
 42655 ;;		On entry : 0/0
 42656 ;;		On exit  : 3F/3C
 42657 ;;		Unchanged: 0/0
 42658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42663 ;;Total ram usage:        0 bytes
 42664 ;; Hardware stack levels used:    1
 42665 ;; Hardware stack levels required when called:   17
 42666 ;; This function calls:
 42667 ;;		_ADCC_Initialize
 42668 ;;		_CLKREF_Initialize
 42669 ;;		_CRC_Initialize
 42670 ;;		_DMA1_Initialize
 42671 ;;		_DMA2_Initialize
 42672 ;;		_EXT_INT_Initialize
 42673 ;;		_FVR_Initialize
 42674 ;;		_INTERRUPT_Initialize
 42675 ;;		_OSCILLATOR_Initialize
 42676 ;;		_PIN_MANAGER_Initialize
 42677 ;;		_PMD_Initialize
 42678 ;;		_PWM8_Initialize
 42679 ;;		_SPI1_Initialize
 42680 ;;		_TMR2_Initialize
 42681 ;;		_TMR3_Initialize
 42682 ;;		_TMR5_Initialize
 42683 ;;		_TMR6_Initialize
 42684 ;;		_UART1_Initialize
 42685 ;;		_UART2_Initialize
 42686 ;; This function is called by:
 42687 ;;		_main
 42688 ;; This function uses a reentrant model
 42689 ;;
 42690                           
 42691                           	psect	text153
 42692  001404                     __ptext153:
 42693                           	opt callstack 0
 42694  001404                     _SYSTEM_Initialize:
 42695                           	opt callstack 13
 42696                           
 42697                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 42698                           
 42699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42700                           ;incstack = 0
 42701  001404  ECA6  F007         	call	_INTERRUPT_Initialize	;wreg free
 42702                           
 42703                           ; BSR set to: 57
 42704                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 42705  001408  ECC4  F010         	call	_PMD_Initialize	;wreg free
 42706                           
 42707                           ; BSR set to: 57
 42708                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 42709  00140C  ECDB  F003         	call	_PIN_MANAGER_Initialize	;wreg free
 42710                           
 42711                           ; BSR set to: 58
 42712                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 42713  001410  ECB9  F010         	call	_OSCILLATOR_Initialize	;wreg free
 42714                           
 42715                           ; BSR set to: 57
 42716                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 42717  001414  EC59  F011         	call	_FVR_Initialize	;wreg free
 42718                           
 42719                           ; BSR set to: 62
 42720                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 42721  001418  EC24  F004         	call	_CRC_Initialize	;wreg free
 42722                           
 42723                           ; BSR set to: 0
 42724                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 42725  00141C  ECD4  F006         	call	_ADCC_Initialize	;wreg free
 42726                           
 42727                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 42728  001420  EC97  F010         	call	_TMR2_Initialize	;wreg free
 42729                           
 42730                           ; BSR set to: 57
 42731                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 42732  001424  ECAE  F010         	call	_PWM8_Initialize	;wreg free
 42733                           
 42734                           ; BSR set to: 63
 42735                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 42736  001428  EC29  F00D         	call	_EXT_INT_Initialize	;wreg free
 42737                           
 42738                           ; BSR set to: 57
 42739                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 42740  00142C  EC16  F00E         	call	_TMR6_Initialize	;wreg free
 42741                           
 42742                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 42743  001430  ECE1  F00A         	call	_TMR3_Initialize	;wreg free
 42744                           
 42745                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 42746  001434  ECBD  F00A         	call	_TMR5_Initialize	;wreg free
 42747                           
 42748                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 42749  001438  EC99  F00A         	call	_UART1_Initialize	;wreg free
 42750                           
 42751                           ; BSR set to: 57
 42752                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 42753  00143C  EC9F  F008         	call	_UART2_Initialize	;wreg free
 42754                           
 42755                           ; BSR set to: 57
 42756                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 42757  001440  ECA3  F010         	call	_SPI1_Initialize	;wreg free
 42758                           
 42759                           ; BSR set to: 61
 42760                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 42761  001444  EC58  F009         	call	_DMA2_Initialize	;wreg free
 42762                           
 42763                           ; BSR set to: 59
 42764                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 42765  001448  EC9F  F006         	call	_DMA1_Initialize	;wreg free
 42766                           
 42767                           ; BSR set to: 59
 42768                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 42769  00144C  EC2D  F011         	call	_CLKREF_Initialize	;wreg free
 42770                           
 42771                           ; BSR set to: 60
 42772                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 42773  001450  0012               	return		;funcret
 42774  001452                     __end_of_SYSTEM_Initialize:
 42775                           	opt callstack 0
 42776                           
 42777 ;; *************** function _UART2_Initialize *****************
 42778 ;; Defined at:
 42779 ;;		line 78 in file "mcc_generated_files/uart2.c"
 42780 ;; Parameters:    Size  Location     Type
 42781 ;;		None
 42782 ;; Auto vars:     Size  Location     Type
 42783 ;;		None
 42784 ;; Return value:  Size  Location     Type
 42785 ;;                  1  [STACK] void 
 42786 ;; Registers used:
 42787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 42788 ;; Tracked objects:
 42789 ;;		On entry : 3F/39
 42790 ;;		On exit  : 3F/39
 42791 ;;		Unchanged: 0/0
 42792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42797 ;;Total ram usage:        0 bytes
 42798 ;; Hardware stack levels used:    1
 42799 ;; Hardware stack levels required when called:   16
 42800 ;; This function calls:
 42801 ;;		_UART2_SetRxInterruptHandler
 42802 ;;		_UART2_SetTxInterruptHandler
 42803 ;; This function is called by:
 42804 ;;		_SYSTEM_Initialize
 42805 ;; This function uses a reentrant model
 42806 ;;
 42807                           
 42808                           	psect	text154
 42809  00113E                     __ptext154:
 42810                           	opt callstack 0
 42811  00113E                     _UART2_Initialize:
 42812                           	opt callstack 13
 42813                           
 42814                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 42815                           
 42816                           ; BSR set to: 60
 42817                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42818                           ;incstack = 0
 42819  00113E  0139               	movlb	57	; () banked
 42820  001140  9596               	bcf	150,2,b	;volatile
 42821                           
 42822                           ; BSR set to: 57
 42823                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 42824  001142  0E30               	movlw	low _UART2_Receive_ISR
 42825  001144  6EE6               	movwf	postinc1,c
 42826  001146  0E20               	movlw	high _UART2_Receive_ISR
 42827  001148  6EE6               	movwf	postinc1,c
 42828  00114A  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 42829  00114C  6EE6               	movwf	postinc1,c
 42830  00114E  EC67  F00E         	call	_UART2_SetRxInterruptHandler	;wreg free
 42831                           
 42832                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 42833  001152  0139               	movlb	57	; () banked
 42834  001154  9796               	bcf	150,3,b	;volatile
 42835                           
 42836                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 42837  001156  0E00               	movlw	low _UART2_Transmit_ISR
 42838  001158  6EE6               	movwf	postinc1,c
 42839  00115A  0E1C               	movlw	high _UART2_Transmit_ISR
 42840  00115C  6EE6               	movwf	postinc1,c
 42841  00115E  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 42842  001160  6EE6               	movwf	postinc1,c
 42843  001162  EC53  F00E         	call	_UART2_SetTxInterruptHandler	;wreg free
 42844                           
 42845                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 42846  001166  013D               	movlb	61	; () banked
 42847  001168  6BD4               	clrf	212,b	;volatile
 42848                           
 42849                           ; BSR set to: 61
 42850                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 42851  00116A  6BD6               	clrf	214,b	;volatile
 42852                           
 42853                           ; BSR set to: 61
 42854                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 42855  00116C  6BD8               	clrf	216,b	;volatile
 42856                           
 42857                           ; BSR set to: 61
 42858                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 42859  00116E  0EB0               	movlw	176
 42860  001170  6FDA               	movwf	218,b	;volatile
 42861                           
 42862                           ; BSR set to: 61
 42863                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 42864  001172  0E80               	movlw	128
 42865  001174  6FDB               	movwf	219,b	;volatile
 42866                           
 42867                           ; BSR set to: 61
 42868                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 42869  001176  6BDC               	clrf	220,b	;volatile
 42870                           
 42871                           ; BSR set to: 61
 42872                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 42873  001178  0E82               	movlw	130
 42874  00117A  6FDD               	movwf	221,b	;volatile
 42875                           
 42876                           ; BSR set to: 61
 42877                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 42878  00117C  0E06               	movlw	6
 42879  00117E  6FDE               	movwf	222,b	;volatile
 42880                           
 42881                           ; BSR set to: 61
 42882                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 42883  001180  6BDF               	clrf	223,b	;volatile
 42884                           
 42885                           ; BSR set to: 61
 42886                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 42887  001182  6BE0               	clrf	224,b	;volatile
 42888                           
 42889                           ; BSR set to: 61
 42890                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 42891  001184  6BE1               	clrf	225,b	;volatile
 42892                           
 42893                           ; BSR set to: 61
 42894                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 42895  001186  6BE2               	clrf	226,b	;volatile
 42896                           
 42897                           ; BSR set to: 61
 42898                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 42899  001188  0100               	movlb	0	; () banked
 42900  00118A  6BD9               	clrf	_uart2TxHead& (0+255),b	;volatile
 42901                           
 42902                           ; BSR set to: 0
 42903                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 42904  00118C  6A56               	clrf	_uart2TxTail^0,c	;volatile
 42905                           
 42906                           ; BSR set to: 0
 42907                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 42908  00118E  0E40               	movlw	64
 42909  001190  6E55               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 42910                           
 42911                           ; BSR set to: 0
 42912                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 42913  001192  6A54               	clrf	_uart2RxHead^0,c	;volatile
 42914                           
 42915                           ; BSR set to: 0
 42916                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 42917  001194  6BD8               	clrf	_uart2RxTail& (0+255),b	;volatile
 42918                           
 42919                           ; BSR set to: 0
 42920                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 42921  001196  6BD7               	clrf	_uart2RxCount& (0+255),b	;volatile
 42922                           
 42923                           ; BSR set to: 0
 42924                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 42925  001198  0139               	movlb	57	; () banked
 42926  00119A  8596               	bsf	150,2,b	;volatile
 42927                           
 42928                           ; BSR set to: 57
 42929                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 42930  00119C  0012               	return		;funcret
 42931  00119E                     __end_of_UART2_Initialize:
 42932                           	opt callstack 0
 42933                           
 42934 ;; *************** function _UART2_SetTxInterruptHandler *****************
 42935 ;; Defined at:
 42936 ;;		line 252 in file "mcc_generated_files/uart2.c"
 42937 ;; Parameters:    Size  Location     Type
 42938 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 42939 ;;		 -> UART2_Transmit_ISR(1), 
 42940 ;; Auto vars:     Size  Location     Type
 42941 ;;		None
 42942 ;; Return value:  Size  Location     Type
 42943 ;;                  1  [STACK] void 
 42944 ;; Registers used:
 42945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 42946 ;; Tracked objects:
 42947 ;;		On entry : 3F/39
 42948 ;;		On exit  : 0/0
 42949 ;;		Unchanged: 0/0
 42950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42955 ;;Total ram usage:        0 bytes
 42956 ;; Hardware stack levels used:    1
 42957 ;; Hardware stack levels required when called:   15
 42958 ;; This function calls:
 42959 ;;		Nothing
 42960 ;; This function is called by:
 42961 ;;		_UART2_Initialize
 42962 ;; This function uses a reentrant model
 42963 ;;
 42964                           
 42965                           	psect	text155
 42966  001CA6                     __ptext155:
 42967                           	opt callstack 0
 42968  001CA6                     _UART2_SetTxInterruptHandler:
 42969                           	opt callstack 13
 42970                           
 42971                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 42972                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 42973                           
 42974                           ; BSR set to: 57
 42975                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42976                           ;incstack = 0
 42977  001CA6  50E1               	movf	fsr1l,w,c
 42978  001CA8  0FFD               	addlw	-3
 42979  001CAA  6ED9               	movwf	fsr2l,c
 42980  001CAC  50E2               	movf	fsr1h,w,c
 42981  001CAE  6EDA               	movwf	fsr2h,c
 42982  001CB0  0EFF               	movlw	255
 42983  001CB2  22DA               	addwfc	fsr2h,f,c
 42984  001CB4  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 42985  001CBA  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 42986  001CC0  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 42987                           
 42988                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 42989  001CC6  52E5               	movf	postdec1,f,c
 42990  001CC8  52E5               	movf	postdec1,f,c
 42991  001CCA  52E5               	movf	postdec1,f,c
 42992  001CCC  0012               	return		;funcret
 42993  001CCE                     __end_of_UART2_SetTxInterruptHandler:
 42994                           	opt callstack 0
 42995                           
 42996 ;; *************** function _UART2_SetRxInterruptHandler *****************
 42997 ;; Defined at:
 42998 ;;		line 248 in file "mcc_generated_files/uart2.c"
 42999 ;; Parameters:    Size  Location     Type
 43000 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43001 ;;		 -> UART2_Receive_ISR(1), 
 43002 ;; Auto vars:     Size  Location     Type
 43003 ;;		None
 43004 ;; Return value:  Size  Location     Type
 43005 ;;                  1  [STACK] void 
 43006 ;; Registers used:
 43007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43008 ;; Tracked objects:
 43009 ;;		On entry : 3F/39
 43010 ;;		On exit  : 0/0
 43011 ;;		Unchanged: 0/0
 43012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43017 ;;Total ram usage:        0 bytes
 43018 ;; Hardware stack levels used:    1
 43019 ;; Hardware stack levels required when called:   15
 43020 ;; This function calls:
 43021 ;;		Nothing
 43022 ;; This function is called by:
 43023 ;;		_UART2_Initialize
 43024 ;; This function uses a reentrant model
 43025 ;;
 43026                           
 43027                           	psect	text156
 43028  001CCE                     __ptext156:
 43029                           	opt callstack 0
 43030  001CCE                     _UART2_SetRxInterruptHandler:
 43031                           	opt callstack 13
 43032                           
 43033                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 43034                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43035                           
 43036                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43037                           ;incstack = 0
 43038  001CCE  50E1               	movf	fsr1l,w,c
 43039  001CD0  0FFD               	addlw	-3
 43040  001CD2  6ED9               	movwf	fsr2l,c
 43041  001CD4  50E2               	movf	fsr1h,w,c
 43042  001CD6  6EDA               	movwf	fsr2h,c
 43043  001CD8  0EFF               	movlw	255
 43044  001CDA  22DA               	addwfc	fsr2h,f,c
 43045  001CDC  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 43046  001CE2  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 43047  001CE8  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 43048                           
 43049                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43050  001CEE  52E5               	movf	postdec1,f,c
 43051  001CF0  52E5               	movf	postdec1,f,c
 43052  001CF2  52E5               	movf	postdec1,f,c
 43053  001CF4  0012               	return		;funcret
 43054  001CF6                     __end_of_UART2_SetRxInterruptHandler:
 43055                           	opt callstack 0
 43056                           
 43057 ;; *************** function _UART1_Initialize *****************
 43058 ;; Defined at:
 43059 ;;		line 75 in file "mcc_generated_files/uart1.c"
 43060 ;; Parameters:    Size  Location     Type
 43061 ;;		None
 43062 ;; Auto vars:     Size  Location     Type
 43063 ;;		None
 43064 ;; Return value:  Size  Location     Type
 43065 ;;                  1  [STACK] void 
 43066 ;; Registers used:
 43067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43068 ;; Tracked objects:
 43069 ;;		On entry : 0/39
 43070 ;;		On exit  : 3F/39
 43071 ;;		Unchanged: 0/0
 43072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43077 ;;Total ram usage:        0 bytes
 43078 ;; Hardware stack levels used:    1
 43079 ;; Hardware stack levels required when called:   16
 43080 ;; This function calls:
 43081 ;;		_UART1_SetRxInterruptHandler
 43082 ;; This function is called by:
 43083 ;;		_SYSTEM_Initialize
 43084 ;; This function uses a reentrant model
 43085 ;;
 43086                           
 43087                           	psect	text157
 43088  001532                     __ptext157:
 43089                           	opt callstack 0
 43090  001532                     _UART1_Initialize:
 43091                           	opt callstack 13
 43092                           
 43093                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 43094                           
 43095                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43096                           ;incstack = 0
 43097  001532  0139               	movlb	57	; () banked
 43098  001534  9793               	bcf	147,3,b	;volatile
 43099                           
 43100                           ; BSR set to: 57
 43101                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 43102  001536  0EEE               	movlw	low _UART1_Receive_ISR
 43103  001538  6EE6               	movwf	postinc1,c
 43104  00153A  0E1F               	movlw	high _UART1_Receive_ISR
 43105  00153C  6EE6               	movwf	postinc1,c
 43106  00153E  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 43107  001540  6EE6               	movwf	postinc1,c
 43108  001542  EC7B  F00E         	call	_UART1_SetRxInterruptHandler	;wreg free
 43109                           
 43110                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 43111  001546  013D               	movlb	61	; () banked
 43112  001548  6BEC               	clrf	236,b	;volatile
 43113                           
 43114                           ; BSR set to: 61
 43115                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 43116  00154A  6BED               	clrf	237,b	;volatile
 43117                           
 43118                           ; BSR set to: 61
 43119                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 43120  00154C  6BEE               	clrf	238,b	;volatile
 43121                           
 43122                           ; BSR set to: 61
 43123                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 43124  00154E  6BEF               	clrf	239,b	;volatile
 43125                           
 43126                           ; BSR set to: 61
 43127                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 43128  001550  6BF0               	clrf	240,b	;volatile
 43129                           
 43130                           ; BSR set to: 61
 43131                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 43132  001552  6BF1               	clrf	241,b	;volatile
 43133                           
 43134                           ; BSR set to: 61
 43135                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 43136  001554  0EB0               	movlw	176
 43137  001556  6FF2               	movwf	242,b	;volatile
 43138                           
 43139                           ; BSR set to: 61
 43140                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 43141  001558  0E80               	movlw	128
 43142  00155A  6FF3               	movwf	243,b	;volatile
 43143                           
 43144                           ; BSR set to: 61
 43145                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 43146  00155C  6BF4               	clrf	244,b	;volatile
 43147                           
 43148                           ; BSR set to: 61
 43149                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 43150  00155E  0E8A               	movlw	138
 43151  001560  6FF5               	movwf	245,b	;volatile
 43152                           
 43153                           ; BSR set to: 61
 43154                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 43155  001562  6BF6               	clrf	246,b	;volatile
 43156                           
 43157                           ; BSR set to: 61
 43158                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 43159  001564  6BF7               	clrf	247,b	;volatile
 43160                           
 43161                           ; BSR set to: 61
 43162                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 43163  001566  6BF8               	clrf	248,b	;volatile
 43164                           
 43165                           ; BSR set to: 61
 43166                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 43167  001568  6BF9               	clrf	249,b	;volatile
 43168                           
 43169                           ; BSR set to: 61
 43170                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 43171  00156A  6BFA               	clrf	250,b	;volatile
 43172                           
 43173                           ; BSR set to: 61
 43174                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 43175  00156C  6A57               	clrf	_uart1RxHead^0,c	;volatile
 43176                           
 43177                           ; BSR set to: 61
 43178                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 43179  00156E  0100               	movlb	0	; () banked
 43180  001570  6BDB               	clrf	_uart1RxTail& (0+255),b	;volatile
 43181                           
 43182                           ; BSR set to: 0
 43183                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 43184  001572  6BDA               	clrf	_uart1RxCount& (0+255),b	;volatile
 43185                           
 43186                           ; BSR set to: 0
 43187                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 43188  001574  0139               	movlb	57	; () banked
 43189  001576  8793               	bsf	147,3,b	;volatile
 43190                           
 43191                           ; BSR set to: 57
 43192                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 43193  001578  0012               	return		;funcret
 43194  00157A                     __end_of_UART1_Initialize:
 43195                           	opt callstack 0
 43196                           
 43197 ;; *************** function _UART1_SetRxInterruptHandler *****************
 43198 ;; Defined at:
 43199 ;;		line 207 in file "mcc_generated_files/uart1.c"
 43200 ;; Parameters:    Size  Location     Type
 43201 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43202 ;;		 -> UART1_Receive_ISR(1), 
 43203 ;; Auto vars:     Size  Location     Type
 43204 ;;		None
 43205 ;; Return value:  Size  Location     Type
 43206 ;;                  1  [STACK] void 
 43207 ;; Registers used:
 43208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43209 ;; Tracked objects:
 43210 ;;		On entry : 3F/39
 43211 ;;		On exit  : 0/0
 43212 ;;		Unchanged: 0/0
 43213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43218 ;;Total ram usage:        0 bytes
 43219 ;; Hardware stack levels used:    1
 43220 ;; Hardware stack levels required when called:   15
 43221 ;; This function calls:
 43222 ;;		Nothing
 43223 ;; This function is called by:
 43224 ;;		_UART1_Initialize
 43225 ;; This function uses a reentrant model
 43226 ;;
 43227                           
 43228                           	psect	text158
 43229  001CF6                     __ptext158:
 43230                           	opt callstack 0
 43231  001CF6                     _UART1_SetRxInterruptHandler:
 43232                           	opt callstack 13
 43233                           
 43234                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 43235                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43236                           
 43237                           ; BSR set to: 57
 43238                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43239                           ;incstack = 0
 43240  001CF6  50E1               	movf	fsr1l,w,c
 43241  001CF8  0FFD               	addlw	-3
 43242  001CFA  6ED9               	movwf	fsr2l,c
 43243  001CFC  50E2               	movf	fsr1h,w,c
 43244  001CFE  6EDA               	movwf	fsr2h,c
 43245  001D00  0EFF               	movlw	255
 43246  001D02  22DA               	addwfc	fsr2h,f,c
 43247  001D04  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 43248  001D0A  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 43249  001D10  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 43250                           
 43251                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43252  001D16  52E5               	movf	postdec1,f,c
 43253  001D18  52E5               	movf	postdec1,f,c
 43254  001D1A  52E5               	movf	postdec1,f,c
 43255  001D1C  0012               	return		;funcret
 43256  001D1E                     __end_of_UART1_SetRxInterruptHandler:
 43257                           	opt callstack 0
 43258                           
 43259 ;; *************** function _TMR6_Initialize *****************
 43260 ;; Defined at:
 43261 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 43262 ;; Parameters:    Size  Location     Type
 43263 ;;		None
 43264 ;; Auto vars:     Size  Location     Type
 43265 ;;		None
 43266 ;; Return value:  Size  Location     Type
 43267 ;;                  1  [STACK] void 
 43268 ;; Registers used:
 43269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43270 ;; Tracked objects:
 43271 ;;		On entry : 3F/39
 43272 ;;		On exit  : 0/0
 43273 ;;		Unchanged: 0/0
 43274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43279 ;;Total ram usage:        0 bytes
 43280 ;; Hardware stack levels used:    1
 43281 ;; Hardware stack levels required when called:   16
 43282 ;; This function calls:
 43283 ;;		_TMR6_SetInterruptHandler
 43284 ;; This function is called by:
 43285 ;;		_SYSTEM_Initialize
 43286 ;; This function uses a reentrant model
 43287 ;;
 43288                           
 43289                           	psect	text159
 43290  001C2C                     __ptext159:
 43291                           	opt callstack 0
 43292  001C2C                     _TMR6_Initialize:
 43293                           	opt callstack 13
 43294                           
 43295                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 43296                           
 43297                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43298                           ;incstack = 0
 43299  001C2C  0E01               	movlw	1
 43300  001C2E  6E96               	movwf	150,c	;volatile
 43301                           
 43302                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 43303  001C30  6A95               	clrf	149,c	;volatile
 43304                           
 43305                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 43306  001C32  6A97               	clrf	151,c	;volatile
 43307                           
 43308                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 43309  001C34  0E7C               	movlw	124
 43310  001C36  6E93               	movwf	147,c	;volatile
 43311                           
 43312                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 43313  001C38  6A92               	clrf	146,c	;volatile
 43314                           
 43315                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 43316  001C3A  0139               	movlb	57	; () banked
 43317  001C3C  91A9               	bcf	169,0,b	;volatile
 43318                           
 43319                           ; BSR set to: 57
 43320                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 43321  001C3E  8199               	bsf	153,0,b	;volatile
 43322                           
 43323                           ; BSR set to: 57
 43324                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 43325  001C40  0E52               	movlw	low _TMR6_DefaultInterruptHandler
 43326  001C42  6EE6               	movwf	postinc1,c
 43327  001C44  0E14               	movlw	high _TMR6_DefaultInterruptHandler
 43328  001C46  6EE6               	movwf	postinc1,c
 43329  001C48  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 43330  001C4A  6EE6               	movwf	postinc1,c
 43331  001C4C  EC8F  F00E         	call	_TMR6_SetInterruptHandler	;wreg free
 43332                           
 43333                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 43334  001C50  0EE0               	movlw	224
 43335  001C52  6E94               	movwf	148,c	;volatile
 43336                           
 43337                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43338  001C54  0012               	return		;funcret
 43339  001C56                     __end_of_TMR6_Initialize:
 43340                           	opt callstack 0
 43341                           
 43342 ;; *************** function _TMR6_SetInterruptHandler *****************
 43343 ;; Defined at:
 43344 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 43345 ;; Parameters:    Size  Location     Type
 43346 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43347 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 43348 ;; Auto vars:     Size  Location     Type
 43349 ;;		None
 43350 ;; Return value:  Size  Location     Type
 43351 ;;                  1  [STACK] void 
 43352 ;; Registers used:
 43353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43354 ;; Tracked objects:
 43355 ;;		On entry : 3F/39
 43356 ;;		On exit  : 0/0
 43357 ;;		Unchanged: 0/0
 43358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43363 ;;Total ram usage:        0 bytes
 43364 ;; Hardware stack levels used:    1
 43365 ;; Hardware stack levels required when called:   15
 43366 ;; This function calls:
 43367 ;;		Nothing
 43368 ;; This function is called by:
 43369 ;;		_TMR6_Initialize
 43370 ;; This function uses a reentrant model
 43371 ;;
 43372                           
 43373                           	psect	text160
 43374  001D1E                     __ptext160:
 43375                           	opt callstack 0
 43376  001D1E                     _TMR6_SetInterruptHandler:
 43377                           	opt callstack 13
 43378                           
 43379                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 43380                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43381                           
 43382                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43383                           ;incstack = 0
 43384  001D1E  50E1               	movf	fsr1l,w,c
 43385  001D20  0FFD               	addlw	-3
 43386  001D22  6ED9               	movwf	fsr2l,c
 43387  001D24  50E2               	movf	fsr1h,w,c
 43388  001D26  6EDA               	movwf	fsr2h,c
 43389  001D28  0EFF               	movlw	255
 43390  001D2A  22DA               	addwfc	fsr2h,f,c
 43391  001D2C  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 43392  001D32  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 43393  001D38  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 43394                           
 43395                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 43396  001D3E  52E5               	movf	postdec1,f,c
 43397  001D40  52E5               	movf	postdec1,f,c
 43398  001D42  52E5               	movf	postdec1,f,c
 43399  001D44  0012               	return		;funcret
 43400  001D46                     __end_of_TMR6_SetInterruptHandler:
 43401                           	opt callstack 0
 43402                           
 43403 ;; *************** function _TMR5_Initialize *****************
 43404 ;; Defined at:
 43405 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 43406 ;; Parameters:    Size  Location     Type
 43407 ;;		None
 43408 ;; Auto vars:     Size  Location     Type
 43409 ;;		None
 43410 ;; Return value:  Size  Location     Type
 43411 ;;                  1  [STACK] void 
 43412 ;; Registers used:
 43413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 43414 ;; Tracked objects:
 43415 ;;		On entry : 0/39
 43416 ;;		On exit  : 0/0
 43417 ;;		Unchanged: 0/0
 43418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43423 ;;Total ram usage:        0 bytes
 43424 ;; Hardware stack levels used:    1
 43425 ;; Hardware stack levels required when called:   16
 43426 ;; This function calls:
 43427 ;;		_TMR5_SetInterruptHandler
 43428 ;; This function is called by:
 43429 ;;		_SYSTEM_Initialize
 43430 ;; This function uses a reentrant model
 43431 ;;
 43432                           
 43433                           	psect	text161
 43434  00157A                     __ptext161:
 43435                           	opt callstack 0
 43436  00157A                     _TMR5_Initialize:
 43437                           	opt callstack 13
 43438                           
 43439                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 43440                           
 43441                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43442                           ;incstack = 0
 43443  00157A  6A9B               	clrf	155,c	;volatile
 43444                           
 43445                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 43446  00157C  6A9C               	clrf	156,c	;volatile
 43447                           
 43448                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 43449  00157E  0E01               	movlw	1
 43450  001580  6E9D               	movwf	157,c	;volatile
 43451                           
 43452                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 43453  001582  0E63               	movlw	99
 43454  001584  6E99               	movwf	153,c	;volatile
 43455                           
 43456                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 43457  001586  0EC0               	movlw	192
 43458  001588  6E98               	movwf	152,c	;volatile
 43459                           
 43460                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 43461  00158A  5098               	movf	152,w,c	;volatile
 43462  00158C  006F FE64  F02A    	movff	16281,btemp	;volatile
 43463  001592  6A2B               	clrf	(btemp+1)^0,c
 43464  001594  0060  F0A8  F02B   	movff	btemp,btemp+1
 43465  00159A  6A2A               	clrf	btemp^0,c
 43466  00159C  102A               	iorwf	btemp^0,w,c
 43467  00159E  0100               	movlb	0	; () banked
 43468  0015A0  6FCE               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 43469  0015A2  502B               	movf	(btemp+1)^0,w,c
 43470  0015A4  6FCF               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 43471                           
 43472                           ; BSR set to: 0
 43473                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 43474  0015A6  0139               	movlb	57	; () banked
 43475  0015A8  9DA8               	bcf	168,6,b	;volatile
 43476                           
 43477                           ; BSR set to: 57
 43478                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 43479  0015AA  8D98               	bsf	152,6,b	;volatile
 43480                           
 43481                           ; BSR set to: 57
 43482                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 43483  0015AC  0E48               	movlw	low _TMR5_DefaultInterruptHandler
 43484  0015AE  6EE6               	movwf	postinc1,c
 43485  0015B0  0E19               	movlw	high _TMR5_DefaultInterruptHandler
 43486  0015B2  6EE6               	movwf	postinc1,c
 43487  0015B4  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 43488  0015B6  6EE6               	movwf	postinc1,c
 43489  0015B8  ECA3  F00E         	call	_TMR5_SetInterruptHandler	;wreg free
 43490                           
 43491                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 43492  0015BC  0E31               	movlw	49
 43493  0015BE  6E9A               	movwf	154,c	;volatile
 43494                           
 43495                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43496  0015C0  0012               	return		;funcret
 43497  0015C2                     __end_of_TMR5_Initialize:
 43498                           	opt callstack 0
 43499                           
 43500 ;; *************** function _TMR5_SetInterruptHandler *****************
 43501 ;; Defined at:
 43502 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 43503 ;; Parameters:    Size  Location     Type
 43504 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43505 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 43506 ;; Auto vars:     Size  Location     Type
 43507 ;;		None
 43508 ;; Return value:  Size  Location     Type
 43509 ;;                  1  [STACK] void 
 43510 ;; Registers used:
 43511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43512 ;; Tracked objects:
 43513 ;;		On entry : 3F/39
 43514 ;;		On exit  : 0/0
 43515 ;;		Unchanged: 0/0
 43516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43521 ;;Total ram usage:        0 bytes
 43522 ;; Hardware stack levels used:    1
 43523 ;; Hardware stack levels required when called:   15
 43524 ;; This function calls:
 43525 ;;		Nothing
 43526 ;; This function is called by:
 43527 ;;		_TMR5_Initialize
 43528 ;; This function uses a reentrant model
 43529 ;;
 43530                           
 43531                           	psect	text162
 43532  001D46                     __ptext162:
 43533                           	opt callstack 0
 43534  001D46                     _TMR5_SetInterruptHandler:
 43535                           	opt callstack 13
 43536                           
 43537                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 43538                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43539                           
 43540                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43541                           ;incstack = 0
 43542  001D46  50E1               	movf	fsr1l,w,c
 43543  001D48  0FFD               	addlw	-3
 43544  001D4A  6ED9               	movwf	fsr2l,c
 43545  001D4C  50E2               	movf	fsr1h,w,c
 43546  001D4E  6EDA               	movwf	fsr2h,c
 43547  001D50  0EFF               	movlw	255
 43548  001D52  22DA               	addwfc	fsr2h,f,c
 43549  001D54  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 43550  001D5A  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 43551  001D60  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 43552                           
 43553                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 43554  001D66  52E5               	movf	postdec1,f,c
 43555  001D68  52E5               	movf	postdec1,f,c
 43556  001D6A  52E5               	movf	postdec1,f,c
 43557  001D6C  0012               	return		;funcret
 43558  001D6E                     __end_of_TMR5_SetInterruptHandler:
 43559                           	opt callstack 0
 43560                           
 43561 ;; *************** function _TMR3_Initialize *****************
 43562 ;; Defined at:
 43563 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 43564 ;; Parameters:    Size  Location     Type
 43565 ;;		None
 43566 ;; Auto vars:     Size  Location     Type
 43567 ;;		None
 43568 ;; Return value:  Size  Location     Type
 43569 ;;                  1  [STACK] void 
 43570 ;; Registers used:
 43571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 43572 ;; Tracked objects:
 43573 ;;		On entry : 0/39
 43574 ;;		On exit  : 0/0
 43575 ;;		Unchanged: 0/0
 43576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43581 ;;Total ram usage:        0 bytes
 43582 ;; Hardware stack levels used:    1
 43583 ;; Hardware stack levels required when called:   16
 43584 ;; This function calls:
 43585 ;;		_TMR3_SetInterruptHandler
 43586 ;; This function is called by:
 43587 ;;		_SYSTEM_Initialize
 43588 ;; This function uses a reentrant model
 43589 ;;
 43590                           
 43591                           	psect	text163
 43592  0015C2                     __ptext163:
 43593                           	opt callstack 0
 43594  0015C2                     _TMR3_Initialize:
 43595                           	opt callstack 13
 43596                           
 43597                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 43598                           
 43599                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43600                           ;incstack = 0
 43601  0015C2  6AA7               	clrf	167,c	;volatile
 43602                           
 43603                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 43604  0015C4  6AA8               	clrf	168,c	;volatile
 43605                           
 43606                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 43607  0015C6  0E01               	movlw	1
 43608  0015C8  6EA9               	movwf	169,c	;volatile
 43609                           
 43610                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 43611  0015CA  0E3C               	movlw	60
 43612  0015CC  6EA5               	movwf	165,c	;volatile
 43613                           
 43614                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 43615  0015CE  0EB0               	movlw	176
 43616  0015D0  6EA4               	movwf	164,c	;volatile
 43617                           
 43618                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 43619  0015D2  50A4               	movf	164,w,c	;volatile
 43620  0015D4  006F FE94  F02A    	movff	16293,btemp	;volatile
 43621  0015DA  6A2B               	clrf	(btemp+1)^0,c
 43622  0015DC  0060  F0A8  F02B   	movff	btemp,btemp+1
 43623  0015E2  6A2A               	clrf	btemp^0,c
 43624  0015E4  102A               	iorwf	btemp^0,w,c
 43625  0015E6  0100               	movlb	0	; () banked
 43626  0015E8  6FCA               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 43627  0015EA  502B               	movf	(btemp+1)^0,w,c
 43628  0015EC  6FCB               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 43629                           
 43630                           ; BSR set to: 0
 43631                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 43632  0015EE  0139               	movlb	57	; () banked
 43633  0015F0  9DA6               	bcf	166,6,b	;volatile
 43634                           
 43635                           ; BSR set to: 57
 43636                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 43637  0015F2  8D96               	bsf	150,6,b	;volatile
 43638                           
 43639                           ; BSR set to: 57
 43640                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 43641  0015F4  0EDE               	movlw	low _TMR3_DefaultInterruptHandler
 43642  0015F6  6EE6               	movwf	postinc1,c
 43643  0015F8  0E22               	movlw	high _TMR3_DefaultInterruptHandler
 43644  0015FA  6EE6               	movwf	postinc1,c
 43645  0015FC  0E00               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 43646  0015FE  6EE6               	movwf	postinc1,c
 43647  001600  ECB7  F00E         	call	_TMR3_SetInterruptHandler	;wreg free
 43648                           
 43649                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 43650  001604  0E31               	movlw	49
 43651  001606  6EA6               	movwf	166,c	;volatile
 43652                           
 43653                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43654  001608  0012               	return		;funcret
 43655  00160A                     __end_of_TMR3_Initialize:
 43656                           	opt callstack 0
 43657                           
 43658 ;; *************** function _TMR3_SetInterruptHandler *****************
 43659 ;; Defined at:
 43660 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 43661 ;; Parameters:    Size  Location     Type
 43662 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43663 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 43664 ;; Auto vars:     Size  Location     Type
 43665 ;;		None
 43666 ;; Return value:  Size  Location     Type
 43667 ;;                  1  [STACK] void 
 43668 ;; Registers used:
 43669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43670 ;; Tracked objects:
 43671 ;;		On entry : 0/1
 43672 ;;		On exit  : 0/0
 43673 ;;		Unchanged: 0/0
 43674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43679 ;;Total ram usage:        0 bytes
 43680 ;; Hardware stack levels used:    1
 43681 ;; Hardware stack levels required when called:   15
 43682 ;; This function calls:
 43683 ;;		Nothing
 43684 ;; This function is called by:
 43685 ;;		_TMR3_Initialize
 43686 ;;		_init_bsoc
 43687 ;; This function uses a reentrant model
 43688 ;;
 43689                           
 43690                           	psect	text164
 43691  001D6E                     __ptext164:
 43692                           	opt callstack 0
 43693  001D6E                     _TMR3_SetInterruptHandler:
 43694                           	opt callstack 14
 43695                           
 43696                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 43697                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43698                           
 43699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43700                           ;incstack = 0
 43701  001D6E  50E1               	movf	fsr1l,w,c
 43702  001D70  0FFD               	addlw	-3
 43703  001D72  6ED9               	movwf	fsr2l,c
 43704  001D74  50E2               	movf	fsr1h,w,c
 43705  001D76  6EDA               	movwf	fsr2h,c
 43706  001D78  0EFF               	movlw	255
 43707  001D7A  22DA               	addwfc	fsr2h,f,c
 43708  001D7C  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 43709  001D82  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 43710  001D88  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 43711                           
 43712                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 43713  001D8E  52E5               	movf	postdec1,f,c
 43714  001D90  52E5               	movf	postdec1,f,c
 43715  001D92  52E5               	movf	postdec1,f,c
 43716  001D94  0012               	return		;funcret
 43717  001D96                     __end_of_TMR3_SetInterruptHandler:
 43718                           	opt callstack 0
 43719                           
 43720 ;; *************** function _TMR2_Initialize *****************
 43721 ;; Defined at:
 43722 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 43723 ;; Parameters:    Size  Location     Type
 43724 ;;		None
 43725 ;; Auto vars:     Size  Location     Type
 43726 ;;		None
 43727 ;; Return value:  Size  Location     Type
 43728 ;;                  1  [STACK] void 
 43729 ;; Registers used:
 43730 ;;		wreg, status,2
 43731 ;; Tracked objects:
 43732 ;;		On entry : 0/0
 43733 ;;		On exit  : 3F/39
 43734 ;;		Unchanged: 0/0
 43735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43740 ;;Total ram usage:        0 bytes
 43741 ;; Hardware stack levels used:    1
 43742 ;; Hardware stack levels required when called:   15
 43743 ;; This function calls:
 43744 ;;		Nothing
 43745 ;; This function is called by:
 43746 ;;		_SYSTEM_Initialize
 43747 ;; This function uses a reentrant model
 43748 ;;
 43749                           
 43750                           	psect	text165
 43751  00212E                     __ptext165:
 43752                           	opt callstack 0
 43753  00212E                     _TMR2_Initialize:
 43754                           	opt callstack 14
 43755                           
 43756                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 43757                           
 43758                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43759                           ;incstack = 0
 43760  00212E  0E01               	movlw	1
 43761  002130  6EAE               	movwf	174,c	;volatile
 43762                           
 43763                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 43764  002132  6AAD               	clrf	173,c	;volatile
 43765                           
 43766                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 43767  002134  6AAF               	clrf	175,c	;volatile
 43768                           
 43769                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 43770  002136  0E63               	movlw	99
 43771  002138  6EAB               	movwf	171,c	;volatile
 43772                           
 43773                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 43774  00213A  6AAA               	clrf	170,c	;volatile
 43775                           
 43776                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 43777  00213C  0139               	movlb	57	; () banked
 43778  00213E  95A4               	bcf	164,2,b	;volatile
 43779                           
 43780                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 43781  002140  0EC0               	movlw	192
 43782  002142  6EAC               	movwf	172,c	;volatile
 43783                           
 43784                           ; BSR set to: 57
 43785                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43786  002144  0012               	return		;funcret
 43787  002146                     __end_of_TMR2_Initialize:
 43788                           	opt callstack 0
 43789                           
 43790 ;; *************** function _SPI1_Initialize *****************
 43791 ;; Defined at:
 43792 ;;		line 64 in file "mcc_generated_files/spi1.c"
 43793 ;; Parameters:    Size  Location     Type
 43794 ;;		None
 43795 ;; Auto vars:     Size  Location     Type
 43796 ;;		None
 43797 ;; Return value:  Size  Location     Type
 43798 ;;                  1  [STACK] void 
 43799 ;; Registers used:
 43800 ;;		wreg, status,2
 43801 ;; Tracked objects:
 43802 ;;		On entry : 3F/39
 43803 ;;		On exit  : 3F/3D
 43804 ;;		Unchanged: 0/0
 43805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43810 ;;Total ram usage:        0 bytes
 43811 ;; Hardware stack levels used:    1
 43812 ;; Hardware stack levels required when called:   15
 43813 ;; This function calls:
 43814 ;;		Nothing
 43815 ;; This function is called by:
 43816 ;;		_SYSTEM_Initialize
 43817 ;; This function uses a reentrant model
 43818 ;;
 43819                           
 43820                           	psect	text166
 43821  002146                     __ptext166:
 43822                           	opt callstack 0
 43823  002146                     _SPI1_Initialize:
 43824                           	opt callstack 14
 43825                           
 43826                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 43827                           
 43828                           ; BSR set to: 57
 43829                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43830                           ;incstack = 0
 43831  002146  0E40               	movlw	64
 43832  002148  013D               	movlb	61	; () banked
 43833  00214A  6F15               	movwf	21,b	;volatile
 43834                           
 43835                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 43836  00214C  0E03               	movlw	3
 43837  00214E  6F16               	movwf	22,b	;volatile
 43838                           
 43839                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 43840  002150  0E4F               	movlw	79
 43841  002152  6F19               	movwf	25,b	;volatile
 43842                           
 43843                           ; BSR set to: 61
 43844                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 43845  002154  6B1C               	clrf	28,b	;volatile
 43846                           
 43847                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 43848  002156  0E83               	movlw	131
 43849  002158  6F14               	movwf	20,b	;volatile
 43850                           
 43851                           ; BSR set to: 61
 43852                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43853  00215A  0012               	return		;funcret
 43854  00215C                     __end_of_SPI1_Initialize:
 43855                           	opt callstack 0
 43856                           
 43857 ;; *************** function _PWM8_Initialize *****************
 43858 ;; Defined at:
 43859 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 43860 ;; Parameters:    Size  Location     Type
 43861 ;;		None
 43862 ;; Auto vars:     Size  Location     Type
 43863 ;;		None
 43864 ;; Return value:  Size  Location     Type
 43865 ;;                  1  [STACK] void 
 43866 ;; Registers used:
 43867 ;;		wreg, status,2
 43868 ;; Tracked objects:
 43869 ;;		On entry : 3F/39
 43870 ;;		On exit  : 3F/3F
 43871 ;;		Unchanged: 0/0
 43872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43877 ;;Total ram usage:        0 bytes
 43878 ;; Hardware stack levels used:    1
 43879 ;; Hardware stack levels required when called:   15
 43880 ;; This function calls:
 43881 ;;		Nothing
 43882 ;; This function is called by:
 43883 ;;		_SYSTEM_Initialize
 43884 ;; This function uses a reentrant model
 43885 ;;
 43886                           
 43887                           	psect	text167
 43888  00215C                     __ptext167:
 43889                           	opt callstack 0
 43890  00215C                     _PWM8_Initialize:
 43891                           	opt callstack 14
 43892                           
 43893                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 43894                           
 43895                           ; BSR set to: 61
 43896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43897                           ;incstack = 0
 43898  00215C  0E80               	movlw	128
 43899  00215E  6E62               	movwf	98,c	;volatile
 43900                           
 43901                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 43902  002160  6A61               	clrf	97,c	;volatile
 43903                           
 43904                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 43905  002162  0E40               	movlw	64
 43906  002164  6E60               	movwf	96,c	;volatile
 43907                           
 43908                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 43909  002166  013F               	movlb	63	; () banked
 43910  002168  515F               	movf	95,w,b	;volatile
 43911  00216A  0B3F               	andlw	-193
 43912  00216C  0940               	iorlw	64
 43913  00216E  6F5F               	movwf	95,b	;volatile
 43914                           
 43915                           ; BSR set to: 63
 43916                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43917  002170  0012               	return		;funcret
 43918  002172                     __end_of_PWM8_Initialize:
 43919                           	opt callstack 0
 43920                           
 43921 ;; *************** function _PMD_Initialize *****************
 43922 ;; Defined at:
 43923 ;;		line 91 in file "mcc_generated_files/mcc.c"
 43924 ;; Parameters:    Size  Location     Type
 43925 ;;		None
 43926 ;; Auto vars:     Size  Location     Type
 43927 ;;		None
 43928 ;; Return value:  Size  Location     Type
 43929 ;;                  1  [STACK] void 
 43930 ;; Registers used:
 43931 ;;		None
 43932 ;; Tracked objects:
 43933 ;;		On entry : 3F/39
 43934 ;;		On exit  : 3F/39
 43935 ;;		Unchanged: 0/0
 43936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43941 ;;Total ram usage:        0 bytes
 43942 ;; Hardware stack levels used:    1
 43943 ;; Hardware stack levels required when called:   15
 43944 ;; This function calls:
 43945 ;;		Nothing
 43946 ;; This function is called by:
 43947 ;;		_SYSTEM_Initialize
 43948 ;; This function uses a reentrant model
 43949 ;;
 43950                           
 43951                           	psect	text168
 43952  002188                     __ptext168:
 43953                           	opt callstack 0
 43954  002188                     _PMD_Initialize:
 43955                           	opt callstack 14
 43956                           
 43957                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 43958                           
 43959                           ; BSR set to: 63
 43960                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43961                           ;incstack = 0
 43962  002188  0139               	movlb	57	; () banked
 43963  00218A  6BC0               	clrf	192,b	;volatile
 43964                           
 43965                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 43966  00218C  6BC1               	clrf	193,b	;volatile
 43967                           
 43968                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 43969  00218E  6BC2               	clrf	194,b	;volatile
 43970                           
 43971                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 43972  002190  6BC3               	clrf	195,b	;volatile
 43973                           
 43974                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 43975  002192  6BC4               	clrf	196,b	;volatile
 43976                           
 43977                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 43978  002194  6BC5               	clrf	197,b	;volatile
 43979                           
 43980                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 43981  002196  6BC6               	clrf	198,b	;volatile
 43982                           
 43983                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 43984  002198  6BC7               	clrf	199,b	;volatile
 43985                           
 43986                           ; BSR set to: 57
 43987                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 43988  00219A  0012               	return		;funcret
 43989  00219C                     __end_of_PMD_Initialize:
 43990                           	opt callstack 0
 43991                           
 43992 ;; *************** function _PIN_MANAGER_Initialize *****************
 43993 ;; Defined at:
 43994 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 43995 ;; Parameters:    Size  Location     Type
 43996 ;;		None
 43997 ;; Auto vars:     Size  Location     Type
 43998 ;;		None
 43999 ;; Return value:  Size  Location     Type
 44000 ;;                  1  [STACK] void 
 44001 ;; Registers used:
 44002 ;;		wreg, status,2
 44003 ;; Tracked objects:
 44004 ;;		On entry : 3F/39
 44005 ;;		On exit  : 3F/3A
 44006 ;;		Unchanged: 0/0
 44007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44012 ;;Total ram usage:        0 bytes
 44013 ;; Hardware stack levels used:    1
 44014 ;; Hardware stack levels required when called:   15
 44015 ;; This function calls:
 44016 ;;		Nothing
 44017 ;; This function is called by:
 44018 ;;		_SYSTEM_Initialize
 44019 ;; This function uses a reentrant model
 44020 ;;
 44021                           
 44022                           	psect	text169
 44023  0007B6                     __ptext169:
 44024                           	opt callstack 0
 44025  0007B6                     _PIN_MANAGER_Initialize:
 44026                           	opt callstack 14
 44027                           
 44028                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 44029                           
 44030                           ; BSR set to: 57
 44031                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44032                           ;incstack = 0
 44033  0007B6  0E07               	movlw	7
 44034  0007B8  6EBE               	movwf	190,c	;volatile
 44035                           
 44036                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 44037  0007BA  6ABD               	clrf	189,c	;volatile
 44038                           
 44039                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 44040  0007BC  6ABA               	clrf	186,c	;volatile
 44041                           
 44042                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 44043  0007BE  0E23               	movlw	35
 44044  0007C0  6EBF               	movwf	191,c	;volatile
 44045                           
 44046                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 44047  0007C2  6ABB               	clrf	187,c	;volatile
 44048                           
 44049                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 44050  0007C4  0E07               	movlw	7
 44051  0007C6  6EBC               	movwf	188,c	;volatile
 44052                           
 44053                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 44054  0007C8  6AC6               	clrf	198,c	;volatile
 44055                           
 44056                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 44057  0007CA  0E0C               	movlw	12
 44058  0007CC  6EC7               	movwf	199,c	;volatile
 44059                           
 44060                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 44061  0007CE  68C2               	setf	194,c	;volatile
 44062                           
 44063                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 44064  0007D0  0EBF               	movlw	191
 44065  0007D2  6EC3               	movwf	195,c	;volatile
 44066                           
 44067                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 44068  0007D4  0E90               	movlw	144
 44069  0007D6  6EC4               	movwf	196,c	;volatile
 44070                           
 44071                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 44072  0007D8  0E0C               	movlw	12
 44073  0007DA  6EC5               	movwf	197,c	;volatile
 44074                           
 44075                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 44076  0007DC  013A               	movlb	58	; () banked
 44077  0007DE  6B70               	clrf	112,b	;volatile
 44078                           
 44079                           ; BSR set to: 58
 44080                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 44081  0007E0  6B60               	clrf	96,b	;volatile
 44082                           
 44083                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 44084  0007E2  0E3C               	movlw	60
 44085  0007E4  6F50               	movwf	80,b	;volatile
 44086                           
 44087                           ; BSR set to: 58
 44088                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 44089  0007E6  6B80               	clrf	128,b	;volatile
 44090                           
 44091                           ; BSR set to: 58
 44092                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 44093  0007E8  6B90               	clrf	144,b	;volatile
 44094                           
 44095                           ; BSR set to: 58
 44096                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 44097  0007EA  6940               	setf	64,b	;volatile
 44098                           
 44099                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 44100  0007EC  0E0C               	movlw	12
 44101  0007EE  6F71               	movwf	113,b	;volatile
 44102                           
 44103                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 44104  0007F0  0E0C               	movlw	12
 44105  0007F2  6F91               	movwf	145,b	;volatile
 44106                           
 44107                           ; BSR set to: 58
 44108                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 44109  0007F4  6B81               	clrf	129,b	;volatile
 44110                           
 44111                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 44112  0007F6  0E83               	movlw	131
 44113  0007F8  6F51               	movwf	81,b	;volatile
 44114                           
 44115                           ; BSR set to: 58
 44116                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 44117  0007FA  6B41               	clrf	65,b	;volatile
 44118                           
 44119                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 44120  0007FC  0E97               	movlw	151
 44121  0007FE  6F61               	movwf	97,b	;volatile
 44122                           
 44123                           ; BSR set to: 58
 44124                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 44125  000800  6B82               	clrf	130,b	;volatile
 44126                           
 44127                           ; BSR set to: 58
 44128                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 44129  000802  6B92               	clrf	146,b	;volatile
 44130                           
 44131                           ; BSR set to: 58
 44132                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 44133  000804  6B42               	clrf	66,b	;volatile
 44134                           
 44135                           ; BSR set to: 58
 44136                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 44137  000806  6B52               	clrf	82,b	;volatile
 44138                           
 44139                           ; BSR set to: 58
 44140                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 44141  000808  6B62               	clrf	98,b	;volatile
 44142                           
 44143                           ; BSR set to: 58
 44144                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 44145  00080A  6B72               	clrf	114,b	;volatile
 44146                           
 44147                           ; BSR set to: 58
 44148                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 44149  00080C  6943               	setf	67,b	;volatile
 44150                           
 44151                           ; BSR set to: 58
 44152                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 44153  00080E  6953               	setf	83,b	;volatile
 44154                           
 44155                           ; BSR set to: 58
 44156                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 44157  000810  6963               	setf	99,b	;volatile
 44158                           
 44159                           ; BSR set to: 58
 44160                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 44161  000812  6973               	setf	115,b	;volatile
 44162                           
 44163                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 44164  000814  0E07               	movlw	7
 44165  000816  6F83               	movwf	131,b	;volatile
 44166                           
 44167                           ; BSR set to: 58
 44168                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 44169  000818  6993               	setf	147,b	;volatile
 44170                           
 44171                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 44172  00081A  0E0F               	movlw	15
 44173  00081C  6FE8               	movwf	232,b	;volatile
 44174                           
 44175                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 44176  00081E  0E13               	movlw	19
 44177  000820  6FDE               	movwf	222,b	;volatile
 44178                           
 44179                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 44180  000822  0E16               	movlw	22
 44181  000824  6F0E               	movwf	14,b	;volatile
 44182                           
 44183                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 44184  000826  0E1E               	movlw	30
 44185  000828  6F13               	movwf	19,b	;volatile
 44186                           
 44187                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 44188  00082A  0E08               	movlw	8
 44189  00082C  6FC0               	movwf	192,b	;volatile
 44190                           
 44191                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 44192  00082E  0E10               	movlw	16
 44193  000830  6F19               	movwf	25,b	;volatile
 44194                           
 44195                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 44196  000832  0E09               	movlw	9
 44197  000834  6FC1               	movwf	193,b	;volatile
 44198                           
 44199                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 44200  000836  0E1F               	movlw	31
 44201  000838  6F15               	movwf	21,b	;volatile
 44202                           
 44203                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 44204  00083A  0E13               	movlw	19
 44205  00083C  6F16               	movwf	22,b	;volatile
 44206                           
 44207                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 44208  00083E  0E17               	movlw	23
 44209  000840  6FE5               	movwf	229,b	;volatile
 44210                           
 44211                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 44212  000842  0E14               	movlw	20
 44213  000844  6FDF               	movwf	223,b	;volatile
 44214                           
 44215                           ; BSR set to: 58
 44216                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 44217  000846  0012               	return		;funcret
 44218  000848                     __end_of_PIN_MANAGER_Initialize:
 44219                           	opt callstack 0
 44220                           
 44221 ;; *************** function _OSCILLATOR_Initialize *****************
 44222 ;; Defined at:
 44223 ;;		line 73 in file "mcc_generated_files/mcc.c"
 44224 ;; Parameters:    Size  Location     Type
 44225 ;;		None
 44226 ;; Auto vars:     Size  Location     Type
 44227 ;;		None
 44228 ;; Return value:  Size  Location     Type
 44229 ;;                  1  [STACK] void 
 44230 ;; Registers used:
 44231 ;;		wreg, status,2
 44232 ;; Tracked objects:
 44233 ;;		On entry : 3F/3A
 44234 ;;		On exit  : 3F/39
 44235 ;;		Unchanged: 0/0
 44236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44241 ;;Total ram usage:        0 bytes
 44242 ;; Hardware stack levels used:    1
 44243 ;; Hardware stack levels required when called:   15
 44244 ;; This function calls:
 44245 ;;		Nothing
 44246 ;; This function is called by:
 44247 ;;		_SYSTEM_Initialize
 44248 ;; This function uses a reentrant model
 44249 ;;
 44250                           
 44251                           	psect	text170
 44252  002172                     __ptext170:
 44253                           	opt callstack 0
 44254  002172                     _OSCILLATOR_Initialize:
 44255                           	opt callstack 14
 44256                           
 44257                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 44258                           
 44259                           ; BSR set to: 58
 44260                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44261                           ;incstack = 0
 44262  002172  0E20               	movlw	32
 44263  002174  0139               	movlb	57	; () banked
 44264  002176  6FD9               	movwf	217,b	;volatile
 44265                           
 44266                           ; BSR set to: 57
 44267                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 44268  002178  6BDB               	clrf	219,b	;volatile
 44269                           
 44270                           ; BSR set to: 57
 44271                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 44272  00217A  6BDD               	clrf	221,b	;volatile
 44273                           
 44274                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 44275  00217C  0E02               	movlw	2
 44276  00217E  6FDF               	movwf	223,b	;volatile
 44277                           
 44278                           ; BSR set to: 57
 44279                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 44280  002180  6BDE               	clrf	222,b	;volatile
 44281  002182                     l171:
 44282                           
 44283                           ; BSR set to: 57
 44284                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 44285  002182  B1DC               	btfsc	220,0,b	;volatile
 44286  002184  0012               	return	
 44287  002186  D7FD               	goto	l171
 44288  002188                     __end_of_OSCILLATOR_Initialize:
 44289                           	opt callstack 0
 44290                           
 44291 ;; *************** function _INTERRUPT_Initialize *****************
 44292 ;; Defined at:
 44293 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 44294 ;; Parameters:    Size  Location     Type
 44295 ;;		None
 44296 ;; Auto vars:     Size  Location     Type
 44297 ;;  state           1  [STACK] _Bool 
 44298 ;; Return value:  Size  Location     Type
 44299 ;;                  1  [STACK] void 
 44300 ;; Registers used:
 44301 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 44302 ;; Tracked objects:
 44303 ;;		On entry : 0/0
 44304 ;;		On exit  : 3F/39
 44305 ;;		Unchanged: 0/0
 44306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44311 ;;Total ram usage:        0 bytes
 44312 ;; Hardware stack levels used:    1
 44313 ;; Hardware stack levels required when called:   15
 44314 ;; This function calls:
 44315 ;;		Nothing
 44316 ;; This function is called by:
 44317 ;;		_SYSTEM_Initialize
 44318 ;; This function uses a reentrant model
 44319 ;;
 44320                           
 44321                           	psect	text171
 44322  000F4C                     __ptext171:
 44323                           	opt callstack 0
 44324  000F4C                     _INTERRUPT_Initialize:
 44325                           	opt callstack 0
 44326                           
 44327                           ; BSR set to: 57
 44328                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44329  000F4C  52E6               	movf	postinc1,f,c
 44330                           
 44331                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 44332                           
 44333                           ;incstack = 0
 44334  000F4E  8AD2               	bsf	210,5,c	;volatile
 44335                           
 44336                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 44337  000F50  AED2               	btfss	16338,7,c	;volatile
 44338  000F52  D003               	goto	u12370
 44339  000F54  6A35               	clrf	(btemp+11)^0,c
 44340  000F56  2A35               	incf	(btemp+11)^0,f,c
 44341  000F58  D001               	goto	u12388
 44342  000F5A                     u12370:
 44343  000F5A  6A35               	clrf	(btemp+11)^0,c
 44344  000F5C                     u12388:
 44345                           
 44346                           ;stkvar	_state @ sp[(-1)+0]
 44347  000F5C  0EFF               	movlw	-1
 44348  000F5E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 44349                           
 44350                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 44351  000F64  9ED2               	bcf	16338,7,c	;volatile
 44352                           
 44353                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 44354  000F66  0E55               	movlw	85
 44355  000F68  6ED4               	movwf	212,c	;volatile
 44356                           
 44357                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 44358  000F6A  0EAA               	movlw	170
 44359  000F6C  6ED4               	movwf	212,c	;volatile
 44360                           
 44361                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 44362  000F6E  90D4               	bcf	212,0,c	;volatile
 44363                           
 44364                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 44365  000F70  0138               	movlb	56	; () banked
 44366  000F72  6B9F               	clrf	159,b	;volatile
 44367                           
 44368                           ; BSR set to: 56
 44369                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 44370  000F74  6B9E               	clrf	158,b	;volatile
 44371                           
 44372                           ; BSR set to: 56
 44373                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 44374  000F76  0E08               	movlw	8
 44375  000F78  6F9D               	movwf	157,b	;volatile
 44376                           
 44377                           ; BSR set to: 56
 44378                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 44379  000F7A  0E55               	movlw	85
 44380  000F7C  6ED4               	movwf	212,c	;volatile
 44381                           
 44382                           ; BSR set to: 56
 44383                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 44384  000F7E  0EAA               	movlw	170
 44385  000F80  6ED4               	movwf	212,c	;volatile
 44386                           
 44387                           ; BSR set to: 56
 44388                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 44389  000F82  80D4               	bsf	212,0,c	;volatile
 44390                           
 44391                           ; BSR set to: 56
 44392                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 44393                           ;stkvar	_state @ sp[(-1)+0]
 44394  000F84  0EFF               	movlw	-1
 44395  000F86  B0E3               	btfsc	plusw1,0,c
 44396  000F88  D002               	bra	u12395
 44397  000F8A  9ED2               	bcf	16338,7,c	;volatile
 44398  000F8C  D001               	bra	u12396
 44399  000F8E                     u12395:
 44400  000F8E  8ED2               	bsf	16338,7,c	;volatile
 44401  000F90                     u12396:
 44402                           
 44403                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 44404  000F90  0139               	movlb	57	; () banked
 44405  000F92  8782               	bsf	130,3,b	;volatile
 44406                           
 44407                           ; BSR set to: 57
 44408                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 44409  000F94  8382               	bsf	130,1,b	;volatile
 44410                           
 44411                           ; BSR set to: 57
 44412                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 44413  000F96  8182               	bsf	130,0,b	;volatile
 44414                           
 44415                           ; BSR set to: 57
 44416                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 44417  000F98  8582               	bsf	130,2,b	;volatile
 44418                           
 44419                           ; BSR set to: 57
 44420                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 44421  000F9A  8786               	bsf	134,3,b	;volatile
 44422                           
 44423                           ; BSR set to: 57
 44424                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 44425  000F9C  8586               	bsf	134,2,b	;volatile
 44426                           
 44427                           ; BSR set to: 57
 44428                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 44429  000F9E  8783               	bsf	131,3,b	;volatile
 44430                           
 44431                           ; BSR set to: 57
 44432                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 44433  000FA0  8181               	bsf	129,0,b	;volatile
 44434                           
 44435                           ; BSR set to: 57
 44436                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 44437  000FA2  9185               	bcf	133,0,b	;volatile
 44438                           
 44439                           ; BSR set to: 57
 44440                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 44441  000FA4  8189               	bsf	137,0,b	;volatile
 44442                           
 44443                           ; BSR set to: 57
 44444                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 44445  000FA6  9D88               	bcf	136,6,b	;volatile
 44446                           
 44447                           ; BSR set to: 57
 44448                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 44449  000FA8  8581               	bsf	129,2,b	;volatile
 44450                           
 44451                           ; BSR set to: 57
 44452                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 44453  000FAA  8781               	bsf	129,3,b	;volatile
 44454                           
 44455                           ; BSR set to: 57
 44456                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 44457  000FAC  9D86               	bcf	134,6,b	;volatile
 44458                           
 44459                           ; BSR set to: 57
 44460                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 44461  000FAE  52E5               	movf	postdec1,f,c
 44462  000FB0  0012               	return		;funcret
 44463  000FB2                     __end_of_INTERRUPT_Initialize:
 44464                           	opt callstack 0
 44465                           
 44466 ;; *************** function _FVR_Initialize *****************
 44467 ;; Defined at:
 44468 ;;		line 58 in file "mcc_generated_files/fvr.c"
 44469 ;; Parameters:    Size  Location     Type
 44470 ;;		None
 44471 ;; Auto vars:     Size  Location     Type
 44472 ;;		None
 44473 ;; Return value:  Size  Location     Type
 44474 ;;                  1  [STACK] void 
 44475 ;; Registers used:
 44476 ;;		wreg, status,2
 44477 ;; Tracked objects:
 44478 ;;		On entry : 3F/39
 44479 ;;		On exit  : 3F/3E
 44480 ;;		Unchanged: 0/0
 44481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44486 ;;Total ram usage:        0 bytes
 44487 ;; Hardware stack levels used:    1
 44488 ;; Hardware stack levels required when called:   15
 44489 ;; This function calls:
 44490 ;;		Nothing
 44491 ;; This function is called by:
 44492 ;;		_SYSTEM_Initialize
 44493 ;; This function uses a reentrant model
 44494 ;;
 44495                           
 44496                           	psect	text172
 44497  0022B2                     __ptext172:
 44498                           	opt callstack 0
 44499  0022B2                     _FVR_Initialize:
 44500                           	opt callstack 14
 44501                           
 44502                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 44503                           
 44504                           ; BSR set to: 57
 44505                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44506                           ;incstack = 0
 44507  0022B2  0EAF               	movlw	175
 44508  0022B4  013E               	movlb	62	; () banked
 44509  0022B6  6FC1               	movwf	193,b	;volatile
 44510                           
 44511                           ; BSR set to: 62
 44512                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 44513  0022B8  0012               	return		;funcret
 44514  0022BA                     __end_of_FVR_Initialize:
 44515                           	opt callstack 0
 44516                           
 44517 ;; *************** function _EXT_INT_Initialize *****************
 44518 ;; Defined at:
 44519 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 44520 ;; Parameters:    Size  Location     Type
 44521 ;;		None
 44522 ;; Auto vars:     Size  Location     Type
 44523 ;;		None
 44524 ;; Return value:  Size  Location     Type
 44525 ;;                  1  [STACK] void 
 44526 ;; Registers used:
 44527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44528 ;; Tracked objects:
 44529 ;;		On entry : 3F/3F
 44530 ;;		On exit  : 3F/39
 44531 ;;		Unchanged: 0/0
 44532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44537 ;;Total ram usage:        0 bytes
 44538 ;; Hardware stack levels used:    1
 44539 ;; Hardware stack levels required when called:   16
 44540 ;; This function calls:
 44541 ;;		_INT0_SetInterruptHandler
 44542 ;;		_INT1_SetInterruptHandler
 44543 ;; This function is called by:
 44544 ;;		_SYSTEM_Initialize
 44545 ;; This function uses a reentrant model
 44546 ;;
 44547                           
 44548                           	psect	text173
 44549  001A52                     __ptext173:
 44550                           	opt callstack 0
 44551  001A52                     _EXT_INT_Initialize:
 44552                           	opt callstack 13
 44553                           
 44554                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 44555                           
 44556                           ; BSR set to: 62
 44557                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44558                           ;incstack = 0
 44559  001A52  0139               	movlb	57	; () banked
 44560  001A54  91A1               	bcf	161,0,b	;volatile
 44561                           
 44562                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 44563  001A56  90D2               	bcf	210,0,c	;volatile
 44564                           
 44565                           ; BSR set to: 57
 44566                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 44567  001A58  0EE0               	movlw	low _INT0_DefaultInterruptHandler
 44568  001A5A  6EE6               	movwf	postinc1,c
 44569  001A5C  0E22               	movlw	high _INT0_DefaultInterruptHandler
 44570  001A5E  6EE6               	movwf	postinc1,c
 44571  001A60  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 44572  001A62  6EE6               	movwf	postinc1,c
 44573  001A64  ECDF  F00E         	call	_INT0_SetInterruptHandler	;wreg free
 44574                           
 44575                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 44576  001A68  0139               	movlb	57	; () banked
 44577  001A6A  8191               	bsf	145,0,b	;volatile
 44578                           
 44579                           ; BSR set to: 57
 44580                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 44581  001A6C  91A5               	bcf	165,0,b	;volatile
 44582                           
 44583                           ; BSR set to: 57
 44584                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 44585  001A6E  92D2               	bcf	210,1,c	;volatile
 44586                           
 44587                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 44588  001A70  0E0E               	movlw	low _INT1_DefaultInterruptHandler
 44589  001A72  6EE6               	movwf	postinc1,c
 44590  001A74  0ED4               	movlw	high _INT1_DefaultInterruptHandler
 44591  001A76  6EE6               	movwf	postinc1,c
 44592  001A78  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 44593  001A7A  6EE6               	movwf	postinc1,c
 44594  001A7C  ECCB  F00E         	call	_INT1_SetInterruptHandler	;wreg free
 44595                           
 44596                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 44597  001A80  0139               	movlb	57	; () banked
 44598  001A82  8195               	bsf	149,0,b	;volatile
 44599                           
 44600                           ; BSR set to: 57
 44601                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 44602  001A84  0012               	return		;funcret
 44603  001A86                     __end_of_EXT_INT_Initialize:
 44604                           	opt callstack 0
 44605                           
 44606 ;; *************** function _INT1_SetInterruptHandler *****************
 44607 ;; Defined at:
 44608 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 44609 ;; Parameters:    Size  Location     Type
 44610 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44611 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 44612 ;; Auto vars:     Size  Location     Type
 44613 ;;		None
 44614 ;; Return value:  Size  Location     Type
 44615 ;;                  1  [STACK] void 
 44616 ;; Registers used:
 44617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44618 ;; Tracked objects:
 44619 ;;		On entry : 3F/39
 44620 ;;		On exit  : 0/0
 44621 ;;		Unchanged: 0/0
 44622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44627 ;;Total ram usage:        0 bytes
 44628 ;; Hardware stack levels used:    1
 44629 ;; Hardware stack levels required when called:   15
 44630 ;; This function calls:
 44631 ;;		Nothing
 44632 ;; This function is called by:
 44633 ;;		_EXT_INT_Initialize
 44634 ;;		_start_switch_handler
 44635 ;; This function uses a reentrant model
 44636 ;;
 44637                           
 44638                           	psect	text174
 44639  001D96                     __ptext174:
 44640                           	opt callstack 0
 44641  001D96                     _INT1_SetInterruptHandler:
 44642                           	opt callstack 14
 44643                           
 44644                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 44645                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44646                           
 44647                           ; BSR set to: 57
 44648                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44649                           ;incstack = 0
 44650  001D96  50E1               	movf	fsr1l,w,c
 44651  001D98  0FFD               	addlw	-3
 44652  001D9A  6ED9               	movwf	fsr2l,c
 44653  001D9C  50E2               	movf	fsr1h,w,c
 44654  001D9E  6EDA               	movwf	fsr2h,c
 44655  001DA0  0EFF               	movlw	255
 44656  001DA2  22DA               	addwfc	fsr2h,f,c
 44657  001DA4  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 44658  001DAA  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 44659  001DB0  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 44660                           
 44661                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44662  001DB6  52E5               	movf	postdec1,f,c
 44663  001DB8  52E5               	movf	postdec1,f,c
 44664  001DBA  52E5               	movf	postdec1,f,c
 44665  001DBC  0012               	return		;funcret
 44666  001DBE                     __end_of_INT1_SetInterruptHandler:
 44667                           	opt callstack 0
 44668                           
 44669 ;; *************** function _INT0_SetInterruptHandler *****************
 44670 ;; Defined at:
 44671 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 44672 ;; Parameters:    Size  Location     Type
 44673 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44674 ;;		 -> INT0_DefaultInterruptHandler(1), 
 44675 ;; Auto vars:     Size  Location     Type
 44676 ;;		None
 44677 ;; Return value:  Size  Location     Type
 44678 ;;                  1  [STACK] void 
 44679 ;; Registers used:
 44680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44681 ;; Tracked objects:
 44682 ;;		On entry : 3F/39
 44683 ;;		On exit  : 0/0
 44684 ;;		Unchanged: 0/0
 44685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44690 ;;Total ram usage:        0 bytes
 44691 ;; Hardware stack levels used:    1
 44692 ;; Hardware stack levels required when called:   15
 44693 ;; This function calls:
 44694 ;;		Nothing
 44695 ;; This function is called by:
 44696 ;;		_EXT_INT_Initialize
 44697 ;; This function uses a reentrant model
 44698 ;;
 44699                           
 44700                           	psect	text175
 44701  001DBE                     __ptext175:
 44702                           	opt callstack 0
 44703  001DBE                     _INT0_SetInterruptHandler:
 44704                           	opt callstack 13
 44705                           
 44706                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 44707                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44708                           
 44709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44710                           ;incstack = 0
 44711  001DBE  50E1               	movf	fsr1l,w,c
 44712  001DC0  0FFD               	addlw	-3
 44713  001DC2  6ED9               	movwf	fsr2l,c
 44714  001DC4  50E2               	movf	fsr1h,w,c
 44715  001DC6  6EDA               	movwf	fsr2h,c
 44716  001DC8  0EFF               	movlw	255
 44717  001DCA  22DA               	addwfc	fsr2h,f,c
 44718  001DCC  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 44719  001DD2  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 44720  001DD8  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 44721                           
 44722                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44723  001DDE  52E5               	movf	postdec1,f,c
 44724  001DE0  52E5               	movf	postdec1,f,c
 44725  001DE2  52E5               	movf	postdec1,f,c
 44726  001DE4  0012               	return		;funcret
 44727  001DE6                     __end_of_INT0_SetInterruptHandler:
 44728                           	opt callstack 0
 44729                           
 44730 ;; *************** function _DMA2_Initialize *****************
 44731 ;; Defined at:
 44732 ;;		line 61 in file "mcc_generated_files/dma2.c"
 44733 ;; Parameters:    Size  Location     Type
 44734 ;;		None
 44735 ;; Auto vars:     Size  Location     Type
 44736 ;;		None
 44737 ;; Return value:  Size  Location     Type
 44738 ;;                  1  [STACK] void 
 44739 ;; Registers used:
 44740 ;;		wreg, status,2
 44741 ;; Tracked objects:
 44742 ;;		On entry : 3F/3D
 44743 ;;		On exit  : 3F/3B
 44744 ;;		Unchanged: 0/0
 44745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44750 ;;Total ram usage:        0 bytes
 44751 ;; Hardware stack levels used:    1
 44752 ;; Hardware stack levels required when called:   15
 44753 ;; This function calls:
 44754 ;;		Nothing
 44755 ;; This function is called by:
 44756 ;;		_SYSTEM_Initialize
 44757 ;; This function uses a reentrant model
 44758 ;;
 44759                           
 44760                           	psect	text176
 44761  0012B0                     __ptext176:
 44762                           	opt callstack 0
 44763  0012B0                     _DMA2_Initialize:
 44764                           	opt callstack 14
 44765                           
 44766                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 44767                           
 44768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44769                           ;incstack = 0
 44770  0012B0  0E00               	movlw	0
 44771  0012B2  013B               	movlb	59	; () banked
 44772  0012B4  6FD9               	movwf	217,b	;volatile
 44773  0012B6  0E10               	movlw	16
 44774  0012B8  6FDA               	movwf	218,b	;volatile
 44775  0012BA  0E00               	movlw	0
 44776  0012BC  6FDB               	movwf	219,b	;volatile
 44777                           
 44778                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 44779  0012BE  0E3F               	movlw	63
 44780  0012C0  6FD1               	movwf	209,b	;volatile
 44781  0012C2  0EBB               	movlw	187
 44782  0012C4  6FD0               	movwf	208,b	;volatile
 44783                           
 44784                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 44785  0012C6  0E03               	movlw	3
 44786  0012C8  6FDD               	movwf	221,b	;volatile
 44787                           
 44788                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 44789  0012CA  0E00               	movlw	0
 44790  0012CC  6FD8               	movwf	216,b	;volatile
 44791  0012CE  0E01               	movlw	1
 44792  0012D0  6FD7               	movwf	215,b	;volatile
 44793                           
 44794                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 44795  0012D2  0E00               	movlw	0
 44796  0012D4  6FCF               	movwf	207,b	;volatile
 44797  0012D6  0E01               	movlw	1
 44798  0012D8  6FCE               	movwf	206,b	;volatile
 44799                           
 44800                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 44801  0012DA  0E1C               	movlw	28
 44802  0012DC  6FDF               	movwf	223,b	;volatile
 44803                           
 44804                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 44805  0012DE  0E3D               	movlw	61
 44806  0012E0  6FDE               	movwf	222,b	;volatile
 44807                           
 44808                           ; BSR set to: 59
 44809                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 44810  0012E2  0139               	movlb	57	; () banked
 44811  0012E4  97A5               	bcf	165,3,b	;volatile
 44812                           
 44813                           ; BSR set to: 57
 44814                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 44815  0012E6  95A5               	bcf	165,2,b	;volatile
 44816                           
 44817                           ; BSR set to: 57
 44818                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 44819  0012E8  9BA5               	bcf	165,5,b	;volatile
 44820                           
 44821                           ; BSR set to: 57
 44822                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 44823  0012EA  99A5               	bcf	165,4,b	;volatile
 44824                           
 44825                           ; BSR set to: 57
 44826                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 44827  0012EC  9795               	bcf	149,3,b	;volatile
 44828                           
 44829                           ; BSR set to: 57
 44830                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 44831  0012EE  9595               	bcf	149,2,b	;volatile
 44832                           
 44833                           ; BSR set to: 57
 44834                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 44835  0012F0  9B95               	bcf	149,5,b	;volatile
 44836                           
 44837                           ; BSR set to: 57
 44838                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 44839  0012F2  9995               	bcf	149,4,b	;volatile
 44840  0012F4  9ED2               	bcf	16338,7,c	;# 
 44841  0012F6  0139               	banksel	14831	;# 
 44842  0012F8  0E55               	movlw	85	;# 
 44843  0012FA  6FEF               	movwf	14831,b	;# 
 44844  0012FC  0EAA               	movlw	170	;# 
 44845  0012FE  6FEF               	movwf	14831,b	;# 
 44846  001300  81EF               	bsf	14831,0,b	;# 
 44847  001302  8ED2               	bsf	16338,7,c	;# 
 44848                           
 44849                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 44850  001304  013B               	movlb	59	; () banked
 44851  001306  6BDC               	clrf	220,b	;volatile
 44852                           
 44853                           ; BSR set to: 59
 44854                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44855  001308  0012               	return		;funcret
 44856  00130A                     __end_of_DMA2_Initialize:
 44857                           	opt callstack 0
 44858                           
 44859 ;; *************** function _DMA1_Initialize *****************
 44860 ;; Defined at:
 44861 ;;		line 86 in file "mcc_generated_files/dma1.c"
 44862 ;; Parameters:    Size  Location     Type
 44863 ;;		None
 44864 ;; Auto vars:     Size  Location     Type
 44865 ;;		None
 44866 ;; Return value:  Size  Location     Type
 44867 ;;                  1  [STACK] void 
 44868 ;; Registers used:
 44869 ;;		wreg, status,2
 44870 ;; Tracked objects:
 44871 ;;		On entry : 3F/3B
 44872 ;;		On exit  : 3F/3B
 44873 ;;		Unchanged: 0/0
 44874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44879 ;;Total ram usage:        0 bytes
 44880 ;; Hardware stack levels used:    1
 44881 ;; Hardware stack levels required when called:   15
 44882 ;; This function calls:
 44883 ;;		Nothing
 44884 ;; This function is called by:
 44885 ;;		_SYSTEM_Initialize
 44886 ;; This function uses a reentrant model
 44887 ;;
 44888                           
 44889                           	psect	text177
 44890  000D3E                     __ptext177:
 44891                           	opt callstack 0
 44892  000D3E                     _DMA1_Initialize:
 44893                           	opt callstack 14
 44894                           
 44895                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 44896                           
 44897                           ; BSR set to: 59
 44898                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44899                           ;incstack = 0
 44900  000D3E  0E00               	movlw	0
 44901  000D40  013B               	movlb	59	; () banked
 44902  000D42  6FF9               	movwf	249,b	;volatile
 44903  000D44  0E10               	movlw	16
 44904  000D46  6FFA               	movwf	250,b	;volatile
 44905  000D48  0E00               	movlw	0
 44906  000D4A  6FFB               	movwf	251,b	;volatile
 44907                           
 44908                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 44909  000D4C  0E3D               	movlw	61
 44910  000D4E  6FF1               	movwf	241,b	;volatile
 44911  000D50  0E11               	movlw	17
 44912  000D52  6FF0               	movwf	240,b	;volatile
 44913                           
 44914                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 44915  000D54  0E03               	movlw	3
 44916  000D56  6FFD               	movwf	253,b	;volatile
 44917                           
 44918                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 44919  000D58  0E00               	movlw	0
 44920  000D5A  6FF8               	movwf	248,b	;volatile
 44921  000D5C  0E01               	movlw	1
 44922  000D5E  6FF7               	movwf	247,b	;volatile
 44923                           
 44924                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 44925  000D60  0E00               	movlw	0
 44926  000D62  6FEF               	movwf	239,b	;volatile
 44927  000D64  0E01               	movlw	1
 44928  000D66  6FEE               	movwf	238,b	;volatile
 44929                           
 44930                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 44931  000D68  0E15               	movlw	21
 44932  000D6A  6FFF               	movwf	255,b	;volatile
 44933                           
 44934                           ; BSR set to: 59
 44935                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 44936  000D6C  6BFE               	clrf	254,b	;volatile
 44937                           
 44938                           ; BSR set to: 59
 44939                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 44940  000D6E  0139               	movlb	57	; () banked
 44941  000D70  93A2               	bcf	162,1,b	;volatile
 44942                           
 44943                           ; BSR set to: 57
 44944                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 44945  000D72  91A2               	bcf	162,0,b	;volatile
 44946                           
 44947                           ; BSR set to: 57
 44948                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 44949  000D74  97A2               	bcf	162,3,b	;volatile
 44950                           
 44951                           ; BSR set to: 57
 44952                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 44953  000D76  95A2               	bcf	162,2,b	;volatile
 44954                           
 44955                           ; BSR set to: 57
 44956                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 44957  000D78  8392               	bsf	146,1,b	;volatile
 44958                           
 44959                           ; BSR set to: 57
 44960                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 44961  000D7A  8192               	bsf	146,0,b	;volatile
 44962                           
 44963                           ; BSR set to: 57
 44964                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 44965  000D7C  8792               	bsf	146,3,b	;volatile
 44966                           
 44967                           ; BSR set to: 57
 44968                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 44969  000D7E  8592               	bsf	146,2,b	;volatile
 44970                           
 44971                           ; BSR set to: 57
 44972                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 44973  000D80  6BF1               	clrf	241,b	;volatile
 44974                           
 44975                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 44976  000D82  0E01               	movlw	1
 44977  000D84  6FF2               	movwf	242,b	;volatile
 44978                           
 44979                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 44980  000D86  0E04               	movlw	4
 44981  000D88  6FF3               	movwf	243,b	;volatile
 44982                           
 44983                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 44984  000D8A  0E02               	movlw	2
 44985  000D8C  6FF4               	movwf	244,b	;volatile
 44986                           
 44987                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 44988  000D8E  0E03               	movlw	3
 44989  000D90  6FF7               	movwf	247,b	;volatile
 44990  000D92  9ED2               	bcf	16338,7,c	;# 
 44991  000D94  0139               	banksel	14831	;# 
 44992  000D96  0E55               	movlw	85	;# 
 44993  000D98  6FEF               	movwf	14831,b	;# 
 44994  000D9A  0EAA               	movlw	170	;# 
 44995  000D9C  6FEF               	movwf	14831,b	;# 
 44996  000D9E  81EF               	bsf	14831,0,b	;# 
 44997  000DA0  8ED2               	bsf	16338,7,c	;# 
 44998                           
 44999                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 45000  000DA2  013B               	movlb	59	; () banked
 45001  000DA4  6BFC               	clrf	252,b	;volatile
 45002                           
 45003                           ; BSR set to: 59
 45004                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45005  000DA6  0012               	return		;funcret
 45006  000DA8                     __end_of_DMA1_Initialize:
 45007                           	opt callstack 0
 45008                           
 45009 ;; *************** function _CRC_Initialize *****************
 45010 ;; Defined at:
 45011 ;;		line 76 in file "mcc_generated_files/crc.c"
 45012 ;; Parameters:    Size  Location     Type
 45013 ;;		None
 45014 ;; Auto vars:     Size  Location     Type
 45015 ;;  seed            2  [STACK] unsigned short 
 45016 ;;  poly            2  [STACK] unsigned short 
 45017 ;; Return value:  Size  Location     Type
 45018 ;;                  1  [STACK] void 
 45019 ;; Registers used:
 45020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 45021 ;; Tracked objects:
 45022 ;;		On entry : 0/39
 45023 ;;		On exit  : 3F/0
 45024 ;;		Unchanged: 0/0
 45025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45030 ;;Total ram usage:        0 bytes
 45031 ;; Hardware stack levels used:    1
 45032 ;; Hardware stack levels required when called:   15
 45033 ;; This function calls:
 45034 ;;		Nothing
 45035 ;; This function is called by:
 45036 ;;		_SYSTEM_Initialize
 45037 ;;		_read_cal_data
 45038 ;;		_write_cal_data
 45039 ;; This function uses a reentrant model
 45040 ;;
 45041                           
 45042                           	psect	text178
 45043  000848                     __ptext178:
 45044                           	opt callstack 0
 45045  000848                     _CRC_Initialize:
 45046                           	opt callstack 0
 45047                           
 45048                           ; BSR set to: 59
 45049                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45050  000848  52E6               	movf	postinc1,f,c
 45051  00084A  52E6               	movf	postinc1,f,c
 45052  00084C  52E6               	movf	postinc1,f,c
 45053  00084E  52E6               	movf	postinc1,f,c
 45054                           
 45055                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 45056                           
 45057                           ;incstack = 0
 45058  000850  0E80               	movlw	128
 45059  000852  0139               	movlb	57	; () banked
 45060  000854  6F68               	movwf	104,b	;volatile
 45061                           
 45062                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 45063  000856  0E07               	movlw	7
 45064  000858  6F69               	movwf	105,b	;volatile
 45065                           
 45066                           ; BSR set to: 57
 45067                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 45068  00085A  6B62               	clrf	98,b	;volatile
 45069                           
 45070                           ; BSR set to: 57
 45071                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 45072  00085C  6B63               	clrf	99,b	;volatile
 45073                           
 45074                           ; BSR set to: 57
 45075                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 45076  00085E  6B7C               	clrf	124,b	;volatile
 45077                           
 45078                           ; BSR set to: 57
 45079                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 45080  000860  6B78               	clrf	120,b	;volatile
 45081                           
 45082                           ; BSR set to: 57
 45083                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 45084  000862  6B77               	clrf	119,b	;volatile
 45085                           
 45086                           ; BSR set to: 57
 45087                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 45088  000864  6B76               	clrf	118,b	;volatile
 45089                           
 45090                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 45091  000866  0E3F               	movlw	63
 45092  000868  6F7B               	movwf	123,b	;volatile
 45093                           
 45094                           ; BSR set to: 57
 45095                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 45096  00086A  697A               	setf	122,b	;volatile
 45097                           
 45098                           ; BSR set to: 57
 45099                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 45100  00086C  6979               	setf	121,b	;volatile
 45101                           
 45102                           ; BSR set to: 57
 45103                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 45104  00086E  6B7D               	clrf	125,b	;volatile
 45105                           
 45106                           ; BSR set to: 57
 45107                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 45108  000870  0ED5               	movlw	213
 45109  000872  6E34               	movwf	(btemp+10)^0,c
 45110  000874  0E00               	movlw	0
 45111  000876  6E35               	movwf	(btemp+11)^0,c
 45112                           
 45113                           ;stkvar	_poly @ sp[(-4)+2]
 45114  000878  0EFE               	movlw	-2
 45115  00087A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 45116  000880  0EFF               	movlw	-1
 45117  000882  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 45118                           
 45119                           ; BSR set to: 57
 45120                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 45121                           ;stkvar	_poly @ sp[(-4)+2]
 45122  000888  0EFF               	movlw	255
 45123  00088A  24E1               	addwf	fsr1l,w,c
 45124  00088C  6ED9               	movwf	fsr2l,c
 45125  00088E  0EFF               	movlw	255
 45126  000890  20E2               	addwfc	fsr1h,w,c
 45127  000892  6EDA               	movwf	fsr2h,c
 45128  000894  50DF               	movf	indf2,w,c
 45129  000896  6F67               	movwf	103,b	;volatile
 45130                           
 45131                           ; BSR set to: 57
 45132                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 45133  000898  0ED5               	movlw	213
 45134  00089A  6F66               	movwf	102,b	;volatile
 45135                           
 45136                           ; BSR set to: 57
 45137                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 45138                           ;stkvar	_seed @ sp[(-4)+0]
 45139  00089C  0EFC               	movlw	-4
 45140  00089E  6AE3               	clrf	plusw1,c
 45141  0008A0  0EFD               	movlw	-3
 45142  0008A2  6AE3               	clrf	plusw1,c
 45143                           
 45144                           ; BSR set to: 57
 45145                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 45146                           ;stkvar	_seed @ sp[(-4)+0]
 45147  0008A4  0EFD               	movlw	253
 45148  0008A6  24E1               	addwf	fsr1l,w,c
 45149  0008A8  6ED9               	movwf	fsr2l,c
 45150  0008AA  0EFF               	movlw	255
 45151  0008AC  20E2               	addwfc	fsr1h,w,c
 45152  0008AE  6EDA               	movwf	fsr2h,c
 45153  0008B0  50DF               	movf	indf2,w,c
 45154  0008B2  6F63               	movwf	99,b	;volatile
 45155                           
 45156                           ; BSR set to: 57
 45157                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 45158  0008B4  6B62               	clrf	98,b	;volatile
 45159                           
 45160                           ; BSR set to: 57
 45161                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 45162  0008B6  3969               	swapf	105,w,b	;volatile
 45163  0008B8  0B0F               	andlw	15
 45164  0008BA  6E35               	movwf	(btemp+11)^0,c
 45165  0008BC  2835               	incf	(btemp+11)^0,w,c
 45166  0008BE  0100               	movlb	0	; () banked
 45167  0008C0  6FE4               	movwf	_crcObj& (0+255),b
 45168                           
 45169                           ; BSR set to: 0
 45170                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 45171  0008C2  0139               	movlb	57	; () banked
 45172  0008C4  5169               	movf	105,w,b	;volatile
 45173  0008C6  0B0F               	andlw	15
 45174  0008C8  6E35               	movwf	(btemp+11)^0,c
 45175  0008CA  2835               	incf	(btemp+11)^0,w,c
 45176  0008CC  0100               	movlb	0	; () banked
 45177  0008CE  6FE5               	movwf	(_crcObj+1)& (0+255),b
 45178                           
 45179                           ; BSR set to: 0
 45180                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45181  0008D0  52E5               	movf	postdec1,f,c
 45182  0008D2  52E5               	movf	postdec1,f,c
 45183  0008D4  52E5               	movf	postdec1,f,c
 45184  0008D6  52E5               	movf	postdec1,f,c
 45185  0008D8  0012               	return		;funcret
 45186  0008DA                     __end_of_CRC_Initialize:
 45187                           	opt callstack 0
 45188                           
 45189 ;; *************** function _CLKREF_Initialize *****************
 45190 ;; Defined at:
 45191 ;;		line 58 in file "mcc_generated_files/clkref.c"
 45192 ;; Parameters:    Size  Location     Type
 45193 ;;		None
 45194 ;; Auto vars:     Size  Location     Type
 45195 ;;		None
 45196 ;; Return value:  Size  Location     Type
 45197 ;;                  1  [STACK] void 
 45198 ;; Registers used:
 45199 ;;		wreg, status,2
 45200 ;; Tracked objects:
 45201 ;;		On entry : 3F/3B
 45202 ;;		On exit  : 3F/3C
 45203 ;;		Unchanged: 0/0
 45204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45209 ;;Total ram usage:        0 bytes
 45210 ;; Hardware stack levels used:    1
 45211 ;; Hardware stack levels required when called:   15
 45212 ;; This function calls:
 45213 ;;		Nothing
 45214 ;; This function is called by:
 45215 ;;		_SYSTEM_Initialize
 45216 ;; This function uses a reentrant model
 45217 ;;
 45218                           
 45219                           	psect	text179
 45220  00225A                     __ptext179:
 45221                           	opt callstack 0
 45222  00225A                     _CLKREF_Initialize:
 45223                           	opt callstack 14
 45224                           
 45225                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 45226                           
 45227                           ; BSR set to: 0
 45228                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45229                           ;incstack = 0
 45230  00225A  013C               	movlb	60	; () banked
 45231  00225C  6BE6               	clrf	230,b	;volatile
 45232                           
 45233                           ; BSR set to: 60
 45234                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 45235  00225E  0E94               	movlw	148
 45236  002260  6FE5               	movwf	229,b	;volatile
 45237                           
 45238                           ; BSR set to: 60
 45239                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 45240  002262  0012               	return		;funcret
 45241  002264                     __end_of_CLKREF_Initialize:
 45242                           	opt callstack 0
 45243                           
 45244 ;; *************** function _ADCC_Initialize *****************
 45245 ;; Defined at:
 45246 ;;		line 65 in file "mcc_generated_files/adcc.c"
 45247 ;; Parameters:    Size  Location     Type
 45248 ;;		None
 45249 ;; Auto vars:     Size  Location     Type
 45250 ;;		None
 45251 ;; Return value:  Size  Location     Type
 45252 ;;                  1  [STACK] void 
 45253 ;; Registers used:
 45254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 45255 ;; Tracked objects:
 45256 ;;		On entry : 3F/0
 45257 ;;		On exit  : 0/0
 45258 ;;		Unchanged: 0/0
 45259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45264 ;;Total ram usage:        0 bytes
 45265 ;; Hardware stack levels used:    1
 45266 ;; Hardware stack levels required when called:   16
 45267 ;; This function calls:
 45268 ;;		_ADCC_SetADIInterruptHandler
 45269 ;;		_ADCC_SetADTIInterruptHandler
 45270 ;; This function is called by:
 45271 ;;		_SYSTEM_Initialize
 45272 ;; This function uses a reentrant model
 45273 ;;
 45274                           
 45275                           	psect	text180
 45276  000DA8                     __ptext180:
 45277                           	opt callstack 0
 45278  000DA8                     _ADCC_Initialize:
 45279                           	opt callstack 13
 45280                           
 45281                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 45282                           
 45283                           ; BSR set to: 60
 45284                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45285                           ;incstack = 0
 45286  000DA8  013E               	movlb	62	; () banked
 45287  000DAA  6BDE               	clrf	222,b	;volatile
 45288                           
 45289                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 45290  000DAC  6BDF               	clrf	223,b	;volatile
 45291                           
 45292                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 45293  000DAE  6BE0               	clrf	224,b	;volatile
 45294                           
 45295                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 45296  000DB0  6BE1               	clrf	225,b	;volatile
 45297                           
 45298                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 45299  000DB2  6BE4               	clrf	228,b	;volatile
 45300                           
 45301                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 45302  000DB4  6BE5               	clrf	229,b	;volatile
 45303                           
 45304                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 45305  000DB6  6BEA               	clrf	234,b	;volatile
 45306                           
 45307                           ; BSR set to: 62
 45308                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 45309  000DB8  0E40               	movlw	64
 45310  000DBA  6FEC               	movwf	236,b	;volatile
 45311                           
 45312                           ; BSR set to: 62
 45313                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 45314  000DBC  6BF1               	clrf	241,b	;volatile
 45315                           
 45316                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 45317  000DBE  0E20               	movlw	32
 45318  000DC0  6FF3               	movwf	243,b	;volatile
 45319                           
 45320                           ; BSR set to: 62
 45321                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 45322  000DC2  6BF4               	clrf	244,b	;volatile
 45323                           
 45324                           ; BSR set to: 62
 45325                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 45326  000DC4  6BF5               	clrf	245,b	;volatile
 45327                           
 45328                           ; BSR set to: 62
 45329                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 45330  000DC6  6BF6               	clrf	246,b	;volatile
 45331                           
 45332                           ; BSR set to: 62
 45333                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 45334  000DC8  6BF7               	clrf	247,b	;volatile
 45335                           
 45336                           ; BSR set to: 62
 45337                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 45338  000DCA  6BF9               	clrf	249,b	;volatile
 45339                           
 45340                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 45341  000DCC  0E5B               	movlw	91
 45342  000DCE  6FFA               	movwf	250,b	;volatile
 45343                           
 45344                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 45345  000DD0  0E27               	movlw	39
 45346  000DD2  6FFB               	movwf	251,b	;volatile
 45347                           
 45348                           ; BSR set to: 62
 45349                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 45350  000DD4  6BFC               	clrf	252,b	;volatile
 45351                           
 45352                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 45353  000DD6  0E02               	movlw	2
 45354  000DD8  6FFD               	movwf	253,b	;volatile
 45355                           
 45356                           ; BSR set to: 62
 45357                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 45358  000DDA  6BFE               	clrf	254,b	;volatile
 45359                           
 45360                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 45361  000DDC  0E07               	movlw	7
 45362  000DDE  6FFF               	movwf	255,b	;volatile
 45363                           
 45364                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 45365  000DE0  0E84               	movlw	132
 45366  000DE2  6FF8               	movwf	248,b	;volatile
 45367                           
 45368                           ; BSR set to: 62
 45369                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 45370  000DE4  0139               	movlb	57	; () banked
 45371  000DE6  95A1               	bcf	161,2,b	;volatile
 45372                           
 45373                           ; BSR set to: 57
 45374                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 45375  000DE8  8591               	bsf	145,2,b	;volatile
 45376                           
 45377                           ; BSR set to: 57
 45378                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 45379  000DEA  0EE2               	movlw	low _ADCC_DefaultInterruptHandler
 45380  000DEC  6EE6               	movwf	postinc1,c
 45381  000DEE  0E22               	movlw	high _ADCC_DefaultInterruptHandler
 45382  000DF0  6EE6               	movwf	postinc1,c
 45383  000DF2  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 45384  000DF4  6EE6               	movwf	postinc1,c
 45385  000DF6  EC07  F00F         	call	_ADCC_SetADIInterruptHandler	;wreg free
 45386                           
 45387                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 45388  000DFA  0139               	movlb	57	; () banked
 45389  000DFC  97A1               	bcf	161,3,b	;volatile
 45390                           
 45391                           ; BSR set to: 57
 45392                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 45393  000DFE  8791               	bsf	145,3,b	;volatile
 45394                           
 45395                           ; BSR set to: 57
 45396                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 45397  000E00  0EE2               	movlw	low _ADCC_DefaultInterruptHandler
 45398  000E02  6EE6               	movwf	postinc1,c
 45399  000E04  0E22               	movlw	high _ADCC_DefaultInterruptHandler
 45400  000E06  6EE6               	movwf	postinc1,c
 45401  000E08  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 45402  000E0A  6EE6               	movwf	postinc1,c
 45403  000E0C  ECF3  F00E         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 45404                           
 45405                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45406  000E10  0012               	return		;funcret
 45407  000E12                     __end_of_ADCC_Initialize:
 45408                           	opt callstack 0
 45409                           
 45410 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 45411 ;; Defined at:
 45412 ;;		line 336 in file "mcc_generated_files/adcc.c"
 45413 ;; Parameters:    Size  Location     Type
 45414 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45415 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 45416 ;; Auto vars:     Size  Location     Type
 45417 ;;		None
 45418 ;; Return value:  Size  Location     Type
 45419 ;;                  1  [STACK] void 
 45420 ;; Registers used:
 45421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45422 ;; Tracked objects:
 45423 ;;		On entry : 0/1
 45424 ;;		On exit  : 0/0
 45425 ;;		Unchanged: 0/0
 45426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45431 ;;Total ram usage:        0 bytes
 45432 ;; Hardware stack levels used:    1
 45433 ;; Hardware stack levels required when called:   15
 45434 ;; This function calls:
 45435 ;;		Nothing
 45436 ;; This function is called by:
 45437 ;;		_ADCC_Initialize
 45438 ;;		_start_adc_scan
 45439 ;; This function uses a reentrant model
 45440 ;;
 45441                           
 45442                           	psect	text181
 45443  001DE6                     __ptext181:
 45444                           	opt callstack 0
 45445  001DE6                     _ADCC_SetADTIInterruptHandler:
 45446                           	opt callstack 14
 45447                           
 45448                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 45449                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45450                           
 45451                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45452                           ;incstack = 0
 45453  001DE6  50E1               	movf	fsr1l,w,c
 45454  001DE8  0FFD               	addlw	-3
 45455  001DEA  6ED9               	movwf	fsr2l,c
 45456  001DEC  50E2               	movf	fsr1h,w,c
 45457  001DEE  6EDA               	movwf	fsr2h,c
 45458  001DF0  0EFF               	movlw	255
 45459  001DF2  22DA               	addwfc	fsr2h,f,c
 45460  001DF4  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 45461  001DFA  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 45462  001E00  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 45463                           
 45464                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 45465  001E06  52E5               	movf	postdec1,f,c
 45466  001E08  52E5               	movf	postdec1,f,c
 45467  001E0A  52E5               	movf	postdec1,f,c
 45468  001E0C  0012               	return		;funcret
 45469  001E0E                     __end_of_ADCC_SetADTIInterruptHandler:
 45470                           	opt callstack 0
 45471                           
 45472 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 45473 ;; Defined at:
 45474 ;;		line 323 in file "mcc_generated_files/adcc.c"
 45475 ;; Parameters:    Size  Location     Type
 45476 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45477 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 45478 ;; Auto vars:     Size  Location     Type
 45479 ;;		None
 45480 ;; Return value:  Size  Location     Type
 45481 ;;                  1  [STACK] void 
 45482 ;; Registers used:
 45483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45484 ;; Tracked objects:
 45485 ;;		On entry : 7/1
 45486 ;;		On exit  : 0/0
 45487 ;;		Unchanged: 0/0
 45488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45493 ;;Total ram usage:        0 bytes
 45494 ;; Hardware stack levels used:    1
 45495 ;; Hardware stack levels required when called:   15
 45496 ;; This function calls:
 45497 ;;		Nothing
 45498 ;; This function is called by:
 45499 ;;		_ADCC_Initialize
 45500 ;;		_start_adc_scan
 45501 ;; This function uses a reentrant model
 45502 ;;
 45503                           
 45504                           	psect	text182
 45505  001E0E                     __ptext182:
 45506                           	opt callstack 0
 45507  001E0E                     _ADCC_SetADIInterruptHandler:
 45508                           	opt callstack 14
 45509                           
 45510                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 45511                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45512                           
 45513                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45514                           ;incstack = 0
 45515  001E0E  50E1               	movf	fsr1l,w,c
 45516  001E10  0FFD               	addlw	-3
 45517  001E12  6ED9               	movwf	fsr2l,c
 45518  001E14  50E2               	movf	fsr1h,w,c
 45519  001E16  6EDA               	movwf	fsr2h,c
 45520  001E18  0EFF               	movlw	255
 45521  001E1A  22DA               	addwfc	fsr2h,f,c
 45522  001E1C  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 45523  001E22  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 45524  001E28  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 45525                           
 45526                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 45527  001E2E  52E5               	movf	postdec1,f,c
 45528  001E30  52E5               	movf	postdec1,f,c
 45529  001E32  52E5               	movf	postdec1,f,c
 45530  001E34  0012               	return		;funcret
 45531  001E36                     __end_of_ADCC_SetADIInterruptHandler:
 45532                           	opt callstack 0
 45533                           
 45534 ;; *************** function _INT1_ISR *****************
 45535 ;; Defined at:
 45536 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 45537 ;; Parameters:    Size  Location     Type
 45538 ;;		None
 45539 ;; Auto vars:     Size  Location     Type
 45540 ;;		None
 45541 ;; Return value:  Size  Location     Type
 45542 ;;                  1    wreg      void 
 45543 ;; Registers used:
 45544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 45545 ;; Tracked objects:
 45546 ;;		On entry : 0/0
 45547 ;;		On exit  : 0/0
 45548 ;;		Unchanged: 0/0
 45549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45552 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45553 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45554 ;;Total ram usage:        4 bytes
 45555 ;; Hardware stack levels used:    1
 45556 ;; Hardware stack levels required when called:    5
 45557 ;; This function calls:
 45558 ;;		_INT1_CallBack
 45559 ;; This function is called by:
 45560 ;;		Interrupt level 1
 45561 ;; This function uses a non-reentrant model
 45562 ;;
 45563                           
 45564                           	psect	text183
 45565  00185C                     __ptext183:
 45566                           	opt callstack 0
 45567  00185C                     _INT1_ISR:
 45568                           	opt callstack 11
 45569                           
 45570                           ;incstack = 0
 45571  00185C  006F FF60  F007    	movff	status,??_INT1_ISR
 45572  001862  0060  F0A8  F008   	movff	btemp,??_INT1_ISR+1
 45573  001868  0060  F0D0  F009   	movff	btemp+10,??_INT1_ISR+2
 45574  00186E  0060  F0D4  F00A   	movff	btemp+11,??_INT1_ISR+3
 45575  001874  EE16  F19B         	lfsr	1,___intlo_sp
 45576                           
 45577                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 45578  001878  0139               	movlb	57	; () banked
 45579  00187A  91A5               	bcf	165,0,b	;volatile
 45580                           
 45581                           ; BSR set to: 57
 45582                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 45583  00187C  EC6A  F00F         	call	_INT1_CallBack	;wreg free
 45584  001880  0060  F028  F035   	movff	??_INT1_ISR+3,btemp+11
 45585  001886  0060  F024  F034   	movff	??_INT1_ISR+2,btemp+10
 45586  00188C  0060  F020  F02A   	movff	??_INT1_ISR+1,btemp
 45587  001892  0060  F01F  FFD8   	movff	??_INT1_ISR,status
 45588  001898  0011               	retfie		f
 45589  00189A                     __end_of_INT1_ISR:
 45590                           	opt callstack 0
 45591                           
 45592 ;; *************** function _INT1_CallBack *****************
 45593 ;; Defined at:
 45594 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 45595 ;; Parameters:    Size  Location     Type
 45596 ;;		None
 45597 ;; Auto vars:     Size  Location     Type
 45598 ;;		None
 45599 ;; Return value:  Size  Location     Type
 45600 ;;                  1  [STACK] void 
 45601 ;; Registers used:
 45602 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 45603 ;; Tracked objects:
 45604 ;;		On entry : 3F/39
 45605 ;;		On exit  : 0/0
 45606 ;;		Unchanged: 0/0
 45607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45612 ;;Total ram usage:        0 bytes
 45613 ;; Hardware stack levels used:    1
 45614 ;; Hardware stack levels required when called:    4
 45615 ;; This function calls:
 45616 ;;		Absolute function
 45617 ;;		_INT1_DefaultInterruptHandler
 45618 ;;		_switch_handler
 45619 ;; This function is called by:
 45620 ;;		_INT1_ISR
 45621 ;; This function uses a reentrant model
 45622 ;;
 45623                           
 45624                           	psect	text184
 45625  001ED4                     __ptext184:
 45626                           	opt callstack 0
 45627  001ED4                     _INT1_CallBack:
 45628                           	opt callstack 11
 45629                           
 45630                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 45631                           
 45632                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45633                           ;incstack = 0
 45634  001ED4  0100               	movlb	0	; () banked
 45635  001ED6  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 45636  001ED8  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 45637  001EDA  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 45638  001EDC  B4D8               	btfsc	status,2,c
 45639  001EDE  0012               	return	
 45640                           
 45641                           ; BSR set to: 0
 45642                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 45643  001EE0  D801               	call	u1308_28
 45644  001EE2  0012               	return	
 45645  001EE4                     u1308_28:
 45646  001EE4  0005               	push	
 45647  001EE6  6EFA               	movwf	pclath,c
 45648  001EE8  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 45649  001EEA  6EFD               	movwf	tosl,c
 45650  001EEC  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 45651  001EEE  6EFE               	movwf	tosh,c
 45652  001EF0  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 45653  001EF2  6EFF               	movwf	tosu,c
 45654  001EF4  50FA               	movf	pclath,w,c
 45655  001EF6  0012               	return		;indir
 45656  001EF8                     __end_of_INT1_CallBack:
 45657                           	opt callstack 0
 45658                           
 45659 ;; *************** function _INT1_DefaultInterruptHandler *****************
 45660 ;; Defined at:
 45661 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 45662 ;; Parameters:    Size  Location     Type
 45663 ;;		None
 45664 ;; Auto vars:     Size  Location     Type
 45665 ;;		None
 45666 ;; Return value:  Size  Location     Type
 45667 ;;                  1  [STACK] void 
 45668 ;; Registers used:
 45669 ;;		None
 45670 ;; Tracked objects:
 45671 ;;		On entry : 3F/0
 45672 ;;		On exit  : 0/0
 45673 ;;		Unchanged: 0/0
 45674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45679 ;;Total ram usage:        0 bytes
 45680 ;; Hardware stack levels used:    1
 45681 ;; Hardware stack levels required when called:    3
 45682 ;; This function calls:
 45683 ;;		Nothing
 45684 ;; This function is called by:
 45685 ;;		_EXT_INT_Initialize
 45686 ;;		_INT1_CallBack
 45687 ;; This function uses a reentrant model
 45688 ;;
 45689                           
 45690                           	psect	text185
 45691  01D40E                     __ptext185:
 45692                           	opt callstack 0
 45693  01D40E                     _INT1_DefaultInterruptHandler:
 45694                           	opt callstack 11
 45695                           
 45696                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 45697                           
 45698                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45699                           ;incstack = 0
 45700  01D40E  0012               	return		;funcret
 45701  01D410                     __end_of_INT1_DefaultInterruptHandler:
 45702                           	opt callstack 0
 45703                           
 45704 ;; *************** function _switch_handler *****************
 45705 ;; Defined at:
 45706 ;;		line 58 in file "dio.c"
 45707 ;; Parameters:    Size  Location     Type
 45708 ;;		None
 45709 ;; Auto vars:     Size  Location     Type
 45710 ;;  i               1  [STACK] unsigned char 
 45711 ;;  sw_value        1  [STACK] unsigned char 
 45712 ;; Return value:  Size  Location     Type
 45713 ;;                  1  [STACK] void 
 45714 ;; Registers used:
 45715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 45716 ;; Tracked objects:
 45717 ;;		On entry : 3F/0
 45718 ;;		On exit  : 0/0
 45719 ;;		Unchanged: 0/0
 45720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45725 ;;Total ram usage:        0 bytes
 45726 ;; Hardware stack levels used:    1
 45727 ;; Hardware stack levels required when called:    3
 45728 ;; This function calls:
 45729 ;;		Nothing
 45730 ;; This function is called by:
 45731 ;;		_start_switch_handler
 45732 ;;		_INT1_CallBack
 45733 ;; This function uses a reentrant model
 45734 ;;
 45735                           
 45736                           	psect	text186
 45737  01E9DE                     __ptext186:
 45738                           	opt callstack 0
 45739  01E9DE                     _switch_handler:
 45740                           	opt callstack 0
 45741                           
 45742                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45743  01E9DE  52E6               	movf	postinc1,f,c
 45744  01E9E0  52E6               	movf	postinc1,f,c
 45745                           
 45746                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 45747                           ;stkvar	_i @ sp[(-2)+0]
 45748                           
 45749                           ;incstack = 0
 45750  01E9E2  0EFE               	movlw	-2
 45751  01E9E4  6AE3               	clrf	plusw1,c
 45752  01E9E6  9ABF               	bcf	191,5,c	;volatile
 45753                           
 45754                           ;dio.c: 72:  __nop();
 45755  01E9E8  F000               	nop	
 45756                           
 45757                           ;dio.c: 73:  __nop();
 45758  01E9EA  F000               	nop	
 45759                           
 45760                           ;dio.c: 74:  __nop();
 45761  01E9EC  F000               	nop	
 45762                           
 45763                           ;dio.c: 75:  __nop();
 45764  01E9EE  F000               	nop	
 45765                           
 45766                           ;dio.c: 76:  __nop();
 45767  01E9F0  F000               	nop	
 45768                           
 45769                           ;dio.c: 77:  __nop();
 45770  01E9F2  F000               	nop	
 45771  01E9F4  D016               	goto	l13668
 45772  01E9F6                     l13654:
 45773                           
 45774                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 45775  01E9F6  A6CF               	btfss	207,3,c	;volatile
 45776  01E9F8  D00E               	goto	u1274_20
 45777  01E9FA  D00A               	goto	u1274_21
 45778  01E9FC                     u1272_28:
 45779                           
 45780                           ;stkvar	_sw_value @ sp[(-2)+1]
 45781  01E9FC  0EFF               	movlw	-1
 45782  01E9FE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 45783                           
 45784                           ;dio.c: 83:    break;
 45785  01EA04  D027               	goto	l13670
 45786  01EA06                     l13656:
 45787                           
 45788                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 45789  01EA06  A4CF               	btfss	207,2,c	;volatile
 45790  01EA08  D006               	goto	u1274_20
 45791  01EA0A  D002               	goto	u1274_21
 45792  01EA0C                     l13658:
 45793                           
 45794                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 45795  01EA0C  A6CD               	btfss	205,3,c	;volatile
 45796  01EA0E  D003               	goto	u1274_20
 45797  01EA10                     u1274_21:
 45798  01EA10  6A35               	clrf	(btemp+11)^0,c
 45799  01EA12  2A35               	incf	(btemp+11)^0,f,c
 45800  01EA14  D7F3               	goto	u1272_28
 45801  01EA16                     u1274_20:
 45802  01EA16  6A35               	clrf	(btemp+11)^0,c
 45803  01EA18  D7F1               	goto	u1272_28
 45804  01EA1A                     l13660:
 45805                           
 45806                           ;dio.c: 91:    sw_value = 1;
 45807                           ;stkvar	_sw_value @ sp[(-2)+1]
 45808  01EA1A  0EFF               	movlw	-1
 45809  01EA1C  6AE3               	clrf	plusw1,c
 45810  01EA1E  2AE3               	incf	plusw1,f,c
 45811                           
 45812                           ;dio.c: 92:    break;
 45813  01EA20  D019               	goto	l13670
 45814  01EA22                     l13668:
 45815                           
 45816                           ;stkvar	_i @ sp[(-2)+0]
 45817  01EA22  0EFE               	movlw	-2
 45818  01EA24  50E3               	movf	plusw1,w,c
 45819  01EA26  6E34               	movwf	(btemp+10)^0,c
 45820  01EA28  6A35               	clrf	(btemp+11)^0,c
 45821                           
 45822                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 45823                           ; Switch size 1, requested type "simple"
 45824                           ; Number of cases is 1, Range of values is 0 to 0
 45825                           ; switch strategies available:
 45826                           ; Name         Instructions Cycles
 45827                           ; simple_byte            4     3 (average)
 45828                           ;	Chosen strategy is simple_byte
 45829  01EA2A  5035               	movf	(btemp+11)^0,w,c
 45830  01EA2C  0A00               	xorlw	0	; case 0
 45831  01EA2E  A4D8               	btfss	status,2,c
 45832  01EA30  D7F4               	goto	l13660
 45833                           
 45834                           ; Switch size 1, requested type "simple"
 45835                           ; Number of cases is 5, Range of values is 0 to 4
 45836                           ; switch strategies available:
 45837                           ; Name         Instructions Cycles
 45838                           ; simple_byte           16     9 (average)
 45839                           ;	Chosen strategy is simple_byte
 45840  01EA32  5034               	movf	(btemp+10)^0,w,c
 45841  01EA34  0A00               	xorlw	0	; case 0
 45842  01EA36  B4D8               	btfsc	status,2,c
 45843  01EA38  D7F0               	goto	l13660
 45844  01EA3A  0A01               	xorlw	1	; case 1
 45845  01EA3C  B4D8               	btfsc	status,2,c
 45846  01EA3E  D7ED               	goto	l13660
 45847  01EA40  0A03               	xorlw	3	; case 2
 45848  01EA42  B4D8               	btfsc	status,2,c
 45849  01EA44  D7E0               	goto	l13656
 45850  01EA46  0A01               	xorlw	1	; case 3
 45851  01EA48  B4D8               	btfsc	status,2,c
 45852  01EA4A  D7D5               	goto	l13654
 45853  01EA4C  0A07               	xorlw	7	; case 4
 45854  01EA4E  B4D8               	btfsc	status,2,c
 45855  01EA50  D7DD               	goto	l13658
 45856  01EA52  D7E3               	goto	l13660
 45857  01EA54                     l13670:
 45858                           
 45859                           ;dio.c: 102:   if (sw_value) {
 45860                           ;stkvar	_sw_value @ sp[(-2)+1]
 45861  01EA54  0EFF               	movlw	-1
 45862  01EA56  50E3               	movf	plusw1,w,c
 45863  01EA58  B4D8               	btfsc	status,2,c
 45864  01EA5A  D018               	goto	l13676
 45865                           
 45866                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 45867                           ;stkvar	_i @ sp[(-2)+0]
 45868  01EA5C  0EFE               	movlw	-2
 45869  01EA5E  50E3               	movf	plusw1,w,c
 45870  01EA60  0D05               	mullw	5
 45871  01EA62  0EBB               	movlw	low _S
 45872  01EA64  24F3               	addwf	243,w,c
 45873  01EA66  6ED9               	movwf	fsr2l,c
 45874  01EA68  0E01               	movlw	high _S
 45875  01EA6A  20F4               	addwfc	prodh,w,c
 45876  01EA6C  6EDA               	movwf	fsr2h,c
 45877  01EA6E  04DE               	decf	postinc2,w,c
 45878  01EA70  A4D8               	btfss	status,2,c
 45879  01EA72  D049               	goto	l13684
 45880                           
 45881                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 45882                           ;stkvar	_i @ sp[(-2)+0]
 45883  01EA74  0EFE               	movlw	-2
 45884  01EA76  50E3               	movf	plusw1,w,c
 45885  01EA78  0D05               	mullw	5
 45886  01EA7A  0EBB               	movlw	low _S
 45887  01EA7C  24F3               	addwf	243,w,c
 45888  01EA7E  6ED9               	movwf	fsr2l,c
 45889  01EA80  0E01               	movlw	high _S
 45890  01EA82  20F4               	addwfc	prodh,w,c
 45891  01EA84  6EDA               	movwf	fsr2h,c
 45892  01EA86  0E00               	movlw	0
 45893  01EA88  6EDF               	movwf	indf2,c
 45894  01EA8A  D03D               	goto	l13684
 45895  01EA8C                     l13676:
 45896                           
 45897                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 45898                           ;stkvar	_i @ sp[(-2)+0]
 45899  01EA8C  0EFE               	movlw	-2
 45900  01EA8E  50E3               	movf	plusw1,w,c
 45901  01EA90  0D05               	mullw	5
 45902  01EA92  0EBB               	movlw	low _S
 45903  01EA94  24F3               	addwf	243,w,c
 45904  01EA96  6ED9               	movwf	fsr2l,c
 45905  01EA98  0E01               	movlw	high _S
 45906  01EA9A  20F4               	addwfc	prodh,w,c
 45907  01EA9C  6EDA               	movwf	fsr2h,c
 45908  01EA9E  50DF               	movf	indf2,w,c
 45909  01EAA0  A4D8               	btfss	status,2,c
 45910  01EAA2  D031               	goto	l13684
 45911                           
 45912                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 45913                           ;stkvar	_i @ sp[(-2)+0]
 45914  01EAA4  0EFE               	movlw	-2
 45915  01EAA6  50E3               	movf	plusw1,w,c
 45916  01EAA8  0D05               	mullw	5
 45917  01EAAA  0EBB               	movlw	low _S
 45918  01EAAC  24F3               	addwf	243,w,c
 45919  01EAAE  6ED9               	movwf	fsr2l,c
 45920  01EAB0  0E01               	movlw	high _S
 45921  01EAB2  20F4               	addwfc	prodh,w,c
 45922  01EAB4  6EDA               	movwf	fsr2h,c
 45923  01EAB6  0E01               	movlw	1
 45924  01EAB8  6EDF               	movwf	indf2,c
 45925                           
 45926                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 45927  01EABA  EE20  F2B1         	lfsr	2,_V+177	;volatile
 45928                           
 45929                           ;stkvar	_i @ sp[(-2)+0]
 45930  01EABE  0EFE               	movlw	-2
 45931  01EAC0  50E3               	movf	plusw1,w,c
 45932  01EAC2  0D05               	mullw	5
 45933  01EAC4  0EBC               	movlw	low (_S+1)
 45934  01EAC6  24F3               	addwf	243,w,c
 45935  01EAC8  6EE9               	movwf	fsr0l,c
 45936  01EACA  0E01               	movlw	high (_S+1)
 45937  01EACC  20F4               	addwfc	prodh,w,c
 45938  01EACE  6EEA               	movwf	fsr0h,c
 45939  01EAD0  006F FF7B FFEE     	movff	postinc2,postinc0
 45940  01EAD6  006F FF7B FFEE     	movff	postinc2,postinc0
 45941  01EADC  006F FF7B FFEE     	movff	postinc2,postinc0
 45942  01EAE2  006F FF7B FFEE     	movff	postinc2,postinc0
 45943                           
 45944                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 45945                           ;stkvar	_i @ sp[(-2)+0]
 45946  01EAE8  0EFE               	movlw	-2
 45947  01EAEA  006F FF8C  F035    	movff	plusw1,btemp+11
 45948  01EAF0  0E01               	movlw	1
 45949  01EAF2  6E34               	movwf	(btemp+10)^0,c
 45950  01EAF4  2A35               	incf	(btemp+11)^0,f,c
 45951  01EAF6  D002               	goto	u1278_24
 45952  01EAF8                     u1278_25:
 45953  01EAF8  90D8               	bcf	status,0,c
 45954  01EAFA  3634               	rlcf	(btemp+10)^0,f,c
 45955  01EAFC                     u1278_24:
 45956  01EAFC  2E35               	decfsz	(btemp+11)^0,f,c
 45957  01EAFE  D7FC               	goto	u1278_25
 45958  01EB00  5034               	movf	(btemp+10)^0,w,c
 45959  01EB02  0101               	movlb	1	; () banked
 45960  01EB04  13E3               	iorwf	(_S+40)& (0+255),f,b	;volatile
 45961  01EB06                     l13684:
 45962                           
 45963                           ;dio.c: 113:  } while (++i < 6);
 45964                           ;stkvar	_i @ sp[(-2)+0]
 45965  01EB06  0EFE               	movlw	-2
 45966  01EB08  2AE3               	incf	plusw1,f,c
 45967  01EB0A  0EFE               	movlw	-2
 45968  01EB0C  006F FF8C  F02A    	movff	plusw1,btemp
 45969  01EB12  0E05               	movlw	5
 45970  01EB14  642A               	cpfsgt	btemp^0,c
 45971  01EB16  D785               	goto	l13668
 45972                           
 45973                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 45974  01EB18  8ABF               	bsf	191,5,c	;volatile
 45975                           
 45976                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45977  01EB1A  52E5               	movf	postdec1,f,c
 45978  01EB1C  52E5               	movf	postdec1,f,c
 45979  01EB1E  0012               	return		;funcret
 45980  01EB20                     __end_of_switch_handler:
 45981                           	opt callstack 0
 45982                           
 45983 ;; *************** function _TMR5_ISR *****************
 45984 ;; Defined at:
 45985 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 45986 ;; Parameters:    Size  Location     Type
 45987 ;;		None
 45988 ;; Auto vars:     Size  Location     Type
 45989 ;;		None
 45990 ;; Return value:  Size  Location     Type
 45991 ;;                  1    wreg      void 
 45992 ;; Registers used:
 45993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 45994 ;; Tracked objects:
 45995 ;;		On entry : 0/0
 45996 ;;		On exit  : 3F/0
 45997 ;;		Unchanged: 0/0
 45998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46001 ;;      Temps:         31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46002 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46003 ;;Total ram usage:       31 bytes
 46004 ;; Hardware stack levels used:    1
 46005 ;; Hardware stack levels required when called:    9
 46006 ;; This function calls:
 46007 ;;		_TMR5_CallBack
 46008 ;;		_TMR5_WriteTimer
 46009 ;; This function is called by:
 46010 ;;		Interrupt level 1
 46011 ;; This function uses a non-reentrant model
 46012 ;;
 46013                           
 46014                           	psect	text187
 46015  01D410                     __ptext187:
 46016                           	opt callstack 0
 46017  01D410                     _TMR5_ISR:
 46018                           	opt callstack 7
 46019                           
 46020                           ;incstack = 0
 46021  01D410  006F FF60  F00D    	movff	status,??_TMR5_ISR+2
 46022  01D416  0060  F0A8  F00E   	movff	btemp,??_TMR5_ISR+3
 46023  01D41C  0060  F0AC  F00F   	movff	btemp+1,??_TMR5_ISR+4
 46024  01D422  0060  F0B0  F010   	movff	btemp+2,??_TMR5_ISR+5
 46025  01D428  0060  F0B4  F011   	movff	btemp+3,??_TMR5_ISR+6
 46026  01D42E  0060  F0B8  F012   	movff	btemp+4,??_TMR5_ISR+7
 46027  01D434  0060  F0BC  F013   	movff	btemp+5,??_TMR5_ISR+8
 46028  01D43A  0060  F0C0  F014   	movff	btemp+6,??_TMR5_ISR+9
 46029  01D440  0060  F0C4  F015   	movff	btemp+7,??_TMR5_ISR+10
 46030  01D446  0060  F0C8  F016   	movff	btemp+8,??_TMR5_ISR+11
 46031  01D44C  0060  F0CC  F017   	movff	btemp+9,??_TMR5_ISR+12
 46032  01D452  0060  F0D0  F018   	movff	btemp+10,??_TMR5_ISR+13
 46033  01D458  0060  F0D4  F019   	movff	btemp+11,??_TMR5_ISR+14
 46034  01D45E  0060  F0E8  F01A   	movff	btemp+16,??_TMR5_ISR+15
 46035  01D464  0060  F0EC  F01B   	movff	btemp+17,??_TMR5_ISR+16
 46036  01D46A  0060  F0F0  F01C   	movff	btemp+18,??_TMR5_ISR+17
 46037  01D470  0060  F0F4  F01D   	movff	btemp+19,??_TMR5_ISR+18
 46038  01D476  0060  F0F8  F01E   	movff	btemp+20,??_TMR5_ISR+19
 46039  01D47C  0060  F0FC  F01F   	movff	btemp+21,??_TMR5_ISR+20
 46040  01D482  0060  F100  F020   	movff	btemp+22,??_TMR5_ISR+21
 46041  01D488  0060  F104  F021   	movff	btemp+23,??_TMR5_ISR+22
 46042  01D48E  0060  F108  F022   	movff	btemp+24,??_TMR5_ISR+23
 46043  01D494  0060  F10C  F023   	movff	btemp+25,??_TMR5_ISR+24
 46044  01D49A  0060  F110  F024   	movff	btemp+26,??_TMR5_ISR+25
 46045  01D4A0  0060  F114  F025   	movff	btemp+27,??_TMR5_ISR+26
 46046  01D4A6  0060  F118  F026   	movff	btemp+28,??_TMR5_ISR+27
 46047  01D4AC  0060  F11C  F027   	movff	btemp+29,??_TMR5_ISR+28
 46048  01D4B2  0060  F120  F028   	movff	btemp+30,??_TMR5_ISR+29
 46049  01D4B8  0060  F124  F029   	movff	btemp+31,??_TMR5_ISR+30
 46050  01D4BE  EE16  F19B         	lfsr	1,___intlo_sp
 46051                           
 46052                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 46053  01D4C2  0139               	movlb	57	; () banked
 46054  01D4C4  9DA8               	bcf	168,6,b	;volatile
 46055                           
 46056                           ; BSR set to: 57
 46057                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 46058  01D4C6  0060  F33B  FFE6   	movff	_timer5ReloadVal,postinc1
 46059  01D4CC  0060  F33F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 46060  01D4D2  ECEE  F00B         	call	_TMR5_WriteTimer	;wreg free
 46061                           
 46062                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 46063  01D4D6  0102               	movlb	2	; () banked
 46064  01D4D8  51A7               	movf	(_V+167)& (0+255),w,b	;volatile
 46065  01D4DA  6E0B               	movwf	??_TMR5_ISR^0,c
 46066  01D4DC  6A0C               	clrf	(??_TMR5_ISR+1)^0,c
 46067  01D4DE  0E05               	movlw	5
 46068  01D4E0  260B               	addwf	??_TMR5_ISR^0,f,c
 46069  01D4E2  0E00               	movlw	0
 46070  01D4E4  220C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 46071  01D4E6  0100               	movlb	0	; () banked
 46072  01D4E8  4BCC               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 46073  01D4EA  2BCD               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 46074  01D4EC  500B               	movf	??_TMR5_ISR^0,w,c
 46075  01D4EE  5DCC               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 46076  01D4F0  500C               	movf	(??_TMR5_ISR+1)^0,w,c
 46077  01D4F2  59CD               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 46078  01D4F4  A0D8               	btfss	status,0,c
 46079  01D4F6  D005               	goto	i1l1021
 46080                           
 46081                           ; BSR set to: 0
 46082                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 46083  01D4F8  EC7C  F00F         	call	_TMR5_CallBack	;wreg free
 46084                           
 46085                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 46086  01D4FC  0100               	movlb	0	; () banked
 46087  01D4FE  6BCC               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 46088  01D500  6BCD               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 46089  01D502                     i1l1021:
 46090                           
 46091                           ; BSR set to: 0
 46092  01D502  0060  F0A4  F049   	movff	??_TMR5_ISR+30,btemp+31
 46093  01D508  0060  F0A0  F048   	movff	??_TMR5_ISR+29,btemp+30
 46094  01D50E  0060  F09C  F047   	movff	??_TMR5_ISR+28,btemp+29
 46095  01D514  0060  F098  F046   	movff	??_TMR5_ISR+27,btemp+28
 46096  01D51A  0060  F094  F045   	movff	??_TMR5_ISR+26,btemp+27
 46097  01D520  0060  F090  F044   	movff	??_TMR5_ISR+25,btemp+26
 46098  01D526  0060  F08C  F043   	movff	??_TMR5_ISR+24,btemp+25
 46099  01D52C  0060  F088  F042   	movff	??_TMR5_ISR+23,btemp+24
 46100  01D532  0060  F084  F041   	movff	??_TMR5_ISR+22,btemp+23
 46101  01D538  0060  F080  F040   	movff	??_TMR5_ISR+21,btemp+22
 46102  01D53E  0060  F07C  F03F   	movff	??_TMR5_ISR+20,btemp+21
 46103  01D544  0060  F078  F03E   	movff	??_TMR5_ISR+19,btemp+20
 46104  01D54A  0060  F074  F03D   	movff	??_TMR5_ISR+18,btemp+19
 46105  01D550  0060  F070  F03C   	movff	??_TMR5_ISR+17,btemp+18
 46106  01D556  0060  F06C  F03B   	movff	??_TMR5_ISR+16,btemp+17
 46107  01D55C  0060  F068  F03A   	movff	??_TMR5_ISR+15,btemp+16
 46108  01D562  0060  F064  F035   	movff	??_TMR5_ISR+14,btemp+11
 46109  01D568  0060  F060  F034   	movff	??_TMR5_ISR+13,btemp+10
 46110  01D56E  0060  F05C  F033   	movff	??_TMR5_ISR+12,btemp+9
 46111  01D574  0060  F058  F032   	movff	??_TMR5_ISR+11,btemp+8
 46112  01D57A  0060  F054  F031   	movff	??_TMR5_ISR+10,btemp+7
 46113  01D580  0060  F050  F030   	movff	??_TMR5_ISR+9,btemp+6
 46114  01D586  0060  F04C  F02F   	movff	??_TMR5_ISR+8,btemp+5
 46115  01D58C  0060  F048  F02E   	movff	??_TMR5_ISR+7,btemp+4
 46116  01D592  0060  F044  F02D   	movff	??_TMR5_ISR+6,btemp+3
 46117  01D598  0060  F040  F02C   	movff	??_TMR5_ISR+5,btemp+2
 46118  01D59E  0060  F03C  F02B   	movff	??_TMR5_ISR+4,btemp+1
 46119  01D5A4  0060  F038  F02A   	movff	??_TMR5_ISR+3,btemp
 46120  01D5AA  0060  F037  FFD8   	movff	??_TMR5_ISR+2,status
 46121  01D5B0  0011               	retfie		f
 46122  01D5B2                     __end_of_TMR5_ISR:
 46123                           	opt callstack 0
 46124                           
 46125 ;; *************** function _TMR5_WriteTimer *****************
 46126 ;; Defined at:
 46127 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 46128 ;; Parameters:    Size  Location     Type
 46129 ;;  timerVal        2  [STACK] unsigned short 
 46130 ;; Auto vars:     Size  Location     Type
 46131 ;;		None
 46132 ;; Return value:  Size  Location     Type
 46133 ;;                  1  [STACK] void 
 46134 ;; Registers used:
 46135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 46136 ;; Tracked objects:
 46137 ;;		On entry : 3F/39
 46138 ;;		On exit  : 0/0
 46139 ;;		Unchanged: 0/0
 46140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46145 ;;Total ram usage:        0 bytes
 46146 ;; Hardware stack levels used:    1
 46147 ;; Hardware stack levels required when called:    3
 46148 ;; This function calls:
 46149 ;;		Nothing
 46150 ;; This function is called by:
 46151 ;;		_TMR5_ISR
 46152 ;; This function uses a reentrant model
 46153 ;;
 46154                           
 46155                           	psect	text188
 46156  0017DC                     __ptext188:
 46157                           	opt callstack 0
 46158  0017DC                     _TMR5_WriteTimer:
 46159                           	opt callstack 12
 46160                           
 46161                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 46162                           
 46163                           ; BSR set to: 0
 46164                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46165                           ;incstack = 0
 46166  0017DC  A49A               	btfss	154,2,c	;volatile
 46167  0017DE  D00F               	goto	l13896
 46168                           
 46169                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 46170  0017E0  909A               	bcf	154,0,c	;volatile
 46171                           
 46172                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 46173                           ;stkvar	_timerVal @ sp[(0)+-2]
 46174  0017E2  0EFF               	movlw	255
 46175  0017E4  24E1               	addwf	fsr1l,w,c
 46176  0017E6  6ED9               	movwf	fsr2l,c
 46177  0017E8  0EFF               	movlw	255
 46178  0017EA  20E2               	addwfc	fsr1h,w,c
 46179  0017EC  6EDA               	movwf	fsr2h,c
 46180  0017EE  50DF               	movf	indf2,w,c
 46181  0017F0  6E99               	movwf	153,c	;volatile
 46182                           
 46183                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 46184                           ;stkvar	_timerVal @ sp[(0)+-2]
 46185  0017F2  0EFE               	movlw	-2
 46186  0017F4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 46187                           
 46188                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 46189  0017FA  809A               	bsf	154,0,c	;volatile
 46190                           
 46191                           ;mcc_generated_files/tmr5.c: 144:  } else {
 46192  0017FC  D00C               	goto	l1004
 46193  0017FE                     l13896:
 46194                           
 46195                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 46196                           ;stkvar	_timerVal @ sp[(0)+-2]
 46197  0017FE  0EFF               	movlw	255
 46198  001800  24E1               	addwf	fsr1l,w,c
 46199  001802  6ED9               	movwf	fsr2l,c
 46200  001804  0EFF               	movlw	255
 46201  001806  20E2               	addwfc	fsr1h,w,c
 46202  001808  6EDA               	movwf	fsr2h,c
 46203  00180A  50DF               	movf	indf2,w,c
 46204  00180C  6E99               	movwf	153,c	;volatile
 46205                           
 46206                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 46207                           ;stkvar	_timerVal @ sp[(0)+-2]
 46208  00180E  0EFE               	movlw	-2
 46209  001810  006F FF8F FF98     	movff	plusw1,16280	;volatile
 46210  001816                     l1004:
 46211                           
 46212                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 46213  001816  52E5               	movf	postdec1,f,c
 46214  001818  52E5               	movf	postdec1,f,c
 46215  00181A  0012               	return		;funcret
 46216  00181C                     __end_of_TMR5_WriteTimer:
 46217                           	opt callstack 0
 46218                           
 46219 ;; *************** function _TMR5_CallBack *****************
 46220 ;; Defined at:
 46221 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 46222 ;; Parameters:    Size  Location     Type
 46223 ;;		None
 46224 ;; Auto vars:     Size  Location     Type
 46225 ;;		None
 46226 ;; Return value:  Size  Location     Type
 46227 ;;                  1  [STACK] void 
 46228 ;; Registers used:
 46229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 46230 ;; Tracked objects:
 46231 ;;		On entry : 3F/0
 46232 ;;		On exit  : 0/0
 46233 ;;		Unchanged: 0/0
 46234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46239 ;;Total ram usage:        0 bytes
 46240 ;; Hardware stack levels used:    1
 46241 ;; Hardware stack levels required when called:    8
 46242 ;; This function calls:
 46243 ;;		Absolute function
 46244 ;;		_TMR5_DefaultInterruptHandler
 46245 ;; This function is called by:
 46246 ;;		_TMR5_ISR
 46247 ;; This function uses a reentrant model
 46248 ;;
 46249                           
 46250                           	psect	text189
 46251  001EF8                     __ptext189:
 46252                           	opt callstack 0
 46253  001EF8                     _TMR5_CallBack:
 46254                           	opt callstack 7
 46255                           
 46256                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 46257                           
 46258                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46259                           ;incstack = 0
 46260  001EF8  0100               	movlb	0	; () banked
 46261  001EFA  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 46262  001EFC  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 46263  001EFE  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 46264  001F00  B4D8               	btfsc	status,2,c
 46265  001F02  0012               	return	
 46266                           
 46267                           ; BSR set to: 0
 46268                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 46269  001F04  D801               	call	u1317_28
 46270  001F06  0012               	return	
 46271  001F08                     u1317_28:
 46272  001F08  0005               	push	
 46273  001F0A  6EFA               	movwf	pclath,c
 46274  001F0C  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 46275  001F0E  6EFD               	movwf	tosl,c
 46276  001F10  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 46277  001F12  6EFE               	movwf	tosh,c
 46278  001F14  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 46279  001F16  6EFF               	movwf	tosu,c
 46280  001F18  50FA               	movf	pclath,w,c
 46281  001F1A  0012               	return		;indir
 46282  001F1C                     __end_of_TMR5_CallBack:
 46283                           	opt callstack 0
 46284                           
 46285 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 46286 ;; Defined at:
 46287 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 46288 ;; Parameters:    Size  Location     Type
 46289 ;;		None
 46290 ;; Auto vars:     Size  Location     Type
 46291 ;;		None
 46292 ;; Return value:  Size  Location     Type
 46293 ;;                  1  [STACK] void 
 46294 ;; Registers used:
 46295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 46296 ;; Tracked objects:
 46297 ;;		On entry : 3F/0
 46298 ;;		On exit  : 0/0
 46299 ;;		Unchanged: 0/0
 46300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46305 ;;Total ram usage:        0 bytes
 46306 ;; Hardware stack levels used:    1
 46307 ;; Hardware stack levels required when called:    7
 46308 ;; This function calls:
 46309 ;;		_check_day_time
 46310 ;; This function is called by:
 46311 ;;		_TMR5_Initialize
 46312 ;;		_TMR5_CallBack
 46313 ;; This function uses a reentrant model
 46314 ;;
 46315                           
 46316                           	psect	text190
 46317  001948                     __ptext190:
 46318                           	opt callstack 0
 46319  001948                     _TMR5_DefaultInterruptHandler:
 46320                           	opt callstack 7
 46321                           
 46322                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 46323                           
 46324                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46325                           ;incstack = 0
 46326  001948  A0BE               	btfss	190,0,c	;volatile
 46327  00194A  D002               	goto	u1243_20
 46328  00194C  0E01               	movlw	1
 46329  00194E  D001               	goto	u1243_26
 46330  001950                     u1243_20:
 46331  001950  0E00               	movlw	0
 46332  001952                     u1243_26:
 46333  001952  0AFF               	xorlw	255
 46334  001954  6E35               	movwf	(btemp+11)^0,c
 46335  001956  50BE               	movf	190,w,c	;volatile
 46336  001958  1835               	xorwf	(btemp+11)^0,w,c
 46337  00195A  0BFE               	andlw	-2
 46338  00195C  1835               	xorwf	(btemp+11)^0,w,c
 46339  00195E  6EBE               	movwf	190,c	;volatile
 46340                           
 46341                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 46342  001960  0E01               	movlw	1
 46343  001962  0102               	movlb	2	; () banked
 46344  001964  27B1               	addwf	(_V+177)& (0+255),f,b	;volatile
 46345  001966  0E00               	movlw	0
 46346  001968  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 46347  00196A  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 46348  00196C  23B4               	addwfc	(_V+180)& (0+255),f,b	;volatile
 46349                           
 46350                           ; BSR set to: 2
 46351                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 46352  00196E  0E01               	movlw	1
 46353  001970  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 46354  001972  0E00               	movlw	0
 46355  001974  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 46356  001976  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 46357  001978  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 46358                           
 46359                           ; BSR set to: 2
 46360                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 46361  00197A  EC3D  F0CD         	call	_check_day_time	;wreg free
 46362                           
 46363                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46364  00197E  0012               	return		;funcret
 46365  001980                     __end_of_TMR5_DefaultInterruptHandler:
 46366                           	opt callstack 0
 46367                           
 46368 ;; *************** function _check_day_time *****************
 46369 ;; Defined at:
 46370 ;;		line 167 in file "mbmc.c"
 46371 ;; Parameters:    Size  Location     Type
 46372 ;;		None
 46373 ;; Auto vars:     Size  Location     Type
 46374 ;;  light           4  [STACK] float 
 46375 ;; Return value:  Size  Location     Type
 46376 ;;                  1  [STACK] _Bool 
 46377 ;; Registers used:
 46378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 46379 ;; Tracked objects:
 46380 ;;		On entry : 3F/2
 46381 ;;		On exit  : 0/0
 46382 ;;		Unchanged: 0/0
 46383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46388 ;;Total ram usage:        0 bytes
 46389 ;; Hardware stack levels used:    1
 46390 ;; Hardware stack levels required when called:    6
 46391 ;; This function calls:
 46392 ;;		___flge
 46393 ;;		_conv_raw_result
 46394 ;;		_get_ac_charger_relay
 46395 ;;		_set_ac_charger_relay
 46396 ;;		_time
 46397 ;; This function is called by:
 46398 ;;		_TMR5_DefaultInterruptHandler
 46399 ;; This function uses a reentrant model
 46400 ;;
 46401                           
 46402                           	psect	text191
 46403  019A7A                     __ptext191:
 46404                           	opt callstack 0
 46405  019A7A                     _check_day_time:
 46406                           	opt callstack 0
 46407                           
 46408                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46409  019A7A  52E6               	movf	postinc1,f,c
 46410  019A7C  52E6               	movf	postinc1,f,c
 46411  019A7E  52E6               	movf	postinc1,f,c
 46412  019A80  52E6               	movf	postinc1,f,c
 46413                           
 46414                           ;mbmc.c: 169:  static uint8_t day_delay = 0;;mbmc.c: 170:  float light;;mbmc.c: 172:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 46415                           
 46416                           ;incstack = 0
 46417  019A82  0E00               	movlw	0
 46418  019A84  6EE6               	movwf	postinc1,c
 46419  019A86  0E0D               	movlw	13
 46420  019A88  6EE6               	movwf	postinc1,c
 46421  019A8A  EC5B  F0C2         	call	_conv_raw_result	;wreg free
 46422                           
 46423                           ;stkvar	_light @ sp[(-4)+0]
 46424  019A8E  0EFC               	movlw	-4
 46425  019A90  0060  F0AB  FFE3   	movff	btemp,plusw1
 46426  019A96  0EFD               	movlw	-3
 46427  019A98  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 46428  019A9E  0EFE               	movlw	-2
 46429  019AA0  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 46430  019AA6  0EFF               	movlw	-1
 46431  019AA8  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 46432                           
 46433                           ;mbmc.c: 176:  if (C.day_update) {
 46434  019AAE  EE22  F247         	lfsr	2,_C+328	;volatile
 46435  019AB2  50DE               	movf	postinc2,w,c
 46436  019AB4  10DE               	iorwf	postinc2,w,c
 46437  019AB6  10DE               	iorwf	postinc2,w,c
 46438  019AB8  10DE               	iorwf	postinc2,w,c
 46439  019ABA  B4D8               	btfsc	status,2,c
 46440  019ABC  D068               	goto	l12648
 46441                           
 46442                           ;mbmc.c: 177:   if (time(((void*)0)) >= C.day_update) {
 46443  019ABE  0062  F91C  F032   	movff	_C+328,btemp+8	;volatile
 46444  019AC4  0062  F920  F033   	movff	_C+329,btemp+9	;volatile
 46445  019ACA  0062  F924  F034   	movff	_C+330,btemp+10	;volatile
 46446  019AD0  0062  F928  F035   	movff	_C+331,btemp+11	;volatile
 46447  019AD6  5032               	movf	(btemp+8)^0,w,c
 46448  019AD8  6E3A               	movwf	(btemp+16)^0,c
 46449  019ADA  5033               	movf	(btemp+9)^0,w,c
 46450  019ADC  6E3B               	movwf	(btemp+17)^0,c
 46451  019ADE  5034               	movf	(btemp+10)^0,w,c
 46452  019AE0  6E3C               	movwf	(btemp+18)^0,c
 46453  019AE2  5035               	movf	(btemp+11)^0,w,c
 46454  019AE4  6E3D               	movwf	(btemp+19)^0,c
 46455  019AE6  6A3E               	clrf	(btemp+20)^0,c
 46456  019AE8  6A3F               	clrf	(btemp+21)^0,c
 46457  019AEA  6A40               	clrf	(btemp+22)^0,c
 46458  019AEC  6A41               	clrf	(btemp+23)^0,c
 46459  019AEE  0E00               	movlw	0
 46460  019AF0  6EE6               	movwf	postinc1,c
 46461  019AF2  0E00               	movlw	0
 46462  019AF4  6EE6               	movwf	postinc1,c
 46463  019AF6  ECCF  F008         	call	_time	;wreg free
 46464  019AFA  52E5               	movf	postdec1,f,c
 46465  019AFC  006F FF9C  F049    	movff	indf1,btemp+31
 46466  019B02  52E5               	movf	postdec1,f,c
 46467  019B04  006F FF9C  F048    	movff	indf1,btemp+30
 46468  019B0A  52E5               	movf	postdec1,f,c
 46469  019B0C  006F FF9C  F047    	movff	indf1,btemp+29
 46470  019B12  52E5               	movf	postdec1,f,c
 46471  019B14  006F FF9C  F046    	movff	indf1,btemp+28
 46472  019B1A  52E5               	movf	postdec1,f,c
 46473  019B1C  006F FF9C  F045    	movff	indf1,btemp+27
 46474  019B22  52E5               	movf	postdec1,f,c
 46475  019B24  006F FF9C  F044    	movff	indf1,btemp+26
 46476  019B2A  52E5               	movf	postdec1,f,c
 46477  019B2C  006F FF9C  F043    	movff	indf1,btemp+25
 46478  019B32  52E5               	movf	postdec1,f,c
 46479  019B34  006F FF9C  F042    	movff	indf1,btemp+24
 46480  019B3A  503A               	movf	(btemp+16)^0,w,c
 46481  019B3C  5C42               	subwf	(btemp+24)^0,w,c
 46482  019B3E  503B               	movf	(btemp+17)^0,w,c
 46483  019B40  5843               	subwfb	(btemp+25)^0,w,c
 46484  019B42  503C               	movf	(btemp+18)^0,w,c
 46485  019B44  5844               	subwfb	(btemp+26)^0,w,c
 46486  019B46  503D               	movf	(btemp+19)^0,w,c
 46487  019B48  5845               	subwfb	(btemp+27)^0,w,c
 46488  019B4A  503E               	movf	(btemp+20)^0,w,c
 46489  019B4C  5846               	subwfb	(btemp+28)^0,w,c
 46490  019B4E  503F               	movf	(btemp+21)^0,w,c
 46491  019B50  5847               	subwfb	(btemp+29)^0,w,c
 46492  019B52  5040               	movf	(btemp+22)^0,w,c
 46493  019B54  5848               	subwfb	(btemp+30)^0,w,c
 46494  019B56  5049               	movf	(btemp+31)^0,w,c
 46495  019B58  0A80               	xorlw	128
 46496  019B5A  6E2A               	movwf	btemp^0,c
 46497  019B5C  5041               	movf	(btemp+23)^0,w,c
 46498  019B5E  0A80               	xorlw	128
 46499  019B60  582A               	subwfb	btemp^0,w,c
 46500  019B62  A0D8               	btfss	status,0,c
 46501  019B64  D014               	goto	l12648
 46502                           
 46503                           ; BSR set to: 57
 46504                           ;mbmc.c: 178:    C.day_update = 0;
 46505  019B66  0E00               	movlw	0
 46506  019B68  006F FFA0  FA47    	movff	wreg,_C+328	;volatile
 46507  019B6E  0E00               	movlw	0
 46508  019B70  006F FFA0  FA48    	movff	wreg,_C+329	;volatile
 46509  019B76  0E00               	movlw	0
 46510  019B78  006F FFA0  FA49    	movff	wreg,_C+330	;volatile
 46511  019B7E  0E00               	movlw	0
 46512  019B80  006F FFA0  FA4A    	movff	wreg,_C+331	;volatile
 46513                           
 46514                           ;mbmc.c: 179:    C.dupdate = 1;
 46515  019B86  0E01               	movlw	1
 46516  019B88  006F FFA0  FA3E    	movff	wreg,_C+319	;volatile
 46517  019B8E                     l12648:
 46518                           
 46519                           ;mbmc.c: 183:  if (!day_delay++ && V.system_stable) {
 46520  019B8E  2A51               	incf	check_day_time@day_delay^0,f,c
 46521  019B90  0451               	decf	check_day_time@day_delay^0,w,c
 46522  019B92  A4D8               	btfss	status,2,c
 46523  019B94  D123               	goto	l2192
 46524  019B96  0102               	movlb	2	; () banked
 46525  019B98  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
 46526  019B9A  B4D8               	btfsc	status,2,c
 46527  019B9C  D11F               	goto	l2192
 46528                           
 46529                           ; BSR set to: 2
 46530                           ;mbmc.c: 184:   if (C.soc > 3) {
 46531  019B9E  EE22  F1B5         	lfsr	2,_C+182	;volatile
 46532  019BA2  0E01               	movlw	1
 46533  019BA4  50DB               	movf	plusw2,w,c
 46534  019BA6  E104               	bnz	u1209_20
 46535  019BA8  0E04               	movlw	4
 46536  019BAA  5CDE               	subwf	postinc2,w,c
 46537  019BAC  A0D8               	btfss	status,0,c
 46538  019BAE  D0ED               	goto	l12682
 46539  019BB0                     u1209_20:
 46540                           
 46541                           ; BSR set to: 2
 46542                           ;mbmc.c: 185:    if (!C.day) {
 46543  019BB0  EE22  F23D         	lfsr	2,_C+318	;volatile
 46544  019BB4  50DF               	movf	indf2,w,c
 46545  019BB6  A4D8               	btfss	status,2,c
 46546  019BB8  D065               	goto	l12668
 46547                           
 46548                           ; BSR set to: 2
 46549                           ;mbmc.c: 186:     if (light > 22.0) {
 46550                           ;stkvar	_light @ sp[(-4)+0]
 46551  019BBA  0EFC               	movlw	-4
 46552  019BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 46553  019BC2  006F FF8F FFE6     	movff	plusw1,postinc1
 46554  019BC8  006F FF8F FFE6     	movff	plusw1,postinc1
 46555  019BCE  006F FF8F FFE6     	movff	plusw1,postinc1
 46556  019BD4  0E00               	movlw	0
 46557  019BD6  6EE6               	movwf	postinc1,c
 46558  019BD8  0E00               	movlw	0
 46559  019BDA  6EE6               	movwf	postinc1,c
 46560  019BDC  0EB0               	movlw	176
 46561  019BDE  6EE6               	movwf	postinc1,c
 46562  019BE0  0E41               	movlw	65
 46563  019BE2  6EE6               	movwf	postinc1,c
 46564  019BE4  ECDD  F0F0         	call	___flge	;wreg free
 46565  019BE8  B02A               	btfsc	btemp& (0+255),0,c
 46566  019BEA  D0F8               	goto	l2192
 46567                           
 46568                           ;mbmc.c: 187:      C.day = 1;
 46569  019BEC  0E01               	movlw	1
 46570  019BEE  006F FFA0  FA3D    	movff	wreg,_C+318	;volatile
 46571                           
 46572                           ;mbmc.c: 188:      C.day_start = time(((void*)0));
 46573  019BF4  0E00               	movlw	0
 46574  019BF6  6EE6               	movwf	postinc1,c
 46575  019BF8  0E00               	movlw	0
 46576  019BFA  6EE6               	movwf	postinc1,c
 46577  019BFC  ECCF  F008         	call	_time	;wreg free
 46578  019C00  52E5               	movf	postdec1,f,c
 46579  019C02  006F FF9C  F041    	movff	indf1,btemp+23
 46580  019C08  52E5               	movf	postdec1,f,c
 46581  019C0A  006F FF9C  F040    	movff	indf1,btemp+22
 46582  019C10  52E5               	movf	postdec1,f,c
 46583  019C12  006F FF9C  F03F    	movff	indf1,btemp+21
 46584  019C18  52E5               	movf	postdec1,f,c
 46585  019C1A  006F FF9C  F03E    	movff	indf1,btemp+20
 46586  019C20  52E5               	movf	postdec1,f,c
 46587  019C22  006F FF9C  F03D    	movff	indf1,btemp+19
 46588  019C28  52E5               	movf	postdec1,f,c
 46589  019C2A  006F FF9C  F03C    	movff	indf1,btemp+18
 46590  019C30  52E5               	movf	postdec1,f,c
 46591  019C32  006F FF9C  F03B    	movff	indf1,btemp+17
 46592  019C38  52E5               	movf	postdec1,f,c
 46593  019C3A  006F FF9C  F03A    	movff	indf1,btemp+16
 46594  019C40  0060  F0E8  F032   	movff	btemp+16,btemp+8
 46595  019C46  0060  F0EC  F033   	movff	btemp+17,btemp+9
 46596  019C4C  0060  F0F0  F034   	movff	btemp+18,btemp+10
 46597  019C52  0060  F0F4  F035   	movff	btemp+19,btemp+11
 46598  019C58  0060  F0C8  FA3F   	movff	btemp+8,_C+320	;volatile
 46599  019C5E  0060  F0CC  FA40   	movff	btemp+9,_C+321	;volatile
 46600  019C64  0060  F0D0  FA41   	movff	btemp+10,_C+322	;volatile
 46601  019C6A  0060  F0D4  FA42   	movff	btemp+11,_C+323	;volatile
 46602                           
 46603                           ; BSR set to: 57
 46604                           ;mbmc.c: 189:      if (get_ac_charger_relay()) {
 46605  019C70  EC16  F011         	call	_get_ac_charger_relay	;wreg free
 46606  019C74  502A               	movf	btemp^0,w,c
 46607  019C76  B4D8               	btfsc	status,2,c
 46608  019C78  D0B5               	goto	l2188
 46609                           
 46610                           ;mbmc.c: 190:       set_ac_charger_relay(0);
 46611  019C7A  0E00               	movlw	0
 46612  019C7C  6EE6               	movwf	postinc1,c
 46613  019C7E  EC00  F011         	call	_set_ac_charger_relay	;wreg free
 46614  019C82  D0B0               	goto	l2188
 46615  019C84                     l12668:
 46616                           
 46617                           ; BSR set to: 2
 46618                           ;mbmc.c: 195:     if (light < 12.0) {
 46619  019C84  0E00               	movlw	0
 46620  019C86  6EE6               	movwf	postinc1,c
 46621  019C88  0E00               	movlw	0
 46622  019C8A  6EE6               	movwf	postinc1,c
 46623  019C8C  0E40               	movlw	64
 46624  019C8E  6EE6               	movwf	postinc1,c
 46625  019C90  0E41               	movlw	65
 46626  019C92  6EE6               	movwf	postinc1,c
 46627                           
 46628                           ;stkvar	_light @ sp[(-8)+0]
 46629  019C94  0EF8               	movlw	-8
 46630  019C96  006F FF8F FFE6     	movff	plusw1,postinc1
 46631  019C9C  006F FF8F FFE6     	movff	plusw1,postinc1
 46632  019CA2  006F FF8F FFE6     	movff	plusw1,postinc1
 46633  019CA8  006F FF8F FFE6     	movff	plusw1,postinc1
 46634  019CAE  ECDD  F0F0         	call	___flge	;wreg free
 46635  019CB2  B02A               	btfsc	btemp& (0+255),0,c
 46636  019CB4  D093               	goto	l2192
 46637                           
 46638                           ;mbmc.c: 196:      C.day = 0;
 46639  019CB6  0E00               	movlw	0
 46640  019CB8  006F FFA0  FA3D    	movff	wreg,_C+318	;volatile
 46641                           
 46642                           ;mbmc.c: 197:      C.day_end = time(((void*)0));
 46643  019CBE  0E00               	movlw	0
 46644  019CC0  6EE6               	movwf	postinc1,c
 46645  019CC2  0E00               	movlw	0
 46646  019CC4  6EE6               	movwf	postinc1,c
 46647  019CC6  ECCF  F008         	call	_time	;wreg free
 46648  019CCA  52E5               	movf	postdec1,f,c
 46649  019CCC  006F FF9C  F041    	movff	indf1,btemp+23
 46650  019CD2  52E5               	movf	postdec1,f,c
 46651  019CD4  006F FF9C  F040    	movff	indf1,btemp+22
 46652  019CDA  52E5               	movf	postdec1,f,c
 46653  019CDC  006F FF9C  F03F    	movff	indf1,btemp+21
 46654  019CE2  52E5               	movf	postdec1,f,c
 46655  019CE4  006F FF9C  F03E    	movff	indf1,btemp+20
 46656  019CEA  52E5               	movf	postdec1,f,c
 46657  019CEC  006F FF9C  F03D    	movff	indf1,btemp+19
 46658  019CF2  52E5               	movf	postdec1,f,c
 46659  019CF4  006F FF9C  F03C    	movff	indf1,btemp+18
 46660  019CFA  52E5               	movf	postdec1,f,c
 46661  019CFC  006F FF9C  F03B    	movff	indf1,btemp+17
 46662  019D02  52E5               	movf	postdec1,f,c
 46663  019D04  006F FF9C  F03A    	movff	indf1,btemp+16
 46664  019D0A  0060  F0E8  F032   	movff	btemp+16,btemp+8
 46665  019D10  0060  F0EC  F033   	movff	btemp+17,btemp+9
 46666  019D16  0060  F0F0  F034   	movff	btemp+18,btemp+10
 46667  019D1C  0060  F0F4  F035   	movff	btemp+19,btemp+11
 46668  019D22  0060  F0C8  FA43   	movff	btemp+8,_C+324	;volatile
 46669  019D28  0060  F0CC  FA44   	movff	btemp+9,_C+325	;volatile
 46670  019D2E  0060  F0D0  FA45   	movff	btemp+10,_C+326	;volatile
 46671  019D34  0060  F0D4  FA46   	movff	btemp+11,_C+327	;volatile
 46672                           
 46673                           ; BSR set to: 57
 46674                           ;mbmc.c: 198:      C.day_update = C.day_end + 14400;
 46675  019D3A  EE22  F243         	lfsr	2,_C+324	;volatile
 46676  019D3E  0E40               	movlw	64
 46677  019D40  24DE               	addwf	postinc2,w,c
 46678  019D42  6E32               	movwf	(btemp+8)^0,c
 46679  019D44  0E38               	movlw	56
 46680  019D46  20DE               	addwfc	postinc2,w,c
 46681  019D48  6E33               	movwf	(btemp+9)^0,c
 46682  019D4A  0E00               	movlw	0
 46683  019D4C  20DE               	addwfc	postinc2,w,c
 46684  019D4E  6E34               	movwf	(btemp+10)^0,c
 46685  019D50  0E00               	movlw	0
 46686  019D52  20DE               	addwfc	postinc2,w,c
 46687  019D54  6E35               	movwf	(btemp+11)^0,c
 46688  019D56  0060  F0C8  FA47   	movff	btemp+8,_C+328	;volatile
 46689  019D5C  0060  F0CC  FA48   	movff	btemp+9,_C+329	;volatile
 46690  019D62  0060  F0D0  FA49   	movff	btemp+10,_C+330	;volatile
 46691  019D68  0060  F0D4  FA4A   	movff	btemp+11,_C+331	;volatile
 46692                           
 46693                           ; BSR set to: 57
 46694                           ;mbmc.c: 202:      if ((C.soc < 20)) {
 46695  019D6E  EE22  F1B5         	lfsr	2,_C+182	;volatile
 46696  019D72  0E01               	movlw	1
 46697  019D74  50DB               	movf	plusw2,w,c
 46698  019D76  E136               	bnz	l2188
 46699  019D78  0E14               	movlw	20
 46700  019D7A  5CDE               	subwf	postinc2,w,c
 46701  019D7C  B0D8               	btfsc	status,0,c
 46702  019D7E  D032               	goto	l2188
 46703                           
 46704                           ; BSR set to: 57
 46705                           ;mbmc.c: 203:       set_ac_charger_relay(1);
 46706  019D80  0E01               	movlw	1
 46707  019D82  6EE6               	movwf	postinc1,c
 46708  019D84  EC00  F011         	call	_set_ac_charger_relay	;wreg free
 46709  019D88  D02D               	goto	l2188
 46710  019D8A                     l12682:
 46711                           
 46712                           ; BSR set to: 2
 46713                           ;mbmc.c: 209:    if (C.p_pv < C.p_inverter) {
 46714  019D8A  EE22  F177         	lfsr	2,_C+120	;volatile
 46715  019D8E  006F FF7B FFE6     	movff	postinc2,postinc1
 46716  019D94  006F FF7B FFE6     	movff	postinc2,postinc1
 46717  019D9A  006F FF7B FFE6     	movff	postinc2,postinc1
 46718  019DA0  006F FF7B FFE6     	movff	postinc2,postinc1
 46719  019DA6  EE22  F17B         	lfsr	2,_C+124	;volatile
 46720  019DAA  006F FF7B FFE6     	movff	postinc2,postinc1
 46721  019DB0  006F FF7B FFE6     	movff	postinc2,postinc1
 46722  019DB6  006F FF7B FFE6     	movff	postinc2,postinc1
 46723  019DBC  006F FF7B FFE6     	movff	postinc2,postinc1
 46724  019DC2  ECDD  F0F0         	call	___flge	;wreg free
 46725  019DC6  B02A               	btfsc	btemp& (0+255),0,c
 46726  019DC8  D009               	goto	l2192
 46727                           
 46728                           ;mbmc.c: 210:     if (!get_ac_charger_relay()) {
 46729  019DCA  EC16  F011         	call	_get_ac_charger_relay	;wreg free
 46730  019DCE  502A               	movf	btemp^0,w,c
 46731  019DD0  A4D8               	btfss	status,2,c
 46732  019DD2  D004               	goto	l2192
 46733                           
 46734                           ;mbmc.c: 211:      set_ac_charger_relay(1);
 46735  019DD4  0E01               	movlw	1
 46736  019DD6  6EE6               	movwf	postinc1,c
 46737  019DD8  EC00  F011         	call	_set_ac_charger_relay	;wreg free
 46738  019DDC                     l2192:
 46739                           
 46740                           ;mbmc.c: 216:  if (day_delay >= 240)
 46741  019DDC  0EEF               	movlw	239
 46742  019DDE  6451               	cpfsgt	check_day_time@day_delay^0,c
 46743  019DE0  D001               	goto	l2188
 46744                           
 46745                           ;mbmc.c: 217:   day_delay = 0;
 46746  019DE2  6A51               	clrf	check_day_time@day_delay^0,c
 46747  019DE4                     l2188:
 46748                           
 46749                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 46750  019DE4  52E5               	movf	postdec1,f,c
 46751  019DE6  52E5               	movf	postdec1,f,c
 46752  019DE8  52E5               	movf	postdec1,f,c
 46753  019DEA  52E5               	movf	postdec1,f,c
 46754  019DEC  0012               	return		;funcret
 46755  019DEE                     __end_of_check_day_time:
 46756                           	opt callstack 0
 46757                           
 46758 ;; *************** function _set_ac_charger_relay *****************
 46759 ;; Defined at:
 46760 ;;		line 136 in file "mbmc.c"
 46761 ;; Parameters:    Size  Location     Type
 46762 ;;  mode            1  [STACK] const _Bool 
 46763 ;; Auto vars:     Size  Location     Type
 46764 ;;		None
 46765 ;; Return value:  Size  Location     Type
 46766 ;;                  1  [STACK] void 
 46767 ;; Registers used:
 46768 ;;		wreg, fsr1l, fsr1h
 46769 ;; Tracked objects:
 46770 ;;		On entry : 0/39
 46771 ;;		On exit  : 0/0
 46772 ;;		Unchanged: 0/0
 46773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46778 ;;Total ram usage:        0 bytes
 46779 ;; Hardware stack levels used:    1
 46780 ;; Hardware stack levels required when called:    3
 46781 ;; This function calls:
 46782 ;;		Nothing
 46783 ;; This function is called by:
 46784 ;;		_check_day_time
 46785 ;; This function uses a reentrant model
 46786 ;;
 46787                           
 46788                           	psect	text192
 46789  002200                     __ptext192:
 46790                           	opt callstack 0
 46791  002200                     _set_ac_charger_relay:
 46792                           	opt callstack 9
 46793                           
 46794                           ;mbmc.c: 136: void set_ac_charger_relay(const _Bool mode);mbmc.c: 137: {;mbmc.c: 138:  L
      +                          ATDbits.LATD6 = mode;
 46795                           ;stkvar	_mode @ sp[(0)+-1]
 46796                           
 46797                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46798                           ;incstack = 0
 46799  002200  0EFF               	movlw	-1
 46800  002202  B0E3               	btfsc	plusw1,0,c
 46801  002204  D002               	bra	u1169_25
 46802  002206  9CBD               	bcf	189,6,c	;volatile
 46803  002208  D001               	bra	u1169_26
 46804  00220A                     u1169_25:
 46805  00220A  8CBD               	bsf	189,6,c	;volatile
 46806  00220C                     u1169_26:
 46807                           
 46808                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 46809  00220C  52E5               	movf	postdec1,f,c
 46810  00220E  0012               	return		;funcret
 46811  002210                     __end_of_set_ac_charger_relay:
 46812                           	opt callstack 0
 46813                           
 46814 ;; *************** function _get_ac_charger_relay *****************
 46815 ;; Defined at:
 46816 ;;		line 141 in file "mbmc.c"
 46817 ;; Parameters:    Size  Location     Type
 46818 ;;		None
 46819 ;; Auto vars:     Size  Location     Type
 46820 ;;		None
 46821 ;; Return value:  Size  Location     Type
 46822 ;;                  1  [STACK] _Bool 
 46823 ;; Registers used:
 46824 ;;		btemp
 46825 ;; Tracked objects:
 46826 ;;		On entry : 0/39
 46827 ;;		On exit  : 0/0
 46828 ;;		Unchanged: 0/0
 46829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46834 ;;Total ram usage:        0 bytes
 46835 ;; Hardware stack levels used:    1
 46836 ;; Hardware stack levels required when called:    3
 46837 ;; This function calls:
 46838 ;;		Nothing
 46839 ;; This function is called by:
 46840 ;;		_check_day_time
 46841 ;;		_calc_bsoc
 46842 ;; This function uses a reentrant model
 46843 ;;
 46844                           
 46845                           	psect	text193
 46846  00222C                     __ptext193:
 46847                           	opt callstack 0
 46848  00222C                     _get_ac_charger_relay:
 46849                           	opt callstack 10
 46850                           
 46851                           ;mbmc.c: 143:  return LATDbits.LATD6;
 46852                           
 46853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46854                           ;incstack = 0
 46855  00222C  ACBD               	btfss	189,6,c	;volatile
 46856  00222E  D003               	goto	u1232_20
 46857  002230  6A2A               	clrf	btemp^0,c
 46858  002232  2A2A               	incf	btemp^0,f,c
 46859  002234  0012               	return	
 46860  002236                     u1232_20:
 46861  002236  6A2A               	clrf	btemp^0,c
 46862                           
 46863                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 46864  002238  0012               	return		;funcret
 46865  00223A                     __end_of_get_ac_charger_relay:
 46866                           	opt callstack 0
 46867                           
 46868 ;; *************** function _TMR3_ISR *****************
 46869 ;; Defined at:
 46870 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 46871 ;; Parameters:    Size  Location     Type
 46872 ;;		None
 46873 ;; Auto vars:     Size  Location     Type
 46874 ;;		None
 46875 ;; Return value:  Size  Location     Type
 46876 ;;                  1    wreg      void 
 46877 ;; Registers used:
 46878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 46879 ;; Tracked objects:
 46880 ;;		On entry : 0/0
 46881 ;;		On exit  : 3F/0
 46882 ;;		Unchanged: 0/0
 46883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46886 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46887 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46888 ;;Total ram usage:       25 bytes
 46889 ;; Hardware stack levels used:    1
 46890 ;; Hardware stack levels required when called:   14
 46891 ;; This function calls:
 46892 ;;		_TMR3_CallBack
 46893 ;;		_TMR3_WriteTimer
 46894 ;; This function is called by:
 46895 ;;		Interrupt level 1
 46896 ;; This function uses a non-reentrant model
 46897 ;;
 46898                           
 46899                           	psect	text194
 46900  01E31C                     __ptext194:
 46901                           	opt callstack 0
 46902  01E31C                     _TMR3_ISR:
 46903                           	opt callstack 2
 46904                           
 46905                           ;incstack = 0
 46906  01E31C  006F FF60  F0E7    	movff	status,??_TMR3_ISR
 46907  01E322  006F FFD8  F0E8    	movff	tblptrl,??_TMR3_ISR+1
 46908  01E328  006F FFDC  F0E9    	movff	tblptrh,??_TMR3_ISR+2
 46909  01E32E  006F FFE0  F0EA    	movff	tblptru,??_TMR3_ISR+3
 46910  01E334  006F FFD4  F0EB    	movff	tablat,??_TMR3_ISR+4
 46911  01E33A  0060  F0A8  F0EC   	movff	btemp,??_TMR3_ISR+5
 46912  01E340  0060  F0AC  F0ED   	movff	btemp+1,??_TMR3_ISR+6
 46913  01E346  0060  F0B0  F0EE   	movff	btemp+2,??_TMR3_ISR+7
 46914  01E34C  0060  F0B4  F0EF   	movff	btemp+3,??_TMR3_ISR+8
 46915  01E352  0060  F0B8  F0F0   	movff	btemp+4,??_TMR3_ISR+9
 46916  01E358  0060  F0BC  F0F1   	movff	btemp+5,??_TMR3_ISR+10
 46917  01E35E  0060  F0C0  F0F2   	movff	btemp+6,??_TMR3_ISR+11
 46918  01E364  0060  F0C4  F0F3   	movff	btemp+7,??_TMR3_ISR+12
 46919  01E36A  0060  F0C8  F0F4   	movff	btemp+8,??_TMR3_ISR+13
 46920  01E370  0060  F0CC  F0F5   	movff	btemp+9,??_TMR3_ISR+14
 46921  01E376  0060  F0D0  F0F6   	movff	btemp+10,??_TMR3_ISR+15
 46922  01E37C  0060  F0D4  F0F7   	movff	btemp+11,??_TMR3_ISR+16
 46923  01E382  0060  F0E8  F0F8   	movff	btemp+16,??_TMR3_ISR+17
 46924  01E388  0060  F0EC  F0F9   	movff	btemp+17,??_TMR3_ISR+18
 46925  01E38E  0060  F0F0  F0FA   	movff	btemp+18,??_TMR3_ISR+19
 46926  01E394  0060  F0F4  F0FB   	movff	btemp+19,??_TMR3_ISR+20
 46927  01E39A  0060  F0F8  F0FC   	movff	btemp+20,??_TMR3_ISR+21
 46928  01E3A0  0060  F0FC  F0FD   	movff	btemp+21,??_TMR3_ISR+22
 46929  01E3A6  0060  F100  F0FE   	movff	btemp+22,??_TMR3_ISR+23
 46930  01E3AC  0060  F104  F0FF   	movff	btemp+23,??_TMR3_ISR+24
 46931  01E3B2  EE16  F19B         	lfsr	1,___intlo_sp
 46932                           
 46933                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 46934  01E3B6  0139               	movlb	57	; () banked
 46935  01E3B8  9DA6               	bcf	166,6,b	;volatile
 46936                           
 46937                           ; BSR set to: 57
 46938                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 46939  01E3BA  0060  F32B  FFE6   	movff	_timer3ReloadVal,postinc1
 46940  01E3C0  0060  F32F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 46941  01E3C6  EC0E  F00C         	call	_TMR3_WriteTimer	;wreg free
 46942                           
 46943                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 46944  01E3CA  0100               	movlb	0	; () banked
 46945  01E3CC  4BC8               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 46946  01E3CE  2BC9               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 46947  01E3D0  51C9               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 46948  01E3D2  E104               	bnz	i1u1668_20
 46949  01E3D4  0E28               	movlw	40
 46950  01E3D6  5DC8               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 46951  01E3D8  A0D8               	btfss	status,0,c
 46952  01E3DA  D005               	goto	i1l1209
 46953  01E3DC                     i1u1668_20:
 46954                           
 46955                           ; BSR set to: 0
 46956                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 46957  01E3DC  EC8E  F00F         	call	_TMR3_CallBack	;wreg free
 46958                           
 46959                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 46960  01E3E0  0100               	movlb	0	; () banked
 46961  01E3E2  6BC8               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 46962  01E3E4  6BC9               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 46963  01E3E6                     i1l1209:
 46964                           
 46965                           ; BSR set to: 0
 46966  01E3E6  0060  F3FC  F041   	movff	??_TMR3_ISR+24,btemp+23
 46967  01E3EC  0060  F3F8  F040   	movff	??_TMR3_ISR+23,btemp+22
 46968  01E3F2  0060  F3F4  F03F   	movff	??_TMR3_ISR+22,btemp+21
 46969  01E3F8  0060  F3F0  F03E   	movff	??_TMR3_ISR+21,btemp+20
 46970  01E3FE  0060  F3EC  F03D   	movff	??_TMR3_ISR+20,btemp+19
 46971  01E404  0060  F3E8  F03C   	movff	??_TMR3_ISR+19,btemp+18
 46972  01E40A  0060  F3E4  F03B   	movff	??_TMR3_ISR+18,btemp+17
 46973  01E410  0060  F3E0  F03A   	movff	??_TMR3_ISR+17,btemp+16
 46974  01E416  0060  F3DC  F035   	movff	??_TMR3_ISR+16,btemp+11
 46975  01E41C  0060  F3D8  F034   	movff	??_TMR3_ISR+15,btemp+10
 46976  01E422  0060  F3D4  F033   	movff	??_TMR3_ISR+14,btemp+9
 46977  01E428  0060  F3D0  F032   	movff	??_TMR3_ISR+13,btemp+8
 46978  01E42E  0060  F3CC  F031   	movff	??_TMR3_ISR+12,btemp+7
 46979  01E434  0060  F3C8  F030   	movff	??_TMR3_ISR+11,btemp+6
 46980  01E43A  0060  F3C4  F02F   	movff	??_TMR3_ISR+10,btemp+5
 46981  01E440  0060  F3C0  F02E   	movff	??_TMR3_ISR+9,btemp+4
 46982  01E446  0060  F3BC  F02D   	movff	??_TMR3_ISR+8,btemp+3
 46983  01E44C  0060  F3B8  F02C   	movff	??_TMR3_ISR+7,btemp+2
 46984  01E452  0060  F3B4  F02B   	movff	??_TMR3_ISR+6,btemp+1
 46985  01E458  0060  F3B0  F02A   	movff	??_TMR3_ISR+5,btemp
 46986  01E45E  0060  F3AF  FFF5   	movff	??_TMR3_ISR+4,tablat
 46987  01E464  0060  F3AB  FFF8   	movff	??_TMR3_ISR+3,tblptru
 46988  01E46A  0060  F3A7  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 46989  01E470  0060  F3A3  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 46990  01E476  0060  F39F  FFD8   	movff	??_TMR3_ISR,status
 46991  01E47C  0011               	retfie		f
 46992  01E47E                     __end_of_TMR3_ISR:
 46993                           	opt callstack 0
 46994                           
 46995 ;; *************** function _TMR3_WriteTimer *****************
 46996 ;; Defined at:
 46997 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 46998 ;; Parameters:    Size  Location     Type
 46999 ;;  timerVal        2  [STACK] unsigned short 
 47000 ;; Auto vars:     Size  Location     Type
 47001 ;;		None
 47002 ;; Return value:  Size  Location     Type
 47003 ;;                  1  [STACK] void 
 47004 ;; Registers used:
 47005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 47006 ;; Tracked objects:
 47007 ;;		On entry : 3F/39
 47008 ;;		On exit  : 0/0
 47009 ;;		Unchanged: 0/0
 47010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47015 ;;Total ram usage:        0 bytes
 47016 ;; Hardware stack levels used:    1
 47017 ;; Hardware stack levels required when called:    3
 47018 ;; This function calls:
 47019 ;;		Nothing
 47020 ;; This function is called by:
 47021 ;;		_TMR3_ISR
 47022 ;; This function uses a reentrant model
 47023 ;;
 47024                           
 47025                           	psect	text195
 47026  00181C                     __ptext195:
 47027                           	opt callstack 0
 47028  00181C                     _TMR3_WriteTimer:
 47029                           	opt callstack 12
 47030                           
 47031                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 47032                           
 47033                           ; BSR set to: 0
 47034                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47035                           ;incstack = 0
 47036  00181C  A4A6               	btfss	166,2,c	;volatile
 47037  00181E  D00F               	goto	l13914
 47038                           
 47039                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 47040  001820  90A6               	bcf	166,0,c	;volatile
 47041                           
 47042                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 47043                           ;stkvar	_timerVal @ sp[(0)+-2]
 47044  001822  0EFF               	movlw	255
 47045  001824  24E1               	addwf	fsr1l,w,c
 47046  001826  6ED9               	movwf	fsr2l,c
 47047  001828  0EFF               	movlw	255
 47048  00182A  20E2               	addwfc	fsr1h,w,c
 47049  00182C  6EDA               	movwf	fsr2h,c
 47050  00182E  50DF               	movf	indf2,w,c
 47051  001830  6EA5               	movwf	165,c	;volatile
 47052                           
 47053                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 47054                           ;stkvar	_timerVal @ sp[(0)+-2]
 47055  001832  0EFE               	movlw	-2
 47056  001834  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 47057                           
 47058                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 47059  00183A  80A6               	bsf	166,0,c	;volatile
 47060                           
 47061                           ;mcc_generated_files/tmr3.c: 141:     }
 47062  00183C  D00C               	goto	l1192
 47063  00183E                     l13914:
 47064                           
 47065                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 47066                           ;stkvar	_timerVal @ sp[(0)+-2]
 47067  00183E  0EFF               	movlw	255
 47068  001840  24E1               	addwf	fsr1l,w,c
 47069  001842  6ED9               	movwf	fsr2l,c
 47070  001844  0EFF               	movlw	255
 47071  001846  20E2               	addwfc	fsr1h,w,c
 47072  001848  6EDA               	movwf	fsr2h,c
 47073  00184A  50DF               	movf	indf2,w,c
 47074  00184C  6EA5               	movwf	165,c	;volatile
 47075                           
 47076                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 47077                           ;stkvar	_timerVal @ sp[(0)+-2]
 47078  00184E  0EFE               	movlw	-2
 47079  001850  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 47080  001856                     l1192:
 47081                           
 47082                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 47083  001856  52E5               	movf	postdec1,f,c
 47084  001858  52E5               	movf	postdec1,f,c
 47085  00185A  0012               	return		;funcret
 47086  00185C                     __end_of_TMR3_WriteTimer:
 47087                           	opt callstack 0
 47088                           
 47089 ;; *************** function _TMR3_CallBack *****************
 47090 ;; Defined at:
 47091 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 47092 ;; Parameters:    Size  Location     Type
 47093 ;;		None
 47094 ;; Auto vars:     Size  Location     Type
 47095 ;;		None
 47096 ;; Return value:  Size  Location     Type
 47097 ;;                  1  [STACK] void 
 47098 ;; Registers used:
 47099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 47100 ;; Tracked objects:
 47101 ;;		On entry : 3F/0
 47102 ;;		On exit  : 0/0
 47103 ;;		Unchanged: 0/0
 47104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47109 ;;Total ram usage:        0 bytes
 47110 ;; Hardware stack levels used:    1
 47111 ;; Hardware stack levels required when called:   13
 47112 ;; This function calls:
 47113 ;;		Absolute function
 47114 ;;		_TMR3_DefaultInterruptHandler
 47115 ;;		_calc_bsoc
 47116 ;; This function is called by:
 47117 ;;		_TMR3_ISR
 47118 ;; This function uses a reentrant model
 47119 ;;
 47120                           
 47121                           	psect	text196
 47122  001F1C                     __ptext196:
 47123                           	opt callstack 0
 47124  001F1C                     _TMR3_CallBack:
 47125                           	opt callstack 2
 47126                           
 47127                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 47128                           
 47129                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47130                           ;incstack = 0
 47131  001F1C  0100               	movlb	0	; () banked
 47132  001F1E  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 47133  001F20  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 47134  001F22  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 47135  001F24  B4D8               	btfsc	status,2,c
 47136  001F26  0012               	return	
 47137                           
 47138                           ; BSR set to: 0
 47139                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 47140  001F28  D801               	call	u1646_28
 47141  001F2A  0012               	return	
 47142  001F2C                     u1646_28:
 47143  001F2C  0005               	push	
 47144  001F2E  6EFA               	movwf	pclath,c
 47145  001F30  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 47146  001F32  6EFD               	movwf	tosl,c
 47147  001F34  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 47148  001F36  6EFE               	movwf	tosh,c
 47149  001F38  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 47150  001F3A  6EFF               	movwf	tosu,c
 47151  001F3C  50FA               	movf	pclath,w,c
 47152  001F3E  0012               	return		;indir
 47153  001F40                     __end_of_TMR3_CallBack:
 47154                           	opt callstack 0
 47155                           
 47156 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 47157 ;; Defined at:
 47158 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 47159 ;; Parameters:    Size  Location     Type
 47160 ;;		None
 47161 ;; Auto vars:     Size  Location     Type
 47162 ;;		None
 47163 ;; Return value:  Size  Location     Type
 47164 ;;                  1  [STACK] void 
 47165 ;; Registers used:
 47166 ;;		None
 47167 ;; Tracked objects:
 47168 ;;		On entry : 3F/0
 47169 ;;		On exit  : 0/0
 47170 ;;		Unchanged: 0/0
 47171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47176 ;;Total ram usage:        0 bytes
 47177 ;; Hardware stack levels used:    1
 47178 ;; Hardware stack levels required when called:    3
 47179 ;; This function calls:
 47180 ;;		Nothing
 47181 ;; This function is called by:
 47182 ;;		_TMR3_Initialize
 47183 ;;		_TMR3_CallBack
 47184 ;; This function uses a reentrant model
 47185 ;;
 47186                           
 47187                           	psect	text197
 47188  0022DE                     __ptext197:
 47189                           	opt callstack 0
 47190  0022DE                     _TMR3_DefaultInterruptHandler:
 47191                           	opt callstack 11
 47192                           
 47193                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47194                           
 47195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47196                           ;incstack = 0
 47197  0022DE  0012               	return		;funcret
 47198  0022E0                     __end_of_TMR3_DefaultInterruptHandler:
 47199                           	opt callstack 0
 47200                           
 47201 ;; *************** function _calc_bsoc *****************
 47202 ;; Defined at:
 47203 ;;		line 39 in file "bsoc.c"
 47204 ;; Parameters:    Size  Location     Type
 47205 ;;		None
 47206 ;; Auto vars:     Size  Location     Type
 47207 ;;  adj             4  [STACK] float 
 47208 ;;  log_ptr         2  [STACK] PTR unsigned char 
 47209 ;;		 -> port_data(512), 
 47210 ;; Return value:  Size  Location     Type
 47211 ;;                  1  [STACK] void 
 47212 ;; Registers used:
 47213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 47214 ;; Tracked objects:
 47215 ;;		On entry : 3F/0
 47216 ;;		On exit  : 6/2
 47217 ;;		Unchanged: 0/0
 47218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47223 ;;Total ram usage:        0 bytes
 47224 ;; Hardware stack levels used:    1
 47225 ;; Hardware stack levels required when called:   12
 47226 ;; This function calls:
 47227 ;;		_StartTimer
 47228 ;;		___asfladd
 47229 ;;		___fldiv
 47230 ;;		___flge
 47231 ;;		___flmul
 47232 ;;		___flneg
 47233 ;;		___fltol
 47234 ;;		_fabsf
 47235 ;;		_get_ac_charger_relay
 47236 ;;		_port_data_dma_ptr
 47237 ;;		_send_port_data_dma
 47238 ;;		_sprintf
 47239 ;;		_strlen
 47240 ;; This function is called by:
 47241 ;;		_init_bsoc
 47242 ;;		_TMR3_CallBack
 47243 ;; This function uses a reentrant model
 47244 ;;
 47245                           
 47246                           	psect	text198
 47247  014702                     __ptext198:
 47248                           	opt callstack 0
 47249  014702                     _calc_bsoc:
 47250                           	opt callstack 0
 47251                           
 47252                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47253  014702  0E06               	movlw	6
 47254  014704  26E1               	addwf	fsr1l,f,c
 47255  014706  0E00               	movlw	0
 47256  014708  22E2               	addwfc	fsr1h,f,c
 47257                           
 47258                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 47259                           
 47260                           ;incstack = 0
 47261  01470A  0E00               	movlw	0
 47262  01470C  6E32               	movwf	(btemp+8)^0,c
 47263  01470E  0E00               	movlw	0
 47264  014710  6E33               	movwf	(btemp+9)^0,c
 47265  014712  0E80               	movlw	128
 47266  014714  6E34               	movwf	(btemp+10)^0,c
 47267  014716  0E3F               	movlw	63
 47268  014718  6E35               	movwf	(btemp+11)^0,c
 47269                           
 47270                           ;stkvar	_adj @ sp[(-6)+0]
 47271  01471A  0EFA               	movlw	-6
 47272  01471C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 47273  014722  0EFB               	movlw	-5
 47274  014724  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 47275  01472A  0EFC               	movlw	-4
 47276  01472C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 47277  014732  0EFD               	movlw	-3
 47278  014734  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 47279  01473A  82BE               	bsf	190,1,c	;volatile
 47280                           
 47281                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 47282  01473C  0E00               	movlw	0
 47283  01473E  6EE6               	movwf	postinc1,c
 47284  014740  0E00               	movlw	0
 47285  014742  6EE6               	movwf	postinc1,c
 47286  014744  0E61               	movlw	97
 47287  014746  6EE6               	movwf	postinc1,c
 47288  014748  0E45               	movlw	69
 47289  01474A  6EE6               	movwf	postinc1,c
 47290  01474C  EE22  F143         	lfsr	2,_C+68	;volatile
 47291  014750  006F FF7B FFE6     	movff	postinc2,postinc1
 47292  014756  006F FF7B FFE6     	movff	postinc2,postinc1
 47293  01475C  006F FF7B FFE6     	movff	postinc2,postinc1
 47294  014762  006F FF7B FFE6     	movff	postinc2,postinc1
 47295  014768  EC13  F0BD         	call	___fldiv	;wreg free
 47296  01476C  0060  F0AB  FFE6   	movff	btemp,postinc1
 47297  014772  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47298  014778  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47299  01477E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47300  014784  0E8F               	movlw	low (_C+144)
 47301  014786  6EE6               	movwf	postinc1,c
 47302  014788  0E09               	movlw	high (_C+144)
 47303  01478A  6EE6               	movwf	postinc1,c
 47304  01478C  ECF3  F005         	call	___asfladd	;wreg free
 47305                           
 47306                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 47307  014790  EE22  F18F         	lfsr	2,_C+144	;volatile
 47308  014794  006F FF7B FFE6     	movff	postinc2,postinc1
 47309  01479A  006F FF7B FFE6     	movff	postinc2,postinc1
 47310  0147A0  006F FF7B FFE6     	movff	postinc2,postinc1
 47311  0147A6  006F FF7B FFE6     	movff	postinc2,postinc1
 47312  0147AC  EE22  F18B         	lfsr	2,_C+140	;volatile
 47313  0147B0  006F FF7B FFE6     	movff	postinc2,postinc1
 47314  0147B6  006F FF7B FFE6     	movff	postinc2,postinc1
 47315  0147BC  006F FF7B FFE6     	movff	postinc2,postinc1
 47316  0147C2  006F FF7B FFE6     	movff	postinc2,postinc1
 47317  0147C8  ECDD  F0F0         	call	___flge	;wreg free
 47318  0147CC  B02A               	btfsc	btemp& (0+255),0,c
 47319  0147CE  D00E               	goto	l16678
 47320                           
 47321                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 47322  0147D0  EE22  F18B         	lfsr	2,_C+140	;volatile
 47323  0147D4  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
 47324  0147DA  006F FF78  F990    	movff	postinc2,_C+145	;volatile
 47325  0147E0  006F FF78  F991    	movff	postinc2,_C+146	;volatile
 47326  0147E6  006F FF74  F992    	movff	postdec2,_C+147	;volatile
 47327  0147EC                     l16678:
 47328                           
 47329                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 47330  0147EC  0ECD               	movlw	205
 47331  0147EE  6EE6               	movwf	postinc1,c
 47332  0147F0  0ECC               	movlw	204
 47333  0147F2  6EE6               	movwf	postinc1,c
 47334  0147F4  0ECC               	movlw	204
 47335  0147F6  6EE6               	movwf	postinc1,c
 47336  0147F8  0E3D               	movlw	61
 47337  0147FA  6EE6               	movwf	postinc1,c
 47338  0147FC  EE22  F18F         	lfsr	2,_C+144	;volatile
 47339  014800  006F FF7B FFE6     	movff	postinc2,postinc1
 47340  014806  006F FF7B FFE6     	movff	postinc2,postinc1
 47341  01480C  006F FF7B FFE6     	movff	postinc2,postinc1
 47342  014812  006F FF7B FFE6     	movff	postinc2,postinc1
 47343  014818  ECDD  F0F0         	call	___flge	;wreg free
 47344  01481C  B02A               	btfsc	btemp& (0+255),0,c
 47345  01481E  D010               	goto	l16682
 47346                           
 47347                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 47348  014820  0ECD               	movlw	205
 47349  014822  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
 47350  014828  0ECC               	movlw	204
 47351  01482A  006F FFA0  F990    	movff	wreg,_C+145	;volatile
 47352  014830  0ECC               	movlw	204
 47353  014832  006F FFA0  F991    	movff	wreg,_C+146	;volatile
 47354  014838  0E3D               	movlw	61
 47355  01483A  006F FFA0  F992    	movff	wreg,_C+147	;volatile
 47356  014840                     l16682:
 47357                           
 47358                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 47359  014840  EE22  F143         	lfsr	2,_C+68	;volatile
 47360  014844  006F FF7B FFE6     	movff	postinc2,postinc1
 47361  01484A  006F FF7B FFE6     	movff	postinc2,postinc1
 47362  014850  006F FF7B FFE6     	movff	postinc2,postinc1
 47363  014856  006F FF7B FFE6     	movff	postinc2,postinc1
 47364  01485C  0E0A               	movlw	10
 47365  01485E  6EE6               	movwf	postinc1,c
 47366  014860  0ED7               	movlw	215
 47367  014862  6EE6               	movwf	postinc1,c
 47368  014864  0E23               	movlw	35
 47369  014866  6EE6               	movwf	postinc1,c
 47370  014868  0E3C               	movlw	60
 47371  01486A  6EE6               	movwf	postinc1,c
 47372  01486C  ECDD  F0F0         	call	___flge	;wreg free
 47373  014870  B02A               	btfsc	btemp& (0+255),0,c
 47374  014872  D01C               	goto	l16686
 47375                           
 47376                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 47377  014874  0062  F754  F032   	movff	_C+214,btemp+8	;volatile
 47378  01487A  0062  F758  F033   	movff	_C+215,btemp+9	;volatile
 47379  014880  0062  F75C  F034   	movff	_C+216,btemp+10	;volatile
 47380  014886  0062  F760  F035   	movff	_C+217,btemp+11	;volatile
 47381                           
 47382                           ;stkvar	_adj @ sp[(-6)+0]
 47383  01488C  0EFA               	movlw	-6
 47384  01488E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 47385  014894  0EFB               	movlw	-5
 47386  014896  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 47387  01489C  0EFC               	movlw	-4
 47388  01489E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 47389  0148A4  0EFD               	movlw	-3
 47390  0148A6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 47391  0148AC                     l16686:
 47392                           
 47393                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 47394  0148AC  0E0A               	movlw	10
 47395  0148AE  6EE6               	movwf	postinc1,c
 47396  0148B0  0ED7               	movlw	215
 47397  0148B2  6EE6               	movwf	postinc1,c
 47398  0148B4  0E23               	movlw	35
 47399  0148B6  6EE6               	movwf	postinc1,c
 47400  0148B8  0E3C               	movlw	60
 47401  0148BA  6EE6               	movwf	postinc1,c
 47402  0148BC  EE22  F143         	lfsr	2,_C+68	;volatile
 47403  0148C0  006F FF7B FFE6     	movff	postinc2,postinc1
 47404  0148C6  006F FF7B FFE6     	movff	postinc2,postinc1
 47405  0148CC  006F FF7B FFE6     	movff	postinc2,postinc1
 47406  0148D2  006F FF7B FFE6     	movff	postinc2,postinc1
 47407  0148D8  ECDD  F0F0         	call	___flge	;wreg free
 47408  0148DC  B02A               	btfsc	btemp& (0+255),0,c
 47409  0148DE  D01C               	goto	l16690
 47410                           
 47411                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 47412  0148E0  0062  F744  F032   	movff	_C+210,btemp+8	;volatile
 47413  0148E6  0062  F748  F033   	movff	_C+211,btemp+9	;volatile
 47414  0148EC  0062  F74C  F034   	movff	_C+212,btemp+10	;volatile
 47415  0148F2  0062  F750  F035   	movff	_C+213,btemp+11	;volatile
 47416                           
 47417                           ;stkvar	_adj @ sp[(-6)+0]
 47418  0148F8  0EFA               	movlw	-6
 47419  0148FA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 47420  014900  0EFB               	movlw	-5
 47421  014902  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 47422  014908  0EFC               	movlw	-4
 47423  01490A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 47424  014910  0EFD               	movlw	-3
 47425  014912  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 47426  014918                     l16690:
 47427                           
 47428                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 47429  014918  0E00               	movlw	0
 47430  01491A  6EE6               	movwf	postinc1,c
 47431  01491C  0E00               	movlw	0
 47432  01491E  6EE6               	movwf	postinc1,c
 47433  014920  0E61               	movlw	97
 47434  014922  6EE6               	movwf	postinc1,c
 47435  014924  0E45               	movlw	69
 47436  014926  6EE6               	movwf	postinc1,c
 47437                           
 47438                           ;stkvar	_adj @ sp[(-10)+0]
 47439  014928  0EF6               	movlw	-10
 47440  01492A  006F FF8F FFE6     	movff	plusw1,postinc1
 47441  014930  006F FF8F FFE6     	movff	plusw1,postinc1
 47442  014936  006F FF8F FFE6     	movff	plusw1,postinc1
 47443  01493C  006F FF8F FFE6     	movff	plusw1,postinc1
 47444  014942  EE22  F143         	lfsr	2,_C+68	;volatile
 47445  014946  006F FF7B FFE6     	movff	postinc2,postinc1
 47446  01494C  006F FF7B FFE6     	movff	postinc2,postinc1
 47447  014952  006F FF7B FFE6     	movff	postinc2,postinc1
 47448  014958  006F FF7B FFE6     	movff	postinc2,postinc1
 47449  01495E  ECC2  F0B1         	call	___flmul	;wreg free
 47450  014962  0060  F0AB  FFE6   	movff	btemp,postinc1
 47451  014968  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47452  01496E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47453  014974  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47454  01497A  EC13  F0BD         	call	___fldiv	;wreg free
 47455  01497E  0060  F0AB  FFE6   	movff	btemp,postinc1
 47456  014984  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47457  01498A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47458  014990  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47459  014996  0E8F               	movlw	low (_C+144)
 47460  014998  6EE6               	movwf	postinc1,c
 47461  01499A  0E09               	movlw	high (_C+144)
 47462  01499C  6EE6               	movwf	postinc1,c
 47463  01499E  ECF3  F005         	call	___asfladd	;wreg free
 47464                           
 47465                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 47466  0149A2  EE22  F18F         	lfsr	2,_C+144	;volatile
 47467  0149A6  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 47468  0149AC  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 47469  0149B2  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 47470  0149B8  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 47471                           
 47472                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 47473  0149BE  EE22  F19B         	lfsr	2,_C+156	;volatile
 47474  0149C2  006F FF7B FFE6     	movff	postinc2,postinc1
 47475  0149C8  006F FF7B FFE6     	movff	postinc2,postinc1
 47476  0149CE  006F FF7B FFE6     	movff	postinc2,postinc1
 47477  0149D4  006F FF7B FFE6     	movff	postinc2,postinc1
 47478  0149DA  EE22  F18B         	lfsr	2,_C+140	;volatile
 47479  0149DE  006F FF7B FFE6     	movff	postinc2,postinc1
 47480  0149E4  006F FF7B FFE6     	movff	postinc2,postinc1
 47481  0149EA  006F FF7B FFE6     	movff	postinc2,postinc1
 47482  0149F0  006F FF7B FFE6     	movff	postinc2,postinc1
 47483  0149F6  ECDD  F0F0         	call	___flge	;wreg free
 47484  0149FA  B02A               	btfsc	btemp& (0+255),0,c
 47485  0149FC  D00E               	goto	l16698
 47486                           
 47487                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 47488  0149FE  EE22  F18B         	lfsr	2,_C+140	;volatile
 47489  014A02  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 47490  014A08  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 47491  014A0E  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 47492  014A14  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 47493  014A1A                     l16698:
 47494                           
 47495                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 47496  014A1A  0ECD               	movlw	205
 47497  014A1C  6EE6               	movwf	postinc1,c
 47498  014A1E  0ECC               	movlw	204
 47499  014A20  6EE6               	movwf	postinc1,c
 47500  014A22  0ECC               	movlw	204
 47501  014A24  6EE6               	movwf	postinc1,c
 47502  014A26  0E3D               	movlw	61
 47503  014A28  6EE6               	movwf	postinc1,c
 47504  014A2A  EE22  F19B         	lfsr	2,_C+156	;volatile
 47505  014A2E  006F FF7B FFE6     	movff	postinc2,postinc1
 47506  014A34  006F FF7B FFE6     	movff	postinc2,postinc1
 47507  014A3A  006F FF7B FFE6     	movff	postinc2,postinc1
 47508  014A40  006F FF7B FFE6     	movff	postinc2,postinc1
 47509  014A46  ECDD  F0F0         	call	___flge	;wreg free
 47510  014A4A  B02A               	btfsc	btemp& (0+255),0,c
 47511  014A4C  D010               	goto	l16702
 47512                           
 47513                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 47514  014A4E  0ECD               	movlw	205
 47515  014A50  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
 47516  014A56  0ECC               	movlw	204
 47517  014A58  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
 47518  014A5E  0ECC               	movlw	204
 47519  014A60  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
 47520  014A66  0E3D               	movlw	61
 47521  014A68  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
 47522  014A6E                     l16702:
 47523                           
 47524                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 47525  014A6E  0E00               	movlw	0
 47526  014A70  6EE6               	movwf	postinc1,c
 47527  014A72  0E00               	movlw	0
 47528  014A74  6EE6               	movwf	postinc1,c
 47529  014A76  0E61               	movlw	97
 47530  014A78  6EE6               	movwf	postinc1,c
 47531  014A7A  0E45               	movlw	69
 47532  014A7C  6EE6               	movwf	postinc1,c
 47533  014A7E  EE22  F147         	lfsr	2,_C+72	;volatile
 47534  014A82  006F FF7B FFE6     	movff	postinc2,postinc1
 47535  014A88  006F FF7B FFE6     	movff	postinc2,postinc1
 47536  014A8E  006F FF7B FFE6     	movff	postinc2,postinc1
 47537  014A94  006F FF7B FFE6     	movff	postinc2,postinc1
 47538  014A9A  EC13  F0BD         	call	___fldiv	;wreg free
 47539  014A9E  0060  F0AB  FFE6   	movff	btemp,postinc1
 47540  014AA4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47541  014AAA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47542  014AB0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47543  014AB6  0E93               	movlw	low (_C+148)
 47544  014AB8  6EE6               	movwf	postinc1,c
 47545  014ABA  0E09               	movlw	high (_C+148)
 47546  014ABC  6EE6               	movwf	postinc1,c
 47547  014ABE  ECF3  F005         	call	___asfladd	;wreg free
 47548                           
 47549                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 47550  014AC2  0E00               	movlw	0
 47551  014AC4  6EE6               	movwf	postinc1,c
 47552  014AC6  0E00               	movlw	0
 47553  014AC8  6EE6               	movwf	postinc1,c
 47554  014ACA  0E61               	movlw	97
 47555  014ACC  6EE6               	movwf	postinc1,c
 47556  014ACE  0E45               	movlw	69
 47557  014AD0  6EE6               	movwf	postinc1,c
 47558  014AD2  EE22  F17B         	lfsr	2,_C+124	;volatile
 47559  014AD6  006F FF7B FFE6     	movff	postinc2,postinc1
 47560  014ADC  006F FF7B FFE6     	movff	postinc2,postinc1
 47561  014AE2  006F FF7B FFE6     	movff	postinc2,postinc1
 47562  014AE8  006F FF7B FFE6     	movff	postinc2,postinc1
 47563  014AEE  EC13  F0BD         	call	___fldiv	;wreg free
 47564  014AF2  0060  F0AB  FFE6   	movff	btemp,postinc1
 47565  014AF8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47566  014AFE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47567  014B04  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47568  014B0A  0EA7               	movlw	low (_C+168)
 47569  014B0C  6EE6               	movwf	postinc1,c
 47570  014B0E  0E09               	movlw	high (_C+168)
 47571  014B10  6EE6               	movwf	postinc1,c
 47572  014B12  ECF3  F005         	call	___asfladd	;wreg free
 47573                           
 47574                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 47575  014B16  0E00               	movlw	0
 47576  014B18  6EE6               	movwf	postinc1,c
 47577  014B1A  0E00               	movlw	0
 47578  014B1C  6EE6               	movwf	postinc1,c
 47579  014B1E  0E61               	movlw	97
 47580  014B20  6EE6               	movwf	postinc1,c
 47581  014B22  0E45               	movlw	69
 47582  014B24  6EE6               	movwf	postinc1,c
 47583  014B26  EE22  F177         	lfsr	2,_C+120	;volatile
 47584  014B2A  006F FF7B FFE6     	movff	postinc2,postinc1
 47585  014B30  006F FF7B FFE6     	movff	postinc2,postinc1
 47586  014B36  006F FF7B FFE6     	movff	postinc2,postinc1
 47587  014B3C  006F FF7B FFE6     	movff	postinc2,postinc1
 47588  014B42  EC13  F0BD         	call	___fldiv	;wreg free
 47589  014B46  0060  F0AB  FFE6   	movff	btemp,postinc1
 47590  014B4C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47591  014B52  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47592  014B58  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47593  014B5E  0EAB               	movlw	low (_C+172)
 47594  014B60  6EE6               	movwf	postinc1,c
 47595  014B62  0E09               	movlw	high (_C+172)
 47596  014B64  6EE6               	movwf	postinc1,c
 47597  014B66  ECF3  F005         	call	___asfladd	;wreg free
 47598                           
 47599                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 47600  014B6A  0E00               	movlw	0
 47601  014B6C  6EE6               	movwf	postinc1,c
 47602  014B6E  0E00               	movlw	0
 47603  014B70  6EE6               	movwf	postinc1,c
 47604  014B72  0E61               	movlw	97
 47605  014B74  6EE6               	movwf	postinc1,c
 47606  014B76  0E45               	movlw	69
 47607  014B78  6EE6               	movwf	postinc1,c
 47608  014B7A  EE22  F173         	lfsr	2,_C+116	;volatile
 47609  014B7E  006F FF7B FFE6     	movff	postinc2,postinc1
 47610  014B84  006F FF7B FFE6     	movff	postinc2,postinc1
 47611  014B8A  006F FF7B FFE6     	movff	postinc2,postinc1
 47612  014B90  006F FF7B FFE6     	movff	postinc2,postinc1
 47613  014B96  EC13  F0BD         	call	___fldiv	;wreg free
 47614  014B9A  0060  F0AB  FFE6   	movff	btemp,postinc1
 47615  014BA0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47616  014BA6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47617  014BAC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47618  014BB2  0EAF               	movlw	low (_C+176)
 47619  014BB4  6EE6               	movwf	postinc1,c
 47620  014BB6  0E09               	movlw	high (_C+176)
 47621  014BB8  6EE6               	movwf	postinc1,c
 47622  014BBA  ECF3  F005         	call	___asfladd	;wreg free
 47623                           
 47624                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 47625  014BBE  EE22  F17F         	lfsr	2,_C+128	;volatile
 47626  014BC2  006F FF7B FFE6     	movff	postinc2,postinc1
 47627  014BC8  006F FF7B FFE6     	movff	postinc2,postinc1
 47628  014BCE  006F FF7B FFE6     	movff	postinc2,postinc1
 47629  014BD4  006F FF7B FFE6     	movff	postinc2,postinc1
 47630  014BDA  0E00               	movlw	0
 47631  014BDC  6EE6               	movwf	postinc1,c
 47632  014BDE  0E00               	movlw	0
 47633  014BE0  6EE6               	movwf	postinc1,c
 47634  014BE2  0E00               	movlw	0
 47635  014BE4  6EE6               	movwf	postinc1,c
 47636  014BE6  0E00               	movlw	0
 47637  014BE8  6EE6               	movwf	postinc1,c
 47638  014BEA  ECDD  F0F0         	call	___flge	;wreg free
 47639  014BEE  B02A               	btfsc	btemp& (0+255),0,c
 47640  014BF0  D02A               	goto	l16708
 47641                           
 47642                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 47643  014BF2  0E00               	movlw	0
 47644  014BF4  6EE6               	movwf	postinc1,c
 47645  014BF6  0E00               	movlw	0
 47646  014BF8  6EE6               	movwf	postinc1,c
 47647  014BFA  0E61               	movlw	97
 47648  014BFC  6EE6               	movwf	postinc1,c
 47649  014BFE  0E45               	movlw	69
 47650  014C00  6EE6               	movwf	postinc1,c
 47651  014C02  EE22  F17F         	lfsr	2,_C+128	;volatile
 47652  014C06  006F FF7B FFE6     	movff	postinc2,postinc1
 47653  014C0C  006F FF7B FFE6     	movff	postinc2,postinc1
 47654  014C12  006F FF7B FFE6     	movff	postinc2,postinc1
 47655  014C18  006F FF7B FFE6     	movff	postinc2,postinc1
 47656  014C1E  EC13  F0BD         	call	___fldiv	;wreg free
 47657  014C22  0060  F0AB  FFE6   	movff	btemp,postinc1
 47658  014C28  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47659  014C2E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47660  014C34  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47661  014C3A  0E9F               	movlw	low (_C+160)
 47662  014C3C  6EE6               	movwf	postinc1,c
 47663  014C3E  0E09               	movlw	high (_C+160)
 47664  014C40  6EE6               	movwf	postinc1,c
 47665  014C42  ECF3  F005         	call	___asfladd	;wreg free
 47666  014C46                     l16708:
 47667                           
 47668                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 47669  014C46  EE22  F17F         	lfsr	2,_C+128	;volatile
 47670  014C4A  0E03               	movlw	3
 47671  014C4C  AEDB               	btfss	plusw2,7,c
 47672  014C4E  D038               	goto	l16712
 47673                           
 47674                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 47675  014C50  0E00               	movlw	0
 47676  014C52  6EE6               	movwf	postinc1,c
 47677  014C54  0E00               	movlw	0
 47678  014C56  6EE6               	movwf	postinc1,c
 47679  014C58  0E61               	movlw	97
 47680  014C5A  6EE6               	movwf	postinc1,c
 47681  014C5C  0E45               	movlw	69
 47682  014C5E  6EE6               	movwf	postinc1,c
 47683  014C60  EE22  F17F         	lfsr	2,_C+128	;volatile
 47684  014C64  006F FF7B FFE6     	movff	postinc2,postinc1
 47685  014C6A  006F FF7B FFE6     	movff	postinc2,postinc1
 47686  014C70  006F FF7B FFE6     	movff	postinc2,postinc1
 47687  014C76  006F FF7B FFE6     	movff	postinc2,postinc1
 47688  014C7C  EC13  F0BD         	call	___fldiv	;wreg free
 47689  014C80  0060  F0AB  FFE6   	movff	btemp,postinc1
 47690  014C86  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47691  014C8C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47692  014C92  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47693  014C98  ECB6  F000         	call	_fabsf	;wreg free
 47694  014C9C  0060  F0AB  FFE6   	movff	btemp,postinc1
 47695  014CA2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47696  014CA8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47697  014CAE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47698  014CB4  0EA3               	movlw	low (_C+164)
 47699  014CB6  6EE6               	movwf	postinc1,c
 47700  014CB8  0E09               	movlw	high (_C+164)
 47701  014CBA  6EE6               	movwf	postinc1,c
 47702  014CBC  ECF3  F005         	call	___asfladd	;wreg free
 47703  014CC0                     l16712:
 47704                           
 47705                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 47706  014CC0  0E00               	movlw	0
 47707  014CC2  6EE6               	movwf	postinc1,c
 47708  014CC4  0E00               	movlw	0
 47709  014CC6  6EE6               	movwf	postinc1,c
 47710  014CC8  0EC8               	movlw	200
 47711  014CCA  6EE6               	movwf	postinc1,c
 47712  014CCC  0E42               	movlw	66
 47713  014CCE  6EE6               	movwf	postinc1,c
 47714  014CD0  EE22  F18B         	lfsr	2,_C+140	;volatile
 47715  014CD4  006F FF7B FFE6     	movff	postinc2,postinc1
 47716  014CDA  006F FF7B FFE6     	movff	postinc2,postinc1
 47717  014CE0  006F FF7B FFE6     	movff	postinc2,postinc1
 47718  014CE6  006F FF7B FFE6     	movff	postinc2,postinc1
 47719  014CEC  EE22  F19B         	lfsr	2,_C+156	;volatile
 47720  014CF0  006F FF7B FFE6     	movff	postinc2,postinc1
 47721  014CF6  006F FF7B FFE6     	movff	postinc2,postinc1
 47722  014CFC  006F FF7B FFE6     	movff	postinc2,postinc1
 47723  014D02  006F FF7B FFE6     	movff	postinc2,postinc1
 47724  014D08  EC13  F0BD         	call	___fldiv	;wreg free
 47725  014D0C  0060  F0AB  FFE6   	movff	btemp,postinc1
 47726  014D12  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47727  014D18  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47728  014D1E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47729  014D24  ECC2  F0B1         	call	___flmul	;wreg free
 47730  014D28  0060  F0AB  FFE6   	movff	btemp,postinc1
 47731  014D2E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47732  014D34  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47733  014D3A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47734  014D40  EC71  F0EF         	call	___fltol	;wreg free
 47735  014D44  0060  F0A8  F034   	movff	btemp,btemp+10
 47736  014D4A  0060  F0AC  F035   	movff	btemp+1,btemp+11
 47737  014D50  0E01               	movlw	1
 47738  014D52  2634               	addwf	(btemp+10)^0,f,c
 47739  014D54  0E00               	movlw	0
 47740  014D56  2235               	addwfc	(btemp+11)^0,f,c
 47741  014D58  0060  F0D0  F9B5   	movff	btemp+10,_C+182	;volatile
 47742  014D5E  0060  F0D4  F9B6   	movff	btemp+11,_C+183	;volatile
 47743                           
 47744                           ;bsoc.c: 76:  if (C.soc > 100)
 47745  014D64  EE22  F1B5         	lfsr	2,_C+182	;volatile
 47746  014D68  0E01               	movlw	1
 47747  014D6A  50DB               	movf	plusw2,w,c
 47748  014D6C  E104               	bnz	u1639_20
 47749  014D6E  0E65               	movlw	101
 47750  014D70  5CDE               	subwf	postinc2,w,c
 47751  014D72  A0D8               	btfss	status,0,c
 47752  014D74  D008               	goto	l16718
 47753  014D76                     u1639_20:
 47754                           
 47755                           ;bsoc.c: 77:   C.soc = 100;
 47756  014D76  0E64               	movlw	100
 47757  014D78  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
 47758  014D7E  0E00               	movlw	0
 47759  014D80  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
 47760  014D86                     l16718:
 47761                           
 47762                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 47763  014D86  EE22  F143         	lfsr	2,_C+68	;volatile
 47764  014D8A  0E03               	movlw	3
 47765  014D8C  AEDB               	btfss	plusw2,7,c
 47766  014D8E  D047               	goto	l2346
 47767                           
 47768                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 47769  014D90  EE22  F143         	lfsr	2,_C+68	;volatile
 47770  014D94  006F FF7B FFE6     	movff	postinc2,postinc1
 47771  014D9A  006F FF7B FFE6     	movff	postinc2,postinc1
 47772  014DA0  006F FF7B FFE6     	movff	postinc2,postinc1
 47773  014DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 47774  014DAC  EE22  F19B         	lfsr	2,_C+156	;volatile
 47775  014DB0  006F FF7B FFE6     	movff	postinc2,postinc1
 47776  014DB6  006F FF7B FFE6     	movff	postinc2,postinc1
 47777  014DBC  006F FF7B FFE6     	movff	postinc2,postinc1
 47778  014DC2  006F FF7B FFE6     	movff	postinc2,postinc1
 47779  014DC8  EC13  F0BD         	call	___fldiv	;wreg free
 47780  014DCC  0060  F0AB  FFE6   	movff	btemp,postinc1
 47781  014DD2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47782  014DD8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47783  014DDE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47784  014DE4  EC75  F00A         	call	___flneg	;wreg free
 47785  014DE8  0060  F0AB  FFE6   	movff	btemp,postinc1
 47786  014DEE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47787  014DF4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47788  014DFA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47789  014E00  EC71  F0EF         	call	___fltol	;wreg free
 47790  014E04  0060  F0A8  F034   	movff	btemp,btemp+10
 47791  014E0A  0060  F0AC  F035   	movff	btemp+1,btemp+11
 47792  014E10  0060  F0D0  F9B3   	movff	btemp+10,_C+180	;volatile
 47793  014E16  0060  F0D4  F9B4   	movff	btemp+11,_C+181	;volatile
 47794                           
 47795                           ;bsoc.c: 81:  } else {
 47796  014E1C  D008               	goto	l16722
 47797  014E1E                     l2346:
 47798                           
 47799                           ;bsoc.c: 82:   C.runtime = 99;
 47800  014E1E  0E63               	movlw	99
 47801  014E20  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 47802  014E26  0E00               	movlw	0
 47803  014E28  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 47804  014E2E                     l16722:
 47805                           
 47806                           ;bsoc.c: 84:  if (C.runtime > 99)
 47807  014E2E  EE22  F1B3         	lfsr	2,_C+180	;volatile
 47808  014E32  0E01               	movlw	1
 47809  014E34  50DB               	movf	plusw2,w,c
 47810  014E36  E104               	bnz	u1641_20
 47811  014E38  0E64               	movlw	100
 47812  014E3A  5CDE               	subwf	postinc2,w,c
 47813  014E3C  A0D8               	btfss	status,0,c
 47814  014E3E  D008               	goto	l16726
 47815  014E40                     u1641_20:
 47816                           
 47817                           ;bsoc.c: 85:   C.runtime = 99;
 47818  014E40  0E63               	movlw	99
 47819  014E42  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 47820  014E48  0E00               	movlw	0
 47821  014E4A  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 47822  014E50                     l16726:
 47823                           
 47824                           ;bsoc.c: 87:  V.lowint_count++;
 47825  014E50  0E01               	movlw	1
 47826  014E52  0102               	movlb	2	; () banked
 47827  014E54  27AD               	addwf	(_V+173)& (0+255),f,b	;volatile
 47828  014E56  0E00               	movlw	0
 47829  014E58  23AE               	addwfc	(_V+174)& (0+255),f,b	;volatile
 47830  014E5A  23AF               	addwfc	(_V+175)& (0+255),f,b	;volatile
 47831  014E5C  23B0               	addwfc	(_V+176)& (0+255),f,b	;volatile
 47832                           
 47833                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 47834  014E5E  2A50               	incf	calc_bsoc@log_update_wait^0,f,c
 47835  014E60  0450               	decf	calc_bsoc@log_update_wait^0,w,c
 47836  014E62  A4D8               	btfss	status,2,c
 47837  014E64  D177               	goto	l16738
 47838                           
 47839                           ; BSR set to: 2
 47840  014E66  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
 47841  014E68  B4D8               	btfsc	status,2,c
 47842  014E6A  D174               	goto	l16738
 47843                           
 47844                           ; BSR set to: 2
 47845                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 47846  014E6C  EC32  F011         	call	_port_data_dma_ptr	;wreg free
 47847                           
 47848                           ;stkvar	_log_ptr @ sp[(-6)+4]
 47849  014E70  0EFF               	movlw	-1
 47850  014E72  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 47851  014E78  0EFE               	movlw	-2
 47852  014E7A  0060  F0AB  FFE3   	movff	btemp,plusw1
 47853                           
 47854                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 47855  014E80  EE22  F1D1         	lfsr	2,_C+210	;volatile
 47856  014E84  006F FF7B FFE6     	movff	postinc2,postinc1
 47857  014E8A  006F FF7B FFE6     	movff	postinc2,postinc1
 47858  014E90  006F FF7B FFE6     	movff	postinc2,postinc1
 47859  014E96  006F FF7B FFE6     	movff	postinc2,postinc1
 47860  014E9C  EE22  F1D5         	lfsr	2,_C+214	;volatile
 47861  014EA0  006F FF7B FFE6     	movff	postinc2,postinc1
 47862  014EA6  006F FF7B FFE6     	movff	postinc2,postinc1
 47863  014EAC  006F FF7B FFE6     	movff	postinc2,postinc1
 47864  014EB2  006F FF7B FFE6     	movff	postinc2,postinc1
 47865  014EB8  EE22  F19B         	lfsr	2,_C+156	;volatile
 47866  014EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 47867  014EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 47868  014EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 47869  014ECE  006F FF7B FFE6     	movff	postinc2,postinc1
 47870  014ED4  EE22  F243         	lfsr	2,_C+324	;volatile
 47871  014ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 47872  014EDE  006F FF7B FFE6     	movff	postinc2,postinc1
 47873  014EE4  006F FF7B FFE6     	movff	postinc2,postinc1
 47874  014EEA  006F FF7B FFE6     	movff	postinc2,postinc1
 47875  014EF0  EE22  F23F         	lfsr	2,_C+320	;volatile
 47876  014EF4  006F FF7B FFE6     	movff	postinc2,postinc1
 47877  014EFA  006F FF7B FFE6     	movff	postinc2,postinc1
 47878  014F00  006F FF7B FFE6     	movff	postinc2,postinc1
 47879  014F06  006F FF7B FFE6     	movff	postinc2,postinc1
 47880  014F0C  EE22  F23D         	lfsr	2,_C+318	;volatile
 47881  014F10  50DF               	movf	indf2,w,c
 47882  014F12  6EE6               	movwf	postinc1,c
 47883  014F14  0E00               	movlw	0
 47884  014F16  6EE6               	movwf	postinc1,c
 47885  014F18  EC16  F011         	call	_get_ac_charger_relay	;wreg free
 47886  014F1C  502A               	movf	btemp^0,w,c
 47887  014F1E  6EE6               	movwf	postinc1,c
 47888  014F20  0E00               	movlw	0
 47889  014F22  6EE6               	movwf	postinc1,c
 47890  014F24  EE22  F167         	lfsr	2,_C+104	;volatile
 47891  014F28  006F FF7B FFE6     	movff	postinc2,postinc1
 47892  014F2E  006F FF7B FFE6     	movff	postinc2,postinc1
 47893  014F34  006F FF7B FFE6     	movff	postinc2,postinc1
 47894  014F3A  006F FF7B FFE6     	movff	postinc2,postinc1
 47895  014F40  EE22  F187         	lfsr	2,_C+136	;volatile
 47896  014F44  006F FF7B FFE6     	movff	postinc2,postinc1
 47897  014F4A  006F FF7B FFE6     	movff	postinc2,postinc1
 47898  014F50  006F FF7B FFE6     	movff	postinc2,postinc1
 47899  014F56  006F FF7B FFE6     	movff	postinc2,postinc1
 47900  014F5C  EE22  F1B3         	lfsr	2,_C+180	;volatile
 47901  014F60  006F FF78  F034    	movff	postinc2,btemp+10
 47902  014F66  006F FF74  F035    	movff	postdec2,btemp+11
 47903  014F6C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 47904  014F72  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 47905  014F78  EE22  F1B5         	lfsr	2,_C+182	;volatile
 47906  014F7C  006F FF78  F034    	movff	postinc2,btemp+10
 47907  014F82  006F FF74  F035    	movff	postdec2,btemp+11
 47908  014F88  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 47909  014F8E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 47910  014F94  EE22  F193         	lfsr	2,_C+148	;volatile
 47911  014F98  006F FF7B FFE6     	movff	postinc2,postinc1
 47912  014F9E  006F FF7B FFE6     	movff	postinc2,postinc1
 47913  014FA4  006F FF7B FFE6     	movff	postinc2,postinc1
 47914  014FAA  006F FF7B FFE6     	movff	postinc2,postinc1
 47915  014FB0  EE22  F18F         	lfsr	2,_C+144	;volatile
 47916  014FB4  006F FF7B FFE6     	movff	postinc2,postinc1
 47917  014FBA  006F FF7B FFE6     	movff	postinc2,postinc1
 47918  014FC0  006F FF7B FFE6     	movff	postinc2,postinc1
 47919  014FC6  006F FF7B FFE6     	movff	postinc2,postinc1
 47920  014FCC  EE22  F177         	lfsr	2,_C+120	;volatile
 47921  014FD0  006F FF7B FFE6     	movff	postinc2,postinc1
 47922  014FD6  006F FF7B FFE6     	movff	postinc2,postinc1
 47923  014FDC  006F FF7B FFE6     	movff	postinc2,postinc1
 47924  014FE2  006F FF7B FFE6     	movff	postinc2,postinc1
 47925  014FE8  EE22  F173         	lfsr	2,_C+116	;volatile
 47926  014FEC  006F FF7B FFE6     	movff	postinc2,postinc1
 47927  014FF2  006F FF7B FFE6     	movff	postinc2,postinc1
 47928  014FF8  006F FF7B FFE6     	movff	postinc2,postinc1
 47929  014FFE  006F FF7B FFE6     	movff	postinc2,postinc1
 47930  015004  EE22  F17B         	lfsr	2,_C+124	;volatile
 47931  015008  006F FF7B FFE6     	movff	postinc2,postinc1
 47932  01500E  006F FF7B FFE6     	movff	postinc2,postinc1
 47933  015014  006F FF7B FFE6     	movff	postinc2,postinc1
 47934  01501A  006F FF7B FFE6     	movff	postinc2,postinc1
 47935  015020  EE22  F17F         	lfsr	2,_C+128	;volatile
 47936  015024  006F FF7B FFE6     	movff	postinc2,postinc1
 47937  01502A  006F FF7B FFE6     	movff	postinc2,postinc1
 47938  015030  006F FF7B FFE6     	movff	postinc2,postinc1
 47939  015036  006F FF7B FFE6     	movff	postinc2,postinc1
 47940  01503C  EE22  F147         	lfsr	2,_C+72	;volatile
 47941  015040  006F FF7B FFE6     	movff	postinc2,postinc1
 47942  015046  006F FF7B FFE6     	movff	postinc2,postinc1
 47943  01504C  006F FF7B FFE6     	movff	postinc2,postinc1
 47944  015052  006F FF7B FFE6     	movff	postinc2,postinc1
 47945  015058  EE22  F143         	lfsr	2,_C+68	;volatile
 47946  01505C  006F FF7B FFE6     	movff	postinc2,postinc1
 47947  015062  006F FF7B FFE6     	movff	postinc2,postinc1
 47948  015068  006F FF7B FFE6     	movff	postinc2,postinc1
 47949  01506E  006F FF7B FFE6     	movff	postinc2,postinc1
 47950  015074  EE22  F163         	lfsr	2,_C+100	;volatile
 47951  015078  006F FF7B FFE6     	movff	postinc2,postinc1
 47952  01507E  006F FF7B FFE6     	movff	postinc2,postinc1
 47953  015084  006F FF7B FFE6     	movff	postinc2,postinc1
 47954  01508A  006F FF7B FFE6     	movff	postinc2,postinc1
 47955  015090  EE22  F14B         	lfsr	2,_C+76	;volatile
 47956  015094  006F FF7B FFE6     	movff	postinc2,postinc1
 47957  01509A  006F FF7B FFE6     	movff	postinc2,postinc1
 47958  0150A0  006F FF7B FFE6     	movff	postinc2,postinc1
 47959  0150A6  006F FF7B FFE6     	movff	postinc2,postinc1
 47960  0150AC  EE22  F14F         	lfsr	2,_C+80	;volatile
 47961  0150B0  006F FF7B FFE6     	movff	postinc2,postinc1
 47962  0150B6  006F FF7B FFE6     	movff	postinc2,postinc1
 47963  0150BC  006F FF7B FFE6     	movff	postinc2,postinc1
 47964  0150C2  006F FF7B FFE6     	movff	postinc2,postinc1
 47965  0150C8  EE22  F153         	lfsr	2,_C+84	;volatile
 47966  0150CC  006F FF7B FFE6     	movff	postinc2,postinc1
 47967  0150D2  006F FF7B FFE6     	movff	postinc2,postinc1
 47968  0150D8  006F FF7B FFE6     	movff	postinc2,postinc1
 47969  0150DE  006F FF7B FFE6     	movff	postinc2,postinc1
 47970  0150E4  0060  FA07  FFE6   	movff	_V+129,postinc1
 47971  0150EA  0060  FA0B  FFE6   	movff	_V+130,postinc1
 47972  0150F0  0060  FA0F  FFE6   	movff	_V+131,postinc1
 47973  0150F6  0060  FA13  FFE6   	movff	_V+132,postinc1
 47974  0150FC  0E32               	movlw	50
 47975  0150FE  6EE6               	movwf	postinc1,c
 47976  015100  0E00               	movlw	0
 47977  015102  6EE6               	movwf	postinc1,c
 47978  015104  0E3F               	movlw	low STR_90
 47979  015106  6EE6               	movwf	postinc1,c
 47980  015108  0EFA               	movlw	high STR_90
 47981  01510A  6EE6               	movwf	postinc1,c
 47982                           
 47983                           ;stkvar	_log_ptr @ sp[(-98)+4]
 47984  01510C  0EA2               	movlw	-94
 47985  01510E  006F FF8F FFE6     	movff	plusw1,postinc1
 47986  015114  006F FF8F FFE6     	movff	plusw1,postinc1
 47987  01511A  0E5E               	movlw	94
 47988  01511C  6EE6               	movwf	postinc1,c
 47989  01511E  EC8D  F0F9         	call	_sprintf	;wreg free
 47990                           
 47991                           ; BSR set to: 0
 47992                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 47993  015122  0E7D               	movlw	125
 47994  015124  6EE6               	movwf	postinc1,c
 47995  015126  0E00               	movlw	0
 47996  015128  6EE6               	movwf	postinc1,c
 47997  01512A  0E0A               	movlw	10
 47998  01512C  6EE6               	movwf	postinc1,c
 47999  01512E  ECCE  F00B         	call	_StartTimer	;wreg free
 48000                           
 48001                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 48002                           ;stkvar	_log_ptr @ sp[(-6)+4]
 48003  015132  0EFE               	movlw	-2
 48004  015134  006F FF8F FFE6     	movff	plusw1,postinc1
 48005  01513A  006F FF8F FFE6     	movff	plusw1,postinc1
 48006  015140  EC5F  F002         	call	_strlen	;wreg free
 48007  015144  0060  F0AB  FFE6   	movff	btemp,postinc1
 48008  01514A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48009  015150  ECD9  F009         	call	_send_port_data_dma	;wreg free
 48010  015154                     l16738:
 48011                           
 48012                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 48013  015154  0E09               	movlw	9
 48014  015156  6450               	cpfsgt	calc_bsoc@log_update_wait^0,c
 48015  015158  D001               	goto	l2350
 48016                           
 48017                           ;bsoc.c: 102:   log_update_wait = 0;
 48018  01515A  6A50               	clrf	calc_bsoc@log_update_wait^0,c
 48019  01515C                     l2350:
 48020                           
 48021                           ;bsoc.c: 104:  C.update = 0;
 48022  01515C  0E00               	movlw	0
 48023  01515E  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 48024                           
 48025                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 48026  015164  92BE               	bcf	190,1,c	;volatile
 48027                           
 48028                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 48029  015166  0EFA               	movlw	250
 48030  015168  26E1               	addwf	fsr1l,f,c
 48031  01516A  0EFF               	movlw	255
 48032  01516C  22E2               	addwfc	fsr1h,f,c
 48033  01516E  0012               	return		;funcret
 48034  015170                     __end_of_calc_bsoc:
 48035                           	opt callstack 0
 48036                           
 48037 ;; *************** function _send_port_data_dma *****************
 48038 ;; Defined at:
 48039 ;;		line 398 in file "eadog.c"
 48040 ;; Parameters:    Size  Location     Type
 48041 ;;  dsize           2  [STACK] unsigned short 
 48042 ;; Auto vars:     Size  Location     Type
 48043 ;;		None
 48044 ;; Return value:  Size  Location     Type
 48045 ;;                  1  [STACK] void 
 48046 ;; Registers used:
 48047 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 48048 ;; Tracked objects:
 48049 ;;		On entry : 0/0
 48050 ;;		On exit  : 3F/3B
 48051 ;;		Unchanged: 0/0
 48052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48057 ;;Total ram usage:        0 bytes
 48058 ;; Hardware stack levels used:    1
 48059 ;; Hardware stack levels required when called:    3
 48060 ;; This function calls:
 48061 ;;		Nothing
 48062 ;; This function is called by:
 48063 ;;		_calc_bsoc
 48064 ;; This function uses a reentrant model
 48065 ;;
 48066                           
 48067                           	psect	text199
 48068  0013B2                     __ptext199:
 48069                           	opt callstack 0
 48070  0013B2                     _send_port_data_dma:
 48071                           	opt callstack 10
 48072                           
 48073                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 48074                           ;stkvar	_dsize @ sp[(0)+-2]
 48075                           
 48076                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48077                           ;incstack = 0
 48078  0013B2  0EFE               	movlw	-2
 48079  0013B4  04E3               	decf	plusw1,w,c
 48080  0013B6  0EFF               	movlw	-1
 48081  0013B8  006F FF8C  F02A    	movff	plusw1,btemp
 48082  0013BE  0E02               	movlw	2
 48083  0013C0  5A2A               	subwfb	btemp^0,f,c
 48084  0013C2  A0D8               	btfss	status,0,c
 48085  0013C4  D00C               	goto	l12834
 48086                           
 48087                           ;eadog.c: 401:   dsize = 512;
 48088  0013C6  0E00               	movlw	0
 48089  0013C8  6E34               	movwf	(btemp+10)^0,c
 48090  0013CA  0E02               	movlw	2
 48091  0013CC  6E35               	movwf	(btemp+11)^0,c
 48092                           
 48093                           ;stkvar	_dsize @ sp[(0)+-2]
 48094  0013CE  0EFE               	movlw	-2
 48095  0013D0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48096  0013D6  0EFF               	movlw	-1
 48097  0013D8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48098  0013DE                     l12834:
 48099                           
 48100                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 48101  0013DE  013B               	movlb	59	; () banked
 48102  0013E0  9FDC               	bcf	220,7,b	;volatile
 48103                           
 48104                           ; BSR set to: 59
 48105                           ;eadog.c: 404:  DMA2SSZ = dsize;
 48106                           ;stkvar	_dsize @ sp[(0)+-2]
 48107  0013E2  0EFE               	movlw	-2
 48108  0013E4  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 48109  0013EA  0EFF               	movlw	-1
 48110  0013EC  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 48111                           
 48112                           ; BSR set to: 59
 48113                           ;eadog.c: 405:  DMA2DSZ = 1;
 48114  0013F2  0E00               	movlw	0
 48115  0013F4  6FCF               	movwf	207,b	;volatile
 48116  0013F6  0E01               	movlw	1
 48117  0013F8  6FCE               	movwf	206,b	;volatile
 48118                           
 48119                           ; BSR set to: 59
 48120                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 48121  0013FA  8FDC               	bsf	220,7,b	;volatile
 48122                           
 48123                           ; BSR set to: 59
 48124                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 48125  0013FC  8DDC               	bsf	220,6,b	;volatile
 48126                           
 48127                           ; BSR set to: 59
 48128                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 48129  0013FE  52E5               	movf	postdec1,f,c
 48130  001400  52E5               	movf	postdec1,f,c
 48131  001402  0012               	return		;funcret
 48132  001404                     __end_of_send_port_data_dma:
 48133                           	opt callstack 0
 48134                           
 48135 ;; *************** function _port_data_dma_ptr *****************
 48136 ;; Defined at:
 48137 ;;		line 413 in file "eadog.c"
 48138 ;; Parameters:    Size  Location     Type
 48139 ;;		None
 48140 ;; Auto vars:     Size  Location     Type
 48141 ;;		None
 48142 ;; Return value:  Size  Location     Type
 48143 ;;                  2  [STACK] PTR unsigned char 
 48144 ;; Registers used:
 48145 ;;		wreg, status,2, status,0, btemp, btemp+1
 48146 ;; Tracked objects:
 48147 ;;		On entry : 3F/2
 48148 ;;		On exit  : 0/0
 48149 ;;		Unchanged: 0/0
 48150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48155 ;;Total ram usage:        0 bytes
 48156 ;; Hardware stack levels used:    1
 48157 ;; Hardware stack levels required when called:    3
 48158 ;; This function calls:
 48159 ;;		Nothing
 48160 ;; This function is called by:
 48161 ;;		_calc_bsoc
 48162 ;; This function uses a reentrant model
 48163 ;;
 48164                           
 48165                           	psect	text200
 48166  002264                     __ptext200:
 48167                           	opt callstack 0
 48168  002264                     _port_data_dma_ptr:
 48169                           	opt callstack 10
 48170                           
 48171                           ;eadog.c: 415:  return port_data;
 48172                           
 48173                           ; BSR set to: 59
 48174                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48175                           ;incstack = 0
 48176  002264  0EFF               	movlw	low _port_data
 48177  002266  6E2A               	movwf	btemp^0,c
 48178  002268  0E06               	movlw	high _port_data
 48179  00226A  6E2B               	movwf	(btemp+1)^0,c
 48180                           
 48181                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 48182  00226C  0012               	return		;funcret
 48183  00226E                     __end_of_port_data_dma_ptr:
 48184                           	opt callstack 0
 48185                           
 48186 ;; *************** function ___asfladd *****************
 48187 ;; Defined at:
 48188 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 48189 ;; Parameters:    Size  Location     Type
 48190 ;;  f1p             2  [STACK] PTR 
 48191 ;;		 -> C(336), 
 48192 ;;  f2              4  [STACK] PTR 
 48193 ;; Auto vars:     Size  Location     Type
 48194 ;;		None
 48195 ;; Return value:  Size  Location     Type
 48196 ;;                  4  [STACK] PTR 
 48197 ;; Registers used:
 48198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 48199 ;; Tracked objects:
 48200 ;;		On entry : 0/0
 48201 ;;		On exit  : 0/0
 48202 ;;		Unchanged: 0/0
 48203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48208 ;;Total ram usage:        0 bytes
 48209 ;; Hardware stack levels used:    1
 48210 ;; Hardware stack levels required when called:    4
 48211 ;; This function calls:
 48212 ;;		___fladd
 48213 ;; This function is called by:
 48214 ;;		_calc_bsoc
 48215 ;; This function uses a reentrant model
 48216 ;;
 48217                           
 48218                           	psect	text201
 48219  000BE6                     __ptext201:
 48220                           	opt callstack 0
 48221  000BE6                     ___asfladd:
 48222                           	opt callstack 9
 48223                           
 48224                           ;	Return value of ___asfladd is never used
 48225                           ;stkvar	_f2 @ sp[(0)+-6]
 48226                           
 48227                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48228                           ;incstack = 0
 48229  000BE6  0EFA               	movlw	-6
 48230  000BE8  006F FF8F FFE6     	movff	plusw1,postinc1
 48231  000BEE  006F FF8F FFE6     	movff	plusw1,postinc1
 48232  000BF4  006F FF8F FFE6     	movff	plusw1,postinc1
 48233  000BFA  006F FF8F FFE6     	movff	plusw1,postinc1
 48234                           
 48235                           ;stkvar	_f1p @ sp[(-4)+-2]
 48236  000C00  0EFA               	movlw	-6
 48237  000C02  006F FF8F FFD9     	movff	plusw1,fsr2l
 48238  000C08  0EFB               	movlw	-5
 48239  000C0A  006F FF8F FFDA     	movff	plusw1,fsr2h
 48240  000C10  006F FF7B FFE6     	movff	postinc2,postinc1
 48241  000C16  006F FF7B FFE6     	movff	postinc2,postinc1
 48242  000C1C  006F FF7B FFE6     	movff	postinc2,postinc1
 48243  000C22  006F FF7B FFE6     	movff	postinc2,postinc1
 48244  000C28  ECD7  F0B5         	call	___fladd	;wreg free
 48245                           
 48246                           ;stkvar	_f1p @ sp[(0)+-2]
 48247  000C2C  0EFE               	movlw	-2
 48248  000C2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 48249  000C34  0EFF               	movlw	-1
 48250  000C36  006F FF8F FFDA     	movff	plusw1,fsr2h
 48251  000C3C  0060  F0AB  FFDE   	movff	btemp,postinc2
 48252  000C42  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 48253  000C48  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 48254  000C4E  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 48255                           
 48256                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 48257  000C54  0EFA               	movlw	250
 48258  000C56  26E1               	addwf	fsr1l,f,c
 48259  000C58  0EFF               	movlw	255
 48260  000C5A  22E2               	addwfc	fsr1h,f,c
 48261  000C5C  0012               	return		;funcret
 48262  000C5E                     __end_of___asfladd:
 48263                           	opt callstack 0
 48264                           
 48265 ;; *************** function _INT0_ISR *****************
 48266 ;; Defined at:
 48267 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 48268 ;; Parameters:    Size  Location     Type
 48269 ;;		None
 48270 ;; Auto vars:     Size  Location     Type
 48271 ;;		None
 48272 ;; Return value:  Size  Location     Type
 48273 ;;                  1    wreg      void 
 48274 ;; Registers used:
 48275 ;;		wreg, status,2, status,0, pclath, tosl
 48276 ;; Tracked objects:
 48277 ;;		On entry : 0/0
 48278 ;;		On exit  : 0/0
 48279 ;;		Unchanged: 0/0
 48280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48285 ;;Total ram usage:        0 bytes
 48286 ;; Hardware stack levels used:    1
 48287 ;; Hardware stack levels required when called:    2
 48288 ;; This function calls:
 48289 ;;		_INT0_CallBack
 48290 ;; This function is called by:
 48291 ;;		Interrupt level 2
 48292 ;; This function uses a non-reentrant model
 48293 ;;
 48294                           
 48295                           	psect	text202
 48296  00223C                     __ptext202:
 48297                           	opt callstack 0
 48298  00223C                     _INT0_ISR:
 48299                           	opt callstack 2
 48300                           
 48301                           ;incstack = 0
 48302  00223C  EE14  F336         	lfsr	1,___inthi_sp
 48303                           
 48304                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 48305  002240  0139               	movlb	57	; () banked
 48306  002242  91A1               	bcf	161,0,b	;volatile
 48307                           
 48308                           ; BSR set to: 57
 48309                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 48310  002244  ECA0  F00F         	call	_INT0_CallBack	;wreg free
 48311  002248  0011               	retfie		f
 48312  00224A                     __end_of_INT0_ISR:
 48313                           	opt callstack 0
 48314                           
 48315 ;; *************** function _INT0_CallBack *****************
 48316 ;; Defined at:
 48317 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 48318 ;; Parameters:    Size  Location     Type
 48319 ;;		None
 48320 ;; Auto vars:     Size  Location     Type
 48321 ;;		None
 48322 ;; Return value:  Size  Location     Type
 48323 ;;                  1  [STACK] void 
 48324 ;; Registers used:
 48325 ;;		wreg, status,2, status,0, pclath, tosl
 48326 ;; Tracked objects:
 48327 ;;		On entry : 3F/39
 48328 ;;		On exit  : 0/0
 48329 ;;		Unchanged: 0/0
 48330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48335 ;;Total ram usage:        0 bytes
 48336 ;; Hardware stack levels used:    1
 48337 ;; Hardware stack levels required when called:    1
 48338 ;; This function calls:
 48339 ;;		Absolute function
 48340 ;;		_INT0_DefaultInterruptHandler
 48341 ;; This function is called by:
 48342 ;;		_INT0_ISR
 48343 ;; This function uses a reentrant model
 48344 ;;
 48345                           
 48346                           	psect	text203
 48347  001F40                     __ptext203:
 48348                           	opt callstack 0
 48349  001F40                     _INT0_CallBack:
 48350                           	opt callstack 2
 48351                           
 48352                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 48353                           
 48354                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48355                           ;incstack = 0
 48356  001F40  0100               	movlb	0	; () banked
 48357  001F42  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 48358  001F44  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 48359  001F46  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 48360  001F48  B4D8               	btfsc	status,2,c
 48361  001F4A  0012               	return	
 48362                           
 48363                           ; BSR set to: 0
 48364                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 48365  001F4C  D801               	call	u1306_48
 48366  001F4E  0012               	return	
 48367  001F50                     u1306_48:
 48368  001F50  0005               	push	
 48369  001F52  6EFA               	movwf	pclath,c
 48370  001F54  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 48371  001F56  6EFD               	movwf	tosl,c
 48372  001F58  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 48373  001F5A  6EFE               	movwf	tosh,c
 48374  001F5C  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 48375  001F5E  6EFF               	movwf	tosu,c
 48376  001F60  50FA               	movf	pclath,w,c
 48377  001F62  0012               	return		;indir
 48378  001F64                     __end_of_INT0_CallBack:
 48379                           	opt callstack 0
 48380                           
 48381 ;; *************** function _INT0_DefaultInterruptHandler *****************
 48382 ;; Defined at:
 48383 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 48384 ;; Parameters:    Size  Location     Type
 48385 ;;		None
 48386 ;; Auto vars:     Size  Location     Type
 48387 ;;		None
 48388 ;; Return value:  Size  Location     Type
 48389 ;;                  1  [STACK] void 
 48390 ;; Registers used:
 48391 ;;		None
 48392 ;; Tracked objects:
 48393 ;;		On entry : 3F/0
 48394 ;;		On exit  : 0/0
 48395 ;;		Unchanged: 0/0
 48396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48401 ;;Total ram usage:        0 bytes
 48402 ;; Hardware stack levels used:    1
 48403 ;; This function calls:
 48404 ;;		Nothing
 48405 ;; This function is called by:
 48406 ;;		_EXT_INT_Initialize
 48407 ;;		_INT0_CallBack
 48408 ;; This function uses a reentrant model
 48409 ;;
 48410                           
 48411                           	psect	text204
 48412  0022E0                     __ptext204:
 48413                           	opt callstack 0
 48414  0022E0                     _INT0_DefaultInterruptHandler:
 48415                           	opt callstack 2
 48416                           
 48417                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 48418                           
 48419                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48420                           ;incstack = 0
 48421  0022E0  0012               	return		;funcret
 48422  0022E2                     __end_of_INT0_DefaultInterruptHandler:
 48423                           	opt callstack 0
 48424                           
 48425 ;; *************** function _Default_ISR *****************
 48426 ;; Defined at:
 48427 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 48428 ;; Parameters:    Size  Location     Type
 48429 ;;		None
 48430 ;; Auto vars:     Size  Location     Type
 48431 ;;		None
 48432 ;; Return value:  Size  Location     Type
 48433 ;;                  1    wreg      void 
 48434 ;; Registers used:
 48435 ;;		None
 48436 ;; Tracked objects:
 48437 ;;		On entry : 0/0
 48438 ;;		On exit  : 0/0
 48439 ;;		Unchanged: 0/0
 48440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48445 ;;Total ram usage:        0 bytes
 48446 ;; Hardware stack levels used:    1
 48447 ;; This function calls:
 48448 ;;		Nothing
 48449 ;; This function is called by:
 48450 ;;		Interrupt level 2
 48451 ;; This function uses a non-reentrant model
 48452 ;;
 48453                           
 48454                           	psect	text205
 48455  0022D8                     __ptext205:
 48456                           	opt callstack 0
 48457  0022D8                     _Default_ISR:
 48458                           	opt callstack 4
 48459                           
 48460                           ;incstack = 0
 48461  0022D8  EE14  F336         	lfsr	1,___inthi_sp
 48462  0022DC  0011               	retfie		f
 48463  0022DE                     __end_of_Default_ISR:
 48464                           	opt callstack 0
 48465                           
 48466 ;; *************** function _ADCC_ISR *****************
 48467 ;; Defined at:
 48468 ;;		line 314 in file "mcc_generated_files/adcc.c"
 48469 ;; Parameters:    Size  Location     Type
 48470 ;;		None
 48471 ;; Auto vars:     Size  Location     Type
 48472 ;;		None
 48473 ;; Return value:  Size  Location     Type
 48474 ;;                  1    wreg      void 
 48475 ;; Registers used:
 48476 ;;		wreg, status,2, status,0, pclath, tosl
 48477 ;; Tracked objects:
 48478 ;;		On entry : 0/0
 48479 ;;		On exit  : 0/0
 48480 ;;		Unchanged: 0/0
 48481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48486 ;;Total ram usage:        0 bytes
 48487 ;; Hardware stack levels used:    1
 48488 ;; Hardware stack levels required when called:    1
 48489 ;; This function calls:
 48490 ;;		Absolute function
 48491 ;;		_ADCC_DefaultInterruptHandler
 48492 ;;		_adc_int_handler
 48493 ;; This function is called by:
 48494 ;;		Interrupt level 2
 48495 ;; This function uses a non-reentrant model
 48496 ;;
 48497                           
 48498                           	psect	text206
 48499  001BD4                     __ptext206:
 48500                           	opt callstack 0
 48501  001BD4                     _ADCC_ISR:
 48502                           	opt callstack 3
 48503                           
 48504                           ;incstack = 0
 48505  001BD4  EE14  F336         	lfsr	1,___inthi_sp
 48506                           
 48507                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 48508  001BD8  0139               	movlb	57	; () banked
 48509  001BDA  95A1               	bcf	161,2,b	;volatile
 48510                           
 48511                           ; BSR set to: 57
 48512                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 48513  001BDC  0100               	movlb	0	; () banked
 48514  001BDE  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 48515  001BE0  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 48516  001BE2  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 48517  001BE4  B4D8               	btfsc	status,2,c
 48518  001BE6  0011               	retfie		f
 48519                           
 48520                           ; BSR set to: 0
 48521                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 48522  001BE8  D801               	call	i2u1370_48
 48523  001BEA  0011               	retfie		f
 48524  001BEC                     i2u1370_48:
 48525  001BEC  0005               	push	
 48526  001BEE  6EFA               	movwf	pclath,c
 48527  001BF0  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 48528  001BF2  6EFD               	movwf	tosl,c
 48529  001BF4  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 48530  001BF6  6EFE               	movwf	tosh,c
 48531  001BF8  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 48532  001BFA  6EFF               	movwf	tosu,c
 48533  001BFC  50FA               	movf	pclath,w,c
 48534  001BFE  0012               	return		;indir
 48535  001C00                     __end_of_ADCC_ISR:
 48536                           	opt callstack 0
 48537                           
 48538 ;; *************** function _adc_int_t_handler *****************
 48539 ;; Defined at:
 48540 ;;		line 181 in file "daq.c"
 48541 ;; Parameters:    Size  Location     Type
 48542 ;;		None
 48543 ;; Auto vars:     Size  Location     Type
 48544 ;;		None
 48545 ;; Return value:  Size  Location     Type
 48546 ;;                  1  [STACK] void 
 48547 ;; Registers used:
 48548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 48549 ;; Tracked objects:
 48550 ;;		On entry : 3F/0
 48551 ;;		On exit  : 0/0
 48552 ;;		Unchanged: 0/0
 48553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48558 ;;Total ram usage:        0 bytes
 48559 ;; Hardware stack levels used:    1
 48560 ;; Hardware stack levels required when called:    1
 48561 ;; This function calls:
 48562 ;;		_ADCC_DischargeSampleCapacitor
 48563 ;;		_ADCC_StartConversion
 48564 ;; This function is called by:
 48565 ;;		_start_adc_scan
 48566 ;;		_ADCC_ThresholdISR
 48567 ;; This function uses a reentrant model
 48568 ;;
 48569                           
 48570                           	psect	text207
 48571  000A6A                     __ptext207:
 48572                           	opt callstack 0
 48573  000A6A                     _adc_int_t_handler:
 48574                           	opt callstack 2
 48575                           
 48576                           ;daq.c: 186:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 48577                           
 48578                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48579                           ;incstack = 0
 48580  000A6A  013E               	movlb	62	; () banked
 48581  000A6C  51E6               	movf	230,w,b	;volatile
 48582  000A6E  006F FB9C  F02A    	movff	16103,btemp	;volatile
 48583  000A74  6A2B               	clrf	(btemp+1)^0,c
 48584  000A76  0060  F0A8  F02B   	movff	btemp,btemp+1
 48585  000A7C  6A2A               	clrf	btemp^0,c
 48586  000A7E  262A               	addwf	btemp^0,f,c
 48587  000A80  0E00               	movlw	0
 48588  000A82  222B               	addwfc	(btemp+1)^0,f,c
 48589  000A84  0101               	movlb	1	; () banked
 48590  000A86  5139               	movf	(_R+50)& (0+255),w,b	;volatile
 48591  000A88  0D02               	mullw	2
 48592  000A8A  0E07               	movlw	low _R
 48593  000A8C  24F3               	addwf	243,w,c
 48594  000A8E  6ED9               	movwf	fsr2l,c
 48595  000A90  0E01               	movlw	high _R
 48596  000A92  20F4               	addwfc	prodh,w,c
 48597  000A94  6EDA               	movwf	fsr2h,c
 48598  000A96  0060  F0AB  FFDE   	movff	btemp,postinc2
 48599  000A9C  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 48600  000AA2                     l14496:
 48601                           
 48602                           ;daq.c: 188:   if (++R.scan_index > 0XD) {
 48603  000AA2  0101               	movlb	1	; () banked
 48604  000AA4  2B39               	incf	(_R+50)& (0+255),f,b	;volatile
 48605  000AA6  0E0D               	movlw	13
 48606  000AA8  6539               	cpfsgt	(_R+50)& (0+255),b	;volatile
 48607  000AAA  D003               	goto	l14502
 48608                           
 48609                           ; BSR set to: 1
 48610                           ;daq.c: 189:    R.done = 1;
 48611  000AAC  0E01               	movlw	1
 48612  000AAE  6F3C               	movwf	(_R+53)& (0+255),b	;volatile
 48613  000AB0  0012               	return	
 48614  000AB2                     l14502:
 48615                           
 48616                           ; BSR set to: 1
 48617                           ;daq.c: 195:  } while (!((R.scan_select >> R.scan_index) &0x1));
 48618  000AB2  0060  F4E4  F035   	movff	_R+50,btemp+11	;volatile
 48619  000AB8  EE20  F13A         	lfsr	2,_R+51	;volatile
 48620  000ABC  006F FF78  F032    	movff	postinc2,btemp+8
 48621  000AC2  006F FF74  F033    	movff	postdec2,btemp+9
 48622  000AC8  2A35               	incf	(btemp+11)^0,f,c
 48623  000ACA  D003               	goto	u1367_44
 48624  000ACC                     u1367_45:
 48625  000ACC  90D8               	bcf	status,0,c
 48626  000ACE  3233               	rrcf	(btemp+9)^0,f,c
 48627  000AD0  3232               	rrcf	(btemp+8)^0,f,c
 48628  000AD2                     u1367_44:
 48629  000AD2  2E35               	decfsz	(btemp+11)^0,f,c
 48630  000AD4  D7FB               	goto	u1367_45
 48631  000AD6  A032               	btfss	(btemp+8)^0,0,c
 48632  000AD8  D7E4               	goto	l14496
 48633                           
 48634                           ;daq.c: 196:  ADCC_DischargeSampleCapacitor();
 48635  000ADA  EC4D  F011         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 48636                           
 48637                           ; BSR set to: 62
 48638                           ;daq.c: 197:  ADCC_StartConversion(R.scan_index & 0xf);
 48639  000ADE  0101               	movlb	1	; () banked
 48640  000AE0  5139               	movf	(_R+50)& (0+255),w,b	;volatile
 48641  000AE2  0B0F               	andlw	15
 48642  000AE4  6EE6               	movwf	postinc1,c
 48643  000AE6  ECD7  F010         	call	_ADCC_StartConversion	;wreg free
 48644                           
 48645                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 48646  000AEA  0012               	return		;funcret
 48647  000AEC                     __end_of_adc_int_t_handler:
 48648                           	opt callstack 0
 48649                           
 48650 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 48651 ;; Defined at:
 48652 ;;		line 339 in file "mcc_generated_files/adcc.c"
 48653 ;; Parameters:    Size  Location     Type
 48654 ;;		None
 48655 ;; Auto vars:     Size  Location     Type
 48656 ;;		None
 48657 ;; Return value:  Size  Location     Type
 48658 ;;                  1  [STACK] void 
 48659 ;; Registers used:
 48660 ;;		None
 48661 ;; Tracked objects:
 48662 ;;		On entry : 3F/0
 48663 ;;		On exit  : 0/0
 48664 ;;		Unchanged: 0/0
 48665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48670 ;;Total ram usage:        0 bytes
 48671 ;; Hardware stack levels used:    1
 48672 ;; This function calls:
 48673 ;;		Nothing
 48674 ;; This function is called by:
 48675 ;;		_ADCC_Initialize
 48676 ;;		_ADCC_ISR
 48677 ;;		_ADCC_ThresholdISR
 48678 ;; This function uses a reentrant model
 48679 ;;
 48680                           
 48681                           	psect	text208
 48682  0022E2                     __ptext208:
 48683                           	opt callstack 0
 48684  0022E2                     _ADCC_DefaultInterruptHandler:
 48685                           	opt callstack 3
 48686                           
 48687                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 48688                           
 48689                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48690                           ;incstack = 0
 48691  0022E2  0012               	return		;funcret
 48692  0022E4                     __end_of_ADCC_DefaultInterruptHandler:
 48693                           	opt callstack 0
 48694                           
 48695 ;; *************** function _adc_int_handler *****************
 48696 ;; Defined at:
 48697 ;;		line 171 in file "daq.c"
 48698 ;; Parameters:    Size  Location     Type
 48699 ;;		None
 48700 ;; Auto vars:     Size  Location     Type
 48701 ;;		None
 48702 ;; Return value:  Size  Location     Type
 48703 ;;                  1  [STACK] void 
 48704 ;; Registers used:
 48705 ;;		None
 48706 ;; Tracked objects:
 48707 ;;		On entry : 3F/0
 48708 ;;		On exit  : 0/0
 48709 ;;		Unchanged: 0/0
 48710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48715 ;;Total ram usage:        0 bytes
 48716 ;; Hardware stack levels used:    1
 48717 ;; This function calls:
 48718 ;;		Nothing
 48719 ;; This function is called by:
 48720 ;;		_start_adc_scan
 48721 ;;		_ADCC_ISR
 48722 ;; This function uses a reentrant model
 48723 ;;
 48724                           
 48725                           	psect	text209
 48726  0022E4                     __ptext209:
 48727                           	opt callstack 0
 48728  0022E4                     _adc_int_handler:
 48729                           	opt callstack 3
 48730                           
 48731                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 48732                           
 48733                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48734                           ;incstack = 0
 48735  0022E4  0012               	return		;funcret
 48736  0022E6                     __end_of_adc_int_handler:
 48737                           	opt callstack 0
 48738                           
 48739 ;; *************** function _ADCC_ThresholdISR *****************
 48740 ;; Defined at:
 48741 ;;		line 327 in file "mcc_generated_files/adcc.c"
 48742 ;; Parameters:    Size  Location     Type
 48743 ;;		None
 48744 ;; Auto vars:     Size  Location     Type
 48745 ;;		None
 48746 ;; Return value:  Size  Location     Type
 48747 ;;                  1    wreg      void 
 48748 ;; Registers used:
 48749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 48750 ;; Tracked objects:
 48751 ;;		On entry : 0/0
 48752 ;;		On exit  : 0/0
 48753 ;;		Unchanged: 0/0
 48754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48757 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48758 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48759 ;;Total ram usage:        5 bytes
 48760 ;; Hardware stack levels used:    1
 48761 ;; Hardware stack levels required when called:    2
 48762 ;; This function calls:
 48763 ;;		Absolute function
 48764 ;;		_ADCC_DefaultInterruptHandler
 48765 ;;		_adc_int_t_handler
 48766 ;; This function is called by:
 48767 ;;		Interrupt level 2
 48768 ;; This function uses a non-reentrant model
 48769 ;;
 48770                           
 48771                           	psect	text210
 48772  000E14                     __ptext210:
 48773                           	opt callstack 0
 48774  000E14                     _ADCC_ThresholdISR:
 48775                           	opt callstack 2
 48776                           
 48777                           ;incstack = 0
 48778  000E14  0060  F0A8  F001   	movff	btemp,??_ADCC_ThresholdISR
 48779  000E1A  0060  F0AC  F002   	movff	btemp+1,??_ADCC_ThresholdISR+1
 48780  000E20  0060  F0C8  F003   	movff	btemp+8,??_ADCC_ThresholdISR+2
 48781  000E26  0060  F0CC  F004   	movff	btemp+9,??_ADCC_ThresholdISR+3
 48782  000E2C  0060  F0D4  F005   	movff	btemp+11,??_ADCC_ThresholdISR+4
 48783  000E32  EE14  F336         	lfsr	1,___inthi_sp
 48784                           
 48785                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 48786  000E36  0139               	movlb	57	; () banked
 48787  000E38  97A1               	bcf	161,3,b	;volatile
 48788                           
 48789                           ; BSR set to: 57
 48790                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 48791  000E3A  0100               	movlb	0	; () banked
 48792  000E3C  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 48793  000E3E  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 48794  000E40  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 48795  000E42  B4D8               	btfsc	status,2,c
 48796  000E44  D00C               	goto	i2u1372_49
 48797                           
 48798                           ; BSR set to: 0
 48799                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 48800  000E46  D801               	call	i2u1372_48
 48801  000E48  D00A               	goto	i2u1372_49
 48802  000E4A                     i2u1372_48:
 48803  000E4A  0005               	push	
 48804  000E4C  6EFA               	movwf	pclath,c
 48805  000E4E  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 48806  000E50  6EFD               	movwf	tosl,c
 48807  000E52  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 48808  000E54  6EFE               	movwf	tosh,c
 48809  000E56  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 48810  000E58  6EFF               	movwf	tosu,c
 48811  000E5A  50FA               	movf	pclath,w,c
 48812  000E5C  0012               	return		;indir
 48813  000E5E                     i2u1372_49:
 48814  000E5E  0060  F014  F035   	movff	??_ADCC_ThresholdISR+4,btemp+11
 48815  000E64  0060  F010  F033   	movff	??_ADCC_ThresholdISR+3,btemp+9
 48816  000E6A  0060  F00C  F032   	movff	??_ADCC_ThresholdISR+2,btemp+8
 48817  000E70  0060  F008  F02B   	movff	??_ADCC_ThresholdISR+1,btemp+1
 48818  000E76  0060  F004  F02A   	movff	??_ADCC_ThresholdISR,btemp
 48819  000E7C  0011               	retfie		f
 48820  000E7E                     __end_of_ADCC_ThresholdISR:
 48821                           	opt callstack 0
 48822                           
 48823 ;; *************** function _UART1_rx_vect_isr *****************
 48824 ;; Defined at:
 48825 ;;		line 181 in file "mcc_generated_files/uart1.c"
 48826 ;; Parameters:    Size  Location     Type
 48827 ;;		None
 48828 ;; Auto vars:     Size  Location     Type
 48829 ;;		None
 48830 ;; Return value:  Size  Location     Type
 48831 ;;                  1    wreg      void 
 48832 ;; Registers used:
 48833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 48834 ;; Tracked objects:
 48835 ;;		On entry : 0/0
 48836 ;;		On exit  : 0/0
 48837 ;;		Unchanged: 0/0
 48838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48843 ;;Total ram usage:        0 bytes
 48844 ;; Hardware stack levels used:    1
 48845 ;; Hardware stack levels required when called:    1
 48846 ;; This function calls:
 48847 ;;		Absolute function
 48848 ;;		_UART1_Receive_ISR
 48849 ;; This function is called by:
 48850 ;;		Interrupt level 2
 48851 ;; This function uses a non-reentrant model
 48852 ;;
 48853                           
 48854                           	psect	text211
 48855  001E38                     __ptext211:
 48856                           	opt callstack 0
 48857  001E38                     _UART1_rx_vect_isr:
 48858                           	opt callstack 3
 48859                           
 48860                           ;incstack = 0
 48861  001E38  EE14  F336         	lfsr	1,___inthi_sp
 48862                           
 48863                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 48864  001E3C  0100               	movlb	0	; () banked
 48865  001E3E  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 48866  001E40  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 48867  001E42  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 48868  001E44  B4D8               	btfsc	status,2,c
 48869  001E46  0011               	retfie		f
 48870                           
 48871                           ; BSR set to: 0
 48872                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 48873  001E48  D801               	call	i2u1374_48
 48874  001E4A  0011               	retfie		f
 48875  001E4C                     i2u1374_48:
 48876  001E4C  0005               	push	
 48877  001E4E  6EFA               	movwf	pclath,c
 48878  001E50  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 48879  001E52  6EFD               	movwf	tosl,c
 48880  001E54  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 48881  001E56  6EFE               	movwf	tosh,c
 48882  001E58  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 48883  001E5A  6EFF               	movwf	tosu,c
 48884  001E5C  50FA               	movf	pclath,w,c
 48885  001E5E  0012               	return		;indir
 48886  001E60                     __end_of_UART1_rx_vect_isr:
 48887                           	opt callstack 0
 48888                           
 48889 ;; *************** function _UART1_Receive_ISR *****************
 48890 ;; Defined at:
 48891 ;;		line 192 in file "mcc_generated_files/uart1.c"
 48892 ;; Parameters:    Size  Location     Type
 48893 ;;		None
 48894 ;; Auto vars:     Size  Location     Type
 48895 ;;		None
 48896 ;; Return value:  Size  Location     Type
 48897 ;;                  1  [STACK] void 
 48898 ;; Registers used:
 48899 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48900 ;; Tracked objects:
 48901 ;;		On entry : 3F/0
 48902 ;;		On exit  : 3F/0
 48903 ;;		Unchanged: 0/0
 48904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48909 ;;Total ram usage:        0 bytes
 48910 ;; Hardware stack levels used:    1
 48911 ;; This function calls:
 48912 ;;		Nothing
 48913 ;; This function is called by:
 48914 ;;		_UART1_Initialize
 48915 ;;		_UART1_rx_vect_isr
 48916 ;; This function uses a reentrant model
 48917 ;;
 48918                           
 48919                           	psect	text212
 48920  001FEE                     __ptext212:
 48921                           	opt callstack 0
 48922  001FEE                     _UART1_Receive_ISR:
 48923                           	opt callstack 3
 48924                           
 48925                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 48926                           
 48927                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48928                           ;incstack = 0
 48929  001FEE  0ECF               	movlw	low _uart1RxBuffer
 48930  001FF0  2457               	addwf	_uart1RxHead^0,w,c	;volatile
 48931  001FF2  6ED9               	movwf	fsr2l,c
 48932  001FF4  6ADA               	clrf	fsr2h,c
 48933  001FF6  0E02               	movlw	high _uart1RxBuffer
 48934  001FF8  22DA               	addwfc	fsr2h,f,c
 48935  001FFA  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 48936  002000  2A57               	incf	_uart1RxHead^0,f,c	;volatile
 48937                           
 48938                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 48939  002002  0E07               	movlw	7
 48940  002004  6457               	cpfsgt	_uart1RxHead^0,c
 48941  002006  D001               	goto	l13858
 48942                           
 48943                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 48944  002008  6A57               	clrf	_uart1RxHead^0,c	;volatile
 48945  00200A                     l13858:
 48946                           
 48947                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 48948  00200A  0100               	movlb	0	; () banked
 48949  00200C  2BDA               	incf	_uart1RxCount& (0+255),f,b	;volatile
 48950                           
 48951                           ; BSR set to: 0
 48952                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 48953  00200E  0012               	return		;funcret
 48954  002010                     __end_of_UART1_Receive_ISR:
 48955                           	opt callstack 0
 48956                           
 48957 ;; *************** function _UART2_tx_vect_isr *****************
 48958 ;; Defined at:
 48959 ;;		line 195 in file "mcc_generated_files/uart2.c"
 48960 ;; Parameters:    Size  Location     Type
 48961 ;;		None
 48962 ;; Auto vars:     Size  Location     Type
 48963 ;;		None
 48964 ;; Return value:  Size  Location     Type
 48965 ;;                  1    wreg      void 
 48966 ;; Registers used:
 48967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 48968 ;; Tracked objects:
 48969 ;;		On entry : 0/0
 48970 ;;		On exit  : 0/0
 48971 ;;		Unchanged: 0/0
 48972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48977 ;;Total ram usage:        0 bytes
 48978 ;; Hardware stack levels used:    1
 48979 ;; Hardware stack levels required when called:    1
 48980 ;; This function calls:
 48981 ;;		Absolute function
 48982 ;;		_UART2_Transmit_ISR
 48983 ;; This function is called by:
 48984 ;;		Interrupt level 2
 48985 ;; This function uses a non-reentrant model
 48986 ;;
 48987                           
 48988                           	psect	text213
 48989  001E60                     __ptext213:
 48990                           	opt callstack 0
 48991  001E60                     _UART2_tx_vect_isr:
 48992                           	opt callstack 3
 48993                           
 48994                           ; BSR set to: 0
 48995                           ;incstack = 0
 48996  001E60  EE14  F336         	lfsr	1,___inthi_sp
 48997                           
 48998                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 48999  001E64  0100               	movlb	0	; () banked
 49000  001E66  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 49001  001E68  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 49002  001E6A  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 49003  001E6C  B4D8               	btfsc	status,2,c
 49004  001E6E  0011               	retfie		f
 49005                           
 49006                           ; BSR set to: 0
 49007                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 49008  001E70  D801               	call	i2u1376_48
 49009  001E72  0011               	retfie		f
 49010  001E74                     i2u1376_48:
 49011  001E74  0005               	push	
 49012  001E76  6EFA               	movwf	pclath,c
 49013  001E78  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 49014  001E7A  6EFD               	movwf	tosl,c
 49015  001E7C  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 49016  001E7E  6EFE               	movwf	tosh,c
 49017  001E80  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 49018  001E82  6EFF               	movwf	tosu,c
 49019  001E84  50FA               	movf	pclath,w,c
 49020  001E86  0012               	return		;indir
 49021  001E88                     __end_of_UART2_tx_vect_isr:
 49022                           	opt callstack 0
 49023                           
 49024 ;; *************** function _UART2_Transmit_ISR *****************
 49025 ;; Defined at:
 49026 ;;		line 213 in file "mcc_generated_files/uart2.c"
 49027 ;; Parameters:    Size  Location     Type
 49028 ;;		None
 49029 ;; Auto vars:     Size  Location     Type
 49030 ;;		None
 49031 ;; Return value:  Size  Location     Type
 49032 ;;                  1  [STACK] void 
 49033 ;; Registers used:
 49034 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49035 ;; Tracked objects:
 49036 ;;		On entry : 3F/0
 49037 ;;		On exit  : 3B/39
 49038 ;;		Unchanged: 0/0
 49039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49044 ;;Total ram usage:        0 bytes
 49045 ;; Hardware stack levels used:    1
 49046 ;; This function calls:
 49047 ;;		Nothing
 49048 ;; This function is called by:
 49049 ;;		_UART2_Initialize
 49050 ;;		_UART2_tx_vect_isr
 49051 ;; This function uses a reentrant model
 49052 ;;
 49053                           
 49054                           	psect	text214
 49055  001C00                     __ptext214:
 49056                           	opt callstack 0
 49057  001C00                     _UART2_Transmit_ISR:
 49058                           	opt callstack 3
 49059                           
 49060                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 49061                           
 49062                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49063                           ;incstack = 0
 49064  001C00  0E40               	movlw	64
 49065  001C02  6055               	cpfslt	_uart2TxBufferRemaining^0,c
 49066  001C04  D010               	goto	l675
 49067                           
 49068                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 49069  001C06  0E00               	movlw	low _uart2TxBuffer
 49070  001C08  2456               	addwf	_uart2TxTail^0,w,c	;volatile
 49071  001C0A  6ED9               	movwf	fsr2l,c
 49072  001C0C  6ADA               	clrf	fsr2h,c
 49073  001C0E  0E04               	movlw	high _uart2TxBuffer
 49074  001C10  22DA               	addwfc	fsr2h,f,c
 49075  001C12  50DF               	movf	indf2,w,c
 49076  001C14  013D               	movlb	61	; () banked
 49077  001C16  6FD2               	movwf	210,b	;volatile
 49078                           
 49079                           ; BSR set to: 61
 49080  001C18  2A56               	incf	_uart2TxTail^0,f,c	;volatile
 49081                           
 49082                           ; BSR set to: 61
 49083                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 49084  001C1A  0E3F               	movlw	63
 49085  001C1C  6456               	cpfsgt	_uart2TxTail^0,c
 49086  001C1E  D001               	goto	l13870
 49087                           
 49088                           ; BSR set to: 61
 49089                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 49090  001C20  6A56               	clrf	_uart2TxTail^0,c	;volatile
 49091  001C22                     l13870:
 49092                           
 49093                           ; BSR set to: 61
 49094                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 49095  001C22  2A55               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 49096                           
 49097                           ;mcc_generated_files/uart2.c: 224:     }
 49098  001C24  0012               	return	
 49099  001C26                     l675:
 49100                           
 49101                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 49102  001C26  0139               	movlb	57	; () banked
 49103  001C28  9796               	bcf	150,3,b	;volatile
 49104                           
 49105                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 49106  001C2A  0012               	return		;funcret
 49107  001C2C                     __end_of_UART2_Transmit_ISR:
 49108                           	opt callstack 0
 49109                           
 49110 ;; *************** function _UART2_rx_vect_isr *****************
 49111 ;; Defined at:
 49112 ;;		line 203 in file "mcc_generated_files/uart2.c"
 49113 ;; Parameters:    Size  Location     Type
 49114 ;;		None
 49115 ;; Auto vars:     Size  Location     Type
 49116 ;;		None
 49117 ;; Return value:  Size  Location     Type
 49118 ;;                  1    wreg      void 
 49119 ;; Registers used:
 49120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 49121 ;; Tracked objects:
 49122 ;;		On entry : 0/0
 49123 ;;		On exit  : 0/0
 49124 ;;		Unchanged: 0/0
 49125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49130 ;;Total ram usage:        0 bytes
 49131 ;; Hardware stack levels used:    1
 49132 ;; Hardware stack levels required when called:    1
 49133 ;; This function calls:
 49134 ;;		Absolute function
 49135 ;;		_UART2_Receive_ISR
 49136 ;; This function is called by:
 49137 ;;		Interrupt level 2
 49138 ;; This function uses a non-reentrant model
 49139 ;;
 49140                           
 49141                           	psect	text215
 49142  001E88                     __ptext215:
 49143                           	opt callstack 0
 49144  001E88                     _UART2_rx_vect_isr:
 49145                           	opt callstack 3
 49146                           
 49147                           ;incstack = 0
 49148  001E88  EE14  F336         	lfsr	1,___inthi_sp
 49149                           
 49150                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 49151  001E8C  0100               	movlb	0	; () banked
 49152  001E8E  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 49153  001E90  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 49154  001E92  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 49155  001E94  B4D8               	btfsc	status,2,c
 49156  001E96  0011               	retfie		f
 49157                           
 49158                           ; BSR set to: 0
 49159                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 49160  001E98  D801               	call	i2u1378_48
 49161  001E9A  0011               	retfie		f
 49162  001E9C                     i2u1378_48:
 49163  001E9C  0005               	push	
 49164  001E9E  6EFA               	movwf	pclath,c
 49165  001EA0  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 49166  001EA2  6EFD               	movwf	tosl,c
 49167  001EA4  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 49168  001EA6  6EFE               	movwf	tosh,c
 49169  001EA8  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 49170  001EAA  6EFF               	movwf	tosu,c
 49171  001EAC  50FA               	movf	pclath,w,c
 49172  001EAE  0012               	return		;indir
 49173  001EB0                     __end_of_UART2_rx_vect_isr:
 49174                           	opt callstack 0
 49175                           
 49176 ;; *************** function _UART2_Receive_ISR *****************
 49177 ;; Defined at:
 49178 ;;		line 233 in file "mcc_generated_files/uart2.c"
 49179 ;; Parameters:    Size  Location     Type
 49180 ;;		None
 49181 ;; Auto vars:     Size  Location     Type
 49182 ;;		None
 49183 ;; Return value:  Size  Location     Type
 49184 ;;                  1  [STACK] void 
 49185 ;; Registers used:
 49186 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49187 ;; Tracked objects:
 49188 ;;		On entry : 3F/0
 49189 ;;		On exit  : 3F/0
 49190 ;;		Unchanged: 0/0
 49191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49196 ;;Total ram usage:        0 bytes
 49197 ;; Hardware stack levels used:    1
 49198 ;; This function calls:
 49199 ;;		Nothing
 49200 ;; This function is called by:
 49201 ;;		_UART2_Initialize
 49202 ;;		_UART2_rx_vect_isr
 49203 ;; This function uses a reentrant model
 49204 ;;
 49205                           
 49206                           	psect	text216
 49207  002030                     __ptext216:
 49208                           	opt callstack 0
 49209  002030                     _UART2_Receive_ISR:
 49210                           	opt callstack 3
 49211                           
 49212                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 49213                           
 49214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49215                           ;incstack = 0
 49216  002030  0E00               	movlw	low _uart2RxBuffer
 49217  002032  2454               	addwf	_uart2RxHead^0,w,c	;volatile
 49218  002034  6ED9               	movwf	fsr2l,c
 49219  002036  6ADA               	clrf	fsr2h,c
 49220  002038  0E06               	movlw	high _uart2RxBuffer
 49221  00203A  22DA               	addwfc	fsr2h,f,c
 49222  00203C  006F F743 FFDF     	movff	15824,indf2	;volatile
 49223  002042  2A54               	incf	_uart2RxHead^0,f,c	;volatile
 49224                           
 49225                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 49226  002044  2854               	incf	_uart2RxHead^0,w,c
 49227  002046  B4D8               	btfsc	status,2,c
 49228                           
 49229                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 49230  002048  6A54               	clrf	_uart2RxHead^0,c	;volatile
 49231                           
 49232                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 49233  00204A  0100               	movlb	0	; () banked
 49234  00204C  2BD7               	incf	_uart2RxCount& (0+255),f,b	;volatile
 49235                           
 49236                           ; BSR set to: 0
 49237                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49238  00204E  0012               	return		;funcret
 49239  002050                     __end_of_UART2_Receive_ISR:
 49240                           	opt callstack 0
 49241                           
 49242 ;; *************** function _TMR6_ISR *****************
 49243 ;; Defined at:
 49244 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 49245 ;; Parameters:    Size  Location     Type
 49246 ;;		None
 49247 ;; Auto vars:     Size  Location     Type
 49248 ;;		None
 49249 ;; Return value:  Size  Location     Type
 49250 ;;                  1    wreg      void 
 49251 ;; Registers used:
 49252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 49253 ;; Tracked objects:
 49254 ;;		On entry : 0/0
 49255 ;;		On exit  : 0/0
 49256 ;;		Unchanged: 0/0
 49257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49261 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49262 ;;Total ram usage:        1 bytes
 49263 ;; Hardware stack levels used:    1
 49264 ;; Hardware stack levels required when called:    2
 49265 ;; This function calls:
 49266 ;;		_TMR6_CallBack
 49267 ;; This function is called by:
 49268 ;;		Interrupt level 2
 49269 ;; This function uses a non-reentrant model
 49270 ;;
 49271                           
 49272                           	psect	text217
 49273  0020E4                     __ptext217:
 49274                           	opt callstack 0
 49275  0020E4                     _TMR6_ISR:
 49276                           	opt callstack 2
 49277                           
 49278                           ; BSR set to: 0
 49279                           ;incstack = 0
 49280  0020E4  0060  F0A8  F006   	movff	btemp,??_TMR6_ISR
 49281  0020EA  EE14  F336         	lfsr	1,___inthi_sp
 49282                           
 49283                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 49284  0020EE  0139               	movlb	57	; () banked
 49285  0020F0  91A9               	bcf	169,0,b	;volatile
 49286                           
 49287                           ; BSR set to: 57
 49288                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 49289  0020F2  ECB2  F00F         	call	_TMR6_CallBack	;wreg free
 49290  0020F6  0060  F018  F02A   	movff	??_TMR6_ISR,btemp
 49291  0020FC  0011               	retfie		f
 49292  0020FE                     __end_of_TMR6_ISR:
 49293                           	opt callstack 0
 49294                           
 49295 ;; *************** function _TMR6_CallBack *****************
 49296 ;; Defined at:
 49297 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 49298 ;; Parameters:    Size  Location     Type
 49299 ;;		None
 49300 ;; Auto vars:     Size  Location     Type
 49301 ;;		None
 49302 ;; Return value:  Size  Location     Type
 49303 ;;                  1  [STACK] void 
 49304 ;; Registers used:
 49305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 49306 ;; Tracked objects:
 49307 ;;		On entry : 3F/39
 49308 ;;		On exit  : 0/0
 49309 ;;		Unchanged: 0/0
 49310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49315 ;;Total ram usage:        0 bytes
 49316 ;; Hardware stack levels used:    1
 49317 ;; Hardware stack levels required when called:    1
 49318 ;; This function calls:
 49319 ;;		Absolute function
 49320 ;;		_TMR6_DefaultInterruptHandler
 49321 ;; This function is called by:
 49322 ;;		_TMR6_ISR
 49323 ;; This function uses a reentrant model
 49324 ;;
 49325                           
 49326                           	psect	text218
 49327  001F64                     __ptext218:
 49328                           	opt callstack 0
 49329  001F64                     _TMR6_CallBack:
 49330                           	opt callstack 2
 49331                           
 49332                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 49333                           
 49334                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49335                           ;incstack = 0
 49336  001F64  0100               	movlb	0	; () banked
 49337  001F66  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 49338  001F68  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 49339  001F6A  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 49340  001F6C  B4D8               	btfsc	status,2,c
 49341  001F6E  0012               	return	
 49342                           
 49343                           ; BSR set to: 0
 49344                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 49345  001F70  D801               	call	u1314_48
 49346  001F72  0012               	return	
 49347  001F74                     u1314_48:
 49348  001F74  0005               	push	
 49349  001F76  6EFA               	movwf	pclath,c
 49350  001F78  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 49351  001F7A  6EFD               	movwf	tosl,c
 49352  001F7C  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 49353  001F7E  6EFE               	movwf	tosh,c
 49354  001F80  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 49355  001F82  6EFF               	movwf	tosu,c
 49356  001F84  50FA               	movf	pclath,w,c
 49357  001F86  0012               	return		;indir
 49358  001F88                     __end_of_TMR6_CallBack:
 49359                           	opt callstack 0
 49360                           
 49361 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 49362 ;; Defined at:
 49363 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 49364 ;; Parameters:    Size  Location     Type
 49365 ;;		None
 49366 ;; Auto vars:     Size  Location     Type
 49367 ;;  i               1  [STACK] unsigned char 
 49368 ;; Return value:  Size  Location     Type
 49369 ;;                  1  [STACK] void 
 49370 ;; Registers used:
 49371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 49372 ;; Tracked objects:
 49373 ;;		On entry : 3F/0
 49374 ;;		On exit  : 0/0
 49375 ;;		Unchanged: 0/0
 49376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49381 ;;Total ram usage:        0 bytes
 49382 ;; Hardware stack levels used:    1
 49383 ;; This function calls:
 49384 ;;		Nothing
 49385 ;; This function is called by:
 49386 ;;		_TMR6_Initialize
 49387 ;;		_TMR6_CallBack
 49388 ;; This function uses a reentrant model
 49389 ;;
 49390                           
 49391                           	psect	text219
 49392  001452                     __ptext219:
 49393                           	opt callstack 0
 49394  001452                     _TMR6_DefaultInterruptHandler:
 49395                           	opt callstack 0
 49396                           
 49397                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49398  001452  52E6               	movf	postinc1,f,c
 49399                           
 49400                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 49401                           ;stkvar	_i @ sp[(-1)+0]
 49402                           
 49403                           ;incstack = 0
 49404  001454  0EFF               	movlw	-1
 49405  001456  6AE3               	clrf	plusw1,c
 49406  001458                     l13270:
 49407                           
 49408                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 49409                           ;stkvar	_i @ sp[(-1)+0]
 49410  001458  0EFF               	movlw	-1
 49411  00145A  50E3               	movf	plusw1,w,c
 49412  00145C  0D02               	mullw	2
 49413  00145E  0EB5               	movlw	low _tickCount
 49414  001460  24F3               	addwf	243,w,c
 49415  001462  6ED9               	movwf	fsr2l,c
 49416  001464  0E02               	movlw	high _tickCount
 49417  001466  20F4               	addwfc	prodh,w,c
 49418  001468  6EDA               	movwf	fsr2h,c
 49419  00146A  50DE               	movf	postinc2,w,c
 49420  00146C  10DE               	iorwf	postinc2,w,c
 49421  00146E  B4D8               	btfsc	status,2,c
 49422  001470  D00C               	goto	l13274
 49423                           
 49424                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 49425                           ;stkvar	_i @ sp[(-1)+0]
 49426  001472  0EFF               	movlw	-1
 49427  001474  50E3               	movf	plusw1,w,c
 49428  001476  0D02               	mullw	2
 49429  001478  0EB5               	movlw	low _tickCount
 49430  00147A  24F3               	addwf	243,w,c
 49431  00147C  6ED9               	movwf	fsr2l,c
 49432  00147E  0E02               	movlw	high _tickCount
 49433  001480  20F4               	addwfc	prodh,w,c
 49434  001482  6EDA               	movwf	fsr2h,c
 49435  001484  06DE               	decf	postinc2,f,c
 49436  001486  0E00               	movlw	0
 49437  001488  5ADD               	subwfb	postdec2,f,c
 49438  00148A                     l13274:
 49439                           
 49440                           ;mcc_generated_files/tmr6.c: 207:  }
 49441                           ;stkvar	_i @ sp[(-1)+0]
 49442  00148A  0EFF               	movlw	-1
 49443  00148C  2AE3               	incf	plusw1,f,c
 49444                           
 49445                           ;stkvar	_i @ sp[(-1)+0]
 49446  00148E  0EFF               	movlw	-1
 49447  001490  006F FF8C  F02A    	movff	plusw1,btemp
 49448  001496  0E0C               	movlw	12
 49449  001498  642A               	cpfsgt	btemp^0,c
 49450  00149A  D7DE               	goto	l13270
 49451                           
 49452                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 49453  00149C  52E5               	movf	postdec1,f,c
 49454  00149E  0012               	return		;funcret
 49455  0014A0                     __end_of_TMR6_DefaultInterruptHandler:
 49456                           	opt callstack 0
 49457                           
 49458 ;; *************** function _DMA1_DMASCNT_ISR *****************
 49459 ;; Defined at:
 49460 ;;		line 126 in file "mcc_generated_files/dma1.c"
 49461 ;; Parameters:    Size  Location     Type
 49462 ;;		None
 49463 ;; Auto vars:     Size  Location     Type
 49464 ;;		None
 49465 ;; Return value:  Size  Location     Type
 49466 ;;                  1    wreg      void 
 49467 ;; Registers used:
 49468 ;;		None
 49469 ;; Tracked objects:
 49470 ;;		On entry : 0/0
 49471 ;;		On exit  : 3F/0
 49472 ;;		Unchanged: 0/0
 49473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49478 ;;Total ram usage:        0 bytes
 49479 ;; Hardware stack levels used:    1
 49480 ;; This function calls:
 49481 ;;		Nothing
 49482 ;; This function is called by:
 49483 ;;		Interrupt level 2
 49484 ;; This function uses a non-reentrant model
 49485 ;;
 49486                           
 49487                           	psect	text220
 49488  00224C                     __ptext220:
 49489                           	opt callstack 0
 49490  00224C                     _DMA1_DMASCNT_ISR:
 49491                           	opt callstack 4
 49492                           
 49493                           ;incstack = 0
 49494  00224C  EE14  F336         	lfsr	1,___inthi_sp
 49495                           
 49496                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 49497  002250  0139               	movlb	57	; () banked
 49498  002252  91A2               	bcf	162,0,b	;volatile
 49499                           
 49500                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 49501  002254  0100               	movlb	0	; () banked
 49502  002256  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 49503                           
 49504                           ; BSR set to: 0
 49505  002258  0011               	retfie		f
 49506  00225A                     __end_of_DMA1_DMASCNT_ISR:
 49507                           	opt callstack 0
 49508                           
 49509 ;; *************** function _DMA1_DMADCNT_ISR *****************
 49510 ;; Defined at:
 49511 ;;		line 133 in file "mcc_generated_files/dma1.c"
 49512 ;; Parameters:    Size  Location     Type
 49513 ;;		None
 49514 ;; Auto vars:     Size  Location     Type
 49515 ;;		None
 49516 ;; Return value:  Size  Location     Type
 49517 ;;                  1    wreg      void 
 49518 ;; Registers used:
 49519 ;;		None
 49520 ;; Tracked objects:
 49521 ;;		On entry : 0/0
 49522 ;;		On exit  : 3F/39
 49523 ;;		Unchanged: 0/0
 49524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49529 ;;Total ram usage:        0 bytes
 49530 ;; Hardware stack levels used:    1
 49531 ;; This function calls:
 49532 ;;		Nothing
 49533 ;; This function is called by:
 49534 ;;		Interrupt level 2
 49535 ;; This function uses a non-reentrant model
 49536 ;;
 49537                           
 49538                           	psect	text221
 49539  002270                     __ptext221:
 49540                           	opt callstack 0
 49541  002270                     _DMA1_DMADCNT_ISR:
 49542                           	opt callstack 4
 49543                           
 49544                           ; BSR set to: 0
 49545                           ;incstack = 0
 49546  002270  EE14  F336         	lfsr	1,___inthi_sp
 49547                           
 49548                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 49549  002274  0139               	movlb	57	; () banked
 49550  002276  93A2               	bcf	162,1,b	;volatile
 49551                           
 49552                           ; BSR set to: 57
 49553  002278  0011               	retfie		f
 49554  00227A                     __end_of_DMA1_DMADCNT_ISR:
 49555                           	opt callstack 0
 49556                           
 49557 ;; *************** function _DMA1_DMAA_ISR *****************
 49558 ;; Defined at:
 49559 ;;		line 143 in file "mcc_generated_files/dma1.c"
 49560 ;; Parameters:    Size  Location     Type
 49561 ;;		None
 49562 ;; Auto vars:     Size  Location     Type
 49563 ;;		None
 49564 ;; Return value:  Size  Location     Type
 49565 ;;                  1    wreg      void 
 49566 ;; Registers used:
 49567 ;;		None
 49568 ;; Tracked objects:
 49569 ;;		On entry : 0/0
 49570 ;;		On exit  : 3F/39
 49571 ;;		Unchanged: 0/0
 49572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49577 ;;Total ram usage:        0 bytes
 49578 ;; Hardware stack levels used:    1
 49579 ;; This function calls:
 49580 ;;		Nothing
 49581 ;; This function is called by:
 49582 ;;		Interrupt level 2
 49583 ;; This function uses a non-reentrant model
 49584 ;;
 49585                           
 49586                           	psect	text222
 49587  00227C                     __ptext222:
 49588                           	opt callstack 0
 49589  00227C                     _DMA1_DMAA_ISR:
 49590                           	opt callstack 4
 49591                           
 49592                           ; BSR set to: 57
 49593                           ;incstack = 0
 49594  00227C  EE14  F336         	lfsr	1,___inthi_sp
 49595                           
 49596                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 49597  002280  0139               	movlb	57	; () banked
 49598  002282  97A2               	bcf	162,3,b	;volatile
 49599                           
 49600                           ; BSR set to: 57
 49601  002284  0011               	retfie		f
 49602  002286                     __end_of_DMA1_DMAA_ISR:
 49603                           	opt callstack 0
 49604                           
 49605 ;; *************** function _DMA1_DMAOR_ISR *****************
 49606 ;; Defined at:
 49607 ;;		line 154 in file "mcc_generated_files/dma1.c"
 49608 ;; Parameters:    Size  Location     Type
 49609 ;;		None
 49610 ;; Auto vars:     Size  Location     Type
 49611 ;;		None
 49612 ;; Return value:  Size  Location     Type
 49613 ;;                  1    wreg      void 
 49614 ;; Registers used:
 49615 ;;		None
 49616 ;; Tracked objects:
 49617 ;;		On entry : 0/0
 49618 ;;		On exit  : 3F/39
 49619 ;;		Unchanged: 0/0
 49620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49625 ;;Total ram usage:        0 bytes
 49626 ;; Hardware stack levels used:    1
 49627 ;; This function calls:
 49628 ;;		Nothing
 49629 ;; This function is called by:
 49630 ;;		Interrupt level 2
 49631 ;; This function uses a non-reentrant model
 49632 ;;
 49633                           
 49634                           	psect	text223
 49635  002288                     __ptext223:
 49636                           	opt callstack 0
 49637  002288                     _DMA1_DMAOR_ISR:
 49638                           	opt callstack 4
 49639                           
 49640                           ; BSR set to: 57
 49641                           ;incstack = 0
 49642  002288  EE14  F336         	lfsr	1,___inthi_sp
 49643                           
 49644                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 49645  00228C  0139               	movlb	57	; () banked
 49646  00228E  95A2               	bcf	162,2,b	;volatile
 49647                           
 49648                           ; BSR set to: 57
 49649  002290  0011               	retfie		f
 49650  002292                     __end_of_DMA1_DMAOR_ISR:
 49651                           	opt callstack 0
 49652                           
 49653                           ;
 49654                           ; Interrupt Vector Table @ 0x8
 49655                           ;
 49656                           
 49657                           	psect	ivt0x8
 49658  000008                     __pivt0x8:
 49659                           	opt callstack 0
 49660  000008                     ivt0x8_base:
 49661                           	opt callstack 0
 49662                           
 49663                           ; Vector 0 : SWINT
 49664  000008  08B6               	dw	_Default_ISR shr (0+2)
 49665                           
 49666                           ; Vector 1 : HLVD
 49667  00000A  08B6               	dw	_Default_ISR shr (0+2)
 49668                           
 49669                           ; Vector 2 : OSF
 49670  00000C  08B6               	dw	_Default_ISR shr (0+2)
 49671                           
 49672                           ; Vector 3 : CSW
 49673  00000E  08B6               	dw	_Default_ISR shr (0+2)
 49674                           
 49675                           ; Vector 4 : NVM
 49676  000010  08B6               	dw	_Default_ISR shr (0+2)
 49677                           
 49678                           ; Vector 5 : SCAN
 49679  000012  08B6               	dw	_Default_ISR shr (0+2)
 49680                           
 49681                           ; Vector 6 : CRC
 49682  000014  08B6               	dw	_Default_ISR shr (0+2)
 49683                           
 49684                           ; Vector 7 : IOC
 49685  000016  08B6               	dw	_Default_ISR shr (0+2)
 49686                           
 49687                           ; Vector 8 : INT0
 49688  000018  088F               	dw	_INT0_ISR shr (0+2)
 49689                           
 49690                           ; Vector 9 : ZCD
 49691  00001A  08B6               	dw	_Default_ISR shr (0+2)
 49692                           
 49693                           ; Vector 10 : AD
 49694  00001C  06F5               	dw	_ADCC_ISR shr (0+2)
 49695                           
 49696                           ; Vector 11 : ADT
 49697  00001E  0385               	dw	_ADCC_ThresholdISR shr (0+2)
 49698                           
 49699                           ; Vector 12 : CMP1
 49700  000020  08B6               	dw	_Default_ISR shr (0+2)
 49701                           
 49702                           ; Vector 13 : SMT1
 49703  000022  08B6               	dw	_Default_ISR shr (0+2)
 49704                           
 49705                           ; Vector 14 : SMT1PRA
 49706  000024  08B6               	dw	_Default_ISR shr (0+2)
 49707                           
 49708                           ; Vector 15 : SMT1PRW
 49709  000026  08B6               	dw	_Default_ISR shr (0+2)
 49710                           
 49711                           ; Vector 16 : DMA1SCNT
 49712  000028  0893               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 49713                           
 49714                           ; Vector 17 : DMA1DCNT
 49715  00002A  089C               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 49716                           
 49717                           ; Vector 18 : DMA1OR
 49718  00002C  08A2               	dw	_DMA1_DMAOR_ISR shr (0+2)
 49719                           
 49720                           ; Vector 19 : DMA1A
 49721  00002E  089F               	dw	_DMA1_DMAA_ISR shr (0+2)
 49722                           
 49723                           ; Vector 20 : SPI1RX
 49724  000030  08B6               	dw	_Default_ISR shr (0+2)
 49725                           
 49726                           ; Vector 21 : SPI1TX
 49727  000032  08B6               	dw	_Default_ISR shr (0+2)
 49728                           
 49729                           ; Vector 22 : SPI1
 49730  000034  08B6               	dw	_Default_ISR shr (0+2)
 49731                           
 49732                           ; Vector 23 : I2C1RX
 49733  000036  08B6               	dw	_Default_ISR shr (0+2)
 49734                           
 49735                           ; Vector 24 : I2C1TX
 49736  000038  08B6               	dw	_Default_ISR shr (0+2)
 49737                           
 49738                           ; Vector 25 : I2C1
 49739  00003A  08B6               	dw	_Default_ISR shr (0+2)
 49740                           
 49741                           ; Vector 26 : I2C1E
 49742  00003C  08B6               	dw	_Default_ISR shr (0+2)
 49743                           
 49744                           ; Vector 27 : U1RX
 49745  00003E  078E               	dw	_UART1_rx_vect_isr shr (0+2)
 49746                           
 49747                           ; Vector 28 : U1TX
 49748  000040  08B6               	dw	_Default_ISR shr (0+2)
 49749                           
 49750                           ; Vector 29 : U1E
 49751  000042  08B6               	dw	_Default_ISR shr (0+2)
 49752                           
 49753                           ; Vector 30 : U1
 49754  000044  08B6               	dw	_Default_ISR shr (0+2)
 49755                           
 49756                           ; Vector 31 : TMR0
 49757  000046  08B6               	dw	_Default_ISR shr (0+2)
 49758                           
 49759                           ; Vector 32 : TMR1
 49760  000048  08B6               	dw	_Default_ISR shr (0+2)
 49761                           
 49762                           ; Vector 33 : TMR1G
 49763  00004A  08B6               	dw	_Default_ISR shr (0+2)
 49764                           
 49765                           ; Vector 34 : TMR2
 49766  00004C  08B6               	dw	_Default_ISR shr (0+2)
 49767                           
 49768                           ; Vector 35 : CCP1
 49769  00004E  08B6               	dw	_Default_ISR shr (0+2)
 49770                           
 49771                           ; Vector 36 : Undefined
 49772  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 49773                           
 49774                           ; Vector 37 : NCO1
 49775  000052  08B6               	dw	_Default_ISR shr (0+2)
 49776                           
 49777                           ; Vector 38 : CWG1
 49778  000054  08B6               	dw	_Default_ISR shr (0+2)
 49779                           
 49780                           ; Vector 39 : CLC1
 49781  000056  08B6               	dw	_Default_ISR shr (0+2)
 49782                           
 49783                           ; Vector 40 : INT1
 49784  000058  0617               	dw	_INT1_ISR shr (0+2)
 49785                           
 49786                           ; Vector 41 : CMP2
 49787  00005A  08B6               	dw	_Default_ISR shr (0+2)
 49788                           
 49789                           ; Vector 42 : DMA2SCNT
 49790  00005C  08B6               	dw	_Default_ISR shr (0+2)
 49791                           
 49792                           ; Vector 43 : DMA2DCNT
 49793  00005E  08B6               	dw	_Default_ISR shr (0+2)
 49794                           
 49795                           ; Vector 44 : DMA2OR
 49796  000060  08B6               	dw	_Default_ISR shr (0+2)
 49797                           
 49798                           ; Vector 45 : DMA2A
 49799  000062  08B6               	dw	_Default_ISR shr (0+2)
 49800                           
 49801                           ; Vector 46 : I2C2RX
 49802  000064  08B6               	dw	_Default_ISR shr (0+2)
 49803                           
 49804                           ; Vector 47 : I2C2TX
 49805  000066  08B6               	dw	_Default_ISR shr (0+2)
 49806                           
 49807                           ; Vector 48 : I2C2
 49808  000068  08B6               	dw	_Default_ISR shr (0+2)
 49809                           
 49810                           ; Vector 49 : I2C2E
 49811  00006A  08B6               	dw	_Default_ISR shr (0+2)
 49812                           
 49813                           ; Vector 50 : U2RX
 49814  00006C  07A2               	dw	_UART2_rx_vect_isr shr (0+2)
 49815                           
 49816                           ; Vector 51 : U2TX
 49817  00006E  0798               	dw	_UART2_tx_vect_isr shr (0+2)
 49818                           
 49819                           ; Vector 52 : U2E
 49820  000070  08B6               	dw	_Default_ISR shr (0+2)
 49821                           
 49822                           ; Vector 53 : U2
 49823  000072  08B6               	dw	_Default_ISR shr (0+2)
 49824                           
 49825                           ; Vector 54 : TMR3
 49826  000074  78C7               	dw	_TMR3_ISR shr (0+2)
 49827                           
 49828                           ; Vector 55 : TMR3G
 49829  000076  08B6               	dw	_Default_ISR shr (0+2)
 49830                           
 49831                           ; Vector 56 : TMR4
 49832  000078  08B6               	dw	_Default_ISR shr (0+2)
 49833                           
 49834                           ; Vector 57 : CCP2
 49835  00007A  08B6               	dw	_Default_ISR shr (0+2)
 49836                           
 49837                           ; Vector 58 : Undefined
 49838  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 49839                           
 49840                           ; Vector 59 : CWG2
 49841  00007E  08B6               	dw	_Default_ISR shr (0+2)
 49842                           
 49843                           ; Vector 60 : CLC2
 49844  000080  08B6               	dw	_Default_ISR shr (0+2)
 49845                           
 49846                           ; Vector 61 : INT2
 49847  000082  08B6               	dw	_Default_ISR shr (0+2)
 49848                           
 49849                           ; Vector 62 : Undefined
 49850  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 49851                           
 49852                           ; Vector 63 : Undefined
 49853  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 49854                           
 49855                           ; Vector 64 : Undefined
 49856  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 49857                           
 49858                           ; Vector 65 : Undefined
 49859  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 49860                           
 49861                           ; Vector 66 : Undefined
 49862  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 49863                           
 49864                           ; Vector 67 : Undefined
 49865  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 49866                           
 49867                           ; Vector 68 : Undefined
 49868  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 49869                           
 49870                           ; Vector 69 : Undefined
 49871  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 49872                           
 49873                           ; Vector 70 : TMR5
 49874  000094  7504               	dw	_TMR5_ISR shr (0+2)
 49875                           
 49876                           ; Vector 71 : TMR5G
 49877  000096  08B6               	dw	_Default_ISR shr (0+2)
 49878                           
 49879                           ; Vector 72 : TMR6
 49880  000098  0839               	dw	_TMR6_ISR shr (0+2)
 49881                           
 49882                           ; Vector 73 : CCP3
 49883  00009A  08B6               	dw	_Default_ISR shr (0+2)
 49884                           
 49885                           ; Vector 74 : CWG3
 49886  00009C  08B6               	dw	_Default_ISR shr (0+2)
 49887                           
 49888                           ; Vector 75 : CLC3
 49889  00009E  08B6               	dw	_Default_ISR shr (0+2)
 49890                           
 49891                           ; Vector 76 : Undefined
 49892  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 49893                           
 49894                           ; Vector 77 : Undefined
 49895  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 49896                           
 49897                           ; Vector 78 : Undefined
 49898  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 49899                           
 49900                           ; Vector 79 : Undefined
 49901  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 49902                           
 49903                           ; Vector 80 : CCP4
 49904  0000A8  08B6               	dw	_Default_ISR shr (0+2)
 49905                           
 49906                           ; Vector 81 : CLC4
 49907  0000AA  08B6               	dw	_Default_ISR shr (0+2)
 49908  0000AC                     ivt0x8_undefint:
 49909                           	opt callstack 0
 49910  0000AC  00FF               	reset	
 49911                           
 49912                           	psect	text224
 49913  000000                     __ptext224:
 49914                           	opt callstack 0
 49915                           
 49916                           	psect	rparam
 49917  0000                     
 49918                           	psect	temp
 49919  00002A                     btemp:
 49920                           	opt callstack 0
 49921  00002A                     	ds	32
 49922  0000                     wtemp0	set	btemp
 49923  0000                     wtemp1	set	btemp+2
 49924  0000                     wtemp2	set	btemp+4
 49925  0000                     wtemp3	set	btemp+6
 49926  0000                     wtemp4	set	btemp+8
 49927  0000                     wtemp5	set	btemp+10
 49928  0000                     wtemp8	set	btemp+1
 49929  0000                     ttemp0	set	btemp
 49930  0000                     ttemp1	set	btemp+3
 49931  0000                     ttemp2	set	btemp+6
 49932  0000                     ttemp3	set	btemp+9
 49933  0000                     ttemp5	set	btemp+1
 49934  0000                     ttemp6	set	btemp+4
 49935  0000                     ttemp7	set	btemp+8
 49936  0000                     ltemp0	set	btemp
 49937  0000                     ltemp1	set	btemp+4
 49938  0000                     ltemp2	set	btemp+8
 49939  0000                     lltemp0	set	btemp
 49940  0000                     lltemp1	set	btemp+8
 49941  0000                     lltemp2	set	btemp+16
 49942  0000                     lltemp3	set	btemp+24
 49943                           tosu	equ	0x3FFF
 49944                           tosh	equ	0x3FFE
 49945                           tosl	equ	0x3FFD
 49946                           stkptr	equ	0x3FFC
 49947                           pclatu	equ	0x3FFB
 49948                           pclath	equ	0x3FFA
 49949                           pcl	equ	0x3FF9
 49950                           tblptru	equ	0x3FF8
 49951                           tblptrh	equ	0x3FF7
 49952                           tblptrl	equ	0x3FF6
 49953                           tablat	equ	0x3FF5
 49954                           prodh	equ	0x3FF4
 49955                           prodl	equ	0x3FF3
 49956                           indf0	equ	0x3FEF
 49957                           postinc0	equ	0x3FEE
 49958                           postdec0	equ	0x3FED
 49959                           preinc0	equ	0x3FEC
 49960                           plusw0	equ	0x3FEB
 49961                           fsr0h	equ	0x3FEA
 49962                           fsr0l	equ	0x3FE9
 49963                           wreg	equ	0x3FE8
 49964                           indf1	equ	0x3FE7
 49965                           postinc1	equ	0x3FE6
 49966                           postdec1	equ	0x3FE5
 49967                           preinc1	equ	0x3FE4
 49968                           plusw1	equ	0x3FE3
 49969                           fsr1h	equ	0x3FE2
 49970                           fsr1l	equ	0x3FE1
 49971                           bsr	equ	0x3FE0
 49972                           indf2	equ	0x3FDF
 49973                           postinc2	equ	0x3FDE
 49974                           postdec2	equ	0x3FDD
 49975                           preinc2	equ	0x3FDC
 49976                           plusw2	equ	0x3FDB
 49977                           fsr2h	equ	0x3FDA
 49978                           fsr2l	equ	0x3FD9
 49979                           status	equ	0x3FD8


Data Sizes:
    Strings     1471
    Constant    588
    Data        1216
    BSS         1783
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     41      55
    BANK0           160     25     160
    BANK1           256      0     256
    BANK2           256      0     233
    BANK3           256      0     247
    BANK4           256      0     198
    BANK5           256      0     171
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    C.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.hist.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_129(CODE[1]), STR_89(CODE[1]), 

    is_leap	PTR int  size(2) Largest target is 2
		 -> F5(STACK[2]), is_leap(STACK[2]), NULL(NULL[0]), 

    sp____tm_to_tzname	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_130(CODE[1]), NULL(NULL[0]), 

    abbrevs_end	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    oppoff	PTR long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zonename	PTR PTR const unsigned char  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    offset	PTR long  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    isdst	PTR int  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    rule	PTR const int  size(2) Largest target is 10
		 -> r1(BANK2[10]), r0(BANK1[10]), 

    abbrevs	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    types	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    alt	PTR unsigned int  size(2) Largest target is 2
		 -> alt(STACK[2]), 

    index	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zi	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    trans	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 4
		 -> __gmt(CODE[4]), 

    z	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    d	PTR unsigned char  size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    rule	PTR int  size(2) Largest target is 10
		 -> r1(BANK2[10]), r0(BANK1[10]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    old_tz	PTR unsigned char  size(2) Largest target is 32
		 -> old_tz_buf(BANK3[32]), 

    __tzname	PTR unsigned char [2] size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_124(CODE[3]), STR_120(CODE[3]), STR_115(CODE[3]), STR_110(CODE[3]), 
		 -> STR_105(CODE[3]), STR_101(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_124(CODE[3]), STR_120(CODE[3]), STR_115(CODE[3]), STR_110(CODE[3]), 
		 -> STR_105(CODE[3]), STR_101(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_84(CODE[19]), STR_83(CODE[19]), 
		 -> STR_82(CODE[19]), STR_81(CODE[19]), STR_80(CODE[24]), STR_79(CODE[15]), 
		 -> STR_78(CODE[15]), STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), 
		 -> STR_74(CODE[10]), STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), 
		 -> STR_68(CODE[3]), STR_67(CODE[14]), STR_66(CODE[21]), STR_65(CODE[21]), 
		 -> STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), 
		 -> STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[20]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[22]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), 
		 -> STR_44(CODE[29]), STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[17]), 
		 -> STR_28(CODE[16]), STR_27(CODE[16]), STR_26(CODE[21]), STR_25(CODE[21]), 
		 -> STR_24(CODE[21]), STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[22]), 
		 -> STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[26]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_84(CODE[19]), STR_83(CODE[19]), 
		 -> STR_82(CODE[19]), STR_81(CODE[19]), STR_80(CODE[24]), STR_79(CODE[15]), 
		 -> STR_78(CODE[15]), STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), 
		 -> STR_74(CODE[10]), STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), 
		 -> STR_68(CODE[3]), STR_67(CODE[14]), STR_66(CODE[21]), STR_65(CODE[21]), 
		 -> STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), 
		 -> STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[20]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[22]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), 
		 -> STR_44(CODE[29]), STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[17]), 
		 -> STR_28(CODE[16]), STR_27(CODE[16]), STR_26(CODE[21]), STR_25(CODE[21]), 
		 -> STR_24(CODE[21]), STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[22]), 
		 -> STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[26]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_71(CODE[9]), STR_70(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    a	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_71(CODE[9]), STR_70(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_96(CODE[4]), STR_95(CODE[4]), STR_92(CODE[4]), STR_91(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_96(CODE[4]), STR_95(CODE[4]), STR_92(CODE[4]), STR_91(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_69(CODE[3]), STR_68(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[19]), 
		 -> STR_85(CODE[19]), STR_84(CODE[19]), STR_83(CODE[19]), STR_82(CODE[19]), 
		 -> STR_81(CODE[19]), STR_80(CODE[24]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_67(CODE[14]), STR_66(CODE[21]), 
		 -> STR_65(CODE[21]), STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[21]), 
		 -> STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), 
		 -> STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[20]), 
		 -> STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[22]), 
		 -> STR_49(CODE[22]), STR_48(CODE[22]), STR_47(CODE[23]), STR_46(CODE[23]), 
		 -> STR_45(CODE[23]), STR_44(CODE[29]), STR_43(CODE[23]), STR_42(CODE[23]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[22]), STR_38(CODE[22]), 
		 -> STR_37(CODE[22]), STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[17]), STR_28(CODE[16]), STR_27(CODE[16]), STR_26(CODE[21]), 
		 -> STR_25(CODE[21]), STR_24(CODE[21]), STR_23(CODE[26]), STR_22(CODE[26]), 
		 -> STR_21(CODE[22]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[21]), STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[22]), 
		 -> STR_13(CODE[26]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S7605_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    sp____localtime_r.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    t	PTR const long long  size(2) Largest target is 8
		 -> clock(STACK[8]), 

    sp__localtime.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp____localtime_r	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t	PTR const long long  size(2) Largest target is 8
		 -> clock(STACK[8]), 

    F191.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[19]), 
		 -> STR_85(CODE[19]), STR_84(CODE[19]), STR_83(CODE[19]), STR_82(CODE[19]), 
		 -> STR_81(CODE[19]), STR_80(CODE[24]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), STR_68(CODE[3]), 
		 -> STR_67(CODE[14]), STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), 
		 -> STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), STR_60(CODE[21]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[20]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[22]), 
		 -> STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), STR_44(CODE[29]), 
		 -> STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[17]), STR_28(CODE[16]), 
		 -> STR_27(CODE[16]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[21]), 
		 -> STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[22]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[22]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[26]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    tim.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tim	PTR const struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_128(CODE[37]), STR_127(CODE[22]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    f1p	PTR  size(2) Largest target is 337
		 -> C(BIGRAM[336]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[19]), 
		 -> STR_85(CODE[19]), STR_84(CODE[19]), STR_83(CODE[19]), STR_82(CODE[19]), 
		 -> STR_81(CODE[19]), STR_80(CODE[24]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), STR_68(CODE[3]), 
		 -> STR_67(CODE[14]), STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), 
		 -> STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), STR_60(CODE[21]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[20]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[22]), 
		 -> STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), STR_44(CODE[29]), 
		 -> STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[17]), STR_28(CODE[16]), 
		 -> STR_27(CODE[16]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[21]), 
		 -> STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[22]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[22]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[26]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[19]), 
		 -> STR_85(CODE[19]), STR_84(CODE[19]), STR_83(CODE[19]), STR_82(CODE[19]), 
		 -> STR_81(CODE[19]), STR_80(CODE[24]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), STR_68(CODE[3]), 
		 -> STR_67(CODE[14]), STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), 
		 -> STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), STR_60(CODE[21]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[20]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[22]), 
		 -> STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), STR_44(CODE[29]), 
		 -> STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[17]), STR_28(CODE[16]), 
		 -> STR_27(CODE[16]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[21]), 
		 -> STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[22]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[22]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[26]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_71(CODE[9]), 
		 -> STR_70(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_71(CODE[9]), 
		 -> STR_70(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> STR_71(CODE[9]), STR_70(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), 
		 -> T(CODE[176]), STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    t	PTR long long  size(2) Largest target is 8
		 -> time@current_time(BANK0[8]), NULL(NULL[0]), 

    hist.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    hist.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.H.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    hist	PTR volatile struct hist_type size(2) Largest target is 337
		 -> C.hist(BIGRAM[113]), C(BIGRAM[336]), 

    R.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 172
		 -> R(BANK1[171]), 

    y.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 172
		 -> r_cal(BANK5[171]), 

    y.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_71(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_70(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    sp__asctime	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__localtime	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t_mbmc	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), 

    S3346tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.hist.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  739880
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                    _display_history
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                     _load_hist_data
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                               _time
                    _update_cal_data
                   _update_hist_data
                         _update_lcd
                      _wait_lcd_done
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _update_hist_data                                     3     0      3      88
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _load_hist_data                                       0     0      0       0
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _display_history                                      8     8      0  140636
                             _WaitMs
                            _asctime
                         _get_switch
                      _get_vterm_ptr
                          _localtime
                            _sprintf
                               _time
                         _update_lcd
 ---------------------------------------------------------------------------------
 (19) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (2) _localtime                                            2     0      2   14068
                      ___localtime_r
 ---------------------------------------------------------------------------------
 (3) ___localtime_r                                        4     0      4   14037
                       ___secs_to_tm
                     ___secs_to_zone
 ---------------------------------------------------------------------------------
 (4) ___secs_to_zone                                      46    28     18   10553
                            ___aodiv
                     ___year_to_secs
                           _do_tzset
                       _rule_to_secs
                         _scan_trans
                          _zi_read32
 ---------------------------------------------------------------------------------
 (5) _scan_trans                                          30    18     12    1417
                          _zi_read32
 ---------------------------------------------------------------------------------
 (5) _zi_read32                                            2     0      2      88
 ---------------------------------------------------------------------------------
 (5) _rule_to_secs                                        30    22      8    3167
                            ___aldiv
                            ___aomod
                             ___lmul
                    ___month_to_secs
                     ___year_to_secs
                      _days_in_month
 ---------------------------------------------------------------------------------
 (6) _days_in_month                                        4     0      4      66
 ---------------------------------------------------------------------------------
 (6) ___year_to_secs                                      24    14     10    1473
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (6) ___month_to_secs                                      8     4      4      90
 ---------------------------------------------------------------------------------
 (5) _do_tzset                                             2     2      0    2777
                            _getname
                             _getoff
                            _getrule
 ---------------------------------------------------------------------------------
 (6) _getrule                                              6     2      4    1222
                             _getint
                             _getoff
 ---------------------------------------------------------------------------------
 (7) _getoff                                               6     4      2     425
                             _getint
 ---------------------------------------------------------------------------------
 (8) _getint                                               4     2      2     112
 ---------------------------------------------------------------------------------
 (6) _getname                                              6     2      4     663
 ---------------------------------------------------------------------------------
 (4) ___secs_to_tm                                        67    57     10    3174
                            ___aldiv
                            ___almod
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (7) ___omul                                              24     8     16      92
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8      92
 ---------------------------------------------------------------------------------
 (5) ___almod                                             10     2      8     296
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     300
 ---------------------------------------------------------------------------------
 (2) _asctime                                              6     4      2    2027
                            ___awdiv
                            ___awmod
                              _put2d
 ---------------------------------------------------------------------------------
 (3) _put2d                                                5     0      5     741
                            ___awdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     2      2     159
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   9     9      0  125985
                             _WaitMs
                   _cal_current_zero
                     _clear_adc_scan
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _write_cal_data                                       7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248854
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94156
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           31    31      0    5544
                                             10 COMRAM    31    31      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    5454
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    5454
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    5454
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
                               _time
 ---------------------------------------------------------------------------------
 (19) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _display_history
     _WaitMs
       _StartTimer
       _TimerDone
     _asctime
       ___awdiv
       ___awmod
       _put2d
         ___awdiv
         ___lbmod
     _get_switch
     _get_vterm_ptr
     _localtime
       ___localtime_r
         ___secs_to_tm
           ___aldiv
           ___almod
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         ___secs_to_zone
           ___aodiv
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _do_tzset
             _getname
             _getoff
               _getint
             _getrule
               _getint
               _getoff
                 _getint
           _rule_to_secs
             ___aldiv
             ___aomod
             ___lmul
             ___month_to_secs
             ___year_to_secs
               ___aodiv
               ___aomod
               ___lmul
               ___omul
             _days_in_month
           _scan_trans
             _zi_read32
           _zi_read32
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _time
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _load_hist_data
     _start_bsoc
     _stop_bsoc
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _time
   _update_cal_data
   _update_hist_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay
   _write_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_WriteByte

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
         _time
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     5D2      69       18.2%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      AB      15       66.8%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C6      13       77.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E9       9       91.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      A0       5      100.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     29      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     627      58        0.0%
DATA                 0      0     BF9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 16 04:22:35 2020

                         _SPI1_Exchange8bit 2050                    __end_of_set_display_info 20C8  
                                         _C 08FF                                           _D 0A4F  
                                         _H 01B2                                           _P 009E  
                                         _R 0107                                           _S 01BB  
                                         _T F8FF                                           _V 0200  
          __end_of_TMR5_SetInterruptHandler 1D6E                __end_of_start_switch_handler 0000  
                               __CFG_CP$OFF 000000                     __size_of_ringBufS_flush 0092  
                           _update_cal_data 130A                                          _r0 01E8  
                                        _r1 02D7                                          _bp FA27  
                    __end_of_FVR_Initialize 22BA                              _check_day_time 9A7A  
                               __CFG_LVP$ON 000000                                         l171 2182  
                                       l809 205E                                         l675 1C26  
                                       l942 0ECA                                         _GIE 01FE97  
                                       _abs 160A                                         _pad F206  
                                       fsr0 003FE9                                         fsr2 003FD9  
                   __size_of_PMD_Initialize 0014                             _TMR2_Initialize 212E  
                                       prod 003FF3                                         tosl 003FFD  
                                       wreg 003FE8                     __end_of___month_to_secs F7F0  
                             _INT0_CallBack 1F40                           _update_adc_result 18D6  
                             __CFG_BBEN$OFF 000000                       __size_of_Volts_to_SOC 00BA  
                    __size_of___localtime_r 0266                               _INT1_CallBack 1ED4  
                              __CFG_ZCD$OFF 000000                                        l1004 1816  
                                      l2010 0BE2                                        l2026 FFCE  
                                      l2051 071A                                        l3005 E04A  
                                      l2126 D404                                        l1271 21AA  
                                      l1192 1856                                        l1513 925C  
                                      l1282 DD9E                             _timer3ReloadVal 00CA  
                                      l1284 DDA4                                        l1524 D248  
                                      l2173 F8EE                                        l4005 7866  
                                      l4013 637A                                        l2350 515C  
                                      l1470 080C                                        l1607 1260  
                                      l1455 02E8                                        l2192 9DDC  
                                      l2089 0D36                                        l1449 005E  
                                      l2346 4E1E                                        l2610 A4EE  
                                      l3402 EFCC                                        l2451 F262  
                                      l2507 267A                                        l2267 ED92  
                                      l2188 9DE4                                        l2276 CAAE  
                                      l1468 0806                                        l3245 7360  
                                      l1813 192C                                        l3501 BFB8  
                                      l3326 6BA4                                        l1830 E5DA  
                                      l1822 CB66                                        l1494 1400  
                                      l1478 09FA                                        l1735 0368  
                                      l2471 8A50                                        l2551 1F5A  
                                      l1823 CCC2                                        l2536 1AAA  
                                      l2392 B0A6                                        l1488 0C00  
                                      l3257 71F0                                        l2625 9704  
                                      l1489 0E2A                                        l3290 7F96  
                                      l1754 1998                                        l1739 07AE  
                                      l2717 F9D8                                        l3366 CEC0  
                                      l1870 20C4                                        l3438 BD52  
                      _ADCC_StartConversion 21AE                                        l3527 EEB2  
                                      l1970 896C                                        l2675 46F8  
                                      l3397 164A                                        l3389 D73E  
                                      l2589 B194                                        l3822 09DC  
                                      l3809 0A60                                        l3833 374C  
                                      l2971 E23E                                        l3917 C66E  
                                      l3926 B85E                                        l2967 FCF2  
                                      l3961 B5E2                                        l3953 B4FC  
                                      l2978 E312                                        l3794 C88E  
                                      l9810 6F6C                                        l9730 6C44  
                                      l9812 6F7E                                        l9820 6FB8  
                                      l9724 6C04                                        l9910 72BC  
                                      l9806 6F4C                                        l9742 6CC2  
                                      l9734 6C5A                                        l9920 72E8  
                                      l9840 7066                                        l9816 6F88  
                                      l9760 6D7A                                        l9736 6C8A  
                                      l9754 6D34                                        l9932 7340  
                                      l9924 7300                                        l9860 717A  
                                      l9844 7070                                        l9748 6CF4  
                                      l9926 7310                                        l9870 71D4  
                                      l9862 71A0                                        l9838 7054  
                                      l9766 6D9C                                        l9758 6D4A  
                                      l9942 F620                                        STR_1 FE61  
                                      l9880 7224                                        l9848 70A2  
                                      l9696 04E4                                        STR_2 FE37  
                                      STR_3 FFD1                                        l9698 0506  
                                      l9946 F6A6                                        STR_4 FDB9  
                                      STR_5 FBF0                                        l9884 7230  
                                      l9796 6EDA                                        STR_6 FBF0  
                                      STR_7 FBF0                                        l9894 7258  
                                      l9878 7212                                        STR_8 FBF0  
                                      STR_9 FBF0                                        l9898 725E  
                                      _LATA 003FBA                                        _LATB 003FBB  
                                      _LATC 003FBC                                        _LATD 003FBD  
                                      _LATE 003FBE                                        _LATF 003FBF  
                                      _T2PR 003FAB                                        _T6PR 003F93  
                                      u7100 0534                                        _PMD0 0039C0  
                                      _PMD1 0039C1                                        _PMD2 0039C2  
                                      _PMD3 0039C3                                        _PMD4 0039C4  
                                      _PMD5 0039C5                                        u7130 1B3C  
                                      _PMD6 0039C6                                        u7107 0526  
                                      u8011 E5EC                                        _PMD7 0039C7  
                                      u7300 6FD0                                        u8100 B95E  
                                      u7140 1B3E                                        u8110 B990  
                                      u8031 E70E                                        u7400 71C2  
                                      u7240 6F00                                        u8200 C2B6  
                                      u7250 6F20                                        u8130 BA6E  
                                      u8210 C2E8                                        u7251 6F1A  
                                      u7500 72AC                                        u8060 B8C4  
                                      u8220 C31A                                        u8150 BAC0  
                                      u9110 DD48                                        u7440 7236  
                                      u7360 7098                                        u8400 7DCA  
                                      u8080 B91A                                        u8240 C3D2  
                                      u9040 E000                                        u7505 729C  
                                      u7530 72CC                                        u7290 6FB0  
                                      u9130 EB54                                        u8091 B924  
                                      u7460 7250                                        u7268 6F22  
                                      u8500 7F26                                        u8260 C424  
                                      u8180 C260                                        u9060 E02A  
                                      u7700 D660                                        u9140 EB86  
                                      u7365 7088                                        u7295 6FA0  
                                      u9071 DBFE                                        u8440 7E54  
                                      u7800 0A10                                        u9080 DC38  
                                      u9160 EC3E                                        u7705 D656  
                                      u9090 DC6A                                        u7570 1B0C  
                                      u8700 6A78                                        u9180 137E  
                                      u7820 9EA4                                        u7580 1B0E  
                                      u8605 66C2                                        u8710 6AB2  
                                      u9190 139E                                        u7750 D72E  
                                      u7830 9EF0                                        u7590 F6EA  
                                      u8615 678A                                        u8720 6AF8  
                                      u8480 7EB0                                        u7760 D730  
                                      u7920 16CE                                        u8705 6A68  
                                      u8625 6952                                        u7745 D710  
                                      u7825 9E9A                                        u8490 7EEA  
                                      u7690 161E                                        u7930 16D0  
                                      u8660 6A1C                                        u8900 FCEC  
                                      u7940 098A                                        u8485 7EA0  
                                      u8590 652E                                        u7870 9FD0  
                                      u7790 0A0E                                        u7950 098C  
                                      u7855 9F2A                                        u8840 F164  
                                      u7856 9F30                                        u7857 9F3E  
                                      u7970 1B6C                                        u8770 E916  
                                      u7890 A0A8                                        _PLLR 01CEE0  
                                      u7875 9FC6                                        u7980 1B6E  
                                      u8860 F1D8                                        u8790 E9B0  
                                      u7895 A09E                                        u8960 1504  
                                      u8970 DF14                                        u8980 DF28  
                                      u8990 DF62                                        u8975 DF0A  
                                      u8995 DF58                     __end_of_display_history D252  
                                      _WPUA 003A41                                        _WPUB 003A51  
                                      _WPUC 003A61                                        _WPUD 003A71  
                                      _WPUE 003A81                                        _WPUF 003A91  
                          __end_of_ADCC_ISR 1C00                       __size_of___secs_to_tm 10D2  
                             __CFG_FCMEN$ON 000000                                _rule_to_secs 736A  
                                      _dbuf 0354                          __size_of_CRC_Start 0006  
                                      _cp_h FA3B                                        _cp_l FA37  
                                      _atoi BAE8                                        _ctoa 08DA  
                                      _main 0000                                        _dtoa 8972  
                                      _nanf 10DC                                        _lock 01E4  
                                      _seed 02E1                                        _prec 004C  
                                      _time 119E                                        _nout 00C4  
                                      _spin F9AF                                        fsr0h 003FEA  
                                      fsr1h 003FE2                                        indf0 003FEF  
                                      fsr2h 003FDA                                        fsr0l 003FE9  
                                      indf1 003FE7                                        indf2 003FDF  
                                      fsr1l 003FE1                                        fsr2l 003FD9  
                                      _stoa B0AA                                        btemp 002A  
                                      _utoa A4AA                                        _xtoa 96C0  
                    __end_of_check_adc_scan 229A                               ___fpclassifyf D5B2  
                                      prodh 003FF4                                        prodl 003FF3  
                                      start 00AE                             _timer5ReloadVal 00CE  
                 __end_of_SPI1_Exchange8bit 206E                   __size_of_clear_hid_pflags 0066  
                           _TMR3_Initialize 15C2                 __size_of_set_load_relay_one 0010  
               __size_of_set_load_relay_two 0010                               __CFG_CSWEN$ON 000000  
                            _SPI1STATUSbits 003D17                           _UART1_rx_vect_isr 1E38  
                              ___param_bank 000000                        display_history@bwait 0053  
                    __end_of_check_day_time 9DEE                          ?_UART1_rx_vect_isr 0001  
                 __size_of_DATAEE_WriteByte 0068                            _update_hist_data 0CD0  
                          __end_of_INT0_ISR 224A                            __end_of_INT1_ISR 189A  
            __size_of_OSCILLATOR_Initialize 0016                    __end_of_ringBufS_put_dma 0370  
             __end_of_OSCILLATOR_Initialize 2188                                       l10020 163A  
                                     l10100 A130                                       l10034 D6DC  
                                     l10130 FA2E                                       l10220 C39A  
                                     l10212 C2EE                                       l10204 C266  
                                     l10044 D736                                       l10140 E5F4  
                                     l10310 7D38                                       l10302 7D02  
                                     l10038 D6E0                                       l10062 0A50  
                                     l10118 09CC                                       l10312 7D4A  
                                     l10320 7DA2                                       l10240 7A7C  
                                     l10160 B8CA                                       l10144 E69A  
                                     l10402 641A                                       l10250 7AD2  
                                     l10090 A02A                                       l10420 64E8  
                                     l10404 6420                                       l10332 7DEC  
                                     l10260 7B5A                                       l10252 7B02  
                                     l10172 B964                                       l10092 A07A  
                                     l10076 9F0C                                       l10422 64EE  
                                     l10414 64A8                                       l10406 6450  
                                     l10350 7E62                                       l10326 7DD0  
                                     l10318 7D9E                                       l10270 7BB0  
                                     l10246 7ABC                                       l10166 B91E  
                                     l10504 6A24                                       l10432 6540  
                                     l10424 651E                                       l10360 7ED6  
                                     l10336 7E12                                       l10272 7BE0  
                                     l10184 BA36                                       l10096 A0C2  
                                     l10522 6AE4                                       l10346 7E5C  
                                     l10266 7B9A                                       l11410 BBDC  
                                     l11402 BB98                                       l12202 FBBA  
                                     l12210 FC0C                                       l10508 6A2A  
                                     l10380 7F7A                                       l10372 7F42  
                                     l10292 7C72                                       l10284 7C58  
                                     l11412 BC00                                       l10612 F138  
                                     l10604 F10E                                       l12052 18C4  
                                     l10518 6A9E                                       l10366 7F12  
                                     l10278 7C1E                                       l11414 BC3E  
                                     l10630 F1EC                                       l10622 F1B8  
                                     l12206 FBF8                                       l10536 6B52  
                                     l10528 6B0E                                       l12224 84E8  
                                     l11408 BBC4                                       l10608 F120  
                                     l11600 53BA                                       l10538 6B6C  
                                     l10490 69B4                                       l10378 7F6A  
                                     l12250 87BE                                       l12234 860E  
                                     l12218 84B8                                       l11418 BCA6  
                                     l10570 E8EA                                       l10642 FCBC  
                                     l10714 DFE2                                       l10706 DFB6  
                                     l10730 DC3E                                       l10484 6998  
                                     l10396 63DA                                       l10660 E28C  
                                     l11428 BD42                                       l10564 E8CA  
                                     l10716 DFF8                                       l10708 DFD2  
                                     l11444 C700                                       l10812 C654  
                                     l10494 69DA                                       l10654 E1FC  
                                     l12246 8722                                       l12238 86F0  
                                     l10558 E8B4                                       l10646 FCF0  
                                     l10638 FC7A                                       l11446 C76C  
                                     l10742 DD10                                       l11622 567A  
                                     l11606 53F0                                       l10672 E310  
                                     l10664 E2DA                                       l12264 893A  
                                     l12272 894C                                       l11392 BB02  
                                     l10592 E9C4                                       l10584 E990  
                                     l10680 1508                                       l12360 05D2  
                                     l12352 056E                                       l11472 D7AE  
                                     l10808 C630                                       l11632 56F0  
                                     l11624 5684                                       l11616 5648  
                                     l14104 0D12                                       l12258 889E  
                                     l14114 DBCA                                       l12290 1C9E  
                                     l11394 BB24                                       l10690 DF34  
                                     l10762 EC06                                       l10754 EB5A  
                                     l11490 D860                                       l11466 D782  
                                     l11650 579C                                       l11642 5768  
                                     l14202 B06C                                       l14050 CF12  
                                     l13404 D2B6                                       l13420 06BE  
                                     l11644 5770                                       l11636 571E  
                                     l14204 B096                                       PRLOCK 0039EF  
                                     l13270 1458                                       l11478 D7DE  
                                     l10790 C4B2                                       l11670 F7C6  
                                     l11574 0FDA                                       l14134 ADEE  
                                     l14062 CFC8                                       l14070 D07A  
                                     l13408 D2CA                                       l13432 06F4  
                                     l13352 F9B0                                       l11920 E08A  
                                     l11656 5830                                       l11592 528A  
                                     l14160 AE92                                       l14144 AE34  
                                     l14136 ADFE                                       l14064 CFFC  
                                     l13274 148A                                       l10778 13A2  
                                     l13346 F90A                                       l12730 DE90  
                                     l10794 C4F2                                       l14154 AE6A  
                                     l14138 AE04                                       l14090 133A  
                                     l15300 F2F2                                       l16100 4372  
                                     l16004 3B6E                                       l11596 52B4  
                                     l14180 AF12                                       l14172 AEEC  
                                     l14164 AE9E                                       l14148 AE40  
                                     l13604 0BA0                                       l14502 0AB2  
                                     l13534 1942                                       l15222 EDC8  
                                     l16022 3CF2                                       l16014 3C06  
                                     l12742 19A2                                       l12726 DE66  
                                     l13382 E804                                       l14078 D07E  
                                     l12648 9B8E                                       l11936 E13E  
                                     l11928 E0D2                                       l13616 0BB8  
                                     l13624 F038                                       l12834 13DE  
                                     l12682 9D8A                                       l14338 96B2  
                                     l11962 CD7C                                       l11954 CD10  
                                     l15234 060A                                       l15306 FADE  
                                     l15410 14EC                                       l16114 44EE  
                                     l16050 3F8C                                       l16026 3D46  
                                     l13378 E78E                                       l12668 9C84  
                                     l13660 EA1A                                       l13396 D28A  
                                     l11964 CD8A                                       l15324 08F8  
                                     l15500 19BC                                       l15260 AC3C  
                                     l14292 FEB6                                       l16204 7524  
                                     l13580 18F6                                       l13628 F09A  
                                     l13670 EA54                                       l13654 E9F6  
                                     l11974 CDEC                                       l11966 CDA0  
                                     l15238 0648                                       l15326 0924  
                                     l15350 8A40                                       l15502 19CE  
                                     l15422 1530                                       l15430 1586  
                                     l16134 4680                                       l16070 40EC  
                                     l16046 3F58                                       l16038 3EA0  
                                     l15254 AB7E                                       l17006 CC5E  
                                     l12854 0B24                                       l16222 78DC  
                                     l16206 7578                                       l13656 EA06  
                                     l11976 CE0A                                       l11968 CDBE  
                                     l15440 162A                                       l16128 4626  
                                     l16080 419A                                       l16144 46A4  
                                     l16240 0470                                       l14288 FE78  
                                     l13914 183E                                       l13658 EA0C  
                                     l11986 CE3E                                       l11978 CE20  
                                     l15290 F25A                                       l15362 8AA8  
                                     l15442 1656                                       l16138 4684  
                                     l16090 42BC                                       l15274 AD54  
                                     l15266 ACA6                                       l16402 2F5A  
                                     l17130 0302                                       l13684 EB06  
                                     l13676 EA8C                                       l13668 EA22  
                                     l11996 CEA0                                       l15292 F26C  
                                     l15372 8CBA                                       l15604 20FA  
                                     l15612 2164                                       l15620 21D0  
                                     l15516 1A36                                       l15508 19D4  
                                     l15444 166C                                       l16260 0246  
                                     l12796 1BB8                                       l16412 2FF8  
                                     l16332 6272                                       l16308 6030  
                                     l17124 02C0                                       l17060 0066  
                                     l13870 1C22                                       l15286 F232  
                                     l15358 8A8A                                       l15534 1AF8  
                                     l15518 1A42                                       l16262 0288  
                                     l16430 3324                                       l16422 30B8  
                                     l16414 2FFE                                       l16318 6110  
                                     l17302 124C                                       l17062 0078  
                                     l17214 0810                                       l17054 0040  
                                     l14496 0AA2                                       l15296 F2A8  
                                     l15392 8D6C                                       l15640 237A  
                                     l15544 1BBA                                       l15480 18B0  
                                     l15448 1698                                       l15712 B116  
                                     l16184 B574                                       l16176 B4E2  
                                     l16344 635E                                       l16336 6290  
                                     l13792 FDCA                                       l17304 1278  
                                     l17216 083E                                       l17208 07FC  
                                     l17056 0048                                       l13858 200A  
                                     l15554 1D66                                       l15538 1B30  
                                     l15474 17D6                                       l15458 173C  
                                     l15466 176A                                       l15810 972E  
                                     l16514 EF8C                                       l16426 32C4  
                                     l16354 2742                                       l16178 B506  
                                     l17234 0898                                       l15396 8DA8  
                                     l15628 22E2                                       l15484 1912  
                                     l15732 B206                                       l15804 96F4  
                                     l16380 2D2A                                       l16372 2B2A  
                                     l16292 5C14                                       l16524 BDDA  
                                     l13796 FE46                                       l17332 132A  
                                     l17228 0872                                       l16702 4A6E  
                                     l15654 2416                                       l15478 1846  
                                     l15750 B328                                       l15742 B2C0  
                                     l16446 34DC                                       l16438 33E2  
                                     l16366 29EE                                       l16294 5C34  
                                     l17350 1392                                       l17342 1368  
                                     l17318 12D2                                       l17190 066C  
                                     l16712 4CC0                                       l13896 17FE  
                                     l15656 2430                                       l15592 2072  
                                     l15576 1F52                                       l15568 1E88  
                                     l15496 1994                                       l15736 B236  
                                     l15728 B1CA                                       l15840 98C0  
                                     l15824 97CA                                       l15816 976A  
                                     l16480 037C                                       l16544 E4A2  
                                     l15920 A9F8                                       l15904 A838  
                                     l16296 5D2A                                       l17360 13D6  
                                     l17264 0A0C                                       l16722 4E2E  
                                     l15666 24D2                                       l15578 1F74  
                                     l15746 B2EC                                       l16482 0386  
                                     l16490 039C                                       l16394 2E86  
                                     l16386 2DB2                                       l15914 A954  
                                     l16298 5D4A                                       l17370 142C  
                                     l17258 09EA                                       l17178 0592  
                                     l16708 4C46                                       l15692 25DA  
                                     l15676 2522                                       l15772 A53A  
                                     l15764 A4DE                                       l16484 0394  
                                     l16492 03C8                                       l15916 A95E  
                                     l15924 AA84                                       l15908 A8D2  
                                     l16660 ED2C                                       l17356 13B0  
                                     l17348 137A                                       l17292 10CA  
                                     l17276 0B0C                                       l16726 4E50  
                                     l16718 4D86                                       l15782 A730  
                                     l16478 0374                                       l16654 ECC6  
                                     l15864 9A30                                       l15848 9946  
                                     l15880 B6CE                                       l17288 1068  
                                     l16738 5154                                       l16690 4918  
                                     l16682 4840                                       l15962 3838  
                                     l16834 8EAA                                       l15964 3872  
                                     l15876 B690                                       l16908 C9A0  
                                     l16686 48AC                                       l16678 47EC  
                                     l15966 3888                                       l16846 8F20  
                                     l16838 8EBE                                       l15878 B6A8  
                                     l16918 CA78                                       l16936 0CC6  
                                     l15984 39BA                                       l15896 B83A  
                                     l16960 D236                                       l16698 4A1A  
                                     l15986 39F4                                       l15988 3A0A  
                                     l16884 91A8                                       l16892 C8AC  
                                     l16966 D23A                                       l16992 CB36  
                           __end_of___aldiv D8DC                             __end_of___aodiv BAE8  
                              _Volts_to_SOC FDB8                                       _ADCAP 003EF5  
                                     _ADACT 003EFE                             __end_of___almod E1BA  
                           __end_of___fladd 736A                                       _ADCLK 003EFF  
                           __end_of___aomod C448                                       _ADPCH 003EF1  
                           __end_of___fldiv 7FA0                                       _ADREF 003EFD  
                           __end_of___awdiv E9DE                             __end_of___flneg 1532  
                                     STR_10 FECA                                       STR_11 FF1E  
                                     STR_20 FE8B                                       STR_12 FD8F  
                                     STR_21 FC05                                       STR_13 FB34  
                                     STR_30 FCE1                                       STR_14 FC1B  
                                     STR_22 FB00                                       STR_15 FCF7  
                                     STR_31 FCCB                                       STR_23 FB1A  
                                     STR_24 FF33                                       STR_32 FCB5  
                                     STR_40 FC47                                       STR_16 FBEF  
                                     STR_17 FDE3                                       STR_25 FDCE  
                                     STR_33 FC9F                                       STR_41 FC5D  
                             __CFG_WDTE$OFF 000000                                       STR_50 FD4F  
                                     STR_26 FEA0                                       STR_18 FDF8  
                                     STR_34 FC89                                       STR_42 FB7D  
                                     STR_27 FF93                                       STR_19 FEDF  
                                     STR_51 FE76                                       STR_35 FC73  
                                     STR_43 FBC2                                       STR_60 FE4C  
                                     STR_52 FE22                                       STR_36 FD39  
                                     STR_44 FAE3                             __end_of___awmod F206  
                                     STR_61 FE76                                       STR_29 FF82  
                                     STR_53 FE0D                                       STR_37 FD0D  
                                     STR_45 FB66                                       STR_62 FD7A  
                                     STR_70 FFB2                                       STR_54 FF48  
                                     STR_38 FD23                                       STR_46 FB94  
                                     STR_71 FFC8                                       STR_63 FEF4  
                                     STR_55 FEB5                                       STR_39 FC31  
                                     STR_47 FBAB                                       STR_72 FF5C  
                                     STR_64 FDA4                                       STR_56 FD65  
                                     STR_48 FD4F                                       STR_80 FB4E  
                                     _ADRPT 003EEC                                       STR_65 FDA4  
                                     STR_73 FF5C                                       STR_49 FD4F  
                                     STR_57 FF09                                       STR_66 FDA4  
                                     STR_58 FE76                                       STR_74 FFBE  
                                     STR_82 FF6F                                       STR_90 FA3F  
                                     STR_67 FF61                                       STR_75 FFBE  
                                     STR_91 FFD6                                       STR_59 FD7A  
                                     STR_68 FFFB                                       STR_92 FFDE  
                                     STR_76 FFA3                             __end_of___lbmod 05FA  
                                     STR_77 FFA3                                       STR_69 FFF8  
                                     STR_78 FFA3                                       STR_79 FFA3  
                                     STR_95 FFDA                                       STR_96 FFE2  
                           __end_of___flmul 6BAE                                       STR_89 FABD  
                                     STR_99 FFE9                             __end_of___flsub 1696  
                           __end_of___fltol E054                                       u11200 E0EE  
                                     u10410 C79A                                       u10340 BB94  
                                     u12020 0E8A                                       u10500 D7AA  
                                     u11220 E166                                       u11310 CE34  
                                     u10510 D7D8                                       u10360 BCEC  
                                     u10520 D7FA                                       u11240 E190  
                                     u11160 E084                                       u10417 C78C  
                                     u10370 BCEE                                       u10450 C834  
                           __end_of___lodiv DD70                                       u10460 C862  
                                     u12300 0B20                                       u11500 FBAC  
                                     u12028 0E8C                                       u10540 D888  
                                     u11180 E0B2                                       u12045 0EDA  
                                     u12046 0EDC                                       u11190 E0CC  
                                     u10455 C82E                                       u10560 D8B2  
                                     u10480 D77C                                       u10457 C820  
                                     u11505 FBA6                                       u12234 DE12  
                                     u12250 21EC                                       u10810 F7A8  
                                     _U1P1H 003DED                                       u10467 C854  
                                     u12235 DE0C                                       u10820 1F8E  
                                     u10740 56A0                                       _U1P2H 003DEF  
                                     u11614 87D8                                       u11534 84D2  
                                     u14110 EDBC                                       _U1P1L 003DEC  
                                     _U1P3H 003DF1                                       u11615 87D2  
                                     u11535 84CC                                       u10671 51EA  
                                     _T3CLK 003FA9                                       u11640 8802  
                                     u10760 573A                                       u10664 0FF8  
                                     _T2CON 003FAC                                       _U1P2L 003DEE  
                                     u12185 170A                                       u10665 0FF2  
                                     u12370 0F5A                                       u11634 87FA  
                                     u11554 8502                                       u14130 EE38  
                                     _U1P3L 003DF0                                       u11635 87F4  
                                     u11555 84FC                                       u12540 D268  
                                     u14300 89A4                                       u15020 B22C  
                                     u10780 580E                                       u12445 21DA  
                                     u13341 0D06                                       u12710 1FD8  
                                     u11574 8524                                       u15030 B272  
                                     u10790 5810                                       u12446 21DC  
                                     u13270 D07A                                       _U2P1L 003DD4  
                                     u11575 851E                                       u15111 A772  
                                     u12455 21CA                                       u13351 0D28  
                                     u14400 8D28                                       u14320 8A14  
                                     u14240 FB58                                       u15120 A788  
                                     u15200 9816                                       u16000 272E  
                                     u12456 21CC                                       _T3CON 003FA6  
                                     _U2P2L 003DD6                                       u15121 A786  
                                     u13281 1314                                       u11594 870A  
                                     u14410 8D2C                                       u15130 A79C  
                                     u15210 9818                                       u12570 06BA  
                                     _U2P3L 003DD8                                       u12395 0F8E  
                                     u11595 8704                                       u12396 0F90  
                                     u12388 0F5C                                       u12716 1FDA  
                                     u14340 8A26                                       u14500 15D4  
                                     u15060 B34E                                       u15140 A7A0  
                                     u15300 99BC                                       u15037 B264  
                                     u14430 8D42                                       u14510 15D6  
                                     u15310 99C0                                       u15230 9876  
                                     u14190 ADC8                                       u12590 06EE  
                                     u14247 FB4A                                       _T5CLK 003F9D  
                                     u14360 8A76                                       u15080 A4C4  
                                     u15240 9878                                       u15160 96DA  
                                     u15400 AA84                             __end_of___lomod EC60  
                                     u14370 8CCE                                       u14290 89A2  
                                     u16130 33AC                                       u15330 B662  
                                     u16115 30DA                                       u14620 19A2  
                                     u14540 16E6                                       u15260 9942  
                                     u15500 3A54                                       u16140 345A  
                                     _T2HLT 003FAD                                       u14381 8CFE  
                                     u16141 3456                                       u14390 8D14  
                                     u14550 16E8                                       u14470 151A  
                                     u15270 9962                                       u15190 97C2  
                                     u15510 3A7A                                       u16230 ECA2  
                                     u14391 8D12                                       u15440 38D0  
                                     _T5CON 003F9A                                       u15281 9992  
                                     u15265 9924                                       u14650 1A06  
                                     u15290 99A8                                       u15610 4046  
                                     u15450 38D2                                       u16090 2FF8  
                                     u16170 BD92                                       u15291 99A6  
                                     u15700 4576                                       u15620 4048  
                                     u15460 38F8                                       u16500 9066  
                                     u15380 A93C                                       u16180 BDD0  
                                     u16308 ED70                                       u16260 ED08  
                                     u14590 194E                                       u16510 9090  
                                     u14920 24F8                                       u14760 1E58  
                                     u15560 3C5A                                       u15800 74FE  
                                     u16248 ECA4                                       _T6CON 003F94  
                                     u16505 9058                                       u14690 1A88  
                                     u15490 3A52                                       u15810 7510  
                                     u16290 ED6E                                       u16515 9082  
                                     u14940 25AE                                       u14860 2324  
                                     u15580 3DCE                                       u14950 25B0  
                                     u15750 B4B8                                       u16278 ED0A  
                            __CFG_DEBUG$OFF 000000                                       u15680 43C6  
                                     u16730 041C                                       u15860 0450  
                                     u16660 CCAE                                       u16900 12C2  
                                     u16670 CCB0                                       u16910 12DC  
                                     u16750 069A                                       u15960 61A4  
                                     u16920 12EE                                       u16760 07C4  
                                     u16906 12C4                                       u16770 07C6  
                                     u16916 12DE                                       _T6HLT 003F95  
                                     u15990 26DE                                       u16926 12F0  
                _ADCC_ADTI_InterruptHandler 00AB                                       _T2TMR 003FAA  
                                     _U1UIR 003DF8                                       _T2RST 003FAF  
                                     _U1RXB 003DE8                                       _U2UIR 003DE0  
                                     _U2RXB 003DD0                                       _U2TXB 003DD2  
                                     _T6TMR 003F92                                       _T6RST 003F97  
                       ??_UART1_rx_vect_isr 0006                                       _ISRPR 0039F1  
                                     _OSCEN 0039DD                                       _TMR3H 003FA5  
                                     _TMR5H 003F99                                       _TMR3L 003FA4  
                                     _TMR5L 003F98                   __end_of_update_adc_result 1910  
                                     _TRISA 003FC2                                       _TRISB 003FC3  
                                     _TRISC 003FC4                                       _TRISD 003FC5  
                                     _TRISE 003FC6                                       _TRISF 003FC7  
                               _Default_ISR 22D8                         __size_of_CRC_IsBusy 0010  
                   __size_of_clear_adc_scan 0006                          _current_sensor_cal 8DF2  
         __size_of_TMR3_SetInterruptHandler 0028                                ___secs_to_tm 2684  
         __size_of_TMR6_SetInterruptHandler 0028                             __end_of_asctime 84B6  
                             __CFG_WRTB$OFF 000000                            __end_of_TMR3_ISR E47E  
                             __CFG_WRTC$OFF 000000                            _cal_current_zero 0692  
                                     ___gmt FA2F                               __CFG_WRTD$OFF 000000  
                          __end_of_TMR5_ISR D5B2                             __end_of_getname AAE6  
                              _DMA1CON0bits 003BFC                            __end_of_TMR6_ISR 20FE  
                              _DMA1CON1bits 003BFD                  __size_of_send_lcd_data_dma 004A  
                           _DATAEE_ReadByte 1A86                                       _fabsf 016C  
                           __end_of_getrule B868                                       _flags 004E  
                      __size_of_check_range 0080                   __size_of_CRC_ReverseValue 00CE  
                                     _r_cal 0500                    __size_of_calc_model_data 045A  
                              _DMA2CON0bits 003BDC                                _DMA2CON1bits 003BDD  
              __end_of_get_ac_charger_relay 223A                                       _fputc ED98  
                __size_of_send_lcd_cmd_long 0040                             __end_of_isalpha 16DA  
                                     _fputs 05FA                             __end_of_isdigit 1B78  
                           __end_of_ivln2_h FA37                                       _put2d EEBC  
                        __CFG_MCLRE$EXTMCLR 000000                                       _srand 19B6  
                                     _width 004A                                       _putch 20C8  
              __end_of_set_ac_charger_relay 2210                             __end_of_islower 1B18  
                           __end_of_isspace 13B2                    _INT1_SetInterruptHandler 1D96  
                           __end_of_set_dac FFE0                             __end_of_isupper 1B48  
                                     pclath 003FFA                                       tablat 003FF5  
                                     ltemp0 002A                                       ltemp1 002E  
                                     ltemp2 0032                    __size_of_DMA1_Initialize 006A  
                                     plusw0 003FEB                                       plusw1 003FE3  
                                     plusw2 003FDB                                       ttemp0 002A  
                                     ttemp1 002D                                       ttemp2 0030  
                                     ttemp3 0033                                       ttemp5 002B  
                                     ttemp6 002E                                       ttemp7 0032  
                                     status 003FD8         __end_of_UART1_SetRxInterruptHandler 1D1E  
               _UART1_SetRxInterruptHandler 1CF6                                       wtemp0 002A  
                                     wtemp1 002C                                       wtemp2 002E  
                                     wtemp3 0030                                       wtemp4 0032  
                                     wtemp5 0034                                       wtemp8 002B  
                           __end_of_sprintf F424                             __end_of_tolower 0A6A  
                           __end_of_strncmp C898                             __end_of_toupper 09E6  
                 __size_of_DMA1_DMADCNT_ISR 000A                   __end_of_UART1_rx_vect_isr 1E60  
                  __size_of_SPI1_Initialize 0016                     __end_of_update_cal_data 1360  
                           _TMR5_Initialize 157A                       __end_of_ringBufS_init 1C7E  
                           __initialization F424                           _UART2_rx_vect_isr 1E88  
                             ___localtime_r BD5C                                __end_of_cp_h FA3F  
                              __end_of_cp_l FA3B                                __end_of_atoi BD5C  
                              __end_of_ctoa 0962                                __end_of_main 1440  
                              __end_of_dtoa 8DF2                                __end_of_nanf 113E  
                              __end_of_time 11FC                                __end_of_spin FA27  
                              __end_of_stoa B368                                __end_of_utoa A7EA  
                              __end_of_xtoa 9A7A                              __CFG_SAFEN$OFF 000000  
                        ?_UART2_rx_vect_isr 0001                     __end_of_TMR2_Initialize 2146  
                     __end_of_send_lcd_data 1ED4                    __size_of_DMA2_Initialize 005A  
                __end_of_check_enter_button 0CD0                           __end_of_CRC_Start 22C0  
                  _TMR5_SetInterruptHandler 1D46                               __activetblptr 000003  
                 __size_of_DMA1_DMASCNT_ISR 000E                       _TMR3_InterruptHandler 00A2  
                         _port_data_dma_ptr 2264                          esr_check@esr_state 00D0  
                       ??_UART2_rx_vect_isr 0006                                      INTCON0 003FD2  
      __size_of_UART2_SetRxInterruptHandler 0028                              __CFG_MVECEN$ON 000000  
                           _TMR6_Initialize 1C2C                             _PWM8_Initialize 215C  
                          _UART1_Initialize 1532                           _UART2_tx_vect_isr 1E60  
                        _UART2_Transmit_ISR 1C00                                      _ADACCU 003EEA  
                                    _ADACQH 003EF4                                      _ADACQL 003EF3  
                                    _ADCON0 003EF8                                      _ADCON1 003EF9  
                                    _ADCON2 003EFA                                      _ADCON3 003EFB  
                            _start_adc_scan 1016                                      _ADLTHH 003EDF  
                                    _ADLTHL 003EDE                                      STR_101 FFE9  
                                    STR_110 FFEC                                      STR_103 FFEF  
                                    STR_120 FFF5                                      STR_105 FFEF  
                                    STR_113 FFF2                                      STR_122 FFE6  
                                    STR_115 FFF2                                      STR_124 FFE6  
                                    STR_108 FFEC                                      STR_118 FFF5  
                                    STR_127 FBD9                                      STR_128 FABE  
                                    _ADPREH 003EF7                                      _ADPREL 003EF6  
                                    _DMA1PR 0039F3                                      _DMA2PR 0039F4  
                                    _ADSTAT 003EFC                                      _ADUTHH 003EE1  
                                    _ADUTHL 003EE0                          _PWM8_LoadDutyValue 16DA  
                                    _ANSELA 003A40                                      _ANSELB 003A50  
                                    _ANSELC 003A60                                      _ANSELD 003A70  
                                    _ANSELE 003A80                                      _ANSELF 003A90  
                        ?_UART2_tx_vect_isr 0001                                      _U1CON0 003DF2  
                                    _U1CON1 003DF3                                      _U1CON2 003DF4  
                                    _T3GATE 003FA8                                      _U1BRGH 003DF6  
                                    _U1FIFO 003DF7                                      _T3GCON 003FA7  
                                    _U2CON0 003DDA                                      _U2CON1 003DDB  
                                    _U1BRGL 003DF5                                      _U2CON2 003DDC  
                                    _U2BRGH 003DDE                                      _U2FIFO 003DDF  
                                    _U2BRGL 003DDD                                      _T5GATE 003F9C  
                                    _T5GCON 003F9B                                      _MAINPR 0039F2  
                                    _RC3PPS 003A13                                      _RD1PPS 003A19  
                                    i1l1021 D502                                      _RB6PPS 003A0E  
                                    i1l1209 E3E6                        _start_switch_handler FFE0  
                                    _RC5PPS 003A15                                      _ODCONA 003A42  
                                    _ODCONB 003A52                                      _ODCONC 003A62  
                                    _RC6PPS 003A16                                      _ODCOND 003A72  
                                    _ODCONE 003A82                                      _ODCONF 003A92  
                   __end_of_TMR3_Initialize 160A                              __CFG_WDTCCS$SC 000000  
                                    _FVRCON 003EC1                            _mode_lamp_bright 221E  
                                    _SCANPR 0039F7                                      _IVTADH 00389E  
                                    _IVTADL 00389D                                      _IVTADU 00389F  
              __size_of_eaDogM_WriteCommand 000E                                      _OSCFRQ 0039DF  
                                    _NVMDAT 0039E3                        __size_of_hid_display 021C  
                          __end_of___xxtofl CECA       __end_of_ADCC_DischargeSampleCapacitor 22A2  
    __size_of_ADCC_DischargeSampleCapacitor 0008               _ADCC_DischargeSampleCapacitor 229A  
                  __end_of_send_lcd_cmd_dma 208C                             _TMR3_WriteTimer 181C  
                       ??_UART2_tx_vect_isr 0006                   __end_of_UART2_rx_vect_isr 1EB0  
                __size_of_SPI1_Exchange8bit 001E                      __size_of_DMA1_DMAA_ISR 000A  
                   __size_of___secs_to_zone 08A2                              __CFG_XINST$OFF 000000  
                         _CLKREF_Initialize 225A                            _UART2_Initialize 113E  
                                    _WaitMs 1980                             _conv_raw_result 84B6  
                              _CCPTMRS1bits 003F5F        __size_of_ADCC_SetADIInterruptHandler 0028  
                          __end_of_do_tzset B5E8                                      ___flge E1BA  
                                    ___fleq FC38                                      ___lmul F9C0  
                                    ___omul E5DE                           _ADCC_ThresholdISR 0E14  
                            __CFG_STVREN$ON 000000                                      _crcObj 00E4  
                            _ringBufS_flush 0724                                      _efgtoa 1440  
                                    _getoff C448                                      _getint F612  
                                    _floorf 9DEE                           dac_spi_control@S0 00D5  
                         dac_spi_control@S1 00D4                           dac_spi_control@S2 00D3  
                         dac_spi_control@SB 00D1                           dac_spi_control@SC 00D2  
                        ?_ADCC_ThresholdISR 0001                                      _memset AAE6  
                      __size_of_help_button 0038                                      clear_0 F496  
                                    clear_1 F4AA                                      clear_2 F4BC  
                                    clear_3 F4C8                                      clear_4 F4D4  
                                    clear_5 F4E0                                      clear_6 F4EC  
                                    clear_7 F4F8                                      clear_8 F504  
                                    _t_mbmc 00C6                   __end_of_port_data_dma_ptr 226E  
                    __size_of_read_cal_data 01CA                                      _printf 107A  
                        _eaDogM_WriteString 0418                     __end_of_DATAEE_ReadByte 1AB8  
                                    _strcpy FA96                                   ?_ADCC_ISR 0001  
                                    _strlen 04BE                          __size_of_TimerDone 0028  
                              __pdataBIGRAM 06FF                             _ADCC_Initialize 0DA8  
                            _PMD_Initialize 2188                  __size_of_update_adc_result 003A  
                 __end_of_UART2_tx_vect_isr 1E88                                      lltemp0 002A  
                                    lltemp1 0032                                      lltemp2 003A  
                                    lltemp3 0042                         ??_ADCC_ThresholdISR 0001  
                    __end_of_start_adc_scan 107A                                __mediumconst F7F2  
                                    preinc2 003FDC                      __size_of_init_port_dma 0030  
                                    tblptrh 003FF7                                      tblptrl 003FF6  
                                    tblptru 003FF8                            __end_of_wdtdelay 12B0  
                          __end_of_spinners F9C0                            __end_of_vfprintf 02C6  
                                _StartTimer 179C                          __size_of___asfladd 0078  
                               localtime@tm 03DF               __size_of_INTERRUPT_Initialize 0066  
                   __end_of_TMR5_Initialize 15C2                           _SYSTEM_Initialize 1404  
                                ___daylight 00C2                                  __accesstop 0060  
                   __end_of__initialization F516                                   ?_INT0_ISR 0001  
                                 ?_INT1_ISR 0001                        __end_of_display_help 22B2  
                      __end_of_display_info 22AA                   __end_of_CLKREF_Initialize 2264  
                             ___rparam_used 000001                  __size_of_UART1_rx_vect_isr 0028  
                           _TMR5_WriteTimer 17DC                       _set_temp_display_help 21F0  
                          _clear_hid_pflags 0EE6                       __end_of_TMR3_CallBack 1F40  
                 __end_of_ADCC_ThresholdISR 0E7E                          __size_of_calc_bsoc 0A6E  
                    __end_of_ringBufS_flush 07B6                              __pcstackCOMRAM 0001  
                                ___inthi_sp 1336                                  ___intlo_sp 199B  
                              __pidataBANK1 FCFC                                __pidataBANK2 00B6  
                             __end_of___gmt FA33                 __size_of_send_port_data_dma 0052  
                             __end_of_fabsf 021A                                   ?_TMR3_ISR 0001  
                                 ?_TMR5_ISR 0001                                   ?_TMR6_ISR 0001  
                          _DATAEE_WriteByte 0E7E                              ivt0x8_undefint 00AC  
                             __end_of_fputc EEBC                               __end_of_fputs 0692  
                      _get_ac_charger_relay 222C                               __end_of_put2d EFD6  
                             __end_of_srand 19EA                       __end_of_TMR5_CallBack 1F1C  
                             __end_of_putch 20E2                        _set_ac_charger_relay 2200  
                   __end_of_PWM8_Initialize 2172                     __end_of_TMR6_Initialize 1C56  
                         _adc_int_t_handler 0A6A                      __end_of_PMD_Initialize 219C  
                                __end_of_bp FA2F                                  ___timezone 0076  
                                ??_ADCC_ISR 0001                       __end_of_TMR6_CallBack 1F88  
               __size_of_EXT_INT_Initialize 0034                    calc_bsoc@log_update_wait 0050  
                    __size_of_calc_ror_data 0186                               _DMA1_DMAA_ISR 227C  
                     TMR3_ISR@CountCallBack 00C8                              _clear_adc_scan 22C0  
                        __size_of_hid_input 0138                          __end_of_CRC_IsBusy 21F0  
                    __size_of_mode_lamp_dim 0018                            time@current_time 00DC  
                          _CRC_ReverseValue FB6A                    _UART2_RxInterruptHandler 00B7  
                 __end_of_SYSTEM_Initialize 1452                             __CFG_PR1WAY$OFF 000000  
                           __CFG_IVT1WAY$ON 000000                     __end_of_TMR3_WriteTimer 185C  
                                __pbssBANK0 0060                                  __pbssBANK1 01BB  
                                __pbssBANK2 02B5                                  __pbssBANK3 0300  
                                __pbssBANK4 0400                                  __pbssBANK5 0500  
                                __pbssBANK6 0600                    __end_of_update_hist_data 0D3E  
                                _check_help CAB4                               _read_cal_data CECA  
                   __end_of_conv_raw_result 8972                          __size_of_esr_check 02D8  
                     _INT0_InterruptHandler 00BD                                  ??_INT0_ISR 0001  
                                ??_INT1_ISR 0007                       __end_of_days_in_month 1016  
                         __end_of_TimerDone 1CA6                            _DMA1_DMADCNT_ISR 2270  
                           _convert_dac_raw EFD6                          __size_of_init_bsoc 0246  
                __size_of_UART2_rx_vect_isr 0028                                     IVTBASEH 003FD6  
                                   IVTBASEL 003FD5                                     IVTBASEU 003FD7  
                        __size_of_lp_filter 01BC                          __size_of_localtime 0020  
                             _init_port_dma 1AB8                       __end_of_wait_lcd_done 1FAA  
                  __end_of_cal_current_zero 0724            __end_of_TMR3_SetInterruptHandler 1D96  
                           __CFG_PPS1WAY$ON 000000            __end_of_TMR6_SetInterruptHandler 1D46  
                                ??_TMR3_ISR 00E7                     __end_of_ADCC_Initialize 0E12  
                                ??_TMR5_ISR 000B                   __end_of_adc_int_t_handler 0AEC  
                                ??_TMR6_ISR 0006                           __end_of___asfladd 0C5E  
                                   _ADFLTRH 003EE7                                     _ADFLTRL 003EE6  
                                   _DMA1DSA 003BF0                                     _DMA2DSA 003BD0  
                                   _DMA1DSZ 003BEE                                     _DMA2DSZ 003BCE  
                                   _DMA1SSA 003BF9                                     _DMA2SSA 003BD9  
                        __size_of_set_dac_a 0034                          __size_of_set_dac_b 0034  
      __end_of_ADCC_SetADTIInterruptHandler 1E0E       __size_of_ADCC_SetADTIInterruptHandler 0028  
              _ADCC_SetADTIInterruptHandler 1DE6                                     _DMA1SSZ 003BF7  
                                   _DMA2SSZ 003BD7                  __size_of_port_data_dma_ptr 000A  
                                   _ADSTPTH 003EE5                                     _ADSTPTL 003EE4  
                                   _CRCACCH 003963                                     _CRCACCL 003962  
                   __size_of_load_hist_data 0018                                     _CRCDATH 003961  
                                   _CRCDATL 003960                           _UART1_Receive_ISR 1FEE  
                                   _CRCCON0 003968                                     _CRCCON1 003969  
                                   _CLKRCLK 003CE6                                     _CLKRCON 003CE5  
                    __end_of_clear_adc_scan 22C6                                     _CRCXORH 003967  
                                   _CRCXORL 003966                              ?_DMA1_DMAA_ISR 0001  
                          _DMA1_DMASCNT_ISR 224C                                     u1232_20 2236  
                                   u1209_20 9BB0                                     _U1ERRIE 003DFA  
                        __size_of_set_vterm 001E                                     u1243_20 1950  
                                   u1314_48 1F74                                     u1306_48 1F50  
                                   _U1ERRIR 003DF9                                     u1243_26 1952  
                                   u1308_28 1EE4                                     _U2ERRIE 003DE2  
                                   u1317_28 1F08                                     _U2ERRIR 003DE1  
                                   u1272_28 E9FC                                     u1169_25 220A  
                                   u1169_26 220C                                     u1274_20 EA16  
                                   u1274_21 EA10                                     u1278_24 EAFC  
                                   u1278_25 EAF8                                     u1367_44 0AD2  
                                   u1367_45 0ACC                                     u1641_20 4E40  
                         _CRC_8BitDataWrite 219C                                     _INT0PPS 003AC0  
                       __CFG_PWRTS$PWRT_OFF 000000                                     _INT1PPS 003AC1  
                                   u1639_20 4D76                                     u1646_28 1F2C  
                              ?_Default_ISR 0001                  __size_of_UART2_tx_vect_isr 0028  
                                   _U1RXPPS 003AE5                                     _U2RXPPS 003AE8  
                           _dac_spi_control 0B6C                                     _OSCCON1 0039D9  
                                   _OSCCON3 0039DB                                     _IVTLOCK 003FD4  
                        __size_of_vfpfcnvrt 0FAC                                     _SPI1CLK 003D1C  
                                   _SPI1RXB 003D10                                     _NVMADRH 0039E1  
                                   _NVMADRL 0039E0                           __end_of_calc_bsoc 5170  
                                   _SPI1TXB 003D11                                     _OSCTUNE 0039DE  
                                   _NVMCON2 0039E6                                     _PWM8DCH 003F61  
                                   _PWM8DCL 003F60                                     _PWM8CON 003F62  
                                   _SLRCONA 003A43                                     _SLRCONB 003A53  
                                   _SLRCONC 003A63                                     _SLRCOND 003A73  
                                   _SLRCONE 003A83                                     _SLRCONF 003A93  
                        __size_of_zi_read32 00F6                                  _get_switch 1BA6  
                        __size_of_start_lcd 0006                     __size_of___year_to_secs 0972  
                   __end_of_TMR5_WriteTimer 181C                     __size_of_switch_handler 0142  
                        __size_of_stop_bsoc 0006                  __end_of_set_load_relay_one 21E0  
                __end_of_set_load_relay_two 21D0           __size_of_INT0_SetInterruptHandler 0028  
                __size_of_CLKREF_Initialize 000A                               _calc_ror_data DA6A  
                            ___secs_to_zone 5AE2                     __size_of_DMA1_DMAOR_ISR 000A  
                                   __Hparam 0000                  __size_of_ADCC_ThresholdISR 006A  
                             _mode_lamp_dim 2116                                     __Lparam 0000  
                  __end_of_UART1_Initialize 157A                           __end_of_hid_input ED98  
                           __size_of_WaitMs 0036                                     ___aldiv D748  
                           __size_of___flge 0162                             __size_of___fleq 00C4  
                                   ___aodiv B868                                     ___almod E054  
                                   ___fladd 6BAE                                     ___aomod C208  
                                   ___fldiv 7A26                                     ___awdiv E890  
                                   ___flneg 14EA                             __size_of___lmul 00D6  
                                   ___awmod F0EE                             __size_of___omul 015A  
                                   ___lbmod 0560                                     ___flmul 6384  
                                   ___flsub 1650                                     ___fltol DEE2  
                                   ___lodiv DBF0                                     ___lomod EB20  
                 __end_of_UART1_Receive_ISR 2010                             __size_of_efgtoa 1244  
                           __size_of_getoff 0230                             __size_of_getint 00F2  
                           __size_of_floorf 036C                        __end_of_init_display F8DA  
                                   __pcinit F424                    __end_of_mode_lamp_bright 222C  
                           __size_of_memset 02EC                    __size_of_adc_int_handler 0002  
                       _eaDogM_WriteCommand 2210                                     __ramtop 2000  
                 __end_of_CRC_8BitDataWrite 21AE                                     __ptext0 0000  
                                   __ptext1 0CD0                                     __ptext2 130A  
                                   __ptext3 11FC                                     __ptext4 FFE0  
                                   __ptext5 19B6                                     __ptext6 19EA  
                                   __ptext7 1A1E                                     __ptext8 EFD6  
                                   __ptext9 FF2A                           __end_of_esr_check B0AA  
                         _UART2_Receive_ISR 2030                                     _asctime 7FA0  
                           __size_of_printf 0062                                     _getname A7EA  
                           __CFG_WRTAPP$OFF 000000                             __size_of_strcpy 00D4  
                           __size_of_strlen 00A2                                     _getrule B5E8  
                                   _dst_off 00C0                       _OSCILLATOR_Initialize 2172  
                              __size_of_abs 0046                                     us804999 E722  
                              __size_of_pad 0114                           __end_of_init_bsoc C208  
                                   _isalpha 1696                                     _isdigit 1B48  
                                   us816999 BAD2                                     us912999 DD5A  
                                   _ivln2_h FA33                                     us827999 C436  
                                   us917999 EC50                                   _T3CONbits 003FA6  
                                   _mode_sw 00D6                           __end_of_lp_filter D40E  
                         __end_of_localtime 2030                                     _islower 1AE8  
                                   _isspace 1360                             __CFG_WRTSAF$OFF 000000  
                                _scan_trans 189A                                   _T5CONbits 003F9A  
                                   _set_dac FF2A                    __end_of_UART2_Initialize 119E  
                                   _isupper 1B18                                   _CRC_Start 22BA  
                                _old_tz_buf 03A4                  __size_of_SYSTEM_Initialize 004E  
                                   _sprintf F31A                                     _tolower 09E6  
                     __size_of_display_help 0008                                     _utctime 0096  
                   __end_of_convert_dac_raw F0EE                       __size_of_display_info 0008  
                                   _strncmp C678                                     _toupper 0962  
                      end_of_initialization F516                   __size_of_convert_adc_data 00B8  
                                 _SCANHADRH 00397A                                   _SCANHADRL 003979  
                                 _SCANHADRU 00397B                                   _SCANLADRH 003977  
                                 _SCANLADRL 003976                          _check_enter_button 0C5E  
                                 _SCANLADRU 003978                           __end_of_set_dac_a 1A52  
                         __end_of_set_dac_b 1A1E                      __end_of___secs_to_zone 6384  
       __end_of_UART2_SetRxInterruptHandler 1CF6                 _UART2_SetRxInterruptHandler 1CCE  
                                 i1u1668_20 E3DC                     check_day_time@day_delay 0051  
                                 i2u1370_48 1BEC                                   i2u1372_48 0E4A  
                                 i2u1372_49 0E5E                           __end_of_set_vterm 20AA  
                                 i2u1374_48 1E4C                                   i2u1376_48 1E74  
                                 i2u1378_48 1E9C                           __end_of_vfpfcnvrt 4702  
                                 _SPI1TCNTL 003D12                                     postdec0 003FED  
                                   postdec1 003FE5                                     postdec2 003FDD  
                                   postinc0 003FEE                                     postinc1 003FE6  
                                   postinc2 003FDE                           __end_of_zi_read32 F612  
                __size_of_adc_int_t_handler 0082                         __size_of_StartTimer 0040  
                         __end_of_start_lcd 22D2                   __end_of_UART2_Receive_ISR 2050  
                            wdtdelay@dcount 009A                     __end_of_dac_spi_control 0BE6  
               __size_of_current_sensor_cal 0474                       __CFG_WDTCPS$WDTCPS_31 000000  
                           ??_DMA1_DMAA_ISR 0007                       _INT1_InterruptHandler 00BA  
                                 _PORTBbits 003FCB                           __end_of_stop_bsoc 22D8  
                                 _PORTDbits 003FCD                    _TMR3_SetInterruptHandler 1D6E  
                                 _PORTFbits 003FCF                    _TMR6_SetInterruptHandler 1D1E  
                              _display_help 22AA                       _TMR5_InterruptHandler 00A5  
                              _display_info 22A2        __size_of_UART2_SetTxInterruptHandler 0028  
                  __end_of_clear_hid_pflags 0F4C                           __size_of_ADCC_ISR 002C  
       __end_of_ADCC_SetADIInterruptHandler 1E36                 _ADCC_SetADIInterruptHandler 1E0E  
                                asctime@buf 03C4                                  _update_lcd E47E  
                           _calc_model_data 9266                      __size_of_ringBufS_init 0028  
                          __CFG_FEXTOSC$ECH 000000                                  _static_soc 11FC  
                  __end_of_DATAEE_WriteByte 0EE6                             _DMA1_Initialize 0D3E  
                       __end_of_check_range 0B6C                                  _start_bsoc 1FCC  
                  __size_of___month_to_secs 00EC                      __size_of_send_lcd_data 0024  
                           _SPI1_Initialize 2146                       __end_of_get_vterm_ptr 1BA6  
                         __size_of_INT0_ISR 000E                           __size_of_INT1_ISR 003E  
                  __size_of_display_history 01BE                    __end_of_CRC_ReverseValue FC38  
                            __end_of_WaitMs 19B6                __end_of_INTERRUPT_Initialize 0FB2  
                                _vterm_dump D8DC                              __end_of___flge E31C  
                            __end_of___fleq FCFC        __end_of_INT0_DefaultInterruptHandler 22E2  
     __size_of_INT0_DefaultInterruptHandler 0002                _INT0_DefaultInterruptHandler 22E0  
                __size_of_UART1_Receive_ISR 0022                             _DMA2_Initialize 12B0  
                            __end_of___lmul FA96                              __end_of___omul E738  
                             __pidataBIGRAM A15A                              _load_hist_data 20FE  
                            __end_of_efgtoa 2684                  __size_of_CRC_8BitDataWrite 0012  
                         __size_of_TMR3_ISR 0162                              __end_of_getoff C678  
                         __size_of_TMR5_ISR 01A2                              __end_of_getint F704  
                         __size_of_TMR6_ISR 001A                         __size_of_check_help 0212  
                            __end_of_floorf A15A                 __size_of_UART2_Transmit_ISR 002C  
                                floorf@F524 007A                              __end_of_memset ADD2  
__end_of___month_to_secs@secs_through_month F8F3          ___month_to_secs@secs_through_month F8C3  
                            __end_of_printf 10DC                    __end_of_DMA1_DMADCNT_ISR 227A  
               __size_of_PWM8_LoadDutyValue 0042                       __end_of_INT0_CallBack 1F64  
                            __end_of_strcpy FB6A                              __end_of_strlen 0560  
                       start_initialization F424                     __size_of_write_cal_data 0158  
      __end_of_TMR5_DefaultInterruptHandler 1980       __size_of_TMR5_DefaultInterruptHandler 0038  
              _TMR5_DefaultInterruptHandler 1948             __size_of_PIN_MANAGER_Initialize 0092  
                               __end_of_abs 1650                       __end_of_INT1_CallBack 1EF8  
                 __size_of_set_display_info 001E                                 __end_of_pad F31A  
                      __size_of_Default_ISR 0006                     __size_of_CRC_Initialize 0092  
                            ___year_to_secs 5170                        __end_of_send_lcd_cmd 179C  
                            _switch_handler E9DE               __size_of_ADCC_StartConversion 0012  
                                ivt0x8_base 0008                               _uart1RxBuffer 02CF  
                     __end_of___fpclassifyf D748                               _uart2RxBuffer 0600  
                  __end_of_DMA1_DMASCNT_ISR 225A                               _uart2TxBuffer 0400  
                            _DMA1_DMAOR_ISR 2288                         __end_of_hid_display CAB4  
                __end_of_send_port_data_dma 1404                            __CFG_LPBOREN$OFF 000000  
                     __size_of_init_display 00EA                 __size_of_eaDogM_WriteString 00A6  
           __end_of_CRC_CalculatedResultGet DEE2                                   _TimerDone 1C7E  
                             _ringBufS_init 1C56                      __end_of_load_hist_data 2116  
                               __pdataBANK1 0100                                 __pdataBANK2 0200  
                __size_of_UART2_Receive_ISR 0020                         __size_of_get_switch 002C  
                __end_of_EXT_INT_Initialize 1A86                    __size_of_update_cal_data 0056  
                   __end_of_calc_model_data 96C0                               _send_lcd_data 1EB0  
                       __end_of_help_button 1948             __end_of_eaDogM_WriteStringAtPos 0418  
                       __end_of_BVSOC_TABLE F8C3                                   ___asfladd 0BE6  
                      calc_model_data@bcror 008E                                 __pbssBIGRAM 0A4F  
                   __end_of_DMA1_Initialize 0DA8                        calc_model_data@bvror 0092  
                               __pbssCOMRAM 004A                                 _check_range 0AEC  
          __end_of_INT0_SetInterruptHandler 1DE6                      __end_of___year_to_secs 5AE2  
                             __pcstackBANK0 00E7                    __size_of_TMR2_Initialize 0018  
                    __size_of_TMR3_CallBack 0024                      __end_of_switch_handler EB20  
                               _CRCCON0bits 003968                                 _CRCCON1bits 003969  
                         __size_of___xxtofl 0204                     __end_of_SPI1_Initialize 215C  
                  _UART1_RxInterruptHandler 00B1                    _UART2_TxInterruptHandler 00B4  
                                 __end_of_T F9AF                            _convert_adc_data FE72  
                                 _calc_bsoc 4702                   __size_of_ringBufS_put_dma 00AA  
                              _init_display F7F0                      __end_of_DMA1_DMAOR_ISR 2292  
                    __size_of_TMR5_CallBack 0024                           __size_of_do_tzset 0280  
                     _TMR6_InterruptHandler 00A8                          calc_ror_data@bcror 0086  
                    __size_of_TMR6_CallBack 0024                     __end_of_DMA2_Initialize 130A  
                        calc_ror_data@bvror 008A                      _PIN_MANAGER_Initialize 07B6  
                     __end_of___localtime_r BFC2                    __size_of_TMR3_Initialize 0048  
                      __end_of_wait_lcd_set 22CC                         __size_of_scan_trans 003C  
                             __pmediumconst F7F2                                   __ptext100 B0AA  
                                 __ptext101 1440                                   __ptext110 F0EE  
                                 __ptext102 09E6                                   __ptext111 E890  
                                 __ptext103 1B18                                   __ptext200 2264  
                                 __ptext120 ED98                                   __ptext112 8972  
                                 __ptext104 FA96                                   __ptext201 0BE6  
                                 __ptext121 20C8                                   __ptext113 160A  
                                 __ptext105 9DEE                                   __ptext210 0E14  
                                 __ptext202 223C                                   __ptext130 221E  
                                 __ptext122 02C6                                   __ptext114 C208  
                                 __ptext106 D5B2                                   __ptext211 1E38  
                                 __ptext203 1F40                                   __ptext131 16DA  
                                 __ptext123 BAE8                                   __ptext115 B868  
                                 __ptext107 DEE2                                   __ptext220 224C  
                                 __ptext212 1FEE                                   __ptext204 22E0  
                                 __ptext140 84B6                                   __ptext132 1910  
                                 __ptext124 1360                                   __ptext116 08DA  
                                 __ptext108 14EA                                   __ptext221 2270  
                                 __ptext213 1E60                                   __ptext205 22D8  
                                 __ptext141 10DC                                   __ptext133 1C7E  
                                 __ptext125 1B48                                   __ptext117 F206  
                                 __ptext109 FC38                                   __ptext222 227C  
                                 __ptext214 1C00                                   __ptext206 1BD4  
                                 __ptext150 1650                                   __ptext142 1FAA  
                                 __ptext134 179C                                   __ptext126 208C  
                                 __ptext118 04BE                                   __ptext223 2288  
                                 __ptext215 1E88                                   __ptext207 0A6A  
                                 __ptext151 6BAE                                   __ptext143 CCC6  
                                 __ptext135 22A2                                   __ptext127 21F0  
                                 __ptext119 05FA                                   __ptext224 0000  
                                 __ptext216 2030                                   __ptext208 22E2  
                                 __ptext160 1D1E                                   __ptext152 6384  
                                 __ptext144 7A26                                   __ptext136 22AA  
                                 __ptext128 20AA                                   __ptext217 20E4  
                                 __ptext209 22E4                                   __ptext161 157A  
                                 __ptext153 1404                                   __ptext145 E1BA  
                                 __ptext137 0C5E                                   __ptext129 2116  
                                 __ptext218 1F64                                   __ptext170 2172  
                                 __ptext162 1D46                                   __ptext154 113E  
                                 __ptext146 9266                                   __ptext138 DA6A  
                                 __ptext219 1452                                   __ptext171 0F4C  
                                 __ptext163 15C2                                   __ptext155 1CA6  
                                 __ptext147 22D2                                   __ptext139 016C  
                                 __ptext180 0DA8                                   __ptext172 22B2  
                                 __ptext164 1D6E                                   __ptext156 1CCE  
                                 __ptext148 1FCC                                   __ptext181 1DE6  
                                 __ptext173 1A52                                   __ptext165 212E  
                                 __ptext157 1532                                   __ptext149 D252  
                                 __ptext190 1948                                   __ptext182 1E0E  
                                 __ptext174 1D96                                   __ptext166 2146  
                                 __ptext158 1CF6                                   __ptext191 9A7A  
                                 __ptext183 185C                                   __ptext175 1DBE  
                                 __ptext167 215C                                   __ptext159 1C2C  
                                 __ptext192 2200                                   __ptext184 1ED4  
                                 __ptext176 12B0                                   __ptext168 2188  
                                 __ptext193 222C                                   __ptext185 D40E  
                                 __ptext177 0D3E                                   __ptext169 07B6  
                                 __ptext194 E31C                                   __ptext186 E9DE  
                                 __ptext178 0848                                   __ptext195 181C  
                                 __ptext187 D410                                   __ptext179 225A  
                                 __ptext196 1F1C                                   __ptext188 17DC  
                                 __ptext197 22DE                                   __ptext189 1EF8  
                                 __ptext198 4702                                   __ptext199 13B2  
                                 _hid_input EC60                          __end_of_StartTimer 17DC  
                        _set_load_relay_one 21D0                          _set_load_relay_two 21C0  
                         __size_of_wdtdelay 005A                           __size_of_spinners 00E6  
                         __size_of_vfprintf 00AC                                    _ADCC_ISR 1BD4  
                    __CFG_BBSIZE$BBSIZE_512 000000                                   fabsf@F463 007E  
                    __size_of_days_in_month 0064                                    _DMA1CON0 003BFC  
                                  _DMA1CON1 003BFD                                    _DMA1AIRQ 003BFE  
                                  _DMA2CON0 003BDC                                    _DMA2CON1 003BDD  
                                  _DMA2AIRQ 003BDE                                    _DMA1SIRQ 003BFF  
                                  _DMA2SIRQ 003BDF                                   _esr_check ADD2  
                   __size_of_get_raw_result 0022                              __size_of_fabsf 00AE  
                                 _init_bsoc BFC2                      __size_of_wait_lcd_done 0022  
                            __size_of_fputc 0124                                    _T2CLKCON 003FAE  
                            __size_of_fputs 0098                    __size_of_DATAEE_ReadByte 0032  
                            __size_of_put2d 011A                                   _lp_filter D252  
                                 _localtime 2010                                 _hid_display C898  
                            __size_of_srand 0034                              __size_of_putch 001A  
                      _INTERRUPT_Initialize 0F4C                                    _T6CLKCON 003F96  
             __size_of_start_switch_handler 0020                             ?_DMA1_DMAOR_ISR 0001  
                                  _INT0_ISR 223C                                    _INT1_ISR 185C  
                                  _LATCbits 003FBC                                    _LATDbits 003FBD  
                                  _LATEbits 003FBE                                    _LATFbits 003FBF  
         __size_of_INT1_SetInterruptHandler 0028                                    _SCANCON0 00397C  
                                  _IPR1bits 003981                                    _IPR2bits 003982  
                                  _PIE1bits 003991                                    _IPR3bits 003983  
                                  _SCANTRIG 00397D                                    _PIE2bits 003992  
                                  _IPR5bits 003985                                    _PIE3bits 003993  
                                 _tickCount 02B5                                    _IPR6bits 003986  
                                  _PIE5bits 003995                                    _IPR8bits 003988  
                                  _PIE6bits 003996                                    _IPR9bits 003989  
                                  _PIE8bits 003998                         __CFG_BORV$VBOR_2P45 000000  
                                  _PIE9bits 003999                                _SPI1CON0bits 003D14  
                              _SPI1CON1bits 003D15                                   _set_dac_a 1A1E  
                                 _set_dac_b 19EA                                   _ring_buf1 0483  
                                 _ring_buf2 0440                                    _PIR0bits 0039A0  
                                  _PIR1bits 0039A1                                    _PIR2bits 0039A2  
                                  _SPI1BAUD 003D19                                    _PIR4bits 0039A4  
                                  _SPI1CON0 003D14                                    _SPI1CON1 003D15  
                                  _SPI1CON2 003D16                               _TMR3_CallBack 1F1C  
                                  _PIR5bits 0039A5                                    _PIR6bits 0039A6  
                                  _PIR8bits 0039A8                                    _PIR9bits 0039A9  
                  __size_of_TMR5_Initialize 0048                                   _set_vterm 208C  
                       __size_of_update_lcd 0160                                 _help_button 1910  
                                  _TMR3_ISR E31C                                 _BVSOC_TABLE F7F3  
                                  _TMR5_ISR D410                                    _TMR6_ISR 20E4  
        __end_of___secs_to_tm@days_in_month F8FF                  ___secs_to_tm@days_in_month F8F3  
                                 _port_data 06FF                         __size_of_static_soc 005A  
                                 _vfpfcnvrt 3756                                _SPI1INTFbits 003D1A  
                       __size_of_start_bsoc 0022                               _TMR5_CallBack 1EF8  
                                _ADCON0bits 003EF8                                   _zi_read32 F51C  
                        __end_of_check_help CCC6                                   _start_lcd 22CC  
                   __size_of_FVR_Initialize 0008                   __size_of_send_lcd_cmd_dma 001E  
                             _TMR6_CallBack 1F64                              _write_cal_data E738  
                     __size_of_send_lcd_cmd 0040           __size_of_TMR5_SetInterruptHandler 0028  
                                 _stop_bsoc 22D2                            _set_display_info 20AA  
                  __size_of_PWM8_Initialize 0016                    __size_of_TMR6_Initialize 002A  
                            _CRC_Initialize 0848                                 _INTCON0bits 003FD2  
                                 copy_data0 F438                                   copy_data1 F45E  
                                 copy_data2 F480            __size_of_CRC_CalculatedResultGet 0172  
                  _INT0_SetInterruptHandler 1DBE                         __size_of_vterm_dump 018E  
       __end_of_UART2_SetTxInterruptHandler 1CCE                 _UART2_SetTxInterruptHandler 1CA6  
                             _days_in_month 0FB2                                _uart1RxCount 00DA  
                              _uart2RxCount 00D7                                    __Hrparam 0000  
          __size_of_eaDogM_WriteStringAtPos 00A8                     __CFG_RSTOSC$EXTOSC_4PLL 000000  
                  __size_of_TMR3_WriteTimer 0040                                    __Lrparam 0000  
                   __size_of_check_adc_scan 0008                          __CFG_BOREN$SBORDIS 000000  
                __end_of_current_sensor_cal 9266                    __size_of_conv_raw_result 04BC  
                             _wait_lcd_done 1F88                                _send_lcd_cmd 175C  
                          __size_of___aldiv 0194                            __size_of___aodiv 0280  
                          __size_of___almod 0166                            __size_of___fladd 07BC  
             __size_of_get_ac_charger_relay 000E                            __size_of___aomod 0240  
                           _adc_int_handler 22E4                            __size_of___fldiv 057A  
                          __size_of___awdiv 014E                            __size_of___flneg 0048  
                          __size_of___awmod 0118                            __size_of___lbmod 009A  
                          __size_of___flmul 082A                            __size_of___flsub 0046  
                          __size_of___fltol 0172                            __size_of___lodiv 0180  
                          __size_of___lomod 0140               __size_of_set_ac_charger_relay 0010  
                        __end_of_get_switch 1BD2                        __end_of_rule_to_secs 7A26  
                   __size_of_check_day_time 0374                      __end_of_write_cal_data E890  
                     __end_of_DMA1_DMAA_ISR 2286                          ___fpclassifyf@F463 0082  
      __size_of_UART1_SetRxInterruptHandler 0028                            __size_of_asctime 0516  
                                  ___tzname 0072                            __size_of_getname 02FC  
                           lp_filter@smooth 0300                                    ___xxtofl CCC6  
                    __end_of_CRC_Initialize 08DA                           ?_DMA1_DMADCNT_ISR 0001  
                          __size_of_getrule 0280                 __size_of_check_enter_button 0072  
                  __size_of_ADCC_Initialize 006A                 __end_of_eaDogM_WriteCommand 221E  
                          __size_of_isalpha 0044                            __size_of_isdigit 0030  
                                  __pivt0x8 0008                            __size_of_islower 0030  
                          __size_of_isspace 0052                          ??_DMA1_DMADCNT_ISR 0007  
                          __size_of_set_dac 00B6                                    __ptext10 0B6C  
                                  __ptext11 CECA                                    __ptext20 1C56  
                                  __ptext12 1A86                                    __ptext21 BFC2  
                                  __ptext13 20FE                                    __ptext30 2210  
                                  __ptext22 FDB8                                    __ptext14 1AB8  
                                  __ptext31 D094                                    __ptext23 C898  
                                  __ptext15 F7F0                                    __ptext40 5170  
                                  __ptext32 119E                                    __ptext24 EC60  
                                  __ptext16 1EB0                                    __ptext41 F704  
                                  __ptext33 2010                                    __ptext25 ADD2  
                                  __ptext17 171C                                    __ptext50 E054  
                                  __ptext42 B368                                    __ptext34 BD5C  
                                  __ptext26 18D6                                    __ptext18 175C  
                                  __ptext51 D748                                    __ptext43 B5E8  
                                  __ptext35 5AE2                                    __ptext27 2292  
                                  __ptext19 2050                                    __ptext60 DD70  
                                  __ptext52 7FA0                                    __ptext44 C448  
                                  __ptext36 189A                                    __ptext28 21C0  
                                  __ptext61 FB6A                                    __ptext53 EEBC  
                                  __ptext45 F612                                    __ptext37 F51C  
                                  __ptext29 21D0                                    __ptext70 0AEC  
                                  __ptext62 219C                                    __ptext54 0560  
                                  __ptext46 A7EA                                    __ptext38 736A  
                                  __ptext71 FE72                                    __ptext63 1016  
                                  __ptext55 8DF2                                    __ptext47 2684  
                                  __ptext39 0FB2                                    __ptext80 206E  
                                  __ptext72 0EE6                                    __ptext64 21AE  
                                  __ptext56 E738                                    __ptext48 E5DE  
                                  __ptext81 1F88                                    __ptext73 CAB4  
                                  __ptext65 229A                                    __ptext57 0E7E  
                                  __ptext49 F9C0                                    __ptext90 021A  
                                  __ptext82 1256                                    __ptext74 D8DC  
                                  __ptext66 F8DA                                    __ptext58 22BA  
                                  __ptext91 3756                                    __ptext83 14A0  
                                  __ptext75 F31A                                    __ptext67 1BA6  
                                  __ptext59 21E0                                    __ptext92 96C0  
                                  __ptext84 0418                                    __ptext76 1B78  
                                  __ptext68 22C0                                    __ptext93 0962  
                                  __ptext85 22C6                                    __ptext77 1980  
                                  __ptext69 0692                                    __ptext94 1AE8  
                                  __ptext86 22CC                                    __ptext78 E47E  
                                  __ptext95 1696                                    __ptext87 0724  
                                  __ptext79 0370                                    __ptext96 A4AA  
                                  __ptext88 AAE6                                    __ptext97 EB20  
                                  __ptext89 107A                                    __ptext98 DBF0  
                                  __ptext99 C678                            __size_of_isupper 0030  
                                  _do_tzset B368                       __end_of_read_cal_data D094  
                          __size_of_sprintf 010A                            __size_of_tolower 0084  
                                  us1167999 11EE                                    us1428999 898C  
                                  us1509999 A510                                    us1518999 9740  
                          __size_of_strncmp 0220                            __size_of_toupper 0084  
                          _ringBufS_put_dma 02C6                                    us1497999 B0BC  
                                  us1585999 7A10                                    _dst_name 01F2  
                      __end_of_Volts_to_SOC FE72                               __size_of_atoi 0274  
                             __size_of_ctoa 0088                               __size_of_main 1440  
                             __size_of_dtoa 0480                               __size_of_nanf 0062  
                     __size_of_wait_lcd_set 0006                               __size_of_time 005E  
                             __size_of_stoa 02BE                               __size_of_utoa 0340  
                             __size_of_xtoa 03BA                         dac_spi_control@init 0052  
                                _CRC_IsBusy 21E0                        __CFG_WDTCWS$WDTCWS_7 000000  
                         ?_DMA1_DMASCNT_ISR 0001                       __end_of_init_port_dma 1AE8  
                               _IVTLOCKbits 003FD4                        __end_of___secs_to_tm 3756  
                  __size_of_TMR5_WriteTimer 0040                   _ADCC_ADI_InterruptHandler 00AE  
                                 stoa@F1166 0100                          ??_DMA1_DMASCNT_ISR 0007  
              __end_of_ADCC_StartConversion 21C0                          __end_of_scan_trans 18D6  
                                  _spi_link 0060                                    _std_name 01F9  
                                  _wdtdelay 1256                  __end_of_UART2_Transmit_ISR 1C2C  
                                  _spinners F8DA                                    _vfprintf 021A  
                  __end_of_convert_adc_data FF2A                   __size_of_update_hist_data 006E  
                __end_of_PWM8_LoadDutyValue 171C        __end_of_TMR3_DefaultInterruptHandler 22E0  
     __size_of_TMR3_DefaultInterruptHandler 0002                _TMR3_DefaultInterruptHandler 22DE  
      __end_of_INT1_DefaultInterruptHandler D410       __size_of_INT1_DefaultInterruptHandler 0002  
              _INT1_DefaultInterruptHandler D40E                          _send_port_data_dma 13B2  
                             ??_Default_ISR 0001                                 _uart1RxHead 0057  
                    __size_of_get_vterm_ptr 002E                                 _uart2RxHead 0054  
                               _uart1RxTail 00DB                              _get_raw_result 1FAA  
                               _NVMCON1bits 0039E5                                 _uart2TxHead 00D9  
                               _uart2RxTail 00D8                                   spinners@s 006C  
                               _uart2TxTail 0056                   __size_of_cal_current_zero 0092  
                              _wait_lcd_set 22C6                          _EXT_INT_Initialize 1A52  
      __end_of_TMR6_DefaultInterruptHandler 14A0       __size_of_TMR6_DefaultInterruptHandler 004E  
              _TMR6_DefaultInterruptHandler 1452                           _send_lcd_data_dma 14A0  
      __end_of_ADCC_DefaultInterruptHandler 22E4       __size_of_ADCC_DefaultInterruptHandler 0002  
              _ADCC_DefaultInterruptHandler 22E2                                    intlevel1 0000  
                                  intlevel2 0000                             ___month_to_secs F704  
                         _send_lcd_cmd_long 171C              __size_of_set_temp_display_help 0010  
             __end_of_set_temp_display_help 2200                       __end_of_calc_ror_data DBF0  
                         __CFG_CLKOUTEN$OFF 000000                  __end_of_eaDogM_WriteString 04BE  
                     __end_of_mode_lamp_dim 212E                     __end_of_adc_int_handler 22E6  
                  __size_of_convert_dac_raw 0118                             _display_history D094  
                    __size_of_INT0_CallBack 0024                                  _SPI1SCKPPS 003ADE  
                                _SPI1SDIPPS 003ADF                      __size_of_INT1_CallBack 0024  
                        __end_of_update_lcd E5DE                      _uart2TxBufferRemaining 0055  
                        __end_of_static_soc 1256                          __end_of_start_bsoc 1FEE  
                            _FVR_Initialize 22B2                      __end_of_get_raw_result 1FCC  
                          _send_lcd_cmd_dma 206E                      __size_of___fpclassifyf 0196  
                     TMR5_ISR@CountCallBack 00CC            __end_of_INT1_SetInterruptHandler 1DBE  
                 __size_of_UART1_Initialize 0048                    __size_of_dac_spi_control 007A  
                 __end_of_send_lcd_data_dma 14EA                            ??_DMA1_DMAOR_ISR 0007  
                   _CRC_CalculatedResultGet DD70                   __end_of_send_lcd_cmd_long 175C  
                   __size_of_start_adc_scan 0064                         __end_of_Default_ISR 22DE  
            __end_of_PIN_MANAGER_Initialize 0848                   __size_of_mode_lamp_bright 000E  
                        __end_of_vterm_dump DA6A                     _eaDogM_WriteStringAtPos 0370  
                             _get_vterm_ptr 1B78                              _check_adc_scan 2292  
                 __size_of_UART2_Initialize 0060                       __size_of_rule_to_secs 06BC  
