

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec 13 18:24:42 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=4,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=4,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=4,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=4,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=4,class=CODE,delta=1
   180                           	psect	text155,global,reloc=4,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=4,class=CODE,delta=1
   185                           	psect	text160,global,reloc=4,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=4,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=4,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=4,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=4,class=CODE,delta=1
   195                           	psect	text170,global,reloc=4,class=CODE,delta=1
   196                           	psect	text171,global,reloc=4,class=CODE,delta=1
   197                           	psect	text172,global,reloc=4,class=CODE,delta=1
   198                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   199                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   200                           	psect	text173,global,reloc=4,class=CODE,delta=1
   201                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   202                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   203  0000                     
   204                           ; Version 2.10
   205                           ; Generated 31/07/2019 GMT
   206                           ; 
   207                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   208                           ; All rights reserved.
   209                           ; 
   210                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   211                           ; 
   212                           ; Redistribution and use in source and binary forms, with or without modification, are
   213                           ; permitted provided that the following conditions are met:
   214                           ; 
   215                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   216                           ;        conditions and the following disclaimer.
   217                           ; 
   218                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   219                           ;        of conditions and the following disclaimer in the documentation and/or other
   220                           ;        materials provided with the distribution.
   221                           ; 
   222                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   223                           ;        software without specific prior written permission.
   224                           ; 
   225                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   226                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   227                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   228                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   229                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   230                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   231                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   232                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   233                           ; 
   234                           ; 
   235                           ; Code-generator required, PIC18F57K42 Definitions
   236                           ; 
   237                           ; SFR Addresses
   238  0000                     
   239 ;;_esr_temp	offset	0
   240 ;;_i_esr	offset	4
   241 ;;_k	offset	6
   242 ;;_j	offset	7
   243 ;;_i	offset	8
   244 ;;_inp_index	offset	9
   245 ;;_mode	offset	10
   246 ;;_i_ror	offset	11
   247 ;;_s	offset=-2 (param)
   248 ;;_c	offset	0
   249 ;;_shape	offset=-1 (param)
   250 ;;_reset	offset=-2 (param)
   251 ;;_cmd	offset=-1 (param)
   252 ;;_cmd	offset=-1 (param)
   253 ;;_data	offset=-1 (param)
   254 ;;__this	offset=-2 (param)
   255 ;;_cvoltage	offset=-4 (param)
   256 ;;_h	offset=-1 (param)
   257 ;;_h	offset=-1 (param)
   258 ;;_i	offset=-1 (param)
   259 ;;_esr_value	offset	0
   260 ;;_fsm	offset=-1 (param)
   261 ;;_channel	offset=-1 (param)
   262 ;;_mode	offset=-1 (param)
   263 ;;_mode	offset=-1 (param)
   264 ;;_cmd	offset=-1 (param)
   265 ;;_i	offset	0
   266 ;;_h	offset=-1 (param)
   267 ;;_flipper	offset=-1 (param)
   268 ;;_f	offset	0
   269 ;;_ap	offset	6
   270 ;;_s	offset=-3 (param)
   271 ;;_fmt	offset=-5 (param)
   272 ;;_line	offset=-1 (param)
   273 ;;_vterm	offset=-2 (param)
   274 ;;_numMilliseconds	offset=-2 (param)
   275 ;;_vterm	offset=-1 (param)
   276 ;;_r	offset=-1 (param)
   277 ;;_c	offset=-2 (param)
   278 ;;_strPtr	offset=-4 (param)
   279 ;;_strPtr	offset=-1 (param)
   280 ;;_delay	offset=-4 (param)
   281 ;;_strPtr	offset=-2 (param)
   282 ;;__this	offset=-2 (param)
   283 ;;_clearBuffer	offset=-3 (param)
   284 ;;_s	offset	0
   285 ;;_k	offset	2
   286 ;;_dest	offset=-2 (param)
   287 ;;_c	offset=-4 (param)
   288 ;;_n	offset=-6 (param)
   289 ;;_ap	offset	0
   290 ;;_fmt	offset=-3 (param)
   291 ;;_cfmt	offset	0
   292 ;;_fp	offset=-2 (param)
   293 ;;_fmt	offset=-4 (param)
   294 ;;_ap	offset=-6 (param)
   295 ;;_vfpfcnvrt$5367	offset	0
   296 ;;_vfpfcnvrt$5378	offset	2
   297 ;;_vfpfcnvrt$5366	offset	4
   298 ;;_llu	offset	6
   299 ;;_ll	offset	14
   300 ;;_f	offset	22
   301 ;;_ct	offset	26
   302 ;;_cp	offset	29
   303 ;;_c	offset	31
   304 ;;_fp	offset=-2 (param)
   305 ;;_fmt	offset=-4 (param)
   306 ;;_ap	offset=-6 (param)
   307 ;;_xtoa$5352	offset	0
   308 ;;_xtoa$5351	offset	2
   309 ;;_n	offset	4
   310 ;;_c	offset	12
   311 ;;_i	offset	14
   312 ;;_w	offset	16
   313 ;;_p	offset	18
   314 ;;_fp	offset=-2 (param)
   315 ;;_d	offset=-10 (param)
   316 ;;_x	offset=-11 (param)
   317 ;;_toupper$6158	offset	0
   318 ;;_c	offset=-2 (param)
   319 ;;_c	offset=-2 (param)
   320 ;;_c	offset=-2 (param)
   321 ;;_n	offset	0
   322 ;;_i	offset	8
   323 ;;_w	offset	10
   324 ;;_p	offset	12
   325 ;;_fp	offset=-2 (param)
   326 ;;_d	offset=-10 (param)
   327 ;;_counter	offset	0
   328 ;;_dividend	offset=-8 (param)
   329 ;;_divisor	offset=-16 (param)
   330 ;;_quotient	offset	0
   331 ;;_counter	offset	8
   332 ;;_dividend	offset=-8 (param)
   333 ;;_divisor	offset=-16 (param)
   334 ;;_r	offset	0
   335 ;;_l	offset	2
   336 ;;__l	offset=-2 (param)
   337 ;;__r	offset=-4 (param)
   338 ;;_n	offset=-6 (param)
   339 ;;_nuls	offset	0
   340 ;;_l	offset	7
   341 ;;_p	offset	9
   342 ;;_cp	offset	11
   343 ;;_w	offset	13
   344 ;;_i	offset	15
   345 ;;_fp	offset=-2 (param)
   346 ;;_s	offset=-4 (param)
   347 ;;_efgtoa$5324	offset	0
   348 ;;_efgtoa$5323	offset	2
   349 ;;_efgtoa$5322	offset	4
   350 ;;_efgtoa$5318	offset	6
   351 ;;_efgtoa$5314	offset	8
   352 ;;_efgtoa$5313	offset	10
   353 ;;_u	offset	12
   354 ;;_g	offset	16
   355 ;;_l	offset	20
   356 ;;_h	offset	24
   357 ;;_ou	offset	28
   358 ;;_n	offset	32
   359 ;;_e	offset	34
   360 ;;_i	offset	36
   361 ;;_w	offset	38
   362 ;;_p	offset	40
   363 ;;_sign	offset	42
   364 ;;_d	offset	44
   365 ;;_ne	offset	46
   366 ;;_m	offset	48
   367 ;;_pp	offset	50
   368 ;;_t	offset	52
   369 ;;_mode	offset	54
   370 ;;_nmode	offset	55
   371 ;;_fp	offset=-2 (param)
   372 ;;_f	offset=-6 (param)
   373 ;;_c	offset=-7 (param)
   374 ;;_tolower$6143	offset	0
   375 ;;_c	offset=-2 (param)
   376 ;;_c	offset=-2 (param)
   377 ;;_d	offset	0
   378 ;;_s	offset	2
   379 ;;_dest	offset=-2 (param)
   380 ;;_src	offset=-4 (param)
   381 ;;_u	offset	0
   382 ;;_m	offset	4
   383 ;;_e	offset	8
   384 ;;_x	offset=-4 (param)
   385 ;;_u	offset	0
   386 ;;_e	offset	4
   387 ;;_x	offset=-4 (param)
   388 ;;_exp1	offset	0
   389 ;;_sign1	offset	1
   390 ;;_f1	offset=-4 (param)
   391 ;;_f1	offset=-4 (param)
   392 ;;_ff1	offset=-4 (param)
   393 ;;_ff2	offset=-8 (param)
   394 ;;_sign	offset	0
   395 ;;_counter	offset	1
   396 ;;_dividend	offset=-2 (param)
   397 ;;_divisor	offset=-4 (param)
   398 ;;_quotient	offset	0
   399 ;;_sign	offset	2
   400 ;;_counter	offset	3
   401 ;;_dividend	offset=-2 (param)
   402 ;;_divisor	offset=-4 (param)
   403 ;;_dtoa$5290	offset	0
   404 ;;_n	offset	2
   405 ;;_i	offset	10
   406 ;;_s	offset	12
   407 ;;_w	offset	14
   408 ;;_p	offset	16
   409 ;;_fp	offset=-2 (param)
   410 ;;_d	offset=-10 (param)
   411 ;;_a	offset=-2 (param)
   412 ;;_sign	offset	0
   413 ;;_counter	offset	1
   414 ;;_dividend	offset=-8 (param)
   415 ;;_divisor	offset=-16 (param)
   416 ;;_quotient	offset	0
   417 ;;_sign	offset	8
   418 ;;_counter	offset	9
   419 ;;_dividend	offset=-8 (param)
   420 ;;_divisor	offset=-16 (param)
   421 ;;_w	offset	0
   422 ;;_fp	offset=-2 (param)
   423 ;;_c	offset=-3 (param)
   424 ;;_w	offset	0
   425 ;;_i	offset	2
   426 ;;_fp	offset=-2 (param)
   427 ;;_buf	offset=-4 (param)
   428 ;;_p	offset=-6 (param)
   429 ;;_a	offset	0
   430 ;;_s	offset=-2 (param)
   431 ;;_i	offset	0
   432 ;;_c	offset	2
   433 ;;_s	offset=-2 (param)
   434 ;;_fp	offset=-4 (param)
   435 ;;_c	offset=-2 (param)
   436 ;;_fp	offset=-4 (param)
   437 ;;_c	offset=-1 (param)
   438 ;;__this	offset=-2 (param)
   439 ;;_c	offset=-3 (param)
   440 ;;_atoi$5874	offset	0
   441 ;;_atoi$5872	offset	2
   442 ;;_atoi$5873	offset	4
   443 ;;_n	offset	5
   444 ;;_neg	offset	7
   445 ;;_s	offset=-2 (param)
   446 ;;_isspace$5923	offset	0
   447 ;;_c	offset=-2 (param)
   448 ;;_c	offset=-2 (param)
   449 ;;_vterm	offset=-1 (param)
   450 ;;_new_response_info	offset=-1 (param)
   451 ;;_new_response_info	offset=-1 (param)
   452 ;;_level	offset=-2 (param)
   453 ;;_dutyValue	offset=-2 (param)
   454 ;;_timer	offset=-1 (param)
   455 ;;_timer	offset=-1 (param)
   456 ;;_count	offset=-3 (param)
   457 ;;_h	offset=-1 (param)
   458 ;;_u	offset	0
   459 ;;_x	offset=-4 (param)
   460 ;;_chan	offset=-1 (param)
   461 ;;_to_what	offset=-2 (param)
   462 ;;_u	offset	0
   463 ;;_s	offset=-2 (param)
   464 ;;_index	offset=-1 (param)
   465 ;;_arg	offset	0
   466 ;;_exp	offset	4
   467 ;;_sign	offset=-1 (param)
   468 ;;_val	offset=-5 (param)
   469 ;;_grs	offset	0
   470 ;;_rem	offset	4
   471 ;;_new_exp	offset	8
   472 ;;_aexp	offset	10
   473 ;;_bexp	offset	11
   474 ;;_sign	offset	12
   475 ;;_b	offset=-4 (param)
   476 ;;_a	offset=-8 (param)
   477 ;;_ff1	offset=-4 (param)
   478 ;;_ff2	offset=-8 (param)
   479 ;;_lp_speed	offset	0
   480 ;;_new	offset=-4 (param)
   481 ;;_bn	offset=-5 (param)
   482 ;;_slow	offset=-6 (param)
   483 ;;_b	offset=-4 (param)
   484 ;;_a	offset=-8 (param)
   485 ;;_grs	offset	0
   486 ;;_bexp	offset	1
   487 ;;_aexp	offset	2
   488 ;;_signs	offset	3
   489 ;;_b	offset=-4 (param)
   490 ;;_a	offset=-8 (param)
   491 ;;_prod	offset	0
   492 ;;_grs	offset	4
   493 ;;_temp	offset	8
   494 ;;_bexp	offset	10
   495 ;;_aexp	offset	11
   496 ;;_sign	offset	12
   497 ;;_b	offset=-4 (param)
   498 ;;_a	offset=-8 (param)
   499 ;;_InterruptHandler	offset=-3 (param)
   500 ;;_InterruptHandler	offset=-3 (param)
   501 ;;_InterruptHandler	offset=-3 (param)
   502 ;;_InterruptHandler	offset=-3 (param)
   503 ;;_InterruptHandler	offset=-3 (param)
   504 ;;_InterruptHandler	offset=-3 (param)
   505 ;;_state	offset	0
   506 ;;_InterruptHandler	offset=-3 (param)
   507 ;;_InterruptHandler	offset=-3 (param)
   508 ;;_InterruptHandler	offset=-3 (param)
   509 ;;_InterruptHandler	offset=-3 (param)
   510 ;;_i	offset	0
   511 ;;_sw_value	offset	1
   512 ;;_timerVal	offset=-2 (param)
   513 ;;_timerVal	offset=-2 (param)
   514 ;;_log_ptr	offset	0
   515 ;;_f	offset	0
   516 ;;_ap	offset	6
   517 ;;_s	offset=-3 (param)
   518 ;;_fmt	offset=-5 (param)
   519 ;;_cfmt	offset	0
   520 ;;_fp	offset=-2 (param)
   521 ;;_fmt	offset=-4 (param)
   522 ;;_ap	offset=-6 (param)
   523 ;;_vfpfcnvrt$5367	offset	0
   524 ;;_vfpfcnvrt$5378	offset	2
   525 ;;_vfpfcnvrt$5366	offset	4
   526 ;;_llu	offset	6
   527 ;;_ll	offset	14
   528 ;;_f	offset	22
   529 ;;_ct	offset	26
   530 ;;_cp	offset	29
   531 ;;_c	offset	31
   532 ;;_fp	offset=-2 (param)
   533 ;;_fmt	offset=-4 (param)
   534 ;;_ap	offset=-6 (param)
   535 ;;_xtoa$5352	offset	0
   536 ;;_xtoa$5351	offset	2
   537 ;;_n	offset	4
   538 ;;_c	offset	12
   539 ;;_i	offset	14
   540 ;;_w	offset	16
   541 ;;_p	offset	18
   542 ;;_fp	offset=-2 (param)
   543 ;;_d	offset=-10 (param)
   544 ;;_x	offset=-11 (param)
   545 ;;_toupper$6158	offset	0
   546 ;;_c	offset=-2 (param)
   547 ;;_c	offset=-2 (param)
   548 ;;_c	offset=-2 (param)
   549 ;;_n	offset	0
   550 ;;_i	offset	8
   551 ;;_w	offset	10
   552 ;;_p	offset	12
   553 ;;_fp	offset=-2 (param)
   554 ;;_d	offset=-10 (param)
   555 ;;_counter	offset	0
   556 ;;_dividend	offset=-8 (param)
   557 ;;_divisor	offset=-16 (param)
   558 ;;_quotient	offset	0
   559 ;;_counter	offset	8
   560 ;;_dividend	offset=-8 (param)
   561 ;;_divisor	offset=-16 (param)
   562 ;;_r	offset	0
   563 ;;_l	offset	2
   564 ;;__l	offset=-2 (param)
   565 ;;__r	offset=-4 (param)
   566 ;;_n	offset=-6 (param)
   567 ;;_nuls	offset	0
   568 ;;_l	offset	7
   569 ;;_p	offset	9
   570 ;;_cp	offset	11
   571 ;;_w	offset	13
   572 ;;_i	offset	15
   573 ;;_fp	offset=-2 (param)
   574 ;;_s	offset=-4 (param)
   575 ;;_efgtoa$5324	offset	0
   576 ;;_efgtoa$5323	offset	2
   577 ;;_efgtoa$5322	offset	4
   578 ;;_efgtoa$5318	offset	6
   579 ;;_efgtoa$5314	offset	8
   580 ;;_efgtoa$5313	offset	10
   581 ;;_u	offset	12
   582 ;;_g	offset	16
   583 ;;_l	offset	20
   584 ;;_h	offset	24
   585 ;;_ou	offset	28
   586 ;;_n	offset	32
   587 ;;_e	offset	34
   588 ;;_i	offset	36
   589 ;;_w	offset	38
   590 ;;_p	offset	40
   591 ;;_sign	offset	42
   592 ;;_d	offset	44
   593 ;;_ne	offset	46
   594 ;;_m	offset	48
   595 ;;_pp	offset	50
   596 ;;_t	offset	52
   597 ;;_mode	offset	54
   598 ;;_nmode	offset	55
   599 ;;_fp	offset=-2 (param)
   600 ;;_f	offset=-6 (param)
   601 ;;_c	offset=-7 (param)
   602 ;;_tolower$6143	offset	0
   603 ;;_c	offset=-2 (param)
   604 ;;_c	offset=-2 (param)
   605 ;;_d	offset	0
   606 ;;_s	offset	2
   607 ;;_dest	offset=-2 (param)
   608 ;;_src	offset=-4 (param)
   609 ;;_u	offset	0
   610 ;;_m	offset	4
   611 ;;_e	offset	8
   612 ;;_x	offset=-4 (param)
   613 ;;_u	offset	0
   614 ;;_e	offset	4
   615 ;;_x	offset=-4 (param)
   616 ;;_exp1	offset	0
   617 ;;_sign1	offset	1
   618 ;;_f1	offset=-4 (param)
   619 ;;_b	offset=-4 (param)
   620 ;;_a	offset=-8 (param)
   621 ;;_grs	offset	0
   622 ;;_bexp	offset	1
   623 ;;_aexp	offset	2
   624 ;;_signs	offset	3
   625 ;;_b	offset=-4 (param)
   626 ;;_a	offset=-8 (param)
   627 ;;_f1	offset=-4 (param)
   628 ;;_prod	offset	0
   629 ;;_grs	offset	4
   630 ;;_temp	offset	8
   631 ;;_bexp	offset	10
   632 ;;_aexp	offset	11
   633 ;;_sign	offset	12
   634 ;;_b	offset=-4 (param)
   635 ;;_a	offset=-8 (param)
   636 ;;_ff1	offset=-4 (param)
   637 ;;_ff2	offset=-8 (param)
   638 ;;_ff1	offset=-4 (param)
   639 ;;_ff2	offset=-8 (param)
   640 ;;_grs	offset	0
   641 ;;_rem	offset	4
   642 ;;_new_exp	offset	8
   643 ;;_aexp	offset	10
   644 ;;_bexp	offset	11
   645 ;;_sign	offset	12
   646 ;;_b	offset=-4 (param)
   647 ;;_a	offset=-8 (param)
   648 ;;_sign	offset	0
   649 ;;_counter	offset	1
   650 ;;_dividend	offset=-2 (param)
   651 ;;_divisor	offset=-4 (param)
   652 ;;_quotient	offset	0
   653 ;;_sign	offset	2
   654 ;;_counter	offset	3
   655 ;;_dividend	offset=-2 (param)
   656 ;;_divisor	offset=-4 (param)
   657 ;;_dtoa$5290	offset	0
   658 ;;_n	offset	2
   659 ;;_i	offset	10
   660 ;;_s	offset	12
   661 ;;_w	offset	14
   662 ;;_p	offset	16
   663 ;;_fp	offset=-2 (param)
   664 ;;_d	offset=-10 (param)
   665 ;;_a	offset=-2 (param)
   666 ;;_sign	offset	0
   667 ;;_counter	offset	1
   668 ;;_dividend	offset=-8 (param)
   669 ;;_divisor	offset=-16 (param)
   670 ;;_quotient	offset	0
   671 ;;_sign	offset	8
   672 ;;_counter	offset	9
   673 ;;_dividend	offset=-8 (param)
   674 ;;_divisor	offset=-16 (param)
   675 ;;_w	offset	0
   676 ;;_fp	offset=-2 (param)
   677 ;;_c	offset=-3 (param)
   678 ;;_w	offset	0
   679 ;;_i	offset	2
   680 ;;_fp	offset=-2 (param)
   681 ;;_buf	offset=-4 (param)
   682 ;;_p	offset=-6 (param)
   683 ;;_a	offset	0
   684 ;;_s	offset=-2 (param)
   685 ;;_i	offset	0
   686 ;;_c	offset	2
   687 ;;_s	offset=-2 (param)
   688 ;;_fp	offset=-4 (param)
   689 ;;_c	offset=-2 (param)
   690 ;;_fp	offset=-4 (param)
   691 ;;_c	offset=-1 (param)
   692 ;;__this	offset=-2 (param)
   693 ;;_c	offset=-3 (param)
   694 ;;_atoi$5874	offset	0
   695 ;;_atoi$5872	offset	2
   696 ;;_atoi$5873	offset	4
   697 ;;_n	offset	5
   698 ;;_neg	offset	7
   699 ;;_s	offset=-2 (param)
   700 ;;_isspace$5923	offset	0
   701 ;;_c	offset=-2 (param)
   702 ;;_c	offset=-2 (param)
   703 ;;_dsize	offset=-2 (param)
   704 ;;_timer	offset=-1 (param)
   705 ;;_count	offset=-3 (param)
   706 ;;_channel	offset=-1 (param)
   707 ;;_i	offset	0
   708                           
   709                           	psect	idataBIGRAM
   710  0178F2                     __pidataBIGRAM:
   711                           	opt callstack 0
   712                           
   713                           ;initializer for _port_data
   714  0178F2  FF                 	db	255
   715  0178F3  00                 	db	0
   716  0178F4  FF                 	db	255
   717  0178F5  00                 	db	0
   718  0178F6  FF                 	db	255
   719  0178F7  00                 	db	0
   720  0178F8  FF                 	db	255
   721  0178F9  00                 	db	0
   722  0178FA  FF                 	db	255
   723  0178FB  00                 	db	0
   724  0178FC  FF                 	db	255
   725  0178FD  00                 	db	0
   726  0178FE  FF                 	db	255
   727  0178FF  00                 	db	0
   728  017900  FF                 	db	255
   729  017901  00                 	db	0
   730  017902  00                 	db	0
   731  017903  00                 	db	0
   732  017904  00                 	db	0
   733  017905  00                 	db	0
   734  017906  00                 	db	0
   735  017907  00                 	db	0
   736  017908  00                 	db	0
   737  017909  00                 	db	0
   738  01790A  00                 	db	0
   739  01790B  00                 	db	0
   740  01790C  00                 	db	0
   741  01790D  00                 	db	0
   742  01790E  00                 	db	0
   743  01790F  00                 	db	0
   744  017910  00                 	db	0
   745  017911  00                 	db	0
   746  017912  00                 	db	0
   747  017913  00                 	db	0
   748  017914  00                 	db	0
   749  017915  00                 	db	0
   750  017916  00                 	db	0
   751  017917  00                 	db	0
   752  017918  00                 	db	0
   753  017919  00                 	db	0
   754  01791A  00                 	db	0
   755  01791B  00                 	db	0
   756  01791C  00                 	db	0
   757  01791D  00                 	db	0
   758  01791E  00                 	db	0
   759  01791F  00                 	db	0
   760  017920  00                 	db	0
   761  017921  00                 	db	0
   762  017922  00                 	db	0
   763  017923  00                 	db	0
   764  017924  00                 	db	0
   765  017925  00                 	db	0
   766  017926  00                 	db	0
   767  017927  00                 	db	0
   768  017928  00                 	db	0
   769  017929  00                 	db	0
   770  01792A  00                 	db	0
   771  01792B  00                 	db	0
   772  01792C  00                 	db	0
   773  01792D  00                 	db	0
   774  01792E  00                 	db	0
   775  01792F  00                 	db	0
   776  017930  00                 	db	0
   777  017931  00                 	db	0
   778  017932  00                 	db	0
   779  017933  00                 	db	0
   780  017934  00                 	db	0
   781  017935  00                 	db	0
   782  017936  00                 	db	0
   783  017937  00                 	db	0
   784  017938  00                 	db	0
   785  017939  00                 	db	0
   786  01793A  00                 	db	0
   787  01793B  00                 	db	0
   788  01793C  00                 	db	0
   789  01793D  00                 	db	0
   790  01793E  00                 	db	0
   791  01793F  00                 	db	0
   792  017940  00                 	db	0
   793  017941  00                 	db	0
   794  017942  00                 	db	0
   795  017943  00                 	db	0
   796  017944  00                 	db	0
   797  017945  00                 	db	0
   798  017946  00                 	db	0
   799  017947  00                 	db	0
   800  017948  00                 	db	0
   801  017949  00                 	db	0
   802  01794A  00                 	db	0
   803  01794B  00                 	db	0
   804  01794C  00                 	db	0
   805  01794D  00                 	db	0
   806  01794E  00                 	db	0
   807  01794F  00                 	db	0
   808  017950  00                 	db	0
   809  017951  00                 	db	0
   810  017952  00                 	db	0
   811  017953  00                 	db	0
   812  017954  00                 	db	0
   813  017955  00                 	db	0
   814  017956  00                 	db	0
   815  017957  00                 	db	0
   816  017958  00                 	db	0
   817  017959  00                 	db	0
   818  01795A  00                 	db	0
   819  01795B  00                 	db	0
   820  01795C  00                 	db	0
   821  01795D  00                 	db	0
   822  01795E  00                 	db	0
   823  01795F  00                 	db	0
   824  017960  00                 	db	0
   825  017961  00                 	db	0
   826  017962  00                 	db	0
   827  017963  00                 	db	0
   828  017964  00                 	db	0
   829  017965  00                 	db	0
   830  017966  00                 	db	0
   831  017967  00                 	db	0
   832  017968  00                 	db	0
   833  017969  00                 	db	0
   834  01796A  00                 	db	0
   835  01796B  00                 	db	0
   836  01796C  00                 	db	0
   837  01796D  00                 	db	0
   838  01796E  00                 	db	0
   839  01796F  00                 	db	0
   840  017970  00                 	db	0
   841  017971  00                 	db	0
   842  017972  00                 	db	0
   843  017973  00                 	db	0
   844  017974  00                 	db	0
   845  017975  00                 	db	0
   846  017976  00                 	db	0
   847  017977  00                 	db	0
   848  017978  00                 	db	0
   849  017979  00                 	db	0
   850  01797A  00                 	db	0
   851  01797B  00                 	db	0
   852  01797C  00                 	db	0
   853  01797D  00                 	db	0
   854  01797E  00                 	db	0
   855  01797F  00                 	db	0
   856  017980  00                 	db	0
   857  017981  00                 	db	0
   858  017982  00                 	db	0
   859  017983  00                 	db	0
   860  017984  00                 	db	0
   861  017985  00                 	db	0
   862  017986  00                 	db	0
   863  017987  00                 	db	0
   864  017988  00                 	db	0
   865  017989  00                 	db	0
   866  01798A  00                 	db	0
   867  01798B  00                 	db	0
   868  01798C  00                 	db	0
   869  01798D  00                 	db	0
   870  01798E  00                 	db	0
   871  01798F  00                 	db	0
   872  017990  00                 	db	0
   873  017991  00                 	db	0
   874  017992  00                 	db	0
   875  017993  00                 	db	0
   876  017994  00                 	db	0
   877  017995  00                 	db	0
   878  017996  00                 	db	0
   879  017997  00                 	db	0
   880  017998  00                 	db	0
   881  017999  00                 	db	0
   882  01799A  00                 	db	0
   883  01799B  00                 	db	0
   884  01799C  00                 	db	0
   885  01799D  00                 	db	0
   886  01799E  00                 	db	0
   887  01799F  00                 	db	0
   888  0179A0  00                 	db	0
   889  0179A1  00                 	db	0
   890  0179A2  00                 	db	0
   891  0179A3  00                 	db	0
   892  0179A4  00                 	db	0
   893  0179A5  00                 	db	0
   894  0179A6  00                 	db	0
   895  0179A7  00                 	db	0
   896  0179A8  00                 	db	0
   897  0179A9  00                 	db	0
   898  0179AA  00                 	db	0
   899  0179AB  00                 	db	0
   900  0179AC  00                 	db	0
   901  0179AD  00                 	db	0
   902  0179AE  00                 	db	0
   903  0179AF  00                 	db	0
   904  0179B0  00                 	db	0
   905  0179B1  00                 	db	0
   906  0179B2  00                 	db	0
   907  0179B3  00                 	db	0
   908  0179B4  00                 	db	0
   909  0179B5  00                 	db	0
   910  0179B6  00                 	db	0
   911  0179B7  00                 	db	0
   912  0179B8  00                 	db	0
   913  0179B9  00                 	db	0
   914  0179BA  00                 	db	0
   915  0179BB  00                 	db	0
   916  0179BC  00                 	db	0
   917  0179BD  00                 	db	0
   918  0179BE  00                 	db	0
   919  0179BF  00                 	db	0
   920  0179C0  00                 	db	0
   921  0179C1  00                 	db	0
   922  0179C2  00                 	db	0
   923  0179C3  00                 	db	0
   924  0179C4  00                 	db	0
   925  0179C5  00                 	db	0
   926  0179C6  00                 	db	0
   927  0179C7  00                 	db	0
   928  0179C8  00                 	db	0
   929  0179C9  00                 	db	0
   930  0179CA  00                 	db	0
   931  0179CB  00                 	db	0
   932  0179CC  00                 	db	0
   933  0179CD  00                 	db	0
   934  0179CE  00                 	db	0
   935  0179CF  00                 	db	0
   936  0179D0  00                 	db	0
   937  0179D1  00                 	db	0
   938  0179D2  00                 	db	0
   939  0179D3  00                 	db	0
   940  0179D4  00                 	db	0
   941  0179D5  00                 	db	0
   942  0179D6  00                 	db	0
   943  0179D7  00                 	db	0
   944  0179D8  00                 	db	0
   945  0179D9  00                 	db	0
   946  0179DA  00                 	db	0
   947  0179DB  00                 	db	0
   948  0179DC  00                 	db	0
   949  0179DD  00                 	db	0
   950  0179DE  00                 	db	0
   951  0179DF  00                 	db	0
   952  0179E0  00                 	db	0
   953  0179E1  00                 	db	0
   954  0179E2  00                 	db	0
   955  0179E3  00                 	db	0
   956  0179E4  00                 	db	0
   957  0179E5  00                 	db	0
   958  0179E6  00                 	db	0
   959  0179E7  00                 	db	0
   960  0179E8  00                 	db	0
   961  0179E9  00                 	db	0
   962  0179EA  00                 	db	0
   963  0179EB  00                 	db	0
   964  0179EC  00                 	db	0
   965  0179ED  00                 	db	0
   966  0179EE  00                 	db	0
   967  0179EF  00                 	db	0
   968  0179F0  00                 	db	0
   969  0179F1  00                 	db	0
   970  0179F2  00                 	db	0
   971  0179F3  00                 	db	0
   972  0179F4  00                 	db	0
   973  0179F5  00                 	db	0
   974  0179F6  00                 	db	0
   975  0179F7  00                 	db	0
   976  0179F8  00                 	db	0
   977  0179F9  00                 	db	0
   978  0179FA  00                 	db	0
   979  0179FB  00                 	db	0
   980  0179FC  00                 	db	0
   981  0179FD  00                 	db	0
   982  0179FE  00                 	db	0
   983  0179FF  00                 	db	0
   984  017A00  00                 	db	0
   985  017A01  00                 	db	0
   986  017A02  00                 	db	0
   987  017A03  00                 	db	0
   988  017A04  00                 	db	0
   989  017A05  00                 	db	0
   990  017A06  00                 	db	0
   991  017A07  00                 	db	0
   992  017A08  00                 	db	0
   993  017A09  00                 	db	0
   994  017A0A  00                 	db	0
   995  017A0B  00                 	db	0
   996  017A0C  00                 	db	0
   997  017A0D  00                 	db	0
   998  017A0E  00                 	db	0
   999  017A0F  00                 	db	0
  1000  017A10  00                 	db	0
  1001  017A11  00                 	db	0
  1002  017A12  00                 	db	0
  1003  017A13  00                 	db	0
  1004  017A14  00                 	db	0
  1005  017A15  00                 	db	0
  1006  017A16  00                 	db	0
  1007  017A17  00                 	db	0
  1008  017A18  00                 	db	0
  1009  017A19  00                 	db	0
  1010  017A1A  00                 	db	0
  1011  017A1B  00                 	db	0
  1012  017A1C  00                 	db	0
  1013  017A1D  00                 	db	0
  1014  017A1E  00                 	db	0
  1015  017A1F  00                 	db	0
  1016  017A20  00                 	db	0
  1017  017A21  00                 	db	0
  1018  017A22  00                 	db	0
  1019  017A23  00                 	db	0
  1020  017A24  00                 	db	0
  1021  017A25  00                 	db	0
  1022  017A26  00                 	db	0
  1023  017A27  00                 	db	0
  1024  017A28  00                 	db	0
  1025  017A29  00                 	db	0
  1026  017A2A  00                 	db	0
  1027  017A2B  00                 	db	0
  1028  017A2C  00                 	db	0
  1029  017A2D  00                 	db	0
  1030  017A2E  00                 	db	0
  1031  017A2F  00                 	db	0
  1032  017A30  00                 	db	0
  1033  017A31  00                 	db	0
  1034  017A32  00                 	db	0
  1035  017A33  00                 	db	0
  1036  017A34  00                 	db	0
  1037  017A35  00                 	db	0
  1038  017A36  00                 	db	0
  1039  017A37  00                 	db	0
  1040  017A38  00                 	db	0
  1041  017A39  00                 	db	0
  1042  017A3A  00                 	db	0
  1043  017A3B  00                 	db	0
  1044  017A3C  00                 	db	0
  1045  017A3D  00                 	db	0
  1046  017A3E  00                 	db	0
  1047  017A3F  00                 	db	0
  1048  017A40  00                 	db	0
  1049  017A41  00                 	db	0
  1050  017A42  00                 	db	0
  1051  017A43  00                 	db	0
  1052  017A44  00                 	db	0
  1053  017A45  00                 	db	0
  1054  017A46  00                 	db	0
  1055  017A47  00                 	db	0
  1056  017A48  00                 	db	0
  1057  017A49  00                 	db	0
  1058  017A4A  00                 	db	0
  1059  017A4B  00                 	db	0
  1060  017A4C  00                 	db	0
  1061  017A4D  00                 	db	0
  1062  017A4E  00                 	db	0
  1063  017A4F  00                 	db	0
  1064  017A50  00                 	db	0
  1065  017A51  00                 	db	0
  1066  017A52  00                 	db	0
  1067  017A53  00                 	db	0
  1068  017A54  00                 	db	0
  1069  017A55  00                 	db	0
  1070  017A56  00                 	db	0
  1071  017A57  00                 	db	0
  1072  017A58  00                 	db	0
  1073  017A59  00                 	db	0
  1074  017A5A  00                 	db	0
  1075  017A5B  00                 	db	0
  1076  017A5C  00                 	db	0
  1077  017A5D  00                 	db	0
  1078  017A5E  00                 	db	0
  1079  017A5F  00                 	db	0
  1080  017A60  00                 	db	0
  1081  017A61  00                 	db	0
  1082  017A62  00                 	db	0
  1083  017A63  00                 	db	0
  1084  017A64  00                 	db	0
  1085  017A65  00                 	db	0
  1086  017A66  00                 	db	0
  1087  017A67  00                 	db	0
  1088  017A68  00                 	db	0
  1089  017A69  00                 	db	0
  1090  017A6A  00                 	db	0
  1091  017A6B  00                 	db	0
  1092  017A6C  00                 	db	0
  1093  017A6D  00                 	db	0
  1094  017A6E  00                 	db	0
  1095  017A6F  00                 	db	0
  1096  017A70  00                 	db	0
  1097  017A71  00                 	db	0
  1098  017A72  00                 	db	0
  1099  017A73  00                 	db	0
  1100  017A74  00                 	db	0
  1101  017A75  00                 	db	0
  1102  017A76  00                 	db	0
  1103  017A77  00                 	db	0
  1104  017A78  00                 	db	0
  1105  017A79  00                 	db	0
  1106  017A7A  00                 	db	0
  1107  017A7B  00                 	db	0
  1108  017A7C  00                 	db	0
  1109  017A7D  00                 	db	0
  1110  017A7E  00                 	db	0
  1111  017A7F  00                 	db	0
  1112  017A80  00                 	db	0
  1113  017A81  00                 	db	0
  1114  017A82  00                 	db	0
  1115  017A83  00                 	db	0
  1116  017A84  00                 	db	0
  1117  017A85  00                 	db	0
  1118  017A86  00                 	db	0
  1119  017A87  00                 	db	0
  1120  017A88  00                 	db	0
  1121  017A89  00                 	db	0
  1122  017A8A  00                 	db	0
  1123  017A8B  00                 	db	0
  1124  017A8C  00                 	db	0
  1125  017A8D  00                 	db	0
  1126  017A8E  00                 	db	0
  1127  017A8F  00                 	db	0
  1128  017A90  00                 	db	0
  1129  017A91  00                 	db	0
  1130  017A92  00                 	db	0
  1131  017A93  00                 	db	0
  1132  017A94  00                 	db	0
  1133  017A95  00                 	db	0
  1134  017A96  00                 	db	0
  1135  017A97  00                 	db	0
  1136  017A98  00                 	db	0
  1137  017A99  00                 	db	0
  1138  017A9A  00                 	db	0
  1139  017A9B  00                 	db	0
  1140  017A9C  00                 	db	0
  1141  017A9D  00                 	db	0
  1142  017A9E  00                 	db	0
  1143  017A9F  00                 	db	0
  1144  017AA0  00                 	db	0
  1145  017AA1  00                 	db	0
  1146  017AA2  00                 	db	0
  1147  017AA3  00                 	db	0
  1148  017AA4  00                 	db	0
  1149  017AA5  00                 	db	0
  1150  017AA6  00                 	db	0
  1151  017AA7  00                 	db	0
  1152  017AA8  00                 	db	0
  1153  017AA9  00                 	db	0
  1154  017AAA  00                 	db	0
  1155  017AAB  00                 	db	0
  1156  017AAC  00                 	db	0
  1157  017AAD  00                 	db	0
  1158  017AAE  00                 	db	0
  1159  017AAF  00                 	db	0
  1160  017AB0  00                 	db	0
  1161  017AB1  00                 	db	0
  1162  017AB2  00                 	db	0
  1163  017AB3  00                 	db	0
  1164  017AB4  00                 	db	0
  1165  017AB5  00                 	db	0
  1166  017AB6  00                 	db	0
  1167  017AB7  00                 	db	0
  1168  017AB8  00                 	db	0
  1169  017AB9  00                 	db	0
  1170  017ABA  00                 	db	0
  1171  017ABB  00                 	db	0
  1172  017ABC  00                 	db	0
  1173  017ABD  00                 	db	0
  1174  017ABE  00                 	db	0
  1175  017ABF  00                 	db	0
  1176  017AC0  00                 	db	0
  1177  017AC1  00                 	db	0
  1178  017AC2  00                 	db	0
  1179  017AC3  00                 	db	0
  1180  017AC4  00                 	db	0
  1181  017AC5  00                 	db	0
  1182  017AC6  00                 	db	0
  1183  017AC7  00                 	db	0
  1184  017AC8  00                 	db	0
  1185  017AC9  00                 	db	0
  1186  017ACA  00                 	db	0
  1187  017ACB  00                 	db	0
  1188  017ACC  00                 	db	0
  1189  017ACD  00                 	db	0
  1190  017ACE  00                 	db	0
  1191  017ACF  00                 	db	0
  1192  017AD0  00                 	db	0
  1193  017AD1  00                 	db	0
  1194  017AD2  00                 	db	0
  1195  017AD3  00                 	db	0
  1196  017AD4  00                 	db	0
  1197  017AD5  00                 	db	0
  1198  017AD6  00                 	db	0
  1199  017AD7  00                 	db	0
  1200  017AD8  00                 	db	0
  1201  017AD9  00                 	db	0
  1202  017ADA  00                 	db	0
  1203  017ADB  00                 	db	0
  1204  017ADC  00                 	db	0
  1205  017ADD  00                 	db	0
  1206  017ADE  00                 	db	0
  1207  017ADF  00                 	db	0
  1208  017AE0  00                 	db	0
  1209  017AE1  00                 	db	0
  1210  017AE2  00                 	db	0
  1211  017AE3  00                 	db	0
  1212  017AE4  00                 	db	0
  1213  017AE5  00                 	db	0
  1214  017AE6  00                 	db	0
  1215  017AE7  00                 	db	0
  1216  017AE8  00                 	db	0
  1217  017AE9  00                 	db	0
  1218  017AEA  00                 	db	0
  1219  017AEB  00                 	db	0
  1220  017AEC  00                 	db	0
  1221  017AED  00                 	db	0
  1222  017AEE  00                 	db	0
  1223  017AEF  00                 	db	0
  1224  017AF0  00                 	db	0
  1225  017AF1  00                 	db	0
  1226                           
  1227                           	psect	idataBANK0
  1228  01AAFC                     __pidataBANK0:
  1229                           	opt callstack 0
  1230                           
  1231                           ;initializer for _R
  1232  01AAFC  0000               	dw	0
  1233  01AAFE  0000               	dw	0
  1234  01AB00  0000               	dw	0
  1235  01AB02  0000               	dw	0
  1236  01AB04  0000               	dw	0
  1237  01AB06  0000               	dw	0
  1238  01AB08  0000               	dw	0
  1239  01AB0A  0000               	dw	0
  1240  01AB0C  0000               	dw	0
  1241  01AB0E  0000               	dw	0
  1242  01AB10  0000               	dw	0
  1243  01AB12  0000               	dw	0
  1244  01AB14  0000               	dw	0
  1245  01AB16  0000               	dw	0
  1246  01AB18  0000               	dw	0
  1247  01AB1A  0000               	dw	0
  1248  01AB1C  0F67               	dw	3943
  1249  01AB1E  0F8F               	dw	3983
  1250  01AB20  00                 	db	0
  1251  01AB21  0000               	dw	0
  1252  01AB23  00                 	db	0
  1253                           
  1254                           ;initializer for stoa@F1166
  1255  01AB24  28                 	db	40
  1256  01AB25  6E                 	db	110
  1257  01AB26  75                 	db	117
  1258  01AB27  6C                 	db	108
  1259  01AB28  6C                 	db	108
  1260  01AB29  29                 	db	41
  1261  01AB2A  00                 	db	0
  1262                           
  1263                           ;initializer for _H
  1264  01AB2B  00                 	db	0
  1265  01AB2C  00                 	db	0
  1266  01AB2D  01                 	db	1
  1267  01AB2E  00                 	db	0
  1268  01AB2F  01                 	db	1
  1269  01AB30  00                 	db	0
  1270  01AB31  00                 	db	0
  1271                           
  1272                           	psect	idataBANK1
  1273  019350                     __pidataBANK1:
  1274                           	opt callstack 0
  1275                           
  1276                           ;initializer for _C
  1277  019350  0000               	dw	0
  1278  019352  0000               	dw	0
  1279  019354  0000               	dw	0
  1280  019356  0000               	dw	0
  1281  019358  0000               	dw	0
  1282  01935A  0000               	dw	0
  1283  01935C  0000               	dw	0
  1284  01935E  0000               	dw	0
  1285  019360  0000               	dw	0
  1286  019362  0000               	dw	0
  1287  019364  0000               	dw	0
  1288  019366  0000               	dw	0
  1289  019368  0000               	dw	0
  1290  01936A  0000               	dw	0
  1291  01936C  0000               	dw	0
  1292  01936E  0000               	dw	0
  1293  019370  0000               	dw	0
  1294  019372  0000               	dw	0
  1295  019374  0000               	dw	0
  1296  019376  0000               	dw	0
  1297  019378  0000               	dw	0
  1298  01937A  0000               	dw	0
  1299  01937C  0000               	dw	0
  1300  01937E  0000               	dw	0
  1301  019380  0000               	dw	0
  1302  019382  0000               	dw	0
  1303  019384  0000               	dw	0
  1304  019386  0000               	dw	0
  1305  019388  0000               	dw	0
  1306  01938A  0000               	dw	0
  1307  01938C  0000               	dw	0
  1308  01938E  0000               	dw	0
  1309  019390  0000               	dw	0
  1310  019392  0000               	dw	0
  1311  019394  0000               	dw	0
  1312  019396  0000               	dw	0
  1313  019398  0000               	dw	0
  1314  01939A  0000               	dw	0
  1315  01939C  0000               	dw	0
  1316  01939E  0000               	dw	0
  1317  0193A0  0000               	dw	0
  1318  0193A2  0000               	dw	0
  1319  0193A4  0000               	dw	0
  1320  0193A6  0000               	dw	0
  1321  0193A8  0000               	dw	0
  1322  0193AA  0000               	dw	0
  1323  0193AC  0000               	dw	0
  1324  0193AE  0000               	dw	0
  1325  0193B0  0000               	dw	0
  1326  0193B2  0000               	dw	0
  1327  0193B4  0000               	dw	0
  1328  0193B6  0000               	dw	0
  1329  0193B8  0000               	dw	0
  1330  0193BA  0000               	dw	0
  1331  0193BC  0000               	dw	0
  1332  0193BE  0000               	dw	0
  1333  0193C0  0000               	dw	0
  1334  0193C2  0000               	dw	0
  1335  0193C4  0000               	dw	0
  1336  0193C6  0000               	dw	0
  1337  0193C8  0000               	dw	0
  1338  0193CA  0000               	dw	0
  1339  0193CC  0000               	dw	0
  1340  0193CE  0000               	dw	0
  1341  0193D0  0000               	dw	0
  1342  0193D2  0000               	dw	0
  1343  0193D4  0000               	dw	0
  1344  0193D6  0000               	dw	0
  1345  0193D8  0000               	dw	0
  1346  0193DA  42FA               	dw	17146
  1347  0193DC  00                 	db	0
  1348  0193DD  00                 	db	0
  1349  0193DE  00                 	db	0
  1350  0193DF  00                 	db	0
  1351  0193E0  00                 	db	0
  1352  0193E1  00                 	db	0
  1353  0193E2  00                 	db	0
  1354  0193E3  00                 	db	0
  1355  0193E4  00                 	db	0
  1356  0193E5  00                 	db	0
  1357  0193E6  00                 	db	0
  1358  0193E7  00                 	db	0
  1359  0193E8  00                 	db	0
  1360  0193E9  00                 	db	0
  1361  0193EA  00                 	db	0
  1362  0193EB  00                 	db	0
  1363  0193EC  00                 	db	0
  1364  0193ED  00                 	db	0
  1365  0193EE  00                 	db	0
  1366  0193EF  00                 	db	0
  1367  0193F0  00                 	db	0
  1368  0193F1  00                 	db	0
  1369  0193F2  00                 	db	0
  1370  0193F3  00                 	db	0
  1371  0193F4  00                 	db	0
  1372  0193F5  00                 	db	0
  1373  0193F6  00                 	db	0
  1374  0193F7  00                 	db	0
  1375  0193F8  00                 	db	0
  1376  0193F9  00                 	db	0
  1377  0193FA  00                 	db	0
  1378  0193FB  00                 	db	0
  1379  0193FC  00                 	db	0
  1380  0193FD  00                 	db	0
  1381  0193FE  00                 	db	0
  1382  0193FF  00                 	db	0
  1383  019400  00                 	db	0
  1384  019401  00                 	db	0
  1385  019402  00                 	db	0
  1386  019403  00                 	db	0
  1387  019404  00                 	db	0
  1388  019405  00                 	db	0
  1389  019406  00                 	db	0
  1390  019407  00                 	db	0
  1391  019408  00                 	db	0
  1392  019409  00                 	db	0
  1393  01940A  00                 	db	0
  1394  01940B  00                 	db	0
  1395  01940C  00                 	db	0
  1396  01940D  00                 	db	0
  1397  01940E  00                 	db	0
  1398  01940F  00                 	db	0
  1399  019410  00                 	db	0
  1400  019411  00                 	db	0
  1401  019412  00                 	db	0
  1402  019413  00                 	db	0
  1403  019414  00                 	db	0
  1404  019415  00                 	db	0
  1405  019416  00                 	db	0
  1406  019417  00                 	db	0
  1407  019418  00                 	db	0
  1408  019419  00                 	db	0
  1409  01941A  00                 	db	0
  1410  01941B  00                 	db	0
  1411  01941C  00                 	db	0
  1412  01941D  00                 	db	0
  1413  01941E  00                 	db	0
  1414  01941F  00                 	db	0
  1415  019420  00                 	db	0
  1416  019421  00                 	db	0
  1417  019422  00                 	db	0
  1418  019423  00                 	db	0
  1419  019424  00                 	db	0
  1420  019425  00                 	db	0
  1421  019426  00                 	db	0
  1422  019427  00                 	db	0
  1423  019428  00                 	db	0
  1424  019429  00                 	db	0
  1425  01942A  00                 	db	0
  1426  01942B  00                 	db	0
  1427  01942C  00                 	db	0
  1428  01942D  00                 	db	0
  1429  01942E  00                 	db	0
  1430  01942F  00                 	db	0
  1431  019430  00                 	db	0
  1432  019431  00                 	db	0
  1433  019432  00                 	db	0
  1434  019433  00                 	db	0
  1435  019434  00                 	db	0
  1436  019435  00                 	db	0
  1437  019436  00                 	db	0
  1438  019437  00                 	db	0
  1439  019438  00                 	db	0
  1440  019439  00                 	db	0
  1441  01943A  00                 	db	0
  1442  01943B  00                 	db	0
  1443  01943C  00                 	db	0
  1444  01943D  00                 	db	0
  1445  01943E  00                 	db	0
  1446  01943F  00                 	db	0
  1447  019440  00                 	db	0
  1448  019441  00                 	db	0
  1449  019442  00                 	db	0
  1450                           
  1451                           	psect	idataBANK2
  1452  0197AC                     __pidataBANK2:
  1453                           	opt callstack 0
  1454                           
  1455                           ;initializer for _V
  1456  0197AC  00                 	db	0
  1457  0197AD  00                 	db	0
  1458  0197AE  00                 	db	0
  1459  0197AF  00                 	db	0
  1460  0197B0  00                 	db	0
  1461  0197B1  00                 	db	0
  1462  0197B2  00                 	db	0
  1463  0197B3  00                 	db	0
  1464  0197B4  00                 	db	0
  1465  0197B5  00                 	db	0
  1466  0197B6  00                 	db	0
  1467  0197B7  00                 	db	0
  1468  0197B8  00                 	db	0
  1469  0197B9  00                 	db	0
  1470  0197BA  00                 	db	0
  1471  0197BB  00                 	db	0
  1472  0197BC  00                 	db	0
  1473  0197BD  00                 	db	0
  1474  0197BE  00                 	db	0
  1475  0197BF  00                 	db	0
  1476  0197C0  00                 	db	0
  1477  0197C1  00                 	db	0
  1478  0197C2  00                 	db	0
  1479  0197C3  00                 	db	0
  1480  0197C4  00                 	db	0
  1481  0197C5  00                 	db	0
  1482  0197C6  00                 	db	0
  1483  0197C7  00                 	db	0
  1484  0197C8  00                 	db	0
  1485  0197C9  00                 	db	0
  1486  0197CA  00                 	db	0
  1487  0197CB  00                 	db	0
  1488  0197CC  00                 	db	0
  1489  0197CD  00                 	db	0
  1490  0197CE  00                 	db	0
  1491  0197CF  00                 	db	0
  1492  0197D0  00                 	db	0
  1493  0197D1  00                 	db	0
  1494  0197D2  00                 	db	0
  1495  0197D3  00                 	db	0
  1496  0197D4  00                 	db	0
  1497  0197D5  00                 	db	0
  1498  0197D6  00                 	db	0
  1499  0197D7  00                 	db	0
  1500  0197D8  00                 	db	0
  1501  0197D9  00                 	db	0
  1502  0197DA  00                 	db	0
  1503  0197DB  00                 	db	0
  1504  0197DC  00                 	db	0
  1505  0197DD  00                 	db	0
  1506  0197DE  00                 	db	0
  1507  0197DF  00                 	db	0
  1508  0197E0  00                 	db	0
  1509  0197E1  00                 	db	0
  1510  0197E2  00                 	db	0
  1511  0197E3  00                 	db	0
  1512  0197E4  00                 	db	0
  1513  0197E5  00                 	db	0
  1514  0197E6  00                 	db	0
  1515  0197E7  00                 	db	0
  1516  0197E8  00                 	db	0
  1517  0197E9  00                 	db	0
  1518  0197EA  00                 	db	0
  1519  0197EB  00                 	db	0
  1520  0197EC  00                 	db	0
  1521  0197ED  00                 	db	0
  1522  0197EE  00                 	db	0
  1523  0197EF  00                 	db	0
  1524  0197F0  00                 	db	0
  1525  0197F1  00                 	db	0
  1526  0197F2  00                 	db	0
  1527  0197F3  00                 	db	0
  1528  0197F4  00                 	db	0
  1529  0197F5  00                 	db	0
  1530  0197F6  00                 	db	0
  1531  0197F7  00                 	db	0
  1532  0197F8  00                 	db	0
  1533  0197F9  00                 	db	0
  1534  0197FA  00                 	db	0
  1535  0197FB  00                 	db	0
  1536  0197FC  00                 	db	0
  1537  0197FD  00                 	db	0
  1538  0197FE  00                 	db	0
  1539  0197FF  00                 	db	0
  1540  019800  00                 	db	0
  1541  019801  00                 	db	0
  1542  019802  00                 	db	0
  1543  019803  00                 	db	0
  1544  019804  00                 	db	0
  1545  019805  00                 	db	0
  1546  019806  00                 	db	0
  1547  019807  00                 	db	0
  1548  019808  00                 	db	0
  1549  019809  00                 	db	0
  1550  01980A  00                 	db	0
  1551  01980B  00                 	db	0
  1552  01980C  00                 	db	0
  1553  01980D  00                 	db	0
  1554  01980E  00                 	db	0
  1555  01980F  00                 	db	0
  1556  019810  00                 	db	0
  1557  019811  00                 	db	0
  1558  019812  00                 	db	0
  1559  019813  00                 	db	0
  1560  019814  00                 	db	0
  1561  019815  00                 	db	0
  1562  019816  00                 	db	0
  1563  019817  00                 	db	0
  1564  019818  00                 	db	0
  1565  019819  00                 	db	0
  1566  01981A  00                 	db	0
  1567  01981B  00                 	db	0
  1568  01981C  00                 	db	0
  1569  01981D  00                 	db	0
  1570  01981E  00                 	db	0
  1571  01981F  00                 	db	0
  1572  019820  00                 	db	0
  1573  019821  00                 	db	0
  1574  019822  00                 	db	0
  1575  019823  00                 	db	0
  1576  019824  00                 	db	0
  1577  019825  00                 	db	0
  1578  019826  00                 	db	0
  1579  019827  00                 	db	0
  1580  019828  00                 	db	0
  1581  019829  00                 	db	0
  1582  01982A  00                 	db	0
  1583  01982B  00                 	db	0
  1584  01982C  00                 	db	0
  1585  01982D  0000               	dw	0
  1586  01982F  0000               	dw	0
  1587  019831  0000               	dw	0
  1588  019833  0000               	dw	0
  1589  019835  00                 	db	0
  1590  019836  00                 	db	0
  1591  019837  00                 	db	0
  1592  019838  00                 	db	0
  1593  019839  00                 	db	0
  1594  01983A  00                 	db	0
  1595  01983B  0000               	dw	0
  1596  01983D  0000               	dw	0
  1597  01983F  0000               	dw	0
  1598  019841  0000               	dw	0
  1599  019843  0000               	dw	0
  1600  019845  0000               	dw	0
  1601  019847  00                 	db	0
  1602  019848  00                 	db	0
  1603  019849  00                 	db	0
  1604  01984A  00                 	db	0
  1605  01984B  00                 	db	0
  1606  01984C  00                 	db	0
  1607  01984D  00                 	db	0
  1608  01984E  00                 	db	0
  1609  01984F  00                 	db	0
  1610  019850  00                 	db	0
  1611  019851  0000               	dw	0
  1612  019853  0000               	dw	0
  1613  019855  2D                 	db	45
  1614  019856  00                 	db	0
  1615  019857  00                 	db	0
  1616  019858  0000               	dw	0
  1617  01985A  0000               	dw	0
  1618  01985C  0000               	dw	0
  1619  01985E  0000               	dw	0
  1620  019860  0000               	dw	0
  1621  019862  0000               	dw	0
  1622  019864  0000               	dw	0
  1623  019866  0000               	dw	0
  1624                           
  1625                           	psect	mediumconst
  1626  00FB28                     __pmediumconst:
  1627                           	opt callstack 0
  1628  00FB28  00                 	db	0
  1629  00FB29                     _BVSOC_TABLE:
  1630                           	opt callstack 0
  1631  00FB29  59D8               	dw	23000
  1632  00FB2B  0000               	dw	0
  1633  00FB2D  0005               	dw	5
  1634  00FB2F  0000               	dw	0
  1635  00FB31  5B68               	dw	23400
  1636  00FB33  0000               	dw	0
  1637  00FB35  000A               	dw	10
  1638  00FB37  0000               	dw	0
  1639  00FB39  5C30               	dw	23600
  1640  00FB3B  0000               	dw	0
  1641  00FB3D  0014               	dw	20
  1642  00FB3F  0000               	dw	0
  1643  00FB41  5E38               	dw	24120
  1644  00FB43  0000               	dw	0
  1645  00FB45  0019               	dw	25
  1646  00FB47  0000               	dw	0
  1647  00FB49  5E88               	dw	24200
  1648  00FB4B  0000               	dw	0
  1649  00FB4D  001E               	dw	30
  1650  00FB4F  0000               	dw	0
  1651  00FB51  5F78               	dw	24440
  1652  00FB53  0000               	dw	0
  1653  00FB55  0028               	dw	40
  1654  00FB57  0000               	dw	0
  1655  00FB59  5FDC               	dw	24540
  1656  00FB5B  0000               	dw	0
  1657  00FB5D  002D               	dw	45
  1658  00FB5F  0000               	dw	0
  1659  00FB61  6018               	dw	24600
  1660  00FB63  0000               	dw	0
  1661  00FB65  0032               	dw	50
  1662  00FB67  0000               	dw	0
  1663  00FB69  6046               	dw	24646
  1664  00FB6B  0000               	dw	0
  1665  00FB6D  0035               	dw	53
  1666  00FB6F  0000               	dw	0
  1667  00FB71  607C               	dw	24700
  1668  00FB73  0000               	dw	0
  1669  00FB75  0037               	dw	55
  1670  00FB77  0000               	dw	0
  1671  00FB79  60AE               	dw	24750
  1672  00FB7B  0000               	dw	0
  1673  00FB7D  0039               	dw	57
  1674  00FB7F  0000               	dw	0
  1675  00FB81  60E0               	dw	24800
  1676  00FB83  0000               	dw	0
  1677  00FB85  003C               	dw	60
  1678  00FB87  0000               	dw	0
  1679  00FB89  6112               	dw	24850
  1680  00FB8B  0000               	dw	0
  1681  00FB8D  003F               	dw	63
  1682  00FB8F  0000               	dw	0
  1683  00FB91  615D               	dw	24925
  1684  00FB93  0000               	dw	0
  1685  00FB95  0043               	dw	67
  1686  00FB97  0000               	dw	0
  1687  00FB99  61A8               	dw	25000
  1688  00FB9B  0000               	dw	0
  1689  00FB9D  0046               	dw	70
  1690  00FB9F  0000               	dw	0
  1691  00FBA1  61BC               	dw	25020
  1692  00FBA3  0000               	dw	0
  1693  00FBA5  0048               	dw	72
  1694  00FBA7  0000               	dw	0
  1695  00FBA9  61D0               	dw	25040
  1696  00FBAB  0000               	dw	0
  1697  00FBAD  004B               	dw	75
  1698  00FBAF  0000               	dw	0
  1699  00FBB1  61DA               	dw	25050
  1700  00FBB3  0000               	dw	0
  1701  00FBB5  0050               	dw	80
  1702  00FBB7  0000               	dw	0
  1703  00FBB9  61E4               	dw	25060
  1704  00FBBB  0000               	dw	0
  1705  00FBBD  0055               	dw	85
  1706  00FBBF  0000               	dw	0
  1707  00FBC1  61F8               	dw	25080
  1708  00FBC3  0000               	dw	0
  1709  00FBC5  005A               	dw	90
  1710  00FBC7  0000               	dw	0
  1711  00FBC9  6208               	dw	25096
  1712  00FBCB  0000               	dw	0
  1713  00FBCD  005C               	dw	92
  1714  00FBCF  0000               	dw	0
  1715  00FBD1  6222               	dw	25122
  1716  00FBD3  0000               	dw	0
  1717  00FBD5  005D               	dw	93
  1718  00FBD7  0000               	dw	0
  1719  00FBD9  6234               	dw	25140
  1720  00FBDB  0000               	dw	0
  1721  00FBDD  005F               	dw	95
  1722  00FBDF  0000               	dw	0
  1723  00FBE1  6248               	dw	25160
  1724  00FBE3  0000               	dw	0
  1725  00FBE5  0061               	dw	97
  1726  00FBE7  0000               	dw	0
  1727  00FBE9  625C               	dw	25180
  1728  00FBEB  0000               	dw	0
  1729  00FBED  0064               	dw	100
  1730  00FBEF  0000               	dw	0
  1731  00FBF1  6784               	dw	26500
  1732  00FBF3  0000               	dw	0
  1733  00FBF5  0062               	dw	98
  1734  00FBF7  0000               	dw	0
  1735  00FBF9                     __end_of_BVSOC_TABLE:
  1736                           	opt callstack 0
  1737  00FBF9                     _T:
  1738                           	opt callstack 0
  1739  00FBF9  63                 	db	99
  1740  00FBFA  6F                 	db	111
  1741  00FBFB  6D                 	db	109
  1742  00FBFC  6D                 	db	109
  1743  00FBFD  61                 	db	97
  1744  00FBFE  6E                 	db	110
  1745  00FBFF  64                 	db	100
  1746  00FC00  73                 	db	115
  1747  00FC01  20                 	db	32
  1748  00FC02  31                 	db	49
  1749  00FC03  00                 	db	0
  1750  00FC04  00                 	db	0
  1751  00FC05  00                 	db	0
  1752  00FC06  00                 	db	0
  1753  00FC07  00                 	db	0
  1754  00FC08  00                 	db	0
  1755  00FC09  00                 	db	0
  1756  00FC0A  00                 	db	0
  1757  00FC0B  64                 	db	100
  1758  00FC0C  69                 	db	105
  1759  00FC0D  73                 	db	115
  1760  00FC0E  70                 	db	112
  1761  00FC0F  6C                 	db	108
  1762  00FC10  61                 	db	97
  1763  00FC11  79                 	db	121
  1764  00FC12  73                 	db	115
  1765  00FC13  20                 	db	32
  1766  00FC14  31                 	db	49
  1767  00FC15  00                 	db	0
  1768  00FC16  00                 	db	0
  1769  00FC17  00                 	db	0
  1770  00FC18  00                 	db	0
  1771  00FC19  00                 	db	0
  1772  00FC1A  00                 	db	0
  1773  00FC1B  00                 	db	0
  1774  00FC1C  00                 	db	0
  1775  00FC1D  63                 	db	99
  1776  00FC1E  6F                 	db	111
  1777  00FC1F  6D                 	db	109
  1778  00FC20  6D                 	db	109
  1779  00FC21  61                 	db	97
  1780  00FC22  6E                 	db	110
  1781  00FC23  64                 	db	100
  1782  00FC24  73                 	db	115
  1783  00FC25  20                 	db	32
  1784  00FC26  32                 	db	50
  1785  00FC27  00                 	db	0
  1786  00FC28  00                 	db	0
  1787  00FC29  00                 	db	0
  1788  00FC2A  00                 	db	0
  1789  00FC2B  00                 	db	0
  1790  00FC2C  00                 	db	0
  1791  00FC2D  00                 	db	0
  1792  00FC2E  00                 	db	0
  1793  00FC2F  64                 	db	100
  1794  00FC30  69                 	db	105
  1795  00FC31  73                 	db	115
  1796  00FC32  70                 	db	112
  1797  00FC33  6C                 	db	108
  1798  00FC34  61                 	db	97
  1799  00FC35  79                 	db	121
  1800  00FC36  73                 	db	115
  1801  00FC37  20                 	db	32
  1802  00FC38  32                 	db	50
  1803  00FC39  00                 	db	0
  1804  00FC3A  00                 	db	0
  1805  00FC3B  00                 	db	0
  1806  00FC3C  00                 	db	0
  1807  00FC3D  00                 	db	0
  1808  00FC3E  00                 	db	0
  1809  00FC3F  00                 	db	0
  1810  00FC40  00                 	db	0
  1811  00FC41  63                 	db	99
  1812  00FC42  6F                 	db	111
  1813  00FC43  6D                 	db	109
  1814  00FC44  6D                 	db	109
  1815  00FC45  61                 	db	97
  1816  00FC46  6E                 	db	110
  1817  00FC47  64                 	db	100
  1818  00FC48  73                 	db	115
  1819  00FC49  20                 	db	32
  1820  00FC4A  33                 	db	51
  1821  00FC4B  00                 	db	0
  1822  00FC4C  00                 	db	0
  1823  00FC4D  00                 	db	0
  1824  00FC4E  00                 	db	0
  1825  00FC4F  00                 	db	0
  1826  00FC50  00                 	db	0
  1827  00FC51  00                 	db	0
  1828  00FC52  00                 	db	0
  1829  00FC53  64                 	db	100
  1830  00FC54  69                 	db	105
  1831  00FC55  73                 	db	115
  1832  00FC56  70                 	db	112
  1833  00FC57  6C                 	db	108
  1834  00FC58  61                 	db	97
  1835  00FC59  79                 	db	121
  1836  00FC5A  73                 	db	115
  1837  00FC5B  20                 	db	32
  1838  00FC5C  33                 	db	51
  1839  00FC5D  00                 	db	0
  1840  00FC5E  00                 	db	0
  1841  00FC5F  00                 	db	0
  1842  00FC60  00                 	db	0
  1843  00FC61  00                 	db	0
  1844  00FC62  00                 	db	0
  1845  00FC63  00                 	db	0
  1846  00FC64  00                 	db	0
  1847  00FC65  63                 	db	99
  1848  00FC66  6F                 	db	111
  1849  00FC67  6D                 	db	109
  1850  00FC68  6D                 	db	109
  1851  00FC69  61                 	db	97
  1852  00FC6A  6E                 	db	110
  1853  00FC6B  64                 	db	100
  1854  00FC6C  73                 	db	115
  1855  00FC6D  20                 	db	32
  1856  00FC6E  34                 	db	52
  1857  00FC6F  00                 	db	0
  1858  00FC70  00                 	db	0
  1859  00FC71  00                 	db	0
  1860  00FC72  00                 	db	0
  1861  00FC73  00                 	db	0
  1862  00FC74  00                 	db	0
  1863  00FC75  00                 	db	0
  1864  00FC76  00                 	db	0
  1865  00FC77  64                 	db	100
  1866  00FC78  69                 	db	105
  1867  00FC79  73                 	db	115
  1868  00FC7A  70                 	db	112
  1869  00FC7B  6C                 	db	108
  1870  00FC7C  61                 	db	97
  1871  00FC7D  79                 	db	121
  1872  00FC7E  73                 	db	115
  1873  00FC7F  20                 	db	32
  1874  00FC80  34                 	db	52
  1875  00FC81  00                 	db	0
  1876  00FC82  00                 	db	0
  1877  00FC83  00                 	db	0
  1878  00FC84  00                 	db	0
  1879  00FC85  00                 	db	0
  1880  00FC86  00                 	db	0
  1881  00FC87  00                 	db	0
  1882  00FC88  00                 	db	0
  1883  00FC89                     __end_of_T:
  1884                           	opt callstack 0
  1885  00FC89                     _spin:
  1886                           	opt callstack 0
  1887  00FC89  7C                 	db	124
  1888  00FC8A  7C                 	db	124
  1889  00FC8B  2F                 	db	47
  1890  00FC8C  2F                 	db	47
  1891  00FC8D  2D                 	db	45
  1892  00FC8E  2D                 	db	45
  1893  00FC8F  00                 	db	0
  1894  00FC90  00                 	db	0
  1895  00FC91  00                 	db	0
  1896  00FC92  00                 	db	0
  1897  00FC93  00                 	db	0
  1898  00FC94  00                 	db	0
  1899  00FC95  00                 	db	0
  1900  00FC96  00                 	db	0
  1901  00FC97  00                 	db	0
  1902  00FC98  00                 	db	0
  1903  00FC99  00                 	db	0
  1904  00FC9A  00                 	db	0
  1905  00FC9B  00                 	db	0
  1906  00FC9C  00                 	db	0
  1907  00FC9D  7C                 	db	124
  1908  00FC9E  7C                 	db	124
  1909  00FC9F  2F                 	db	47
  1910  00FCA0  2F                 	db	47
  1911  00FCA1  2D                 	db	45
  1912  00FCA2  2D                 	db	45
  1913  00FCA3  5C                 	db	92
  1914  00FCA4  5C                 	db	92
  1915  00FCA5  00                 	db	0
  1916  00FCA6  00                 	db	0
  1917  00FCA7  00                 	db	0
  1918  00FCA8  00                 	db	0
  1919  00FCA9  00                 	db	0
  1920  00FCAA  00                 	db	0
  1921  00FCAB  00                 	db	0
  1922  00FCAC  00                 	db	0
  1923  00FCAD  00                 	db	0
  1924  00FCAE  00                 	db	0
  1925  00FCAF  00                 	db	0
  1926  00FCB0  00                 	db	0
  1927  00FCB1  4F                 	db	79
  1928  00FCB2  4F                 	db	79
  1929  00FCB3  4F                 	db	79
  1930  00FCB4  4F                 	db	79
  1931  00FCB5  4F                 	db	79
  1932  00FCB6  4F                 	db	79
  1933  00FCB7  2D                 	db	45
  1934  00FCB8  2D                 	db	45
  1935  00FCB9  5F                 	db	95
  1936  00FCBA  5F                 	db	95
  1937  00FCBB  2D                 	db	45
  1938  00FCBC  00                 	db	0
  1939  00FCBD  00                 	db	0
  1940  00FCBE  00                 	db	0
  1941  00FCBF  00                 	db	0
  1942  00FCC0  00                 	db	0
  1943  00FCC1  00                 	db	0
  1944  00FCC2  00                 	db	0
  1945  00FCC3  00                 	db	0
  1946  00FCC4  00                 	db	0
  1947  00FCC5  76                 	db	118
  1948  00FCC6  76                 	db	118
  1949  00FCC7  3C                 	db	60
  1950  00FCC8  3C                 	db	60
  1951  00FCC9  5E                 	db	94
  1952  00FCCA  5E                 	db	94
  1953  00FCCB  3E                 	db	62
  1954  00FCCC  3E                 	db	62
  1955  00FCCD  00                 	db	0
  1956  00FCCE  00                 	db	0
  1957  00FCCF  00                 	db	0
  1958  00FCD0  00                 	db	0
  1959  00FCD1  00                 	db	0
  1960  00FCD2  00                 	db	0
  1961  00FCD3  00                 	db	0
  1962  00FCD4  00                 	db	0
  1963  00FCD5  00                 	db	0
  1964  00FCD6  00                 	db	0
  1965  00FCD7  00                 	db	0
  1966  00FCD8  00                 	db	0
  1967  00FCD9  2E                 	db	46
  1968  00FCDA  2E                 	db	46
  1969  00FCDB  2A                 	db	42
  1970  00FCDC  2A                 	db	42
  1971  00FCDD  78                 	db	120
  1972  00FCDE  23                 	db	35
  1973  00FCDF  78                 	db	120
  1974  00FCE0  23                 	db	35
  1975  00FCE1  58                 	db	88
  1976  00FCE2  58                 	db	88
  1977  00FCE3  7C                 	db	124
  1978  00FCE4  7C                 	db	124
  1979  00FCE5  2D                 	db	45
  1980  00FCE6  2D                 	db	45
  1981  00FCE7  00                 	db	0
  1982  00FCE8  00                 	db	0
  1983  00FCE9  00                 	db	0
  1984  00FCEA  00                 	db	0
  1985  00FCEB  00                 	db	0
  1986  00FCEC  00                 	db	0
  1987  00FCED  2E                 	db	46
  1988  00FCEE  2E                 	db	46
  1989  00FCEF  6F                 	db	111
  1990  00FCF0  6F                 	db	111
  1991  00FCF1  4F                 	db	79
  1992  00FCF2  4F                 	db	79
  1993  00FCF3  6F                 	db	111
  1994  00FCF4  6F                 	db	111
  1995  00FCF5  00                 	db	0
  1996  00FCF6  00                 	db	0
  1997  00FCF7  00                 	db	0
  1998  00FCF8  00                 	db	0
  1999  00FCF9  00                 	db	0
  2000  00FCFA  00                 	db	0
  2001  00FCFB  00                 	db	0
  2002  00FCFC  00                 	db	0
  2003  00FCFD  00                 	db	0
  2004  00FCFE  00                 	db	0
  2005  00FCFF  00                 	db	0
  2006  00FD00  00                 	db	0
  2007  00FD01                     __end_of_spin:
  2008                           	opt callstack 0
  2009  00FD01  0000               	dw	0
  2010  00FD03  3F80               	dw	16256
  2011  00FD05  0000               	dw	0
  2012  00FD07  3FC0               	dw	16320
  2013  00FD09                     __end_of_bp:
  2014                           	opt callstack 0
  2015  00FD09  AA00               	dw	43520
  2016  00FD0B  3FB8               	dw	16312
  2017  00FD0D                     __end_of_ivln2_h:
  2018                           	opt callstack 0
  2019  00FD0D  23C6               	dw	9158
  2020  00FD0F  B8F6               	dw	47350
  2021  00FD11                     __end_of_cp_l:
  2022                           	opt callstack 0
  2023  00FD11  4000               	dw	16384
  2024  00FD13  3F76               	dw	16246
  2025  00FD15                     __end_of_cp_h:
  2026                           	opt callstack 0
  2027  0000                     _IVTADL	set	14493
  2028  0000                     _IVTADH	set	14494
  2029  0000                     _IVTADU	set	14495
  2030  0000                     _PIR6bits	set	14758
  2031  0000                     _PIR4bits	set	14756
  2032  0000                     _PIE8bits	set	14744
  2033  0000                     _PIR8bits	set	14760
  2034  0000                     _SCANPR	set	14839
  2035  0000                     _DMA2PR	set	14836
  2036  0000                     _DMA1PR	set	14835
  2037  0000                     _MAINPR	set	14834
  2038  0000                     _ISRPR	set	14833
  2039  0000                     _PIE2bits	set	14738
  2040  0000                     _PIR2bits	set	14754
  2041  0000                     _PIE9bits	set	14745
  2042  0000                     _PIR9bits	set	14761
  2043  0000                     _PIE6bits	set	14742
  2044  0000                     _PIE3bits	set	14739
  2045  0000                     _PMD7	set	14791
  2046  0000                     _PMD6	set	14790
  2047  0000                     _PMD5	set	14789
  2048  0000                     _PMD4	set	14788
  2049  0000                     _PMD3	set	14787
  2050  0000                     _PMD2	set	14786
  2051  0000                     _PMD1	set	14785
  2052  0000                     _PMD0	set	14784
  2053  0000                     _OSCTUNE	set	14814
  2054  0000                     _OSCFRQ	set	14815
  2055  0000                     _OSCEN	set	14813
  2056  0000                     _OSCCON3	set	14811
  2057  0000                     _OSCCON1	set	14809
  2058  0000                     _IPR8bits	set	14728
  2059  0000                     _IPR9bits	set	14729
  2060  0000                     _IPR5bits	set	14725
  2061  0000                     _IPR1bits	set	14721
  2062  0000                     _IPR3bits	set	14723
  2063  0000                     _IPR6bits	set	14726
  2064  0000                     _IPR2bits	set	14722
  2065  0000                     _PIE5bits	set	14741
  2066  0000                     _PIE1bits	set	14737
  2067  0000                     _PIR5bits	set	14757
  2068  0000                     _PIR1bits	set	14753
  2069  0000                     _PLLR	set	118496
  2070  0000                     _SPI1SDIPPS	set	15071
  2071  0000                     _U1RXPPS	set	15077
  2072  0000                     _RC6PPS	set	14870
  2073  0000                     _RC5PPS	set	14869
  2074  0000                     _INT1PPS	set	15041
  2075  0000                     _RD1PPS	set	14873
  2076  0000                     _INT0PPS	set	15040
  2077  0000                     _RC3PPS	set	14867
  2078  0000                     _RB6PPS	set	14862
  2079  0000                     _SPI1SCKPPS	set	15070
  2080  0000                     _U2RXPPS	set	15080
  2081  0000                     _SLRCONF	set	14995
  2082  0000                     _SLRCONE	set	14979
  2083  0000                     _SLRCOND	set	14963
  2084  0000                     _SLRCONC	set	14947
  2085  0000                     _SLRCONB	set	14931
  2086  0000                     _SLRCONA	set	14915
  2087  0000                     _ODCOND	set	14962
  2088  0000                     _ODCONC	set	14946
  2089  0000                     _ODCONB	set	14930
  2090  0000                     _ODCONA	set	14914
  2091  0000                     _ODCONF	set	14994
  2092  0000                     _ODCONE	set	14978
  2093  0000                     _WPUC	set	14945
  2094  0000                     _WPUA	set	14913
  2095  0000                     _WPUB	set	14929
  2096  0000                     _WPUE	set	14977
  2097  0000                     _WPUF	set	14993
  2098  0000                     _WPUD	set	14961
  2099  0000                     _ANSELA	set	14912
  2100  0000                     _ANSELF	set	14992
  2101  0000                     _ANSELE	set	14976
  2102  0000                     _ANSELB	set	14928
  2103  0000                     _ANSELC	set	14944
  2104  0000                     _ANSELD	set	14960
  2105  0000                     _DMA2SSA	set	15321
  2106  0000                     _DMA1SSA	set	15353
  2107  0000                     _DMA2DSZ	set	15310
  2108  0000                     _DMA2SSZ	set	15319
  2109  0000                     _DMA2DSA	set	15312
  2110  0000                     _DMA1DSZ	set	15342
  2111  0000                     _DMA1SSZ	set	15351
  2112  0000                     _DMA1DSA	set	15344
  2113  0000                     _DMA2CON0bits	set	15324
  2114  0000                     _DMA2CON1bits	set	15325
  2115  0000                     _DMA1CON0bits	set	15356
  2116  0000                     _DMA1CON1bits	set	15357
  2117  0000                     _DMA2CON0	set	15324
  2118  0000                     _DMA2AIRQ	set	15326
  2119  0000                     _DMA2SIRQ	set	15327
  2120  0000                     _DMA2CON1	set	15325
  2121  0000                     _DMA1CON0	set	15356
  2122  0000                     _DMA1AIRQ	set	15358
  2123  0000                     _DMA1SIRQ	set	15359
  2124  0000                     _DMA1CON1	set	15357
  2125  0000                     _CLKRCON	set	15589
  2126  0000                     _CLKRCLK	set	15590
  2127  0000                     _SPI1INTFbits	set	15642
  2128  0000                     _SPI1RXB	set	15632
  2129  0000                     _SPI1TXB	set	15633
  2130  0000                     _SPI1TCNTL	set	15634
  2131  0000                     _SPI1CON0	set	15636
  2132  0000                     _SPI1CLK	set	15644
  2133  0000                     _SPI1BAUD	set	15641
  2134  0000                     _SPI1CON2	set	15638
  2135  0000                     _SPI1CON1	set	15637
  2136  0000                     _U2RXB	set	15824
  2137  0000                     _U2TXB	set	15826
  2138  0000                     _U2ERRIE	set	15842
  2139  0000                     _U2ERRIR	set	15841
  2140  0000                     _U2UIR	set	15840
  2141  0000                     _U2FIFO	set	15839
  2142  0000                     _U2BRGH	set	15838
  2143  0000                     _U2BRGL	set	15837
  2144  0000                     _U2CON2	set	15836
  2145  0000                     _U2CON1	set	15835
  2146  0000                     _U2CON0	set	15834
  2147  0000                     _U2P3L	set	15832
  2148  0000                     _U2P2L	set	15830
  2149  0000                     _U2P1L	set	15828
  2150  0000                     _U1RXB	set	15848
  2151  0000                     _U1ERRIE	set	15866
  2152  0000                     _U1ERRIR	set	15865
  2153  0000                     _U1UIR	set	15864
  2154  0000                     _U1FIFO	set	15863
  2155  0000                     _U1BRGH	set	15862
  2156  0000                     _U1BRGL	set	15861
  2157  0000                     _U1CON2	set	15860
  2158  0000                     _U1CON1	set	15859
  2159  0000                     _U1CON0	set	15858
  2160  0000                     _U1P3H	set	15857
  2161  0000                     _U1P3L	set	15856
  2162  0000                     _U1P2H	set	15855
  2163  0000                     _U1P2L	set	15854
  2164  0000                     _U1P1H	set	15853
  2165  0000                     _U1P1L	set	15852
  2166  0000                     _FVRCON	set	16065
  2167  0000                     _ADFLTRL	set	16102
  2168  0000                     _ADFLTRH	set	16103
  2169  0000                     _ADCON0bits	set	16120
  2170  0000                     _ADCON0	set	16120
  2171  0000                     _ADCLK	set	16127
  2172  0000                     _ADACT	set	16126
  2173  0000                     _ADREF	set	16125
  2174  0000                     _ADSTAT	set	16124
  2175  0000                     _ADCON3	set	16123
  2176  0000                     _ADCON2	set	16122
  2177  0000                     _ADCON1	set	16121
  2178  0000                     _ADPREH	set	16119
  2179  0000                     _ADPREL	set	16118
  2180  0000                     _ADCAP	set	16117
  2181  0000                     _ADACQH	set	16116
  2182  0000                     _ADACQL	set	16115
  2183  0000                     _ADPCH	set	16113
  2184  0000                     _ADRPT	set	16108
  2185  0000                     _ADACCU	set	16106
  2186  0000                     _ADSTPTH	set	16101
  2187  0000                     _ADSTPTL	set	16100
  2188  0000                     _ADUTHH	set	16097
  2189  0000                     _ADUTHL	set	16096
  2190  0000                     _ADLTHH	set	16095
  2191  0000                     _ADLTHL	set	16094
  2192  0000                     _CCPTMRS1bits	set	16223
  2193  0000                     _PORTFbits	set	16335
  2194  0000                     _LATCbits	set	16316
  2195  0000                     _LATDbits	set	16317
  2196  0000                     _PORTBbits	set	16331
  2197  0000                     _T3CONbits	set	16294
  2198  0000                     _T3CON	set	16294
  2199  0000                     _TMR3L	set	16292
  2200  0000                     _TMR3H	set	16293
  2201  0000                     _T3CLK	set	16297
  2202  0000                     _T3GATE	set	16296
  2203  0000                     _T3GCON	set	16295
  2204  0000                     _T2CON	set	16300
  2205  0000                     _T2TMR	set	16298
  2206  0000                     _T2PR	set	16299
  2207  0000                     _T2RST	set	16303
  2208  0000                     _T2HLT	set	16301
  2209  0000                     _T2CLKCON	set	16302
  2210  0000                     _PWM8DCL	set	16224
  2211  0000                     _PWM8DCH	set	16225
  2212  0000                     _PWM8CON	set	16226
  2213  0000                     _LATEbits	set	16318
  2214  0000                     _T5CONbits	set	16282
  2215  0000                     _T5CON	set	16282
  2216  0000                     _TMR5L	set	16280
  2217  0000                     _TMR5H	set	16281
  2218  0000                     _T5CLK	set	16285
  2219  0000                     _T5GATE	set	16284
  2220  0000                     _T5GCON	set	16283
  2221  0000                     _T6CON	set	16276
  2222  0000                     _T6TMR	set	16274
  2223  0000                     _T6PR	set	16275
  2224  0000                     _T6RST	set	16279
  2225  0000                     _T6HLT	set	16277
  2226  0000                     _T6CLKCON	set	16278
  2227  0000                     _TRISD	set	16325
  2228  0000                     _TRISC	set	16324
  2229  0000                     _TRISB	set	16323
  2230  0000                     _TRISA	set	16322
  2231  0000                     _TRISF	set	16327
  2232  0000                     _TRISE	set	16326
  2233  0000                     _LATC	set	16316
  2234  0000                     _LATB	set	16315
  2235  0000                     _LATF	set	16319
  2236  0000                     _LATA	set	16314
  2237  0000                     _LATD	set	16317
  2238  0000                     _LATE	set	16318
  2239  0000                     _IVTLOCKbits	set	16340
  2240  0000                     _IVTLOCK	set	16340
  2241  0000                     _INTCON0bits	set	16338
  2242  0000                     _GIE	set	130711
  2243  00FD15                     STR_56:
  2244                           
  2245                           ; BSR set to: 57
  2246  00FD15  20                 	db	32
  2247  00FD16  25                 	db	37
  2248  00FD17  6C                 	db	108	;'l'
  2249  00FD18  75                 	db	117	;'u'
  2250  00FD19  2C                 	db	44
  2251  00FD1A  25                 	db	37
  2252  00FD1B  34                 	db	52	;'4'
  2253  00FD1C  2E                 	db	46
  2254  00FD1D  34                 	db	52	;'4'
  2255  00FD1E  66                 	db	102	;'f'
  2256  00FD1F  2C                 	db	44
  2257  00FD20  25                 	db	37
  2258  00FD21  34                 	db	52	;'4'
  2259  00FD22  2E                 	db	46
  2260  00FD23  34                 	db	52	;'4'
  2261  00FD24  66                 	db	102	;'f'
  2262  00FD25  2C                 	db	44
  2263  00FD26  25                 	db	37
  2264  00FD27  34                 	db	52	;'4'
  2265  00FD28  2E                 	db	46
  2266  00FD29  34                 	db	52	;'4'
  2267  00FD2A  66                 	db	102	;'f'
  2268  00FD2B  2C                 	db	44
  2269  00FD2C  25                 	db	37
  2270  00FD2D  34                 	db	52	;'4'
  2271  00FD2E  2E                 	db	46
  2272  00FD2F  34                 	db	52	;'4'
  2273  00FD30  66                 	db	102	;'f'
  2274  00FD31  2C                 	db	44
  2275  00FD32  25                 	db	37
  2276  00FD33  34                 	db	52	;'4'
  2277  00FD34  2E                 	db	46
  2278  00FD35  33                 	db	51	;'3'
  2279  00FD36  66                 	db	102	;'f'
  2280  00FD37  2C                 	db	44
  2281  00FD38  25                 	db	37
  2282  00FD39  34                 	db	52	;'4'
  2283  00FD3A  2E                 	db	46
  2284  00FD3B  33                 	db	51	;'3'
  2285  00FD3C  66                 	db	102	;'f'
  2286  00FD3D  2C                 	db	44
  2287  00FD3E  25                 	db	37
  2288  00FD3F  34                 	db	52	;'4'
  2289  00FD40  2E                 	db	46
  2290  00FD41  33                 	db	51	;'3'
  2291  00FD42  66                 	db	102	;'f'
  2292  00FD43  2C                 	db	44
  2293  00FD44  25                 	db	37
  2294  00FD45  34                 	db	52	;'4'
  2295  00FD46  2E                 	db	46
  2296  00FD47  33                 	db	51	;'3'
  2297  00FD48  66                 	db	102	;'f'
  2298  00FD49  2C                 	db	44
  2299  00FD4A  25                 	db	37
  2300  00FD4B  34                 	db	52	;'4'
  2301  00FD4C  2E                 	db	46
  2302  00FD4D  33                 	db	51	;'3'
  2303  00FD4E  66                 	db	102	;'f'
  2304  00FD4F  2C                 	db	44
  2305  00FD50  25                 	db	37
  2306  00FD51  34                 	db	52	;'4'
  2307  00FD52  2E                 	db	46
  2308  00FD53  33                 	db	51	;'3'
  2309  00FD54  66                 	db	102	;'f'
  2310  00FD55  2C                 	db	44
  2311  00FD56  25                 	db	37
  2312  00FD57  34                 	db	52	;'4'
  2313  00FD58  2E                 	db	46
  2314  00FD59  33                 	db	51	;'3'
  2315  00FD5A  64                 	db	100	;'d'
  2316  00FD5B  2C                 	db	44
  2317  00FD5C  25                 	db	37
  2318  00FD5D  34                 	db	52	;'4'
  2319  00FD5E  2E                 	db	46
  2320  00FD5F  33                 	db	51	;'3'
  2321  00FD60  64                 	db	100	;'d'
  2322  00FD61  2C                 	db	44
  2323  00FD62  25                 	db	37
  2324  00FD63  32                 	db	50	;'2'
  2325  00FD64  2E                 	db	46
  2326  00FD65  36                 	db	54	;'6'
  2327  00FD66  66                 	db	102	;'f'
  2328  00FD67  0D                 	db	13
  2329  00FD68  0A                 	db	10
  2330  00FD69  00                 	db	0
  2331  00FD6A                     STR_17:
  2332                           
  2333                           ; BSR set to: 57
  2334  00FD6A  52                 	db	82	;'R'
  2335  00FD6B  31                 	db	49	;'1'
  2336  00FD6C  20                 	db	32
  2337  00FD6D  25                 	db	37
  2338  00FD6E  32                 	db	50	;'2'
  2339  00FD6F  2E                 	db	46
  2340  00FD70  33                 	db	51	;'3'
  2341  00FD71  66                 	db	102	;'f'
  2342  00FD72  20                 	db	32
  2343  00FD73  25                 	db	37
  2344  00FD74  33                 	db	51	;'3'
  2345  00FD75  2E                 	db	46
  2346  00FD76  34                 	db	52	;'4'
  2347  00FD77  66                 	db	102	;'f'
  2348  00FD78  20                 	db	32
  2349  00FD79  20                 	db	32
  2350  00FD7A  20                 	db	32
  2351  00FD7B  20                 	db	32
  2352  00FD7C  20                 	db	32
  2353  00FD7D  20                 	db	32
  2354  00FD7E  20                 	db	32
  2355  00FD7F  20                 	db	32
  2356  00FD80  20                 	db	32
  2357  00FD81  20                 	db	32
  2358  00FD82  20                 	db	32
  2359  00FD83  00                 	db	0
  2360  00FD84                     STR_18:
  2361                           
  2362                           ; BSR set to: 57
  2363  00FD84  52                 	db	82	;'R'
  2364  00FD85  32                 	db	50	;'2'
  2365  00FD86  20                 	db	32
  2366  00FD87  25                 	db	37
  2367  00FD88  32                 	db	50	;'2'
  2368  00FD89  2E                 	db	46
  2369  00FD8A  33                 	db	51	;'3'
  2370  00FD8B  66                 	db	102	;'f'
  2371  00FD8C  20                 	db	32
  2372  00FD8D  25                 	db	37
  2373  00FD8E  33                 	db	51	;'3'
  2374  00FD8F  2E                 	db	46
  2375  00FD90  34                 	db	52	;'4'
  2376  00FD91  66                 	db	102	;'f'
  2377  00FD92  20                 	db	32
  2378  00FD93  20                 	db	32
  2379  00FD94  20                 	db	32
  2380  00FD95  20                 	db	32
  2381  00FD96  20                 	db	32
  2382  00FD97  20                 	db	32
  2383  00FD98  20                 	db	32
  2384  00FD99  20                 	db	32
  2385  00FD9A  20                 	db	32
  2386  00FD9B  20                 	db	32
  2387  00FD9C  20                 	db	32
  2388  00FD9D  00                 	db	0
  2389  00FD9E                     
  2390                           ; BSR set to: 57
  2391  00FD9E  20                 	db	32
  2392  00FD9F  4D                 	db	77	;'M'
  2393  00FDA0  65                 	db	101	;'e'
  2394  00FDA1  73                 	db	115	;'s'
  2395  00FDA2  67                 	db	103	;'g'
  2396  00FDA3  20                 	db	32
  2397  00FDA4  25                 	db	37
  2398  00FDA5  64                 	db	100	;'d'
  2399  00FDA6  20                 	db	32
  2400  00FDA7  53                 	db	83	;'S'
  2401  00FDA8  74                 	db	116	;'t'
  2402  00FDA9  61                 	db	97	;'a'
  2403  00FDAA  63                 	db	99	;'c'
  2404  00FDAB  6B                 	db	107	;'k'
  2405  00FDAC  20                 	db	32
  2406  00FDAD  25                 	db	37
  2407  00FDAE  64                 	db	100	;'d'
  2408  00FDAF  20                 	db	32
  2409  00FDB0  20                 	db	32
  2410  00FDB1  20                 	db	32
  2411  00FDB2  20                 	db	32
  2412  00FDB3  20                 	db	32
  2413  00FDB4  20                 	db	32
  2414  00FDB5  00                 	db	0
  2415  00FDB6                     STR_9:
  2416                           
  2417                           ; BSR set to: 57
  2418  00FDB6  53                 	db	83	;'S'
  2419  00FDB7  20                 	db	32
  2420  00FDB8  53                 	db	83	;'S'
  2421  00FDB9  25                 	db	37
  2422  00FDBA  63                 	db	99	;'c'
  2423  00FDBB  43                 	db	67	;'C'
  2424  00FDBC  20                 	db	32
  2425  00FDBD  25                 	db	37
  2426  00FDBE  64                 	db	100	;'d'
  2427  00FDBF  20                 	db	32
  2428  00FDC0  25                 	db	37
  2429  00FDC1  32                 	db	50	;'2'
  2430  00FDC2  2E                 	db	46
  2431  00FDC3  34                 	db	52	;'4'
  2432  00FDC4  66                 	db	102	;'f'
  2433  00FDC5  20                 	db	32
  2434  00FDC6  20                 	db	32
  2435  00FDC7  20                 	db	32
  2436  00FDC8  20                 	db	32
  2437  00FDC9  20                 	db	32
  2438  00FDCA  20                 	db	32
  2439  00FDCB  20                 	db	32
  2440  00FDCC  00                 	db	0
  2441  00FDCD                     STR_16:
  2442                           
  2443                           ; BSR set to: 57
  2444  00FDCD  45                 	db	69	;'E'
  2445  00FDCE  53                 	db	83	;'S'
  2446  00FDCF  52                 	db	82	;'R'
  2447  00FDD0  20                 	db	32
  2448  00FDD1  20                 	db	32
  2449  00FDD2  25                 	db	37
  2450  00FDD3  32                 	db	50	;'2'
  2451  00FDD4  2E                 	db	46
  2452  00FDD5  36                 	db	54	;'6'
  2453  00FDD6  66                 	db	102	;'f'
  2454  00FDD7  20                 	db	32
  2455  00FDD8  20                 	db	32
  2456  00FDD9  20                 	db	32
  2457  00FDDA  20                 	db	32
  2458  00FDDB  20                 	db	32
  2459  00FDDC  20                 	db	32
  2460  00FDDD  20                 	db	32
  2461  00FDDE  20                 	db	32
  2462  00FDDF  20                 	db	32
  2463  00FDE0  20                 	db	32
  2464  00FDE1  20                 	db	32
  2465  00FDE2  00                 	db	0
  2466  00FDE3                     STR_10:
  2467                           
  2468                           ; BSR set to: 57
  2469  00FDE3  53                 	db	83	;'S'
  2470  00FDE4  74                 	db	116	;'t'
  2471  00FDE5  61                 	db	97	;'a'
  2472  00FDE6  74                 	db	116	;'t'
  2473  00FDE7  69                 	db	105	;'i'
  2474  00FDE8  63                 	db	99	;'c'
  2475  00FDE9  20                 	db	32
  2476  00FDEA  53                 	db	83	;'S'
  2477  00FDEB  4F                 	db	79	;'O'
  2478  00FDEC  43                 	db	67	;'C'
  2479  00FDED  20                 	db	32
  2480  00FDEE  25                 	db	37
  2481  00FDEF  64                 	db	100	;'d'
  2482  00FDF0  20                 	db	32
  2483  00FDF1  20                 	db	32
  2484  00FDF2  20                 	db	32
  2485  00FDF3  20                 	db	32
  2486  00FDF4  20                 	db	32
  2487  00FDF5  20                 	db	32
  2488  00FDF6  20                 	db	32
  2489  00FDF7  20                 	db	32
  2490  00FDF8  00                 	db	0
  2491  00FDF9                     STR_11:
  2492                           
  2493                           ; BSR set to: 57
  2494  00FDF9  42                 	db	66	;'B'
  2495  00FDFA  61                 	db	97	;'a'
  2496  00FDFB  74                 	db	116	;'t'
  2497  00FDFC  74                 	db	116	;'t'
  2498  00FDFD  65                 	db	101	;'e'
  2499  00FDFE  72                 	db	114	;'r'
  2500  00FDFF  79                 	db	121	;'y'
  2501  00FE00  20                 	db	32
  2502  00FE01  41                 	db	65	;'A'
  2503  00FE02  68                 	db	104	;'h'
  2504  00FE03  20                 	db	32
  2505  00FE04  25                 	db	37
  2506  00FE05  33                 	db	51	;'3'
  2507  00FE06  2E                 	db	46
  2508  00FE07  32                 	db	50	;'2'
  2509  00FE08  66                 	db	102	;'f'
  2510  00FE09  20                 	db	32
  2511  00FE0A  20                 	db	32
  2512  00FE0B  20                 	db	32
  2513  00FE0C  20                 	db	32
  2514  00FE0D  20                 	db	32
  2515  00FE0E  00                 	db	0
  2516  00FE0F                     STR_15:
  2517                           
  2518                           ; BSR set to: 57
  2519  00FE0F  43                 	db	67	;'C'
  2520  00FE10  68                 	db	104	;'h'
  2521  00FE11  65                 	db	101	;'e'
  2522  00FE12  63                 	db	99	;'c'
  2523  00FE13  6B                 	db	107	;'k'
  2524  00FE14  69                 	db	105	;'i'
  2525  00FE15  6E                 	db	110	;'n'
  2526  00FE16  67                 	db	103	;'g'
  2527  00FE17  20                 	db	32
  2528  00FE18  25                 	db	37
  2529  00FE19  32                 	db	50	;'2'
  2530  00FE1A  2E                 	db	46
  2531  00FE1B  31                 	db	49	;'1'
  2532  00FE1C  66                 	db	102	;'f'
  2533  00FE1D  20                 	db	32
  2534  00FE1E  25                 	db	37
  2535  00FE1F  63                 	db	99	;'c'
  2536  00FE20  20                 	db	32
  2537  00FE21  20                 	db	32
  2538  00FE22  20                 	db	32
  2539  00FE23  20                 	db	32
  2540  00FE24  00                 	db	0
  2541  00FE25                     STR_30:
  2542                           
  2543                           ; BSR set to: 57
  2544  00FE25  53                 	db	83	;'S'
  2545  00FE26  25                 	db	37
  2546  00FE27  63                 	db	99	;'c'
  2547  00FE28  43                 	db	67	;'C'
  2548  00FE29  20                 	db	32
  2549  00FE2A  25                 	db	37
  2550  00FE2B  64                 	db	100	;'d'
  2551  00FE2C  20                 	db	32
  2552  00FE2D  52                 	db	82	;'R'
  2553  00FE2E  55                 	db	85	;'U'
  2554  00FE2F  4E                 	db	78	;'N'
  2555  00FE30  20                 	db	32
  2556  00FE31  25                 	db	37
  2557  00FE32  64                 	db	100	;'d'
  2558  00FE33  20                 	db	32
  2559  00FE34  20                 	db	32
  2560  00FE35  20                 	db	32
  2561  00FE36  20                 	db	32
  2562  00FE37  20                 	db	32
  2563  00FE38  00                 	db	0
  2564  00FE39                     STR_29:
  2565                           
  2566                           ; BSR set to: 57
  2567  00FE39  42                 	db	66	;'B'
  2568  00FE3A  41                 	db	65	;'A'
  2569  00FE3B  48                 	db	72	;'H'
  2570  00FE3C  20                 	db	32
  2571  00FE3D  25                 	db	37
  2572  00FE3E  33                 	db	51	;'3'
  2573  00FE3F  2E                 	db	46
  2574  00FE40  32                 	db	50	;'2'
  2575  00FE41  66                 	db	102	;'f'
  2576  00FE42  20                 	db	32
  2577  00FE43  50                 	db	80	;'P'
  2578  00FE44  25                 	db	37
  2579  00FE45  33                 	db	51	;'3'
  2580  00FE46  2E                 	db	46
  2581  00FE47  32                 	db	50	;'2'
  2582  00FE48  66                 	db	102	;'f'
  2583  00FE49  20                 	db	32
  2584  00FE4A  20                 	db	32
  2585  00FE4B  20                 	db	32
  2586  00FE4C  00                 	db	0
  2587  00FE4D                     STR_49:
  2588                           
  2589                           ; BSR set to: 57
  2590  00FE4D  20                 	db	32
  2591  00FE4E  20                 	db	32
  2592  00FE4F  20                 	db	32
  2593  00FE50  20                 	db	32
  2594  00FE51  20                 	db	32
  2595  00FE52  20                 	db	32
  2596  00FE53  20                 	db	32
  2597  00FE54  20                 	db	32
  2598  00FE55  20                 	db	32
  2599  00FE56  20                 	db	32
  2600  00FE57  20                 	db	32
  2601  00FE58  20                 	db	32
  2602  00FE59  20                 	db	32
  2603  00FE5A  20                 	db	32
  2604  00FE5B  20                 	db	32
  2605  00FE5C  20                 	db	32
  2606  00FE5D  20                 	db	32
  2607  00FE5E  20                 	db	32
  2608  00FE5F  00                 	db	0
  2609  00FE60                     STR_39:
  2610                           
  2611                           ; BSR set to: 57
  2612  00FE60  48                 	db	72	;'H'
  2613  00FE61  45                 	db	69	;'E'
  2614  00FE62  4C                 	db	76	;'L'
  2615  00FE63  50                 	db	80	;'P'
  2616  00FE64  20                 	db	32
  2617  00FE65  25                 	db	37
  2618  00FE66  73                 	db	115	;'s'
  2619  00FE67  20                 	db	32
  2620  00FE68  20                 	db	32
  2621  00FE69  20                 	db	32
  2622  00FE6A  20                 	db	32
  2623  00FE6B  20                 	db	32
  2624  00FE6C  20                 	db	32
  2625  00FE6D  20                 	db	32
  2626  00FE6E  20                 	db	32
  2627  00FE6F  20                 	db	32
  2628  00FE70  20                 	db	32
  2629  00FE71  20                 	db	32
  2630  00FE72  00                 	db	0
  2631  00FE73                     
  2632                           ; BSR set to: 57
  2633  00FE73  44                 	db	68	;'D'
  2634  00FE74  49                 	db	73	;'I'
  2635  00FE75  53                 	db	83	;'S'
  2636  00FE76  50                 	db	80	;'P'
  2637  00FE77  4C                 	db	76	;'L'
  2638  00FE78  41                 	db	65	;'A'
  2639  00FE79  59                 	db	89	;'Y'
  2640  00FE7A  20                 	db	32
  2641  00FE7B  25                 	db	37
  2642  00FE7C  73                 	db	115	;'s'
  2643  00FE7D  20                 	db	32
  2644  00FE7E  20                 	db	32
  2645  00FE7F  20                 	db	32
  2646  00FE80  20                 	db	32
  2647  00FE81  20                 	db	32
  2648  00FE82  20                 	db	32
  2649  00FE83  20                 	db	32
  2650  00FE84  20                 	db	32
  2651  00FE85  00                 	db	0
  2652  00FE86                     STR_22:
  2653                           
  2654                           ; BSR set to: 57
  2655  00FE86  50                 	db	80	;'P'
  2656  00FE87  56                 	db	86	;'V'
  2657  00FE88  20                 	db	32
  2658  00FE89  20                 	db	32
  2659  00FE8A  20                 	db	32
  2660  00FE8B  50                 	db	80	;'P'
  2661  00FE8C  57                 	db	87	;'W'
  2662  00FE8D  52                 	db	82	;'R'
  2663  00FE8E  20                 	db	32
  2664  00FE8F  25                 	db	37
  2665  00FE90  33                 	db	51	;'3'
  2666  00FE91  2E                 	db	46
  2667  00FE92  32                 	db	50	;'2'
  2668  00FE93  66                 	db	102	;'f'
  2669  00FE94  20                 	db	32
  2670  00FE95  20                 	db	32
  2671  00FE96  20                 	db	32
  2672  00FE97  20                 	db	32
  2673  00FE98  00                 	db	0
  2674  00FE99                     STR_24:
  2675                           
  2676                           ; BSR set to: 57
  2677  00FE99  49                 	db	73	;'I'
  2678  00FE9A  4E                 	db	78	;'N'
  2679  00FE9B  56                 	db	86	;'V'
  2680  00FE9C  20                 	db	32
  2681  00FE9D  20                 	db	32
  2682  00FE9E  50                 	db	80	;'P'
  2683  00FE9F  57                 	db	87	;'W'
  2684  00FEA0  52                 	db	82	;'R'
  2685  00FEA1  20                 	db	32
  2686  00FEA2  25                 	db	37
  2687  00FEA3  33                 	db	51	;'3'
  2688  00FEA4  2E                 	db	46
  2689  00FEA5  32                 	db	50	;'2'
  2690  00FEA6  66                 	db	102	;'f'
  2691  00FEA7  20                 	db	32
  2692  00FEA8  20                 	db	32
  2693  00FEA9  20                 	db	32
  2694  00FEAA  20                 	db	32
  2695  00FEAB  00                 	db	0
  2696  00FEAC                     STR_23:
  2697                           
  2698                           ; BSR set to: 57
  2699  00FEAC  4C                 	db	76	;'L'
  2700  00FEAD  4F                 	db	79	;'O'
  2701  00FEAE  41                 	db	65	;'A'
  2702  00FEAF  44                 	db	68	;'D'
  2703  00FEB0  20                 	db	32
  2704  00FEB1  50                 	db	80	;'P'
  2705  00FEB2  57                 	db	87	;'W'
  2706  00FEB3  52                 	db	82	;'R'
  2707  00FEB4  20                 	db	32
  2708  00FEB5  25                 	db	37
  2709  00FEB6  33                 	db	51	;'3'
  2710  00FEB7  2E                 	db	46
  2711  00FEB8  32                 	db	50	;'2'
  2712  00FEB9  66                 	db	102	;'f'
  2713  00FEBA  20                 	db	32
  2714  00FEBB  20                 	db	32
  2715  00FEBC  20                 	db	32
  2716  00FEBD  20                 	db	32
  2717  00FEBE  00                 	db	0
  2718  00FEBF                     STR_28:
  2719                           
  2720                           ; BSR set to: 57
  2721  00FEBF  42                 	db	66	;'B'
  2722  00FEC0  41                 	db	65	;'A'
  2723  00FEC1  54                 	db	84	;'T'
  2724  00FEC2  54                 	db	84	;'T'
  2725  00FEC3  20                 	db	32
  2726  00FEC4  50                 	db	80	;'P'
  2727  00FEC5  57                 	db	87	;'W'
  2728  00FEC6  52                 	db	82	;'R'
  2729  00FEC7  20                 	db	32
  2730  00FEC8  25                 	db	37
  2731  00FEC9  33                 	db	51	;'3'
  2732  00FECA  2E                 	db	46
  2733  00FECB  32                 	db	50	;'2'
  2734  00FECC  66                 	db	102	;'f'
  2735  00FECD  20                 	db	32
  2736  00FECE  20                 	db	32
  2737  00FECF  20                 	db	32
  2738  00FED0  20                 	db	32
  2739  00FED1  00                 	db	0
  2740  00FED2                     STR_26:
  2741                           
  2742                           ; BSR set to: 57
  2743  00FED2  42                 	db	66	;'B'
  2744  00FED3  56                 	db	86	;'V'
  2745  00FED4  20                 	db	32
  2746  00FED5  25                 	db	37
  2747  00FED6  32                 	db	50	;'2'
  2748  00FED7  2E                 	db	46
  2749  00FED8  32                 	db	50	;'2'
  2750  00FED9  66                 	db	102	;'f'
  2751  00FEDA  20                 	db	32
  2752  00FEDB  42                 	db	66	;'B'
  2753  00FEDC  41                 	db	65	;'A'
  2754  00FEDD  20                 	db	32
  2755  00FEDE  25                 	db	37
  2756  00FEDF  32                 	db	50	;'2'
  2757  00FEE0  2E                 	db	46
  2758  00FEE1  32                 	db	50	;'2'
  2759  00FEE2  66                 	db	102	;'f'
  2760  00FEE3  20                 	db	32
  2761  00FEE4  00                 	db	0
  2762  00FEE5                     STR_27:
  2763                           
  2764                           ; BSR set to: 57
  2765  00FEE5  43                 	db	67	;'C'
  2766  00FEE6  56                 	db	86	;'V'
  2767  00FEE7  20                 	db	32
  2768  00FEE8  25                 	db	37
  2769  00FEE9  32                 	db	50	;'2'
  2770  00FEEA  2E                 	db	46
  2771  00FEEB  32                 	db	50	;'2'
  2772  00FEEC  66                 	db	102	;'f'
  2773  00FEED  20                 	db	32
  2774  00FEEE  4C                 	db	76	;'L'
  2775  00FEEF  41                 	db	65	;'A'
  2776  00FEF0  20                 	db	32
  2777  00FEF1  25                 	db	37
  2778  00FEF2  32                 	db	50	;'2'
  2779  00FEF3  2E                 	db	46
  2780  00FEF4  32                 	db	50	;'2'
  2781  00FEF5  66                 	db	102	;'f'
  2782  00FEF6  20                 	db	32
  2783  00FEF7  00                 	db	0
  2784  00FEF8                     STR_25:
  2785                           
  2786                           ; BSR set to: 57
  2787  00FEF8  50                 	db	80	;'P'
  2788  00FEF9  56                 	db	86	;'V'
  2789  00FEFA  20                 	db	32
  2790  00FEFB  25                 	db	37
  2791  00FEFC  32                 	db	50	;'2'
  2792  00FEFD  2E                 	db	46
  2793  00FEFE  32                 	db	50	;'2'
  2794  00FEFF  66                 	db	102	;'f'
  2795  00FF00  20                 	db	32
  2796  00FF01  50                 	db	80	;'P'
  2797  00FF02  41                 	db	65	;'A'
  2798  00FF03  20                 	db	32
  2799  00FF04  25                 	db	37
  2800  00FF05  32                 	db	50	;'2'
  2801  00FF06  2E                 	db	46
  2802  00FF07  32                 	db	50	;'2'
  2803  00FF08  66                 	db	102	;'f'
  2804  00FF09  20                 	db	32
  2805  00FF0A  00                 	db	0
  2806  00FF0B                     STR_8:
  2807                           
  2808                           ; BSR set to: 57
  2809  00FF0B  42                 	db	66	;'B'
  2810  00FF0C  56                 	db	86	;'V'
  2811  00FF0D  20                 	db	32
  2812  00FF0E  25                 	db	37
  2813  00FF0F  32                 	db	50	;'2'
  2814  00FF10  2E                 	db	46
  2815  00FF11  34                 	db	52	;'4'
  2816  00FF12  66                 	db	102	;'f'
  2817  00FF13  20                 	db	32
  2818  00FF14  20                 	db	32
  2819  00FF15  20                 	db	32
  2820  00FF16  20                 	db	32
  2821  00FF17  20                 	db	32
  2822  00FF18  20                 	db	32
  2823  00FF19  20                 	db	32
  2824  00FF1A  20                 	db	32
  2825  00FF1B  20                 	db	32
  2826  00FF1C  00                 	db	0
  2827  00FF1D                     STR_4:
  2828                           
  2829                           ; BSR set to: 57
  2830  00FF1D  20                 	db	32
  2831  00FF1E  4E                 	db	78	;'N'
  2832  00FF1F  53                 	db	83	;'S'
  2833  00FF20  41                 	db	65	;'A'
  2834  00FF21  53                 	db	83	;'S'
  2835  00FF22  50                 	db	80	;'P'
  2836  00FF23  4F                 	db	79	;'O'
  2837  00FF24  4F                 	db	79	;'O'
  2838  00FF25  4B                 	db	75	;'K'
  2839  00FF26  20                 	db	32
  2840  00FF27  20                 	db	32
  2841  00FF28  20                 	db	32
  2842  00FF29  20                 	db	32
  2843  00FF2A  20                 	db	32
  2844  00FF2B  20                 	db	32
  2845  00FF2C  20                 	db	32
  2846  00FF2D  00                 	db	0
  2847  00FF2E                     STR_12:
  2848                           
  2849                           ; BSR set to: 57
  2850  00FF2E  42                 	db	66	;'B'
  2851  00FF2F  61                 	db	97	;'a'
  2852  00FF30  74                 	db	116	;'t'
  2853  00FF31  74                 	db	116	;'t'
  2854  00FF32  65                 	db	101	;'e'
  2855  00FF33  72                 	db	114	;'r'
  2856  00FF34  79                 	db	121	;'y'
  2857  00FF35  20                 	db	32
  2858  00FF36  45                 	db	69	;'E'
  2859  00FF37  53                 	db	83	;'S'
  2860  00FF38  52                 	db	82	;'R'
  2861  00FF39  20                 	db	32
  2862  00FF3A  20                 	db	32
  2863  00FF3B  20                 	db	32
  2864  00FF3C  20                 	db	32
  2865  00FF3D  20                 	db	32
  2866  00FF3E  00                 	db	0
  2867  00FF3F                     STR_13:
  2868                           
  2869                           ; BSR set to: 57
  2870  00FF3F  43                 	db	67	;'C'
  2871  00FF40  61                 	db	97	;'a'
  2872  00FF41  6C                 	db	108	;'l'
  2873  00FF42  63                 	db	99	;'c'
  2874  00FF43  75                 	db	117	;'u'
  2875  00FF44  6C                 	db	108	;'l'
  2876  00FF45  61                 	db	97	;'a'
  2877  00FF46  74                 	db	116	;'t'
  2878  00FF47  69                 	db	105	;'i'
  2879  00FF48  6F                 	db	111	;'o'
  2880  00FF49  6E                 	db	110	;'n'
  2881  00FF4A  20                 	db	32
  2882  00FF4B  20                 	db	32
  2883  00FF4C  20                 	db	32
  2884  00FF4D  20                 	db	32
  2885  00FF4E  20                 	db	32
  2886  00FF4F  00                 	db	0
  2887  00FF50                     STR_1:
  2888                           
  2889                           ; BSR set to: 57
  2890  00FF50  20                 	db	32
  2891  00FF51  4D                 	db	77	;'M'
  2892  00FF52  42                 	db	66	;'B'
  2893  00FF53  4D                 	db	77	;'M'
  2894  00FF54  43                 	db	67	;'C'
  2895  00FF55  20                 	db	32
  2896  00FF56  53                 	db	83	;'S'
  2897  00FF57  4F                 	db	79	;'O'
  2898  00FF58  4C                 	db	76	;'L'
  2899  00FF59  41                 	db	65	;'A'
  2900  00FF5A  52                 	db	82	;'R'
  2901  00FF5B  4D                 	db	77	;'M'
  2902  00FF5C  4F                 	db	79	;'O'
  2903  00FF5D  4E                 	db	78	;'N'
  2904  00FF5E  20                 	db	32
  2905  00FF5F  20                 	db	32
  2906  00FF60  00                 	db	0
  2907  00FF61                     STR_21:
  2908                           
  2909                           ; BSR set to: 57
  2910  00FF61  25                 	db	37
  2911  00FF62  64                 	db	100	;'d'
  2912  00FF63  20                 	db	32
  2913  00FF64  25                 	db	37
  2914  00FF65  32                 	db	50	;'2'
  2915  00FF66  2E                 	db	46
  2916  00FF67  34                 	db	52	;'4'
  2917  00FF68  66                 	db	102	;'f'
  2918  00FF69  2C                 	db	44
  2919  00FF6A  20                 	db	32
  2920  00FF6B  25                 	db	37
  2921  00FF6C  64                 	db	100	;'d'
  2922  00FF6D  20                 	db	32
  2923  00FF6E  20                 	db	32
  2924  00FF6F  20                 	db	32
  2925  00FF70  23                 	db	35
  2926  00FF71  00                 	db	0
  2927  00FF72                     STR_14:
  2928                           
  2929                           ; BSR set to: 57
  2930  00FF72  43                 	db	67	;'C'
  2931  00FF73  68                 	db	104	;'h'
  2932  00FF74  65                 	db	101	;'e'
  2933  00FF75  63                 	db	99	;'c'
  2934  00FF76  6B                 	db	107	;'k'
  2935  00FF77  20                 	db	32
  2936  00FF78  33                 	db	51	;'3'
  2937  00FF79  30                 	db	48	;'0'
  2938  00FF7A  20                 	db	32
  2939  00FF7B  73                 	db	115	;'s'
  2940  00FF7C  65                 	db	101	;'e'
  2941  00FF7D  63                 	db	99	;'c'
  2942  00FF7E  6F                 	db	111	;'o'
  2943  00FF7F  6E                 	db	110	;'n'
  2944  00FF80  64                 	db	100	;'d'
  2945  00FF81  73                 	db	115	;'s'
  2946  00FF82  00                 	db	0
  2947  00FF83                     STR_19:
  2948                           
  2949                           ; BSR set to: 57
  2950  00FF83  25                 	db	37
  2951  00FF84  64                 	db	100	;'d'
  2952  00FF85  20                 	db	32
  2953  00FF86  25                 	db	37
  2954  00FF87  32                 	db	50	;'2'
  2955  00FF88  2E                 	db	46
  2956  00FF89  34                 	db	52	;'4'
  2957  00FF8A  66                 	db	102	;'f'
  2958  00FF8B  20                 	db	32
  2959  00FF8C  20                 	db	32
  2960  00FF8D  20                 	db	32
  2961  00FF8E  25                 	db	37
  2962  00FF8F  64                 	db	100	;'d'
  2963  00FF90  20                 	db	32
  2964  00FF91  20                 	db	32
  2965  00FF92  00                 	db	0
  2966  00FF93                     STR_43:
  2967                           
  2968                           ; BSR set to: 57
  2969  00FF93  76                 	db	118	;'v'
  2970  00FF94  74                 	db	116	;'t'
  2971  00FF95  65                 	db	101	;'e'
  2972  00FF96  72                 	db	114	;'r'
  2973  00FF97  6D                 	db	109	;'m'
  2974  00FF98  20                 	db	32
  2975  00FF99  25                 	db	37
  2976  00FF9A  78                 	db	120	;'x'
  2977  00FF9B  3A                 	db	58	;':'
  2978  00FF9C  25                 	db	37
  2979  00FF9D  78                 	db	120	;'x'
  2980  00FF9E  20                 	db	32
  2981  00FF9F  20                 	db	32
  2982  00FFA0  20                 	db	32
  2983  00FFA1  00                 	db	0
  2984  00FFA2                     STR_2:
  2985                           
  2986                           ; BSR set to: 57
  2987  00FFA2  20                 	db	32
  2988  00FFA3  56                 	db	86	;'V'
  2989  00FFA4  65                 	db	101	;'e'
  2990  00FFA5  72                 	db	114	;'r'
  2991  00FFA6  73                 	db	115	;'s'
  2992  00FFA7  69                 	db	105	;'i'
  2993  00FFA8  6F                 	db	111	;'o'
  2994  00FFA9  6E                 	db	110	;'n'
  2995  00FFAA  20                 	db	32
  2996  00FFAB  25                 	db	37
  2997  00FFAC  73                 	db	115	;'s'
  2998  00FFAD  20                 	db	32
  2999  00FFAE  20                 	db	32
  3000  00FFAF  20                 	db	32
  3001  00FFB0  00                 	db	0
  3002  00FFB1                     STR_37:
  3003                           
  3004                           ; BSR set to: 57
  3005  00FFB1  44                 	db	68	;'D'
  3006  00FFB2  65                 	db	101	;'e'
  3007  00FFB3  63                 	db	99	;'c'
  3008  00FFB4  20                 	db	32
  3009  00FFB5  31                 	db	49	;'1'
  3010  00FFB6  33                 	db	51	;'3'
  3011  00FFB7  20                 	db	32
  3012  00FFB8  32                 	db	50	;'2'
  3013  00FFB9  30                 	db	48	;'0'
  3014  00FFBA  31                 	db	49	;'1'
  3015  00FFBB  39                 	db	57	;'9'
  3016  00FFBC  00                 	db	0
  3017  00FFBD                     STR_41:
  3018                           
  3019                           ; BSR set to: 57
  3020  00FFBD  25                 	db	37
  3021  00FFBE  73                 	db	115	;'s'
  3022  00FFBF  20                 	db	32
  3023  00FFC0  20                 	db	32
  3024  00FFC1  20                 	db	32
  3025  00FFC2  20                 	db	32
  3026  00FFC3  20                 	db	32
  3027  00FFC4  20                 	db	32
  3028  00FFC5  20                 	db	32
  3029  00FFC6  00                 	db	0
  3030  00FFC7                     STR_38:
  3031                           
  3032                           ; BSR set to: 57
  3033  00FFC7  31                 	db	49	;'1'
  3034  00FFC8  30                 	db	48	;'0'
  3035  00FFC9  3A                 	db	58	;':'
  3036  00FFCA  32                 	db	50	;'2'
  3037  00FFCB  34                 	db	52	;'4'
  3038  00FFCC  3A                 	db	58	;':'
  3039  00FFCD  32                 	db	50	;'2'
  3040  00FFCE  39                 	db	57	;'9'
  3041  00FFCF  00                 	db	0
  3042  00FFD0                     STR_3:
  3043                           
  3044                           ; BSR set to: 57
  3045  00FFD0  31                 	db	49	;'1'
  3046  00FFD1  2E                 	db	46
  3047  00FFD2  30                 	db	48	;'0'
  3048  00FFD3  30                 	db	48	;'0'
  3049  00FFD4  34                 	db	52	;'4'
  3050  00FFD5  00                 	db	0
  3051  00FFD6                     STR_57:
  3052                           
  3053                           ; BSR set to: 57
  3054  00FFD6  49                 	db	73	;'I'
  3055  00FFD7  4E                 	db	78	;'N'
  3056  00FFD8  46                 	db	70	;'F'
  3057  00FFD9  00                 	db	0
  3058  00FFDA                     STR_61:
  3059                           
  3060                           ; BSR set to: 57
  3061  00FFDA  4E                 	db	78	;'N'
  3062  00FFDB  41                 	db	65	;'A'
  3063  00FFDC  4E                 	db	78	;'N'
  3064  00FFDD  00                 	db	0
  3065  00FFDE                     STR_58:
  3066                           
  3067                           ; BSR set to: 57
  3068  00FFDE  69                 	db	105	;'i'
  3069  00FFDF  6E                 	db	110	;'n'
  3070  00FFE0  66                 	db	102	;'f'
  3071  00FFE1  00                 	db	0
  3072  00FFE2                     STR_62:
  3073                           
  3074                           ; BSR set to: 57
  3075  00FFE2  6E                 	db	110	;'n'
  3076  00FFE3  61                 	db	97	;'a'
  3077  00FFE4  6E                 	db	110	;'n'
  3078  00FFE5  00                 	db	0
  3079  00FFE6                     STR_88:
  3080                           
  3081                           ; BSR set to: 57
  3082  00FFE6  6C                 	db	108	;'l'
  3083  00FFE7  58                 	db	88	;'X'
  3084  00FFE8  00                 	db	0
  3085  00FFE9                     STR_65:
  3086                           
  3087                           ; BSR set to: 57
  3088  00FFE9  6C                 	db	108	;'l'
  3089  00FFEA  64                 	db	100	;'d'
  3090  00FFEB  00                 	db	0
  3091  00FFEC                     STR_74:
  3092                           
  3093                           ; BSR set to: 57
  3094  00FFEC  6C                 	db	108	;'l'
  3095  00FFED  66                 	db	102	;'f'
  3096  00FFEE  00                 	db	0
  3097  00FFEF                     STR_69:
  3098                           
  3099                           ; BSR set to: 57
  3100  00FFEF  6C                 	db	108	;'l'
  3101  00FFF0  69                 	db	105	;'i'
  3102  00FFF1  00                 	db	0
  3103  00FFF2                     STR_79:
  3104                           
  3105                           ; BSR set to: 57
  3106  00FFF2  6C                 	db	108	;'l'
  3107  00FFF3  75                 	db	117	;'u'
  3108  00FFF4  00                 	db	0
  3109  00FFF5                     STR_84:
  3110                           
  3111                           ; BSR set to: 57
  3112  00FFF5  6C                 	db	108	;'l'
  3113  00FFF6  78                 	db	120	;'x'
  3114  00FFF7  00                 	db	0
  3115  00FFF8                     STR_35:
  3116                           
  3117                           ; BSR set to: 57
  3118  00FFF8  25                 	db	37
  3119  00FFF9  63                 	db	99	;'c'
  3120  00FFFA  00                 	db	0
  3121  00FFFB                     STR_34:
  3122                           
  3123                           ; BSR set to: 57
  3124  00FFFB  25                 	db	37
  3125  00FFFC  73                 	db	115	;'s'
  3126  00FFFD  00                 	db	0
  3127  0000                     
  3128                           ; #config settings
  3129  00FFFE  00                 	db	0	; dummy byte at the end
  3130  0000                     
  3131                           	psect	cinit
  3132  019036                     __pcinit:
  3133                           	opt callstack 0
  3134  019036                     start_initialization:
  3135                           	opt callstack 0
  3136  019036                     __initialization:
  3137                           	opt callstack 0
  3138                           
  3139                           ; Initialize objects allocated to BIGRAM (512 bytes)
  3140                           ; load TBLPTR registers with __pidataBIGRAM
  3141  019036  0EF2               	movlw	low __pidataBIGRAM
  3142  019038  6EF6               	movwf	tblptrl,c
  3143  01903A  0E78               	movlw	high __pidataBIGRAM
  3144  01903C  6EF7               	movwf	tblptrh,c
  3145  01903E  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3146  019040  6EF8               	movwf	tblptru,c
  3147  019042  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  3148  019046  EE20 F200          	lfsr	2,512
  3149  01904A                     copy_data0:
  3150  01904A  0009               	tblrd		*+
  3151  01904C  006F FFD7 FFEE     	movff	tablat,postinc0
  3152  019052  50DD               	movf	postdec2,w,c
  3153  019054  50D9               	movf	fsr2l,w,c
  3154  019056  E1F9               	bnz	copy_data0
  3155  019058  50DA               	movf	fsr2h,w,c
  3156  01905A  E1F7               	bnz	copy_data0
  3157                           
  3158                           ; Initialize objects allocated to BANK2 (188 bytes)
  3159                           ; load TBLPTR registers with __pidataBANK2
  3160  01905C  0EAC               	movlw	low __pidataBANK2
  3161  01905E  6EF6               	movwf	tblptrl,c
  3162  019060  0E97               	movlw	high __pidataBANK2
  3163  019062  6EF7               	movwf	tblptrh,c
  3164  019064  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  3165  019066  6EF8               	movwf	tblptru,c
  3166  019068  EE00  F200         	lfsr	0,__pdataBANK2
  3167  01906C  EE20 F0BC          	lfsr	2,188
  3168  019070                     copy_data1:
  3169  019070  0009               	tblrd		*+
  3170  019072  006F FFD7 FFEE     	movff	tablat,postinc0
  3171  019078  50DD               	movf	postdec2,w,c
  3172  01907A  50D9               	movf	fsr2l,w,c
  3173  01907C  E1F9               	bnz	copy_data1
  3174                           
  3175                           ; Initialize objects allocated to BANK1 (243 bytes)
  3176                           ; load TBLPTR registers with __pidataBANK1
  3177  01907E  0E50               	movlw	low __pidataBANK1
  3178  019080  6EF6               	movwf	tblptrl,c
  3179  019082  0E93               	movlw	high __pidataBANK1
  3180  019084  6EF7               	movwf	tblptrh,c
  3181  019086  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3182  019088  6EF8               	movwf	tblptru,c
  3183  01908A  EE00  F100         	lfsr	0,__pdataBANK1
  3184  01908E  EE20 F0F3          	lfsr	2,243
  3185  019092                     copy_data2:
  3186  019092  0009               	tblrd		*+
  3187  019094  006F FFD7 FFEE     	movff	tablat,postinc0
  3188  01909A  50DD               	movf	postdec2,w,c
  3189  01909C  50D9               	movf	fsr2l,w,c
  3190  01909E  E1F9               	bnz	copy_data2
  3191                           
  3192                           ; Initialize objects allocated to BANK0 (54 bytes)
  3193                           ; load TBLPTR registers with __pidataBANK0
  3194  0190A0  0EFC               	movlw	low __pidataBANK0
  3195  0190A2  6EF6               	movwf	tblptrl,c
  3196  0190A4  0EAA               	movlw	high __pidataBANK0
  3197  0190A6  6EF7               	movwf	tblptrh,c
  3198  0190A8  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3199  0190AA  6EF8               	movwf	tblptru,c
  3200  0190AC  EE00  F0C4         	lfsr	0,__pdataBANK0
  3201  0190B0  EE20 F036          	lfsr	2,54
  3202  0190B4                     copy_data3:
  3203  0190B4  0009               	tblrd		*+
  3204  0190B6  006F FFD7 FFEE     	movff	tablat,postinc0
  3205  0190BC  50DD               	movf	postdec2,w,c
  3206  0190BE  50D9               	movf	fsr2l,w,c
  3207  0190C0  E1F9               	bnz	copy_data3
  3208                           
  3209                           ; Clear objects allocated to BIGRAM (290 bytes)
  3210  0190C2  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  3211  0190C6  EE20 F122          	lfsr	2,290
  3212  0190CA                     clear_0:
  3213  0190CA  6AEE               	clrf	postinc0,c
  3214  0190CC  50DD               	movf	postdec2,w,c
  3215  0190CE  50D9               	movf	fsr2l,w,c
  3216  0190D0  E1FC               	bnz	clear_0
  3217  0190D2  50DA               	movf	fsr2h,w,c
  3218  0190D4  E1FA               	bnz	clear_0
  3219                           
  3220                           ; Clear objects allocated to BANK5 (255 bytes)
  3221  0190D6  EE01  F100         	lfsr	0,__pbssBANK5
  3222  0190DA  EE20 F0FF          	lfsr	2,255
  3223  0190DE                     clear_1:
  3224  0190DE  6AEE               	clrf	postinc0,c
  3225  0190E0  50DD               	movf	postdec2,w,c
  3226  0190E2  50D9               	movf	fsr2l,w,c
  3227  0190E4  E1FC               	bnz	clear_1
  3228  0190E6  50DA               	movf	fsr2h,w,c
  3229  0190E8  E1FA               	bnz	clear_1
  3230                           
  3231                           ; Clear objects allocated to BANK4 (134 bytes)
  3232  0190EA  EE01  F000         	lfsr	0,__pbssBANK4
  3233  0190EE  0E86               	movlw	134
  3234  0190F0                     clear_2:
  3235  0190F0  6AEE               	clrf	postinc0,c
  3236  0190F2  06E8               	decf	wreg,f,c
  3237  0190F4  E1FD               	bnz	clear_2
  3238                           
  3239                           ; Clear objects allocated to BANK3 (228 bytes)
  3240  0190F6  EE00  F300         	lfsr	0,__pbssBANK3
  3241  0190FA  0EE4               	movlw	228
  3242  0190FC                     clear_3:
  3243  0190FC  6AEE               	clrf	postinc0,c
  3244  0190FE  06E8               	decf	wreg,f,c
  3245  019100  E1FD               	bnz	clear_3
  3246                           
  3247                           ; Clear objects allocated to BANK2 (67 bytes)
  3248  019102  EE00  F2BC         	lfsr	0,__pbssBANK2
  3249  019106  0E43               	movlw	67
  3250  019108                     clear_4:
  3251  019108  6AEE               	clrf	postinc0,c
  3252  01910A  06E8               	decf	wreg,f,c
  3253  01910C  E1FD               	bnz	clear_4
  3254                           
  3255                           ; Clear objects allocated to BANK1 (8 bytes)
  3256  01910E  EE00  F1F3         	lfsr	0,__pbssBANK1
  3257  019112  0E08               	movlw	8
  3258  019114                     clear_5:
  3259  019114  6AEE               	clrf	postinc0,c
  3260  019116  06E8               	decf	wreg,f,c
  3261  019118  E1FD               	bnz	clear_5
  3262                           
  3263                           ; Clear objects allocated to BANK0 (100 bytes)
  3264  01911A  EE00  F060         	lfsr	0,__pbssBANK0
  3265  01911E  0E64               	movlw	100
  3266  019120                     clear_6:
  3267  019120  6AEE               	clrf	postinc0,c
  3268  019122  06E8               	decf	wreg,f,c
  3269  019124  E1FD               	bnz	clear_6
  3270                           
  3271                           ; Clear objects allocated to COMRAM (24 bytes)
  3272  019126  EE00  F021         	lfsr	0,__pbssCOMRAM
  3273  01912A  0E18               	movlw	24
  3274  01912C                     clear_7:
  3275  01912C  6AEE               	clrf	postinc0,c
  3276  01912E  06E8               	decf	wreg,f,c
  3277  019130  E1FD               	bnz	clear_7
  3278                           
  3279                           ;
  3280                           ; Setup IVTBASE
  3281                           ;
  3282  019132  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3283  019134  6ED5               	movwf	213,c
  3284  019136  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3285  019138  6ED6               	movwf	214,c
  3286  01913A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3287  01913C  6ED7               	movwf	215,c
  3288  01913E                     end_of_initialization:
  3289                           	opt callstack 0
  3290  01913E                     __end_of__initialization:
  3291                           	opt callstack 0
  3292  01913E  0100               	movlb	0
  3293  019140  EFF8  F090         	goto	_main	;jump to C main() function
  3294                           
  3295                           	psect	bssCOMRAM
  3296  000021                     __pbssCOMRAM:
  3297                           	opt callstack 0
  3298  000021                     _width:
  3299                           	opt callstack 0
  3300  000021                     	ds	2
  3301  000023                     _prec:
  3302                           	opt callstack 0
  3303  000023                     	ds	2
  3304  000025                     _flags:
  3305                           	opt callstack 0
  3306  000025                     	ds	2
  3307  000027                     _timer3ReloadVal:
  3308                           	opt callstack 0
  3309  000027                     	ds	2
  3310  000029                     TMR5_ISR@CountCallBack:
  3311                           	opt callstack 0
  3312  000029                     	ds	2
  3313  00002B                     _timer5ReloadVal:
  3314                           	opt callstack 0
  3315  00002B                     	ds	2
  3316  00002D                     esr_check@esr_state:
  3317                           	opt callstack 0
  3318  00002D                     	ds	1
  3319  00002E                     Volts_to_SOC@slot:
  3320                           	opt callstack 0
  3321  00002E                     	ds	1
  3322  00002F                     _mode_sw:
  3323                           	opt callstack 0
  3324  00002F                     	ds	1
  3325  000030                     _uart2RxCount:
  3326                           	opt callstack 0
  3327  000030                     	ds	1
  3328  000031                     _uart2RxTail:
  3329                           	opt callstack 0
  3330  000031                     	ds	1
  3331  000032                     _uart2RxHead:
  3332                           	opt callstack 0
  3333  000032                     	ds	1
  3334  000033                     _uart2TxBufferRemaining:
  3335                           	opt callstack 0
  3336  000033                     	ds	1
  3337  000034                     _uart2TxTail:
  3338                           	opt callstack 0
  3339  000034                     	ds	1
  3340  000035                     _uart2TxHead:
  3341                           	opt callstack 0
  3342  000035                     	ds	1
  3343  000036                     _uart1RxCount:
  3344                           	opt callstack 0
  3345  000036                     	ds	1
  3346  000037                     _uart1RxTail:
  3347                           	opt callstack 0
  3348  000037                     	ds	1
  3349  000038                     _uart1RxHead:
  3350                           	opt callstack 0
  3351  000038                     	ds	1
  3352                           
  3353                           	psect	bssBANK0
  3354  000060                     __pbssBANK0:
  3355                           	opt callstack 0
  3356  000060                     _spi_link:
  3357                           	opt callstack 0
  3358  000060                     	ds	12
  3359  00006C                     _uart1RxBuffer:
  3360                           	opt callstack 0
  3361  00006C                     	ds	8
  3362  000074                     spinners@s:
  3363                           	opt callstack 0
  3364  000074                     	ds	6
  3365  00007A                     floorf@F524:
  3366                           	opt callstack 0
  3367  00007A                     	ds	4
  3368  00007E                     fabsf@F463:
  3369                           	opt callstack 0
  3370  00007E                     	ds	4
  3371  000082                     ___fpclassifyf@F463:
  3372                           	opt callstack 0
  3373  000082                     	ds	4
  3374  000086                     calc_ror_data@bcror:
  3375                           	opt callstack 0
  3376  000086                     	ds	4
  3377  00008A                     calc_ror_data@bvror:
  3378                           	opt callstack 0
  3379  00008A                     	ds	4
  3380  00008E                     calc_model_data@bcror:
  3381                           	opt callstack 0
  3382  00008E                     	ds	4
  3383  000092                     calc_model_data@bvror:
  3384                           	opt callstack 0
  3385  000092                     	ds	4
  3386  000096                     _utctime:
  3387                           	opt callstack 0
  3388  000096                     	ds	4
  3389  00009A                     wdtdelay@dcount:
  3390                           	opt callstack 0
  3391  00009A                     	ds	4
  3392  00009E                     _P:
  3393                           	opt callstack 0
  3394  00009E                     	ds	4
  3395  0000A2                     _TMR3_InterruptHandler:
  3396                           	opt callstack 0
  3397  0000A2                     	ds	3
  3398  0000A5                     _TMR5_InterruptHandler:
  3399                           	opt callstack 0
  3400  0000A5                     	ds	3
  3401  0000A8                     _TMR6_InterruptHandler:
  3402                           	opt callstack 0
  3403  0000A8                     	ds	3
  3404  0000AB                     _ADCC_ADTI_InterruptHandler:
  3405                           	opt callstack 0
  3406  0000AB                     	ds	3
  3407  0000AE                     _ADCC_ADI_InterruptHandler:
  3408                           	opt callstack 0
  3409  0000AE                     	ds	3
  3410  0000B1                     _UART1_RxInterruptHandler:
  3411                           	opt callstack 0
  3412  0000B1                     	ds	3
  3413  0000B4                     _UART2_TxInterruptHandler:
  3414                           	opt callstack 0
  3415  0000B4                     	ds	3
  3416  0000B7                     _UART2_RxInterruptHandler:
  3417                           	opt callstack 0
  3418  0000B7                     	ds	3
  3419  0000BA                     _INT1_InterruptHandler:
  3420                           	opt callstack 0
  3421  0000BA                     	ds	3
  3422  0000BD                     _INT0_InterruptHandler:
  3423                           	opt callstack 0
  3424  0000BD                     	ds	3
  3425  0000C0                     _nout:
  3426                           	opt callstack 0
  3427  0000C0                     	ds	2
  3428  0000C2                     TMR3_ISR@CountCallBack:
  3429                           	opt callstack 0
  3430  0000C2                     	ds	2
  3431                           
  3432                           	psect	dataBANK0
  3433  0000C4                     __pdataBANK0:
  3434                           	opt callstack 0
  3435  0000C4                     _R:
  3436                           	opt callstack 0
  3437  0000C4                     	ds	40
  3438  0000EC                     stoa@F1166:
  3439                           	opt callstack 0
  3440  0000EC                     	ds	7
  3441  0000F3                     _H:
  3442                           	opt callstack 0
  3443  0000F3                     	ds	7
  3444                           
  3445                           	psect	bssBANK1
  3446  0001F3                     __pbssBANK1:
  3447                           	opt callstack 0
  3448  0001F3                     _seed:
  3449                           	opt callstack 0
  3450  0001F3                     	ds	8
  3451                           
  3452                           	psect	dataBANK1
  3453  000100                     __pdataBANK1:
  3454                           	opt callstack 0
  3455  000100                     _C:
  3456                           	opt callstack 0
  3457  000100                     	ds	243
  3458                           
  3459                           	psect	bssBANK2
  3460  0002BC                     __pbssBANK2:
  3461                           	opt callstack 0
  3462  0002BC                     _S:
  3463                           	opt callstack 0
  3464  0002BC                     	ds	41
  3465  0002E5                     _tickCount:
  3466                           	opt callstack 0
  3467  0002E5                     	ds	26
  3468                           
  3469                           	psect	dataBANK2
  3470  000200                     __pdataBANK2:
  3471                           	opt callstack 0
  3472  000200                     _V:
  3473                           	opt callstack 0
  3474  000200                     	ds	188
  3475                           
  3476                           	psect	bssBANK3
  3477  000300                     __pbssBANK3:
  3478                           	opt callstack 0
  3479  000300                     lp_filter@smooth:
  3480                           	opt callstack 0
  3481  000300                     	ds	84
  3482  000354                     _uart2TxBuffer:
  3483                           	opt callstack 0
  3484  000354                     	ds	64
  3485  000394                     _dbuf:
  3486                           	opt callstack 0
  3487  000394                     	ds	80
  3488                           
  3489                           	psect	bssBANK4
  3490  000400                     __pbssBANK4:
  3491                           	opt callstack 0
  3492  000400                     _ring_buf2:
  3493                           	opt callstack 0
  3494  000400                     	ds	67
  3495  000443                     _ring_buf1:
  3496                           	opt callstack 0
  3497  000443                     	ds	67
  3498                           
  3499                           	psect	bssBANK5
  3500  000500                     __pbssBANK5:
  3501                           	opt callstack 0
  3502  000500                     _uart2RxBuffer:
  3503                           	opt callstack 0
  3504  000500                     	ds	255
  3505                           
  3506                           	psect	bssBIGRAM
  3507  0007FF                     __pbssBIGRAM:
  3508                           	opt callstack 0
  3509  0007FF                     _D:
  3510                           	opt callstack 0
  3511  0007FF                     	ds	290
  3512                           
  3513                           	psect	dataBIGRAM
  3514  0005FF                     __pdataBIGRAM:
  3515                           	opt callstack 0
  3516  0005FF                     _port_data:
  3517                           	opt callstack 0
  3518  0005FF                     	ds	512
  3519                           
  3520                           	psect	cstackBANK3
  3521  0003E4                     __pcstackBANK3:
  3522                           	opt callstack 0
  3523  0003E4                     ??_TMR3_ISR:
  3524                           
  3525                           ; 1 bytes @ 0x0
  3526  0003E4                     	ds	25
  3527                           
  3528                           	psect	cstackCOMRAM
  3529  000039                     __pcstackCOMRAM:
  3530                           	opt callstack 0
  3531  000039                     ??_ADCC_ThresholdISR:
  3532  000039                     
  3533                           ; 1 bytes @ 0x0
  3534  000039                     	ds	5
  3535  00003E                     ??_TMR6_ISR:
  3536                           
  3537                           ; 1 bytes @ 0x5
  3538  00003E                     	ds	1
  3539  00003F                     ??_INT1_ISR:
  3540  00003F                     
  3541                           ; 1 bytes @ 0x6
  3542  00003F                     	ds	4
  3543  000043                     ??_TMR5_ISR:
  3544                           
  3545                           ; 1 bytes @ 0xA
  3546  000043                     	ds	4
  3547                           
  3548 ;;
  3549 ;;Main: autosize = 12, tempsize = 0, incstack = 0, save=0
  3550 ;;
  3551 ;; *************** function _main *****************
  3552 ;; Defined at:
  3553 ;;		line 174 in file "main.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;  esr_temp        4  [STACK] float 
  3558 ;;  i_esr           2  [STACK] unsigned short 
  3559 ;;  k               1  [STACK] unsigned char 
  3560 ;;  j               1  [STACK] unsigned char 
  3561 ;;  i               1  [STACK] unsigned char 
  3562 ;;  inp_index       1  [STACK] unsigned char 
  3563 ;;  mode            1  [STACK] enum E17013
  3564 ;;  i_ror           1  [STACK] unsigned char 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1  [STACK] void 
  3567 ;; Registers used:
  3568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3578 ;;Total ram usage:        0 bytes
  3579 ;; Hardware stack levels required when called:   28
  3580 ;; This function calls:
  3581 ;;		_SYSTEM_Initialize
  3582 ;;		_StartTimer
  3583 ;;		_TimerDone
  3584 ;;		_WaitMs
  3585 ;;		___flge
  3586 ;;		_calc_model_data
  3587 ;;		_calc_ror_data
  3588 ;;		_check_adc_scan
  3589 ;;		_check_enter_button
  3590 ;;		_check_help
  3591 ;;		_clear_adc_scan
  3592 ;;		_clear_hid_pflags
  3593 ;;		_conv_raw_result
  3594 ;;		_convert_adc_data
  3595 ;;		_eaDogM_WriteCommand
  3596 ;;		_esr_check
  3597 ;;		_get_raw_result
  3598 ;;		_get_switch
  3599 ;;		_get_vterm_ptr
  3600 ;;		_hid_display
  3601 ;;		_init_bsoc
  3602 ;;		_init_display
  3603 ;;		_init_port_dma
  3604 ;;		_lp_filter
  3605 ;;		_mode_lamp_dim
  3606 ;;		_set_display_info
  3607 ;;		_set_load_relay_one
  3608 ;;		_set_load_relay_two
  3609 ;;		_set_vterm
  3610 ;;		_spinners
  3611 ;;		_sprintf
  3612 ;;		_srand
  3613 ;;		_start_adc_scan
  3614 ;;		_start_switch_handler
  3615 ;;		_static_soc
  3616 ;;		_update_lcd
  3617 ;; This function is called by:
  3618 ;;		Startup code after reset
  3619 ;; This function uses a reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text0
  3623  0121F0                     __ptext0:
  3624                           	opt callstack 0
  3625  0121F0                     _main:
  3626                           	opt callstack 0
  3627                           
  3628                           ; autosize = 12, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3629  0121F0  0E0C               	movlw	12
  3630  0121F2  26E1               	addwf	fsr1l,f,c
  3631  0121F4  0E00               	movlw	0
  3632  0121F6  22E2               	addwfc	fsr1h,f,c
  3633                           
  3634                           ;main.c: 176:  UI_STATES mode;;main.c: 177:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3635                           ;stkvar	_inp_index @ sp[(-12)+9]
  3636                           
  3637                           ;incstack = 0
  3638  0121F8  0EFD               	movlw	-3
  3639  0121FA  6AE3               	clrf	plusw1,c
  3640                           
  3641                           ;stkvar	_i @ sp[(-12)+8]
  3642  0121FC  0EFC               	movlw	-4
  3643  0121FE  6AE3               	clrf	plusw1,c
  3644                           
  3645                           ;stkvar	_j @ sp[(-12)+7]
  3646  012200  0EFB               	movlw	-5
  3647  012202  6AE3               	clrf	plusw1,c
  3648  012204  2AE3               	incf	plusw1,f,c
  3649                           
  3650                           ;stkvar	_k @ sp[(-12)+6]
  3651  012206  0EFA               	movlw	-6
  3652  012208  6AE3               	clrf	plusw1,c
  3653  01220A  82E3               	bsf	plusw1,1,c
  3654                           
  3655                           ;main.c: 180:  SYSTEM_Initialize();
  3656  01220C  EC6B  F0D3         	call	_SYSTEM_Initialize	;wreg free
  3657                           
  3658                           ; BSR set to: 60
  3659                           ;main.c: 183:  (INTCON0bits.GIEH = 1);
  3660  012210  8ED2               	bsf	210,7,c	;volatile
  3661                           
  3662                           ; BSR set to: 60
  3663                           ;main.c: 186:  (INTCON0bits.GIEL = 1);
  3664  012212  8CD2               	bsf	210,6,c	;volatile
  3665                           
  3666                           ; BSR set to: 60
  3667                           ;main.c: 188:  V.ui_state = UI_STATE_INIT;
  3668  012214  0102               	movlb	2	; () banked
  3669  012216  6B00               	clrf	_V& (0+255),b	;volatile
  3670                           
  3671                           ; BSR set to: 2
  3672                           ;main.c: 193:  WaitMs(300);
  3673  012218  0E2C               	movlw	44
  3674  01221A  6EE6               	movwf	postinc1,c
  3675  01221C  0E01               	movlw	1
  3676  01221E  6EE6               	movwf	postinc1,c
  3677  012220  EC99  F0D5         	call	_WaitMs	;wreg free
  3678                           
  3679                           ;main.c: 194:  if (PORTBbits.RB0) {
  3680  012224  A0CB               	btfss	203,0,c	;volatile
  3681  012226  D004               	goto	l12562
  3682                           
  3683                           ;main.c: 195:   mode = UI_STATE_HOST;
  3684                           ;stkvar	_mode @ sp[(-12)+10]
  3685  012228  0EFE               	movlw	-2
  3686  01222A  6AE3               	clrf	plusw1,c
  3687  01222C  2AE3               	incf	plusw1,f,c
  3688                           
  3689                           ;main.c: 196:  } else {
  3690  01222E  D004               	goto	l12564
  3691  012230                     l12562:
  3692                           
  3693                           ;main.c: 197:   mode = UI_STATE_LOG;
  3694                           ;stkvar	_mode @ sp[(-12)+10]
  3695  012230  0EFE               	movlw	-2
  3696  012232  6AE3               	clrf	plusw1,c
  3697  012234  80E3               	bsf	plusw1,0,c
  3698  012236  82E3               	bsf	plusw1,1,c	;indir
  3699  012238                     l12564:
  3700                           
  3701                           ;main.c: 200:  if (mode == UI_STATE_HOST) {
  3702                           ;stkvar	_mode @ sp[(-12)+10]
  3703  012238  0EFE               	movlw	-2
  3704  01223A  04E3               	decf	plusw1,w,c
  3705  01223C  A4D8               	btfss	status,2,c
  3706  01223E  D007               	goto	l1320
  3707                           
  3708                           ;main.c: 201:   do { LATDbits.LATD0 = 1; } while(0);
  3709  012240  80BD               	bsf	189,0,c	;volatile
  3710                           
  3711                           ;main.c: 202:   V.mode_pwm = 70;
  3712  012242  0E00               	movlw	0
  3713  012244  0102               	movlb	2	; () banked
  3714  012246  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3715  012248  0E46               	movlw	70
  3716  01224A  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3717                           
  3718                           ;main.c: 203:  } else {
  3719  01224C  D004               	goto	l12568
  3720  01224E                     l1320:
  3721  01224E  90BD               	bcf	189,0,c	;volatile
  3722                           
  3723                           ;main.c: 205:   V.mode_pwm = 0;
  3724  012250  0102               	movlb	2	; () banked
  3725  012252  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3726  012254  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3727  012256                     l12568:
  3728                           
  3729                           ; BSR set to: 2
  3730                           ;main.c: 207:  mode_lamp_dim(V.mode_pwm);
  3731  012256  0060  FA57  FFE6   	movff	_V+149,postinc1
  3732  01225C  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3733  012262  EC61  F0D9         	call	_mode_lamp_dim	;wreg free
  3734  012266  D2EF               	goto	l12684
  3735  012268                     l12570:
  3736                           
  3737                           ; BSR set to: 2
  3738                           ;main.c: 215:    init_port_dma();
  3739  012268  EC1D  F0D6         	call	_init_port_dma	;wreg free
  3740                           
  3741                           ; BSR set to: 59
  3742                           ;main.c: 217:    init_display();
  3743  01226C  EC22  F0CA         	call	_init_display	;wreg free
  3744                           
  3745                           ; BSR set to: 61
  3746                           ;main.c: 218:    eaDogM_WriteCommand(0b00001100);
  3747  012270  0E0C               	movlw	12
  3748  012272  6EE6               	movwf	postinc1,c
  3749  012274  ECC5  F0D9         	call	_eaDogM_WriteCommand	;wreg free
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;main.c: 222:    set_load_relay_one(1);
  3753  012278  0E01               	movlw	1
  3754  01227A  6EE6               	movwf	postinc1,c
  3755  01227C  ECB5  F0D9         	call	_set_load_relay_one	;wreg free
  3756                           
  3757                           ;main.c: 223:    set_load_relay_two(1);
  3758  012280  0E01               	movlw	1
  3759  012282  6EE6               	movwf	postinc1,c
  3760  012284  ECAD  F0D9         	call	_set_load_relay_two	;wreg free
  3761                           
  3762                           ;main.c: 225:    V.ui_state = mode;
  3763                           ;stkvar	_mode @ sp[(-12)+10]
  3764  012288  0EFE               	movlw	-2
  3765  01228A  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3766                           
  3767                           ;main.c: 226:    srand(1957);
  3768  012290  0EA5               	movlw	165
  3769  012292  6EE6               	movwf	postinc1,c
  3770  012294  0E07               	movlw	7
  3771  012296  6EE6               	movwf	postinc1,c
  3772  012298  ECCF  F0D5         	call	_srand	;wreg free
  3773                           
  3774                           ; BSR set to: 1
  3775                           ;main.c: 227:    set_vterm(0);
  3776  01229C  0E00               	movlw	0
  3777  01229E  6EE6               	movwf	postinc1,c
  3778  0122A0  ECEE  F0D8         	call	_set_vterm	;wreg free
  3779                           
  3780                           ;main.c: 228:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3781  0122A4  0E50               	movlw	low STR_1
  3782  0122A6  6EE6               	movwf	postinc1,c
  3783  0122A8  0EFF               	movlw	high STR_1
  3784  0122AA  6EE6               	movwf	postinc1,c
  3785  0122AC  0E00               	movlw	0
  3786  0122AE  6EE6               	movwf	postinc1,c
  3787  0122B0  0E00               	movlw	0
  3788  0122B2  6EE6               	movwf	postinc1,c
  3789  0122B4  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  3790  0122B8  0060  F007  FFE6   	movff	btemp,postinc1
  3791  0122BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3792  0122C4  0E04               	movlw	4
  3793  0122C6  6EE6               	movwf	postinc1,c
  3794  0122C8  ECA2  F0C8         	call	_sprintf	;wreg free
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;main.c: 229:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.004");
  3798  0122CC  0ED0               	movlw	low STR_3
  3799  0122CE  6EE6               	movwf	postinc1,c
  3800  0122D0  0EFF               	movlw	high STR_3
  3801  0122D2  6EE6               	movwf	postinc1,c
  3802  0122D4  0EA2               	movlw	low STR_2
  3803  0122D6  6EE6               	movwf	postinc1,c
  3804  0122D8  0EFF               	movlw	high STR_2
  3805  0122DA  6EE6               	movwf	postinc1,c
  3806  0122DC  0E00               	movlw	0
  3807  0122DE  6EE6               	movwf	postinc1,c
  3808  0122E0  0E01               	movlw	1
  3809  0122E2  6EE6               	movwf	postinc1,c
  3810  0122E4  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  3811  0122E8  0060  F007  FFE6   	movff	btemp,postinc1
  3812  0122EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3813  0122F4  0E06               	movlw	6
  3814  0122F6  6EE6               	movwf	postinc1,c
  3815  0122F8  ECA2  F0C8         	call	_sprintf	;wreg free
  3816                           
  3817                           ; BSR set to: 0
  3818                           ;main.c: 230:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  3819  0122FC  0E1D               	movlw	low STR_4
  3820  0122FE  6EE6               	movwf	postinc1,c
  3821  012300  0EFF               	movlw	high STR_4
  3822  012302  6EE6               	movwf	postinc1,c
  3823  012304  0E00               	movlw	0
  3824  012306  6EE6               	movwf	postinc1,c
  3825  012308  0E02               	movlw	2
  3826  01230A  6EE6               	movwf	postinc1,c
  3827  01230C  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  3828  012310  0060  F007  FFE6   	movff	btemp,postinc1
  3829  012316  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3830  01231C  0E04               	movlw	4
  3831  01231E  6EE6               	movwf	postinc1,c
  3832  012320  ECA2  F0C8         	call	_sprintf	;wreg free
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;main.c: 231:    sprintf(get_vterm_ptr(0, 2), "                ");
  3836  012324  0E4F               	movlw	low (STR_49+2)
  3837  012326  6EE6               	movwf	postinc1,c
  3838  012328  0EFE               	movlw	high (STR_49+2)
  3839  01232A  6EE6               	movwf	postinc1,c
  3840  01232C  0E02               	movlw	2
  3841  01232E  6EE6               	movwf	postinc1,c
  3842  012330  0E00               	movlw	0
  3843  012332  6EE6               	movwf	postinc1,c
  3844  012334  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  3845  012338  0060  F007  FFE6   	movff	btemp,postinc1
  3846  01233E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3847  012344  0E04               	movlw	4
  3848  012346  6EE6               	movwf	postinc1,c
  3849  012348  ECA2  F0C8         	call	_sprintf	;wreg free
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;main.c: 232:    sprintf(get_vterm_ptr(1, 2), "                ");
  3853  01234C  0E4F               	movlw	low (STR_49+2)
  3854  01234E  6EE6               	movwf	postinc1,c
  3855  012350  0EFE               	movlw	high (STR_49+2)
  3856  012352  6EE6               	movwf	postinc1,c
  3857  012354  0E02               	movlw	2
  3858  012356  6EE6               	movwf	postinc1,c
  3859  012358  0E01               	movlw	1
  3860  01235A  6EE6               	movwf	postinc1,c
  3861  01235C  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  3862  012360  0060  F007  FFE6   	movff	btemp,postinc1
  3863  012366  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3864  01236C  0E04               	movlw	4
  3865  01236E  6EE6               	movwf	postinc1,c
  3866  012370  ECA2  F0C8         	call	_sprintf	;wreg free
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;main.c: 233:    sprintf(get_vterm_ptr(2, 2), "                ");
  3870  012374  0E4F               	movlw	low (STR_49+2)
  3871  012376  6EE6               	movwf	postinc1,c
  3872  012378  0EFE               	movlw	high (STR_49+2)
  3873  01237A  6EE6               	movwf	postinc1,c
  3874  01237C  0E02               	movlw	2
  3875  01237E  6EE6               	movwf	postinc1,c
  3876  012380  0E02               	movlw	2
  3877  012382  6EE6               	movwf	postinc1,c
  3878  012384  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  3879  012388  0060  F007  FFE6   	movff	btemp,postinc1
  3880  01238E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3881  012394  0E04               	movlw	4
  3882  012396  6EE6               	movwf	postinc1,c
  3883  012398  ECA2  F0C8         	call	_sprintf	;wreg free
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;main.c: 234:    update_lcd(0);
  3887  01239C  0E00               	movlw	0
  3888  01239E  6EE6               	movwf	postinc1,c
  3889  0123A0  EC93  F0C7         	call	_update_lcd	;wreg free
  3890                           
  3891                           ;main.c: 235:    WaitMs(1000);
  3892  0123A4  0EE8               	movlw	232
  3893  0123A6  6EE6               	movwf	postinc1,c
  3894  0123A8  0E03               	movlw	3
  3895  0123AA  6EE6               	movwf	postinc1,c
  3896  0123AC  EC99  F0D5         	call	_WaitMs	;wreg free
  3897                           
  3898                           ;main.c: 236:    StartTimer(TMR_DISPLAY, 250);
  3899  0123B0  0EFA               	movlw	250
  3900  0123B2  6EE6               	movwf	postinc1,c
  3901  0123B4  0E00               	movlw	0
  3902  0123B6  6EE6               	movwf	postinc1,c
  3903  0123B8  0E0A               	movlw	10
  3904  0123BA  6EE6               	movwf	postinc1,c
  3905  0123BC  ECA6  F0D4         	call	_StartTimer	;wreg free
  3906                           
  3907                           ;main.c: 237:    StartTimer(TMR_ADC, 200);
  3908  0123C0  0EC8               	movlw	200
  3909  0123C2  6EE6               	movwf	postinc1,c
  3910  0123C4  0E00               	movlw	0
  3911  0123C6  6EE6               	movwf	postinc1,c
  3912  0123C8  0E01               	movlw	1
  3913  0123CA  6EE6               	movwf	postinc1,c
  3914  0123CC  ECA6  F0D4         	call	_StartTimer	;wreg free
  3915                           
  3916                           ;main.c: 238:    StartTimer(TMR_INFO, 3000);
  3917  0123D0  0EB8               	movlw	184
  3918  0123D2  6EE6               	movwf	postinc1,c
  3919  0123D4  0E0B               	movlw	11
  3920  0123D6  6EE6               	movwf	postinc1,c
  3921  0123D8  0E07               	movlw	7
  3922  0123DA  6EE6               	movwf	postinc1,c
  3923  0123DC  ECA6  F0D4         	call	_StartTimer	;wreg free
  3924                           
  3925                           ;main.c: 239:    StartTimer(TMR_FLIPPER, 1500);
  3926  0123E0  0EDC               	movlw	220
  3927  0123E2  6EE6               	movwf	postinc1,c
  3928  0123E4  0E05               	movlw	5
  3929  0123E6  6EE6               	movwf	postinc1,c
  3930  0123E8  0E0B               	movlw	11
  3931  0123EA  6EE6               	movwf	postinc1,c
  3932  0123EC  ECA6  F0D4         	call	_StartTimer	;wreg free
  3933                           
  3934                           ;main.c: 240:    StartTimer(TMR_HELPDIS, 3000);
  3935  0123F0  0EB8               	movlw	184
  3936  0123F2  6EE6               	movwf	postinc1,c
  3937  0123F4  0E0B               	movlw	11
  3938  0123F6  6EE6               	movwf	postinc1,c
  3939  0123F8  0E09               	movlw	9
  3940  0123FA  6EE6               	movwf	postinc1,c
  3941  0123FC  ECA6  F0D4         	call	_StartTimer	;wreg free
  3942                           
  3943                           ;main.c: 242:    start_adc_scan();
  3944  012400  EC7E  F0D1         	call	_start_adc_scan	;wreg free
  3945                           
  3946                           ;main.c: 243:    start_switch_handler();
  3947  012404  ECCF  F0D8         	call	_start_switch_handler	;wreg free
  3948                           
  3949                           ; BSR set to: 57
  3950                           ;main.c: 244:    WaitMs(1000);
  3951  012408  0EE8               	movlw	232
  3952  01240A  6EE6               	movwf	postinc1,c
  3953  01240C  0E03               	movlw	3
  3954  01240E  6EE6               	movwf	postinc1,c
  3955  012410  EC99  F0D5         	call	_WaitMs	;wreg free
  3956                           
  3957                           ;main.c: 249:    i_ror = 1;
  3958                           ;stkvar	_i_ror @ sp[(-12)+11]
  3959  012414  0EFF               	movlw	-1
  3960  012416  6AE3               	clrf	plusw1,c
  3961  012418  2AE3               	incf	plusw1,f,c
  3962  01241A                     l12620:
  3963                           
  3964                           ;main.c: 251:     calc_ror_data();
  3965  01241A  ECE2  F0BF         	call	_calc_ror_data	;wreg free
  3966                           
  3967                           ;main.c: 252:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  3968  01241E  0E00               	movlw	0
  3969  012420  6EE6               	movwf	postinc1,c
  3970  012422  0E04               	movlw	4
  3971  012424  6EE6               	movwf	postinc1,c
  3972  012426  EC6F  F0A5         	call	_conv_raw_result	;wreg free
  3973  01242A  0060  F007  FFE6   	movff	btemp,postinc1
  3974  012430  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3975  012436  0060  F00F  FFE6   	movff	btemp+2,postinc1
  3976  01243C  0060  F013  FFE6   	movff	btemp+3,postinc1
  3977  012442  0E0B               	movlw	low STR_8
  3978  012444  6EE6               	movwf	postinc1,c
  3979  012446  0EFF               	movlw	high STR_8
  3980  012448  6EE6               	movwf	postinc1,c
  3981  01244A  0E00               	movlw	0
  3982  01244C  6EE6               	movwf	postinc1,c
  3983  01244E  0E01               	movlw	1
  3984  012450  6EE6               	movwf	postinc1,c
  3985  012452  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  3986  012456  0060  F007  FFE6   	movff	btemp,postinc1
  3987  01245C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3988  012462  0E08               	movlw	8
  3989  012464  6EE6               	movwf	postinc1,c
  3990  012466  ECA2  F0C8         	call	_sprintf	;wreg free
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;main.c: 253:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f       ", spinners(5, 0),
      +                           i_ror, C.bv_ror);
  3994  01246A  0060  F5A3  FFE6   	movff	_C+104,postinc1
  3995  012470  0060  F5A7  FFE6   	movff	_C+105,postinc1
  3996  012476  0060  F5AB  FFE6   	movff	_C+106,postinc1
  3997  01247C  0060  F5AF  FFE6   	movff	_C+107,postinc1
  3998                           
  3999                           ;stkvar	_i_ror @ sp[(-16)+11]
  4000  012482  0EFB               	movlw	-5
  4001  012484  50E3               	movf	plusw1,w,c
  4002  012486  6EE6               	movwf	postinc1,c
  4003  012488  0E00               	movlw	0
  4004  01248A  6EE6               	movwf	postinc1,c
  4005  01248C  0E00               	movlw	0
  4006  01248E  6EE6               	movwf	postinc1,c
  4007  012490  0E05               	movlw	5
  4008  012492  6EE6               	movwf	postinc1,c
  4009  012494  EC97  F0CA         	call	_spinners	;wreg free
  4010  012498  5001               	movf	btemp^0,w,c
  4011  01249A  6EE6               	movwf	postinc1,c
  4012  01249C  0E00               	movlw	0
  4013  01249E  6EE6               	movwf	postinc1,c
  4014  0124A0  0EB6               	movlw	low STR_9
  4015  0124A2  6EE6               	movwf	postinc1,c
  4016  0124A4  0EFD               	movlw	high STR_9
  4017  0124A6  6EE6               	movwf	postinc1,c
  4018  0124A8  0E00               	movlw	0
  4019  0124AA  6EE6               	movwf	postinc1,c
  4020  0124AC  0E02               	movlw	2
  4021  0124AE  6EE6               	movwf	postinc1,c
  4022  0124B0  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4023  0124B4  0060  F007  FFE6   	movff	btemp,postinc1
  4024  0124BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4025  0124C0  0E0C               	movlw	12
  4026  0124C2  6EE6               	movwf	postinc1,c
  4027  0124C4  ECA2  F0C8         	call	_sprintf	;wreg free
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;main.c: 254:     update_lcd(0);
  4031  0124C8  0E00               	movlw	0
  4032  0124CA  6EE6               	movwf	postinc1,c
  4033  0124CC  EC93  F0C7         	call	_update_lcd	;wreg free
  4034                           
  4035                           ;main.c: 255:     WaitMs(2000);
  4036  0124D0  0ED0               	movlw	208
  4037  0124D2  6EE6               	movwf	postinc1,c
  4038  0124D4  0E07               	movlw	7
  4039  0124D6  6EE6               	movwf	postinc1,c
  4040  0124D8  EC99  F0D5         	call	_WaitMs	;wreg free
  4041                           
  4042                           ;main.c: 256:     clear_adc_scan();
  4043  0124DC  EC13  F0DA         	call	_clear_adc_scan	;wreg free
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;main.c: 257:     start_adc_scan();
  4047  0124E0  EC7E  F0D1         	call	_start_adc_scan	;wreg free
  4048                           
  4049                           ;main.c: 258:     WaitMs(500);
  4050  0124E4  0EF4               	movlw	244
  4051  0124E6  6EE6               	movwf	postinc1,c
  4052  0124E8  0E01               	movlw	1
  4053  0124EA  6EE6               	movwf	postinc1,c
  4054  0124EC  EC99  F0D5         	call	_WaitMs	;wreg free
  4055                           
  4056                           ;main.c: 259:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4057                           ;stkvar	_i_ror @ sp[(-12)+11]
  4058  0124F0  0EFF               	movlw	-1
  4059  0124F2  006F FF8C  F00C    	movff	plusw1,btemp+11
  4060  0124F8  2A0C               	incf	(btemp+11)^0,f,c
  4061  0124FA  0060  F033  FFE3   	movff	btemp+11,plusw1
  4062  012500  060C               	decf	(btemp+11)^0,f,c
  4063  012502  0E1E               	movlw	30
  4064  012504  600C               	cpfslt	(btemp+11)^0,c
  4065  012506  D018               	goto	u12030
  4066  012508  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4067  01250E  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4068  012514  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4069  01251A  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4070  012520  0E42               	movlw	66
  4071  012522  6EE6               	movwf	postinc1,c
  4072  012524  0E60               	movlw	96
  4073  012526  6EE6               	movwf	postinc1,c
  4074  012528  0E65               	movlw	101
  4075  01252A  6EE6               	movwf	postinc1,c
  4076  01252C  0E3C               	movlw	60
  4077  01252E  6EE6               	movwf	postinc1,c
  4078  012530  EC0D  F0C2         	call	___flge	;wreg free
  4079  012534  A001               	btfss	btemp& (0+255),0,c
  4080  012536  D771               	goto	l12620
  4081  012538                     u12030:
  4082                           
  4083                           ;main.c: 261:    static_soc();
  4084  012538  EC40  F0D8         	call	_static_soc	;wreg free
  4085                           
  4086                           ; BSR set to: 1
  4087                           ;main.c: 262:    init_bsoc();
  4088  01253C  EC55  F0C1         	call	_init_bsoc	;wreg free
  4089                           
  4090                           ;main.c: 263:    set_load_relay_one(0);
  4091  012540  0E00               	movlw	0
  4092  012542  6EE6               	movwf	postinc1,c
  4093  012544  ECB5  F0D9         	call	_set_load_relay_one	;wreg free
  4094                           
  4095                           ;main.c: 264:    set_load_relay_two(0);
  4096  012548  0E00               	movlw	0
  4097  01254A  6EE6               	movwf	postinc1,c
  4098  01254C  ECAD  F0D9         	call	_set_load_relay_two	;wreg free
  4099                           
  4100                           ;main.c: 265:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4101  012550  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4102  012556  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4103  01255C  0EE3               	movlw	low STR_10
  4104  01255E  6EE6               	movwf	postinc1,c
  4105  012560  0EFD               	movlw	high STR_10
  4106  012562  6EE6               	movwf	postinc1,c
  4107  012564  0E00               	movlw	0
  4108  012566  6EE6               	movwf	postinc1,c
  4109  012568  0E00               	movlw	0
  4110  01256A  6EE6               	movwf	postinc1,c
  4111  01256C  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4112  012570  0060  F007  FFE6   	movff	btemp,postinc1
  4113  012576  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4114  01257C  0E06               	movlw	6
  4115  01257E  6EE6               	movwf	postinc1,c
  4116  012580  ECA2  F0C8         	call	_sprintf	;wreg free
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;main.c: 266:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4120  012584  0060  F633  FFE6   	movff	_C+140,postinc1
  4121  01258A  0060  F637  FFE6   	movff	_C+141,postinc1
  4122  012590  0060  F63B  FFE6   	movff	_C+142,postinc1
  4123  012596  0060  F63F  FFE6   	movff	_C+143,postinc1
  4124  01259C  0EF9               	movlw	low STR_11
  4125  01259E  6EE6               	movwf	postinc1,c
  4126  0125A0  0EFD               	movlw	high STR_11
  4127  0125A2  6EE6               	movwf	postinc1,c
  4128  0125A4  0E00               	movlw	0
  4129  0125A6  6EE6               	movwf	postinc1,c
  4130  0125A8  0E01               	movlw	1
  4131  0125AA  6EE6               	movwf	postinc1,c
  4132  0125AC  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4133  0125B0  0060  F007  FFE6   	movff	btemp,postinc1
  4134  0125B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4135  0125BC  0E08               	movlw	8
  4136  0125BE  6EE6               	movwf	postinc1,c
  4137  0125C0  ECA2  F0C8         	call	_sprintf	;wreg free
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;main.c: 267:    update_lcd(0);
  4141  0125C4  0E00               	movlw	0
  4142  0125C6  6EE6               	movwf	postinc1,c
  4143  0125C8  EC93  F0C7         	call	_update_lcd	;wreg free
  4144                           
  4145                           ;main.c: 268:    WaitMs(2000);
  4146  0125CC  0ED0               	movlw	208
  4147  0125CE  6EE6               	movwf	postinc1,c
  4148  0125D0  0E07               	movlw	7
  4149  0125D2  6EE6               	movwf	postinc1,c
  4150  0125D4  EC99  F0D5         	call	_WaitMs	;wreg free
  4151                           
  4152                           ;main.c: 269:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  4153  0125D8  0E2E               	movlw	low STR_12
  4154  0125DA  6EE6               	movwf	postinc1,c
  4155  0125DC  0EFF               	movlw	high STR_12
  4156  0125DE  6EE6               	movwf	postinc1,c
  4157  0125E0  0E00               	movlw	0
  4158  0125E2  6EE6               	movwf	postinc1,c
  4159  0125E4  0E00               	movlw	0
  4160  0125E6  6EE6               	movwf	postinc1,c
  4161  0125E8  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4162  0125EC  0060  F007  FFE6   	movff	btemp,postinc1
  4163  0125F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4164  0125F8  0E04               	movlw	4
  4165  0125FA  6EE6               	movwf	postinc1,c
  4166  0125FC  ECA2  F0C8         	call	_sprintf	;wreg free
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;main.c: 270:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  4170  012600  0E3F               	movlw	low STR_13
  4171  012602  6EE6               	movwf	postinc1,c
  4172  012604  0EFF               	movlw	high STR_13
  4173  012606  6EE6               	movwf	postinc1,c
  4174  012608  0E00               	movlw	0
  4175  01260A  6EE6               	movwf	postinc1,c
  4176  01260C  0E01               	movlw	1
  4177  01260E  6EE6               	movwf	postinc1,c
  4178  012610  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4179  012614  0060  F007  FFE6   	movff	btemp,postinc1
  4180  01261A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4181  012620  0E04               	movlw	4
  4182  012622  6EE6               	movwf	postinc1,c
  4183  012624  ECA2  F0C8         	call	_sprintf	;wreg free
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;main.c: 271:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  4187  012628  0E72               	movlw	low STR_14
  4188  01262A  6EE6               	movwf	postinc1,c
  4189  01262C  0EFF               	movlw	high STR_14
  4190  01262E  6EE6               	movwf	postinc1,c
  4191  012630  0E00               	movlw	0
  4192  012632  6EE6               	movwf	postinc1,c
  4193  012634  0E02               	movlw	2
  4194  012636  6EE6               	movwf	postinc1,c
  4195  012638  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4196  01263C  0060  F007  FFE6   	movff	btemp,postinc1
  4197  012642  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4198  012648  0E04               	movlw	4
  4199  01264A  6EE6               	movwf	postinc1,c
  4200  01264C  ECA2  F0C8         	call	_sprintf	;wreg free
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;main.c: 272:    update_lcd(0);
  4204  012650  0E00               	movlw	0
  4205  012652  6EE6               	movwf	postinc1,c
  4206  012654  EC93  F0C7         	call	_update_lcd	;wreg free
  4207                           
  4208                           ;main.c: 273:    uint16_t i_esr = 1;
  4209  012658  0E01               	movlw	1
  4210  01265A  6E0B               	movwf	(btemp+10)^0,c
  4211  01265C  0E00               	movlw	0
  4212  01265E  6E0C               	movwf	(btemp+11)^0,c
  4213                           
  4214                           ;stkvar	_i_esr @ sp[(-12)+4]
  4215  012660  0EF8               	movlw	-8
  4216  012662  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4217  012668  0EF9               	movlw	-7
  4218  01266A  0060  F033  FFE3   	movff	btemp+11,plusw1
  4219                           
  4220                           ;main.c: 274:    float esr_temp;;main.c: 275:    while ((esr_temp=esr_check(1)) < 0.0) {
  4221  012670  D04B               	goto	l12676
  4222  012672                     l12666:
  4223                           
  4224                           ;main.c: 276:     WaitMs(100);
  4225  012672  0E64               	movlw	100
  4226  012674  6EE6               	movwf	postinc1,c
  4227  012676  0E00               	movlw	0
  4228  012678  6EE6               	movwf	postinc1,c
  4229  01267A  EC99  F0D5         	call	_WaitMs	;wreg free
  4230                           
  4231                           ;main.c: 277:     sprintf(get_vterm_ptr(2, 0), "Checking %2.1f %c    ",esr_temp ,spinner
      +                          s(0, 0));
  4232  01267E  0E00               	movlw	0
  4233  012680  6EE6               	movwf	postinc1,c
  4234  012682  0E00               	movlw	0
  4235  012684  6EE6               	movwf	postinc1,c
  4236  012686  EC97  F0CA         	call	_spinners	;wreg free
  4237  01268A  5001               	movf	btemp^0,w,c
  4238  01268C  6EE6               	movwf	postinc1,c
  4239  01268E  0E00               	movlw	0
  4240  012690  6EE6               	movwf	postinc1,c
  4241                           
  4242                           ;stkvar	_esr_temp @ sp[(-14)+0]
  4243  012692  0EF2               	movlw	-14
  4244  012694  006F FF8F FFE6     	movff	plusw1,postinc1
  4245  01269A  006F FF8F FFE6     	movff	plusw1,postinc1
  4246  0126A0  006F FF8F FFE6     	movff	plusw1,postinc1
  4247  0126A6  006F FF8F FFE6     	movff	plusw1,postinc1
  4248  0126AC  0E0F               	movlw	low STR_15
  4249  0126AE  6EE6               	movwf	postinc1,c
  4250  0126B0  0EFE               	movlw	high STR_15
  4251  0126B2  6EE6               	movwf	postinc1,c
  4252  0126B4  0E00               	movlw	0
  4253  0126B6  6EE6               	movwf	postinc1,c
  4254  0126B8  0E02               	movlw	2
  4255  0126BA  6EE6               	movwf	postinc1,c
  4256  0126BC  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4257  0126C0  0060  F007  FFE6   	movff	btemp,postinc1
  4258  0126C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4259  0126CC  0E0A               	movlw	10
  4260  0126CE  6EE6               	movwf	postinc1,c
  4261  0126D0  ECA2  F0C8         	call	_sprintf	;wreg free
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;main.c: 278:     update_lcd(0);
  4265  0126D4  0E00               	movlw	0
  4266  0126D6  6EE6               	movwf	postinc1,c
  4267  0126D8  EC93  F0C7         	call	_update_lcd	;wreg free
  4268                           
  4269                           ;main.c: 280:     if (i_esr++ > 512)
  4270                           ;stkvar	_i_esr @ sp[(-12)+4]
  4271  0126DC  50E1               	movf	fsr1l,w,c
  4272  0126DE  0FF8               	addlw	-8
  4273  0126E0  6ED9               	movwf	fsr2l,c
  4274  0126E2  50E2               	movf	fsr1h,w,c
  4275  0126E4  6EDA               	movwf	fsr2h,c
  4276  0126E6  0EFF               	movlw	255
  4277  0126E8  22DA               	addwfc	fsr2h,f,c
  4278  0126EA  006F FF7C  F00B    	movff	indf2,btemp+10
  4279  0126F0  0E01               	movlw	1
  4280  0126F2  26DE               	addwf	postinc2,f,c
  4281  0126F4  006F FF7C  F00C    	movff	indf2,btemp+11
  4282  0126FA  0E00               	movlw	0
  4283  0126FC  22DD               	addwfc	postdec2,f,c
  4284  0126FE  040B               	decf	(btemp+10)^0,w,c
  4285  012700  0E02               	movlw	2
  4286  012702  580C               	subwfb	(btemp+11)^0,w,c
  4287  012704  B0D8               	btfsc	status,0,c
  4288  012706  D017               	goto	u12050
  4289  012708                     l12676:
  4290                           
  4291                           ;main.c: 275:    while ((esr_temp=esr_check(1)) < 0.0) {
  4292  012708  0E01               	movlw	1
  4293  01270A  6EE6               	movwf	postinc1,c
  4294  01270C  EC05  F0AA         	call	_esr_check	;wreg free
  4295                           
  4296                           ;stkvar	_esr_temp @ sp[(-12)+0]
  4297  012710  0EF4               	movlw	-12
  4298  012712  0060  F007  FFE3   	movff	btemp,plusw1
  4299  012718  0EF5               	movlw	-11
  4300  01271A  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4301  012720  0EF6               	movlw	-10
  4302  012722  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4303  012728  0EF7               	movlw	-9
  4304  01272A  0060  F013  FFE3   	movff	btemp+3,plusw1
  4305  012730  0EF7               	movlw	-9
  4306  012732  BEE3               	btfsc	plusw1,7,c
  4307  012734  D79E               	goto	l12666
  4308  012736                     u12050:
  4309                           
  4310                           ;main.c: 283:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4311  012736  0060  F613  FFE6   	movff	_C+132,postinc1
  4312  01273C  0060  F617  FFE6   	movff	_C+133,postinc1
  4313  012742  0060  F61B  FFE6   	movff	_C+134,postinc1
  4314  012748  0060  F61F  FFE6   	movff	_C+135,postinc1
  4315  01274E  0ECD               	movlw	low STR_16
  4316  012750  6EE6               	movwf	postinc1,c
  4317  012752  0EFD               	movlw	high STR_16
  4318  012754  6EE6               	movwf	postinc1,c
  4319  012756  0E00               	movlw	0
  4320  012758  6EE6               	movwf	postinc1,c
  4321  01275A  0E00               	movlw	0
  4322  01275C  6EE6               	movwf	postinc1,c
  4323  01275E  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4324  012762  0060  F007  FFE6   	movff	btemp,postinc1
  4325  012768  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4326  01276E  0E08               	movlw	8
  4327  012770  6EE6               	movwf	postinc1,c
  4328  012772  ECA2  F0C8         	call	_sprintf	;wreg free
  4329                           
  4330                           ;main.c: 284:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4331  012776  0060  F77F  FFE6   	movff	_C+223,postinc1
  4332  01277C  0060  F783  FFE6   	movff	_C+224,postinc1
  4333  012782  0060  F787  FFE6   	movff	_C+225,postinc1
  4334  012788  0060  F78B  FFE6   	movff	_C+226,postinc1
  4335  01278E  0060  F7AF  FFE6   	movff	_C+235,postinc1
  4336  012794  0060  F7B3  FFE6   	movff	_C+236,postinc1
  4337  01279A  0060  F7B7  FFE6   	movff	_C+237,postinc1
  4338  0127A0  0060  F7BB  FFE6   	movff	_C+238,postinc1
  4339  0127A6  0E6A               	movlw	low STR_17
  4340  0127A8  6EE6               	movwf	postinc1,c
  4341  0127AA  0EFD               	movlw	high STR_17
  4342  0127AC  6EE6               	movwf	postinc1,c
  4343  0127AE  0E00               	movlw	0
  4344  0127B0  6EE6               	movwf	postinc1,c
  4345  0127B2  0E01               	movlw	1
  4346  0127B4  6EE6               	movwf	postinc1,c
  4347  0127B6  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4348  0127BA  0060  F007  FFE6   	movff	btemp,postinc1
  4349  0127C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4350  0127C6  0E0C               	movlw	12
  4351  0127C8  6EE6               	movwf	postinc1,c
  4352  0127CA  ECA2  F0C8         	call	_sprintf	;wreg free
  4353                           
  4354                           ;main.c: 285:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4355  0127CE  0060  F78F  FFE6   	movff	_C+227,postinc1
  4356  0127D4  0060  F793  FFE6   	movff	_C+228,postinc1
  4357  0127DA  0060  F797  FFE6   	movff	_C+229,postinc1
  4358  0127E0  0060  F79B  FFE6   	movff	_C+230,postinc1
  4359  0127E6  0060  F7BF  FFE6   	movff	_C+239,postinc1
  4360  0127EC  0060  F7C3  FFE6   	movff	_C+240,postinc1
  4361  0127F2  0060  F7C7  FFE6   	movff	_C+241,postinc1
  4362  0127F8  0060  F7CB  FFE6   	movff	_C+242,postinc1
  4363  0127FE  0E84               	movlw	low STR_18
  4364  012800  6EE6               	movwf	postinc1,c
  4365  012802  0EFD               	movlw	high STR_18
  4366  012804  6EE6               	movwf	postinc1,c
  4367  012806  0E00               	movlw	0
  4368  012808  6EE6               	movwf	postinc1,c
  4369  01280A  0E02               	movlw	2
  4370  01280C  6EE6               	movwf	postinc1,c
  4371  01280E  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4372  012812  0060  F007  FFE6   	movff	btemp,postinc1
  4373  012818  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4374  01281E  0E0C               	movlw	12
  4375  012820  6EE6               	movwf	postinc1,c
  4376  012822  ECA2  F0C8         	call	_sprintf	;wreg free
  4377                           
  4378                           ;main.c: 286:    update_lcd(0);
  4379  012826  0E00               	movlw	0
  4380  012828  6EE6               	movwf	postinc1,c
  4381  01282A  EC93  F0C7         	call	_update_lcd	;wreg free
  4382                           
  4383                           ;main.c: 287:    WaitMs(5000);
  4384  01282E  0E88               	movlw	136
  4385  012830  6EE6               	movwf	postinc1,c
  4386  012832  0E13               	movlw	19
  4387  012834  6EE6               	movwf	postinc1,c
  4388  012836  EC99  F0D5         	call	_WaitMs	;wreg free
  4389                           
  4390                           ;main.c: 288:    break;
  4391  01283A  D01C               	goto	l12686
  4392  01283C                     l1336:
  4393                           
  4394                           ; BSR set to: 2
  4395                           ;main.c: 294:    P.SYSTEM_STABLE = 1;
  4396  01283C  0100               	movlb	0	; () banked
  4397  01283E  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  4398                           
  4399                           ;main.c: 295:    break;
  4400  012840  D019               	goto	l12686
  4401  012842                     l1338:
  4402                           
  4403                           ; BSR set to: 2
  4404                           ;main.c: 298:    V.ui_state = UI_STATE_INIT;
  4405  012842  6B00               	clrf	_V& (0+255),b	;volatile
  4406                           
  4407                           ;main.c: 299:    break;
  4408  012844  D017               	goto	l12686
  4409  012846                     l12684:
  4410  012846  0102               	movlb	2	; () banked
  4411  012848  5100               	movf	_V& (0+255),w,b	;volatile
  4412  01284A  6E0B               	movwf	(btemp+10)^0,c
  4413  01284C  6A0C               	clrf	(btemp+11)^0,c
  4414                           
  4415                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4416                           ; Switch size 1, requested type "simple"
  4417                           ; Number of cases is 1, Range of values is 0 to 0
  4418                           ; switch strategies available:
  4419                           ; Name         Instructions Cycles
  4420                           ; simple_byte            4     3 (average)
  4421                           ;	Chosen strategy is simple_byte
  4422  01284E  500C               	movf	(btemp+11)^0,w,c
  4423  012850  0A00               	xorlw	0	; case 0
  4424  012852  A4D8               	btfss	status,2,c
  4425  012854  D7F6               	goto	l1338
  4426                           
  4427                           ; BSR set to: 2
  4428                           ; Switch size 1, requested type "simple"
  4429                           ; Number of cases is 5, Range of values is 0 to 5
  4430                           ; switch strategies available:
  4431                           ; Name         Instructions Cycles
  4432                           ; simple_byte           16     9 (average)
  4433                           ;	Chosen strategy is simple_byte
  4434  012856  500B               	movf	(btemp+10)^0,w,c
  4435  012858  0A00               	xorlw	0	; case 0
  4436  01285A  B4D8               	btfsc	status,2,c
  4437  01285C  D505               	goto	l12570
  4438  01285E  0A01               	xorlw	1	; case 1
  4439  012860  B4D8               	btfsc	status,2,c
  4440  012862  D008               	goto	l12686
  4441  012864  0A02               	xorlw	2	; case 3
  4442  012866  B4D8               	btfsc	status,2,c
  4443  012868  D005               	goto	l12686
  4444  01286A  0A07               	xorlw	7	; case 4
  4445  01286C  B4D8               	btfsc	status,2,c
  4446  01286E  D7E6               	goto	l1336
  4447  012870  0A01               	xorlw	1	; case 5
  4448  012872  D7E7               	goto	l1338
  4449  012874                     l12686:
  4450                           
  4451                           ;main.c: 302:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4452  012874  0E01               	movlw	1
  4453  012876  6EE6               	movwf	postinc1,c
  4454  012878  EC27  F0D7         	call	_TimerDone	;wreg free
  4455  01287C  5001               	movf	btemp^0,w,c
  4456  01287E  B4D8               	btfsc	status,2,c
  4457  012880  D013               	goto	l12698
  4458  012882  EC03  F0DA         	call	_check_adc_scan	;wreg free
  4459  012886  5001               	movf	btemp^0,w,c
  4460  012888  B4D8               	btfsc	status,2,c
  4461  01288A  D00E               	goto	l12698
  4462                           
  4463                           ;main.c: 306:    convert_adc_data();
  4464  01288C  EC34  F0CC         	call	_convert_adc_data	;wreg free
  4465                           
  4466                           ;main.c: 310:    clear_adc_scan();
  4467  012890  EC13  F0DA         	call	_clear_adc_scan	;wreg free
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;main.c: 311:    start_adc_scan();
  4471  012894  EC7E  F0D1         	call	_start_adc_scan	;wreg free
  4472                           
  4473                           ;main.c: 312:    StartTimer(TMR_ADC, 200);
  4474  012898  0EC8               	movlw	200
  4475  01289A  6EE6               	movwf	postinc1,c
  4476  01289C  0E00               	movlw	0
  4477  01289E  6EE6               	movwf	postinc1,c
  4478  0128A0  0E01               	movlw	1
  4479  0128A2  6EE6               	movwf	postinc1,c
  4480  0128A4  ECA6  F0D4         	call	_StartTimer	;wreg free
  4481  0128A8                     l12698:
  4482                           
  4483                           ;main.c: 319:   if (TimerDone(TMR_DISPLAY)) {
  4484                           
  4485                           ;main.c: 315:   if (V.ticks) {
  4486  0128A8  0E0A               	movlw	10
  4487  0128AA  6EE6               	movwf	postinc1,c
  4488  0128AC  EC27  F0D7         	call	_TimerDone	;wreg free
  4489  0128B0  5001               	movf	btemp^0,w,c
  4490  0128B2  B4D8               	btfsc	status,2,c
  4491  0128B4  D289               	goto	l12740
  4492                           
  4493                           ;main.c: 320:    if (TimerDone(TMR_HELPDIS)) {
  4494  0128B6  0E09               	movlw	9
  4495  0128B8  6EE6               	movwf	postinc1,c
  4496  0128BA  EC27  F0D7         	call	_TimerDone	;wreg free
  4497  0128BE  5001               	movf	btemp^0,w,c
  4498  0128C0  B4D8               	btfsc	status,2,c
  4499  0128C2  D004               	goto	l12706
  4500                           
  4501                           ;main.c: 321:     set_display_info(DIS_STR);
  4502  0128C4  0E00               	movlw	0
  4503  0128C6  6EE6               	movwf	postinc1,c
  4504  0128C8  ECFD  F0D8         	call	_set_display_info	;wreg free
  4505  0128CC                     l12706:
  4506                           
  4507                           ;main.c: 323:    calc_model_data();
  4508  0128CC  ECC8  F0AD         	call	_calc_model_data	;wreg free
  4509                           
  4510                           ; BSR set to: 1
  4511                           ;main.c: 330:     hid_display(&H);
  4512                           
  4513                           ;main.c: 325:    if (0) {
  4514  0128D0  0EF3               	movlw	_H& (0+255)
  4515  0128D2  6EE6               	movwf	postinc1,c
  4516  0128D4  EC27  F0C9         	call	_hid_display	;wreg free
  4517                           
  4518                           ;main.c: 331:     switch (H.hid_display) {
  4519  0128D8  D252               	goto	l12732
  4520  0128DA                     l1346:
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;main.c: 333:      V.calib = 0;
  4524  0128DA  0102               	movlb	2	; () banked
  4525  0128DC  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4526                           
  4527                           ; BSR set to: 2
  4528                           ;main.c: 334:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  4529  0128DE  0060  F5E3  FFE6   	movff	_C+120,postinc1
  4530  0128E4  0060  F5E7  FFE6   	movff	_C+121,postinc1
  4531  0128EA  0060  F5EB  FFE6   	movff	_C+122,postinc1
  4532  0128F0  0060  F5EF  FFE6   	movff	_C+123,postinc1
  4533  0128F6  0E86               	movlw	low STR_22
  4534  0128F8  6EE6               	movwf	postinc1,c
  4535  0128FA  0EFE               	movlw	high STR_22
  4536  0128FC  6EE6               	movwf	postinc1,c
  4537  0128FE  0E00               	movlw	0
  4538  012900  6EE6               	movwf	postinc1,c
  4539  012902  0E00               	movlw	0
  4540  012904  6EE6               	movwf	postinc1,c
  4541  012906  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4542  01290A  0060  F007  FFE6   	movff	btemp,postinc1
  4543  012910  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4544  012916  0E08               	movlw	8
  4545  012918  6EE6               	movwf	postinc1,c
  4546  01291A  ECA2  F0C8         	call	_sprintf	;wreg free
  4547                           
  4548                           ;main.c: 335:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4549  01291E  0060  F5C3  FFE6   	movff	_C+112,postinc1
  4550  012924  0060  F5C7  FFE6   	movff	_C+113,postinc1
  4551  01292A  0060  F5CB  FFE6   	movff	_C+114,postinc1
  4552  012930  0060  F5CF  FFE6   	movff	_C+115,postinc1
  4553  012936  0EAC               	movlw	low STR_23
  4554  012938  6EE6               	movwf	postinc1,c
  4555  01293A  0EFE               	movlw	high STR_23
  4556  01293C  6EE6               	movwf	postinc1,c
  4557  01293E  0E00               	movlw	0
  4558  012940  6EE6               	movwf	postinc1,c
  4559  012942  0E01               	movlw	1
  4560  012944  6EE6               	movwf	postinc1,c
  4561  012946  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4562  01294A  0060  F007  FFE6   	movff	btemp,postinc1
  4563  012950  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4564  012956  0E08               	movlw	8
  4565  012958  6EE6               	movwf	postinc1,c
  4566  01295A  ECA2  F0C8         	call	_sprintf	;wreg free
  4567                           
  4568                           ;main.c: 336:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4569  01295E  0060  F5D3  FFE6   	movff	_C+116,postinc1
  4570  012964  0060  F5D7  FFE6   	movff	_C+117,postinc1
  4571  01296A  0060  F5DB  FFE6   	movff	_C+118,postinc1
  4572  012970  0060  F5DF  FFE6   	movff	_C+119,postinc1
  4573  012976  0E99               	movlw	low STR_24
  4574  012978  6EE6               	movwf	postinc1,c
  4575  01297A  0EFE               	movlw	high STR_24
  4576  01297C  6EE6               	movwf	postinc1,c
  4577  01297E  0E00               	movlw	0
  4578  012980  6EE6               	movwf	postinc1,c
  4579  012982  0E02               	movlw	2
  4580  012984  6EE6               	movwf	postinc1,c
  4581  012986  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4582  01298A  0060  F007  FFE6   	movff	btemp,postinc1
  4583  012990  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4584  012996  0E08               	movlw	8
  4585  012998  6EE6               	movwf	postinc1,c
  4586  01299A  ECA2  F0C8         	call	_sprintf	;wreg free
  4587                           
  4588                           ;main.c: 337:      break;
  4589  01299E  D204               	goto	l12734
  4590  0129A0                     l1348:
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;main.c: 339:      V.calib = 0;
  4594  0129A0  0102               	movlb	2	; () banked
  4595  0129A2  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4596                           
  4597                           ; BSR set to: 2
  4598                           ;main.c: 340:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  4599  0129A4  0060  F413  FFE6   	movff	_C+4,postinc1
  4600  0129AA  0060  F417  FFE6   	movff	_C+5,postinc1
  4601  0129B0  0060  F41B  FFE6   	movff	_C+6,postinc1
  4602  0129B6  0060  F41F  FFE6   	movff	_C+7,postinc1
  4603  0129BC  0060  F453  FFE6   	movff	_C+20,postinc1
  4604  0129C2  0060  F457  FFE6   	movff	_C+21,postinc1
  4605  0129C8  0060  F45B  FFE6   	movff	_C+22,postinc1
  4606  0129CE  0060  F45F  FFE6   	movff	_C+23,postinc1
  4607  0129D4  0EF8               	movlw	low STR_25
  4608  0129D6  6EE6               	movwf	postinc1,c
  4609  0129D8  0EFE               	movlw	high STR_25
  4610  0129DA  6EE6               	movwf	postinc1,c
  4611  0129DC  0E00               	movlw	0
  4612  0129DE  6EE6               	movwf	postinc1,c
  4613  0129E0  0E00               	movlw	0
  4614  0129E2  6EE6               	movwf	postinc1,c
  4615  0129E4  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4616  0129E8  0060  F007  FFE6   	movff	btemp,postinc1
  4617  0129EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4618  0129F4  0E0C               	movlw	12
  4619  0129F6  6EE6               	movwf	postinc1,c
  4620  0129F8  ECA2  F0C8         	call	_sprintf	;wreg free
  4621                           
  4622                           ;main.c: 341:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  4623  0129FC  0060  F403  FFE6   	movff	_C,postinc1
  4624  012A02  0060  F407  FFE6   	movff	_C+1,postinc1
  4625  012A08  0060  F40B  FFE6   	movff	_C+2,postinc1
  4626  012A0E  0060  F40F  FFE6   	movff	_C+3,postinc1
  4627  012A14  0060  F443  FFE6   	movff	_C+16,postinc1
  4628  012A1A  0060  F447  FFE6   	movff	_C+17,postinc1
  4629  012A20  0060  F44B  FFE6   	movff	_C+18,postinc1
  4630  012A26  0060  F44F  FFE6   	movff	_C+19,postinc1
  4631  012A2C  0ED2               	movlw	low STR_26
  4632  012A2E  6EE6               	movwf	postinc1,c
  4633  012A30  0EFE               	movlw	high STR_26
  4634  012A32  6EE6               	movwf	postinc1,c
  4635  012A34  0E00               	movlw	0
  4636  012A36  6EE6               	movwf	postinc1,c
  4637  012A38  0E01               	movlw	1
  4638  012A3A  6EE6               	movwf	postinc1,c
  4639  012A3C  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4640  012A40  0060  F007  FFE6   	movff	btemp,postinc1
  4641  012A46  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4642  012A4C  0E0C               	movlw	12
  4643  012A4E  6EE6               	movwf	postinc1,c
  4644  012A50  ECA2  F0C8         	call	_sprintf	;wreg free
  4645                           
  4646                           ;main.c: 342:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  4647  012A54  0060  F503  FFE6   	movff	_C+64,postinc1
  4648  012A5A  0060  F507  FFE6   	movff	_C+65,postinc1
  4649  012A60  0060  F50B  FFE6   	movff	_C+66,postinc1
  4650  012A66  0060  F50F  FFE6   	movff	_C+67,postinc1
  4651  012A6C  0060  F423  FFE6   	movff	_C+8,postinc1
  4652  012A72  0060  F427  FFE6   	movff	_C+9,postinc1
  4653  012A78  0060  F42B  FFE6   	movff	_C+10,postinc1
  4654  012A7E  0060  F42F  FFE6   	movff	_C+11,postinc1
  4655  012A84  0EE5               	movlw	low STR_27
  4656  012A86  6EE6               	movwf	postinc1,c
  4657  012A88  0EFE               	movlw	high STR_27
  4658  012A8A  6EE6               	movwf	postinc1,c
  4659  012A8C  0E00               	movlw	0
  4660  012A8E  6EE6               	movwf	postinc1,c
  4661  012A90  0E02               	movlw	2
  4662  012A92  6EE6               	movwf	postinc1,c
  4663  012A94  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4664  012A98  0060  F007  FFE6   	movff	btemp,postinc1
  4665  012A9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4666  012AA4  0E0C               	movlw	12
  4667  012AA6  6EE6               	movwf	postinc1,c
  4668  012AA8  ECA2  F0C8         	call	_sprintf	;wreg free
  4669                           
  4670                           ;main.c: 343:      break;
  4671  012AAC  D17D               	goto	l12734
  4672  012AAE                     l1349:
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;main.c: 345:      V.calib = 0;
  4676  012AAE  0102               	movlb	2	; () banked
  4677  012AB0  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4678                           
  4679                           ; BSR set to: 2
  4680                           ;main.c: 346:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  4681  012AB2  0060  F5F3  FFE6   	movff	_C+124,postinc1
  4682  012AB8  0060  F5F7  FFE6   	movff	_C+125,postinc1
  4683  012ABE  0060  F5FB  FFE6   	movff	_C+126,postinc1
  4684  012AC4  0060  F5FF  FFE6   	movff	_C+127,postinc1
  4685  012ACA  0EBF               	movlw	low STR_28
  4686  012ACC  6EE6               	movwf	postinc1,c
  4687  012ACE  0EFE               	movlw	high STR_28
  4688  012AD0  6EE6               	movwf	postinc1,c
  4689  012AD2  0E00               	movlw	0
  4690  012AD4  6EE6               	movwf	postinc1,c
  4691  012AD6  0E00               	movlw	0
  4692  012AD8  6EE6               	movwf	postinc1,c
  4693  012ADA  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4694  012ADE  0060  F007  FFE6   	movff	btemp,postinc1
  4695  012AE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4696  012AEA  0E08               	movlw	8
  4697  012AEC  6EE6               	movwf	postinc1,c
  4698  012AEE  ECA2  F0C8         	call	_sprintf	;wreg free
  4699                           
  4700                           ;main.c: 347:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  4701  012AF2  0060  F643  FFE6   	movff	_C+144,postinc1
  4702  012AF8  0060  F647  FFE6   	movff	_C+145,postinc1
  4703  012AFE  0060  F64B  FFE6   	movff	_C+146,postinc1
  4704  012B04  0060  F64F  FFE6   	movff	_C+147,postinc1
  4705  012B0A  0060  F633  FFE6   	movff	_C+140,postinc1
  4706  012B10  0060  F637  FFE6   	movff	_C+141,postinc1
  4707  012B16  0060  F63B  FFE6   	movff	_C+142,postinc1
  4708  012B1C  0060  F63F  FFE6   	movff	_C+143,postinc1
  4709  012B22  0E39               	movlw	low STR_29
  4710  012B24  6EE6               	movwf	postinc1,c
  4711  012B26  0EFE               	movlw	high STR_29
  4712  012B28  6EE6               	movwf	postinc1,c
  4713  012B2A  0E00               	movlw	0
  4714  012B2C  6EE6               	movwf	postinc1,c
  4715  012B2E  0E01               	movlw	1
  4716  012B30  6EE6               	movwf	postinc1,c
  4717  012B32  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4718  012B36  0060  F007  FFE6   	movff	btemp,postinc1
  4719  012B3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4720  012B42  0E0C               	movlw	12
  4721  012B44  6EE6               	movwf	postinc1,c
  4722  012B46  ECA2  F0C8         	call	_sprintf	;wreg free
  4723                           
  4724                           ;main.c: 348:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  4725  012B4A  0060  F6A3  FFE6   	movff	_C+168,postinc1
  4726  012B50  0060  F6A7  FFE6   	movff	_C+169,postinc1
  4727  012B56  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4728  012B5C  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4729  012B62  0E00               	movlw	0
  4730  012B64  6EE6               	movwf	postinc1,c
  4731  012B66  0E05               	movlw	5
  4732  012B68  6EE6               	movwf	postinc1,c
  4733  012B6A  EC97  F0CA         	call	_spinners	;wreg free
  4734  012B6E  5001               	movf	btemp^0,w,c
  4735  012B70  6EE6               	movwf	postinc1,c
  4736  012B72  0E00               	movlw	0
  4737  012B74  6EE6               	movwf	postinc1,c
  4738  012B76  0E25               	movlw	low STR_30
  4739  012B78  6EE6               	movwf	postinc1,c
  4740  012B7A  0EFE               	movlw	high STR_30
  4741  012B7C  6EE6               	movwf	postinc1,c
  4742  012B7E  0E00               	movlw	0
  4743  012B80  6EE6               	movwf	postinc1,c
  4744  012B82  0E02               	movlw	2
  4745  012B84  6EE6               	movwf	postinc1,c
  4746  012B86  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4747  012B8A  0060  F007  FFE6   	movff	btemp,postinc1
  4748  012B90  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4749  012B96  0E0A               	movlw	10
  4750  012B98  6EE6               	movwf	postinc1,c
  4751  012B9A  ECA2  F0C8         	call	_sprintf	;wreg free
  4752                           
  4753                           ;main.c: 349:      break;
  4754  012B9E  D104               	goto	l12734
  4755  012BA0                     l12718:
  4756                           
  4757                           ; BSR set to: 0
  4758                           ;main.c: 351:      if (!V.calib) {
  4759  012BA0  0102               	movlb	2	; () banked
  4760  012BA2  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4761  012BA4  A4D8               	btfss	status,2,c
  4762  012BA6  D02D               	goto	l12722
  4763                           
  4764                           ; BSR set to: 2
  4765                           ;main.c: 352:       lp_filter(0.0, i, -1);
  4766  012BA8  0EFF               	movlw	255
  4767  012BAA  6EE6               	movwf	postinc1,c
  4768                           
  4769                           ;stkvar	_i @ sp[(-13)+8]
  4770  012BAC  0EFB               	movlw	-5
  4771  012BAE  50E3               	movf	plusw1,w,c
  4772  012BB0  6EE6               	movwf	postinc1,c
  4773  012BB2  0E00               	movlw	0
  4774  012BB4  6EE6               	movwf	postinc1,c
  4775  012BB6  0E00               	movlw	0
  4776  012BB8  6EE6               	movwf	postinc1,c
  4777  012BBA  0E00               	movlw	0
  4778  012BBC  6EE6               	movwf	postinc1,c
  4779  012BBE  0E00               	movlw	0
  4780  012BC0  6EE6               	movwf	postinc1,c
  4781  012BC2  EC79  F0BD         	call	_lp_filter	;wreg free
  4782                           
  4783                           ;main.c: 353:       lp_filter(0.0, j, -1);
  4784  012BC6  0EFF               	movlw	255
  4785  012BC8  6EE6               	movwf	postinc1,c
  4786                           
  4787                           ;stkvar	_j @ sp[(-13)+7]
  4788  012BCA  0EFA               	movlw	-6
  4789  012BCC  50E3               	movf	plusw1,w,c
  4790  012BCE  6EE6               	movwf	postinc1,c
  4791  012BD0  0E00               	movlw	0
  4792  012BD2  6EE6               	movwf	postinc1,c
  4793  012BD4  0E00               	movlw	0
  4794  012BD6  6EE6               	movwf	postinc1,c
  4795  012BD8  0E00               	movlw	0
  4796  012BDA  6EE6               	movwf	postinc1,c
  4797  012BDC  0E00               	movlw	0
  4798  012BDE  6EE6               	movwf	postinc1,c
  4799  012BE0  EC79  F0BD         	call	_lp_filter	;wreg free
  4800                           
  4801                           ;main.c: 354:       lp_filter(0.0, k, -1);
  4802  012BE4  0EFF               	movlw	255
  4803  012BE6  6EE6               	movwf	postinc1,c
  4804                           
  4805                           ;stkvar	_k @ sp[(-13)+6]
  4806  012BE8  0EF9               	movlw	-7
  4807  012BEA  50E3               	movf	plusw1,w,c
  4808  012BEC  6EE6               	movwf	postinc1,c
  4809  012BEE  0E00               	movlw	0
  4810  012BF0  6EE6               	movwf	postinc1,c
  4811  012BF2  0E00               	movlw	0
  4812  012BF4  6EE6               	movwf	postinc1,c
  4813  012BF6  0E00               	movlw	0
  4814  012BF8  6EE6               	movwf	postinc1,c
  4815  012BFA  0E00               	movlw	0
  4816  012BFC  6EE6               	movwf	postinc1,c
  4817  012BFE  EC79  F0BD         	call	_lp_filter	;wreg free
  4818  012C02                     l12722:
  4819                           
  4820                           ;main.c: 356:      V.calib = 1;
  4821  012C02  0E01               	movlw	1
  4822  012C04  0102               	movlb	2	; () banked
  4823  012C06  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  4824                           
  4825                           ; BSR set to: 2
  4826                           ;main.c: 357:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  4827  012C08  0E02               	movlw	2
  4828  012C0A  6EE6               	movwf	postinc1,c
  4829  012C0C  EC94  F0D6         	call	_get_switch	;wreg free
  4830  012C10  5001               	movf	btemp^0,w,c
  4831  012C12  6EE6               	movwf	postinc1,c
  4832  012C14  0E00               	movlw	0
  4833  012C16  6EE6               	movwf	postinc1,c
  4834                           
  4835                           ;stkvar	_i @ sp[(-14)+8]
  4836  012C18  0EFA               	movlw	-6
  4837  012C1A  50E3               	movf	plusw1,w,c
  4838  012C1C  0D04               	mullw	4
  4839  012C1E  0E00               	movlw	low _C
  4840  012C20  24F3               	addwf	243,w,c
  4841  012C22  6ED9               	movwf	fsr2l,c
  4842  012C24  0E01               	movlw	high _C
  4843  012C26  20F4               	addwfc	prodh,w,c
  4844  012C28  6EDA               	movwf	fsr2h,c
  4845  012C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  4846  012C30  006F FF7B FFE6     	movff	postinc2,postinc1
  4847  012C36  006F FF7B FFE6     	movff	postinc2,postinc1
  4848  012C3C  006F FF7B FFE6     	movff	postinc2,postinc1
  4849                           
  4850                           ;stkvar	_i @ sp[(-18)+8]
  4851  012C42  0EF6               	movlw	-10
  4852  012C44  50E3               	movf	plusw1,w,c
  4853  012C46  6EE6               	movwf	postinc1,c
  4854  012C48  EC0C  F0D9         	call	_get_raw_result	;wreg free
  4855  012C4C  0060  F007  FFE6   	movff	btemp,postinc1
  4856  012C52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4857  012C58  0E83               	movlw	low STR_19
  4858  012C5A  6EE6               	movwf	postinc1,c
  4859  012C5C  0EFF               	movlw	high STR_19
  4860  012C5E  6EE6               	movwf	postinc1,c
  4861  012C60  0E00               	movlw	0
  4862  012C62  6EE6               	movwf	postinc1,c
  4863  012C64  0E00               	movlw	0
  4864  012C66  6EE6               	movwf	postinc1,c
  4865  012C68  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4866  012C6C  0060  F007  FFE6   	movff	btemp,postinc1
  4867  012C72  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4868  012C78  0E0C               	movlw	12
  4869  012C7A  6EE6               	movwf	postinc1,c
  4870  012C7C  ECA2  F0C8         	call	_sprintf	;wreg free
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;main.c: 358:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  4874  012C80  0E03               	movlw	3
  4875  012C82  6EE6               	movwf	postinc1,c
  4876  012C84  EC94  F0D6         	call	_get_switch	;wreg free
  4877  012C88  5001               	movf	btemp^0,w,c
  4878  012C8A  6EE6               	movwf	postinc1,c
  4879  012C8C  0E00               	movlw	0
  4880  012C8E  6EE6               	movwf	postinc1,c
  4881                           
  4882                           ;stkvar	_j @ sp[(-14)+7]
  4883  012C90  0EF9               	movlw	-7
  4884  012C92  50E3               	movf	plusw1,w,c
  4885  012C94  0D04               	mullw	4
  4886  012C96  0E00               	movlw	low _C
  4887  012C98  24F3               	addwf	243,w,c
  4888  012C9A  6ED9               	movwf	fsr2l,c
  4889  012C9C  0E01               	movlw	high _C
  4890  012C9E  20F4               	addwfc	prodh,w,c
  4891  012CA0  6EDA               	movwf	fsr2h,c
  4892  012CA2  006F FF7B FFE6     	movff	postinc2,postinc1
  4893  012CA8  006F FF7B FFE6     	movff	postinc2,postinc1
  4894  012CAE  006F FF7B FFE6     	movff	postinc2,postinc1
  4895  012CB4  006F FF7B FFE6     	movff	postinc2,postinc1
  4896                           
  4897                           ;stkvar	_j @ sp[(-18)+7]
  4898  012CBA  0EF5               	movlw	-11
  4899  012CBC  50E3               	movf	plusw1,w,c
  4900  012CBE  6EE6               	movwf	postinc1,c
  4901  012CC0  EC0C  F0D9         	call	_get_raw_result	;wreg free
  4902  012CC4  0060  F007  FFE6   	movff	btemp,postinc1
  4903  012CCA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4904  012CD0  0E83               	movlw	low STR_19
  4905  012CD2  6EE6               	movwf	postinc1,c
  4906  012CD4  0EFF               	movlw	high STR_19
  4907  012CD6  6EE6               	movwf	postinc1,c
  4908  012CD8  0E00               	movlw	0
  4909  012CDA  6EE6               	movwf	postinc1,c
  4910  012CDC  0E01               	movlw	1
  4911  012CDE  6EE6               	movwf	postinc1,c
  4912  012CE0  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4913  012CE4  0060  F007  FFE6   	movff	btemp,postinc1
  4914  012CEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4915  012CF0  0E0C               	movlw	12
  4916  012CF2  6EE6               	movwf	postinc1,c
  4917  012CF4  ECA2  F0C8         	call	_sprintf	;wreg free
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;main.c: 359:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  4921                           ;stkvar	_inp_index @ sp[(-12)+9]
  4922  012CF8  0EFD               	movlw	-3
  4923  012CFA  50E3               	movf	plusw1,w,c
  4924  012CFC  6E0B               	movwf	(btemp+10)^0,c
  4925  012CFE  6A0C               	clrf	(btemp+11)^0,c
  4926  012D00  0E01               	movlw	1
  4927  012D02  260B               	addwf	(btemp+10)^0,f,c
  4928  012D04  0E00               	movlw	0
  4929  012D06  220C               	addwfc	(btemp+11)^0,f,c
  4930  012D08  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4931  012D0E  0060  F033  FFE6   	movff	btemp+11,postinc1
  4932                           
  4933                           ;stkvar	_k @ sp[(-14)+6]
  4934  012D14  0EF8               	movlw	-8
  4935  012D16  50E3               	movf	plusw1,w,c
  4936  012D18  0D04               	mullw	4
  4937  012D1A  0E00               	movlw	low _C
  4938  012D1C  24F3               	addwf	243,w,c
  4939  012D1E  6ED9               	movwf	fsr2l,c
  4940  012D20  0E01               	movlw	high _C
  4941  012D22  20F4               	addwfc	prodh,w,c
  4942  012D24  6EDA               	movwf	fsr2h,c
  4943  012D26  006F FF7B FFE6     	movff	postinc2,postinc1
  4944  012D2C  006F FF7B FFE6     	movff	postinc2,postinc1
  4945  012D32  006F FF7B FFE6     	movff	postinc2,postinc1
  4946  012D38  006F FF7B FFE6     	movff	postinc2,postinc1
  4947                           
  4948                           ;stkvar	_k @ sp[(-18)+6]
  4949  012D3E  0EF4               	movlw	-12
  4950  012D40  50E3               	movf	plusw1,w,c
  4951  012D42  6EE6               	movwf	postinc1,c
  4952  012D44  EC0C  F0D9         	call	_get_raw_result	;wreg free
  4953  012D48  0060  F007  FFE6   	movff	btemp,postinc1
  4954  012D4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4955  012D54  0E61               	movlw	low STR_21
  4956  012D56  6EE6               	movwf	postinc1,c
  4957  012D58  0EFF               	movlw	high STR_21
  4958  012D5A  6EE6               	movwf	postinc1,c
  4959  012D5C  0E00               	movlw	0
  4960  012D5E  6EE6               	movwf	postinc1,c
  4961  012D60  0E02               	movlw	2
  4962  012D62  6EE6               	movwf	postinc1,c
  4963  012D64  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  4964  012D68  0060  F007  FFE6   	movff	btemp,postinc1
  4965  012D6E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4966  012D74  0E0C               	movlw	12
  4967  012D76  6EE6               	movwf	postinc1,c
  4968  012D78  ECA2  F0C8         	call	_sprintf	;wreg free
  4969                           
  4970                           ;main.c: 360:      break;
  4971  012D7C  D015               	goto	l12734
  4972  012D7E                     l12732:
  4973  012D7E  0100               	movlb	0	; () banked
  4974  012D80  51F3               	movf	_H& (0+255),w,b
  4975  012D82  6E0B               	movwf	(btemp+10)^0,c
  4976  012D84  6A0C               	clrf	(btemp+11)^0,c
  4977                           
  4978                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4979                           ; Switch size 1, requested type "simple"
  4980                           ; Number of cases is 1, Range of values is 0 to 0
  4981                           ; switch strategies available:
  4982                           ; Name         Instructions Cycles
  4983                           ; simple_byte            4     3 (average)
  4984                           ;	Chosen strategy is simple_byte
  4985  012D86  500C               	movf	(btemp+11)^0,w,c
  4986  012D88  0A00               	xorlw	0	; case 0
  4987  012D8A  A4D8               	btfss	status,2,c
  4988  012D8C  D00D               	goto	l12734
  4989                           
  4990                           ; BSR set to: 0
  4991                           ; Switch size 1, requested type "simple"
  4992                           ; Number of cases is 4, Range of values is 0 to 3
  4993                           ; switch strategies available:
  4994                           ; Name         Instructions Cycles
  4995                           ; simple_byte           13     7 (average)
  4996                           ;	Chosen strategy is simple_byte
  4997  012D8E  500B               	movf	(btemp+10)^0,w,c
  4998  012D90  0A00               	xorlw	0	; case 0
  4999  012D92  B4D8               	btfsc	status,2,c
  5000  012D94  D605               	goto	l1348
  5001  012D96  0A01               	xorlw	1	; case 1
  5002  012D98  B4D8               	btfsc	status,2,c
  5003  012D9A  D59F               	goto	l1346
  5004  012D9C  0A03               	xorlw	3	; case 2
  5005  012D9E  B4D8               	btfsc	status,2,c
  5006  012DA0  D686               	goto	l1349
  5007  012DA2  0A01               	xorlw	1	; case 3
  5008  012DA4  B4D8               	btfsc	status,2,c
  5009  012DA6  D6FC               	goto	l12718
  5010  012DA8                     l12734:
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;main.c: 364:     clear_hid_pflags(&H);
  5014  012DA8  0EF3               	movlw	_H& (0+255)
  5015  012DAA  6EE6               	movwf	postinc1,c
  5016  012DAC  EC52  F0D8         	call	_clear_hid_pflags	;wreg free
  5017                           
  5018                           ;main.c: 366:    StartTimer(TMR_DISPLAY, 250);
  5019  012DB0  0EFA               	movlw	250
  5020  012DB2  6EE6               	movwf	postinc1,c
  5021  012DB4  0E00               	movlw	0
  5022  012DB6  6EE6               	movwf	postinc1,c
  5023  012DB8  0E0A               	movlw	10
  5024  012DBA  6EE6               	movwf	postinc1,c
  5025  012DBC  ECA6  F0D4         	call	_StartTimer	;wreg free
  5026                           
  5027                           ;main.c: 367:    update_lcd(0);
  5028  012DC0  0E00               	movlw	0
  5029  012DC2  6EE6               	movwf	postinc1,c
  5030  012DC4  EC93  F0C7         	call	_update_lcd	;wreg free
  5031  012DC8                     l12740:
  5032                           
  5033                           ;main.c: 373:   check_help(V.flipper);
  5034  012DC8  0102               	movlb	2	; () banked
  5035  012DCA  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  5036  012DCC  6EE6               	movwf	postinc1,c
  5037  012DCE  EC6E  F0BA         	call	_check_help	;wreg free
  5038                           
  5039                           ;main.c: 375:   if (check_enter_button(&H)) {
  5040  012DD2  0EF3               	movlw	_H& (0+255)
  5041  012DD4  6EE6               	movwf	postinc1,c
  5042  012DD6  ECC6  F0D4         	call	_check_enter_button	;wreg free
  5043  012DDA  5001               	movf	btemp^0,w,c
  5044  012DDC  B4D8               	btfsc	status,2,c
  5045  012DDE  D062               	goto	l1353
  5046                           
  5047                           ;main.c: 376:    V.calib = 0;
  5048  012DE0  0102               	movlb	2	; () banked
  5049  012DE2  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  5050                           
  5051                           ; BSR set to: 2
  5052                           ;main.c: 377:    inp_index += 3;
  5053                           ;stkvar	_inp_index @ sp[(-12)+9]
  5054  012DE4  0EFD               	movlw	-3
  5055  012DE6  006F FF8C  F001    	movff	plusw1,btemp
  5056  012DEC  0E03               	movlw	3
  5057  012DEE  2601               	addwf	btemp^0,f,c
  5058  012DF0  0EFD               	movlw	-3
  5059  012DF2  0060  F007  FFE3   	movff	btemp,plusw1
  5060                           
  5061                           ;main.c: 378:    if (inp_index > 9)
  5062                           ;stkvar	_inp_index @ sp[(-12)+9]
  5063  012DF8  0EFD               	movlw	-3
  5064  012DFA  006F FF8C  F001    	movff	plusw1,btemp
  5065  012E00  0E09               	movlw	9
  5066  012E02  6401               	cpfsgt	btemp^0,c
  5067  012E04  D03A               	goto	l12768
  5068                           
  5069                           ; BSR set to: 2
  5070                           ;main.c: 379:     inp_index = 0;
  5071                           ;stkvar	_inp_index @ sp[(-12)+9]
  5072  012E06  0EFD               	movlw	-3
  5073  012E08  6AE3               	clrf	plusw1,c
  5074  012E0A  D037               	goto	l12768
  5075  012E0C                     l12750:
  5076                           
  5077                           ; BSR set to: 2
  5078                           ;main.c: 382:     i = C_BATT;
  5079                           ;stkvar	_i @ sp[(-12)+8]
  5080  012E0C  0EFC               	movlw	-4
  5081  012E0E  6AE3               	clrf	plusw1,c
  5082                           
  5083                           ; BSR set to: 2
  5084                           ;main.c: 383:     j = C_PV;
  5085                           ;stkvar	_j @ sp[(-12)+7]
  5086  012E10  0EFB               	movlw	-5
  5087  012E12  6AE3               	clrf	plusw1,c
  5088  012E14  2AE3               	incf	plusw1,f,c
  5089                           
  5090                           ; BSR set to: 2
  5091                           ;main.c: 384:     k = V_CC;
  5092                           ;stkvar	_k @ sp[(-12)+6]
  5093  012E16  0EFA               	movlw	-6
  5094  012E18  6AE3               	clrf	plusw1,c
  5095  012E1A  82E3               	bsf	plusw1,1,c
  5096                           
  5097                           ;main.c: 385:     break;
  5098  012E1C  D043               	goto	l1353
  5099  012E1E                     l12756:
  5100                           
  5101                           ; BSR set to: 2
  5102                           ;main.c: 387:     i = V_BAT;
  5103                           ;stkvar	_i @ sp[(-12)+8]
  5104  012E1E  0EFC               	movlw	-4
  5105  012E20  6AE3               	clrf	plusw1,c
  5106  012E22  84E3               	bsf	plusw1,2,c
  5107                           
  5108                           ;main.c: 388:     j = V_PV;
  5109                           ;stkvar	_j @ sp[(-12)+7]
  5110  012E24  0EFB               	movlw	-5
  5111  012E26  6AE3               	clrf	plusw1,c
  5112  012E28  80E3               	bsf	plusw1,0,c
  5113  012E2A  84E3               	bsf	plusw1,2,c	;indir
  5114                           
  5115                           ;main.c: 389:     k = V_CBUS;
  5116                           ;stkvar	_k @ sp[(-12)+6]
  5117  012E2C  0EFA               	movlw	-6
  5118  012E2E  6AE3               	clrf	plusw1,c
  5119  012E30  82E3               	bsf	plusw1,1,c
  5120  012E32  84E3               	bsf	plusw1,2,c	;indir
  5121                           
  5122                           ;main.c: 390:     break;
  5123  012E34  D037               	goto	l1353
  5124  012E36                     l12758:
  5125                           
  5126                           ; BSR set to: 2
  5127                           ;main.c: 392:     i = V_BBAT;
  5128                           ;stkvar	_i @ sp[(-12)+8]
  5129  012E36  0EFC               	movlw	-4
  5130  012E38  6AE3               	clrf	plusw1,c
  5131  012E3A  82E3               	bsf	plusw1,1,c
  5132  012E3C  86E3               	bsf	plusw1,3,c	;indir
  5133                           
  5134                           ; BSR set to: 2
  5135                           ;main.c: 393:     j = V_TEMP;
  5136  012E3E  0E0B               	movlw	11
  5137  012E40  6E0C               	movwf	(btemp+11)^0,c
  5138                           
  5139                           ;stkvar	_j @ sp[(-12)+7]
  5140  012E42  0EFB               	movlw	-5
  5141  012E44  0060  F033  FFE3   	movff	btemp+11,plusw1
  5142                           
  5143                           ; BSR set to: 2
  5144                           ;main.c: 394:     k = V_INVERTER;
  5145                           ;stkvar	_k @ sp[(-12)+6]
  5146  012E4A  0EFA               	movlw	-6
  5147  012E4C  6AE3               	clrf	plusw1,c
  5148  012E4E  84E3               	bsf	plusw1,2,c
  5149  012E50  86E3               	bsf	plusw1,3,c	;indir
  5150                           
  5151                           ;main.c: 395:     break;
  5152  012E52  D028               	goto	l1353
  5153  012E54                     l12764:
  5154                           
  5155                           ; BSR set to: 2
  5156                           ;main.c: 397:     i = channel_ANB5;
  5157  012E54  0E0D               	movlw	13
  5158  012E56  6E0C               	movwf	(btemp+11)^0,c
  5159                           
  5160                           ;stkvar	_i @ sp[(-12)+8]
  5161  012E58  0EFC               	movlw	-4
  5162  012E5A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5163                           
  5164                           ;main.c: 398:     j = channel_ANB5;
  5165  012E60  0E0D               	movlw	13
  5166  012E62  6E0C               	movwf	(btemp+11)^0,c
  5167                           
  5168                           ;stkvar	_j @ sp[(-12)+7]
  5169  012E64  0EFB               	movlw	-5
  5170  012E66  0060  F033  FFE3   	movff	btemp+11,plusw1
  5171                           
  5172                           ;main.c: 399:     k = channel_ANB5;
  5173  012E6C  0E0D               	movlw	13
  5174  012E6E  6E0C               	movwf	(btemp+11)^0,c
  5175                           
  5176                           ;stkvar	_k @ sp[(-12)+6]
  5177  012E70  0EFA               	movlw	-6
  5178  012E72  0060  F033  FFE3   	movff	btemp+11,plusw1
  5179                           
  5180                           ;main.c: 400:     break;
  5181  012E78  D015               	goto	l1353
  5182  012E7A                     l12768:
  5183                           
  5184                           ; BSR set to: 2
  5185                           ;stkvar	_inp_index @ sp[(-12)+9]
  5186  012E7A  0EFD               	movlw	-3
  5187  012E7C  50E3               	movf	plusw1,w,c
  5188  012E7E  6E0B               	movwf	(btemp+10)^0,c
  5189  012E80  6A0C               	clrf	(btemp+11)^0,c
  5190                           
  5191                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5192                           ; Switch size 1, requested type "simple"
  5193                           ; Number of cases is 1, Range of values is 0 to 0
  5194                           ; switch strategies available:
  5195                           ; Name         Instructions Cycles
  5196                           ; simple_byte            4     3 (average)
  5197                           ;	Chosen strategy is simple_byte
  5198  012E82  500C               	movf	(btemp+11)^0,w,c
  5199  012E84  0A00               	xorlw	0	; case 0
  5200  012E86  A4D8               	btfss	status,2,c
  5201  012E88  D00D               	goto	l1353
  5202                           
  5203                           ; BSR set to: 2
  5204                           ; Switch size 1, requested type "simple"
  5205                           ; Number of cases is 4, Range of values is 0 to 9
  5206                           ; switch strategies available:
  5207                           ; Name         Instructions Cycles
  5208                           ; simple_byte           13     7 (average)
  5209                           ;	Chosen strategy is simple_byte
  5210  012E8A  500B               	movf	(btemp+10)^0,w,c
  5211  012E8C  0A00               	xorlw	0	; case 0
  5212  012E8E  B4D8               	btfsc	status,2,c
  5213  012E90  D7BD               	goto	l12750
  5214  012E92  0A03               	xorlw	3	; case 3
  5215  012E94  B4D8               	btfsc	status,2,c
  5216  012E96  D7C3               	goto	l12756
  5217  012E98  0A05               	xorlw	5	; case 6
  5218  012E9A  B4D8               	btfsc	status,2,c
  5219  012E9C  D7CC               	goto	l12758
  5220  012E9E  0A0F               	xorlw	15	; case 9
  5221  012EA0  B4D8               	btfsc	status,2,c
  5222  012EA2  D7D8               	goto	l12764
  5223  012EA4                     l1353:
  5224                           
  5225                           ;main.c: 409:   if (V.set_sequ) {
  5226  012EA4  0102               	movlb	2	; () banked
  5227  012EA6  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  5228  012EA8  D4CE               	goto	l12684
  5229                           
  5230                           ; BSR set to: 2
  5231                           ;main.c: 410:    if (TimerDone(TMR_INFO)) {
  5232  012EAA  0E07               	movlw	7
  5233  012EAC  6EE6               	movwf	postinc1,c
  5234  012EAE  EC27  F0D7         	call	_TimerDone	;wreg free
  5235  012EB2  5001               	movf	btemp^0,w,c
  5236  012EB4  B4D8               	btfsc	status,2,c
  5237  012EB6  D00B               	goto	l12778
  5238                           
  5239                           ;main.c: 411:     V.set_sequ = 0;
  5240  012EB8  0102               	movlb	2	; () banked
  5241  012EBA  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  5242                           
  5243                           ; BSR set to: 2
  5244                           ;main.c: 412:     set_vterm(0);
  5245  012EBC  0E00               	movlw	0
  5246  012EBE  6EE6               	movwf	postinc1,c
  5247  012EC0  ECEE  F0D8         	call	_set_vterm	;wreg free
  5248                           
  5249                           ;main.c: 413:     update_lcd(0);
  5250  012EC4  0E00               	movlw	0
  5251  012EC6  6EE6               	movwf	postinc1,c
  5252  012EC8  EC93  F0C7         	call	_update_lcd	;wreg free
  5253                           
  5254                           ;main.c: 414:    } else {
  5255  012ECC  D4BC               	goto	l12684
  5256  012ECE                     l12778:
  5257                           
  5258                           ;main.c: 415:     set_vterm(2);
  5259  012ECE  0E02               	movlw	2
  5260  012ED0  6EE6               	movwf	postinc1,c
  5261  012ED2  ECEE  F0D8         	call	_set_vterm	;wreg free
  5262                           
  5263                           ;main.c: 416:     update_lcd(2);
  5264  012ED6  0E02               	movlw	2
  5265  012ED8  6EE6               	movwf	postinc1,c
  5266  012EDA  EC93  F0C7         	call	_update_lcd	;wreg free
  5267  012EDE  D4B3               	goto	l12684
  5268  012EE0                     __end_of_main:
  5269                           	opt callstack 0
  5270                           
  5271 ;; *************** function _static_soc *****************
  5272 ;; Defined at:
  5273 ;;		line 116 in file "mbmc.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;		None
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1  [STACK] void 
  5280 ;; Registers used:
  5281 ;;		wreg, status,2
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 3F/1
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5291 ;;Total ram usage:        0 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; Hardware stack levels required when called:   15
  5294 ;; This function calls:
  5295 ;;		Nothing
  5296 ;; This function is called by:
  5297 ;;		_main
  5298 ;; This function uses a reentrant model
  5299 ;;
  5300                           
  5301                           	psect	text1
  5302  01B080                     __ptext1:
  5303                           	opt callstack 0
  5304  01B080                     _static_soc:
  5305                           	opt callstack 15
  5306                           
  5307                           ;mbmc.c: 118:  C.runtime = 120;
  5308                           
  5309                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5310                           ;incstack = 0
  5311  01B080  0E00               	movlw	0
  5312  01B082  0101               	movlb	1	; () banked
  5313  01B084  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
  5314  01B086  0E78               	movlw	120
  5315  01B088  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
  5316                           
  5317                           ;mbmc.c: 119:  C.soc = 100;
  5318  01B08A  0E00               	movlw	0
  5319  01B08C  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
  5320  01B08E  0E64               	movlw	100
  5321  01B090  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
  5322                           
  5323                           ; BSR set to: 1
  5324                           ;mbmc.c: 120:  C.dynamic_ah = C.bank_ah;
  5325  01B092  C188  F18C         	movff	_C+136,_C+140	;volatile
  5326  01B096  C189  F18D         	movff	_C+137,_C+141	;volatile
  5327  01B09A  C18A  F18E         	movff	_C+138,_C+142	;volatile
  5328  01B09E  C18B  F18F         	movff	_C+139,_C+143	;volatile
  5329                           
  5330                           ; BSR set to: 1
  5331                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5332  01B0A2  0012               	return		;funcret
  5333  01B0A4                     __end_of_static_soc:
  5334                           	opt callstack 0
  5335                           
  5336 ;; *************** function _start_switch_handler *****************
  5337 ;; Defined at:
  5338 ;;		line 119 in file "dio.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;		None
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;		None
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  1  [STACK] void 
  5345 ;; Registers used:
  5346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  5347 ;; Tracked objects:
  5348 ;;		On entry : 1/0
  5349 ;;		On exit  : 3F/39
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5356 ;;Total ram usage:        0 bytes
  5357 ;; Hardware stack levels used:    1
  5358 ;; Hardware stack levels required when called:   16
  5359 ;; This function calls:
  5360 ;;		_INT1_SetInterruptHandler
  5361 ;; This function is called by:
  5362 ;;		_main
  5363 ;; This function uses a reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text2
  5367  01B19E                     __ptext2:
  5368                           	opt callstack 0
  5369  01B19E                     _start_switch_handler:
  5370                           	opt callstack 14
  5371                           
  5372                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  5373                           
  5374                           ; BSR set to: 1
  5375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5376                           ;incstack = 0
  5377  01B19E  0139               	movlb	57	; () banked
  5378  01B1A0  9195               	bcf	149,0,b	;volatile
  5379                           
  5380                           ; BSR set to: 57
  5381                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  5382  01B1A2  0E6C               	movlw	low _switch_handler
  5383  01B1A4  6EE6               	movwf	postinc1,c
  5384  01B1A6  0E89               	movlw	high _switch_handler
  5385  01B1A8  6EE6               	movwf	postinc1,c
  5386  01B1AA  0E01               	movlw	low (_switch_handler shr (0+16))
  5387  01B1AC  6EE6               	movwf	postinc1,c
  5388  01B1AE  ECB3  F0D7         	call	_INT1_SetInterruptHandler	;wreg free
  5389                           
  5390                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  5391  01B1B2  0E02               	movlw	2
  5392  01B1B4  0102               	movlb	2	; () banked
  5393  01B1B6  6FDF               	movwf	(_S+35)& (0+255),b	;volatile
  5394                           
  5395                           ; BSR set to: 2
  5396                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  5397  01B1B8  0139               	movlb	57	; () banked
  5398  01B1BA  8195               	bsf	149,0,b	;volatile
  5399                           
  5400                           ; BSR set to: 57
  5401                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  5402  01B1BC  0012               	return		;funcret
  5403  01B1BE                     __end_of_start_switch_handler:
  5404                           	opt callstack 0
  5405                           
  5406 ;; *************** function _srand *****************
  5407 ;; Defined at:
  5408 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;  s               2  [STACK] unsigned int 
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;		None
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  1  [STACK] void 
  5415 ;; Registers used:
  5416 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 3F/1
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5426 ;;Total ram usage:        0 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; Hardware stack levels required when called:   15
  5429 ;; This function calls:
  5430 ;;		Nothing
  5431 ;; This function is called by:
  5432 ;;		_main
  5433 ;; This function uses a reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text3
  5437  01AB9E                     __ptext3:
  5438                           	opt callstack 0
  5439  01AB9E                     _srand:
  5440                           	opt callstack 15
  5441                           
  5442                           ;stkvar	_s @ sp[(0)+-2]
  5443                           
  5444                           ; BSR set to: 57
  5445                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5446                           ;incstack = 0
  5447  01AB9E  0EFE               	movlw	-2
  5448  01ABA0  50E3               	movf	plusw1,w,c
  5449  01ABA2  0FFF               	addlw	255
  5450  01ABA4  6E0B               	movwf	(btemp+10)^0,c
  5451  01ABA6  0EFF               	movlw	-1
  5452  01ABA8  006F FF8C  F00C    	movff	plusw1,btemp+11
  5453  01ABAE  0EFF               	movlw	255
  5454  01ABB0  220C               	addwfc	(btemp+11)^0,f,c
  5455  01ABB2  0060  F02C  F1F3   	movff	btemp+10,_seed
  5456  01ABB8  0060  F030  F1F4   	movff	btemp+11,_seed+1
  5457  01ABBE  0101               	movlb	1	; () banked
  5458  01ABC0  6BF5               	clrf	(_seed+2)& (0+255),b
  5459  01ABC2  6BF6               	clrf	(_seed+3)& (0+255),b
  5460  01ABC4  6BF7               	clrf	(_seed+4)& (0+255),b
  5461  01ABC6  6BF8               	clrf	(_seed+5)& (0+255),b
  5462  01ABC8  6BF9               	clrf	(_seed+6)& (0+255),b
  5463  01ABCA  6BFA               	clrf	(_seed+7)& (0+255),b
  5464                           
  5465                           ; BSR set to: 1
  5466                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  5467  01ABCC  52E5               	movf	postdec1,f,c
  5468  01ABCE  52E5               	movf	postdec1,f,c
  5469  01ABD0  0012               	return		;funcret
  5470  01ABD2                     __end_of_srand:
  5471                           	opt callstack 0
  5472                           
  5473 ;; *************** function _spinners *****************
  5474 ;; Defined at:
  5475 ;;		line 134 in file "mbmc.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;  shape           1  [STACK] unsigned char 
  5478 ;;  reset           1  [STACK] unsigned char 
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;  c               1  [STACK] unsigned char 
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  1  [STACK] unsigned char 
  5483 ;; Registers used:
  5484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5494 ;;Total ram usage:        0 bytes
  5495 ;; Hardware stack levels used:    1
  5496 ;; Hardware stack levels required when called:   16
  5497 ;; This function calls:
  5498 ;;		_strlen
  5499 ;; This function is called by:
  5500 ;;		_main
  5501 ;; This function uses a reentrant model
  5502 ;;
  5503                           
  5504                           	psect	text4
  5505  01952E                     __ptext4:
  5506                           	opt callstack 0
  5507  01952E                     _spinners:
  5508                           	opt callstack 0
  5509                           
  5510                           ; BSR set to: 1
  5511                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5512  01952E  52E6               	movf	postinc1,f,c
  5513                           
  5514                           ;mbmc.c: 134: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 135: {;mbmc.c: 136:  s
      +                          tatic uint8_t s[6];;mbmc.c: 137:  char c;;mbmc.c: 139:  if (shape > (6 - 1)) shape = 0;
  5515                           ;stkvar	_shape @ sp[(-1)+-1]
  5516                           
  5517                           ;incstack = 0
  5518  019530  0EFE               	movlw	-2
  5519  019532  006F FF8C  F001    	movff	plusw1,btemp
  5520  019538  0E05               	movlw	5
  5521  01953A  6401               	cpfsgt	btemp^0,c
  5522  01953C  D002               	goto	l1863
  5523                           
  5524                           ;stkvar	_shape @ sp[(-1)+-1]
  5525  01953E  0EFE               	movlw	-2
  5526  019540  6AE3               	clrf	plusw1,c
  5527  019542                     l1863:
  5528                           
  5529                           ;mbmc.c: 140:  if (reset) s[shape] = 0;
  5530                           ;stkvar	_reset @ sp[(-1)+-2]
  5531  019542  0EFD               	movlw	-3
  5532  019544  50E3               	movf	plusw1,w,c
  5533  019546  B4D8               	btfsc	status,2,c
  5534  019548  D00A               	goto	l10550
  5535                           
  5536                           ;stkvar	_shape @ sp[(-1)+-1]
  5537  01954A  0EFE               	movlw	-2
  5538  01954C  006F FF8C  F00C    	movff	plusw1,btemp+11
  5539  019552  500C               	movf	(btemp+11)^0,w,c
  5540  019554  0F74               	addlw	low spinners@s
  5541  019556  6ED9               	movwf	fsr2l,c
  5542  019558  6ADA               	clrf	fsr2h,c
  5543  01955A  0E00               	movlw	0
  5544  01955C  6EDF               	movwf	indf2,c
  5545  01955E                     l10550:
  5546                           
  5547                           ;mbmc.c: 141:  c = spin[shape][s[shape]];
  5548                           ;stkvar	_shape @ sp[(-1)+-1]
  5549  01955E  0EFE               	movlw	-2
  5550  019560  50E3               	movf	plusw1,w,c
  5551  019562  0D14               	mullw	20
  5552  019564  0E89               	movlw	low _spin
  5553  019566  6E0B               	movwf	(btemp+10)^0,c
  5554  019568  0EFC               	movlw	high _spin
  5555  01956A  6E0C               	movwf	(btemp+11)^0,c
  5556  01956C  50F3               	movf	243,w,c
  5557  01956E  260B               	addwf	(btemp+10)^0,f,c
  5558  019570  50F4               	movf	244,w,c
  5559  019572  220C               	addwfc	(btemp+11)^0,f,c
  5560                           
  5561                           ;stkvar	_shape @ sp[(-1)+-1]
  5562  019574  0EFE               	movlw	-2
  5563  019576  006F FF8C  F00A    	movff	plusw1,btemp+9
  5564  01957C  500A               	movf	(btemp+9)^0,w,c
  5565  01957E  0F74               	addlw	low spinners@s
  5566  019580  6ED9               	movwf	fsr2l,c
  5567  019582  6ADA               	clrf	fsr2h,c
  5568  019584  50DF               	movf	indf2,w,c
  5569  019586  260B               	addwf	(btemp+10)^0,f,c
  5570  019588  0E00               	movlw	0
  5571  01958A  220C               	addwfc	(btemp+11)^0,f,c
  5572  01958C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  5573  019592  0060  F033  FFF7   	movff	btemp+11,tblptrh
  5574  019598                     	if	0	;tblptru may be non-zero
  5575  019598                     	endif
  5576  019598                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5577  019598  0E00               	movlw	low (__mediumconst shr (0+16))
  5578  01959A  6EF8               	movwf	tblptru,c
  5579  01959C                     	endif
  5580                           
  5581                           ;stkvar	_c @ sp[(-1)+0]
  5582  01959C  0008               	tblrd		*
  5583  01959E  0EFF               	movlw	-1
  5584  0195A0  006F FFD7 FFE3     	movff	tablat,plusw1
  5585                           
  5586                           ;mbmc.c: 142:  if (++s[shape] >= strlen(spin[shape])) s[shape] = 0;
  5587                           ;stkvar	_shape @ sp[(-1)+-1]
  5588  0195A6  0EFE               	movlw	-2
  5589  0195A8  50E3               	movf	plusw1,w,c
  5590  0195AA  0D14               	mullw	20
  5591  0195AC  0E89               	movlw	low _spin
  5592  0195AE  6E0B               	movwf	(btemp+10)^0,c
  5593  0195B0  0EFC               	movlw	high _spin
  5594  0195B2  6E0C               	movwf	(btemp+11)^0,c
  5595  0195B4  50F3               	movf	243,w,c
  5596  0195B6  260B               	addwf	(btemp+10)^0,f,c
  5597  0195B8  50F4               	movf	244,w,c
  5598  0195BA  220C               	addwfc	(btemp+11)^0,f,c
  5599  0195BC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5600  0195C2  0060  F033  FFE6   	movff	btemp+11,postinc1
  5601  0195C8  ECE5  F0CD         	call	_strlen	;wreg free
  5602                           
  5603                           ;stkvar	_shape @ sp[(-1)+-1]
  5604  0195CC  0EFE               	movlw	-2
  5605  0195CE  006F FF8C  F00C    	movff	plusw1,btemp+11
  5606  0195D4  500C               	movf	(btemp+11)^0,w,c
  5607  0195D6  0F74               	addlw	low spinners@s
  5608  0195D8  6ED9               	movwf	fsr2l,c
  5609  0195DA  6ADA               	clrf	fsr2h,c
  5610  0195DC  2ADF               	incf	indf2,f,c
  5611  0195DE  50DF               	movf	indf2,w,c
  5612  0195E0  6E0B               	movwf	(btemp+10)^0,c
  5613  0195E2  6A0C               	clrf	(btemp+11)^0,c
  5614  0195E4  5001               	movf	btemp^0,w,c
  5615  0195E6  5C0B               	subwf	(btemp+10)^0,w,c
  5616  0195E8  5002               	movf	(btemp+1)^0,w,c
  5617  0195EA  580C               	subwfb	(btemp+11)^0,w,c
  5618  0195EC  A0D8               	btfss	status,0,c
  5619  0195EE  D00A               	goto	l10556
  5620                           
  5621                           ;stkvar	_shape @ sp[(-1)+-1]
  5622  0195F0  0EFE               	movlw	-2
  5623  0195F2  006F FF8C  F00C    	movff	plusw1,btemp+11
  5624  0195F8  500C               	movf	(btemp+11)^0,w,c
  5625  0195FA  0F74               	addlw	low spinners@s
  5626  0195FC  6ED9               	movwf	fsr2l,c
  5627  0195FE  6ADA               	clrf	fsr2h,c
  5628  019600  0E00               	movlw	0
  5629  019602  6EDF               	movwf	indf2,c
  5630  019604                     l10556:
  5631                           
  5632                           ;mbmc.c: 143:  return c;
  5633                           ;stkvar	_c @ sp[(-1)+0]
  5634  019604  0EFF               	movlw	-1
  5635  019606  006F FF8C  F001    	movff	plusw1,btemp
  5636                           
  5637                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  5638  01960C  52E5               	movf	postdec1,f,c
  5639  01960E  52E5               	movf	postdec1,f,c
  5640  019610  52E5               	movf	postdec1,f,c
  5641  019612  0012               	return		;funcret
  5642  019614                     __end_of_spinners:
  5643                           	opt callstack 0
  5644                           
  5645 ;; *************** function _init_port_dma *****************
  5646 ;; Defined at:
  5647 ;;		line 90 in file "eadog.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;		None
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;		None
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  1  [STACK] void 
  5654 ;; Registers used:
  5655 ;;		wreg, status,2
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/2
  5658 ;;		On exit  : 3F/3B
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5665 ;;Total ram usage:        0 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:   15
  5668 ;; This function calls:
  5669 ;;		Nothing
  5670 ;; This function is called by:
  5671 ;;		_main
  5672 ;; This function uses a reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text5
  5676  01AC3A                     __ptext5:
  5677                           	opt callstack 0
  5678  01AC3A                     _init_port_dma:
  5679                           	opt callstack 15
  5680                           
  5681                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  5682                           
  5683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5684                           ;incstack = 0
  5685  01AC3A  0E3F               	movlw	-193
  5686  01AC3C  013B               	movlb	59	; () banked
  5687  01AC3E  17DD               	andwf	221,f,b	;volatile
  5688                           
  5689                           ; BSR set to: 59
  5690                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  5691  01AC40  9BDD               	bcf	221,5,b	;volatile
  5692                           
  5693                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  5694  01AC42  51DD               	movf	221,w,b	;volatile
  5695  01AC44  0BF9               	andlw	-7
  5696  01AC46  0902               	iorlw	2
  5697  01AC48  6FDD               	movwf	221,b	;volatile
  5698                           
  5699                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  5700  01AC4A  0EE7               	movlw	-25
  5701  01AC4C  17DD               	andwf	221,f,b	;volatile
  5702                           
  5703                           ; BSR set to: 59
  5704                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  5705  01AC4E  81DD               	bsf	221,0,b	;volatile
  5706                           
  5707                           ; BSR set to: 59
  5708                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  5709  01AC50  9DDC               	bcf	220,6,b	;volatile
  5710                           
  5711                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  5712  01AC52  0E3D               	movlw	61
  5713  01AC54  6FD1               	movwf	209,b	;volatile
  5714  01AC56  0EEA               	movlw	234
  5715  01AC58  6FD0               	movwf	208,b	;volatile
  5716                           
  5717                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  5718  01AC5A  0EFF               	movlw	low _port_data
  5719  01AC5C  6FD9               	movwf	217,b	;volatile
  5720  01AC5E  0E05               	movlw	high _port_data
  5721  01AC60  6FDA               	movwf	218,b	;volatile
  5722  01AC62  0E00               	movlw	low (_port_data shr (0+16))
  5723  01AC64  6FDB               	movwf	219,b	;volatile
  5724                           
  5725                           ; BSR set to: 59
  5726                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  5727  01AC66  9BDC               	bcf	220,5,b	;volatile
  5728                           
  5729                           ; BSR set to: 59
  5730                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5731  01AC68  0012               	return		;funcret
  5732  01AC6A                     __end_of_init_port_dma:
  5733                           	opt callstack 0
  5734                           
  5735 ;; *************** function _init_display *****************
  5736 ;; Defined at:
  5737 ;;		line 38 in file "eadog.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;		None
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;		None
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1  [STACK] void 
  5744 ;; Registers used:
  5745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5746 ;; Tracked objects:
  5747 ;;		On entry : 3F/3B
  5748 ;;		On exit  : 3F/3D
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5755 ;;Total ram usage:        0 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; Hardware stack levels required when called:   17
  5758 ;; This function calls:
  5759 ;;		_ringBufS_init
  5760 ;;		_send_lcd_cmd
  5761 ;;		_send_lcd_cmd_long
  5762 ;;		_wdtdelay
  5763 ;; This function is called by:
  5764 ;;		_main
  5765 ;; This function uses a reentrant model
  5766 ;;
  5767                           
  5768                           	psect	text6
  5769  019444                     __ptext6:
  5770                           	opt callstack 0
  5771  019444                     _init_display:
  5772                           	opt callstack 13
  5773                           
  5774                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  5775                           
  5776                           ; BSR set to: 59
  5777                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5778                           ;incstack = 0
  5779  019444  0E43               	movlw	low _ring_buf1
  5780  019446  0100               	movlb	0	; () banked
  5781  019448  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  5782  01944A  0E04               	movlw	high _ring_buf1
  5783  01944C  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  5784                           
  5785                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  5786  01944E  0E00               	movlw	low _ring_buf2
  5787  019450  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  5788  019452  0E04               	movlw	high _ring_buf2
  5789  019454  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  5793  019456  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  5794  01945C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  5795  019462  EC13  F0D7         	call	_ringBufS_init	;wreg free
  5796                           
  5797                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  5798  019466  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  5799  01946C  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  5800  019472  EC13  F0D7         	call	_ringBufS_init	;wreg free
  5801                           
  5802                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  5803  019476  84BE               	bsf	190,2,c	;volatile
  5804  019478  84BC               	bsf	188,2,c	;volatile
  5805                           
  5806                           ;eadog.c: 59:  wdtdelay(350000);
  5807  01947A  0E30               	movlw	48
  5808  01947C  6EE6               	movwf	postinc1,c
  5809  01947E  0E57               	movlw	87
  5810  019480  6EE6               	movwf	postinc1,c
  5811  019482  0E05               	movlw	5
  5812  019484  6EE6               	movwf	postinc1,c
  5813  019486  0E00               	movlw	0
  5814  019488  6EE6               	movwf	postinc1,c
  5815  01948A  EC41  F0D2         	call	_wdtdelay	;wreg free
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  5819  01948E  0E39               	movlw	57
  5820  019490  6EE6               	movwf	postinc1,c
  5821  019492  ECFF  F0D6         	call	_send_lcd_cmd	;wreg free
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  5825  019496  0E1D               	movlw	29
  5826  019498  6EE6               	movwf	postinc1,c
  5827  01949A  ECFF  F0D6         	call	_send_lcd_cmd	;wreg free
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  5831  01949E  0E50               	movlw	80
  5832  0194A0  6EE6               	movwf	postinc1,c
  5833  0194A2  ECFF  F0D6         	call	_send_lcd_cmd	;wreg free
  5834                           
  5835                           ; BSR set to: 0
  5836                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  5837  0194A6  0E6C               	movlw	108
  5838  0194A8  6EE6               	movwf	postinc1,c
  5839  0194AA  ECFF  F0D6         	call	_send_lcd_cmd	;wreg free
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  5843  0194AE  0E76               	movlw	118
  5844  0194B0  6EE6               	movwf	postinc1,c
  5845  0194B2  ECFF  F0D6         	call	_send_lcd_cmd	;wreg free
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  5849  0194B6  0E38               	movlw	56
  5850  0194B8  6EE6               	movwf	postinc1,c
  5851  0194BA  ECEB  F0D6         	call	_send_lcd_cmd_long	;wreg free
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  5855  0194BE  0E0F               	movlw	15
  5856  0194C0  6EE6               	movwf	postinc1,c
  5857  0194C2  ECFF  F0D6         	call	_send_lcd_cmd	;wreg free
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  5861  0194C6  0E01               	movlw	1
  5862  0194C8  6EE6               	movwf	postinc1,c
  5863  0194CA  ECEB  F0D6         	call	_send_lcd_cmd_long	;wreg free
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  5867  0194CE  0E02               	movlw	2
  5868  0194D0  6EE6               	movwf	postinc1,c
  5869  0194D2  ECFF  F0D6         	call	_send_lcd_cmd	;wreg free
  5870                           
  5871                           ; BSR set to: 0
  5872                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  5873  0194D6  0E06               	movlw	6
  5874  0194D8  6EE6               	movwf	postinc1,c
  5875  0194DA  ECFF  F0D6         	call	_send_lcd_cmd	;wreg free
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;eadog.c: 70:  wdtdelay(30);
  5879  0194DE  0E1E               	movlw	30
  5880  0194E0  6EE6               	movwf	postinc1,c
  5881  0194E2  0E00               	movlw	0
  5882  0194E4  6EE6               	movwf	postinc1,c
  5883  0194E6  0E00               	movlw	0
  5884  0194E8  6EE6               	movwf	postinc1,c
  5885  0194EA  0E00               	movlw	0
  5886  0194EC  6EE6               	movwf	postinc1,c
  5887  0194EE  EC41  F0D2         	call	_wdtdelay	;wreg free
  5888                           
  5889                           ; BSR set to: 0
  5890                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  5891  0194F2  0E02               	movlw	2
  5892  0194F4  013D               	movlb	61	; () banked
  5893  0194F6  6F16               	movwf	22,b	;volatile
  5894                           
  5895                           ; BSR set to: 61
  5896                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  5897  0194F8  0E40               	movlw	64
  5898  0194FA  6F15               	movwf	21,b	;volatile
  5899                           
  5900                           ; BSR set to: 61
  5901                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  5902  0194FC  0E83               	movlw	131
  5903  0194FE  6F14               	movwf	20,b	;volatile
  5904                           
  5905                           ; BSR set to: 61
  5906                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  5907  019500  931A               	bcf	26,1,b	;volatile
  5908                           
  5909                           ; BSR set to: 61
  5910                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  5911  019502  0E3F               	movlw	-193
  5912  019504  013B               	movlb	59	; () banked
  5913  019506  17FD               	andwf	253,f,b	;volatile
  5914                           
  5915                           ; BSR set to: 59
  5916                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  5917  019508  9BFD               	bcf	253,5,b	;volatile
  5918                           
  5919                           ; BSR set to: 59
  5920                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  5921  01950A  51FD               	movf	253,w,b	;volatile
  5922  01950C  0BF9               	andlw	-7
  5923  01950E  0902               	iorlw	2
  5924  019510  6FFD               	movwf	253,b	;volatile
  5925                           
  5926                           ; BSR set to: 59
  5927                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  5928  019512  0EE7               	movlw	-25
  5929  019514  17FD               	andwf	253,f,b	;volatile
  5930                           
  5931                           ; BSR set to: 59
  5932                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  5933  019516  81FD               	bsf	253,0,b	;volatile
  5934                           
  5935                           ; BSR set to: 59
  5936                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  5937  019518  0E43               	movlw	low _ring_buf1
  5938  01951A  6FF9               	movwf	249,b	;volatile
  5939  01951C  0E04               	movlw	high _ring_buf1
  5940  01951E  6FFA               	movwf	250,b	;volatile
  5941  019520  0E00               	movlw	low (_ring_buf1 shr (0+16))
  5942  019522  6FFB               	movwf	251,b	;volatile
  5943                           
  5944                           ; BSR set to: 59
  5945                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  5946  019524  9BFC               	bcf	252,5,b	;volatile
  5947                           
  5948                           ; BSR set to: 59
  5949                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  5950  019526  013D               	movlb	61	; () banked
  5951  019528  831A               	bsf	26,1,b	;volatile
  5952                           
  5953                           ; BSR set to: 61
  5954                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  5955  01952A  94BE               	bcf	190,2,c	;volatile
  5956                           
  5957                           ; BSR set to: 61
  5958                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5959  01952C  0012               	return		;funcret
  5960  01952E                     __end_of_init_display:
  5961                           	opt callstack 0
  5962                           
  5963 ;; *************** function _send_lcd_cmd_long *****************
  5964 ;; Defined at:
  5965 ;;		line 129 in file "eadog.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;  cmd             1  [STACK] const unsigned char 
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;		None
  5970 ;; Return value:  Size  Location     Type
  5971 ;;                  1  [STACK] void 
  5972 ;; Registers used:
  5973 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5974 ;; Tracked objects:
  5975 ;;		On entry : 3F/0
  5976 ;;		On exit  : 3F/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5983 ;;Total ram usage:        0 bytes
  5984 ;; Hardware stack levels used:    1
  5985 ;; Hardware stack levels required when called:   16
  5986 ;; This function calls:
  5987 ;;		_SPI1_Exchange8bit
  5988 ;;		_wdtdelay
  5989 ;; This function is called by:
  5990 ;;		_init_display
  5991 ;; This function uses a reentrant model
  5992 ;;
  5993                           
  5994                           	psect	text7
  5995  01ADD6                     __ptext7:
  5996                           	opt callstack 0
  5997  01ADD6                     _send_lcd_cmd_long:
  5998                           	opt callstack 13
  5999                           
  6000                           ; BSR set to: 61
  6001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6002                           ;incstack = 0
  6003                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  6004  01ADD6  92BC               	bcf	188,1,c	;volatile
  6005                           
  6006                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  6007  01ADD8  94BC               	bcf	188,2,c	;volatile
  6008                           
  6009                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  6010                           ;stkvar	_cmd @ sp[(0)+-1]
  6011  01ADDA  0EFF               	movlw	-1
  6012  01ADDC  50E3               	movf	plusw1,w,c
  6013  01ADDE  6EE6               	movwf	postinc1,c
  6014  01ADE0  ECDF  F0D8         	call	_SPI1_Exchange8bit	;wreg free
  6015                           
  6016                           ; BSR set to: 57
  6017                           ;eadog.c: 134:  wdtdelay(800);
  6018  01ADE4  0E20               	movlw	32
  6019  01ADE6  6EE6               	movwf	postinc1,c
  6020  01ADE8  0E03               	movlw	3
  6021  01ADEA  6EE6               	movwf	postinc1,c
  6022  01ADEC  0E00               	movlw	0
  6023  01ADEE  6EE6               	movwf	postinc1,c
  6024  01ADF0  0E00               	movlw	0
  6025  01ADF2  6EE6               	movwf	postinc1,c
  6026  01ADF4  EC41  F0D2         	call	_wdtdelay	;wreg free
  6027                           
  6028                           ; BSR set to: 0
  6029  01ADF8  82BC               	bsf	188,1,c	;volatile
  6030                           
  6031                           ; BSR set to: 0
  6032                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6033  01ADFA  52E5               	movf	postdec1,f,c
  6034  01ADFC  0012               	return		;funcret
  6035  01ADFE                     __end_of_send_lcd_cmd_long:
  6036                           	opt callstack 0
  6037                           
  6038 ;; *************** function _send_lcd_cmd *****************
  6039 ;; Defined at:
  6040 ;;		line 117 in file "eadog.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;  cmd             1  [STACK] const unsigned char 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;		None
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1  [STACK] void 
  6047 ;; Registers used:
  6048 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6049 ;; Tracked objects:
  6050 ;;		On entry : 3F/0
  6051 ;;		On exit  : 3F/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6058 ;;Total ram usage:        0 bytes
  6059 ;; Hardware stack levels used:    1
  6060 ;; Hardware stack levels required when called:   16
  6061 ;; This function calls:
  6062 ;;		_SPI1_Exchange8bit
  6063 ;;		_wdtdelay
  6064 ;; This function is called by:
  6065 ;;		_init_display
  6066 ;; This function uses a reentrant model
  6067 ;;
  6068                           
  6069                           	psect	text8
  6070  01ADFE                     __ptext8:
  6071                           	opt callstack 0
  6072  01ADFE                     _send_lcd_cmd:
  6073                           	opt callstack 13
  6074                           
  6075                           ; BSR set to: 0
  6076                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6077                           ;incstack = 0
  6078                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  6079  01ADFE  92BC               	bcf	188,1,c	;volatile
  6080                           
  6081                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  6082  01AE00  94BC               	bcf	188,2,c	;volatile
  6083                           
  6084                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  6085                           ;stkvar	_cmd @ sp[(0)+-1]
  6086  01AE02  0EFF               	movlw	-1
  6087  01AE04  50E3               	movf	plusw1,w,c
  6088  01AE06  6EE6               	movwf	postinc1,c
  6089  01AE08  ECDF  F0D8         	call	_SPI1_Exchange8bit	;wreg free
  6090                           
  6091                           ; BSR set to: 57
  6092                           ;eadog.c: 122:  wdtdelay(30);
  6093  01AE0C  0E1E               	movlw	30
  6094  01AE0E  6EE6               	movwf	postinc1,c
  6095  01AE10  0E00               	movlw	0
  6096  01AE12  6EE6               	movwf	postinc1,c
  6097  01AE14  0E00               	movlw	0
  6098  01AE16  6EE6               	movwf	postinc1,c
  6099  01AE18  0E00               	movlw	0
  6100  01AE1A  6EE6               	movwf	postinc1,c
  6101  01AE1C  EC41  F0D2         	call	_wdtdelay	;wreg free
  6102                           
  6103                           ; BSR set to: 0
  6104  01AE20  82BC               	bsf	188,1,c	;volatile
  6105                           
  6106                           ; BSR set to: 0
  6107                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6108  01AE22  52E5               	movf	postdec1,f,c
  6109  01AE24  0012               	return		;funcret
  6110  01AE26                     __end_of_send_lcd_cmd:
  6111                           	opt callstack 0
  6112                           
  6113 ;; *************** function _SPI1_Exchange8bit *****************
  6114 ;; Defined at:
  6115 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;  data            1  [STACK] unsigned char 
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;		None
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  1  [STACK] unsigned char 
  6122 ;; Registers used:
  6123 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 3F/39
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6133 ;;Total ram usage:        0 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:   15
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		_send_lcd_cmd
  6140 ;;		_send_lcd_cmd_long
  6141 ;; This function uses a reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text9
  6145  01B1BE                     __ptext9:
  6146                           	opt callstack 0
  6147  01B1BE                     _SPI1_Exchange8bit:
  6148                           	opt callstack 13
  6149                           
  6150                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6151                           
  6152                           ; BSR set to: 0
  6153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6154                           ;incstack = 0
  6155  01B1BE  0E01               	movlw	1
  6156  01B1C0  013D               	movlb	61	; () banked
  6157  01B1C2  6F12               	movwf	18,b	;volatile
  6158                           
  6159                           ; BSR set to: 61
  6160                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6161                           ;stkvar	_data @ sp[(0)+-1]
  6162  01B1C4  0EFF               	movlw	-1
  6163  01B1C6  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6164  01B1CC                     l807:
  6165                           
  6166                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6167  01B1CC  0139               	movlb	57	; () banked
  6168  01B1CE  A9A2               	btfss	162,4,b	;volatile
  6169  01B1D0  D7FD               	goto	l807
  6170                           
  6171                           ; BSR set to: 57
  6172                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6173  01B1D2  006F F440  F001    	movff	15632,btemp	;volatile
  6174                           
  6175                           ; BSR set to: 57
  6176                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6177  01B1D8  52E5               	movf	postdec1,f,c
  6178  01B1DA  0012               	return		;funcret
  6179  01B1DC                     __end_of_SPI1_Exchange8bit:
  6180                           	opt callstack 0
  6181                           
  6182 ;; *************** function _ringBufS_init *****************
  6183 ;; Defined at:
  6184 ;;		line 22 in file "ringbufs.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;  _this           2  [STACK] PTR volatile struct ring
  6187 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;		None
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  1  [STACK] void 
  6192 ;; Registers used:
  6193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6203 ;;Total ram usage:        0 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:   16
  6206 ;; This function calls:
  6207 ;;		_memset
  6208 ;; This function is called by:
  6209 ;;		_init_display
  6210 ;; This function uses a reentrant model
  6211 ;;
  6212                           
  6213                           	psect	text10
  6214  01AE26                     __ptext10:
  6215                           	opt callstack 0
  6216  01AE26                     _ringBufS_init:
  6217                           	opt callstack 13
  6218                           
  6219                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6220                           
  6221                           ; BSR set to: 57
  6222                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6223                           ;incstack = 0
  6224  01AE26  0E43               	movlw	67
  6225  01AE28  6EE6               	movwf	postinc1,c
  6226  01AE2A  0E00               	movlw	0
  6227  01AE2C  6EE6               	movwf	postinc1,c
  6228  01AE2E  0E00               	movlw	0
  6229  01AE30  6EE6               	movwf	postinc1,c
  6230  01AE32  0E00               	movlw	0
  6231  01AE34  6EE6               	movwf	postinc1,c
  6232                           
  6233                           ;stkvar	__this @ sp[(-4)+-2]
  6234  01AE36  0EFA               	movlw	-6
  6235  01AE38  006F FF8F FFE6     	movff	plusw1,postinc1
  6236  01AE3E  006F FF8F FFE6     	movff	plusw1,postinc1
  6237  01AE44  ECEF  F0B2         	call	_memset	;wreg free
  6238                           
  6239                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6240  01AE48  52E5               	movf	postdec1,f,c
  6241  01AE4A  52E5               	movf	postdec1,f,c
  6242  01AE4C  0012               	return		;funcret
  6243  01AE4E                     __end_of_ringBufS_init:
  6244                           	opt callstack 0
  6245                           
  6246 ;; *************** function _init_bsoc *****************
  6247 ;; Defined at:
  6248 ;;		line 88 in file "bsoc.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;		None
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;		None
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  1  [STACK] void 
  6255 ;; Registers used:
  6256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6257 ;; Tracked objects:
  6258 ;;		On entry : 3F/1
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6266 ;;Total ram usage:        0 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; Hardware stack levels required when called:   18
  6269 ;; This function calls:
  6270 ;;		_TMR3_SetInterruptHandler
  6271 ;;		_Volts_to_SOC
  6272 ;;		___fldiv
  6273 ;;		___flmul
  6274 ;;		___fltol
  6275 ;;		___xxtofl
  6276 ;;		_conv_raw_result
  6277 ;; This function is called by:
  6278 ;;		_main
  6279 ;; This function uses a reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text11
  6283  0182AA                     __ptext11:
  6284                           	opt callstack 0
  6285  0182AA                     _init_bsoc:
  6286                           	opt callstack 12
  6287                           
  6288                           ;bsoc.c: 93:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  6289                           
  6290                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6291                           ;incstack = 0
  6292  0182AA  0E00               	movlw	0
  6293  0182AC  6EE6               	movwf	postinc1,c
  6294  0182AE  0E00               	movlw	0
  6295  0182B0  6EE6               	movwf	postinc1,c
  6296  0182B2  0E7A               	movlw	122
  6297  0182B4  6EE6               	movwf	postinc1,c
  6298  0182B6  0E44               	movlw	68
  6299  0182B8  6EE6               	movwf	postinc1,c
  6300  0182BA  0E00               	movlw	0
  6301  0182BC  6EE6               	movwf	postinc1,c
  6302  0182BE  0E04               	movlw	4
  6303  0182C0  6EE6               	movwf	postinc1,c
  6304  0182C2  EC6F  F0A5         	call	_conv_raw_result	;wreg free
  6305  0182C6  0060  F007  FFE6   	movff	btemp,postinc1
  6306  0182CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6307  0182D2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6308  0182D8  0060  F013  FFE6   	movff	btemp+3,postinc1
  6309  0182DE  EC9C  F0C0         	call	___fltol	;wreg free
  6310  0182E2  0060  F007  FFE6   	movff	btemp,postinc1
  6311  0182E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6312  0182EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6313  0182F4  0060  F013  FFE6   	movff	btemp+3,postinc1
  6314  0182FA  0E00               	movlw	0
  6315  0182FC  6EE6               	movwf	postinc1,c
  6316  0182FE  EC77  F0BB         	call	___xxtofl	;wreg free
  6317  018302  0060  F007  FFE6   	movff	btemp,postinc1
  6318  018308  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6319  01830E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6320  018314  0060  F013  FFE6   	movff	btemp+3,postinc1
  6321  01831A  EC70  F097         	call	___flmul	;wreg free
  6322  01831E  0060  F007  FFE6   	movff	btemp,postinc1
  6323  018324  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6324  01832A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6325  018330  0060  F013  FFE6   	movff	btemp+3,postinc1
  6326  018336  EC9C  F0C0         	call	___fltol	;wreg free
  6327  01833A  0060  F007  FFE6   	movff	btemp,postinc1
  6328  018340  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6329  018346  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6330  01834C  0060  F013  FFE6   	movff	btemp+3,postinc1
  6331  018352  EC82  F0CE         	call	_Volts_to_SOC	;wreg free
  6332  018356  0060  F004  F1AA   	movff	btemp,_C+170	;volatile
  6333  01835C  0060  F008  F1AB   	movff	btemp+1,_C+171	;volatile
  6334                           
  6335                           ;bsoc.c: 94:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  6336  018362  0060  F623  FFE6   	movff	_C+136,postinc1
  6337  018368  0060  F627  FFE6   	movff	_C+137,postinc1
  6338  01836E  0060  F62B  FFE6   	movff	_C+138,postinc1
  6339  018374  0060  F62F  FFE6   	movff	_C+139,postinc1
  6340  01837A  0E00               	movlw	0
  6341  01837C  6EE6               	movwf	postinc1,c
  6342  01837E  0E00               	movlw	0
  6343  018380  6EE6               	movwf	postinc1,c
  6344  018382  0EC8               	movlw	200
  6345  018384  6EE6               	movwf	postinc1,c
  6346  018386  0E42               	movlw	66
  6347  018388  6EE6               	movwf	postinc1,c
  6348  01838A  0101               	movlb	1	; () banked
  6349  01838C  51AA               	movf	(_C+170)& (0+255),w,b	;volatile
  6350  01838E  6E09               	movwf	(btemp+8)^0,c
  6351  018390  51AB               	movf	(_C+171)& (0+255),w,b	;volatile
  6352  018392  6E0A               	movwf	(btemp+9)^0,c
  6353  018394  6A0B               	clrf	(btemp+10)^0,c
  6354  018396  6A0C               	clrf	(btemp+11)^0,c
  6355  018398  0060  F027  FFE6   	movff	btemp+8,postinc1
  6356  01839E  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6357  0183A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6358  0183AA  0060  F033  FFE6   	movff	btemp+11,postinc1
  6359  0183B0  0E00               	movlw	0
  6360  0183B2  6EE6               	movwf	postinc1,c
  6361  0183B4  EC77  F0BB         	call	___xxtofl	;wreg free
  6362  0183B8  0060  F007  FFE6   	movff	btemp,postinc1
  6363  0183BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6364  0183C4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6365  0183CA  0060  F013  FFE6   	movff	btemp+3,postinc1
  6366  0183D0  ECB2  F0A2         	call	___fldiv	;wreg free
  6367  0183D4  0060  F007  FFE6   	movff	btemp,postinc1
  6368  0183DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6369  0183E0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6370  0183E6  0060  F013  FFE6   	movff	btemp+3,postinc1
  6371  0183EC  EC70  F097         	call	___flmul	;wreg free
  6372  0183F0  0060  F004  F18C   	movff	btemp,_C+140	;volatile
  6373  0183F6  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
  6374  0183FC  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
  6375  018402  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
  6376                           
  6377                           ;bsoc.c: 95:  TMR3_SetInterruptHandler(calc_bsoc);
  6378  018408  0EC6               	movlw	low _calc_bsoc
  6379  01840A  6EE6               	movwf	postinc1,c
  6380  01840C  0E3E               	movlw	high _calc_bsoc
  6381  01840E  6EE6               	movwf	postinc1,c
  6382  018410  0E01               	movlw	low (_calc_bsoc shr (0+16))
  6383  018412  6EE6               	movwf	postinc1,c
  6384  018414  EC9F  F0D7         	call	_TMR3_SetInterruptHandler	;wreg free
  6385                           
  6386                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6387  018418  0012               	return		;funcret
  6388  01841A                     __end_of_init_bsoc:
  6389                           	opt callstack 0
  6390                           
  6391 ;; *************** function _Volts_to_SOC *****************
  6392 ;; Defined at:
  6393 ;;		line 152 in file "bsoc.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  cvoltage        4  [STACK] unsigned long 
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;		None
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  2  [STACK] unsigned short 
  6400 ;; Registers used:
  6401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/1
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6411 ;;Total ram usage:        0 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; Hardware stack levels required when called:   15
  6414 ;; This function calls:
  6415 ;;		Nothing
  6416 ;; This function is called by:
  6417 ;;		_init_bsoc
  6418 ;; This function uses a reentrant model
  6419 ;;
  6420                           
  6421                           	psect	text12
  6422  019D04                     __ptext12:
  6423                           	opt callstack 0
  6424  019D04                     _Volts_to_SOC:
  6425                           	opt callstack 14
  6426                           
  6427                           ;bsoc.c: 152: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 153: {;bsoc.c: 154:  stat
      +                          ic uint8_t slot;;bsoc.c: 156:  C.soc = 0;
  6428                           
  6429                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6430                           ;incstack = 0
  6431  019D04  0101               	movlb	1	; () banked
  6432  019D06  6BAA               	clrf	(_C+170)& (0+255),b	;volatile
  6433  019D08  6BAB               	clrf	(_C+171)& (0+255),b	;volatile
  6434                           
  6435                           ;bsoc.c: 157:  for (slot = 0; slot < 26; slot++) {
  6436  019D0A  6A2E               	clrf	Volts_to_SOC@slot^0,c
  6437  019D0C                     l10326:
  6438                           
  6439                           ;bsoc.c: 158:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  6440                           ;stkvar	_cvoltage @ sp[(0)+-4]
  6441  019D0C  502E               	movf	Volts_to_SOC@slot^0,w,c
  6442  019D0E  0D08               	mullw	8
  6443  019D10  0E29               	movlw	low _BVSOC_TABLE
  6444  019D12  24F3               	addwf	243,w,c
  6445  019D14  6EF6               	movwf	tblptrl,c
  6446  019D16  0EFB               	movlw	high _BVSOC_TABLE
  6447  019D18  20F4               	addwfc	244,w,c
  6448  019D1A  6EF7               	movwf	tblptrh,c
  6449  019D1C                     	if	1	;There are 3 active tblptr bytes
  6450  019D1C  6AF8               	clrf	tblptru,c
  6451  019D1E  0E00               	movlw	low (__mediumconst shr (0+16))
  6452  019D20  22F8               	addwfc	tblptru,f,c
  6453  019D22                     	endif
  6454  019D22  0EFC               	movlw	-4
  6455  019D24  50E3               	movf	plusw1,w,c
  6456  019D26  0009               	tblrd		*+
  6457  019D28  5CF5               	subwf	tablat,w,c
  6458  019D2A  0EFD               	movlw	-3
  6459  019D2C  50E3               	movf	plusw1,w,c
  6460  019D2E  0009               	tblrd		*+
  6461  019D30  58F5               	subwfb	tablat,w,c
  6462  019D32  0EFE               	movlw	-2
  6463  019D34  50E3               	movf	plusw1,w,c
  6464  019D36  0009               	tblrd		*+
  6465  019D38  58F5               	subwfb	tablat,w,c
  6466  019D3A  0EFF               	movlw	-1
  6467  019D3C  50E3               	movf	plusw1,w,c
  6468  019D3E  0009               	tblrd		*+
  6469  019D40  58F5               	subwfb	tablat,w,c
  6470  019D42  B0D8               	btfsc	status,0,c
  6471  019D44  D017               	goto	l10330
  6472                           
  6473                           ;bsoc.c: 159:    C.soc = BVSOC_TABLE[slot][1];
  6474  019D46  502E               	movf	Volts_to_SOC@slot^0,w,c
  6475  019D48  0D08               	mullw	8
  6476  019D4A  0E04               	movlw	4
  6477  019D4C  26F3               	addwf	243,f,c
  6478  019D4E  0E00               	movlw	0
  6479  019D50  22F4               	addwfc	244,f,c
  6480  019D52  0E29               	movlw	low _BVSOC_TABLE
  6481  019D54  24F3               	addwf	243,w,c
  6482  019D56  6EF6               	movwf	tblptrl,c
  6483  019D58  0EFB               	movlw	high _BVSOC_TABLE
  6484  019D5A  20F4               	addwfc	244,w,c
  6485  019D5C  6EF7               	movwf	tblptrh,c
  6486  019D5E                     	if	1	;There are 3 active tblptr bytes
  6487  019D5E  6AF8               	clrf	tblptru,c
  6488  019D60  0E00               	movlw	low (__mediumconst shr (0+16))
  6489  019D62  22F8               	addwfc	tblptru,f,c
  6490  019D64                     	endif
  6491  019D64  0009               	tblrd		*+
  6492  019D66  006F FFD4  F1AA    	movff	tablat,_C+170	;volatile
  6493  019D6C  000A               	tblrd		*-
  6494  019D6E  006F FFD4  F1AB    	movff	tablat,_C+171	;volatile
  6495  019D74                     l10330:
  6496                           
  6497                           ;bsoc.c: 161:  }
  6498  019D74  2A2E               	incf	Volts_to_SOC@slot^0,f,c
  6499  019D76  0E19               	movlw	25
  6500  019D78  642E               	cpfsgt	Volts_to_SOC@slot^0,c
  6501  019D7A  D7C8               	goto	l10326
  6502                           
  6503                           ;bsoc.c: 163:  return C.soc;
  6504  019D7C  EE20  F1AA         	lfsr	2,_C+170	;volatile
  6505  019D80  006F FF78  F001    	movff	postinc2,btemp
  6506  019D86  006F FF74  F002    	movff	postdec2,btemp+1
  6507                           
  6508                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  6509  019D8C  52E5               	movf	postdec1,f,c
  6510  019D8E  52E5               	movf	postdec1,f,c
  6511  019D90  52E5               	movf	postdec1,f,c
  6512  019D92  52E5               	movf	postdec1,f,c
  6513  019D94  0012               	return		;funcret
  6514  019D96                     __end_of_Volts_to_SOC:
  6515                           	opt callstack 0
  6516                           
  6517 ;; *************** function _hid_display *****************
  6518 ;; Defined at:
  6519 ;;		line 17 in file "hid.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  h               1  [STACK] PTR struct H_data
  6522 ;;		 -> H(7), 
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;		None
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  1  [STACK] PTR struct H_data
  6527 ;; Registers used:
  6528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  6529 ;; Tracked objects:
  6530 ;;		On entry : 3F/1
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6538 ;;Total ram usage:        0 bytes
  6539 ;; Hardware stack levels used:    1
  6540 ;; Hardware stack levels required when called:   17
  6541 ;; This function calls:
  6542 ;;		_hid_input
  6543 ;; This function is called by:
  6544 ;;		_main
  6545 ;; This function uses a reentrant model
  6546 ;;
  6547                           
  6548                           	psect	text13
  6549  01924E                     __ptext13:
  6550                           	opt callstack 0
  6551  01924E                     _hid_display:
  6552                           	opt callstack 13
  6553                           
  6554                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  6555                           ;stkvar	_h @ sp[(0)+-1]
  6556                           
  6557                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6558                           ;incstack = 0
  6559  01924E  0EFF               	movlw	-1
  6560  019250  50E3               	movf	plusw1,w,c
  6561  019252  6EE6               	movwf	postinc1,c
  6562  019254  EC5D  F0CF         	call	_hid_input	;wreg free
  6563                           
  6564                           ;hid.c: 21:  switch (h->h_state) {
  6565  019258  D066               	goto	l10742
  6566  01925A                     l10720:
  6567                           
  6568                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  6569                           ;stkvar	_h @ sp[(0)+-1]
  6570  01925A  0EFF               	movlw	-1
  6571  01925C  50E3               	movf	plusw1,w,c
  6572  01925E  6ED9               	movwf	fsr2l,c
  6573  019260  6ADA               	clrf	fsr2h,c
  6574  019262  0E01               	movlw	1
  6575  019264  26D9               	addwf	fsr2l,f,c
  6576  019266  0E01               	movlw	1
  6577  019268  6EDF               	movwf	indf2,c
  6578                           
  6579                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  6580                           ;stkvar	_h @ sp[(0)+-1]
  6581  01926A  0EFF               	movlw	-1
  6582  01926C  50E3               	movf	plusw1,w,c
  6583  01926E  6ED9               	movwf	fsr2l,c
  6584  019270  6ADA               	clrf	fsr2h,c
  6585  019272  0E00               	movlw	0
  6586  019274  6EDF               	movwf	indf2,c
  6587                           
  6588                           ;hid.c: 25:   h->wait_enter = 1;
  6589                           ;stkvar	_h @ sp[(0)+-1]
  6590  019276  0EFF               	movlw	-1
  6591  019278  50E3               	movf	plusw1,w,c
  6592  01927A  6ED9               	movwf	fsr2l,c
  6593  01927C  6ADA               	clrf	fsr2h,c
  6594  01927E  0E04               	movlw	4
  6595  019280  26D9               	addwf	fsr2l,f,c
  6596  019282  0E01               	movlw	1
  6597  019284  6EDF               	movwf	indf2,c
  6598                           
  6599                           ;hid.c: 26:   h->wait_select = 1;
  6600                           ;stkvar	_h @ sp[(0)+-1]
  6601  019286  0EFF               	movlw	-1
  6602  019288  50E3               	movf	plusw1,w,c
  6603  01928A  6ED9               	movwf	fsr2l,c
  6604  01928C  6ADA               	clrf	fsr2h,c
  6605  01928E  0E02               	movlw	2
  6606  019290  26D9               	addwf	fsr2l,f,c
  6607  019292  0E01               	movlw	1
  6608  019294  6EDF               	movwf	indf2,c
  6609                           
  6610                           ;hid.c: 27:   h->select_p = SW_OFF;
  6611                           ;stkvar	_h @ sp[(0)+-1]
  6612  019296  0EFF               	movlw	-1
  6613  019298  50E3               	movf	plusw1,w,c
  6614  01929A  6ED9               	movwf	fsr2l,c
  6615  01929C  6ADA               	clrf	fsr2h,c
  6616  01929E  0E03               	movlw	3
  6617  0192A0  26D9               	addwf	fsr2l,f,c
  6618  0192A2  0E00               	movlw	0
  6619  0192A4  6EDF               	movwf	indf2,c
  6620                           
  6621                           ;hid.c: 28:   h->enter_p = SW_OFF;
  6622                           ;stkvar	_h @ sp[(0)+-1]
  6623  0192A6  0EFF               	movlw	-1
  6624  0192A8  50E3               	movf	plusw1,w,c
  6625  0192AA  6ED9               	movwf	fsr2l,c
  6626  0192AC  6ADA               	clrf	fsr2h,c
  6627  0192AE  0E05               	movlw	5
  6628  0192B0  26D9               	addwf	fsr2l,f,c
  6629  0192B2  0E00               	movlw	0
  6630  0192B4  D036               	goto	L1
  6631  0192B6                     l10732:
  6632                           
  6633                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  6634                           ;stkvar	_h @ sp[(0)+-1]
  6635  0192B6  0EFF               	movlw	-1
  6636  0192B8  50E3               	movf	plusw1,w,c
  6637  0192BA  6ED9               	movwf	fsr2l,c
  6638  0192BC  6ADA               	clrf	fsr2h,c
  6639  0192BE  0E02               	movlw	2
  6640  0192C0  26D9               	addwf	fsr2l,f,c
  6641  0192C2  50DF               	movf	indf2,w,c
  6642  0192C4  A4D8               	btfss	status,2,c
  6643  0192C6  D042               	goto	l1934
  6644                           
  6645                           ;stkvar	_h @ sp[(0)+-1]
  6646  0192C8  0EFF               	movlw	-1
  6647  0192CA  50E3               	movf	plusw1,w,c
  6648  0192CC  6ED9               	movwf	fsr2l,c
  6649  0192CE  6ADA               	clrf	fsr2h,c
  6650  0192D0  0E03               	movlw	3
  6651  0192D2  26D9               	addwf	fsr2l,f,c
  6652  0192D4  50DF               	movf	indf2,w,c
  6653  0192D6  A4D8               	btfss	status,2,c
  6654  0192D8  D039               	goto	l1934
  6655                           
  6656                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  6657                           ;stkvar	_h @ sp[(0)+-1]
  6658  0192DA  0EFF               	movlw	-1
  6659  0192DC  50E3               	movf	plusw1,w,c
  6660  0192DE  6ED9               	movwf	fsr2l,c
  6661  0192E0  6ADA               	clrf	fsr2h,c
  6662  0192E2  0E06               	movlw	6
  6663  0192E4  26D9               	addwf	fsr2l,f,c
  6664                           
  6665                           ;stkvar	_h @ sp[(0)+-1]
  6666  0192E6  0EFF               	movlw	-1
  6667  0192E8  50E3               	movf	plusw1,w,c
  6668  0192EA  6EE9               	movwf	fsr0l,c
  6669  0192EC  6AEA               	clrf	fsr0h,c
  6670  0192EE  0E06               	movlw	6
  6671  0192F0  26E9               	addwf	fsr0l,f,c
  6672  0192F2  2AEF               	incf	indf0,f,c
  6673  0192F4  50EF               	movf	indf0,w,c
  6674  0192F6  0B03               	andlw	3
  6675  0192F8  6EDF               	movwf	indf2,c
  6676                           
  6677                           ;hid.c: 34:    h->hid_display = h->sequence;
  6678                           ;stkvar	_h @ sp[(0)+-1]
  6679  0192FA  0EFF               	movlw	-1
  6680  0192FC  50E3               	movf	plusw1,w,c
  6681  0192FE  6ED9               	movwf	fsr2l,c
  6682  019300  6ADA               	clrf	fsr2h,c
  6683  019302  0E06               	movlw	6
  6684  019304  26D9               	addwf	fsr2l,f,c
  6685                           
  6686                           ;stkvar	_h @ sp[(0)+-1]
  6687  019306  0EFF               	movlw	-1
  6688  019308  50E3               	movf	plusw1,w,c
  6689  01930A  6EE9               	movwf	fsr0l,c
  6690  01930C  6AEA               	clrf	fsr0h,c
  6691  01930E  006F FF7F FFEF     	movff	indf2,indf0
  6692                           
  6693                           ;hid.c: 35:    h->wait_select = 1;
  6694                           ;stkvar	_h @ sp[(0)+-1]
  6695  019314  0EFF               	movlw	-1
  6696  019316  50E3               	movf	plusw1,w,c
  6697  019318  6ED9               	movwf	fsr2l,c
  6698  01931A  6ADA               	clrf	fsr2h,c
  6699  01931C  0E02               	movlw	2
  6700  01931E  26D9               	addwf	fsr2l,f,c
  6701  019320  0E01               	movlw	1
  6702  019322                     L1:
  6703  019322  6EDF               	movwf	indf2,c
  6704  019324  D013               	goto	l1934
  6705  019326                     l10742:
  6706                           
  6707                           ;stkvar	_h @ sp[(0)+-1]
  6708  019326  0EFF               	movlw	-1
  6709  019328  50E3               	movf	plusw1,w,c
  6710  01932A  6ED9               	movwf	fsr2l,c
  6711  01932C  6ADA               	clrf	fsr2h,c
  6712  01932E  0E01               	movlw	1
  6713  019330  26D9               	addwf	fsr2l,f,c
  6714  019332  50DF               	movf	indf2,w,c
  6715  019334  6E0B               	movwf	(btemp+10)^0,c
  6716  019336  6A0C               	clrf	(btemp+11)^0,c
  6717                           
  6718                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6719                           ; Switch size 1, requested type "simple"
  6720                           ; Number of cases is 1, Range of values is 0 to 0
  6721                           ; switch strategies available:
  6722                           ; Name         Instructions Cycles
  6723                           ; simple_byte            4     3 (average)
  6724                           ;	Chosen strategy is simple_byte
  6725  019338  500C               	movf	(btemp+11)^0,w,c
  6726  01933A  0A00               	xorlw	0	; case 0
  6727  01933C  A4D8               	btfss	status,2,c
  6728  01933E  D7BB               	goto	l10732
  6729                           
  6730                           ; Switch size 1, requested type "simple"
  6731                           ; Number of cases is 2, Range of values is 0 to 1
  6732                           ; switch strategies available:
  6733                           ; Name         Instructions Cycles
  6734                           ; simple_byte            7     4 (average)
  6735                           ;	Chosen strategy is simple_byte
  6736  019340  500B               	movf	(btemp+10)^0,w,c
  6737  019342  0A00               	xorlw	0	; case 0
  6738  019344  B4D8               	btfsc	status,2,c
  6739  019346  D789               	goto	l10720
  6740  019348  0A01               	xorlw	1	; case 1
  6741  01934A  D7B5               	goto	l10732
  6742  01934C                     l1934:
  6743                           
  6744                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6745  01934C  52E5               	movf	postdec1,f,c
  6746  01934E  0012               	return		;funcret
  6747  019350                     __end_of_hid_display:
  6748                           	opt callstack 0
  6749                           
  6750 ;; *************** function _hid_input *****************
  6751 ;; Defined at:
  6752 ;;		line 3 in file "hid.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;  h               1  [STACK] PTR struct H_data
  6755 ;;		 -> H(7), 
  6756 ;; Auto vars:     Size  Location     Type
  6757 ;;		None
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  1  [STACK] PTR struct H_data
  6760 ;; Registers used:
  6761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/1
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6771 ;;Total ram usage:        0 bytes
  6772 ;; Hardware stack levels used:    1
  6773 ;; Hardware stack levels required when called:   16
  6774 ;; This function calls:
  6775 ;;		_get_switch
  6776 ;; This function is called by:
  6777 ;;		_hid_display
  6778 ;; This function uses a reentrant model
  6779 ;;
  6780                           
  6781                           	psect	text14
  6782  019EBA                     __ptext14:
  6783                           	opt callstack 0
  6784  019EBA                     _hid_input:
  6785                           	opt callstack 13
  6786                           
  6787                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  6788                           
  6789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6790                           ;incstack = 0
  6791  019EBA  0E02               	movlw	2
  6792  019EBC  6EE6               	movwf	postinc1,c
  6793  019EBE  EC94  F0D6         	call	_get_switch	;wreg free
  6794  019EC2  5001               	movf	btemp^0,w,c
  6795  019EC4  B4D8               	btfsc	status,2,c
  6796  019EC6  D01C               	goto	l10258
  6797                           
  6798                           ;hid.c: 6:   h->wait_select = 0;
  6799                           ;stkvar	_h @ sp[(0)+-1]
  6800  019EC8  0EFF               	movlw	-1
  6801  019ECA  50E3               	movf	plusw1,w,c
  6802  019ECC  6ED9               	movwf	fsr2l,c
  6803  019ECE  6ADA               	clrf	fsr2h,c
  6804  019ED0  0E02               	movlw	2
  6805  019ED2  26D9               	addwf	fsr2l,f,c
  6806  019ED4  0E00               	movlw	0
  6807  019ED6  6EDF               	movwf	indf2,c
  6808                           
  6809                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  6810  019ED8  0E02               	movlw	2
  6811  019EDA  6EE6               	movwf	postinc1,c
  6812  019EDC  EC94  F0D6         	call	_get_switch	;wreg free
  6813  019EE0  5001               	movf	btemp^0,w,c
  6814  019EE2  B4D8               	btfsc	status,2,c
  6815  019EE4  D003               	goto	u9370
  6816  019EE6  6A0C               	clrf	(btemp+11)^0,c
  6817  019EE8  2A0C               	incf	(btemp+11)^0,f,c
  6818  019EEA  D001               	goto	u9388
  6819  019EEC                     u9370:
  6820  019EEC  6A0C               	clrf	(btemp+11)^0,c
  6821  019EEE                     u9388:
  6822                           
  6823                           ;stkvar	_h @ sp[(0)+-1]
  6824  019EEE  0EFF               	movlw	-1
  6825  019EF0  50E3               	movf	plusw1,w,c
  6826  019EF2  6ED9               	movwf	fsr2l,c
  6827  019EF4  6ADA               	clrf	fsr2h,c
  6828  019EF6  0E03               	movlw	3
  6829  019EF8  26D9               	addwf	fsr2l,f,c
  6830  019EFA  0060  F033  FFDF   	movff	btemp+11,indf2
  6831  019F00                     l10258:
  6832                           
  6833                           ;hid.c: 10:  if (get_switch(SENTER)) {
  6834  019F00  0E03               	movlw	3
  6835  019F02  6EE6               	movwf	postinc1,c
  6836  019F04  EC94  F0D6         	call	_get_switch	;wreg free
  6837  019F08  5001               	movf	btemp^0,w,c
  6838  019F0A  B4D8               	btfsc	status,2,c
  6839  019F0C  D01C               	goto	l1925
  6840                           
  6841                           ;hid.c: 11:   h->wait_enter = 0;
  6842                           ;stkvar	_h @ sp[(0)+-1]
  6843  019F0E  0EFF               	movlw	-1
  6844  019F10  50E3               	movf	plusw1,w,c
  6845  019F12  6ED9               	movwf	fsr2l,c
  6846  019F14  6ADA               	clrf	fsr2h,c
  6847  019F16  0E04               	movlw	4
  6848  019F18  26D9               	addwf	fsr2l,f,c
  6849  019F1A  0E00               	movlw	0
  6850  019F1C  6EDF               	movwf	indf2,c
  6851                           
  6852                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  6853  019F1E  0E03               	movlw	3
  6854  019F20  6EE6               	movwf	postinc1,c
  6855  019F22  EC94  F0D6         	call	_get_switch	;wreg free
  6856  019F26  5001               	movf	btemp^0,w,c
  6857  019F28  B4D8               	btfsc	status,2,c
  6858  019F2A  D003               	goto	u9400
  6859  019F2C  6A0C               	clrf	(btemp+11)^0,c
  6860  019F2E  2A0C               	incf	(btemp+11)^0,f,c
  6861  019F30  D001               	goto	u9418
  6862  019F32                     u9400:
  6863  019F32  6A0C               	clrf	(btemp+11)^0,c
  6864  019F34                     u9418:
  6865                           
  6866                           ;stkvar	_h @ sp[(0)+-1]
  6867  019F34  0EFF               	movlw	-1
  6868  019F36  50E3               	movf	plusw1,w,c
  6869  019F38  6ED9               	movwf	fsr2l,c
  6870  019F3A  6ADA               	clrf	fsr2h,c
  6871  019F3C  0E05               	movlw	5
  6872  019F3E  26D9               	addwf	fsr2l,f,c
  6873  019F40  0060  F033  FFDF   	movff	btemp+11,indf2
  6874  019F46                     l1925:
  6875                           
  6876                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6877  019F46  52E5               	movf	postdec1,f,c
  6878  019F48  0012               	return		;funcret
  6879  019F4A                     __end_of_hid_input:
  6880                           	opt callstack 0
  6881                           
  6882 ;; *************** function _get_switch *****************
  6883 ;; Defined at:
  6884 ;;		line 18 in file "dio.c"
  6885 ;; Parameters:    Size  Location     Type
  6886 ;;  i               1  [STACK] unsigned char 
  6887 ;; Auto vars:     Size  Location     Type
  6888 ;;		None
  6889 ;; Return value:  Size  Location     Type
  6890 ;;                  1  [STACK] enum E17021
  6891 ;; Registers used:
  6892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6893 ;; Tracked objects:
  6894 ;;		On entry : 0/2
  6895 ;;		On exit  : 0/0
  6896 ;;		Unchanged: 0/0
  6897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6902 ;;Total ram usage:        0 bytes
  6903 ;; Hardware stack levels used:    1
  6904 ;; Hardware stack levels required when called:   15
  6905 ;; This function calls:
  6906 ;;		Nothing
  6907 ;; This function is called by:
  6908 ;;		_main
  6909 ;;		_hid_input
  6910 ;; This function uses a reentrant model
  6911 ;;
  6912                           
  6913                           	psect	text15
  6914  01AD28                     __ptext15:
  6915                           	opt callstack 0
  6916  01AD28                     _get_switch:
  6917                           	opt callstack 13
  6918                           
  6919                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  6920                           ;stkvar	_i @ sp[(0)+-1]
  6921                           
  6922                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6923                           ;incstack = 0
  6924  01AD28  0EFF               	movlw	-1
  6925  01AD2A  006F FF8C  F001    	movff	plusw1,btemp
  6926  01AD30  0E03               	movlw	3
  6927  01AD32  6401               	cpfsgt	btemp^0,c
  6928  01AD34  D002               	goto	l9522
  6929                           
  6930                           ;dio.c: 21:   return SW_OFF;
  6931  01AD36  0E00               	movlw	0
  6932  01AD38  D00A               	goto	L2
  6933  01AD3A                     l9522:
  6934                           
  6935                           ;dio.c: 23:  return S.button[i].sw;
  6936                           ;stkvar	_i @ sp[(0)+-1]
  6937  01AD3A  0EFF               	movlw	-1
  6938  01AD3C  50E3               	movf	plusw1,w,c
  6939  01AD3E  0D05               	mullw	5
  6940  01AD40  0EBC               	movlw	low _S
  6941  01AD42  24F3               	addwf	243,w,c
  6942  01AD44  6ED9               	movwf	fsr2l,c
  6943  01AD46  0E02               	movlw	high _S
  6944  01AD48  20F4               	addwfc	prodh,w,c
  6945  01AD4A  6EDA               	movwf	fsr2h,c
  6946  01AD4C  50DF               	movf	indf2,w,c
  6947  01AD4E                     L2:
  6948  01AD4E  6E01               	movwf	btemp^0,c
  6949                           
  6950                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6951  01AD50  52E5               	movf	postdec1,f,c
  6952  01AD52  0012               	return		;funcret
  6953  01AD54                     __end_of_get_switch:
  6954                           	opt callstack 0
  6955                           
  6956 ;; *************** function _esr_check *****************
  6957 ;; Defined at:
  6958 ;;		line 169 in file "bsoc.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;  fsm             1  [STACK] unsigned char 
  6961 ;; Auto vars:     Size  Location     Type
  6962 ;;  esr_value       4  [STACK] float 
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  4  [STACK] float 
  6965 ;; Registers used:
  6966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/0
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6976 ;;Total ram usage:        0 bytes
  6977 ;; Hardware stack levels used:    1
  6978 ;; Hardware stack levels required when called:   18
  6979 ;; This function calls:
  6980 ;;		_StartTimer
  6981 ;;		_TimerDone
  6982 ;;		_WaitMs
  6983 ;;		___fldiv
  6984 ;;		___flsub
  6985 ;;		_conv_raw_result
  6986 ;;		_fabsf
  6987 ;;		_set_load_relay_one
  6988 ;;		_set_load_relay_two
  6989 ;;		_update_adc_result
  6990 ;; This function is called by:
  6991 ;;		_main
  6992 ;; This function uses a reentrant model
  6993 ;;
  6994                           
  6995                           	psect	text16
  6996  01540A                     __ptext16:
  6997                           	opt callstack 0
  6998  01540A                     _esr_check:
  6999                           	opt callstack 0
  7000                           
  7001                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7002  01540A  52E6               	movf	postinc1,f,c
  7003  01540C  52E6               	movf	postinc1,f,c
  7004  01540E  52E6               	movf	postinc1,f,c
  7005  015410  52E6               	movf	postinc1,f,c
  7006                           
  7007                           ;bsoc.c: 169: float esr_check(uint8_t fsm);bsoc.c: 170: {;bsoc.c: 171:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 172:  float esr_value = -1.0;
  7008                           
  7009                           ;incstack = 0
  7010  015412  0E00               	movlw	0
  7011  015414  6E09               	movwf	(btemp+8)^0,c
  7012  015416  0E00               	movlw	0
  7013  015418  6E0A               	movwf	(btemp+9)^0,c
  7014  01541A  0E80               	movlw	128
  7015  01541C  6E0B               	movwf	(btemp+10)^0,c
  7016  01541E  0EBF               	movlw	191
  7017  015420  6E0C               	movwf	(btemp+11)^0,c
  7018                           
  7019                           ;stkvar	_esr_value @ sp[(-4)+0]
  7020  015422  0EFC               	movlw	-4
  7021  015424  0060  F027  FFE3   	movff	btemp+8,plusw1
  7022  01542A  0EFD               	movlw	-3
  7023  01542C  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7024  015432  0EFE               	movlw	-2
  7025  015434  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7026  01543A  0EFF               	movlw	-1
  7027  01543C  0060  F033  FFE3   	movff	btemp+11,plusw1
  7028                           
  7029                           ;bsoc.c: 174:  switch (esr_state) {
  7030  015442  D1A0               	goto	l10658
  7031  015444                     l10572:
  7032                           
  7033                           ;bsoc.c: 176:   StartTimer(TMR_ESR, 10000);
  7034  015444  0E10               	movlw	16
  7035  015446  6EE6               	movwf	postinc1,c
  7036  015448  0E27               	movlw	39
  7037  01544A  6EE6               	movwf	postinc1,c
  7038  01544C  0E0C               	movlw	12
  7039  01544E  6EE6               	movwf	postinc1,c
  7040  015450  ECA6  F0D4         	call	_StartTimer	;wreg free
  7041                           
  7042                           ;bsoc.c: 177:   esr_state++;
  7043  015454  2A2D               	incf	esr_check@esr_state^0,f,c
  7044                           
  7045                           ;bsoc.c: 178:   esr_value = -1.0;
  7046  015456  0E00               	movlw	0
  7047  015458  6E09               	movwf	(btemp+8)^0,c
  7048  01545A  0E00               	movlw	0
  7049  01545C  6E0A               	movwf	(btemp+9)^0,c
  7050  01545E  0E80               	movlw	128
  7051  015460  6E0B               	movwf	(btemp+10)^0,c
  7052  015462  0EBF               	movlw	191
  7053  015464  6E0C               	movwf	(btemp+11)^0,c
  7054                           
  7055                           ;stkvar	_esr_value @ sp[(-4)+0]
  7056  015466  0EFC               	movlw	-4
  7057  015468  0060  F027  FFE3   	movff	btemp+8,plusw1
  7058  01546E  0EFD               	movlw	-3
  7059  015470  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7060  015476  0EFE               	movlw	-2
  7061  015478  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7062  01547E  0EFF               	movlw	-1
  7063  015480  0060  F033  FFE3   	movff	btemp+11,plusw1
  7064                           
  7065                           ;bsoc.c: 179:   break;
  7066  015486  D192               	goto	l10660
  7067  015488                     l10578:
  7068                           
  7069                           ;bsoc.c: 181:   set_load_relay_one(0);
  7070  015488  0E00               	movlw	0
  7071  01548A  6EE6               	movwf	postinc1,c
  7072  01548C  ECB5  F0D9         	call	_set_load_relay_one	;wreg free
  7073                           
  7074                           ;bsoc.c: 182:   set_load_relay_two(0);
  7075  015490  0E00               	movlw	0
  7076  015492  6EE6               	movwf	postinc1,c
  7077  015494  ECAD  F0D9         	call	_set_load_relay_two	;wreg free
  7078                           
  7079                           ;bsoc.c: 183:   if (!fsm) {
  7080                           ;stkvar	_fsm @ sp[(-4)+-1]
  7081  015498  0EFB               	movlw	-5
  7082  01549A  50E3               	movf	plusw1,w,c
  7083  01549C  A4D8               	btfss	status,2,c
  7084  01549E  D01F               	goto	l10586
  7085                           
  7086                           ;bsoc.c: 184:    WaitMs(10000);
  7087  0154A0  0E10               	movlw	16
  7088  0154A2  6EE6               	movwf	postinc1,c
  7089  0154A4  0E27               	movlw	39
  7090  0154A6  6EE6               	movwf	postinc1,c
  7091  0154A8  EC99  F0D5         	call	_WaitMs	;wreg free
  7092                           
  7093                           ;bsoc.c: 185:    esr_value = -2.0;
  7094  0154AC  0E00               	movlw	0
  7095  0154AE  6E09               	movwf	(btemp+8)^0,c
  7096  0154B0  0E00               	movlw	0
  7097  0154B2  6E0A               	movwf	(btemp+9)^0,c
  7098  0154B4  0E00               	movlw	0
  7099  0154B6  6E0B               	movwf	(btemp+10)^0,c
  7100  0154B8  0EC0               	movlw	192
  7101  0154BA  6E0C               	movwf	(btemp+11)^0,c
  7102                           
  7103                           ;stkvar	_esr_value @ sp[(-4)+0]
  7104  0154BC  0EFC               	movlw	-4
  7105  0154BE  0060  F027  FFE3   	movff	btemp+8,plusw1
  7106  0154C4  0EFD               	movlw	-3
  7107  0154C6  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7108  0154CC  0EFE               	movlw	-2
  7109  0154CE  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7110  0154D4  0EFF               	movlw	-1
  7111  0154D6  0060  F033  FFE3   	movff	btemp+11,plusw1
  7112                           
  7113                           ;bsoc.c: 186:   } else {
  7114  0154DC  D016               	goto	l10594
  7115  0154DE                     l10586:
  7116                           
  7117                           ;bsoc.c: 187:    if (TimerDone(TMR_ESR)) {
  7118  0154DE  0E0C               	movlw	12
  7119  0154E0  6EE6               	movwf	postinc1,c
  7120  0154E2  EC27  F0D7         	call	_TimerDone	;wreg free
  7121  0154E6  5001               	movf	btemp^0,w,c
  7122  0154E8  B4D8               	btfsc	status,2,c
  7123  0154EA  D009               	goto	l10590
  7124                           
  7125                           ;bsoc.c: 188:     StartTimer(TMR_ESR, 10000);
  7126  0154EC  0E10               	movlw	16
  7127  0154EE  6EE6               	movwf	postinc1,c
  7128  0154F0  0E27               	movlw	39
  7129  0154F2  6EE6               	movwf	postinc1,c
  7130  0154F4  0E0C               	movlw	12
  7131  0154F6  6EE6               	movwf	postinc1,c
  7132  0154F8  ECA6  F0D4         	call	_StartTimer	;wreg free
  7133                           
  7134                           ;bsoc.c: 189:    } else {
  7135  0154FC  D006               	goto	l10594
  7136  0154FE                     l10590:
  7137                           
  7138                           ;bsoc.c: 190:     return -2.0;
  7139  0154FE  0E00               	movlw	0
  7140  015500  6E01               	movwf	btemp^0,c
  7141  015502  0E00               	movlw	0
  7142  015504  6E02               	movwf	(btemp+1)^0,c
  7143  015506  0E00               	movlw	0
  7144  015508  D095               	goto	L4
  7145  01550A                     l10594:
  7146                           
  7147                           ;bsoc.c: 194:   update_adc_result();
  7148  01550A  EC45  F0D5         	call	_update_adc_result	;wreg free
  7149                           
  7150                           ;bsoc.c: 195:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  7151  01550E  0E00               	movlw	0
  7152  015510  6EE6               	movwf	postinc1,c
  7153  015512  0E04               	movlw	4
  7154  015514  6EE6               	movwf	postinc1,c
  7155  015516  EC6F  F0A5         	call	_conv_raw_result	;wreg free
  7156  01551A  0060  F004  F1E7   	movff	btemp,_C+231	;volatile
  7157  015520  0060  F008  F1E8   	movff	btemp+1,_C+232	;volatile
  7158  015526  0060  F00C  F1E9   	movff	btemp+2,_C+233	;volatile
  7159  01552C  0060  F010  F1EA   	movff	btemp+3,_C+234	;volatile
  7160  015532                     l10598:
  7161                           
  7162                           ;bsoc.c: 196:   esr_state++;
  7163  015532  2A2D               	incf	esr_check@esr_state^0,f,c
  7164                           
  7165                           ;bsoc.c: 197:   break;
  7166  015534  D13B               	goto	l10660
  7167  015536                     l10600:
  7168                           
  7169                           ;bsoc.c: 199:   set_load_relay_one(1);
  7170  015536  0E01               	movlw	1
  7171  015538  6EE6               	movwf	postinc1,c
  7172  01553A  ECB5  F0D9         	call	_set_load_relay_one	;wreg free
  7173                           
  7174                           ;bsoc.c: 200:   if (!fsm) {
  7175                           ;stkvar	_fsm @ sp[(-4)+-1]
  7176  01553E  0EFB               	movlw	-5
  7177  015540  50E3               	movf	plusw1,w,c
  7178  015542  A4D8               	btfss	status,2,c
  7179  015544  D01F               	goto	l10608
  7180                           
  7181                           ;bsoc.c: 201:    WaitMs(10000);
  7182  015546  0E10               	movlw	16
  7183  015548  6EE6               	movwf	postinc1,c
  7184  01554A  0E27               	movlw	39
  7185  01554C  6EE6               	movwf	postinc1,c
  7186  01554E  EC99  F0D5         	call	_WaitMs	;wreg free
  7187                           
  7188                           ;bsoc.c: 202:    esr_value = -3.0;
  7189  015552  0E00               	movlw	0
  7190  015554  6E09               	movwf	(btemp+8)^0,c
  7191  015556  0E00               	movlw	0
  7192  015558  6E0A               	movwf	(btemp+9)^0,c
  7193  01555A  0E40               	movlw	64
  7194  01555C  6E0B               	movwf	(btemp+10)^0,c
  7195  01555E  0EC0               	movlw	192
  7196  015560  6E0C               	movwf	(btemp+11)^0,c
  7197                           
  7198                           ;stkvar	_esr_value @ sp[(-4)+0]
  7199  015562  0EFC               	movlw	-4
  7200  015564  0060  F027  FFE3   	movff	btemp+8,plusw1
  7201  01556A  0EFD               	movlw	-3
  7202  01556C  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7203  015572  0EFE               	movlw	-2
  7204  015574  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7205  01557A  0EFF               	movlw	-1
  7206  01557C  0060  F033  FFE3   	movff	btemp+11,plusw1
  7207                           
  7208                           ;bsoc.c: 203:   } else {
  7209  015582  D016               	goto	l10616
  7210  015584                     l10608:
  7211                           
  7212                           ;bsoc.c: 204:    if (TimerDone(TMR_ESR)) {
  7213  015584  0E0C               	movlw	12
  7214  015586  6EE6               	movwf	postinc1,c
  7215  015588  EC27  F0D7         	call	_TimerDone	;wreg free
  7216  01558C  5001               	movf	btemp^0,w,c
  7217  01558E  B4D8               	btfsc	status,2,c
  7218  015590  D009               	goto	l10612
  7219                           
  7220                           ;bsoc.c: 205:     StartTimer(TMR_ESR, 10000);
  7221  015592  0E10               	movlw	16
  7222  015594  6EE6               	movwf	postinc1,c
  7223  015596  0E27               	movlw	39
  7224  015598  6EE6               	movwf	postinc1,c
  7225  01559A  0E0C               	movlw	12
  7226  01559C  6EE6               	movwf	postinc1,c
  7227  01559E  ECA6  F0D4         	call	_StartTimer	;wreg free
  7228                           
  7229                           ;bsoc.c: 206:    } else {
  7230  0155A2  D006               	goto	l10616
  7231  0155A4                     l10612:
  7232                           
  7233                           ;bsoc.c: 207:     return -3.0;
  7234  0155A4  0E00               	movlw	0
  7235  0155A6  6E01               	movwf	btemp^0,c
  7236  0155A8  0E00               	movlw	0
  7237  0155AA  6E02               	movwf	(btemp+1)^0,c
  7238  0155AC  0E40               	movlw	64
  7239  0155AE  D042               	goto	L4
  7240  0155B0                     l10616:
  7241                           
  7242                           ;bsoc.c: 211:   update_adc_result();
  7243  0155B0  EC45  F0D5         	call	_update_adc_result	;wreg free
  7244                           
  7245                           ;bsoc.c: 212:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  7246  0155B4  0E00               	movlw	0
  7247  0155B6  6EE6               	movwf	postinc1,c
  7248  0155B8  0E04               	movlw	4
  7249  0155BA  6EE6               	movwf	postinc1,c
  7250  0155BC  EC6F  F0A5         	call	_conv_raw_result	;wreg free
  7251  0155C0  0060  F004  F1EB   	movff	btemp,_C+235	;volatile
  7252  0155C6  0060  F008  F1EC   	movff	btemp+1,_C+236	;volatile
  7253  0155CC  0060  F00C  F1ED   	movff	btemp+2,_C+237	;volatile
  7254  0155D2  0060  F010  F1EE   	movff	btemp+3,_C+238	;volatile
  7255                           
  7256                           ;bsoc.c: 213:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  7257  0155D8  0E00               	movlw	0
  7258  0155DA  6EE6               	movwf	postinc1,c
  7259  0155DC  0E00               	movlw	0
  7260  0155DE  6EE6               	movwf	postinc1,c
  7261  0155E0  EC6F  F0A5         	call	_conv_raw_result	;wreg free
  7262  0155E4  0060  F004  F1DF   	movff	btemp,_C+223	;volatile
  7263  0155EA  0060  F008  F1E0   	movff	btemp+1,_C+224	;volatile
  7264  0155F0  0060  F00C  F1E1   	movff	btemp+2,_C+225	;volatile
  7265  0155F6  0060  F010  F1E2   	movff	btemp+3,_C+226	;volatile
  7266  0155FC  D79A               	goto	l10598
  7267  0155FE                     l10624:
  7268                           
  7269                           ;bsoc.c: 217:   set_load_relay_two(1);
  7270  0155FE  0E01               	movlw	1
  7271  015600  6EE6               	movwf	postinc1,c
  7272  015602  ECAD  F0D9         	call	_set_load_relay_two	;wreg free
  7273                           
  7274                           ;bsoc.c: 218:   if (!fsm) {
  7275                           ;stkvar	_fsm @ sp[(-4)+-1]
  7276  015606  0EFB               	movlw	-5
  7277  015608  50E3               	movf	plusw1,w,c
  7278  01560A  A4D8               	btfss	status,2,c
  7279  01560C  D007               	goto	l10630
  7280                           
  7281                           ;bsoc.c: 219:    WaitMs(10000);
  7282  01560E  0E10               	movlw	16
  7283  015610  6EE6               	movwf	postinc1,c
  7284  015612  0E27               	movlw	39
  7285  015614  6EE6               	movwf	postinc1,c
  7286  015616  EC99  F0D5         	call	_WaitMs	;wreg free
  7287                           
  7288                           ;bsoc.c: 220:   } else {
  7289  01561A  D010               	goto	l10636
  7290  01561C                     l10630:
  7291                           
  7292                           ;bsoc.c: 221:    if (!TimerDone(TMR_ESR))
  7293  01561C  0E0C               	movlw	12
  7294  01561E  6EE6               	movwf	postinc1,c
  7295  015620  EC27  F0D7         	call	_TimerDone	;wreg free
  7296  015624  5001               	movf	btemp^0,w,c
  7297  015626  A4D8               	btfss	status,2,c
  7298  015628  D009               	goto	l10636
  7299                           
  7300                           ;bsoc.c: 222:     return -4.0;
  7301  01562A  0E00               	movlw	0
  7302  01562C  6E01               	movwf	btemp^0,c
  7303  01562E  0E00               	movlw	0
  7304  015630  6E02               	movwf	(btemp+1)^0,c
  7305  015632  0E80               	movlw	128
  7306  015634                     L4:
  7307  015634  6E03               	movwf	(btemp+2)^0,c
  7308  015636  0EC0               	movlw	192
  7309  015638  6E04               	movwf	(btemp+3)^0,c
  7310  01563A  D0C8               	goto	l2047
  7311  01563C                     l10636:
  7312                           
  7313                           ;bsoc.c: 225:   update_adc_result();
  7314  01563C  EC45  F0D5         	call	_update_adc_result	;wreg free
  7315                           
  7316                           ;bsoc.c: 226:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  7317  015640  0E00               	movlw	0
  7318  015642  6EE6               	movwf	postinc1,c
  7319  015644  0E04               	movlw	4
  7320  015646  6EE6               	movwf	postinc1,c
  7321  015648  EC6F  F0A5         	call	_conv_raw_result	;wreg free
  7322  01564C  0060  F004  F1EF   	movff	btemp,_C+239	;volatile
  7323  015652  0060  F008  F1F0   	movff	btemp+1,_C+240	;volatile
  7324  015658  0060  F00C  F1F1   	movff	btemp+2,_C+241	;volatile
  7325  01565E  0060  F010  F1F2   	movff	btemp+3,_C+242	;volatile
  7326                           
  7327                           ;bsoc.c: 227:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  7328  015664  0E00               	movlw	0
  7329  015666  6EE6               	movwf	postinc1,c
  7330  015668  0E00               	movlw	0
  7331  01566A  6EE6               	movwf	postinc1,c
  7332  01566C  EC6F  F0A5         	call	_conv_raw_result	;wreg free
  7333  015670  0060  F004  F1E3   	movff	btemp,_C+227	;volatile
  7334  015676  0060  F008  F1E4   	movff	btemp+1,_C+228	;volatile
  7335  01567C  0060  F00C  F1E5   	movff	btemp+2,_C+229	;volatile
  7336  015682  0060  F010  F1E6   	movff	btemp+3,_C+230	;volatile
  7337                           
  7338                           ;bsoc.c: 229:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  7339  015688  0060  F78F  FFE6   	movff	_C+227,postinc1
  7340  01568E  0060  F793  FFE6   	movff	_C+228,postinc1
  7341  015694  0060  F797  FFE6   	movff	_C+229,postinc1
  7342  01569A  0060  F79B  FFE6   	movff	_C+230,postinc1
  7343  0156A0  0060  F77F  FFE6   	movff	_C+223,postinc1
  7344  0156A6  0060  F783  FFE6   	movff	_C+224,postinc1
  7345  0156AC  0060  F787  FFE6   	movff	_C+225,postinc1
  7346  0156B2  0060  F78B  FFE6   	movff	_C+226,postinc1
  7347  0156B8  ECD7  F0D3         	call	___flsub	;wreg free
  7348  0156BC  0060  F007  FFE6   	movff	btemp,postinc1
  7349  0156C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7350  0156C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7351  0156CE  0060  F013  FFE6   	movff	btemp+3,postinc1
  7352  0156D4  0060  F7BF  FFE6   	movff	_C+239,postinc1
  7353  0156DA  0060  F7C3  FFE6   	movff	_C+240,postinc1
  7354  0156E0  0060  F7C7  FFE6   	movff	_C+241,postinc1
  7355  0156E6  0060  F7CB  FFE6   	movff	_C+242,postinc1
  7356  0156EC  0060  F7AF  FFE6   	movff	_C+235,postinc1
  7357  0156F2  0060  F7B3  FFE6   	movff	_C+236,postinc1
  7358  0156F8  0060  F7B7  FFE6   	movff	_C+237,postinc1
  7359  0156FE  0060  F7BB  FFE6   	movff	_C+238,postinc1
  7360  015704  ECD7  F0D3         	call	___flsub	;wreg free
  7361  015708  0060  F007  FFE6   	movff	btemp,postinc1
  7362  01570E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7363  015714  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7364  01571A  0060  F013  FFE6   	movff	btemp+3,postinc1
  7365  015720  ECB2  F0A2         	call	___fldiv	;wreg free
  7366  015724  0060  F007  FFE6   	movff	btemp,postinc1
  7367  01572A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7368  015730  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7369  015736  0060  F013  FFE6   	movff	btemp+3,postinc1
  7370  01573C  EC90  F0CC         	call	_fabsf	;wreg free
  7371  015740  0060  F004  F184   	movff	btemp,_C+132	;volatile
  7372  015746  0060  F008  F185   	movff	btemp+1,_C+133	;volatile
  7373  01574C  0060  F00C  F186   	movff	btemp+2,_C+134	;volatile
  7374  015752  0060  F010  F187   	movff	btemp+3,_C+135	;volatile
  7375                           
  7376                           ;bsoc.c: 230:   set_load_relay_one(0);
  7377  015758  0E00               	movlw	0
  7378  01575A  6EE6               	movwf	postinc1,c
  7379  01575C  ECB5  F0D9         	call	_set_load_relay_one	;wreg free
  7380                           
  7381                           ;bsoc.c: 231:   set_load_relay_two(0);
  7382  015760  0E00               	movlw	0
  7383  015762  6EE6               	movwf	postinc1,c
  7384  015764  ECAD  F0D9         	call	_set_load_relay_two	;wreg free
  7385                           
  7386                           ;bsoc.c: 232:   esr_state = 0;
  7387  015768  6A2D               	clrf	esr_check@esr_state^0,c
  7388                           
  7389                           ;bsoc.c: 233:   return C.esr;
  7390  01576A  0060  F610  F001   	movff	_C+132,btemp	;volatile
  7391  015770  0060  F614  F002   	movff	_C+133,btemp+1	;volatile
  7392  015776  0060  F618  F003   	movff	_C+134,btemp+2	;volatile
  7393  01577C  0060  F61C  F004   	movff	_C+135,btemp+3	;volatile
  7394  015782  D024               	goto	l2047
  7395  015784                     l10658:
  7396  015784  502D               	movf	esr_check@esr_state^0,w,c
  7397  015786  6E0B               	movwf	(btemp+10)^0,c
  7398  015788  6A0C               	clrf	(btemp+11)^0,c
  7399                           
  7400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7401                           ; Switch size 1, requested type "simple"
  7402                           ; Number of cases is 1, Range of values is 0 to 0
  7403                           ; switch strategies available:
  7404                           ; Name         Instructions Cycles
  7405                           ; simple_byte            4     3 (average)
  7406                           ;	Chosen strategy is simple_byte
  7407  01578A  500C               	movf	(btemp+11)^0,w,c
  7408  01578C  0A00               	xorlw	0	; case 0
  7409  01578E  A4D8               	btfss	status,2,c
  7410  015790  D00D               	goto	l10660
  7411                           
  7412                           ; Switch size 1, requested type "simple"
  7413                           ; Number of cases is 4, Range of values is 0 to 3
  7414                           ; switch strategies available:
  7415                           ; Name         Instructions Cycles
  7416                           ; simple_byte           13     7 (average)
  7417                           ;	Chosen strategy is simple_byte
  7418  015792  500B               	movf	(btemp+10)^0,w,c
  7419  015794  0A00               	xorlw	0	; case 0
  7420  015796  B4D8               	btfsc	status,2,c
  7421  015798  D655               	goto	l10572
  7422  01579A  0A01               	xorlw	1	; case 1
  7423  01579C  B4D8               	btfsc	status,2,c
  7424  01579E  D674               	goto	l10578
  7425  0157A0  0A03               	xorlw	3	; case 2
  7426  0157A2  B4D8               	btfsc	status,2,c
  7427  0157A4  D6C8               	goto	l10600
  7428  0157A6  0A01               	xorlw	1	; case 3
  7429  0157A8  B4D8               	btfsc	status,2,c
  7430  0157AA  D729               	goto	l10624
  7431  0157AC                     l10660:
  7432                           
  7433                           ;bsoc.c: 238:  return esr_value;
  7434                           ;stkvar	_esr_value @ sp[(-4)+0]
  7435  0157AC  0EFC               	movlw	-4
  7436  0157AE  006F FF8C  F001    	movff	plusw1,btemp
  7437  0157B4  0EFD               	movlw	-3
  7438  0157B6  006F FF8C  F002    	movff	plusw1,btemp+1
  7439  0157BC  0EFE               	movlw	-2
  7440  0157BE  006F FF8C  F003    	movff	plusw1,btemp+2
  7441  0157C4  0EFF               	movlw	-1
  7442  0157C6  006F FF8C  F004    	movff	plusw1,btemp+3
  7443  0157CC                     l2047:
  7444                           
  7445                           ; _esr_check: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7446  0157CC  0EFB               	movlw	251
  7447  0157CE  26E1               	addwf	fsr1l,f,c
  7448  0157D0  0EFF               	movlw	255
  7449  0157D2  22E2               	addwfc	fsr1h,f,c
  7450  0157D4  0012               	return		;funcret
  7451  0157D6                     __end_of_esr_check:
  7452                           	opt callstack 0
  7453                           
  7454 ;; *************** function _update_adc_result *****************
  7455 ;; Defined at:
  7456 ;;		line 71 in file "daq.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;		None
  7459 ;; Auto vars:     Size  Location     Type
  7460 ;;		None
  7461 ;; Return value:  Size  Location     Type
  7462 ;;                  1  [STACK] _Bool 
  7463 ;; Registers used:
  7464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  7465 ;; Tracked objects:
  7466 ;;		On entry : 0/0
  7467 ;;		On exit  : 0/0
  7468 ;;		Unchanged: 0/0
  7469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7474 ;;Total ram usage:        0 bytes
  7475 ;; Hardware stack levels used:    1
  7476 ;; Hardware stack levels required when called:   17
  7477 ;; This function calls:
  7478 ;;		_StartTimer
  7479 ;;		_TimerDone
  7480 ;;		_check_adc_scan
  7481 ;;		_clear_adc_scan
  7482 ;;		_start_adc_scan
  7483 ;; This function is called by:
  7484 ;;		_esr_check
  7485 ;; This function uses a reentrant model
  7486 ;;
  7487                           
  7488                           	psect	text17
  7489  01AA8A                     __ptext17:
  7490                           	opt callstack 0
  7491  01AA8A                     _update_adc_result:
  7492                           	opt callstack 12
  7493                           
  7494                           ;daq.c: 73:  if (R.done) {
  7495                           
  7496                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7497                           ;incstack = 0
  7498  01AA8A  0100               	movlb	0	; () banked
  7499  01AA8C  51EB               	movf	(_R+39)& (0+255),w,b	;volatile
  7500  01AA8E  B4D8               	btfsc	status,2,c
  7501  01AA90  0012               	return	
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;daq.c: 74:   clear_adc_scan();
  7505  01AA92  EC13  F0DA         	call	_clear_adc_scan	;wreg free
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;daq.c: 75:   start_adc_scan();
  7509  01AA96  EC7E  F0D1         	call	_start_adc_scan	;wreg free
  7510                           
  7511                           ;daq.c: 76:   StartTimer(TMR_ADC, 200);
  7512  01AA9A  0EC8               	movlw	200
  7513  01AA9C  6EE6               	movwf	postinc1,c
  7514  01AA9E  0E00               	movlw	0
  7515  01AAA0  6EE6               	movwf	postinc1,c
  7516  01AAA2  0E01               	movlw	1
  7517  01AAA4  6EE6               	movwf	postinc1,c
  7518  01AAA6  ECA6  F0D4         	call	_StartTimer	;wreg free
  7519  01AAAA                     l10188:
  7520  01AAAA  0E01               	movlw	1
  7521  01AAAC  6EE6               	movwf	postinc1,c
  7522  01AAAE  EC27  F0D7         	call	_TimerDone	;wreg free
  7523  01AAB2  5001               	movf	btemp^0,w,c
  7524  01AAB4  A4D8               	btfss	status,2,c
  7525  01AAB6  0012               	return	
  7526  01AAB8  EC03  F0DA         	call	_check_adc_scan	;wreg free
  7527  01AABC  5001               	movf	btemp^0,w,c
  7528  01AABE  A4D8               	btfss	status,2,c
  7529  01AAC0  0012               	return	
  7530  01AAC2  D7F3               	goto	l10188
  7531  01AAC4                     __end_of_update_adc_result:
  7532                           	opt callstack 0
  7533                           
  7534 ;; *************** function _start_adc_scan *****************
  7535 ;; Defined at:
  7536 ;;		line 32 in file "daq.c"
  7537 ;; Parameters:    Size  Location     Type
  7538 ;;		None
  7539 ;; Auto vars:     Size  Location     Type
  7540 ;;		None
  7541 ;; Return value:  Size  Location     Type
  7542 ;;                  1  [STACK] _Bool 
  7543 ;; Registers used:
  7544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  7545 ;; Tracked objects:
  7546 ;;		On entry : 0/0
  7547 ;;		On exit  : 1/0
  7548 ;;		Unchanged: 0/0
  7549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7554 ;;Total ram usage:        0 bytes
  7555 ;; Hardware stack levels used:    1
  7556 ;; Hardware stack levels required when called:   16
  7557 ;; This function calls:
  7558 ;;		_ADCC_DischargeSampleCapacitor
  7559 ;;		_ADCC_SetADIInterruptHandler
  7560 ;;		_ADCC_SetADTIInterruptHandler
  7561 ;;		_ADCC_StartConversion
  7562 ;; This function is called by:
  7563 ;;		_main
  7564 ;;		_update_adc_result
  7565 ;; This function uses a reentrant model
  7566 ;;
  7567                           
  7568                           	psect	text18
  7569  01A2FC                     __ptext18:
  7570                           	opt callstack 0
  7571  01A2FC                     _start_adc_scan:
  7572                           	opt callstack 14
  7573                           
  7574                           ;daq.c: 34:  if (R.done)
  7575                           
  7576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7577                           ;incstack = 0
  7578  01A2FC  0100               	movlb	0	; () banked
  7579  01A2FE  51EB               	movf	(_R+39)& (0+255),w,b	;volatile
  7580  01A300  A4D8               	btfss	status,2,c
  7581  01A302  0012               	return	
  7582                           
  7583                           ; BSR set to: 0
  7584                           ;daq.c: 37:  R.scan_index = 0;
  7585  01A304  6BE8               	clrf	(_R+36)& (0+255),b	;volatile
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;daq.c: 38:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  7589  01A306  013A               	movlb	58	; () banked
  7590  01A308  5140               	movf	64,w,b	;volatile
  7591  01A30A  006E F940  F001    	movff	14928,btemp	;volatile
  7592  01A310  6A02               	clrf	(btemp+1)^0,c
  7593  01A312  0060  F004  F002   	movff	btemp,btemp+1
  7594  01A318  6A01               	clrf	btemp^0,c
  7595  01A31A  2601               	addwf	btemp^0,f,c
  7596  01A31C  0E00               	movlw	0
  7597  01A31E  2202               	addwfc	(btemp+1)^0,f,c
  7598  01A320  0E77               	movlw	119
  7599  01A322  1401               	andwf	btemp^0,w,c
  7600  01A324  0100               	movlb	0	; () banked
  7601  01A326  6FE9               	movwf	(_R+37)& (0+255),b	;volatile
  7602  01A328  0E3C               	movlw	60
  7603  01A32A  1402               	andwf	(btemp+1)^0,w,c
  7604  01A32C  6FEA               	movwf	(_R+38)& (0+255),b	;volatile
  7605                           
  7606                           ; BSR set to: 0
  7607                           ;daq.c: 39:  ADCC_SetADIInterruptHandler(adc_int_handler);
  7608  01A32E  0E4E               	movlw	low _adc_int_handler
  7609  01A330  6EE6               	movwf	postinc1,c
  7610  01A332  0EB4               	movlw	high _adc_int_handler
  7611  01A334  6EE6               	movwf	postinc1,c
  7612  01A336  0E01               	movlw	low (_adc_int_handler shr (0+16))
  7613  01A338  6EE6               	movwf	postinc1,c
  7614  01A33A  ECEF  F0D7         	call	_ADCC_SetADIInterruptHandler	;wreg free
  7615                           
  7616                           ;daq.c: 40:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  7617  01A33E  0EDA               	movlw	low _adc_int_t_handler
  7618  01A340  6EE6               	movwf	postinc1,c
  7619  01A342  0EA0               	movlw	high _adc_int_t_handler
  7620  01A344  6EE6               	movwf	postinc1,c
  7621  01A346  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  7622  01A348  6EE6               	movwf	postinc1,c
  7623  01A34A  ECDB  F0D7         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  7624                           
  7625                           ;daq.c: 41:  ADCC_DischargeSampleCapacitor();
  7626  01A34E  ECFF  F0D9         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  7627                           
  7628                           ; BSR set to: 62
  7629                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  7630  01A352  0100               	movlb	0	; () banked
  7631  01A354  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
  7632  01A356  0B0F               	andlw	15
  7633  01A358  6EE6               	movwf	postinc1,c
  7634  01A35A  ECA4  F0D9         	call	_ADCC_StartConversion	;wreg free
  7635                           
  7636                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7637  01A35E  0012               	return		;funcret
  7638  01A360                     __end_of_start_adc_scan:
  7639                           	opt callstack 0
  7640                           
  7641 ;; *************** function _ADCC_StartConversion *****************
  7642 ;; Defined at:
  7643 ;;		line 128 in file "mcc_generated_files/adcc.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;  channel         1  [STACK] enum E16136
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;		None
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  1  [STACK] void 
  7650 ;; Registers used:
  7651 ;;		fsr1l, fsr1h
  7652 ;; Tracked objects:
  7653 ;;		On entry : 3F/0
  7654 ;;		On exit  : 3F/3E
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7661 ;;Total ram usage:        0 bytes
  7662 ;; Hardware stack levels used:    1
  7663 ;; Hardware stack levels required when called:   15
  7664 ;; This function calls:
  7665 ;;		Nothing
  7666 ;; This function is called by:
  7667 ;;		_start_adc_scan
  7668 ;;		_adc_int_t_handler
  7669 ;; This function uses a reentrant model
  7670 ;;
  7671                           
  7672                           	psect	text19
  7673  01B348                     __ptext19:
  7674                           	opt callstack 0
  7675  01B348                     _ADCC_StartConversion:
  7676                           	opt callstack 0
  7677                           
  7678                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  7679                           ;stkvar	_channel @ sp[(0)+-1]
  7680                           
  7681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7682                           ;incstack = 0
  7683 ;; hardware stack exceeded
  7684  01B348  0EFF               	movlw	-1
  7685  01B34A  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  7686                           
  7687                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  7688  01B350  013E               	movlb	62	; () banked
  7689  01B352  8FF8               	bsf	248,7,b	;volatile
  7690                           
  7691                           ; BSR set to: 62
  7692                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  7693  01B354  81F8               	bsf	248,0,b	;volatile
  7694                           
  7695                           ; BSR set to: 62
  7696                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  7697  01B356  52E5               	movf	postdec1,f,c
  7698  01B358  0012               	return		;funcret
  7699  01B35A                     __end_of_ADCC_StartConversion:
  7700                           	opt callstack 0
  7701                           
  7702 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  7703 ;; Defined at:
  7704 ;;		line 189 in file "mcc_generated_files/adcc.c"
  7705 ;; Parameters:    Size  Location     Type
  7706 ;;		None
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;		None
  7709 ;; Return value:  Size  Location     Type
  7710 ;;                  1  [STACK] void 
  7711 ;; Registers used:
  7712 ;;		wreg, status,2
  7713 ;; Tracked objects:
  7714 ;;		On entry : 0/0
  7715 ;;		On exit  : 3F/3E
  7716 ;;		Unchanged: 0/0
  7717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7722 ;;Total ram usage:        0 bytes
  7723 ;; Hardware stack levels used:    1
  7724 ;; Hardware stack levels required when called:   15
  7725 ;; This function calls:
  7726 ;;		Nothing
  7727 ;; This function is called by:
  7728 ;;		_start_adc_scan
  7729 ;;		_adc_int_t_handler
  7730 ;; This function uses a reentrant model
  7731 ;;
  7732                           
  7733                           	psect	text20
  7734  01B3FE                     __ptext20:
  7735                           	opt callstack 0
  7736  01B3FE                     _ADCC_DischargeSampleCapacitor:
  7737                           	opt callstack 0
  7738                           
  7739                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  7740                           
  7741                           ; BSR set to: 62
  7742                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7743                           ;incstack = 0
  7744 ;; hardware stack exceeded
  7745  01B3FE  0E3B               	movlw	59
  7746  01B400  013E               	movlb	62	; () banked
  7747  01B402  6FF1               	movwf	241,b	;volatile
  7748                           
  7749                           ; BSR set to: 62
  7750                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  7751  01B404  0012               	return		;funcret
  7752  01B406                     __end_of_ADCC_DischargeSampleCapacitor:
  7753                           	opt callstack 0
  7754                           
  7755 ;; *************** function _clear_adc_scan *****************
  7756 ;; Defined at:
  7757 ;;		line 63 in file "daq.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;		None
  7760 ;; Auto vars:     Size  Location     Type
  7761 ;;		None
  7762 ;; Return value:  Size  Location     Type
  7763 ;;                  1  [STACK] void 
  7764 ;; Registers used:
  7765 ;;		None
  7766 ;; Tracked objects:
  7767 ;;		On entry : 0/0
  7768 ;;		On exit  : 3F/0
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7775 ;;Total ram usage:        0 bytes
  7776 ;; Hardware stack levels used:    1
  7777 ;; Hardware stack levels required when called:   15
  7778 ;; This function calls:
  7779 ;;		Nothing
  7780 ;; This function is called by:
  7781 ;;		_main
  7782 ;;		_update_adc_result
  7783 ;; This function uses a reentrant model
  7784 ;;
  7785                           
  7786                           	psect	text21
  7787  01B426                     __ptext21:
  7788                           	opt callstack 0
  7789  01B426                     _clear_adc_scan:
  7790                           	opt callstack 13
  7791                           
  7792                           ;daq.c: 65:  R.done = 0;
  7793                           
  7794                           ; BSR set to: 62
  7795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7796                           ;incstack = 0
  7797  01B426  0100               	movlb	0	; () banked
  7798  01B428  6BEB               	clrf	(_R+39)& (0+255),b	;volatile
  7799                           
  7800                           ; BSR set to: 0
  7801                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7802  01B42A  0012               	return		;funcret
  7803  01B42C                     __end_of_clear_adc_scan:
  7804                           	opt callstack 0
  7805                           
  7806 ;; *************** function _check_adc_scan *****************
  7807 ;; Defined at:
  7808 ;;		line 55 in file "daq.c"
  7809 ;; Parameters:    Size  Location     Type
  7810 ;;		None
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;		None
  7813 ;; Return value:  Size  Location     Type
  7814 ;;                  1  [STACK] _Bool 
  7815 ;; Registers used:
  7816 ;;		btemp
  7817 ;; Tracked objects:
  7818 ;;		On entry : 0/0
  7819 ;;		On exit  : 0/0
  7820 ;;		Unchanged: 0/0
  7821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7826 ;;Total ram usage:        0 bytes
  7827 ;; Hardware stack levels used:    1
  7828 ;; Hardware stack levels required when called:   15
  7829 ;; This function calls:
  7830 ;;		Nothing
  7831 ;; This function is called by:
  7832 ;;		_main
  7833 ;;		_update_adc_result
  7834 ;; This function uses a reentrant model
  7835 ;;
  7836                           
  7837                           	psect	text22
  7838  01B406                     __ptext22:
  7839                           	opt callstack 0
  7840  01B406                     _check_adc_scan:
  7841                           	opt callstack 13
  7842                           
  7843                           ;daq.c: 57:  return R.done;
  7844                           
  7845                           ; BSR set to: 0
  7846                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7847                           ;incstack = 0
  7848  01B406  0060  F3AC  F001   	movff	_R+39,btemp	;volatile
  7849                           
  7850                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7851  01B40C  0012               	return		;funcret
  7852  01B40E                     __end_of_check_adc_scan:
  7853                           	opt callstack 0
  7854                           
  7855 ;; *************** function _set_load_relay_two *****************
  7856 ;; Defined at:
  7857 ;;		line 128 in file "mbmc.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;  mode            1  [STACK] _Bool 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;		None
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  1  [STACK] void 
  7864 ;; Registers used:
  7865 ;;		wreg, fsr1l, fsr1h
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7875 ;;Total ram usage:        0 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:   15
  7878 ;; This function calls:
  7879 ;;		Nothing
  7880 ;; This function is called by:
  7881 ;;		_main
  7882 ;;		_esr_check
  7883 ;; This function uses a reentrant model
  7884 ;;
  7885                           
  7886                           	psect	text23
  7887  01B35A                     __ptext23:
  7888                           	opt callstack 0
  7889  01B35A                     _set_load_relay_two:
  7890                           	opt callstack 15
  7891                           
  7892                           ;mbmc.c: 128: void set_load_relay_two(_Bool mode);mbmc.c: 129: {;mbmc.c: 130:  LATDbits.
      +                          LATD5 = mode;
  7893                           ;stkvar	_mode @ sp[(0)+-1]
  7894                           
  7895                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7896                           ;incstack = 0
  7897  01B35A  0EFF               	movlw	-1
  7898  01B35C  B0E3               	btfsc	plusw1,0,c
  7899  01B35E  D002               	bra	u9015
  7900  01B360  9ABD               	bcf	189,5,c	;volatile
  7901  01B362  D001               	bra	u9016
  7902  01B364                     u9015:
  7903  01B364  8ABD               	bsf	189,5,c	;volatile
  7904  01B366                     u9016:
  7905                           
  7906                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7907  01B366  52E5               	movf	postdec1,f,c
  7908  01B368  0012               	return		;funcret
  7909  01B36A                     __end_of_set_load_relay_two:
  7910                           	opt callstack 0
  7911                           
  7912 ;; *************** function _set_load_relay_one *****************
  7913 ;; Defined at:
  7914 ;;		line 123 in file "mbmc.c"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;  mode            1  [STACK] _Bool 
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;		None
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  1  [STACK] void 
  7921 ;; Registers used:
  7922 ;;		wreg, fsr1l, fsr1h
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7932 ;;Total ram usage:        0 bytes
  7933 ;; Hardware stack levels used:    1
  7934 ;; Hardware stack levels required when called:   15
  7935 ;; This function calls:
  7936 ;;		Nothing
  7937 ;; This function is called by:
  7938 ;;		_main
  7939 ;;		_esr_check
  7940 ;; This function uses a reentrant model
  7941 ;;
  7942                           
  7943                           	psect	text24
  7944  01B36A                     __ptext24:
  7945                           	opt callstack 0
  7946  01B36A                     _set_load_relay_one:
  7947                           	opt callstack 15
  7948                           
  7949                           ;mbmc.c: 123: void set_load_relay_one(_Bool mode);mbmc.c: 124: {;mbmc.c: 125:  LATDbits.
      +                          LATD4 = mode;
  7950                           ;stkvar	_mode @ sp[(0)+-1]
  7951                           
  7952                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7953                           ;incstack = 0
  7954  01B36A  0EFF               	movlw	-1
  7955  01B36C  B0E3               	btfsc	plusw1,0,c
  7956  01B36E  D002               	bra	u9005
  7957  01B370  98BD               	bcf	189,4,c	;volatile
  7958  01B372  D001               	bra	u9006
  7959  01B374                     u9005:
  7960  01B374  88BD               	bsf	189,4,c	;volatile
  7961  01B376                     u9006:
  7962                           
  7963                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7964  01B376  52E5               	movf	postdec1,f,c
  7965  01B378  0012               	return		;funcret
  7966  01B37A                     __end_of_set_load_relay_one:
  7967                           	opt callstack 0
  7968                           
  7969 ;; *************** function _eaDogM_WriteCommand *****************
  7970 ;; Defined at:
  7971 ;;		line 175 in file "eadog.c"
  7972 ;; Parameters:    Size  Location     Type
  7973 ;;  cmd             1  [STACK] const unsigned char 
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;		None
  7976 ;; Return value:  Size  Location     Type
  7977 ;;                  1  [STACK] void 
  7978 ;; Registers used:
  7979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7980 ;; Tracked objects:
  7981 ;;		On entry : 3F/3D
  7982 ;;		On exit  : 3F/0
  7983 ;;		Unchanged: 0/0
  7984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7989 ;;Total ram usage:        0 bytes
  7990 ;; Hardware stack levels used:    1
  7991 ;; Hardware stack levels required when called:   25
  7992 ;; This function calls:
  7993 ;;		_send_lcd_cmd_dma
  7994 ;; This function is called by:
  7995 ;;		_main
  7996 ;; This function uses a reentrant model
  7997 ;;
  7998                           
  7999                           	psect	text25
  8000  01B38A                     __ptext25:
  8001                           	opt callstack 0
  8002  01B38A                     _eaDogM_WriteCommand:
  8003                           	opt callstack 5
  8004                           
  8005                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  8006                           ;stkvar	_cmd @ sp[(0)+-1]
  8007                           
  8008                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8009                           ;incstack = 0
  8010  01B38A  0EFF               	movlw	-1
  8011  01B38C  50E3               	movf	plusw1,w,c
  8012  01B38E  6EE6               	movwf	postinc1,c
  8013  01B390  ECC9  F0D2         	call	_send_lcd_cmd_dma	;wreg free
  8014                           
  8015                           ; BSR set to: 0
  8016                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8017  01B394  52E5               	movf	postdec1,f,c
  8018  01B396  0012               	return		;funcret
  8019  01B398                     __end_of_eaDogM_WriteCommand:
  8020                           	opt callstack 0
  8021                           
  8022 ;; *************** function _convert_adc_data *****************
  8023 ;; Defined at:
  8024 ;;		line 51 in file "mbmc.c"
  8025 ;; Parameters:    Size  Location     Type
  8026 ;;		None
  8027 ;; Auto vars:     Size  Location     Type
  8028 ;;  i               1  [STACK] unsigned char 
  8029 ;; Return value:  Size  Location     Type
  8030 ;;                  1  [STACK] void 
  8031 ;; Registers used:
  8032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8033 ;; Tracked objects:
  8034 ;;		On entry : 0/0
  8035 ;;		On exit  : 0/0
  8036 ;;		Unchanged: 0/0
  8037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8042 ;;Total ram usage:        0 bytes
  8043 ;; Hardware stack levels used:    1
  8044 ;; Hardware stack levels required when called:   18
  8045 ;; This function calls:
  8046 ;;		_conv_raw_result
  8047 ;;		_lp_filter
  8048 ;; This function is called by:
  8049 ;;		_main
  8050 ;; This function uses a reentrant model
  8051 ;;
  8052                           
  8053                           	psect	text26
  8054  019868                     __ptext26:
  8055                           	opt callstack 0
  8056  019868                     _convert_adc_data:
  8057                           	opt callstack 0
  8058                           
  8059                           ; BSR set to: 0
  8060                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8061  019868  52E6               	movf	postinc1,f,c
  8062                           
  8063                           ;mbmc.c: 53:  uint8_t i = 0;
  8064                           ;stkvar	_i @ sp[(-1)+0]
  8065                           
  8066                           ;incstack = 0
  8067  01986A  0EFF               	movlw	-1
  8068  01986C  6AE3               	clrf	plusw1,c
  8069  01986E                     l10670:
  8070                           
  8071                           ;mbmc.c: 56:   if (V.calib) {
  8072  01986E  0102               	movlb	2	; () banked
  8073  019870  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  8074  019872  B4D8               	btfsc	status,2,c
  8075  019874  D01B               	goto	l10674
  8076                           
  8077                           ; BSR set to: 2
  8078                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8079  019876  0E01               	movlw	1
  8080  019878  6EE6               	movwf	postinc1,c
  8081                           
  8082                           ;stkvar	_i @ sp[(-2)+0]
  8083  01987A  0EFE               	movlw	-2
  8084  01987C  50E3               	movf	plusw1,w,c
  8085  01987E  6EE6               	movwf	postinc1,c
  8086  019880  0E01               	movlw	1
  8087  019882  6EE6               	movwf	postinc1,c
  8088                           
  8089                           ;stkvar	_i @ sp[(-4)+0]
  8090  019884  0EFC               	movlw	-4
  8091  019886  50E3               	movf	plusw1,w,c
  8092  019888  6EE6               	movwf	postinc1,c
  8093  01988A  EC6F  F0A5         	call	_conv_raw_result	;wreg free
  8094  01988E  0060  F007  FFE6   	movff	btemp,postinc1
  8095  019894  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8096  01989A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8097  0198A0  0060  F013  FFE6   	movff	btemp+3,postinc1
  8098  0198A6  EC79  F0BD         	call	_lp_filter	;wreg free
  8099  0198AA  D01A               	goto	L5
  8100  0198AC                     l10674:
  8101                           
  8102                           ; BSR set to: 2
  8103                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8104  0198AC  0E00               	movlw	0
  8105  0198AE  6EE6               	movwf	postinc1,c
  8106                           
  8107                           ;stkvar	_i @ sp[(-2)+0]
  8108  0198B0  0EFE               	movlw	-2
  8109  0198B2  50E3               	movf	plusw1,w,c
  8110  0198B4  6EE6               	movwf	postinc1,c
  8111  0198B6  0E00               	movlw	0
  8112  0198B8  6EE6               	movwf	postinc1,c
  8113                           
  8114                           ;stkvar	_i @ sp[(-4)+0]
  8115  0198BA  0EFC               	movlw	-4
  8116  0198BC  50E3               	movf	plusw1,w,c
  8117  0198BE  6EE6               	movwf	postinc1,c
  8118  0198C0  EC6F  F0A5         	call	_conv_raw_result	;wreg free
  8119  0198C4  0060  F007  FFE6   	movff	btemp,postinc1
  8120  0198CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8121  0198D0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8122  0198D6  0060  F013  FFE6   	movff	btemp+3,postinc1
  8123  0198DC  EC79  F0BD         	call	_lp_filter	;wreg free
  8124  0198E0                     L5:
  8125                           
  8126                           ;stkvar	_i @ sp[(-1)+0]
  8127  0198E0  0EFF               	movlw	-1
  8128  0198E2  50E3               	movf	plusw1,w,c
  8129  0198E4  0D04               	mullw	4
  8130  0198E6  0E00               	movlw	low _C
  8131  0198E8  24F3               	addwf	243,w,c
  8132  0198EA  6ED9               	movwf	fsr2l,c
  8133  0198EC  0E01               	movlw	high _C
  8134  0198EE  20F4               	addwfc	prodh,w,c
  8135  0198F0  6EDA               	movwf	fsr2h,c
  8136  0198F2  0060  F007  FFDE   	movff	btemp,postinc2
  8137  0198F8  0060  F00B  FFDE   	movff	btemp+1,postinc2
  8138  0198FE  0060  F00F  FFDE   	movff	btemp+2,postinc2
  8139  019904  0060  F013  FFDE   	movff	btemp+3,postinc2
  8140                           
  8141                           ;mbmc.c: 61:  } while (++i < 16);
  8142                           ;stkvar	_i @ sp[(-1)+0]
  8143  01990A  0EFF               	movlw	-1
  8144  01990C  2AE3               	incf	plusw1,f,c
  8145  01990E  0EFF               	movlw	-1
  8146  019910  006F FF8C  F001    	movff	plusw1,btemp
  8147  019916  0E0F               	movlw	15
  8148  019918  6401               	cpfsgt	btemp^0,c
  8149  01991A  D7A9               	goto	l10670
  8150                           
  8151                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8152  01991C  52E5               	movf	postdec1,f,c
  8153  01991E  0012               	return		;funcret
  8154  019920                     __end_of_convert_adc_data:
  8155                           	opt callstack 0
  8156                           
  8157 ;; *************** function _clear_hid_pflags *****************
  8158 ;; Defined at:
  8159 ;;		line 51 in file "hid.c"
  8160 ;; Parameters:    Size  Location     Type
  8161 ;;  h               1  [STACK] PTR struct H_data
  8162 ;;		 -> H(7), 
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;		None
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  1  [STACK] void 
  8167 ;; Registers used:
  8168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8169 ;; Tracked objects:
  8170 ;;		On entry : 3F/0
  8171 ;;		On exit  : 0/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8178 ;;Total ram usage:        0 bytes
  8179 ;; Hardware stack levels used:    1
  8180 ;; Hardware stack levels required when called:   15
  8181 ;; This function calls:
  8182 ;;		Nothing
  8183 ;; This function is called by:
  8184 ;;		_main
  8185 ;; This function uses a reentrant model
  8186 ;;
  8187                           
  8188                           	psect	text27
  8189  01B0A4                     __ptext27:
  8190                           	opt callstack 0
  8191  01B0A4                     _clear_hid_pflags:
  8192                           	opt callstack 15
  8193                           
  8194                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  8195                           ;stkvar	_h @ sp[(0)+-1]
  8196                           
  8197                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8198                           ;incstack = 0
  8199  01B0A4  0EFF               	movlw	-1
  8200  01B0A6  50E3               	movf	plusw1,w,c
  8201  01B0A8  6ED9               	movwf	fsr2l,c
  8202  01B0AA  6ADA               	clrf	fsr2h,c
  8203  01B0AC  0E03               	movlw	3
  8204  01B0AE  26D9               	addwf	fsr2l,f,c
  8205  01B0B0  0E00               	movlw	0
  8206  01B0B2  6EDF               	movwf	indf2,c
  8207                           
  8208                           ;hid.c: 54:  h->enter_p = SW_OFF;
  8209                           ;stkvar	_h @ sp[(0)+-1]
  8210  01B0B4  0EFF               	movlw	-1
  8211  01B0B6  50E3               	movf	plusw1,w,c
  8212  01B0B8  6ED9               	movwf	fsr2l,c
  8213  01B0BA  6ADA               	clrf	fsr2h,c
  8214  01B0BC  0E05               	movlw	5
  8215  01B0BE  26D9               	addwf	fsr2l,f,c
  8216  01B0C0  0E00               	movlw	0
  8217  01B0C2  6EDF               	movwf	indf2,c
  8218                           
  8219                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8220  01B0C4  52E5               	movf	postdec1,f,c
  8221  01B0C6  0012               	return		;funcret
  8222  01B0C8                     __end_of_clear_hid_pflags:
  8223                           	opt callstack 0
  8224                           
  8225 ;; *************** function _check_help *****************
  8226 ;; Defined at:
  8227 ;;		line 40 in file "mconfig.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;  flipper         1  [STACK] const _Bool 
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;  estatus         1    0        _Bool 
  8232 ;; Return value:  Size  Location     Type
  8233 ;;                  1  [STACK] _Bool 
  8234 ;; Registers used:
  8235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8236 ;; Tracked objects:
  8237 ;;		On entry : 3F/2
  8238 ;;		On exit  : 0/0
  8239 ;;		Unchanged: 0/0
  8240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8245 ;;Total ram usage:        0 bytes
  8246 ;; Hardware stack levels used:    1
  8247 ;; Hardware stack levels required when called:   27
  8248 ;; This function calls:
  8249 ;;		_StartTimer
  8250 ;;		_TimerDone
  8251 ;;		_display_help
  8252 ;;		_display_info
  8253 ;;		_get_vterm_ptr
  8254 ;;		_help_button
  8255 ;;		_mode_lamp_bright
  8256 ;;		_mode_lamp_dim
  8257 ;;		_set_display_info
  8258 ;;		_set_temp_display_help
  8259 ;;		_set_vterm
  8260 ;;		_sprintf
  8261 ;;		_update_lcd
  8262 ;;		_vterm_dump
  8263 ;; This function is called by:
  8264 ;;		_main
  8265 ;; This function uses a reentrant model
  8266 ;;
  8267                           
  8268                           	psect	text28
  8269  0174DC                     __ptext28:
  8270                           	opt callstack 0
  8271  0174DC                     _check_help:
  8272                           	opt callstack 3
  8273                           
  8274                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  8275                           
  8276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8277                           ;incstack = 0
  8278  0174DC  EC62  F0D5         	call	_help_button	;wreg free
  8279  0174E0  5001               	movf	btemp^0,w,c
  8280  0174E2  B4D8               	btfsc	status,2,c
  8281  0174E4  D0D0               	goto	l12514
  8282  0174E6  EC07  F0DA         	call	_display_info	;wreg free
  8283  0174EA  0401               	decf	btemp^0,w,c
  8284  0174EC  B4D8               	btfsc	status,2,c
  8285  0174EE  D0CB               	goto	l12514
  8286                           
  8287                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  8288  0174F0  0EDC               	movlw	220
  8289  0174F2  6EE6               	movwf	postinc1,c
  8290  0174F4  0E05               	movlw	5
  8291  0174F6  6EE6               	movwf	postinc1,c
  8292  0174F8  0E0B               	movlw	11
  8293  0174FA  6EE6               	movwf	postinc1,c
  8294  0174FC  ECA6  F0D4         	call	_StartTimer	;wreg free
  8295                           
  8296                           ;mconfig.c: 48:   if (V.debug)
  8297  017500  0102               	movlb	2	; () banked
  8298  017502  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  8299                           
  8300                           ; BSR set to: 2
  8301                           ;mconfig.c: 49:    vterm_dump();
  8302  017504  EC54  F0C5         	call	_vterm_dump	;wreg free
  8303                           
  8304                           ;mconfig.c: 51:   set_vterm(1);
  8305  017508  0E01               	movlw	1
  8306  01750A  6EE6               	movwf	postinc1,c
  8307  01750C  ECEE  F0D8         	call	_set_vterm	;wreg free
  8308                           
  8309                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  8310  017510  EC07  F0DA         	call	_display_info	;wreg free
  8311  017514  5001               	movf	btemp^0,w,c
  8312  017516  6EE6               	movwf	postinc1,c
  8313  017518  ECBD  F0D9         	call	_set_temp_display_help	;wreg free
  8314                           
  8315                           ; BSR set to: 2
  8316                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  8317  01751C  0E01               	movlw	1
  8318  01751E  6EE6               	movwf	postinc1,c
  8319  017520  ECFD  F0D8         	call	_set_display_info	;wreg free
  8320                           
  8321                           ;mconfig.c: 54:   if (flipper) {
  8322                           ;stkvar	_flipper @ sp[(0)+-1]
  8323  017524  0EFF               	movlw	-1
  8324  017526  50E3               	movf	plusw1,w,c
  8325  017528  B4D8               	btfsc	status,2,c
  8326  01752A  D019               	goto	l12500
  8327                           
  8328                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  8329  01752C  0EB1               	movlw	low STR_37
  8330  01752E  6EE6               	movwf	postinc1,c
  8331  017530  0EFF               	movlw	high STR_37
  8332  017532  6EE6               	movwf	postinc1,c
  8333  017534  0E60               	movlw	low STR_39
  8334  017536  6EE6               	movwf	postinc1,c
  8335  017538  0EFE               	movlw	high STR_39
  8336  01753A  6EE6               	movwf	postinc1,c
  8337  01753C  0E01               	movlw	1
  8338  01753E  6EE6               	movwf	postinc1,c
  8339  017540  0E00               	movlw	0
  8340  017542  6EE6               	movwf	postinc1,c
  8341  017544  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  8342  017548  0060  F007  FFE6   	movff	btemp,postinc1
  8343  01754E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8344  017554  0E06               	movlw	6
  8345  017556  6EE6               	movwf	postinc1,c
  8346  017558  ECA2  F0C8         	call	_sprintf	;wreg free
  8347                           
  8348                           ;mconfig.c: 56:   } else {
  8349  01755C  D018               	goto	l1661
  8350  01755E                     l12500:
  8351                           
  8352                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  8353  01755E  0EC7               	movlw	low STR_38
  8354  017560  6EE6               	movwf	postinc1,c
  8355  017562  0EFF               	movlw	high STR_38
  8356  017564  6EE6               	movwf	postinc1,c
  8357  017566  0E60               	movlw	low STR_39
  8358  017568  6EE6               	movwf	postinc1,c
  8359  01756A  0EFE               	movlw	high STR_39
  8360  01756C  6EE6               	movwf	postinc1,c
  8361  01756E  0E01               	movlw	1
  8362  017570  6EE6               	movwf	postinc1,c
  8363  017572  0E00               	movlw	0
  8364  017574  6EE6               	movwf	postinc1,c
  8365  017576  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  8366  01757A  0060  F007  FFE6   	movff	btemp,postinc1
  8367  017580  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8368  017586  0E06               	movlw	6
  8369  017588  6EE6               	movwf	postinc1,c
  8370  01758A  ECA2  F0C8         	call	_sprintf	;wreg free
  8371  01758E                     l1661:
  8372                           
  8373                           ; BSR set to: 0
  8374                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  8375  01758E  0102               	movlb	2	; () banked
  8376  017590  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  8377  017592  32E8               	rrcf	wreg,f,c
  8378  017594  32E8               	rrcf	wreg,f,c
  8379  017596  0B03               	andlw	3
  8380  017598  0D24               	mullw	36
  8381  01759A  0E12               	movlw	18
  8382  01759C  26F3               	addwf	243,f,c
  8383  01759E  0E00               	movlw	0
  8384  0175A0  22F4               	addwfc	244,f,c
  8385  0175A2  0EF9               	movlw	low _T
  8386  0175A4  6E0B               	movwf	(btemp+10)^0,c
  8387  0175A6  0EFB               	movlw	high _T
  8388  0175A8  6E0C               	movwf	(btemp+11)^0,c
  8389  0175AA  50F3               	movf	243,w,c
  8390  0175AC  260B               	addwf	(btemp+10)^0,f,c
  8391  0175AE  50F4               	movf	244,w,c
  8392  0175B0  220C               	addwfc	(btemp+11)^0,f,c
  8393  0175B2  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8394  0175B8  0060  F033  FFE6   	movff	btemp+11,postinc1
  8395  0175BE  0EBD               	movlw	low STR_41
  8396  0175C0  6EE6               	movwf	postinc1,c
  8397  0175C2  0EFF               	movlw	high STR_41
  8398  0175C4  6EE6               	movwf	postinc1,c
  8399  0175C6  0E01               	movlw	1
  8400  0175C8  6EE6               	movwf	postinc1,c
  8401  0175CA  0E01               	movlw	1
  8402  0175CC  6EE6               	movwf	postinc1,c
  8403  0175CE  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  8404  0175D2  0060  F007  FFE6   	movff	btemp,postinc1
  8405  0175D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8406  0175DE  0E06               	movlw	6
  8407  0175E0  6EE6               	movwf	postinc1,c
  8408  0175E2  ECA2  F0C8         	call	_sprintf	;wreg free
  8409                           
  8410                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  8411  0175E6  0102               	movlb	2	; () banked
  8412  0175E8  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  8413  0175EA  32E8               	rrcf	wreg,f,c
  8414  0175EC  32E8               	rrcf	wreg,f,c
  8415  0175EE  0B03               	andlw	3
  8416  0175F0  0D24               	mullw	36
  8417  0175F2  0EF9               	movlw	low _T
  8418  0175F4  6E0B               	movwf	(btemp+10)^0,c
  8419  0175F6  0EFB               	movlw	high _T
  8420  0175F8  6E0C               	movwf	(btemp+11)^0,c
  8421  0175FA  50F3               	movf	243,w,c
  8422  0175FC  260B               	addwf	(btemp+10)^0,f,c
  8423  0175FE  50F4               	movf	244,w,c
  8424  017600  220C               	addwfc	(btemp+11)^0,f,c
  8425  017602  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8426  017608  0060  F033  FFE6   	movff	btemp+11,postinc1
  8427  01760E  0EBD               	movlw	low STR_41
  8428  017610  6EE6               	movwf	postinc1,c
  8429  017612  0EFF               	movlw	high STR_41
  8430  017614  6EE6               	movwf	postinc1,c
  8431  017616  0E01               	movlw	1
  8432  017618  6EE6               	movwf	postinc1,c
  8433  01761A  0E02               	movlw	2
  8434  01761C  6EE6               	movwf	postinc1,c
  8435  01761E  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  8436  017622  0060  F007  FFE6   	movff	btemp,postinc1
  8437  017628  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8438  01762E  0E06               	movlw	6
  8439  017630  6EE6               	movwf	postinc1,c
  8440  017632  ECA2  F0C8         	call	_sprintf	;wreg free
  8441                           
  8442                           ; BSR set to: 0
  8443                           ;mconfig.c: 61:   V.help_id++;
  8444  017636  EE20  F29B         	lfsr	2,_V+155	;volatile
  8445  01763A  38DF               	swapf	223,w,c
  8446  01763C  6E0C               	movwf	(btemp+11)^0,c
  8447  01763E  320C               	rrcf	(btemp+11)^0,f,c
  8448  017640  300C               	rrcf	(btemp+11)^0,w,c
  8449  017642  0B03               	andlw	3
  8450  017644  6E0C               	movwf	(btemp+11)^0,c
  8451  017646  2A0C               	incf	(btemp+11)^0,f,c
  8452  017648  3A0C               	swapf	(btemp+11)^0,f,c
  8453  01764A  360C               	rlcf	(btemp+11)^0,f,c
  8454  01764C  360C               	rlcf	(btemp+11)^0,f,c
  8455  01764E  50DF               	movf	223,w,c
  8456  017650  180C               	xorwf	(btemp+11)^0,w,c
  8457  017652  0B3F               	andlw	-193
  8458  017654  180C               	xorwf	(btemp+11)^0,w,c
  8459  017656  6EDF               	movwf	223,c
  8460                           
  8461                           ; BSR set to: 0
  8462                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  8463  017658  0EB8               	movlw	184
  8464  01765A  6EE6               	movwf	postinc1,c
  8465  01765C  0E0B               	movlw	11
  8466  01765E  6EE6               	movwf	postinc1,c
  8467  017660  0E09               	movlw	9
  8468  017662  6EE6               	movwf	postinc1,c
  8469  017664  ECA6  F0D4         	call	_StartTimer	;wreg free
  8470                           
  8471                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  8472  017668  0EB8               	movlw	184
  8473  01766A  6EE6               	movwf	postinc1,c
  8474  01766C  0E0B               	movlw	11
  8475  01766E  6EE6               	movwf	postinc1,c
  8476  017670  0E07               	movlw	7
  8477  017672  6EE6               	movwf	postinc1,c
  8478  017674  ECA6  F0D4         	call	_StartTimer	;wreg free
  8479                           
  8480                           ;mconfig.c: 64:   mode_lamp_bright();
  8481  017678  ECCC  F0D9         	call	_mode_lamp_bright	;wreg free
  8482                           
  8483                           ;mconfig.c: 65:   update_lcd(1);
  8484  01767C  0E01               	movlw	1
  8485  01767E  6EE6               	movwf	postinc1,c
  8486  017680  EC93  F0C7         	call	_update_lcd	;wreg free
  8487                           
  8488                           ;mconfig.c: 67:  } else {
  8489  017684  D032               	goto	l1662
  8490  017686                     l12514:
  8491                           
  8492                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  8493  017686  0E09               	movlw	9
  8494  017688  6EE6               	movwf	postinc1,c
  8495  01768A  EC27  F0D7         	call	_TimerDone	;wreg free
  8496  01768E  5001               	movf	btemp^0,w,c
  8497  017690  B4D8               	btfsc	status,2,c
  8498  017692  D02B               	goto	l1662
  8499                           
  8500                           ;mconfig.c: 69:    set_vterm(0);
  8501  017694  0E00               	movlw	0
  8502  017696  6EE6               	movwf	postinc1,c
  8503  017698  ECEE  F0D8         	call	_set_vterm	;wreg free
  8504                           
  8505                           ;mconfig.c: 70:    V.help = 0;
  8506  01769C  0102               	movlb	2	; () banked
  8507  01769E  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  8508                           
  8509                           ; BSR set to: 2
  8510                           ;mconfig.c: 71:    set_display_info(display_help());
  8511  0176A0  EC0B  F0DA         	call	_display_help	;wreg free
  8512  0176A4  5001               	movf	btemp^0,w,c
  8513  0176A6  6EE6               	movwf	postinc1,c
  8514  0176A8  ECFD  F0D8         	call	_set_display_info	;wreg free
  8515                           
  8516                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  8517  0176AC  0060  FA57  FFE6   	movff	_V+149,postinc1
  8518  0176B2  0060  FA5B  FFE6   	movff	_V+150,postinc1
  8519  0176B8  EC61  F0D9         	call	_mode_lamp_dim	;wreg free
  8520                           
  8521                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  8522  0176BC  0E0B               	movlw	11
  8523  0176BE  6EE6               	movwf	postinc1,c
  8524  0176C0  EC27  F0D7         	call	_TimerDone	;wreg free
  8525  0176C4  5001               	movf	btemp^0,w,c
  8526  0176C6  B4D8               	btfsc	status,2,c
  8527  0176C8  D010               	goto	l1662
  8528                           
  8529                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  8530  0176CA  0102               	movlb	2	; () banked
  8531  0176CC  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  8532  0176CE  A4D8               	btfss	status,2,c
  8533  0176D0  D002               	goto	u11970
  8534  0176D2  0E01               	movlw	1
  8535  0176D4  D001               	goto	u11980
  8536  0176D6                     u11970:
  8537  0176D6  0E00               	movlw	0
  8538  0176D8                     u11980:
  8539  0176D8  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  8540                           
  8541                           ; BSR set to: 2
  8542                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  8543  0176DA  0EDC               	movlw	220
  8544  0176DC  6EE6               	movwf	postinc1,c
  8545  0176DE  0E05               	movlw	5
  8546  0176E0  6EE6               	movwf	postinc1,c
  8547  0176E2  0E0B               	movlw	11
  8548  0176E4  6EE6               	movwf	postinc1,c
  8549  0176E6  ECA6  F0D4         	call	_StartTimer	;wreg free
  8550  0176EA                     l1662:
  8551                           
  8552                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8553  0176EA  52E5               	movf	postdec1,f,c
  8554  0176EC  0012               	return		;funcret
  8555  0176EE                     __end_of_check_help:
  8556                           	opt callstack 0
  8557                           
  8558 ;; *************** function _vterm_dump *****************
  8559 ;; Defined at:
  8560 ;;		line 121 in file "mconfig.c"
  8561 ;; Parameters:    Size  Location     Type
  8562 ;;		None
  8563 ;; Auto vars:     Size  Location     Type
  8564 ;;		None
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  1  [STACK] void 
  8567 ;; Registers used:
  8568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8569 ;; Tracked objects:
  8570 ;;		On entry : 3F/2
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8578 ;;Total ram usage:        0 bytes
  8579 ;; Hardware stack levels used:    1
  8580 ;; Hardware stack levels required when called:   26
  8581 ;; This function calls:
  8582 ;;		_WaitMs
  8583 ;;		_eaDogM_WriteStringAtPos
  8584 ;;		_get_vterm_ptr
  8585 ;;		_sprintf
  8586 ;;		_wait_lcd_done
  8587 ;; This function is called by:
  8588 ;;		_check_help
  8589 ;; This function uses a reentrant model
  8590 ;;
  8591                           
  8592                           	psect	text29
  8593  018AA8                     __ptext29:
  8594                           	opt callstack 0
  8595  018AA8                     _vterm_dump:
  8596                           	opt callstack 3
  8597                           
  8598                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  8599                           
  8600                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8601                           ;incstack = 0
  8602  018AA8  0E01               	movlw	1
  8603  018AAA  6EE6               	movwf	postinc1,c
  8604  018AAC  0E00               	movlw	0
  8605  018AAE  6EE6               	movwf	postinc1,c
  8606  018AB0  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  8607  018AB4  0060  F007  FFE6   	movff	btemp,postinc1
  8608  018ABA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8609  018AC0  0E00               	movlw	0
  8610  018AC2  6EE6               	movwf	postinc1,c
  8611  018AC4  0E00               	movlw	0
  8612  018AC6  6EE6               	movwf	postinc1,c
  8613  018AC8  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  8614  018ACC  0060  F007  FFE6   	movff	btemp,postinc1
  8615  018AD2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8616  018AD8  0E93               	movlw	low STR_43
  8617  018ADA  6EE6               	movwf	postinc1,c
  8618  018ADC  0EFF               	movlw	high STR_43
  8619  018ADE  6EE6               	movwf	postinc1,c
  8620  018AE0  0E01               	movlw	low (_V+1)
  8621  018AE2  6EE6               	movwf	postinc1,c
  8622  018AE4  0E02               	movlw	high (_V+1)
  8623  018AE6  6EE6               	movwf	postinc1,c
  8624  018AE8  0E08               	movlw	8
  8625  018AEA  6EE6               	movwf	postinc1,c
  8626  018AEC  ECA2  F0C8         	call	_sprintf	;wreg free
  8627                           
  8628                           ; BSR set to: 0
  8629                           ;mconfig.c: 124:  wait_lcd_done();
  8630  018AF0  EC2A  F0D9         	call	_wait_lcd_done	;wreg free
  8631                           
  8632                           ; BSR set to: 0
  8633                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  8634  018AF4  0E01               	movlw	low (_V+1)
  8635  018AF6  6EE6               	movwf	postinc1,c
  8636  018AF8  0E02               	movlw	high (_V+1)
  8637  018AFA  6EE6               	movwf	postinc1,c
  8638  018AFC  0E00               	movlw	0
  8639  018AFE  6EE6               	movwf	postinc1,c
  8640  018B00  0E00               	movlw	0
  8641  018B02  6EE6               	movwf	postinc1,c
  8642  018B04  ECB4  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
  8643                           
  8644                           ; BSR set to: 59
  8645                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  8646  018B08  0E01               	movlw	1
  8647  018B0A  6EE6               	movwf	postinc1,c
  8648  018B0C  0E01               	movlw	1
  8649  018B0E  6EE6               	movwf	postinc1,c
  8650  018B10  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  8651  018B14  0060  F007  FFE6   	movff	btemp,postinc1
  8652  018B1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8653  018B20  0E00               	movlw	0
  8654  018B22  6EE6               	movwf	postinc1,c
  8655  018B24  0E01               	movlw	1
  8656  018B26  6EE6               	movwf	postinc1,c
  8657  018B28  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  8658  018B2C  0060  F007  FFE6   	movff	btemp,postinc1
  8659  018B32  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8660  018B38  0E93               	movlw	low STR_43
  8661  018B3A  6EE6               	movwf	postinc1,c
  8662  018B3C  0EFF               	movlw	high STR_43
  8663  018B3E  6EE6               	movwf	postinc1,c
  8664  018B40  0E01               	movlw	low (_V+1)
  8665  018B42  6EE6               	movwf	postinc1,c
  8666  018B44  0E02               	movlw	high (_V+1)
  8667  018B46  6EE6               	movwf	postinc1,c
  8668  018B48  0E08               	movlw	8
  8669  018B4A  6EE6               	movwf	postinc1,c
  8670  018B4C  ECA2  F0C8         	call	_sprintf	;wreg free
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;mconfig.c: 127:  wait_lcd_done();
  8674  018B50  EC2A  F0D9         	call	_wait_lcd_done	;wreg free
  8675                           
  8676                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  8677  018B54  0E01               	movlw	low (_V+1)
  8678  018B56  6EE6               	movwf	postinc1,c
  8679  018B58  0E02               	movlw	high (_V+1)
  8680  018B5A  6EE6               	movwf	postinc1,c
  8681  018B5C  0E00               	movlw	0
  8682  018B5E  6EE6               	movwf	postinc1,c
  8683  018B60  0E01               	movlw	1
  8684  018B62  6EE6               	movwf	postinc1,c
  8685  018B64  ECB4  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
  8686                           
  8687                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  8688  018B68  0E01               	movlw	1
  8689  018B6A  6EE6               	movwf	postinc1,c
  8690  018B6C  0E02               	movlw	2
  8691  018B6E  6EE6               	movwf	postinc1,c
  8692  018B70  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  8693  018B74  0060  F007  FFE6   	movff	btemp,postinc1
  8694  018B7A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8695  018B80  0E00               	movlw	0
  8696  018B82  6EE6               	movwf	postinc1,c
  8697  018B84  0E02               	movlw	2
  8698  018B86  6EE6               	movwf	postinc1,c
  8699  018B88  EC7D  F0D6         	call	_get_vterm_ptr	;wreg free
  8700  018B8C  0060  F007  FFE6   	movff	btemp,postinc1
  8701  018B92  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8702  018B98  0E93               	movlw	low STR_43
  8703  018B9A  6EE6               	movwf	postinc1,c
  8704  018B9C  0EFF               	movlw	high STR_43
  8705  018B9E  6EE6               	movwf	postinc1,c
  8706  018BA0  0E01               	movlw	low (_V+1)
  8707  018BA2  6EE6               	movwf	postinc1,c
  8708  018BA4  0E02               	movlw	high (_V+1)
  8709  018BA6  6EE6               	movwf	postinc1,c
  8710  018BA8  0E08               	movlw	8
  8711  018BAA  6EE6               	movwf	postinc1,c
  8712  018BAC  ECA2  F0C8         	call	_sprintf	;wreg free
  8713                           
  8714                           ; BSR set to: 0
  8715                           ;mconfig.c: 130:  wait_lcd_done();
  8716  018BB0  EC2A  F0D9         	call	_wait_lcd_done	;wreg free
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  8720  018BB4  0E01               	movlw	low (_V+1)
  8721  018BB6  6EE6               	movwf	postinc1,c
  8722  018BB8  0E02               	movlw	high (_V+1)
  8723  018BBA  6EE6               	movwf	postinc1,c
  8724  018BBC  0E00               	movlw	0
  8725  018BBE  6EE6               	movwf	postinc1,c
  8726  018BC0  0E02               	movlw	2
  8727  018BC2  6EE6               	movwf	postinc1,c
  8728  018BC4  ECB4  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
  8729                           
  8730                           ; BSR set to: 59
  8731                           ;mconfig.c: 132:  WaitMs(3000);
  8732  018BC8  0EB8               	movlw	184
  8733  018BCA  6EE6               	movwf	postinc1,c
  8734  018BCC  0E0B               	movlw	11
  8735  018BCE  6EE6               	movwf	postinc1,c
  8736  018BD0  EC99  F0D5         	call	_WaitMs	;wreg free
  8737                           
  8738                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  8739  018BD4  0012               	return		;funcret
  8740  018BD6                     __end_of_vterm_dump:
  8741                           	opt callstack 0
  8742                           
  8743 ;; *************** function _sprintf *****************
  8744 ;; Defined at:
  8745 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;  s               2  [STACK] PTR unsigned char 
  8748 ;;		 -> D.lcd(288), D(290), port_data(512), V(188), 
  8749 ;;  fmt             2  [STACK] PTR const unsigned char 
  8750 ;;		 -> STR_56(85), STR_54(3), STR_53(3), STR_52(19), 
  8751 ;;		 -> STR_51(19), STR_50(19), STR_49(19), STR_48(19), 
  8752 ;;		 -> STR_47(19), STR_46(24), STR_45(15), STR_44(15), 
  8753 ;;		 -> STR_43(15), STR_42(10), STR_41(10), STR_40(19), 
  8754 ;;		 -> STR_39(19), STR_33(17), STR_32(16), STR_31(16), 
  8755 ;;		 -> STR_30(20), STR_29(20), STR_28(19), STR_27(19), 
  8756 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
  8757 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
  8758 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(22), 
  8759 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
  8760 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
  8761 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
  8762 ;;		 -> STR_1(17), 
  8763 ;; Auto vars:     Size  Location     Type
  8764 ;;  f               6  [STACK] struct _IO_FILE
  8765 ;;  ap              2  [STACK] PTR void [1]
  8766 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8767 ;;  ret             2    0        int 
  8768 ;; Return value:  Size  Location     Type
  8769 ;;                  2  [STACK] int 
  8770 ;; Registers used:
  8771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8772 ;; Tracked objects:
  8773 ;;		On entry : 0/1
  8774 ;;		On exit  : 3F/0
  8775 ;;		Unchanged: 0/0
  8776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8781 ;;Total ram usage:        0 bytes
  8782 ;; Hardware stack levels used:    1
  8783 ;; Hardware stack levels required when called:   23
  8784 ;; This function calls:
  8785 ;;		_vfprintf
  8786 ;; This function is called by:
  8787 ;;		_main
  8788 ;;		_check_help
  8789 ;;		_vterm_dump
  8790 ;;		_calc_bsoc
  8791 ;; This function uses a reentrant model
  8792 ;;
  8793                           
  8794                           	psect	text30
  8795  019144                     __ptext30:
  8796                           	opt callstack 0
  8797  019144                     _sprintf:
  8798                           	opt callstack 0
  8799                           
  8800                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8801  019144  0E08               	movlw	8
  8802  019146  26E1               	addwf	fsr1l,f,c
  8803  019148  0E00               	movlw	0
  8804  01914A  22E2               	addwfc	fsr1h,f,c
  8805                           
  8806                           ;incstack = 0
  8807 ;; hardware stack exceeded
  8808  01914C  0EFE               	movlw	254
  8809  01914E  6E0B               	movwf	(btemp+10)^0,c
  8810  019150  0EFF               	movlw	255
  8811  019152  6E0C               	movwf	(btemp+11)^0,c
  8812                           
  8813                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  8814  019154  0EF5               	movlw	245
  8815  019156  24E1               	addwf	fsr1l,w,c
  8816  019158  6E09               	movwf	(btemp+8)^0,c
  8817  01915A  0EFF               	movlw	255
  8818  01915C  20E2               	addwfc	fsr1h,w,c
  8819  01915E  6E0A               	movwf	(btemp+9)^0,c
  8820  019160  500B               	movf	(btemp+10)^0,w,c
  8821  019162  2609               	addwf	(btemp+8)^0,f,c
  8822  019164  500C               	movf	(btemp+11)^0,w,c
  8823  019166  220A               	addwfc	(btemp+9)^0,f,c
  8824                           
  8825                           ;stkvar	_ap @ sp[(-8)+6]
  8826  019168  0EFF               	movlw	-1
  8827  01916A  0060  F02B  FFE3   	movff	btemp+9,plusw1
  8828  019170  0EFE               	movlw	-2
  8829  019172  0060  F027  FFE3   	movff	btemp+8,plusw1
  8830                           
  8831                           ;stkvar	_s @ sp[(-8)+-3]
  8832  019178  0EF5               	movlw	-11
  8833  01917A  006F FF8C  F00B    	movff	plusw1,btemp+10
  8834  019180  0EF6               	movlw	-10
  8835  019182  006F FF8C  F00C    	movff	plusw1,btemp+11
  8836                           
  8837                           ;stkvar	_f @ sp[(-8)+0]
  8838  019188  0EF9               	movlw	-7
  8839  01918A  0060  F033  FFE3   	movff	btemp+11,plusw1
  8840  019190  0EF8               	movlw	-8
  8841  019192  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8842                           
  8843                           ;stkvar	_f @ sp[(-8)+0]
  8844  019198  0EFA               	movlw	250
  8845  01919A  24E1               	addwf	fsr1l,w,c
  8846  01919C  6ED9               	movwf	fsr2l,c
  8847  01919E  0EFF               	movlw	255
  8848  0191A0  20E2               	addwfc	fsr1h,w,c
  8849  0191A2  6EDA               	movwf	fsr2h,c
  8850  0191A4  0E00               	movlw	0
  8851  0191A6  6EDE               	movwf	postinc2,c
  8852  0191A8  0E00               	movlw	0
  8853  0191AA  6EDD               	movwf	postdec2,c
  8854                           
  8855                           ;stkvar	_f @ sp[(-8)+0]
  8856  0191AC  0EFC               	movlw	252
  8857  0191AE  24E1               	addwf	fsr1l,w,c
  8858  0191B0  6ED9               	movwf	fsr2l,c
  8859  0191B2  0EFF               	movlw	255
  8860  0191B4  20E2               	addwfc	fsr1h,w,c
  8861  0191B6  6EDA               	movwf	fsr2h,c
  8862  0191B8  0E00               	movlw	0
  8863  0191BA  6EDE               	movwf	postinc2,c
  8864  0191BC  0E00               	movlw	0
  8865  0191BE  6EDD               	movwf	postdec2,c
  8866                           
  8867                           ;stkvar	_ap @ sp[(-8)+6]
  8868  0191C0  0EFE               	movlw	254
  8869  0191C2  24E1               	addwf	fsr1l,w,c
  8870  0191C4  6E01               	movwf	btemp^0,c
  8871  0191C6  0EFF               	movlw	255
  8872  0191C8  20E2               	addwfc	fsr1h,w,c
  8873  0191CA  6E02               	movwf	(btemp+1)^0,c
  8874  0191CC  0060  F007  FFE6   	movff	btemp,postinc1
  8875  0191D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8876                           
  8877                           ;stkvar	_fmt @ sp[(-10)+-5]
  8878  0191D8  0EF1               	movlw	-15
  8879  0191DA  006F FF8F FFE6     	movff	plusw1,postinc1
  8880  0191E0  006F FF8F FFE6     	movff	plusw1,postinc1
  8881                           
  8882                           ;stkvar	_f @ sp[(-12)+0]
  8883  0191E6  0EF4               	movlw	244
  8884  0191E8  24E1               	addwf	fsr1l,w,c
  8885  0191EA  6E01               	movwf	btemp^0,c
  8886  0191EC  0EFF               	movlw	255
  8887  0191EE  20E2               	addwfc	fsr1h,w,c
  8888  0191F0  6E02               	movwf	(btemp+1)^0,c
  8889  0191F2  0060  F007  FFE6   	movff	btemp,postinc1
  8890  0191F8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8891  0191FE  ECE7  F0CC         	call	_vfprintf	;wreg free
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;stkvar	_f @ sp[(-8)+0]
  8895  019202  0EFA               	movlw	250
  8896  019204  24E1               	addwf	fsr1l,w,c
  8897  019206  6ED9               	movwf	fsr2l,c
  8898  019208  0EFF               	movlw	255
  8899  01920A  20E2               	addwfc	fsr1h,w,c
  8900  01920C  6EDA               	movwf	fsr2h,c
  8901  01920E  006F FF78  F00B    	movff	postinc2,btemp+10
  8902  019214  006F FF74  F00C    	movff	postdec2,btemp+11
  8903                           
  8904                           ;stkvar	_s @ sp[(-8)+-3]
  8905  01921A  0EF5               	movlw	-11
  8906  01921C  006F FF8C  F009    	movff	plusw1,btemp+8
  8907  019222  0EF6               	movlw	-10
  8908  019224  006F FF8C  F00A    	movff	plusw1,btemp+9
  8909  01922A  500B               	movf	(btemp+10)^0,w,c
  8910  01922C  2409               	addwf	(btemp+8)^0,w,c
  8911  01922E  6ED9               	movwf	fsr2l,c
  8912  019230  500C               	movf	(btemp+11)^0,w,c
  8913  019232  200A               	addwfc	(btemp+9)^0,w,c
  8914  019234  6EDA               	movwf	fsr2h,c
  8915  019236  0E00               	movlw	0
  8916  019238  6EDF               	movwf	indf2,c
  8917                           
  8918                           ; BSR set to: 0
  8919                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, args
      +                          ize = 4, vargsize = 0
  8920  01923A  0EF8               	movlw	248
  8921  01923C  26E1               	addwf	fsr1l,f,c
  8922  01923E  0EFF               	movlw	255
  8923  019240  22E2               	addwfc	fsr1h,f,c
  8924  019242  52E5               	movf	postdec1,f,c
  8925  019244  50E7               	movf	indf1,w,c
  8926  019246  5EE1               	subwf	fsr1l,f,c
  8927  019248  0E00               	movlw	0
  8928  01924A  5AE2               	subwfb	fsr1h,f,c
  8929  01924C  0012               	return		;funcret
  8930  01924E                     __end_of_sprintf:
  8931                           	opt callstack 0
  8932                           
  8933 ;; *************** function _get_vterm_ptr *****************
  8934 ;; Defined at:
  8935 ;;		line 116 in file "mconfig.c"
  8936 ;; Parameters:    Size  Location     Type
  8937 ;;  line            1  [STACK] const unsigned char 
  8938 ;;  vterm           1  [STACK] const unsigned char 
  8939 ;; Auto vars:     Size  Location     Type
  8940 ;;		None
  8941 ;; Return value:  Size  Location     Type
  8942 ;;                  2  [STACK] PTR unsigned char 
  8943 ;; Registers used:
  8944 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  8945 ;; Tracked objects:
  8946 ;;		On entry : 0/1
  8947 ;;		On exit  : 0/0
  8948 ;;		Unchanged: 0/0
  8949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8954 ;;Total ram usage:        0 bytes
  8955 ;; Hardware stack levels used:    1
  8956 ;; Hardware stack levels required when called:   15
  8957 ;; This function calls:
  8958 ;;		Nothing
  8959 ;; This function is called by:
  8960 ;;		_main
  8961 ;;		_check_help
  8962 ;;		_vterm_dump
  8963 ;; This function uses a reentrant model
  8964 ;;
  8965                           
  8966                           	psect	text31
  8967  01ACFA                     __ptext31:
  8968                           	opt callstack 0
  8969  01ACFA                     _get_vterm_ptr:
  8970                           	opt callstack 15
  8971                           
  8972                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  8973                           ;stkvar	_vterm @ sp[(0)+-2]
  8974                           
  8975                           ; BSR set to: 0
  8976                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8977                           ;incstack = 0
  8978  01ACFA  0EFE               	movlw	-2
  8979  01ACFC  50E3               	movf	plusw1,w,c
  8980  01ACFE  0B03               	andlw	3
  8981  01AD00  0D48               	mullw	72
  8982  01AD02  0EFF               	movlw	low _D
  8983  01AD04  6E01               	movwf	btemp^0,c
  8984  01AD06  0E07               	movlw	high _D
  8985  01AD08  6E02               	movwf	(btemp+1)^0,c
  8986  01AD0A  50F3               	movf	243,w,c
  8987  01AD0C  2601               	addwf	btemp^0,f,c
  8988  01AD0E  50F4               	movf	244,w,c
  8989  01AD10  2202               	addwfc	(btemp+1)^0,f,c
  8990                           
  8991                           ;stkvar	_line @ sp[(0)+-1]
  8992  01AD12  0EFF               	movlw	-1
  8993  01AD14  50E3               	movf	plusw1,w,c
  8994  01AD16  0B03               	andlw	3
  8995  01AD18  0D18               	mullw	24
  8996  01AD1A  50F3               	movf	243,w,c
  8997  01AD1C  2601               	addwf	btemp^0,f,c
  8998  01AD1E  50F4               	movf	244,w,c
  8999  01AD20  2202               	addwfc	(btemp+1)^0,f,c
  9000                           
  9001                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9002  01AD22  52E5               	movf	postdec1,f,c
  9003  01AD24  52E5               	movf	postdec1,f,c
  9004  01AD26  0012               	return		;funcret
  9005  01AD28                     __end_of_get_vterm_ptr:
  9006                           	opt callstack 0
  9007                           
  9008 ;; *************** function _WaitMs *****************
  9009 ;; Defined at:
  9010 ;;		line 32 in file "timers.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;  numMilliseco    2  [STACK] const unsigned short 
  9013 ;; Auto vars:     Size  Location     Type
  9014 ;;		None
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  1  [STACK] void 
  9017 ;; Registers used:
  9018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/2
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9028 ;;Total ram usage:        0 bytes
  9029 ;; Hardware stack levels used:    1
  9030 ;; Hardware stack levels required when called:   16
  9031 ;; This function calls:
  9032 ;;		_StartTimer
  9033 ;;		_TimerDone
  9034 ;; This function is called by:
  9035 ;;		_main
  9036 ;;		_vterm_dump
  9037 ;;		_esr_check
  9038 ;; This function uses a reentrant model
  9039 ;;
  9040                           
  9041                           	psect	text32
  9042  01AB32                     __ptext32:
  9043                           	opt callstack 0
  9044  01AB32                     _WaitMs:
  9045                           	opt callstack 13
  9046                           
  9047                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9048                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9049                           
  9050                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9051                           ;incstack = 0
  9052  01AB32  0EFE               	movlw	-2
  9053  01AB34  006F FF8F FFE6     	movff	plusw1,postinc1
  9054  01AB3A  006F FF8F FFE6     	movff	plusw1,postinc1
  9055  01AB40  0E00               	movlw	0
  9056  01AB42  6EE6               	movwf	postinc1,c
  9057  01AB44  ECA6  F0D4         	call	_StartTimer	;wreg free
  9058                           
  9059                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9060  01AB48  D005               	goto	l9468
  9061  01AB4A                     l1593:
  9062                           
  9063                           ;timers.c: 36:   __nop();
  9064  01AB4A  F000               	nop	
  9065                           
  9066                           ;timers.c: 37:   __nop();
  9067  01AB4C  F000               	nop	
  9068                           
  9069                           ;timers.c: 38:   __nop();
  9070  01AB4E  F000               	nop	
  9071                           
  9072                           ;timers.c: 39:   __nop();
  9073  01AB50  F000               	nop	
  9074  01AB52  0004               	clrwdt		;# 
  9075  01AB54                     l9468:
  9076                           
  9077                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9078  01AB54  0E00               	movlw	0
  9079  01AB56  6EE6               	movwf	postinc1,c
  9080  01AB58  EC27  F0D7         	call	_TimerDone	;wreg free
  9081  01AB5C  5001               	movf	btemp^0,w,c
  9082  01AB5E  B4D8               	btfsc	status,2,c
  9083  01AB60  D7F4               	goto	l1593
  9084                           
  9085                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9086  01AB62  52E5               	movf	postdec1,f,c
  9087  01AB64  52E5               	movf	postdec1,f,c
  9088  01AB66  0012               	return		;funcret
  9089  01AB68                     __end_of_WaitMs:
  9090                           	opt callstack 0
  9091                           
  9092 ;; *************** function _update_lcd *****************
  9093 ;; Defined at:
  9094 ;;		line 85 in file "mconfig.c"
  9095 ;; Parameters:    Size  Location     Type
  9096 ;;  vterm           1  [STACK] unsigned char 
  9097 ;; Auto vars:     Size  Location     Type
  9098 ;;		None
  9099 ;; Return value:  Size  Location     Type
  9100 ;;                  1  [STACK] unsigned char 
  9101 ;; Registers used:
  9102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9103 ;; Tracked objects:
  9104 ;;		On entry : 0/0
  9105 ;;		On exit  : 0/0
  9106 ;;		Unchanged: 0/0
  9107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9112 ;;Total ram usage:        0 bytes
  9113 ;; Hardware stack levels used:    1
  9114 ;; Hardware stack levels required when called:   26
  9115 ;; This function calls:
  9116 ;;		_eaDogM_WriteStringAtPos
  9117 ;;		_wait_lcd_done
  9118 ;; This function is called by:
  9119 ;;		_main
  9120 ;;		_check_help
  9121 ;; This function uses a reentrant model
  9122 ;;
  9123                           
  9124                           	psect	text33
  9125  018F26                     __ptext33:
  9126                           	opt callstack 0
  9127  018F26                     _update_lcd:
  9128                           	opt callstack 4
  9129                           
  9130                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9131                           ;stkvar	_vterm @ sp[(0)+-1]
  9132                           
  9133                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9134                           ;incstack = 0
  9135  018F26  0EFF               	movlw	-1
  9136  018F28  006F FF8C  F001    	movff	plusw1,btemp
  9137  018F2E  0E03               	movlw	3
  9138  018F30  1601               	andwf	btemp^0,f,c
  9139  018F32  0EFF               	movlw	-1
  9140  018F34  0060  F007  FFE3   	movff	btemp,plusw1
  9141                           
  9142                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9143  018F3A  EE22  F11F         	lfsr	2,_D+288
  9144  018F3E  A0DF               	btfss	indf2,0,c
  9145  018F40  D004               	goto	l12316
  9146                           
  9147                           ;stkvar	_vterm @ sp[(0)+-1]
  9148  018F42  0EFF               	movlw	-1
  9149  018F44  50E3               	movf	plusw1,w,c
  9150  018F46  B4D8               	btfsc	status,2,c
  9151  018F48  D074               	goto	l1669
  9152  018F4A                     l12316:
  9153                           
  9154                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  9155                           ;stkvar	_vterm @ sp[(0)+-1]
  9156  018F4A  0EFF               	movlw	-1
  9157  018F4C  50E3               	movf	plusw1,w,c
  9158  018F4E  0D48               	mullw	72
  9159  018F50  0E0F               	movlw	low (_D+16)
  9160  018F52  24F3               	addwf	243,w,c
  9161  018F54  6ED9               	movwf	fsr2l,c
  9162  018F56  0E08               	movlw	high (_D+16)
  9163  018F58  20F4               	addwfc	prodh,w,c
  9164  018F5A  6EDA               	movwf	fsr2h,c
  9165  018F5C  0E00               	movlw	0
  9166  018F5E  6EDF               	movwf	indf2,c
  9167                           
  9168                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  9169                           ;stkvar	_vterm @ sp[(0)+-1]
  9170  018F60  0EFF               	movlw	-1
  9171  018F62  50E3               	movf	plusw1,w,c
  9172  018F64  0D48               	mullw	72
  9173  018F66  0E27               	movlw	low (_D+40)
  9174  018F68  24F3               	addwf	243,w,c
  9175  018F6A  6ED9               	movwf	fsr2l,c
  9176  018F6C  0E08               	movlw	high (_D+40)
  9177  018F6E  20F4               	addwfc	prodh,w,c
  9178  018F70  6EDA               	movwf	fsr2h,c
  9179  018F72  0E00               	movlw	0
  9180  018F74  6EDF               	movwf	indf2,c
  9181                           
  9182                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  9183                           ;stkvar	_vterm @ sp[(0)+-1]
  9184  018F76  0EFF               	movlw	-1
  9185  018F78  50E3               	movf	plusw1,w,c
  9186  018F7A  0D48               	mullw	72
  9187  018F7C  0E3F               	movlw	low (_D+64)
  9188  018F7E  24F3               	addwf	243,w,c
  9189  018F80  6ED9               	movwf	fsr2l,c
  9190  018F82  0E08               	movlw	high (_D+64)
  9191  018F84  20F4               	addwfc	prodh,w,c
  9192  018F86  6EDA               	movwf	fsr2h,c
  9193  018F88  0E00               	movlw	0
  9194  018F8A  6EDF               	movwf	indf2,c
  9195                           
  9196                           ;mconfig.c: 95:  wait_lcd_done();
  9197  018F8C  EC2A  F0D9         	call	_wait_lcd_done	;wreg free
  9198                           
  9199                           ; BSR set to: 0
  9200                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  9201                           ;stkvar	_vterm @ sp[(0)+-1]
  9202  018F90  0EFF               	movlw	-1
  9203  018F92  50E3               	movf	plusw1,w,c
  9204  018F94  0D48               	mullw	72
  9205  018F96  0EFF               	movlw	low _D
  9206  018F98  6E0B               	movwf	(btemp+10)^0,c
  9207  018F9A  0E07               	movlw	high _D
  9208  018F9C  6E0C               	movwf	(btemp+11)^0,c
  9209  018F9E  50F3               	movf	243,w,c
  9210  018FA0  260B               	addwf	(btemp+10)^0,f,c
  9211  018FA2  50F4               	movf	244,w,c
  9212  018FA4  220C               	addwfc	(btemp+11)^0,f,c
  9213  018FA6  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9214  018FAC  0060  F033  FFE6   	movff	btemp+11,postinc1
  9215  018FB2  0E00               	movlw	0
  9216  018FB4  6EE6               	movwf	postinc1,c
  9217  018FB6  0E00               	movlw	0
  9218  018FB8  6EE6               	movwf	postinc1,c
  9219  018FBA  ECB4  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
  9220                           
  9221                           ; BSR set to: 59
  9222                           ;mconfig.c: 97:  wait_lcd_done();
  9223  018FBE  EC2A  F0D9         	call	_wait_lcd_done	;wreg free
  9224                           
  9225                           ; BSR set to: 0
  9226                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  9227                           ;stkvar	_vterm @ sp[(0)+-1]
  9228  018FC2  0EFF               	movlw	-1
  9229  018FC4  50E3               	movf	plusw1,w,c
  9230  018FC6  0D48               	mullw	72
  9231  018FC8  0EFF               	movlw	low _D
  9232  018FCA  6E0B               	movwf	(btemp+10)^0,c
  9233  018FCC  0E07               	movlw	high _D
  9234  018FCE  6E0C               	movwf	(btemp+11)^0,c
  9235  018FD0  0E18               	movlw	24
  9236  018FD2  260B               	addwf	(btemp+10)^0,f,c
  9237  018FD4  0E00               	movlw	0
  9238  018FD6  220C               	addwfc	(btemp+11)^0,f,c
  9239  018FD8  50F3               	movf	243,w,c
  9240  018FDA  260B               	addwf	(btemp+10)^0,f,c
  9241  018FDC  50F4               	movf	244,w,c
  9242  018FDE  220C               	addwfc	(btemp+11)^0,f,c
  9243  018FE0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9244  018FE6  0060  F033  FFE6   	movff	btemp+11,postinc1
  9245  018FEC  0E00               	movlw	0
  9246  018FEE  6EE6               	movwf	postinc1,c
  9247  018FF0  0E01               	movlw	1
  9248  018FF2  6EE6               	movwf	postinc1,c
  9249  018FF4  ECB4  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
  9250                           
  9251                           ; BSR set to: 59
  9252                           ;mconfig.c: 99:  wait_lcd_done();
  9253  018FF8  EC2A  F0D9         	call	_wait_lcd_done	;wreg free
  9254                           
  9255                           ; BSR set to: 0
  9256                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  9257                           ;stkvar	_vterm @ sp[(0)+-1]
  9258  018FFC  0EFF               	movlw	-1
  9259  018FFE  50E3               	movf	plusw1,w,c
  9260  019000  0D48               	mullw	72
  9261  019002  0EFF               	movlw	low _D
  9262  019004  6E0B               	movwf	(btemp+10)^0,c
  9263  019006  0E07               	movlw	high _D
  9264  019008  6E0C               	movwf	(btemp+11)^0,c
  9265  01900A  0E30               	movlw	48
  9266  01900C  260B               	addwf	(btemp+10)^0,f,c
  9267  01900E  0E00               	movlw	0
  9268  019010  220C               	addwfc	(btemp+11)^0,f,c
  9269  019012  50F3               	movf	243,w,c
  9270  019014  260B               	addwf	(btemp+10)^0,f,c
  9271  019016  50F4               	movf	244,w,c
  9272  019018  220C               	addwfc	(btemp+11)^0,f,c
  9273  01901A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9274  019020  0060  F033  FFE6   	movff	btemp+11,postinc1
  9275  019026  0E00               	movlw	0
  9276  019028  6EE6               	movwf	postinc1,c
  9277  01902A  0E02               	movlw	2
  9278  01902C  6EE6               	movwf	postinc1,c
  9279  01902E  ECB4  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
  9280  019032                     l1669:
  9281                           
  9282                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9283  019032  52E5               	movf	postdec1,f,c
  9284  019034  0012               	return		;funcret
  9285  019036                     __end_of_update_lcd:
  9286                           	opt callstack 0
  9287                           
  9288 ;; *************** function _eaDogM_WriteStringAtPos *****************
  9289 ;; Defined at:
  9290 ;;		line 278 in file "eadog.c"
  9291 ;; Parameters:    Size  Location     Type
  9292 ;;  r               1  [STACK] const unsigned char 
  9293 ;;  c               1  [STACK] const unsigned char 
  9294 ;;  strPtr          2  [STACK] PTR unsigned char 
  9295 ;;		 -> D.lcd(288), D(290), V(188), 
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;		None
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  1  [STACK] void 
  9300 ;; Registers used:
  9301 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9302 ;; Tracked objects:
  9303 ;;		On entry : 3F/0
  9304 ;;		On exit  : 3F/3B
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9311 ;;Total ram usage:        0 bytes
  9312 ;; Hardware stack levels used:    1
  9313 ;; Hardware stack levels required when called:   25
  9314 ;; This function calls:
  9315 ;;		_eaDogM_WriteString
  9316 ;;		_send_lcd_cmd_dma
  9317 ;; This function is called by:
  9318 ;;		_update_lcd
  9319 ;;		_vterm_dump
  9320 ;; This function uses a reentrant model
  9321 ;;
  9322                           
  9323                           	psect	text34
  9324  01AB68                     __ptext34:
  9325                           	opt callstack 0
  9326  01AB68                     _eaDogM_WriteStringAtPos:
  9327                           	opt callstack 4
  9328                           
  9329                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  9330                           ;stkvar	_c @ sp[(0)+-2]
  9331                           
  9332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9333                           ;incstack = 0
  9334  01AB68  0EFE               	movlw	-2
  9335  01AB6A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9336                           
  9337                           ;stkvar	_r @ sp[(0)+-1]
  9338  01AB70  0EFF               	movlw	-1
  9339  01AB72  50E3               	movf	plusw1,w,c
  9340  01AB74  0D10               	mullw	16
  9341  01AB76  50F3               	movf	243,w,c
  9342  01AB78  240C               	addwf	(btemp+11)^0,w,c
  9343  01AB7A  0F80               	addlw	128
  9344  01AB7C  6EE6               	movwf	postinc1,c
  9345  01AB7E  ECC9  F0D2         	call	_send_lcd_cmd_dma	;wreg free
  9346                           
  9347                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  9348                           ;stkvar	_strPtr @ sp[(0)+-4]
  9349  01AB82  0EFC               	movlw	-4
  9350  01AB84  006F FF8F FFE6     	movff	plusw1,postinc1
  9351  01AB8A  006F FF8F FFE6     	movff	plusw1,postinc1
  9352  01AB90  EC92  F0CD         	call	_eaDogM_WriteString	;wreg free
  9353                           
  9354                           ; BSR set to: 59
  9355                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  9356  01AB94  52E5               	movf	postdec1,f,c
  9357  01AB96  52E5               	movf	postdec1,f,c
  9358  01AB98  52E5               	movf	postdec1,f,c
  9359  01AB9A  52E5               	movf	postdec1,f,c
  9360  01AB9C  0012               	return		;funcret
  9361  01AB9E                     __end_of_eaDogM_WriteStringAtPos:
  9362                           	opt callstack 0
  9363                           
  9364 ;; *************** function _send_lcd_cmd_dma *****************
  9365 ;; Defined at:
  9366 ;;		line 220 in file "eadog.c"
  9367 ;; Parameters:    Size  Location     Type
  9368 ;;  strPtr          1  [STACK] unsigned char 
  9369 ;; Auto vars:     Size  Location     Type
  9370 ;;		None
  9371 ;; Return value:  Size  Location     Type
  9372 ;;                  1  [STACK] void 
  9373 ;; Registers used:
  9374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9375 ;; Tracked objects:
  9376 ;;		On entry : 0/3D
  9377 ;;		On exit  : 3F/0
  9378 ;;		Unchanged: 0/0
  9379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9384 ;;Total ram usage:        0 bytes
  9385 ;; Hardware stack levels used:    1
  9386 ;; Hardware stack levels required when called:   24
  9387 ;; This function calls:
  9388 ;;		_printf
  9389 ;;		_ringBufS_flush
  9390 ;;		_start_lcd
  9391 ;;		_wait_lcd_done
  9392 ;;		_wait_lcd_set
  9393 ;; This function is called by:
  9394 ;;		_eaDogM_WriteCommand
  9395 ;;		_eaDogM_WriteStringAtPos
  9396 ;; This function uses a reentrant model
  9397 ;;
  9398                           
  9399                           	psect	text35
  9400  01A592                     __ptext35:
  9401                           	opt callstack 0
  9402  01A592                     _send_lcd_cmd_dma:
  9403                           	opt callstack 4
  9404                           
  9405                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  9406                           
  9407                           ; BSR set to: 59
  9408                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9409                           ;incstack = 0
  9410  01A592  EC16  F0DA         	call	_wait_lcd_set	;wreg free
  9411                           
  9412                           ; BSR set to: 0
  9413                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  9414  01A596  0E00               	movlw	0
  9415  01A598  6EE6               	movwf	postinc1,c
  9416  01A59A  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9417  01A5A0  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9418  01A5A6  ECCB  F0CE         	call	_ringBufS_flush	;wreg free
  9419  01A5AA  92BC               	bcf	188,1,c	;volatile
  9420  01A5AC  94BC               	bcf	188,2,c	;volatile
  9421                           
  9422                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  9423  01A5AE  013B               	movlb	59	; () banked
  9424  01A5B0  9FFC               	bcf	252,7,b	;volatile
  9425                           
  9426                           ; BSR set to: 59
  9427                           ;eadog.c: 229:  DMA1SSZ = 1;
  9428  01A5B2  0E00               	movlw	0
  9429  01A5B4  6FF8               	movwf	248,b	;volatile
  9430  01A5B6  0E01               	movlw	1
  9431  01A5B8  6FF7               	movwf	247,b	;volatile
  9432                           
  9433                           ; BSR set to: 59
  9434                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  9435  01A5BA  8FFC               	bsf	252,7,b	;volatile
  9436                           
  9437                           ; BSR set to: 59
  9438                           ;eadog.c: 231:  printf("%c", strPtr);
  9439                           ;stkvar	_strPtr @ sp[(0)+-1]
  9440  01A5BC  0EFF               	movlw	-1
  9441  01A5BE  50E3               	movf	plusw1,w,c
  9442  01A5C0  6EE6               	movwf	postinc1,c
  9443  01A5C2  0E00               	movlw	0
  9444  01A5C4  6EE6               	movwf	postinc1,c
  9445  01A5C6  0EF8               	movlw	low STR_35
  9446  01A5C8  6EE6               	movwf	postinc1,c
  9447  01A5CA  0EFF               	movlw	high STR_35
  9448  01A5CC  6EE6               	movwf	postinc1,c
  9449  01A5CE  0E04               	movlw	4
  9450  01A5D0  6EE6               	movwf	postinc1,c
  9451  01A5D2  ECB0  F0D1         	call	_printf	;wreg free
  9452                           
  9453                           ; BSR set to: 0
  9454                           ;eadog.c: 232:  start_lcd();
  9455  01A5D6  EC19  F0DA         	call	_start_lcd	;wreg free
  9456                           
  9457                           ; BSR set to: 59
  9458                           ;eadog.c: 233:  wait_lcd_done();
  9459  01A5DA  EC2A  F0D9         	call	_wait_lcd_done	;wreg free
  9460                           
  9461                           ; BSR set to: 0
  9462  01A5DE  82BC               	bsf	188,1,c	;volatile
  9463                           
  9464                           ; BSR set to: 0
  9465                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9466  01A5E0  52E5               	movf	postdec1,f,c
  9467  01A5E2  0012               	return		;funcret
  9468  01A5E4                     __end_of_send_lcd_cmd_dma:
  9469                           	opt callstack 0
  9470                           
  9471 ;; *************** function _wait_lcd_done *****************
  9472 ;; Defined at:
  9473 ;;		line 156 in file "eadog.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;		None
  9476 ;; Auto vars:     Size  Location     Type
  9477 ;;		None
  9478 ;; Return value:  Size  Location     Type
  9479 ;;                  1  [STACK] void 
  9480 ;; Registers used:
  9481 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9482 ;; Tracked objects:
  9483 ;;		On entry : 0/0
  9484 ;;		On exit  : 3F/0
  9485 ;;		Unchanged: 0/0
  9486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9491 ;;Total ram usage:        0 bytes
  9492 ;; Hardware stack levels used:    1
  9493 ;; Hardware stack levels required when called:   16
  9494 ;; This function calls:
  9495 ;;		_wdtdelay
  9496 ;; This function is called by:
  9497 ;;		_send_lcd_cmd_dma
  9498 ;;		_update_lcd
  9499 ;;		_vterm_dump
  9500 ;; This function uses a reentrant model
  9501 ;;
  9502                           
  9503                           	psect	text36
  9504  01B254                     __ptext36:
  9505                           	opt callstack 0
  9506  01B254                     _wait_lcd_done:
  9507                           	opt callstack 13
  9508                           
  9509                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  9510                           
  9511                           ; BSR set to: 0
  9512                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9513                           ;incstack = 0
  9514  01B254  0100               	movlb	0	; () banked
  9515  01B256  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
  9516  01B258  D7FD               	goto	_wait_lcd_done
  9517                           
  9518                           ; BSR set to: 0
  9519                           ;eadog.c: 159:  wdtdelay(50);
  9520  01B25A  0E32               	movlw	50
  9521  01B25C  6EE6               	movwf	postinc1,c
  9522  01B25E  0E00               	movlw	0
  9523  01B260  6EE6               	movwf	postinc1,c
  9524  01B262  0E00               	movlw	0
  9525  01B264  6EE6               	movwf	postinc1,c
  9526  01B266  0E00               	movlw	0
  9527  01B268  6EE6               	movwf	postinc1,c
  9528  01B26A  EC41  F0D2         	call	_wdtdelay	;wreg free
  9529                           
  9530                           ; BSR set to: 0
  9531                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9532  01B26E  0012               	return		;funcret
  9533  01B270                     __end_of_wait_lcd_done:
  9534                           	opt callstack 0
  9535                           
  9536 ;; *************** function _wdtdelay *****************
  9537 ;; Defined at:
  9538 ;;		line 23 in file "eadog.c"
  9539 ;; Parameters:    Size  Location     Type
  9540 ;;  delay           4  [STACK] const unsigned long 
  9541 ;; Auto vars:     Size  Location     Type
  9542 ;;		None
  9543 ;; Return value:  Size  Location     Type
  9544 ;;                  1  [STACK] void 
  9545 ;; Registers used:
  9546 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9547 ;; Tracked objects:
  9548 ;;		On entry : 0/0
  9549 ;;		On exit  : 3F/0
  9550 ;;		Unchanged: 0/0
  9551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9556 ;;Total ram usage:        0 bytes
  9557 ;; Hardware stack levels used:    1
  9558 ;; Hardware stack levels required when called:   15
  9559 ;; This function calls:
  9560 ;;		Nothing
  9561 ;; This function is called by:
  9562 ;;		_init_display
  9563 ;;		_send_lcd_cmd
  9564 ;;		_send_lcd_cmd_long
  9565 ;;		_wait_lcd_done
  9566 ;; This function uses a reentrant model
  9567 ;;
  9568                           
  9569                           	psect	text37
  9570  01A482                     __ptext37:
  9571                           	opt callstack 0
  9572  01A482                     _wdtdelay:
  9573                           	opt callstack 13
  9574                           
  9575                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  9576                           
  9577                           ; BSR set to: 0
  9578                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9579                           ;incstack = 0
  9580  01A482  0100               	movlb	0	; () banked
  9581  01A484  6B9A               	clrf	wdtdelay@dcount& (0+255),b
  9582  01A486  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9583  01A488  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9584  01A48A  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9585  01A48C                     l1434:
  9586                           
  9587                           ; BSR set to: 0
  9588                           ;eadog.c: 28:   __nop();
  9589  01A48C  F000               	nop	
  9590  01A48E  0004               	clrwdt		;# 
  9591                           
  9592                           ;eadog.c: 30:  };
  9593  01A490  0E01               	movlw	1
  9594  01A492  0100               	movlb	0	; () banked
  9595  01A494  279A               	addwf	wdtdelay@dcount& (0+255),f,b
  9596  01A496  0E00               	movlw	0
  9597  01A498  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9598  01A49A  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9599  01A49C  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9600                           
  9601                           ; BSR set to: 0
  9602                           ;stkvar	_delay @ sp[(0)+-4]
  9603  01A49E  0EFC               	movlw	-4
  9604  01A4A0  006F FF8C  F001    	movff	plusw1,btemp
  9605  01A4A6  519A               	movf	wdtdelay@dcount& (0+255),w,b
  9606  01A4A8  5C01               	subwf	btemp^0,w,c
  9607  01A4AA  0EFD               	movlw	-3
  9608  01A4AC  006F FF8C  F001    	movff	plusw1,btemp
  9609  01A4B2  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  9610  01A4B4  5801               	subwfb	btemp^0,w,c
  9611  01A4B6  0EFE               	movlw	-2
  9612  01A4B8  006F FF8C  F001    	movff	plusw1,btemp
  9613  01A4BE  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  9614  01A4C0  5801               	subwfb	btemp^0,w,c
  9615  01A4C2  0EFF               	movlw	-1
  9616  01A4C4  006F FF8C  F001    	movff	plusw1,btemp
  9617  01A4CA  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  9618  01A4CC  5801               	subwfb	btemp^0,w,c
  9619  01A4CE  B0D8               	btfsc	status,0,c
  9620  01A4D0  D7DD               	goto	l1434
  9621                           
  9622                           ; BSR set to: 0
  9623                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  9624  01A4D2  52E5               	movf	postdec1,f,c
  9625  01A4D4  52E5               	movf	postdec1,f,c
  9626  01A4D6  52E5               	movf	postdec1,f,c
  9627  01A4D8  52E5               	movf	postdec1,f,c
  9628  01A4DA  0012               	return		;funcret
  9629  01A4DC                     __end_of_wdtdelay:
  9630                           	opt callstack 0
  9631                           
  9632 ;; *************** function _eaDogM_WriteString *****************
  9633 ;; Defined at:
  9634 ;;		line 199 in file "eadog.c"
  9635 ;; Parameters:    Size  Location     Type
  9636 ;;  strPtr          2  [STACK] PTR unsigned char 
  9637 ;;		 -> D.lcd(288), D(290), V(188), 
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;		None
  9640 ;; Return value:  Size  Location     Type
  9641 ;;                  1  [STACK] void 
  9642 ;; Registers used:
  9643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9644 ;; Tracked objects:
  9645 ;;		On entry : 3F/0
  9646 ;;		On exit  : 3F/3B
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9653 ;;Total ram usage:        0 bytes
  9654 ;; Hardware stack levels used:    1
  9655 ;; Hardware stack levels required when called:   24
  9656 ;; This function calls:
  9657 ;;		_printf
  9658 ;;		_ringBufS_flush
  9659 ;;		_start_lcd
  9660 ;;		_strlen
  9661 ;;		_wait_lcd_set
  9662 ;; This function is called by:
  9663 ;;		_eaDogM_WriteStringAtPos
  9664 ;; This function uses a reentrant model
  9665 ;;
  9666                           
  9667                           	psect	text38
  9668  019B24                     __ptext38:
  9669                           	opt callstack 0
  9670  019B24                     _eaDogM_WriteString:
  9671                           	opt callstack 4
  9672                           
  9673                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
  9674                           
  9675                           ; BSR set to: 0
  9676                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9677                           ;incstack = 0
  9678  019B24  EC16  F0DA         	call	_wait_lcd_set	;wreg free
  9679                           
  9680                           ; BSR set to: 0
  9681                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
  9682  019B28  0E00               	movlw	0
  9683  019B2A  6EE6               	movwf	postinc1,c
  9684  019B2C  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9685  019B32  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9686  019B38  ECCB  F0CE         	call	_ringBufS_flush	;wreg free
  9687  019B3C  94BC               	bcf	188,2,c	;volatile
  9688                           
  9689                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  9690                           ;stkvar	_strPtr @ sp[(0)+-2]
  9691  019B3E  0EFE               	movlw	-2
  9692  019B40  006F FF8F FFE6     	movff	plusw1,postinc1
  9693  019B46  006F FF8F FFE6     	movff	plusw1,postinc1
  9694  019B4C  ECE5  F0CD         	call	_strlen	;wreg free
  9695  019B50  5002               	movf	(btemp+1)^0,w,c
  9696  019B52  E104               	bnz	u11780
  9697  019B54  0E41               	movlw	65
  9698  019B56  5C01               	subwf	btemp^0,w,c
  9699  019B58  A0D8               	btfss	status,0,c
  9700  019B5A  D010               	goto	l12270
  9701  019B5C                     u11780:
  9702                           
  9703                           ;stkvar	_strPtr @ sp[(0)+-2]
  9704  019B5C  0EFE               	movlw	-2
  9705  019B5E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9706  019B64  0EFF               	movlw	-1
  9707  019B66  006F FF8C  F00C    	movff	plusw1,btemp+11
  9708  019B6C  0E40               	movlw	64
  9709  019B6E  240B               	addwf	(btemp+10)^0,w,c
  9710  019B70  6ED9               	movwf	fsr2l,c
  9711  019B72  0E00               	movlw	0
  9712  019B74  200C               	addwfc	(btemp+11)^0,w,c
  9713  019B76  6EDA               	movwf	fsr2h,c
  9714  019B78  0E00               	movlw	0
  9715  019B7A  6EDF               	movwf	indf2,c
  9716  019B7C                     l12270:
  9717                           
  9718                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
  9719  019B7C  013B               	movlb	59	; () banked
  9720  019B7E  9FFC               	bcf	252,7,b	;volatile
  9721                           
  9722                           ; BSR set to: 59
  9723                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
  9724                           ;stkvar	_strPtr @ sp[(0)+-2]
  9725  019B80  0EFE               	movlw	-2
  9726  019B82  006F FF8F FFE6     	movff	plusw1,postinc1
  9727  019B88  006F FF8F FFE6     	movff	plusw1,postinc1
  9728  019B8E  ECE5  F0CD         	call	_strlen	;wreg free
  9729  019B92  0060  F007  FBF7   	movff	btemp,15351	;volatile
  9730  019B98  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
  9731                           
  9732                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
  9733  019B9E  013B               	movlb	59	; () banked
  9734  019BA0  8FFC               	bsf	252,7,b	;volatile
  9735                           
  9736                           ; BSR set to: 59
  9737                           ;eadog.c: 210:  printf("%s", strPtr);
  9738                           ;stkvar	_strPtr @ sp[(0)+-2]
  9739  019BA2  0EFE               	movlw	-2
  9740  019BA4  006F FF8F FFE6     	movff	plusw1,postinc1
  9741  019BAA  006F FF8F FFE6     	movff	plusw1,postinc1
  9742  019BB0  0EFB               	movlw	low STR_34
  9743  019BB2  6EE6               	movwf	postinc1,c
  9744  019BB4  0EFF               	movlw	high STR_34
  9745  019BB6  6EE6               	movwf	postinc1,c
  9746  019BB8  0E04               	movlw	4
  9747  019BBA  6EE6               	movwf	postinc1,c
  9748  019BBC  ECB0  F0D1         	call	_printf	;wreg free
  9749                           
  9750                           ; BSR set to: 0
  9751                           ;eadog.c: 211:  start_lcd();
  9752  019BC0  EC19  F0DA         	call	_start_lcd	;wreg free
  9753                           
  9754                           ; BSR set to: 59
  9755                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  9756  019BC4  52E5               	movf	postdec1,f,c
  9757  019BC6  52E5               	movf	postdec1,f,c
  9758  019BC8  0012               	return		;funcret
  9759  019BCA                     __end_of_eaDogM_WriteString:
  9760                           	opt callstack 0
  9761                           
  9762 ;; *************** function _wait_lcd_set *****************
  9763 ;; Defined at:
  9764 ;;		line 146 in file "eadog.c"
  9765 ;; Parameters:    Size  Location     Type
  9766 ;;		None
  9767 ;; Auto vars:     Size  Location     Type
  9768 ;;		None
  9769 ;; Return value:  Size  Location     Type
  9770 ;;                  1  [STACK] void 
  9771 ;; Registers used:
  9772 ;;		None
  9773 ;; Tracked objects:
  9774 ;;		On entry : 0/3D
  9775 ;;		On exit  : 3F/0
  9776 ;;		Unchanged: 0/0
  9777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9782 ;;Total ram usage:        0 bytes
  9783 ;; Hardware stack levels used:    1
  9784 ;; Hardware stack levels required when called:   15
  9785 ;; This function calls:
  9786 ;;		Nothing
  9787 ;; This function is called by:
  9788 ;;		_eaDogM_WriteString
  9789 ;;		_send_lcd_cmd_dma
  9790 ;; This function uses a reentrant model
  9791 ;;
  9792                           
  9793                           	psect	text39
  9794  01B42C                     __ptext39:
  9795                           	opt callstack 0
  9796  01B42C                     _wait_lcd_set:
  9797                           	opt callstack 12
  9798                           
  9799                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
  9800                           
  9801                           ; BSR set to: 59
  9802                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9803                           ;incstack = 0
  9804  01B42C  0100               	movlb	0	; () banked
  9805  01B42E  8760               	bsf	_spi_link& (0+255),3,b	;volatile
  9806                           
  9807                           ; BSR set to: 0
  9808                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9809  01B430  0012               	return		;funcret
  9810  01B432                     __end_of_wait_lcd_set:
  9811                           	opt callstack 0
  9812                           
  9813 ;; *************** function _start_lcd *****************
  9814 ;; Defined at:
  9815 ;;		line 141 in file "eadog.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;		None
  9818 ;; Auto vars:     Size  Location     Type
  9819 ;;		None
  9820 ;; Return value:  Size  Location     Type
  9821 ;;                  1  [STACK] void 
  9822 ;; Registers used:
  9823 ;;		None
  9824 ;; Tracked objects:
  9825 ;;		On entry : 3F/0
  9826 ;;		On exit  : 3F/3B
  9827 ;;		Unchanged: 0/0
  9828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9833 ;;Total ram usage:        0 bytes
  9834 ;; Hardware stack levels used:    1
  9835 ;; Hardware stack levels required when called:   15
  9836 ;; This function calls:
  9837 ;;		Nothing
  9838 ;; This function is called by:
  9839 ;;		_eaDogM_WriteString
  9840 ;;		_send_lcd_cmd_dma
  9841 ;; This function uses a reentrant model
  9842 ;;
  9843                           
  9844                           	psect	text40
  9845  01B432                     __ptext40:
  9846                           	opt callstack 0
  9847  01B432                     _start_lcd:
  9848                           	opt callstack 12
  9849                           
  9850                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
  9851                           
  9852                           ; BSR set to: 0
  9853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9854                           ;incstack = 0
  9855  01B432  013B               	movlb	59	; () banked
  9856  01B434  8DFC               	bsf	252,6,b	;volatile
  9857                           
  9858                           ; BSR set to: 59
  9859                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9860  01B436  0012               	return		;funcret
  9861  01B438                     __end_of_start_lcd:
  9862                           	opt callstack 0
  9863                           
  9864 ;; *************** function _ringBufS_flush *****************
  9865 ;; Defined at:
  9866 ;;		line 76 in file "ringbufs.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;  _this           2  [STACK] PTR struct ringBufS_t
  9869 ;;		 -> ring_buf1(67), 
  9870 ;;  clearBuffer     1  [STACK] const char 
  9871 ;; Auto vars:     Size  Location     Type
  9872 ;;		None
  9873 ;; Return value:  Size  Location     Type
  9874 ;;                  1  [STACK] void 
  9875 ;; Registers used:
  9876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9877 ;; Tracked objects:
  9878 ;;		On entry : 3F/0
  9879 ;;		On exit  : 0/0
  9880 ;;		Unchanged: 0/0
  9881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9886 ;;Total ram usage:        0 bytes
  9887 ;; Hardware stack levels used:    1
  9888 ;; Hardware stack levels required when called:   16
  9889 ;; This function calls:
  9890 ;;		_memset
  9891 ;; This function is called by:
  9892 ;;		_eaDogM_WriteString
  9893 ;;		_send_lcd_cmd_dma
  9894 ;; This function uses a reentrant model
  9895 ;;
  9896                           
  9897                           	psect	text41
  9898  019D96                     __ptext41:
  9899                           	opt callstack 0
  9900  019D96                     _ringBufS_flush:
  9901                           	opt callstack 11
  9902                           
  9903                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  9904                           ;stkvar	__this @ sp[(0)+-2]
  9905                           
  9906                           ; BSR set to: 59
  9907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9908                           ;incstack = 0
  9909  019D96  0EFE               	movlw	-2
  9910  019D98  006F FF8C  F00B    	movff	plusw1,btemp+10
  9911  019D9E  0EFF               	movlw	-1
  9912  019DA0  006F FF8C  F00C    	movff	plusw1,btemp+11
  9913  019DA6  0E42               	movlw	66
  9914  019DA8  240B               	addwf	(btemp+10)^0,w,c
  9915  019DAA  6ED9               	movwf	fsr2l,c
  9916  019DAC  0E00               	movlw	0
  9917  019DAE  200C               	addwfc	(btemp+11)^0,w,c
  9918  019DB0  6EDA               	movwf	fsr2h,c
  9919  019DB2  0E00               	movlw	0
  9920  019DB4  6EDF               	movwf	indf2,c
  9921                           
  9922                           ;ringbufs.c: 79:  _this->head = 0;
  9923                           ;stkvar	__this @ sp[(0)+-2]
  9924  019DB6  0EFE               	movlw	-2
  9925  019DB8  006F FF8C  F00B    	movff	plusw1,btemp+10
  9926  019DBE  0EFF               	movlw	-1
  9927  019DC0  006F FF8C  F00C    	movff	plusw1,btemp+11
  9928  019DC6  0E40               	movlw	64
  9929  019DC8  240B               	addwf	(btemp+10)^0,w,c
  9930  019DCA  6ED9               	movwf	fsr2l,c
  9931  019DCC  0E00               	movlw	0
  9932  019DCE  200C               	addwfc	(btemp+11)^0,w,c
  9933  019DD0  6EDA               	movwf	fsr2h,c
  9934  019DD2  0E00               	movlw	0
  9935  019DD4  6EDF               	movwf	indf2,c
  9936                           
  9937                           ;ringbufs.c: 80:  _this->tail = 0;
  9938                           ;stkvar	__this @ sp[(0)+-2]
  9939  019DD6  0EFE               	movlw	-2
  9940  019DD8  006F FF8C  F00B    	movff	plusw1,btemp+10
  9941  019DDE  0EFF               	movlw	-1
  9942  019DE0  006F FF8C  F00C    	movff	plusw1,btemp+11
  9943  019DE6  0E41               	movlw	65
  9944  019DE8  240B               	addwf	(btemp+10)^0,w,c
  9945  019DEA  6ED9               	movwf	fsr2l,c
  9946  019DEC  0E00               	movlw	0
  9947  019DEE  200C               	addwfc	(btemp+11)^0,w,c
  9948  019DF0  6EDA               	movwf	fsr2h,c
  9949  019DF2  0E00               	movlw	0
  9950  019DF4  6EDF               	movwf	indf2,c
  9951                           
  9952                           ;ringbufs.c: 81:  if (clearBuffer) {
  9953                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  9954  019DF6  0EFD               	movlw	-3
  9955  019DF8  50E3               	movf	plusw1,w,c
  9956  019DFA  B4D8               	btfsc	status,2,c
  9957  019DFC  D011               	goto	l1578
  9958                           
  9959                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  9960  019DFE  0E40               	movlw	64
  9961  019E00  6EE6               	movwf	postinc1,c
  9962  019E02  0E00               	movlw	0
  9963  019E04  6EE6               	movwf	postinc1,c
  9964  019E06  0E00               	movlw	0
  9965  019E08  6EE6               	movwf	postinc1,c
  9966  019E0A  0E00               	movlw	0
  9967  019E0C  6EE6               	movwf	postinc1,c
  9968                           
  9969                           ;stkvar	__this @ sp[(-4)+-2]
  9970  019E0E  0EFA               	movlw	-6
  9971  019E10  006F FF8F FFE6     	movff	plusw1,postinc1
  9972  019E16  006F FF8F FFE6     	movff	plusw1,postinc1
  9973  019E1C  ECEF  F0B2         	call	_memset	;wreg free
  9974  019E20                     l1578:
  9975                           
  9976                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  9977  019E20  52E5               	movf	postdec1,f,c
  9978  019E22  52E5               	movf	postdec1,f,c
  9979  019E24  52E5               	movf	postdec1,f,c
  9980  019E26  0012               	return		;funcret
  9981  019E28                     __end_of_ringBufS_flush:
  9982                           	opt callstack 0
  9983                           
  9984 ;; *************** function _memset *****************
  9985 ;; Defined at:
  9986 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  9987 ;; Parameters:    Size  Location     Type
  9988 ;;  dest            2  [STACK] PTR void 
  9989 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9990 ;;  c               2  [STACK] int 
  9991 ;;  n               2  [STACK] unsigned int 
  9992 ;; Auto vars:     Size  Location     Type
  9993 ;;  s               2  [STACK] PTR unsigned char 
  9994 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9995 ;;  k               2  [STACK] unsigned int 
  9996 ;; Return value:  Size  Location     Type
  9997 ;;                  2  [STACK] PTR void 
  9998 ;; Registers used:
  9999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10000 ;; Tracked objects:
 10001 ;;		On entry : 0/0
 10002 ;;		On exit  : 0/0
 10003 ;;		Unchanged: 0/0
 10004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10009 ;;Total ram usage:        0 bytes
 10010 ;; Hardware stack levels used:    1
 10011 ;; Hardware stack levels required when called:   15
 10012 ;; This function calls:
 10013 ;;		Nothing
 10014 ;; This function is called by:
 10015 ;;		_ringBufS_init
 10016 ;;		_ringBufS_flush
 10017 ;; This function uses a reentrant model
 10018 ;;
 10019                           
 10020                           	psect	text42
 10021  0165DE                     __ptext42:
 10022                           	opt callstack 0
 10023  0165DE                     _memset:
 10024                           	opt callstack 0
 10025                           
 10026                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10027  0165DE  52E6               	movf	postinc1,f,c
 10028  0165E0  52E6               	movf	postinc1,f,c
 10029  0165E2  52E6               	movf	postinc1,f,c
 10030  0165E4  52E6               	movf	postinc1,f,c
 10031                           
 10032                           ;stkvar	_dest @ sp[(-4)+-2]
 10033                           
 10034                           ;incstack = 0
 10035  0165E6  0EFA               	movlw	-6
 10036  0165E8  006F FF8C  F00B    	movff	plusw1,btemp+10
 10037  0165EE  0EFB               	movlw	-5
 10038  0165F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 10039                           
 10040                           ;stkvar	_s @ sp[(-4)+0]
 10041  0165F6  0EFD               	movlw	-3
 10042  0165F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 10043  0165FE  0EFC               	movlw	-4
 10044  016600  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10045                           
 10046                           ;stkvar	_n @ sp[(-4)+-6]
 10047  016606  0EF6               	movlw	-10
 10048  016608  006F FF8C  F001    	movff	plusw1,btemp
 10049  01660E  0EF7               	movlw	-9
 10050  016610  50E3               	movf	plusw1,w,c
 10051  016612  1001               	iorwf	btemp^0,w,c
 10052  016614  B4D8               	btfsc	status,2,c
 10053  016616  D154               	goto	u10390
 10054                           
 10055                           ;stkvar	_c @ sp[(-4)+-4]
 10056                           ;stkvar	_s @ sp[(-4)+0]
 10057  016618  0EFC               	movlw	-4
 10058  01661A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10059  016620  0EFD               	movlw	-3
 10060  016622  006F FF8F FFDA     	movff	plusw1,fsr2h
 10061  016628  0EF8               	movlw	-8
 10062  01662A  006F FF8F FFDF     	movff	plusw1,indf2
 10063                           
 10064                           ;stkvar	_c @ sp[(-4)+-4]
 10065                           ;stkvar	_n @ sp[(-4)+-6]
 10066                           ;stkvar	_s @ sp[(-4)+0]
 10067  016630  0EFC               	movlw	-4
 10068  016632  006F FF8C  F00B    	movff	plusw1,btemp+10
 10069  016638  0EFD               	movlw	-3
 10070  01663A  006F FF8C  F00C    	movff	plusw1,btemp+11
 10071  016640  0EF6               	movlw	-10
 10072  016642  50E3               	movf	plusw1,w,c
 10073  016644  260B               	addwf	(btemp+10)^0,f,c
 10074  016646  0EF7               	movlw	-9
 10075  016648  50E3               	movf	plusw1,w,c
 10076  01664A  220C               	addwfc	(btemp+11)^0,f,c
 10077  01664C  0EFF               	movlw	255
 10078  01664E  240B               	addwf	(btemp+10)^0,w,c
 10079  016650  6ED9               	movwf	fsr2l,c
 10080  016652  0EFF               	movlw	255
 10081  016654  200C               	addwfc	(btemp+11)^0,w,c
 10082  016656  6EDA               	movwf	fsr2h,c
 10083  016658  0EF8               	movlw	-8
 10084  01665A  006F FF8F FFDF     	movff	plusw1,indf2
 10085                           
 10086                           ;stkvar	_n @ sp[(-4)+-6]
 10087  016660  0EF7               	movlw	-9
 10088  016662  50E3               	movf	plusw1,w,c
 10089  016664  E108               	bnz	l11442
 10090  016666  0EF6               	movlw	-10
 10091  016668  006F FF8C  F001    	movff	plusw1,btemp
 10092  01666E  0E03               	movlw	3
 10093  016670  5E01               	subwf	btemp^0,f,c
 10094  016672  A0D8               	btfss	status,0,c
 10095  016674  D125               	goto	u10390
 10096  016676                     l11442:
 10097                           
 10098                           ;stkvar	_c @ sp[(-4)+-4]
 10099                           ;stkvar	_s @ sp[(-4)+0]
 10100  016676  0EFC               	movlw	-4
 10101  016678  006F FF8C  F00B    	movff	plusw1,btemp+10
 10102  01667E  0EFD               	movlw	-3
 10103  016680  006F FF8C  F00C    	movff	plusw1,btemp+11
 10104  016686  0E01               	movlw	1
 10105  016688  240B               	addwf	(btemp+10)^0,w,c
 10106  01668A  6ED9               	movwf	fsr2l,c
 10107  01668C  0E00               	movlw	0
 10108  01668E  200C               	addwfc	(btemp+11)^0,w,c
 10109  016690  6EDA               	movwf	fsr2h,c
 10110  016692  0EF8               	movlw	-8
 10111  016694  006F FF8F FFDF     	movff	plusw1,indf2
 10112                           
 10113                           ;stkvar	_c @ sp[(-4)+-4]
 10114                           ;stkvar	_s @ sp[(-4)+0]
 10115  01669A  0EFC               	movlw	-4
 10116  01669C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10117  0166A2  0EFD               	movlw	-3
 10118  0166A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 10119  0166AA  0E02               	movlw	2
 10120  0166AC  240B               	addwf	(btemp+10)^0,w,c
 10121  0166AE  6ED9               	movwf	fsr2l,c
 10122  0166B0  0E00               	movlw	0
 10123  0166B2  200C               	addwfc	(btemp+11)^0,w,c
 10124  0166B4  6EDA               	movwf	fsr2h,c
 10125  0166B6  0EF8               	movlw	-8
 10126  0166B8  006F FF8F FFDF     	movff	plusw1,indf2
 10127                           
 10128                           ;stkvar	_c @ sp[(-4)+-4]
 10129                           ;stkvar	_n @ sp[(-4)+-6]
 10130                           ;stkvar	_s @ sp[(-4)+0]
 10131  0166BE  0EFC               	movlw	-4
 10132  0166C0  006F FF8C  F00B    	movff	plusw1,btemp+10
 10133  0166C6  0EFD               	movlw	-3
 10134  0166C8  006F FF8C  F00C    	movff	plusw1,btemp+11
 10135  0166CE  0EF6               	movlw	-10
 10136  0166D0  50E3               	movf	plusw1,w,c
 10137  0166D2  260B               	addwf	(btemp+10)^0,f,c
 10138  0166D4  0EF7               	movlw	-9
 10139  0166D6  50E3               	movf	plusw1,w,c
 10140  0166D8  220C               	addwfc	(btemp+11)^0,f,c
 10141  0166DA  0EFE               	movlw	254
 10142  0166DC  240B               	addwf	(btemp+10)^0,w,c
 10143  0166DE  6ED9               	movwf	fsr2l,c
 10144  0166E0  0EFF               	movlw	255
 10145  0166E2  200C               	addwfc	(btemp+11)^0,w,c
 10146  0166E4  6EDA               	movwf	fsr2h,c
 10147  0166E6  0EF8               	movlw	-8
 10148  0166E8  006F FF8F FFDF     	movff	plusw1,indf2
 10149                           
 10150                           ;stkvar	_c @ sp[(-4)+-4]
 10151                           ;stkvar	_n @ sp[(-4)+-6]
 10152                           ;stkvar	_s @ sp[(-4)+0]
 10153  0166EE  0EFC               	movlw	-4
 10154  0166F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 10155  0166F6  0EFD               	movlw	-3
 10156  0166F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 10157  0166FE  0EF6               	movlw	-10
 10158  016700  50E3               	movf	plusw1,w,c
 10159  016702  260B               	addwf	(btemp+10)^0,f,c
 10160  016704  0EF7               	movlw	-9
 10161  016706  50E3               	movf	plusw1,w,c
 10162  016708  220C               	addwfc	(btemp+11)^0,f,c
 10163  01670A  0EFD               	movlw	253
 10164  01670C  240B               	addwf	(btemp+10)^0,w,c
 10165  01670E  6ED9               	movwf	fsr2l,c
 10166  016710  0EFF               	movlw	255
 10167  016712  200C               	addwfc	(btemp+11)^0,w,c
 10168  016714  6EDA               	movwf	fsr2h,c
 10169  016716  0EF8               	movlw	-8
 10170  016718  006F FF8F FFDF     	movff	plusw1,indf2
 10171                           
 10172                           ;stkvar	_n @ sp[(-4)+-6]
 10173  01671E  0EF7               	movlw	-9
 10174  016720  50E3               	movf	plusw1,w,c
 10175  016722  E108               	bnz	l11448
 10176  016724  0EF6               	movlw	-10
 10177  016726  006F FF8C  F001    	movff	plusw1,btemp
 10178  01672C  0E07               	movlw	7
 10179  01672E  5E01               	subwf	btemp^0,f,c
 10180  016730  A0D8               	btfss	status,0,c
 10181  016732  D0C6               	goto	u10390
 10182  016734                     l11448:
 10183                           
 10184                           ;stkvar	_c @ sp[(-4)+-4]
 10185                           ;stkvar	_s @ sp[(-4)+0]
 10186  016734  0EFC               	movlw	-4
 10187  016736  006F FF8C  F00B    	movff	plusw1,btemp+10
 10188  01673C  0EFD               	movlw	-3
 10189  01673E  006F FF8C  F00C    	movff	plusw1,btemp+11
 10190  016744  0E03               	movlw	3
 10191  016746  240B               	addwf	(btemp+10)^0,w,c
 10192  016748  6ED9               	movwf	fsr2l,c
 10193  01674A  0E00               	movlw	0
 10194  01674C  200C               	addwfc	(btemp+11)^0,w,c
 10195  01674E  6EDA               	movwf	fsr2h,c
 10196  016750  0EF8               	movlw	-8
 10197  016752  006F FF8F FFDF     	movff	plusw1,indf2
 10198                           
 10199                           ;stkvar	_c @ sp[(-4)+-4]
 10200                           ;stkvar	_n @ sp[(-4)+-6]
 10201                           ;stkvar	_s @ sp[(-4)+0]
 10202  016758  0EFC               	movlw	-4
 10203  01675A  006F FF8C  F00B    	movff	plusw1,btemp+10
 10204  016760  0EFD               	movlw	-3
 10205  016762  006F FF8C  F00C    	movff	plusw1,btemp+11
 10206  016768  0EF6               	movlw	-10
 10207  01676A  50E3               	movf	plusw1,w,c
 10208  01676C  260B               	addwf	(btemp+10)^0,f,c
 10209  01676E  0EF7               	movlw	-9
 10210  016770  50E3               	movf	plusw1,w,c
 10211  016772  220C               	addwfc	(btemp+11)^0,f,c
 10212  016774  0EFC               	movlw	252
 10213  016776  240B               	addwf	(btemp+10)^0,w,c
 10214  016778  6ED9               	movwf	fsr2l,c
 10215  01677A  0EFF               	movlw	255
 10216  01677C  200C               	addwfc	(btemp+11)^0,w,c
 10217  01677E  6EDA               	movwf	fsr2h,c
 10218  016780  0EF8               	movlw	-8
 10219  016782  006F FF8F FFDF     	movff	plusw1,indf2
 10220                           
 10221                           ;stkvar	_n @ sp[(-4)+-6]
 10222  016788  0EF7               	movlw	-9
 10223  01678A  50E3               	movf	plusw1,w,c
 10224  01678C  E108               	bnz	l11454
 10225  01678E  0EF6               	movlw	-10
 10226  016790  006F FF8C  F001    	movff	plusw1,btemp
 10227  016796  0E09               	movlw	9
 10228  016798  5E01               	subwf	btemp^0,f,c
 10229  01679A  A0D8               	btfss	status,0,c
 10230  01679C  D091               	goto	u10390
 10231  01679E                     l11454:
 10232                           
 10233                           ;stkvar	_s @ sp[(-4)+0]
 10234  01679E  0EFC               	movlw	-4
 10235  0167A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 10236  0167A6  1E0B               	comf	(btemp+10)^0,f,c
 10237  0167A8  0EFD               	movlw	-3
 10238  0167AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 10239  0167B0  1E0C               	comf	(btemp+11)^0,f,c
 10240  0167B2  2A0B               	incf	(btemp+10)^0,f,c
 10241  0167B4  B4D8               	btfsc	status,2,c
 10242  0167B6  2A0C               	incf	(btemp+11)^0,f,c
 10243  0167B8  0E03               	movlw	3
 10244  0167BA  160B               	andwf	(btemp+10)^0,f,c
 10245  0167BC  0E00               	movlw	0
 10246  0167BE  160C               	andwf	(btemp+11)^0,f,c
 10247                           
 10248                           ;stkvar	_k @ sp[(-4)+2]
 10249  0167C0  0EFE               	movlw	-2
 10250  0167C2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10251  0167C8  0EFF               	movlw	-1
 10252  0167CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 10253                           
 10254                           ;stkvar	_k @ sp[(-4)+2]
 10255                           ;stkvar	_s @ sp[(-4)+0]
 10256  0167D0  0EFC               	movlw	-4
 10257  0167D2  50E3               	movf	plusw1,w,c
 10258  0167D4  6E01               	movwf	btemp^0,c
 10259  0167D6  0EFE               	movlw	-2
 10260  0167D8  50E3               	movf	plusw1,w,c
 10261  0167DA  2601               	addwf	btemp^0,f,c
 10262  0167DC  0EFC               	movlw	-4
 10263  0167DE  0060  F007  FFE3   	movff	btemp,plusw1
 10264  0167E4  0EFD               	movlw	-3
 10265  0167E6  50E3               	movf	plusw1,w,c
 10266  0167E8  6E01               	movwf	btemp^0,c
 10267  0167EA  0EFF               	movlw	-1
 10268  0167EC  50E3               	movf	plusw1,w,c
 10269  0167EE  2201               	addwfc	btemp^0,f,c
 10270  0167F0  0EFD               	movlw	-3
 10271  0167F2  0060  F007  FFE3   	movff	btemp,plusw1
 10272                           
 10273                           ;stkvar	_k @ sp[(-4)+2]
 10274                           ;stkvar	_n @ sp[(-4)+-6]
 10275  0167F8  0EF6               	movlw	-10
 10276  0167FA  50E3               	movf	plusw1,w,c
 10277  0167FC  6E01               	movwf	btemp^0,c
 10278  0167FE  0EFE               	movlw	-2
 10279  016800  50E3               	movf	plusw1,w,c
 10280  016802  5E01               	subwf	btemp^0,f,c
 10281  016804  0EF6               	movlw	-10
 10282  016806  0060  F007  FFE3   	movff	btemp,plusw1
 10283  01680C  0EF7               	movlw	-9
 10284  01680E  50E3               	movf	plusw1,w,c
 10285  016810  6E01               	movwf	btemp^0,c
 10286  016812  0EFF               	movlw	-1
 10287  016814  50E3               	movf	plusw1,w,c
 10288  016816  5A01               	subwfb	btemp^0,f,c
 10289  016818  0EF7               	movlw	-9
 10290  01681A  0060  F007  FFE3   	movff	btemp,plusw1
 10291  016820  0EFC               	movlw	252
 10292  016822  6E0B               	movwf	(btemp+10)^0,c
 10293  016824  0EFF               	movlw	255
 10294  016826  6E0C               	movwf	(btemp+11)^0,c
 10295                           
 10296                           ;stkvar	_n @ sp[(-4)+-6]
 10297  016828  0EF6               	movlw	-10
 10298  01682A  006F FF8C  F001    	movff	plusw1,btemp
 10299  016830  500B               	movf	(btemp+10)^0,w,c
 10300  016832  1601               	andwf	btemp^0,f,c
 10301  016834  0EF6               	movlw	-10
 10302  016836  0060  F007  FFE3   	movff	btemp,plusw1
 10303  01683C  0EF7               	movlw	-9
 10304  01683E  006F FF8C  F001    	movff	plusw1,btemp
 10305  016844  500C               	movf	(btemp+11)^0,w,c
 10306  016846  1601               	andwf	btemp^0,f,c
 10307  016848  0EF7               	movlw	-9
 10308  01684A  D02E               	goto	L6
 10309  01684C                     l11462:
 10310                           
 10311                           ;stkvar	_c @ sp[(-4)+-4]
 10312                           ;stkvar	_s @ sp[(-4)+0]
 10313  01684C  0EFC               	movlw	-4
 10314  01684E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10315  016854  0EFD               	movlw	-3
 10316  016856  006F FF8F FFDA     	movff	plusw1,fsr2h
 10317  01685C  0EF8               	movlw	-8
 10318  01685E  006F FF8F FFDF     	movff	plusw1,indf2
 10319                           
 10320                           ;stkvar	_n @ sp[(-4)+-6]
 10321  016864  0EF6               	movlw	-10
 10322  016866  006F FF8C  F001    	movff	plusw1,btemp
 10323  01686C  0E01               	movlw	1
 10324  01686E  5E01               	subwf	btemp^0,f,c
 10325  016870  0EF6               	movlw	-10
 10326  016872  0060  F007  FFE3   	movff	btemp,plusw1
 10327  016878  0EF7               	movlw	-9
 10328  01687A  006F FF8C  F001    	movff	plusw1,btemp
 10329  016880  0E00               	movlw	0
 10330  016882  5A01               	subwfb	btemp^0,f,c
 10331  016884  0EF7               	movlw	-9
 10332  016886  0060  F007  FFE3   	movff	btemp,plusw1
 10333                           
 10334                           ;stkvar	_s @ sp[(-4)+0]
 10335  01688C  0EFC               	movlw	-4
 10336  01688E  50E3               	movf	plusw1,w,c
 10337  016890  0F01               	addlw	1
 10338  016892  6E01               	movwf	btemp^0,c
 10339  016894  0EFC               	movlw	-4
 10340  016896  0060  F007  FFE3   	movff	btemp,plusw1
 10341  01689C  6A01               	clrf	btemp^0,c
 10342  01689E  0EFD               	movlw	-3
 10343  0168A0  50E3               	movf	plusw1,w,c
 10344  0168A2  2001               	addwfc	btemp^0,w,c
 10345  0168A4  6E01               	movwf	btemp^0,c
 10346  0168A6  0EFD               	movlw	-3
 10347  0168A8                     L6:
 10348  0168A8  0060  F007  FFE3   	movff	btemp,plusw1
 10349                           
 10350                           ;stkvar	_n @ sp[(-4)+-6]
 10351  0168AE  0EF6               	movlw	-10
 10352  0168B0  006F FF8C  F001    	movff	plusw1,btemp
 10353  0168B6  0EF7               	movlw	-9
 10354  0168B8  50E3               	movf	plusw1,w,c
 10355  0168BA  1001               	iorwf	btemp^0,w,c
 10356  0168BC  A4D8               	btfss	status,2,c
 10357  0168BE  D7C6               	goto	l11462
 10358  0168C0                     u10390:
 10359                           
 10360                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 10361  0168C0  0EF6               	movlw	246
 10362  0168C2  26E1               	addwf	fsr1l,f,c
 10363  0168C4  0EFF               	movlw	255
 10364  0168C6  22E2               	addwfc	fsr1h,f,c
 10365  0168C8  0012               	return		;funcret
 10366  0168CA                     __end_of_memset:
 10367                           	opt callstack 0
 10368                           
 10369 ;; *************** function _printf *****************
 10370 ;; Defined at:
 10371 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 10372 ;; Parameters:    Size  Location     Type
 10373 ;;  fmt             2  [STACK] PTR const unsigned char 
 10374 ;;		 -> STR_36(3), STR_35(3), STR_34(3), 
 10375 ;; Auto vars:     Size  Location     Type
 10376 ;;  ap              2  [STACK] PTR void [1]
 10377 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10378 ;;  ret             2    0        int 
 10379 ;; Return value:  Size  Location     Type
 10380 ;;                  2  [STACK] int 
 10381 ;; Registers used:
 10382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10383 ;; Tracked objects:
 10384 ;;		On entry : 3F/3B
 10385 ;;		On exit  : 3F/0
 10386 ;;		Unchanged: 0/0
 10387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10392 ;;Total ram usage:        0 bytes
 10393 ;; Hardware stack levels used:    1
 10394 ;; Hardware stack levels required when called:   23
 10395 ;; This function calls:
 10396 ;;		_vfprintf
 10397 ;; This function is called by:
 10398 ;;		_eaDogM_WriteString
 10399 ;;		_send_lcd_cmd_dma
 10400 ;; This function uses a reentrant model
 10401 ;;
 10402                           
 10403                           	psect	text43
 10404  01A360                     __ptext43:
 10405                           	opt callstack 0
 10406  01A360                     _printf:
 10407                           	opt callstack 0
 10408                           
 10409                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10410  01A360  52E6               	movf	postinc1,f,c
 10411  01A362  52E6               	movf	postinc1,f,c
 10412                           
 10413                           ;stkvar	?_printf @ sp[(-2)+-3]
 10414                           
 10415                           ;incstack = 0
 10416  01A364  0EFB               	movlw	251
 10417  01A366  24E1               	addwf	fsr1l,w,c
 10418  01A368  6E0B               	movwf	(btemp+10)^0,c
 10419  01A36A  0EFF               	movlw	255
 10420  01A36C  20E2               	addwfc	fsr1h,w,c
 10421  01A36E  6E0C               	movwf	(btemp+11)^0,c
 10422                           
 10423                           ;stkvar	_ap @ sp[(-2)+0]
 10424  01A370  0EFF               	movlw	-1
 10425  01A372  0060  F033  FFE3   	movff	btemp+11,plusw1
 10426  01A378  0EFE               	movlw	-2
 10427  01A37A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10428                           
 10429                           ;stkvar	_ap @ sp[(-2)+0]
 10430  01A380  0EFE               	movlw	254
 10431  01A382  24E1               	addwf	fsr1l,w,c
 10432  01A384  6E01               	movwf	btemp^0,c
 10433  01A386  0EFF               	movlw	255
 10434  01A388  20E2               	addwfc	fsr1h,w,c
 10435  01A38A  6E02               	movwf	(btemp+1)^0,c
 10436  01A38C  0060  F007  FFE6   	movff	btemp,postinc1
 10437  01A392  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10438                           
 10439                           ;stkvar	_fmt @ sp[(-4)+-3]
 10440  01A398  0EF9               	movlw	-7
 10441  01A39A  006F FF8F FFE6     	movff	plusw1,postinc1
 10442  01A3A0  006F FF8F FFE6     	movff	plusw1,postinc1
 10443  01A3A6  0E00               	movlw	0
 10444  01A3A8  6EE6               	movwf	postinc1,c
 10445  01A3AA  0E00               	movlw	0
 10446  01A3AC  6EE6               	movwf	postinc1,c
 10447  01A3AE  ECE7  F0CC         	call	_vfprintf	;wreg free
 10448                           
 10449                           ; BSR set to: 0
 10450                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 10451  01A3B2  52E5               	movf	postdec1,f,c
 10452  01A3B4  52E5               	movf	postdec1,f,c
 10453  01A3B6  52E5               	movf	postdec1,f,c
 10454  01A3B8  50E7               	movf	indf1,w,c
 10455  01A3BA  5EE1               	subwf	fsr1l,f,c
 10456  01A3BC  0E00               	movlw	0
 10457  01A3BE  5AE2               	subwfb	fsr1h,f,c
 10458  01A3C0  0012               	return		;funcret
 10459  01A3C2                     __end_of_printf:
 10460                           	opt callstack 0
 10461                           
 10462 ;; *************** function _vfprintf *****************
 10463 ;; Defined at:
 10464 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10465 ;; Parameters:    Size  Location     Type
 10466 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10467 ;;		 -> f(6), NULL(0), 
 10468 ;;  fmt             2  [STACK] PTR const unsigned char 
 10469 ;;		 -> STR_56(85), STR_54(3), STR_53(3), STR_52(19), 
 10470 ;;		 -> STR_51(19), STR_50(19), STR_49(19), STR_48(19), 
 10471 ;;		 -> STR_47(19), STR_46(24), STR_45(15), STR_44(15), 
 10472 ;;		 -> STR_43(15), STR_42(10), STR_41(10), STR_40(19), 
 10473 ;;		 -> STR_39(19), STR_36(3), STR_35(3), STR_34(3), 
 10474 ;;		 -> STR_33(17), STR_32(16), STR_31(16), STR_30(20), 
 10475 ;;		 -> STR_29(20), STR_28(19), STR_27(19), STR_26(19), 
 10476 ;;		 -> STR_25(19), STR_24(19), STR_23(19), STR_22(19), 
 10477 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 10478 ;;		 -> STR_17(26), STR_16(22), STR_15(22), STR_14(17), 
 10479 ;;		 -> STR_13(17), STR_12(17), STR_11(22), STR_10(22), 
 10480 ;;		 -> STR_9(23), STR_8(18), STR_7(17), STR_6(17), 
 10481 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 10482 ;;  ap              2  [STACK] PTR PTR void 
 10483 ;;		 -> ap(2), ap(2), 
 10484 ;; Auto vars:     Size  Location     Type
 10485 ;;  cfmt            2  [STACK] PTR unsigned char 
 10486 ;;		 -> STR_56(85), STR_54(3), STR_53(3), STR_52(19), 
 10487 ;;		 -> STR_51(19), STR_50(19), STR_49(19), STR_48(19), 
 10488 ;;		 -> STR_47(19), STR_46(24), STR_45(15), STR_44(15), 
 10489 ;;		 -> STR_43(15), STR_42(10), STR_41(10), STR_40(19), 
 10490 ;;		 -> STR_39(19), STR_36(3), STR_35(3), STR_34(3), 
 10491 ;;		 -> STR_33(17), STR_32(16), STR_31(16), STR_30(20), 
 10492 ;;		 -> STR_29(20), STR_28(19), STR_27(19), STR_26(19), 
 10493 ;;		 -> STR_25(19), STR_24(19), STR_23(19), STR_22(19), 
 10494 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 10495 ;;		 -> STR_17(26), STR_16(22), STR_15(22), STR_14(17), 
 10496 ;;		 -> STR_13(17), STR_12(17), STR_11(22), STR_10(22), 
 10497 ;;		 -> STR_9(23), STR_8(18), STR_7(17), STR_6(17), 
 10498 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 10499 ;; Return value:  Size  Location     Type
 10500 ;;                  2  [STACK] int 
 10501 ;; Registers used:
 10502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10503 ;; Tracked objects:
 10504 ;;		On entry : 0/1
 10505 ;;		On exit  : 3F/0
 10506 ;;		Unchanged: 0/0
 10507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10512 ;;Total ram usage:        0 bytes
 10513 ;; Hardware stack levels used:    1
 10514 ;; Hardware stack levels required when called:   22
 10515 ;; This function calls:
 10516 ;;		_vfpfcnvrt
 10517 ;; This function is called by:
 10518 ;;		_sprintf
 10519 ;;		_printf
 10520 ;; This function uses a reentrant model
 10521 ;;
 10522                           
 10523                           	psect	text44
 10524  0199CE                     __ptext44:
 10525                           	opt callstack 0
 10526  0199CE                     _vfprintf:
 10527                           	opt callstack 0
 10528                           
 10529                           ; BSR set to: 0
 10530                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10531  0199CE  52E6               	movf	postinc1,f,c
 10532  0199D0  52E6               	movf	postinc1,f,c
 10533                           
 10534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 10535                           ;stkvar	_fmt @ sp[(-2)+-4]
 10536                           
 10537                           ;incstack = 0
 10538 ;; hardware stack exceeded
 10539  0199D2  0EFA               	movlw	-6
 10540  0199D4  006F FF8C  F00B    	movff	plusw1,btemp+10
 10541  0199DA  0EFB               	movlw	-5
 10542  0199DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 10543                           
 10544                           ;stkvar	_cfmt @ sp[(-2)+0]
 10545  0199E2  0EFF               	movlw	-1
 10546  0199E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 10547  0199EA  0EFE               	movlw	-2
 10548  0199EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10549                           
 10550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 10551  0199F2  0100               	movlb	0	; () banked
 10552  0199F4  6BC0               	clrf	_nout& (0+255),b
 10553  0199F6  6BC1               	clrf	(_nout+1)& (0+255),b
 10554                           
 10555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10556  0199F8  D021               	goto	l12286
 10557  0199FA                     l12284:
 10558                           
 10559                           ; BSR set to: 0
 10560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10561                           ;stkvar	_ap @ sp[(-2)+-6]
 10562  0199FA  0EF8               	movlw	-8
 10563  0199FC  006F FF8F FFE6     	movff	plusw1,postinc1
 10564  019A02  006F FF8F FFE6     	movff	plusw1,postinc1
 10565                           
 10566                           ;stkvar	_cfmt @ sp[(-4)+0]
 10567  019A08  0EFC               	movlw	252
 10568  019A0A  24E1               	addwf	fsr1l,w,c
 10569  019A0C  6E01               	movwf	btemp^0,c
 10570  019A0E  0EFF               	movlw	255
 10571  019A10  20E2               	addwfc	fsr1h,w,c
 10572  019A12  6E02               	movwf	(btemp+1)^0,c
 10573  019A14  0060  F007  FFE6   	movff	btemp,postinc1
 10574  019A1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10575                           
 10576                           ;stkvar	_fp @ sp[(-6)+-2]
 10577  019A20  0EF8               	movlw	-8
 10578  019A22  006F FF8F FFE6     	movff	plusw1,postinc1
 10579  019A28  006F FF8F FFE6     	movff	plusw1,postinc1
 10580  019A2E  EC22  F089         	call	_vfpfcnvrt	;wreg free
 10581  019A32  5001               	movf	btemp^0,w,c
 10582  019A34  0100               	movlb	0	; () banked
 10583  019A36  27C0               	addwf	_nout& (0+255),f,b
 10584  019A38  5002               	movf	(btemp+1)^0,w,c
 10585  019A3A  23C1               	addwfc	(_nout+1)& (0+255),f,b
 10586  019A3C                     l12286:
 10587                           
 10588                           ; BSR set to: 0
 10589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10590                           ;stkvar	_cfmt @ sp[(-2)+0]
 10591  019A3C  50E1               	movf	fsr1l,w,c
 10592  019A3E  0FFE               	addlw	-2
 10593  019A40  6ED9               	movwf	fsr2l,c
 10594  019A42  50E2               	movf	fsr1h,w,c
 10595  019A44  6EDA               	movwf	fsr2h,c
 10596  019A46  0EFF               	movlw	255
 10597  019A48  22DA               	addwfc	fsr2h,f,c
 10598  019A4A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10599  019A50  006F FF77 FFF7     	movff	postdec2,tblptrh
 10600  019A56                     	if	0	;tblptru may be non-zero
 10601  019A56                     	endif
 10602  019A56                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10603  019A56  0E00               	movlw	low (__mediumconst shr (0+16))
 10604  019A58  6EF8               	movwf	tblptru,c
 10605  019A5A                     	endif
 10606  019A5A  0008               	tblrd		*
 10607  019A5C  50F5               	movf	tablat,w,c
 10608  019A5E  0900               	iorlw	0
 10609  019A60  A4D8               	btfss	status,2,c
 10610  019A62  D7CB               	goto	l12284
 10611                           
 10612                           ; BSR set to: 0
 10613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 10614  019A64  0060  F300  F001   	movff	_nout,btemp
 10615  019A6A  0060  F304  F002   	movff	_nout+1,btemp+1
 10616                           
 10617                           ; BSR set to: 0
 10618                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 10619  019A70  0EF8               	movlw	248
 10620  019A72  26E1               	addwf	fsr1l,f,c
 10621  019A74  0EFF               	movlw	255
 10622  019A76  22E2               	addwfc	fsr1h,f,c
 10623  019A78  0012               	return		;funcret
 10624  019A7A                     __end_of_vfprintf:
 10625                           	opt callstack 0
 10626                           
 10627 ;; *************** function _vfpfcnvrt *****************
 10628 ;; Defined at:
 10629 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10630 ;; Parameters:    Size  Location     Type
 10631 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10632 ;;		 -> f(6), NULL(0), 
 10633 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 10634 ;;		 -> cfmt(2), 
 10635 ;;  ap              2  [STACK] PTR PTR void 
 10636 ;;		 -> ap(2), ap(2), 
 10637 ;; Auto vars:     Size  Location     Type
 10638 ;;  llu             8  [STACK] unsigned long long 
 10639 ;;  ll              8  [STACK] long long 
 10640 ;;  f               4  [STACK] long long 
 10641 ;;  ct              3  [STACK] unsigned char [3]
 10642 ;;  vp              3    0        PTR void 
 10643 ;;  cp              2  [STACK] PTR unsigned char 
 10644 ;;		 -> ?_printf(2), ?_sprintf(2), STR_38(9), STR_37(12), 
 10645 ;;		 -> D.lcd(288), D(290), T(144), STR_3(6), 
 10646 ;;		 -> V(188), 
 10647 ;;  i               2    0        int 
 10648 ;;  done            2    0        int 
 10649 ;;  c               1  [STACK] unsigned char 
 10650 ;; Return value:  Size  Location     Type
 10651 ;;                  2  [STACK] int 
 10652 ;; Registers used:
 10653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10654 ;; Tracked objects:
 10655 ;;		On entry : 0/0
 10656 ;;		On exit  : 0/0
 10657 ;;		Unchanged: 0/0
 10658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10663 ;;Total ram usage:        0 bytes
 10664 ;; Hardware stack levels used:    1
 10665 ;; Hardware stack levels required when called:   21
 10666 ;; This function calls:
 10667 ;;		_atoi
 10668 ;;		_ctoa
 10669 ;;		_dtoa
 10670 ;;		_efgtoa
 10671 ;;		_fputc
 10672 ;;		_isdigit
 10673 ;;		_isupper
 10674 ;;		_stoa
 10675 ;;		_strncmp
 10676 ;;		_tolower
 10677 ;;		_utoa
 10678 ;;		_xtoa
 10679 ;; This function is called by:
 10680 ;;		_vfprintf
 10681 ;; This function uses a reentrant model
 10682 ;;
 10683                           
 10684                           	psect	text45
 10685  011244                     __ptext45:
 10686                           	opt callstack 0
 10687  011244                     _vfpfcnvrt:
 10688                           	opt callstack 0
 10689                           
 10690                           ; BSR set to: 0
 10691                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10692  011244  0E20               	movlw	32
 10693  011246  26E1               	addwf	fsr1l,f,c
 10694  011248  0E00               	movlw	0
 10695  01124A  22E2               	addwfc	fsr1h,f,c
 10696                           
 10697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 10698                           ;stkvar	_fmt @ sp[(-32)+-4]
 10699                           
 10700                           ;incstack = 0
 10701 ;; hardware stack exceeded
 10702  01124C  0EDC               	movlw	-36
 10703  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10704  011254  0EDD               	movlw	-35
 10705  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
 10706  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10707  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
 10708  011268                     	if	0	;tblptru may be non-zero
 10709  011268                     	endif
 10710  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10711  011268  0E00               	movlw	low (__mediumconst shr (0+16))
 10712  01126A  6EF8               	movwf	tblptru,c
 10713  01126C                     	endif
 10714  01126C  0008               	tblrd		*
 10715  01126E  50F5               	movf	tablat,w,c
 10716  011270  0A25               	xorlw	37
 10717  011272  A4D8               	btfss	status,2,c
 10718  011274  EFC9  F090         	goto	l12230
 10719                           
 10720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 10721                           ;stkvar	_fmt @ sp[(-32)+-4]
 10722  011278  0EDC               	movlw	-36
 10723  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10724  011280  0EDD               	movlw	-35
 10725  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
 10726  011288  2ADE               	incf	postinc2,f,c
 10727  01128A  0E00               	movlw	0
 10728  01128C  22DD               	addwfc	postdec2,f,c
 10729                           
 10730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 10731  01128E  6A21               	clrf	_width^0,c
 10732  011290  6A22               	clrf	(_width+1)^0,c
 10733  011292  6A25               	clrf	_flags^0,c
 10734  011294  6A26               	clrf	(_flags+1)^0,c
 10735                           
 10736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 10737  011296  6823               	setf	_prec^0,c
 10738  011298  6824               	setf	(_prec+1)^0,c
 10739                           
 10740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 10741                           ;stkvar	_fmt @ sp[(-32)+-4]
 10742  01129A  0EDC               	movlw	-36
 10743  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10744  0112A2  0EDD               	movlw	-35
 10745  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10746  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 10747  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 10748  0112B6                     	if	0	;tblptru may be non-zero
 10749  0112B6                     	endif
 10750  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10751  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
 10752  0112B8  6EF8               	movwf	tblptru,c
 10753  0112BA                     	endif
 10754  0112BA  0008               	tblrd		*
 10755  0112BC  50F5               	movf	tablat,w,c
 10756  0112BE  0A2A               	xorlw	42
 10757  0112C0  A4D8               	btfss	status,2,c
 10758  0112C2  D031               	goto	l12048
 10759                           
 10760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 10761                           ;stkvar	_fmt @ sp[(-32)+-4]
 10762  0112C4  0EDC               	movlw	-36
 10763  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10764  0112CC  0EDD               	movlw	-35
 10765  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10766  0112D4  2ADE               	incf	postinc2,f,c
 10767  0112D6  0E00               	movlw	0
 10768  0112D8  22DD               	addwfc	postdec2,f,c
 10769                           
 10770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 10771                           ;stkvar	_ap @ sp[(-32)+-6]
 10772  0112DA  0EDA               	movlw	-38
 10773  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10774  0112E2  0EDB               	movlw	-37
 10775  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10776  0112EA  0E02               	movlw	2
 10777  0112EC  5EDE               	subwf	postinc2,f,c
 10778  0112EE  0E00               	movlw	0
 10779  0112F0  5ADD               	subwfb	postdec2,f,c
 10780  0112F2  006F FF78  F00B    	movff	postinc2,btemp+10
 10781  0112F8  006F FF74  F00C    	movff	postdec2,btemp+11
 10782  0112FE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10783  011304  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10784  01130A  006F FF78  F021    	movff	postinc2,_width
 10785  011310  006F FF74  F022    	movff	postdec2,_width+1
 10786                           
 10787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 10788  011316  AE22               	btfss	(_width+1)^0,7,c
 10789  011318  D066               	goto	u11520
 10790                           
 10791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 10792  01131A  8025               	bsf	_flags^0,0,c
 10793                           
 10794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 10795  01131C  6C21               	negf	_width^0,c
 10796  01131E  1E22               	comf	(_width+1)^0,f,c
 10797  011320  B0D8               	btfsc	status,0,c
 10798  011322  2A22               	incf	(_width+1)^0,f,c
 10799  011324  D060               	goto	u11520
 10800  011326                     l12048:
 10801                           
 10802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 10803                           ;stkvar	_fmt @ sp[(-32)+-4]
 10804  011326  0EDC               	movlw	-36
 10805  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
 10806  01132E  0EDD               	movlw	-35
 10807  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
 10808  011336  006F FF78  F00B    	movff	postinc2,btemp+10
 10809  01133C  006F FF74  F00C    	movff	postdec2,btemp+11
 10810  011342  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10811  011348  0060  F033  FFE6   	movff	btemp+11,postinc1
 10812  01134E  EC04  F0B7         	call	_atoi	;wreg free
 10813  011352  0060  F004  F021   	movff	btemp,_width
 10814  011358  0060  F008  F022   	movff	btemp+1,_width+1
 10815                           
 10816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10817  01135E  D00B               	goto	l12052
 10818  011360                     l12050:
 10819                           
 10820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 10821                           ;stkvar	_fmt @ sp[(-32)+-4]
 10822  011360  0EDC               	movlw	-36
 10823  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
 10824  011368  0EDD               	movlw	-35
 10825  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10826  011370  2ADE               	incf	postinc2,f,c
 10827  011372  0E00               	movlw	0
 10828  011374  22DD               	addwfc	postdec2,f,c
 10829  011376                     l12052:
 10830  011376  0ED0               	movlw	208
 10831  011378  6E0B               	movwf	(btemp+10)^0,c
 10832  01137A  0EFF               	movlw	255
 10833  01137C  6E0C               	movwf	(btemp+11)^0,c
 10834                           
 10835                           ;stkvar	_fmt @ sp[(-32)+-4]
 10836  01137E  0EDC               	movlw	-36
 10837  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
 10838  011386  0EDD               	movlw	-35
 10839  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
 10840  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10841  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
 10842  01139A                     	if	0	;tblptru may be non-zero
 10843  01139A                     	endif
 10844  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10845  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
 10846  01139C  6EF8               	movwf	tblptru,c
 10847  01139E                     	endif
 10848  01139E  0008               	tblrd		*
 10849  0113A0  50F5               	movf	tablat,w,c
 10850  0113A2  6E09               	movwf	(btemp+8)^0,c
 10851  0113A4  6A0A               	clrf	(btemp+9)^0,c
 10852  0113A6  500B               	movf	(btemp+10)^0,w,c
 10853  0113A8  2609               	addwf	(btemp+8)^0,f,c
 10854  0113AA  500C               	movf	(btemp+11)^0,w,c
 10855  0113AC  220A               	addwfc	(btemp+9)^0,f,c
 10856  0113AE  500A               	movf	(btemp+9)^0,w,c
 10857  0113B0  E106               	bnz	u11500
 10858  0113B2  0E0A               	movlw	10
 10859  0113B4  5C09               	subwf	(btemp+8)^0,w,c
 10860  0113B6  B0D8               	btfsc	status,0,c
 10861  0113B8  D002               	goto	u11500
 10862  0113BA  0E01               	movlw	1
 10863  0113BC  D001               	goto	u11510
 10864  0113BE                     u11500:
 10865  0113BE  0E00               	movlw	0
 10866  0113C0                     u11510:
 10867  0113C0  6E0B               	movwf	(btemp+10)^0,c
 10868  0113C2  6A0C               	clrf	(btemp+11)^0,c
 10869                           
 10870                           ;stkvar	_vfpfcnvrt$5366 @ sp[(-32)+4]
 10871  0113C4  0EE4               	movlw	-28
 10872  0113C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10873  0113CC  0EE5               	movlw	-27
 10874  0113CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 10875                           
 10876                           ;stkvar	_vfpfcnvrt$5366 @ sp[(-32)+4]
 10877  0113D4  0EE4               	movlw	-28
 10878  0113D6  006F FF8C  F001    	movff	plusw1,btemp
 10879  0113DC  0EE5               	movlw	-27
 10880  0113DE  50E3               	movf	plusw1,w,c
 10881  0113E0  1001               	iorwf	btemp^0,w,c
 10882  0113E2  A4D8               	btfss	status,2,c
 10883  0113E4  D7BD               	goto	l12050
 10884  0113E6                     u11520:
 10885                           
 10886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 10887                           ;stkvar	_fmt @ sp[(-32)+-4]
 10888  0113E6  0EDC               	movlw	-36
 10889  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10890  0113EE  0EDD               	movlw	-35
 10891  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10892  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10893  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10894  011402                     	if	0	;tblptru may be non-zero
 10895  011402                     	endif
 10896  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10897  011402  0E00               	movlw	low (__mediumconst shr (0+16))
 10898  011404  6EF8               	movwf	tblptru,c
 10899  011406                     	endif
 10900  011406  0008               	tblrd		*
 10901  011408  50F5               	movf	tablat,w,c
 10902  01140A  0A2E               	xorlw	46
 10903  01140C  A4D8               	btfss	status,2,c
 10904  01140E  D0AC               	goto	u11570
 10905                           
 10906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 10907  011410  6A23               	clrf	_prec^0,c
 10908  011412  6A24               	clrf	(_prec+1)^0,c
 10909                           
 10910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 10911                           ;stkvar	_fmt @ sp[(-32)+-4]
 10912  011414  0EDC               	movlw	-36
 10913  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
 10914  01141C  0EDD               	movlw	-35
 10915  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10916  011424  2ADE               	incf	postinc2,f,c
 10917  011426  0E00               	movlw	0
 10918  011428  22DD               	addwfc	postdec2,f,c
 10919                           
 10920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 10921                           ;stkvar	_fmt @ sp[(-32)+-4]
 10922  01142A  0EDC               	movlw	-36
 10923  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10924  011432  0EDD               	movlw	-35
 10925  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
 10926  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10927  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
 10928  011446                     	if	0	;tblptru may be non-zero
 10929  011446                     	endif
 10930  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10931  011446  0E00               	movlw	low (__mediumconst shr (0+16))
 10932  011448  6EF8               	movwf	tblptru,c
 10933  01144A                     	endif
 10934  01144A  0008               	tblrd		*
 10935  01144C  50F5               	movf	tablat,w,c
 10936  01144E  0A2A               	xorlw	42
 10937  011450  A4D8               	btfss	status,2,c
 10938  011452  D02A               	goto	l12070
 10939                           
 10940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 10941                           ;stkvar	_fmt @ sp[(-32)+-4]
 10942  011454  0EDC               	movlw	-36
 10943  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
 10944  01145C  0EDD               	movlw	-35
 10945  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10946  011464  2ADE               	incf	postinc2,f,c
 10947  011466  0E00               	movlw	0
 10948  011468  22DD               	addwfc	postdec2,f,c
 10949                           
 10950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 10951                           ;stkvar	_ap @ sp[(-32)+-6]
 10952  01146A  0EDA               	movlw	-38
 10953  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10954  011472  0EDB               	movlw	-37
 10955  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
 10956  01147A  0E02               	movlw	2
 10957  01147C  5EDE               	subwf	postinc2,f,c
 10958  01147E  0E00               	movlw	0
 10959  011480  5ADD               	subwfb	postdec2,f,c
 10960  011482  006F FF78  F00B    	movff	postinc2,btemp+10
 10961  011488  006F FF74  F00C    	movff	postdec2,btemp+11
 10962  01148E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10963  011494  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10964  01149A  006F FF78  F023    	movff	postinc2,_prec
 10965  0114A0  006F FF74  F024    	movff	postdec2,_prec+1
 10966                           
 10967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 10968  0114A6  D060               	goto	u11570
 10969  0114A8                     l12070:
 10970                           
 10971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 10972                           ;stkvar	_fmt @ sp[(-32)+-4]
 10973  0114A8  0EDC               	movlw	-36
 10974  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10975  0114B0  0EDD               	movlw	-35
 10976  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10977  0114B8  006F FF78  F00B    	movff	postinc2,btemp+10
 10978  0114BE  006F FF74  F00C    	movff	postdec2,btemp+11
 10979  0114C4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10980  0114CA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10981  0114D0  EC04  F0B7         	call	_atoi	;wreg free
 10982  0114D4  0060  F004  F023   	movff	btemp,_prec
 10983  0114DA  0060  F008  F024   	movff	btemp+1,_prec+1
 10984                           
 10985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10986  0114E0  D00B               	goto	l12074
 10987  0114E2                     l12072:
 10988                           
 10989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 10990                           ;stkvar	_fmt @ sp[(-32)+-4]
 10991  0114E2  0EDC               	movlw	-36
 10992  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10993  0114EA  0EDD               	movlw	-35
 10994  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10995  0114F2  2ADE               	incf	postinc2,f,c
 10996  0114F4  0E00               	movlw	0
 10997  0114F6  22DD               	addwfc	postdec2,f,c
 10998  0114F8                     l12074:
 10999  0114F8  0ED0               	movlw	208
 11000  0114FA  6E0B               	movwf	(btemp+10)^0,c
 11001  0114FC  0EFF               	movlw	255
 11002  0114FE  6E0C               	movwf	(btemp+11)^0,c
 11003                           
 11004                           ;stkvar	_fmt @ sp[(-32)+-4]
 11005  011500  0EDC               	movlw	-36
 11006  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
 11007  011508  0EDD               	movlw	-35
 11008  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11009  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
 11010  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
 11011  01151C                     	if	0	;tblptru may be non-zero
 11012  01151C                     	endif
 11013  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11014  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
 11015  01151E  6EF8               	movwf	tblptru,c
 11016  011520                     	endif
 11017  011520  0008               	tblrd		*
 11018  011522  50F5               	movf	tablat,w,c
 11019  011524  6E09               	movwf	(btemp+8)^0,c
 11020  011526  6A0A               	clrf	(btemp+9)^0,c
 11021  011528  500B               	movf	(btemp+10)^0,w,c
 11022  01152A  2609               	addwf	(btemp+8)^0,f,c
 11023  01152C  500C               	movf	(btemp+11)^0,w,c
 11024  01152E  220A               	addwfc	(btemp+9)^0,f,c
 11025  011530  500A               	movf	(btemp+9)^0,w,c
 11026  011532  E106               	bnz	u11550
 11027  011534  0E0A               	movlw	10
 11028  011536  5C09               	subwf	(btemp+8)^0,w,c
 11029  011538  B0D8               	btfsc	status,0,c
 11030  01153A  D002               	goto	u11550
 11031  01153C  0E01               	movlw	1
 11032  01153E  D001               	goto	u11560
 11033  011540                     u11550:
 11034  011540  0E00               	movlw	0
 11035  011542                     u11560:
 11036  011542  6E0B               	movwf	(btemp+10)^0,c
 11037  011544  6A0C               	clrf	(btemp+11)^0,c
 11038                           
 11039                           ;stkvar	_vfpfcnvrt$5367 @ sp[(-32)+0]
 11040  011546  0EE0               	movlw	-32
 11041  011548  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11042  01154E  0EE1               	movlw	-31
 11043  011550  0060  F033  FFE3   	movff	btemp+11,plusw1
 11044                           
 11045                           ;stkvar	_vfpfcnvrt$5367 @ sp[(-32)+0]
 11046  011556  0EE0               	movlw	-32
 11047  011558  006F FF8C  F001    	movff	plusw1,btemp
 11048  01155E  0EE1               	movlw	-31
 11049  011560  50E3               	movf	plusw1,w,c
 11050  011562  1001               	iorwf	btemp^0,w,c
 11051  011564  A4D8               	btfss	status,2,c
 11052  011566  D7BD               	goto	l12072
 11053  011568                     u11570:
 11054                           
 11055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 11056                           ;stkvar	_fmt @ sp[(-32)+-4]
 11057  011568  0EDC               	movlw	-36
 11058  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11059  011570  0EDD               	movlw	-35
 11060  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
 11061  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
 11062  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11063  011584                     	if	0	;tblptru may be non-zero
 11064  011584                     	endif
 11065  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11066  011584  0E00               	movlw	low (__mediumconst shr (0+16))
 11067  011586  6EF8               	movwf	tblptru,c
 11068  011588                     	endif
 11069  011588  0008               	tblrd		*
 11070  01158A  50F5               	movf	tablat,w,c
 11071  01158C  6EE6               	movwf	postinc1,c
 11072  01158E  0E00               	movlw	0
 11073  011590  6EE6               	movwf	postinc1,c
 11074  011592  EC2B  F0D0         	call	_tolower	;wreg free
 11075                           
 11076                           ;stkvar	_ct @ sp[(-32)+26]
 11077  011596  0EFA               	movlw	-6
 11078  011598  0060  F007  FFE3   	movff	btemp,plusw1
 11079                           
 11080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 11081                           ;stkvar	_ct @ sp[(-32)+26]
 11082  01159E  0EFA               	movlw	-6
 11083  0115A0  50E3               	movf	plusw1,w,c
 11084  0115A2  B4D8               	btfsc	status,2,c
 11085  0115A4  D05B               	goto	l12090
 11086                           
 11087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 11088                           ;stkvar	_ct @ sp[(-32)+26]
 11089  0115A6  0EFB               	movlw	251
 11090  0115A8  24E1               	addwf	fsr1l,w,c
 11091  0115AA  6ED9               	movwf	fsr2l,c
 11092  0115AC  0EFF               	movlw	255
 11093  0115AE  20E2               	addwfc	fsr1h,w,c
 11094  0115B0  6EDA               	movwf	fsr2h,c
 11095                           
 11096                           ;stkvar	_fmt @ sp[(-32)+-4]
 11097  0115B2  0EDC               	movlw	-36
 11098  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
 11099  0115BA  0EDD               	movlw	-35
 11100  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
 11101  0115C2  006F FFB8  F00B    	movff	postinc0,btemp+10
 11102  0115C8  006F FFB4  F00C    	movff	postdec0,btemp+11
 11103  0115CE  0E01               	movlw	1
 11104  0115D0  260B               	addwf	(btemp+10)^0,f,c
 11105  0115D2  0E00               	movlw	0
 11106  0115D4  220C               	addwfc	(btemp+11)^0,f,c
 11107  0115D6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11108  0115DC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11109  0115E2                     	if	0	;tblptru may be non-zero
 11110  0115E2                     	endif
 11111  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11112  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
 11113  0115E4  6EF8               	movwf	tblptru,c
 11114  0115E6                     	endif
 11115  0115E6  0008               	tblrd		*
 11116  0115E8  50F5               	movf	tablat,w,c
 11117  0115EA  6EE6               	movwf	postinc1,c
 11118  0115EC  0E00               	movlw	0
 11119  0115EE  6EE6               	movwf	postinc1,c
 11120  0115F0  EC2B  F0D0         	call	_tolower	;wreg free
 11121  0115F4  5001               	movf	btemp^0,w,c
 11122  0115F6  6EDF               	movwf	indf2,c
 11123                           
 11124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 11125                           ;stkvar	_ct @ sp[(-32)+26]
 11126  0115F8  0EFB               	movlw	251
 11127  0115FA  24E1               	addwf	fsr1l,w,c
 11128  0115FC  6ED9               	movwf	fsr2l,c
 11129  0115FE  0EFF               	movlw	255
 11130  011600  20E2               	addwfc	fsr1h,w,c
 11131  011602  6EDA               	movwf	fsr2h,c
 11132  011604  50DF               	movf	indf2,w,c
 11133  011606  B4D8               	btfsc	status,2,c
 11134  011608  D029               	goto	l12090
 11135                           
 11136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 11137                           ;stkvar	_ct @ sp[(-32)+26]
 11138  01160A  0EFC               	movlw	252
 11139  01160C  24E1               	addwf	fsr1l,w,c
 11140  01160E  6ED9               	movwf	fsr2l,c
 11141  011610  0EFF               	movlw	255
 11142  011612  20E2               	addwfc	fsr1h,w,c
 11143  011614  6EDA               	movwf	fsr2h,c
 11144                           
 11145                           ;stkvar	_fmt @ sp[(-32)+-4]
 11146  011616  0EDC               	movlw	-36
 11147  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
 11148  01161E  0EDD               	movlw	-35
 11149  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
 11150  011626  006F FFB8  F00B    	movff	postinc0,btemp+10
 11151  01162C  006F FFB4  F00C    	movff	postdec0,btemp+11
 11152  011632  0E02               	movlw	2
 11153  011634  260B               	addwf	(btemp+10)^0,f,c
 11154  011636  0E00               	movlw	0
 11155  011638  220C               	addwfc	(btemp+11)^0,f,c
 11156  01163A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11157  011640  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11158  011646                     	if	0	;tblptru may be non-zero
 11159  011646                     	endif
 11160  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11161  011646  0E00               	movlw	low (__mediumconst shr (0+16))
 11162  011648  6EF8               	movwf	tblptru,c
 11163  01164A                     	endif
 11164  01164A  0008               	tblrd		*
 11165  01164C  50F5               	movf	tablat,w,c
 11166  01164E  6EE6               	movwf	postinc1,c
 11167  011650  0E00               	movlw	0
 11168  011652  6EE6               	movwf	postinc1,c
 11169  011654  EC2B  F0D0         	call	_tolower	;wreg free
 11170  011658  5001               	movf	btemp^0,w,c
 11171  01165A  6EDF               	movwf	indf2,c
 11172  01165C                     l12090:
 11173                           
 11174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 11175                           ;stkvar	_fmt @ sp[(-32)+-4]
 11176  01165C  0EDC               	movlw	-36
 11177  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11178  011664  0EDD               	movlw	-35
 11179  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
 11180  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
 11181  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
 11182  011678                     	if	0	;tblptru may be non-zero
 11183  011678                     	endif
 11184  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11185  011678  0E00               	movlw	low (__mediumconst shr (0+16))
 11186  01167A  6EF8               	movwf	tblptru,c
 11187  01167C                     	endif
 11188  01167C  0008               	tblrd		*
 11189  01167E  50F5               	movf	tablat,w,c
 11190  011680  0A63               	xorlw	99
 11191  011682  A4D8               	btfss	status,2,c
 11192  011684  D037               	goto	l12100
 11193                           
 11194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 11195                           ;stkvar	_fmt @ sp[(-32)+-4]
 11196  011686  0EDC               	movlw	-36
 11197  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
 11198  01168E  0EDD               	movlw	-35
 11199  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
 11200  011696  2ADE               	incf	postinc2,f,c
 11201  011698  0E00               	movlw	0
 11202  01169A  22DD               	addwfc	postdec2,f,c
 11203                           
 11204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11205                           ;stkvar	_ap @ sp[(-32)+-6]
 11206  01169C  0EDA               	movlw	-38
 11207  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11208  0116A4  0EDB               	movlw	-37
 11209  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11210  0116AC  0E02               	movlw	2
 11211  0116AE  5EDE               	subwf	postinc2,f,c
 11212  0116B0  0E00               	movlw	0
 11213  0116B2  5ADD               	subwfb	postdec2,f,c
 11214  0116B4  006F FF78  F00B    	movff	postinc2,btemp+10
 11215  0116BA  006F FF74  F00C    	movff	postdec2,btemp+11
 11216  0116C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11217  0116C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11218  0116CC  50DF               	movf	indf2,w,c
 11219  0116CE  6E0C               	movwf	(btemp+11)^0,c
 11220                           
 11221                           ;stkvar	_c @ sp[(-32)+31]
 11222  0116D0  0EFF               	movlw	-1
 11223  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 11224                           
 11225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 11226                           ;stkvar	_c @ sp[(-32)+31]
 11227  0116D8  0EFF               	movlw	-1
 11228  0116DA  50E3               	movf	plusw1,w,c
 11229  0116DC  6EE6               	movwf	postinc1,c
 11230                           
 11231                           ;stkvar	_fp @ sp[(-33)+-2]
 11232  0116DE  0EDD               	movlw	-35
 11233  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11234  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11235  0116EC  ECA5  F0CF         	call	_ctoa	;wreg free
 11236  0116F0  EFF3  F090         	goto	l2328
 11237  0116F4                     l12100:
 11238                           
 11239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 11240                           ;stkvar	_fmt @ sp[(-32)+-4]
 11241  0116F4  0EDC               	movlw	-36
 11242  0116F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11243  0116FC  0EDD               	movlw	-35
 11244  0116FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11245  011704  006F FF7B FFF6     	movff	postinc2,tblptrl
 11246  01170A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11247  011710                     	if	0	;tblptru may be non-zero
 11248  011710                     	endif
 11249  011710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11250  011710  0E00               	movlw	low (__mediumconst shr (0+16))
 11251  011712  6EF8               	movwf	tblptru,c
 11252  011714                     	endif
 11253  011714  0008               	tblrd		*
 11254  011716  50F5               	movf	tablat,w,c
 11255  011718  0A64               	xorlw	100
 11256  01171A  B4D8               	btfsc	status,2,c
 11257  01171C  D015               	goto	u11620
 11258                           
 11259                           ;stkvar	_fmt @ sp[(-32)+-4]
 11260  01171E  0EDC               	movlw	-36
 11261  011720  006F FF8F FFD9     	movff	plusw1,fsr2l
 11262  011726  0EDD               	movlw	-35
 11263  011728  006F FF8F FFDA     	movff	plusw1,fsr2h
 11264  01172E  006F FF7B FFF6     	movff	postinc2,tblptrl
 11265  011734  006F FF77 FFF7     	movff	postdec2,tblptrh
 11266  01173A                     	if	0	;tblptru may be non-zero
 11267  01173A                     	endif
 11268  01173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11269  01173A  0E00               	movlw	low (__mediumconst shr (0+16))
 11270  01173C  6EF8               	movwf	tblptru,c
 11271  01173E                     	endif
 11272  01173E  0008               	tblrd		*
 11273  011740  50F5               	movf	tablat,w,c
 11274  011742  0A69               	xorlw	105
 11275  011744  A4D8               	btfss	status,2,c
 11276  011746  D076               	goto	l12112
 11277  011748                     u11620:
 11278                           
 11279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 11280                           ;stkvar	_fmt @ sp[(-32)+-4]
 11281  011748  0EDC               	movlw	-36
 11282  01174A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11283  011750  0EDD               	movlw	-35
 11284  011752  006F FF8F FFDA     	movff	plusw1,fsr2h
 11285  011758  2ADE               	incf	postinc2,f,c
 11286  01175A  0E00               	movlw	0
 11287  01175C  22DD               	addwfc	postdec2,f,c
 11288                           
 11289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 11290                           ;stkvar	_ap @ sp[(-32)+-6]
 11291  01175E  0EDA               	movlw	-38
 11292  011760  006F FF8F FFD9     	movff	plusw1,fsr2l
 11293  011766  0EDB               	movlw	-37
 11294  011768  006F FF8F FFDA     	movff	plusw1,fsr2h
 11295  01176E  0E02               	movlw	2
 11296  011770  5EDE               	subwf	postinc2,f,c
 11297  011772  0E00               	movlw	0
 11298  011774  5ADD               	subwfb	postdec2,f,c
 11299  011776  006F FF78  F00B    	movff	postinc2,btemp+10
 11300  01177C  006F FF74  F00C    	movff	postdec2,btemp+11
 11301  011782  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11302  011788  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11303  01178E  006F FF78  F00B    	movff	postinc2,btemp+10
 11304  011794  006F FF74  F00C    	movff	postdec2,btemp+11
 11305                           
 11306                           ;stkvar	_ll @ sp[(-32)+14]
 11307  01179A  0EEE               	movlw	-18
 11308  01179C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11309  0117A2  0EEF               	movlw	-17
 11310  0117A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 11311  0117AA  6A01               	clrf	btemp^0,c
 11312  0117AC  BEE3               	btfsc	plusw1,7,c
 11313  0117AE  6801               	setf	btemp^0,c
 11314  0117B0  0EF0               	movlw	-16
 11315  0117B2  0060  F007  FFE3   	movff	btemp,plusw1
 11316  0117B8  0EF1               	movlw	-15
 11317  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
 11318  0117C0  0EF2               	movlw	-14
 11319  0117C2  0060  F007  FFE3   	movff	btemp,plusw1
 11320  0117C8  0EF3               	movlw	-13
 11321  0117CA  0060  F007  FFE3   	movff	btemp,plusw1
 11322  0117D0  0EF4               	movlw	-12
 11323  0117D2  0060  F007  FFE3   	movff	btemp,plusw1
 11324  0117D8  0EF5               	movlw	-11
 11325  0117DA  0060  F007  FFE3   	movff	btemp,plusw1
 11326  0117E0                     l12108:
 11327                           
 11328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 11329                           ;stkvar	_ll @ sp[(-32)+14]
 11330  0117E0  50E1               	movf	fsr1l,w,c
 11331  0117E2  0FEE               	addlw	-18
 11332  0117E4  6ED9               	movwf	fsr2l,c
 11333  0117E6  50E2               	movf	fsr1h,w,c
 11334  0117E8  6EDA               	movwf	fsr2h,c
 11335  0117EA  0EFF               	movlw	255
 11336  0117EC  22DA               	addwfc	fsr2h,f,c
 11337  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
 11338  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
 11339  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
 11340  011800  006F FF7B FFE6     	movff	postinc2,postinc1
 11341  011806  006F FF7B FFE6     	movff	postinc2,postinc1
 11342  01180C  006F FF7B FFE6     	movff	postinc2,postinc1
 11343  011812  006F FF7B FFE6     	movff	postinc2,postinc1
 11344  011818  006F FF7B FFE6     	movff	postinc2,postinc1
 11345                           
 11346                           ;stkvar	_fp @ sp[(-40)+-2]
 11347  01181E  0ED6               	movlw	-42
 11348  011820  006F FF8F FFE6     	movff	plusw1,postinc1
 11349  011826  006F FF8F FFE6     	movff	plusw1,postinc1
 11350  01182C  ECC5  F0A7         	call	_dtoa	;wreg free
 11351  011830  EFF3  F090         	goto	l2328
 11352  011834                     l12112:
 11353                           
 11354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 11355  011834  0E02               	movlw	2
 11356  011836  6EE6               	movwf	postinc1,c
 11357  011838  0E00               	movlw	0
 11358  01183A  6EE6               	movwf	postinc1,c
 11359  01183C  0EE9               	movlw	low STR_65
 11360  01183E  6EE6               	movwf	postinc1,c
 11361  011840  0EFF               	movlw	high STR_65
 11362  011842  6EE6               	movwf	postinc1,c
 11363                           
 11364                           ;stkvar	_fmt @ sp[(-36)+-4]
 11365  011844  0ED8               	movlw	-40
 11366  011846  006F FF8F FFD9     	movff	plusw1,fsr2l
 11367  01184C  0ED9               	movlw	-39
 11368  01184E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11369  011854  006F FF78  F00B    	movff	postinc2,btemp+10
 11370  01185A  006F FF74  F00C    	movff	postdec2,btemp+11
 11371  011860  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11372  011866  0060  F033  FFE6   	movff	btemp+11,postinc1
 11373  01186C  EC5E  F0B9         	call	_strncmp	;wreg free
 11374  011870  5001               	movf	btemp^0,w,c
 11375  011872  1002               	iorwf	(btemp+1)^0,w,c
 11376  011874  B4D8               	btfsc	status,2,c
 11377  011876  D022               	goto	u11640
 11378  011878  0E02               	movlw	2
 11379  01187A  6EE6               	movwf	postinc1,c
 11380  01187C  0E00               	movlw	0
 11381  01187E  6EE6               	movwf	postinc1,c
 11382  011880  0EEF               	movlw	low STR_69
 11383  011882  6EE6               	movwf	postinc1,c
 11384  011884  0EFF               	movlw	high STR_69
 11385  011886  6EE6               	movwf	postinc1,c
 11386                           
 11387                           ;stkvar	_fmt @ sp[(-36)+-4]
 11388  011888  0ED8               	movlw	-40
 11389  01188A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11390  011890  0ED9               	movlw	-39
 11391  011892  006F FF8F FFDA     	movff	plusw1,fsr2h
 11392  011898  006F FF78  F00B    	movff	postinc2,btemp+10
 11393  01189E  006F FF74  F00C    	movff	postdec2,btemp+11
 11394  0118A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11395  0118AA  0060  F033  FFE6   	movff	btemp+11,postinc1
 11396  0118B0  EC5E  F0B9         	call	_strncmp	;wreg free
 11397  0118B4  5001               	movf	btemp^0,w,c
 11398  0118B6  1002               	iorwf	(btemp+1)^0,w,c
 11399  0118B8  A4D8               	btfss	status,2,c
 11400  0118BA  D069               	goto	l12124
 11401  0118BC                     u11640:
 11402                           
 11403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 11404                           ;stkvar	_fmt @ sp[(-32)+-4]
 11405  0118BC  0EDC               	movlw	-36
 11406  0118BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11407  0118C4  0EDD               	movlw	-35
 11408  0118C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11409  0118CC  0E02               	movlw	2
 11410  0118CE  26DE               	addwf	postinc2,f,c
 11411  0118D0  0E00               	movlw	0
 11412  0118D2  22DD               	addwfc	postdec2,f,c
 11413                           
 11414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 11415                           ;stkvar	_ap @ sp[(-32)+-6]
 11416  0118D4  0EDA               	movlw	-38
 11417  0118D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11418  0118DC  0EDB               	movlw	-37
 11419  0118DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11420  0118E4  0E04               	movlw	4
 11421  0118E6  5EDE               	subwf	postinc2,f,c
 11422  0118E8  0E00               	movlw	0
 11423  0118EA  5ADD               	subwfb	postdec2,f,c
 11424  0118EC  006F FF78  F00B    	movff	postinc2,btemp+10
 11425  0118F2  006F FF74  F00C    	movff	postdec2,btemp+11
 11426  0118F8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11427  0118FE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11428  011904  006F FF78  F009    	movff	postinc2,btemp+8
 11429  01190A  006F FF78  F00A    	movff	postinc2,btemp+9
 11430  011910  006F FF78  F00B    	movff	postinc2,btemp+10
 11431  011916  006F FF78  F00C    	movff	postinc2,btemp+11
 11432  01191C  0060  F024  F011   	movff	btemp+8,btemp+16
 11433  011922  0060  F028  F012   	movff	btemp+9,btemp+17
 11434  011928  0060  F02C  F013   	movff	btemp+10,btemp+18
 11435  01192E  0060  F030  F014   	movff	btemp+11,btemp+19
 11436  011934  6A15               	clrf	(btemp+20)^0,c
 11437  011936  BE14               	btfsc	(btemp+19)^0,7,c
 11438  011938  6815               	setf	(btemp+20)^0,c
 11439  01193A  0060  F054  F016   	movff	btemp+20,btemp+21
 11440  011940  0060  F054  F017   	movff	btemp+20,btemp+22
 11441  011946  0060  F054  F018   	movff	btemp+20,btemp+23
 11442                           
 11443                           ;stkvar	_ll @ sp[(-32)+14]
 11444  01194C  0EEE               	movlw	-18
 11445  01194E  0060  F047  FFE3   	movff	btemp+16,plusw1
 11446  011954  0EEF               	movlw	-17
 11447  011956  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11448  01195C  0EF0               	movlw	-16
 11449  01195E  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11450  011964  0EF1               	movlw	-15
 11451  011966  0060  F053  FFE3   	movff	btemp+19,plusw1
 11452  01196C  0EF2               	movlw	-14
 11453  01196E  0060  F057  FFE3   	movff	btemp+20,plusw1
 11454  011974  0EF3               	movlw	-13
 11455  011976  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11456  01197C  0EF4               	movlw	-12
 11457  01197E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11458  011984  0EF5               	movlw	-11
 11459  011986  0060  F063  FFE3   	movff	btemp+23,plusw1
 11460  01198C  D729               	goto	l12108
 11461  01198E                     l12124:
 11462                           
 11463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 11464                           ;stkvar	_ct @ sp[(-32)+26]
 11465  01198E  0EFA               	movlw	-6
 11466  011990  006F FF8C  F001    	movff	plusw1,btemp
 11467  011996  0E66               	movlw	102
 11468  011998  1801               	xorwf	btemp^0,w,c
 11469  01199A  A4D8               	btfss	status,2,c
 11470  01199C  D06E               	goto	l12136
 11471                           
 11472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 11473                           ;stkvar	_fmt @ sp[(-32)+-4]
 11474  01199E  0EDC               	movlw	-36
 11475  0119A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11476  0119A6  0EDD               	movlw	-35
 11477  0119A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11478  0119AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 11479  0119B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 11480  0119BA                     	if	0	;tblptru may be non-zero
 11481  0119BA                     	endif
 11482  0119BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11483  0119BA  0E00               	movlw	low (__mediumconst shr (0+16))
 11484  0119BC  6EF8               	movwf	tblptru,c
 11485  0119BE                     	endif
 11486                           
 11487                           ;stkvar	_c @ sp[(-32)+31]
 11488  0119BE  0008               	tblrd		*
 11489  0119C0  0EFF               	movlw	-1
 11490  0119C2  006F FFD7 FFE3     	movff	tablat,plusw1
 11491                           
 11492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 11493                           ;stkvar	_fmt @ sp[(-32)+-4]
 11494  0119C8  0EDC               	movlw	-36
 11495  0119CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11496  0119D0  0EDD               	movlw	-35
 11497  0119D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11498  0119D8  2ADE               	incf	postinc2,f,c
 11499  0119DA  0E00               	movlw	0
 11500  0119DC  22DD               	addwfc	postdec2,f,c
 11501                           
 11502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 11503                           ;stkvar	_ap @ sp[(-32)+-6]
 11504  0119DE  0EDA               	movlw	-38
 11505  0119E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11506  0119E6  0EDB               	movlw	-37
 11507  0119E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11508  0119EE  0E04               	movlw	4
 11509  0119F0  5EDE               	subwf	postinc2,f,c
 11510  0119F2  0E00               	movlw	0
 11511  0119F4  5ADD               	subwfb	postdec2,f,c
 11512  0119F6  006F FF78  F00B    	movff	postinc2,btemp+10
 11513  0119FC  006F FF74  F00C    	movff	postdec2,btemp+11
 11514  011A02  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11515  011A08  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11516  011A0E  006F FF78  F009    	movff	postinc2,btemp+8
 11517  011A14  006F FF78  F00A    	movff	postinc2,btemp+9
 11518  011A1A  006F FF78  F00B    	movff	postinc2,btemp+10
 11519  011A20  006F FF78  F00C    	movff	postinc2,btemp+11
 11520                           
 11521                           ;stkvar	_f @ sp[(-32)+22]
 11522  011A26  0EF6               	movlw	-10
 11523  011A28  0060  F027  FFE3   	movff	btemp+8,plusw1
 11524  011A2E  0EF7               	movlw	-9
 11525  011A30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11526  011A36  0EF8               	movlw	-8
 11527  011A38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11528  011A3E  0EF9               	movlw	-7
 11529  011A40  0060  F033  FFE3   	movff	btemp+11,plusw1
 11530  011A46                     l12132:
 11531                           
 11532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 11533                           ;stkvar	_c @ sp[(-32)+31]
 11534  011A46  0EFF               	movlw	-1
 11535  011A48  50E3               	movf	plusw1,w,c
 11536  011A4A  6EE6               	movwf	postinc1,c
 11537                           
 11538                           ;stkvar	_f @ sp[(-33)+22]
 11539  011A4C  0EF5               	movlw	-11
 11540  011A4E  006F FF8F FFE6     	movff	plusw1,postinc1
 11541  011A54  006F FF8F FFE6     	movff	plusw1,postinc1
 11542  011A5A  006F FF8F FFE6     	movff	plusw1,postinc1
 11543  011A60  006F FF8F FFE6     	movff	plusw1,postinc1
 11544                           
 11545                           ;stkvar	_fp @ sp[(-37)+-2]
 11546  011A66  0ED9               	movlw	-39
 11547  011A68  006F FF8F FFE6     	movff	plusw1,postinc1
 11548  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 11549  011A74  EC00  F080         	call	_efgtoa	;wreg free
 11550  011A78  D3B6               	goto	l2328
 11551  011A7A                     l12136:
 11552                           
 11553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 11554  011A7A  0E02               	movlw	2
 11555  011A7C  6EE6               	movwf	postinc1,c
 11556  011A7E  0E00               	movlw	0
 11557  011A80  6EE6               	movwf	postinc1,c
 11558  011A82  0EEC               	movlw	low STR_74
 11559  011A84  6EE6               	movwf	postinc1,c
 11560  011A86  0EFF               	movlw	high STR_74
 11561  011A88  6EE6               	movwf	postinc1,c
 11562                           
 11563                           ;stkvar	_ct @ sp[(-36)+26]
 11564  011A8A  0EF6               	movlw	246
 11565  011A8C  24E1               	addwf	fsr1l,w,c
 11566  011A8E  6E01               	movwf	btemp^0,c
 11567  011A90  0EFF               	movlw	255
 11568  011A92  20E2               	addwfc	fsr1h,w,c
 11569  011A94  6E02               	movwf	(btemp+1)^0,c
 11570  011A96  0060  F007  FFE6   	movff	btemp,postinc1
 11571  011A9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11572  011AA2  EC5E  F0B9         	call	_strncmp	;wreg free
 11573  011AA6  5001               	movf	btemp^0,w,c
 11574  011AA8  1002               	iorwf	(btemp+1)^0,w,c
 11575  011AAA  A4D8               	btfss	status,2,c
 11576  011AAC  D096               	goto	l12156
 11577                           
 11578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 11579                           ;stkvar	_fmt @ sp[(-32)+-4]
 11580  011AAE  0EDC               	movlw	-36
 11581  011AB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11582  011AB6  0EDD               	movlw	-35
 11583  011AB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11584  011ABE  006F FF78  F00B    	movff	postinc2,btemp+10
 11585  011AC4  006F FF74  F00C    	movff	postdec2,btemp+11
 11586  011ACA  0E01               	movlw	1
 11587  011ACC  260B               	addwf	(btemp+10)^0,f,c
 11588  011ACE  0E00               	movlw	0
 11589  011AD0  220C               	addwfc	(btemp+11)^0,f,c
 11590  011AD2  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11591  011AD8  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11592  011ADE                     	if	0	;tblptru may be non-zero
 11593  011ADE                     	endif
 11594  011ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11595  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
 11596  011AE0  6EF8               	movwf	tblptru,c
 11597  011AE2                     	endif
 11598                           
 11599                           ;stkvar	_c @ sp[(-32)+31]
 11600  011AE2  0008               	tblrd		*
 11601  011AE4  0EFF               	movlw	-1
 11602  011AE6  006F FFD7 FFE3     	movff	tablat,plusw1
 11603  011AEC  0EBF               	movlw	191
 11604  011AEE  6E0B               	movwf	(btemp+10)^0,c
 11605  011AF0  0EFF               	movlw	255
 11606  011AF2  6E0C               	movwf	(btemp+11)^0,c
 11607                           
 11608                           ;stkvar	_fmt @ sp[(-32)+-4]
 11609  011AF4  0EDC               	movlw	-36
 11610  011AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11611  011AFC  0EDD               	movlw	-35
 11612  011AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11613  011B04  006F FF7B FFF6     	movff	postinc2,tblptrl
 11614  011B0A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11615  011B10                     	if	0	;tblptru may be non-zero
 11616  011B10                     	endif
 11617  011B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11618  011B10  0E00               	movlw	low (__mediumconst shr (0+16))
 11619  011B12  6EF8               	movwf	tblptru,c
 11620  011B14                     	endif
 11621  011B14  0008               	tblrd		*
 11622  011B16  50F5               	movf	tablat,w,c
 11623  011B18  6E09               	movwf	(btemp+8)^0,c
 11624  011B1A  6A0A               	clrf	(btemp+9)^0,c
 11625  011B1C  500B               	movf	(btemp+10)^0,w,c
 11626  011B1E  2609               	addwf	(btemp+8)^0,f,c
 11627  011B20  500C               	movf	(btemp+11)^0,w,c
 11628  011B22  220A               	addwfc	(btemp+9)^0,f,c
 11629  011B24  500A               	movf	(btemp+9)^0,w,c
 11630  011B26  E106               	bnz	u11670
 11631  011B28  0E1A               	movlw	26
 11632  011B2A  5C09               	subwf	(btemp+8)^0,w,c
 11633  011B2C  B0D8               	btfsc	status,0,c
 11634  011B2E  D002               	goto	u11670
 11635  011B30  0E01               	movlw	1
 11636  011B32  D001               	goto	u11680
 11637  011B34                     u11670:
 11638  011B34  0E00               	movlw	0
 11639  011B36                     u11680:
 11640  011B36  6E0B               	movwf	(btemp+10)^0,c
 11641  011B38  6A0C               	clrf	(btemp+11)^0,c
 11642                           
 11643                           ;stkvar	_vfpfcnvrt$5378 @ sp[(-32)+2]
 11644  011B3A  0EE2               	movlw	-30
 11645  011B3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11646  011B42  0EE3               	movlw	-29
 11647  011B44  0060  F033  FFE3   	movff	btemp+11,plusw1
 11648                           
 11649                           ;stkvar	_vfpfcnvrt$5378 @ sp[(-32)+2]
 11650  011B4A  0EE2               	movlw	-30
 11651  011B4C  006F FF8C  F001    	movff	plusw1,btemp
 11652  011B52  0EE3               	movlw	-29
 11653  011B54  50E3               	movf	plusw1,w,c
 11654  011B56  1001               	iorwf	btemp^0,w,c
 11655                           
 11656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 11657                           ;stkvar	_ap @ sp[(-32)+-6]
 11658                           
 11659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 11660                           
 11661                           ;stkvar	_f @ sp[(-32)+22]
 11662                           
 11663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 11664                           ;stkvar	_ap @ sp[(-32)+-6]
 11665  011B58  0EDA               	movlw	-38
 11666  011B5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11667  011B60  0EDB               	movlw	-37
 11668  011B62  006F FF8F FFDA     	movff	plusw1,fsr2h
 11669  011B68  0E04               	movlw	4
 11670  011B6A  5EDE               	subwf	postinc2,f,c
 11671  011B6C  0E00               	movlw	0
 11672  011B6E  5ADD               	subwfb	postdec2,f,c
 11673  011B70  006F FF78  F00B    	movff	postinc2,btemp+10
 11674  011B76  006F FF74  F00C    	movff	postdec2,btemp+11
 11675  011B7C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11676  011B82  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11677  011B88  006F FF78  F009    	movff	postinc2,btemp+8
 11678  011B8E  006F FF78  F00A    	movff	postinc2,btemp+9
 11679  011B94  006F FF78  F00B    	movff	postinc2,btemp+10
 11680  011B9A  006F FF78  F00C    	movff	postinc2,btemp+11
 11681                           
 11682                           ;stkvar	_f @ sp[(-32)+22]
 11683  011BA0  0EF6               	movlw	-10
 11684  011BA2  0060  F027  FFE3   	movff	btemp+8,plusw1
 11685  011BA8  0EF7               	movlw	-9
 11686  011BAA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11687  011BB0  0EF8               	movlw	-8
 11688  011BB2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11689  011BB8  0EF9               	movlw	-7
 11690  011BBA  0060  F033  FFE3   	movff	btemp+11,plusw1
 11691                           
 11692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 11693                           ;stkvar	_fmt @ sp[(-32)+-4]
 11694  011BC0  0EDC               	movlw	-36
 11695  011BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11696  011BC8  0EDD               	movlw	-35
 11697  011BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11698  011BD0  0E02               	movlw	2
 11699  011BD2  26DE               	addwf	postinc2,f,c
 11700  011BD4  0E00               	movlw	0
 11701  011BD6  22DD               	addwfc	postdec2,f,c
 11702  011BD8  D736               	goto	l12132
 11703  011BDA                     l12156:
 11704                           
 11705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 11706                           ;stkvar	_fmt @ sp[(-32)+-4]
 11707  011BDA  0EDC               	movlw	-36
 11708  011BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11709  011BE2  0EDD               	movlw	-35
 11710  011BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11711  011BEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11712  011BF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11713  011BF6                     	if	0	;tblptru may be non-zero
 11714  011BF6                     	endif
 11715  011BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11716  011BF6  0E00               	movlw	low (__mediumconst shr (0+16))
 11717  011BF8  6EF8               	movwf	tblptru,c
 11718  011BFA                     	endif
 11719  011BFA  0008               	tblrd		*
 11720  011BFC  50F5               	movf	tablat,w,c
 11721  011BFE  0A73               	xorlw	115
 11722  011C00  A4D8               	btfss	status,2,c
 11723  011C02  D042               	goto	l12166
 11724                           
 11725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 11726                           ;stkvar	_fmt @ sp[(-32)+-4]
 11727  011C04  0EDC               	movlw	-36
 11728  011C06  006F FF8F FFD9     	movff	plusw1,fsr2l
 11729  011C0C  0EDD               	movlw	-35
 11730  011C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11731  011C14  2ADE               	incf	postinc2,f,c
 11732  011C16  0E00               	movlw	0
 11733  011C18  22DD               	addwfc	postdec2,f,c
 11734                           
 11735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 11736                           ;stkvar	_ap @ sp[(-32)+-6]
 11737  011C1A  0EDA               	movlw	-38
 11738  011C1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11739  011C22  0EDB               	movlw	-37
 11740  011C24  006F FF8F FFDA     	movff	plusw1,fsr2h
 11741  011C2A  0E02               	movlw	2
 11742  011C2C  5EDE               	subwf	postinc2,f,c
 11743  011C2E  0E00               	movlw	0
 11744  011C30  5ADD               	subwfb	postdec2,f,c
 11745  011C32  006F FF78  F00B    	movff	postinc2,btemp+10
 11746  011C38  006F FF74  F00C    	movff	postdec2,btemp+11
 11747  011C3E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11748  011C44  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11749  011C4A  006F FF78  F00B    	movff	postinc2,btemp+10
 11750  011C50  006F FF74  F00C    	movff	postdec2,btemp+11
 11751                           
 11752                           ;stkvar	_cp @ sp[(-32)+29]
 11753  011C56  0EFE               	movlw	-2
 11754  011C58  0060  F033  FFE3   	movff	btemp+11,plusw1
 11755  011C5E  0EFD               	movlw	-3
 11756  011C60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11757                           
 11758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 11759                           ;stkvar	_cp @ sp[(-32)+29]
 11760  011C66  0EFD               	movlw	-3
 11761  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
 11762  011C6E  006F FF8F FFE6     	movff	plusw1,postinc1
 11763                           
 11764                           ;stkvar	_fp @ sp[(-34)+-2]
 11765  011C74  0EDC               	movlw	-36
 11766  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 11767  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 11768  011C82  EC65  F0B4         	call	_stoa	;wreg free
 11769  011C86  D2AF               	goto	l2328
 11770  011C88                     l12166:
 11771                           
 11772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 11773                           ;stkvar	_fmt @ sp[(-32)+-4]
 11774  011C88  0EDC               	movlw	-36
 11775  011C8A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11776  011C90  0EDD               	movlw	-35
 11777  011C92  006F FF8F FFDA     	movff	plusw1,fsr2h
 11778  011C98  006F FF7B FFF6     	movff	postinc2,tblptrl
 11779  011C9E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11780  011CA4                     	if	0	;tblptru may be non-zero
 11781  011CA4                     	endif
 11782  011CA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11783  011CA4  0E00               	movlw	low (__mediumconst shr (0+16))
 11784  011CA6  6EF8               	movwf	tblptru,c
 11785  011CA8                     	endif
 11786  011CA8  0008               	tblrd		*
 11787  011CAA  50F5               	movf	tablat,w,c
 11788  011CAC  0A75               	xorlw	117
 11789  011CAE  A4D8               	btfss	status,2,c
 11790  011CB0  D07C               	goto	l12176
 11791                           
 11792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 11793                           ;stkvar	_fmt @ sp[(-32)+-4]
 11794  011CB2  0EDC               	movlw	-36
 11795  011CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11796  011CBA  0EDD               	movlw	-35
 11797  011CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11798  011CC2  2ADE               	incf	postinc2,f,c
 11799  011CC4  0E00               	movlw	0
 11800  011CC6  22DD               	addwfc	postdec2,f,c
 11801                           
 11802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 11803                           ;stkvar	_ap @ sp[(-32)+-6]
 11804  011CC8  0EDA               	movlw	-38
 11805  011CCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11806  011CD0  0EDB               	movlw	-37
 11807  011CD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11808  011CD8  0E02               	movlw	2
 11809  011CDA  5EDE               	subwf	postinc2,f,c
 11810  011CDC  0E00               	movlw	0
 11811  011CDE  5ADD               	subwfb	postdec2,f,c
 11812  011CE0  006F FF78  F00B    	movff	postinc2,btemp+10
 11813  011CE6  006F FF74  F00C    	movff	postdec2,btemp+11
 11814  011CEC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11815  011CF2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11816  011CF8  006F FF78  F00B    	movff	postinc2,btemp+10
 11817  011CFE  006F FF74  F00C    	movff	postdec2,btemp+11
 11818  011D04  500B               	movf	(btemp+10)^0,w,c
 11819  011D06  6E11               	movwf	(btemp+16)^0,c
 11820  011D08  500C               	movf	(btemp+11)^0,w,c
 11821  011D0A  6E12               	movwf	(btemp+17)^0,c
 11822  011D0C  6A13               	clrf	(btemp+18)^0,c
 11823  011D0E  6A14               	clrf	(btemp+19)^0,c
 11824  011D10  6A15               	clrf	(btemp+20)^0,c
 11825  011D12  6A16               	clrf	(btemp+21)^0,c
 11826  011D14  6A17               	clrf	(btemp+22)^0,c
 11827  011D16  6A18               	clrf	(btemp+23)^0,c
 11828                           
 11829                           ;stkvar	_llu @ sp[(-32)+6]
 11830  011D18  0EE6               	movlw	-26
 11831  011D1A  0060  F047  FFE3   	movff	btemp+16,plusw1
 11832  011D20  0EE7               	movlw	-25
 11833  011D22  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11834  011D28  0EE8               	movlw	-24
 11835  011D2A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11836  011D30  0EE9               	movlw	-23
 11837  011D32  0060  F053  FFE3   	movff	btemp+19,plusw1
 11838  011D38  0EEA               	movlw	-22
 11839  011D3A  0060  F057  FFE3   	movff	btemp+20,plusw1
 11840  011D40  0EEB               	movlw	-21
 11841  011D42  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11842  011D48  0EEC               	movlw	-20
 11843  011D4A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11844  011D50  0EED               	movlw	-19
 11845  011D52  0060  F063  FFE3   	movff	btemp+23,plusw1
 11846                           
 11847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 11848                           ;stkvar	_llu @ sp[(-32)+6]
 11849  011D58  50E1               	movf	fsr1l,w,c
 11850  011D5A  0FE6               	addlw	-26
 11851  011D5C  6ED9               	movwf	fsr2l,c
 11852  011D5E  50E2               	movf	fsr1h,w,c
 11853  011D60  6EDA               	movwf	fsr2h,c
 11854  011D62  0EFF               	movlw	255
 11855  011D64  22DA               	addwfc	fsr2h,f,c
 11856  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
 11857  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
 11858  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
 11859  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
 11860  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
 11861  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
 11862  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
 11863  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
 11864                           
 11865                           ;stkvar	_fp @ sp[(-40)+-2]
 11866  011D96  0ED6               	movlw	-42
 11867  011D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11868  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11869  011DA4  EC4F  F0B1         	call	_utoa	;wreg free
 11870  011DA8  D21E               	goto	l2328
 11871  011DAA                     l12176:
 11872                           
 11873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 11874  011DAA  0E02               	movlw	2
 11875  011DAC  6EE6               	movwf	postinc1,c
 11876  011DAE  0E00               	movlw	0
 11877  011DB0  6EE6               	movwf	postinc1,c
 11878  011DB2  0EF2               	movlw	low STR_79
 11879  011DB4  6EE6               	movwf	postinc1,c
 11880  011DB6  0EFF               	movlw	high STR_79
 11881  011DB8  6EE6               	movwf	postinc1,c
 11882                           
 11883                           ;stkvar	_fmt @ sp[(-36)+-4]
 11884  011DBA  0ED8               	movlw	-40
 11885  011DBC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11886  011DC2  0ED9               	movlw	-39
 11887  011DC4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11888  011DCA  006F FF78  F00B    	movff	postinc2,btemp+10
 11889  011DD0  006F FF74  F00C    	movff	postdec2,btemp+11
 11890  011DD6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11891  011DDC  0060  F033  FFE6   	movff	btemp+11,postinc1
 11892  011DE2  EC5E  F0B9         	call	_strncmp	;wreg free
 11893  011DE6  5001               	movf	btemp^0,w,c
 11894  011DE8  1002               	iorwf	(btemp+1)^0,w,c
 11895  011DEA  A4D8               	btfss	status,2,c
 11896  011DEC  D039               	goto	l12186
 11897                           
 11898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 11899                           ;stkvar	_fmt @ sp[(-32)+-4]
 11900  011DEE  0EDC               	movlw	-36
 11901  011DF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11902  011DF6  0EDD               	movlw	-35
 11903  011DF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11904  011DFE  0E02               	movlw	2
 11905  011E00  26DE               	addwf	postinc2,f,c
 11906  011E02  0E00               	movlw	0
 11907  011E04  22DD               	addwfc	postdec2,f,c
 11908                           
 11909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 11910                           ;stkvar	_ap @ sp[(-32)+-6]
 11911  011E06  0EDA               	movlw	-38
 11912  011E08  006F FF8F FFD9     	movff	plusw1,fsr2l
 11913  011E0E  0EDB               	movlw	-37
 11914  011E10  006F FF8F FFDA     	movff	plusw1,fsr2h
 11915  011E16  0E04               	movlw	4
 11916  011E18  5EDE               	subwf	postinc2,f,c
 11917  011E1A  0E00               	movlw	0
 11918  011E1C  5ADD               	subwfb	postdec2,f,c
 11919  011E1E  006F FF78  F00B    	movff	postinc2,btemp+10
 11920  011E24  006F FF74  F00C    	movff	postdec2,btemp+11
 11921  011E2A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11922  011E30  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11923  011E36  006F FF78  F009    	movff	postinc2,btemp+8
 11924  011E3C  006F FF78  F00A    	movff	postinc2,btemp+9
 11925  011E42  006F FF78  F00B    	movff	postinc2,btemp+10
 11926  011E48  006F FF78  F00C    	movff	postinc2,btemp+11
 11927  011E4E  5009               	movf	(btemp+8)^0,w,c
 11928  011E50  6E11               	movwf	(btemp+16)^0,c
 11929  011E52  500A               	movf	(btemp+9)^0,w,c
 11930  011E54  6E12               	movwf	(btemp+17)^0,c
 11931  011E56  500B               	movf	(btemp+10)^0,w,c
 11932  011E58  6E13               	movwf	(btemp+18)^0,c
 11933  011E5A  500C               	movf	(btemp+11)^0,w,c
 11934  011E5C  6E14               	movwf	(btemp+19)^0,c
 11935  011E5E  D758               	goto	L7
 11936  011E60                     l12186:
 11937                           
 11938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 11939                           ;stkvar	_fmt @ sp[(-32)+-4]
 11940  011E60  0EDC               	movlw	-36
 11941  011E62  006F FF8F FFD9     	movff	plusw1,fsr2l
 11942  011E68  0EDD               	movlw	-35
 11943  011E6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11944  011E70  006F FF7B FFF6     	movff	postinc2,tblptrl
 11945  011E76  006F FF77 FFF7     	movff	postdec2,tblptrh
 11946  011E7C                     	if	0	;tblptru may be non-zero
 11947  011E7C                     	endif
 11948  011E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11949  011E7C  0E00               	movlw	low (__mediumconst shr (0+16))
 11950  011E7E  6EF8               	movwf	tblptru,c
 11951  011E80                     	endif
 11952  011E80  0008               	tblrd		*
 11953  011E82  50F5               	movf	tablat,w,c
 11954  011E84  0A78               	xorlw	120
 11955  011E86  B4D8               	btfsc	status,2,c
 11956  011E88  D015               	goto	u11740
 11957                           
 11958                           ;stkvar	_fmt @ sp[(-32)+-4]
 11959  011E8A  0EDC               	movlw	-36
 11960  011E8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11961  011E92  0EDD               	movlw	-35
 11962  011E94  006F FF8F FFDA     	movff	plusw1,fsr2h
 11963  011E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11964  011EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11965  011EA6                     	if	0	;tblptru may be non-zero
 11966  011EA6                     	endif
 11967  011EA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11968  011EA6  0E00               	movlw	low (__mediumconst shr (0+16))
 11969  011EA8  6EF8               	movwf	tblptru,c
 11970  011EAA                     	endif
 11971  011EAA  0008               	tblrd		*
 11972  011EAC  50F5               	movf	tablat,w,c
 11973  011EAE  0A58               	xorlw	88
 11974  011EB0  A4D8               	btfss	status,2,c
 11975  011EB2  D094               	goto	l12200
 11976  011EB4                     u11740:
 11977                           
 11978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 11979                           ;stkvar	_fmt @ sp[(-32)+-4]
 11980  011EB4  0EDC               	movlw	-36
 11981  011EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11982  011EBC  0EDD               	movlw	-35
 11983  011EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11984  011EC4  006F FF7B FFF6     	movff	postinc2,tblptrl
 11985  011ECA  006F FF77 FFF7     	movff	postdec2,tblptrh
 11986  011ED0                     	if	0	;tblptru may be non-zero
 11987  011ED0                     	endif
 11988  011ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11989  011ED0  0E00               	movlw	low (__mediumconst shr (0+16))
 11990  011ED2  6EF8               	movwf	tblptru,c
 11991  011ED4                     	endif
 11992                           
 11993                           ;stkvar	_c @ sp[(-32)+31]
 11994  011ED4  0008               	tblrd		*
 11995  011ED6  0EFF               	movlw	-1
 11996  011ED8  006F FFD7 FFE3     	movff	tablat,plusw1
 11997                           
 11998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 11999                           ;stkvar	_fmt @ sp[(-32)+-4]
 12000  011EDE  0EDC               	movlw	-36
 12001  011EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12002  011EE6  0EDD               	movlw	-35
 12003  011EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12004  011EEE  2ADE               	incf	postinc2,f,c
 12005  011EF0  0E00               	movlw	0
 12006  011EF2  22DD               	addwfc	postdec2,f,c
 12007                           
 12008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12009                           ;stkvar	_ap @ sp[(-32)+-6]
 12010  011EF4  0EDA               	movlw	-38
 12011  011EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12012  011EFC  0EDB               	movlw	-37
 12013  011EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12014  011F04  0E02               	movlw	2
 12015  011F06  5EDE               	subwf	postinc2,f,c
 12016  011F08  0E00               	movlw	0
 12017  011F0A  5ADD               	subwfb	postdec2,f,c
 12018  011F0C  006F FF78  F00B    	movff	postinc2,btemp+10
 12019  011F12  006F FF74  F00C    	movff	postdec2,btemp+11
 12020  011F18  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12021  011F1E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12022  011F24  006F FF78  F00B    	movff	postinc2,btemp+10
 12023  011F2A  006F FF74  F00C    	movff	postdec2,btemp+11
 12024  011F30  500B               	movf	(btemp+10)^0,w,c
 12025  011F32  6E11               	movwf	(btemp+16)^0,c
 12026  011F34  500C               	movf	(btemp+11)^0,w,c
 12027  011F36  6E12               	movwf	(btemp+17)^0,c
 12028  011F38  6A13               	clrf	(btemp+18)^0,c
 12029  011F3A  6A14               	clrf	(btemp+19)^0,c
 12030  011F3C  6A15               	clrf	(btemp+20)^0,c
 12031  011F3E  6A16               	clrf	(btemp+21)^0,c
 12032  011F40  6A17               	clrf	(btemp+22)^0,c
 12033  011F42  6A18               	clrf	(btemp+23)^0,c
 12034                           
 12035                           ;stkvar	_llu @ sp[(-32)+6]
 12036  011F44  0EE6               	movlw	-26
 12037  011F46  0060  F047  FFE3   	movff	btemp+16,plusw1
 12038  011F4C  0EE7               	movlw	-25
 12039  011F4E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12040  011F54  0EE8               	movlw	-24
 12041  011F56  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12042  011F5C  0EE9               	movlw	-23
 12043  011F5E  0060  F053  FFE3   	movff	btemp+19,plusw1
 12044  011F64  0EEA               	movlw	-22
 12045  011F66  0060  F057  FFE3   	movff	btemp+20,plusw1
 12046  011F6C  0EEB               	movlw	-21
 12047  011F6E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12048  011F74  0EEC               	movlw	-20
 12049  011F76  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12050  011F7C  0EED               	movlw	-19
 12051  011F7E  0060  F063  FFE3   	movff	btemp+23,plusw1
 12052                           
 12053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 12054                           ;stkvar	_c @ sp[(-32)+31]
 12055  011F84  0EFF               	movlw	-1
 12056  011F86  50E3               	movf	plusw1,w,c
 12057  011F88  6EE6               	movwf	postinc1,c
 12058                           
 12059                           ;stkvar	_llu @ sp[(-33)+6]
 12060  011F8A  50E1               	movf	fsr1l,w,c
 12061  011F8C  0FE5               	addlw	-27
 12062  011F8E  6ED9               	movwf	fsr2l,c
 12063  011F90  50E2               	movf	fsr1h,w,c
 12064  011F92  6EDA               	movwf	fsr2h,c
 12065  011F94  0EFF               	movlw	255
 12066  011F96  22DA               	addwfc	fsr2h,f,c
 12067  011F98  006F FF7B FFE6     	movff	postinc2,postinc1
 12068  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
 12069  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
 12070  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
 12071  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
 12072  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
 12073  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
 12074  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
 12075                           
 12076                           ;stkvar	_fp @ sp[(-41)+-2]
 12077  011FC8  0ED5               	movlw	-43
 12078  011FCA  006F FF8F FFE6     	movff	plusw1,postinc1
 12079  011FD0  006F FF8F FFE6     	movff	plusw1,postinc1
 12080  011FD6  ECEB  F0AB         	call	_xtoa	;wreg free
 12081  011FDA  D105               	goto	l2328
 12082  011FDC                     l12200:
 12083                           
 12084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 12085  011FDC  0E02               	movlw	2
 12086  011FDE  6EE6               	movwf	postinc1,c
 12087  011FE0  0E00               	movlw	0
 12088  011FE2  6EE6               	movwf	postinc1,c
 12089  011FE4  0EF5               	movlw	low STR_84
 12090  011FE6  6EE6               	movwf	postinc1,c
 12091  011FE8  0EFF               	movlw	high STR_84
 12092  011FEA  6EE6               	movwf	postinc1,c
 12093                           
 12094                           ;stkvar	_fmt @ sp[(-36)+-4]
 12095  011FEC  0ED8               	movlw	-40
 12096  011FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12097  011FF4  0ED9               	movlw	-39
 12098  011FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12099  011FFC  006F FF78  F00B    	movff	postinc2,btemp+10
 12100  012002  006F FF74  F00C    	movff	postdec2,btemp+11
 12101  012008  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12102  01200E  0060  F033  FFE6   	movff	btemp+11,postinc1
 12103  012014  EC5E  F0B9         	call	_strncmp	;wreg free
 12104  012018  5001               	movf	btemp^0,w,c
 12105  01201A  1002               	iorwf	(btemp+1)^0,w,c
 12106  01201C  B4D8               	btfsc	status,2,c
 12107  01201E  D022               	goto	u11760
 12108  012020  0E02               	movlw	2
 12109  012022  6EE6               	movwf	postinc1,c
 12110  012024  0E00               	movlw	0
 12111  012026  6EE6               	movwf	postinc1,c
 12112  012028  0EE6               	movlw	low STR_88
 12113  01202A  6EE6               	movwf	postinc1,c
 12114  01202C  0EFF               	movlw	high STR_88
 12115  01202E  6EE6               	movwf	postinc1,c
 12116                           
 12117                           ;stkvar	_fmt @ sp[(-36)+-4]
 12118  012030  0ED8               	movlw	-40
 12119  012032  006F FF8F FFD9     	movff	plusw1,fsr2l
 12120  012038  0ED9               	movlw	-39
 12121  01203A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12122  012040  006F FF78  F00B    	movff	postinc2,btemp+10
 12123  012046  006F FF74  F00C    	movff	postdec2,btemp+11
 12124  01204C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12125  012052  0060  F033  FFE6   	movff	btemp+11,postinc1
 12126  012058  EC5E  F0B9         	call	_strncmp	;wreg free
 12127  01205C  5001               	movf	btemp^0,w,c
 12128  01205E  1002               	iorwf	(btemp+1)^0,w,c
 12129  012060  A4D8               	btfss	status,2,c
 12130  012062  D058               	goto	l12214
 12131  012064                     u11760:
 12132                           
 12133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 12134                           ;stkvar	_fmt @ sp[(-32)+-4]
 12135  012064  0EDC               	movlw	-36
 12136  012066  006F FF8F FFD9     	movff	plusw1,fsr2l
 12137  01206C  0EDD               	movlw	-35
 12138  01206E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12139  012074  006F FF78  F00B    	movff	postinc2,btemp+10
 12140  01207A  006F FF74  F00C    	movff	postdec2,btemp+11
 12141  012080  0E01               	movlw	1
 12142  012082  260B               	addwf	(btemp+10)^0,f,c
 12143  012084  0E00               	movlw	0
 12144  012086  220C               	addwfc	(btemp+11)^0,f,c
 12145  012088  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12146  01208E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12147  012094                     	if	0	;tblptru may be non-zero
 12148  012094                     	endif
 12149  012094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12150  012094  0E00               	movlw	low (__mediumconst shr (0+16))
 12151  012096  6EF8               	movwf	tblptru,c
 12152  012098                     	endif
 12153                           
 12154                           ;stkvar	_c @ sp[(-32)+31]
 12155  012098  0008               	tblrd		*
 12156  01209A  0EFF               	movlw	-1
 12157  01209C  006F FFD7 FFE3     	movff	tablat,plusw1
 12158                           
 12159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 12160                           ;stkvar	_fmt @ sp[(-32)+-4]
 12161  0120A2  0EDC               	movlw	-36
 12162  0120A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12163  0120AA  0EDD               	movlw	-35
 12164  0120AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12165  0120B2  0E02               	movlw	2
 12166  0120B4  26DE               	addwf	postinc2,f,c
 12167  0120B6  0E00               	movlw	0
 12168  0120B8  22DD               	addwfc	postdec2,f,c
 12169                           
 12170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12171                           ;stkvar	_ap @ sp[(-32)+-6]
 12172  0120BA  0EDA               	movlw	-38
 12173  0120BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12174  0120C2  0EDB               	movlw	-37
 12175  0120C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12176  0120CA  0E04               	movlw	4
 12177  0120CC  5EDE               	subwf	postinc2,f,c
 12178  0120CE  0E00               	movlw	0
 12179  0120D0  5ADD               	subwfb	postdec2,f,c
 12180  0120D2  006F FF78  F00B    	movff	postinc2,btemp+10
 12181  0120D8  006F FF74  F00C    	movff	postdec2,btemp+11
 12182  0120DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12183  0120E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12184  0120EA  006F FF78  F009    	movff	postinc2,btemp+8
 12185  0120F0  006F FF78  F00A    	movff	postinc2,btemp+9
 12186  0120F6  006F FF78  F00B    	movff	postinc2,btemp+10
 12187  0120FC  006F FF78  F00C    	movff	postinc2,btemp+11
 12188  012102  5009               	movf	(btemp+8)^0,w,c
 12189  012104  6E11               	movwf	(btemp+16)^0,c
 12190  012106  500A               	movf	(btemp+9)^0,w,c
 12191  012108  6E12               	movwf	(btemp+17)^0,c
 12192  01210A  500B               	movf	(btemp+10)^0,w,c
 12193  01210C  6E13               	movwf	(btemp+18)^0,c
 12194  01210E  500C               	movf	(btemp+11)^0,w,c
 12195  012110  6E14               	movwf	(btemp+19)^0,c
 12196  012112  D714               	goto	L8
 12197  012114                     l12214:
 12198                           
 12199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 12200                           ;stkvar	_fmt @ sp[(-32)+-4]
 12201  012114  0EDC               	movlw	-36
 12202  012116  006F FF8F FFD9     	movff	plusw1,fsr2l
 12203  01211C  0EDD               	movlw	-35
 12204  01211E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12205  012124  006F FF7B FFF6     	movff	postinc2,tblptrl
 12206  01212A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12207  012130                     	if	0	;tblptru may be non-zero
 12208  012130                     	endif
 12209  012130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12210  012130  0E00               	movlw	low (__mediumconst shr (0+16))
 12211  012132  6EF8               	movwf	tblptru,c
 12212  012134                     	endif
 12213  012134  0008               	tblrd		*
 12214  012136  50F5               	movf	tablat,w,c
 12215  012138  0A25               	xorlw	37
 12216  01213A  A4D8               	btfss	status,2,c
 12217  01213C  D01A               	goto	l12224
 12218                           
 12219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 12220                           ;stkvar	_fmt @ sp[(-32)+-4]
 12221  01213E  0EDC               	movlw	-36
 12222  012140  006F FF8F FFD9     	movff	plusw1,fsr2l
 12223  012146  0EDD               	movlw	-35
 12224  012148  006F FF8F FFDA     	movff	plusw1,fsr2h
 12225  01214E  2ADE               	incf	postinc2,f,c
 12226  012150  0E00               	movlw	0
 12227  012152  22DD               	addwfc	postdec2,f,c
 12228                           
 12229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 12230                           ;stkvar	_fp @ sp[(-32)+-2]
 12231  012154  0EDE               	movlw	-34
 12232  012156  006F FF8F FFE6     	movff	plusw1,postinc1
 12233  01215C  006F FF8F FFE6     	movff	plusw1,postinc1
 12234  012162  0E25               	movlw	37
 12235  012164  6EE6               	movwf	postinc1,c
 12236  012166  0E00               	movlw	0
 12237  012168  6EE6               	movwf	postinc1,c
 12238  01216A  ECEB  F0C5         	call	_fputc	;wreg free
 12239  01216E                     l12220:
 12240                           
 12241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 12242  01216E  0E01               	movlw	1
 12243  012170  D00C               	goto	L9
 12244  012172                     l12224:
 12245                           
 12246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 12247                           ;stkvar	_fmt @ sp[(-32)+-4]
 12248  012172  0EDC               	movlw	-36
 12249  012174  006F FF8F FFD9     	movff	plusw1,fsr2l
 12250  01217A  0EDD               	movlw	-35
 12251  01217C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12252  012182  2ADE               	incf	postinc2,f,c
 12253  012184  0E00               	movlw	0
 12254  012186  22DD               	addwfc	postdec2,f,c
 12255                           
 12256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 12257  012188  0E00               	movlw	0
 12258  01218A                     L9:
 12259  01218A  6E01               	movwf	btemp^0,c
 12260  01218C  0E00               	movlw	0
 12261  01218E  6E02               	movwf	(btemp+1)^0,c
 12262  012190  D02A               	goto	l2328
 12263  012192                     l12230:
 12264                           
 12265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 12266                           ;stkvar	_fp @ sp[(-32)+-2]
 12267  012192  0EDE               	movlw	-34
 12268  012194  006F FF8F FFE6     	movff	plusw1,postinc1
 12269  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
 12270                           
 12271                           ;stkvar	_fmt @ sp[(-34)+-4]
 12272  0121A0  0EDA               	movlw	-38
 12273  0121A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12274  0121A8  0EDB               	movlw	-37
 12275  0121AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12276  0121B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 12277  0121B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 12278  0121BC                     	if	0	;tblptru may be non-zero
 12279  0121BC                     	endif
 12280  0121BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12281  0121BC  0E00               	movlw	low (__mediumconst shr (0+16))
 12282  0121BE  6EF8               	movwf	tblptru,c
 12283  0121C0                     	endif
 12284  0121C0  0008               	tblrd		*
 12285  0121C2  50F5               	movf	tablat,w,c
 12286  0121C4  6EE6               	movwf	postinc1,c
 12287  0121C6  0E00               	movlw	0
 12288  0121C8  6EE6               	movwf	postinc1,c
 12289  0121CA  ECEB  F0C5         	call	_fputc	;wreg free
 12290                           
 12291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 12292                           ;stkvar	_fmt @ sp[(-32)+-4]
 12293  0121CE  0EDC               	movlw	-36
 12294  0121D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12295  0121D6  0EDD               	movlw	-35
 12296  0121D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12297  0121DE  2ADE               	incf	postinc2,f,c
 12298  0121E0  0E00               	movlw	0
 12299  0121E2  22DD               	addwfc	postdec2,f,c
 12300  0121E4  D7C4               	goto	l12220
 12301  0121E6                     l2328:
 12302                           
 12303                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 12304  0121E6  0EDA               	movlw	218
 12305  0121E8  26E1               	addwf	fsr1l,f,c
 12306  0121EA  0EFF               	movlw	255
 12307  0121EC  22E2               	addwfc	fsr1h,f,c
 12308  0121EE  0012               	return		;funcret
 12309  0121F0                     __end_of_vfpfcnvrt:
 12310                           	opt callstack 0
 12311                           
 12312 ;; *************** function _xtoa *****************
 12313 ;; Defined at:
 12314 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12315 ;; Parameters:    Size  Location     Type
 12316 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12317 ;;		 -> f(6), NULL(0), 
 12318 ;;  d               8  [STACK] unsigned long long 
 12319 ;;  x               1  [STACK] unsigned char 
 12320 ;; Auto vars:     Size  Location     Type
 12321 ;;  n               8  [STACK] unsigned long long 
 12322 ;;  c               2  [STACK] int 
 12323 ;;  i               2  [STACK] int 
 12324 ;;  w               2  [STACK] int 
 12325 ;;  p               2  [STACK] int 
 12326 ;; Return value:  Size  Location     Type
 12327 ;;                  2  [STACK] int 
 12328 ;; Registers used:
 12329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12330 ;; Tracked objects:
 12331 ;;		On entry : 0/0
 12332 ;;		On exit  : 0/0
 12333 ;;		Unchanged: 0/0
 12334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12339 ;;Total ram usage:        0 bytes
 12340 ;; Hardware stack levels used:    1
 12341 ;; Hardware stack levels required when called:   20
 12342 ;; This function calls:
 12343 ;;		_isalpha
 12344 ;;		_isupper
 12345 ;;		_pad
 12346 ;;		_toupper
 12347 ;; This function is called by:
 12348 ;;		_vfpfcnvrt
 12349 ;; This function uses a reentrant model
 12350 ;;
 12351                           
 12352                           	psect	text46
 12353  0157D6                     __ptext46:
 12354                           	opt callstack 0
 12355  0157D6                     _xtoa:
 12356                           	opt callstack 0
 12357                           
 12358                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12359  0157D6  0E14               	movlw	20
 12360  0157D8  26E1               	addwf	fsr1l,f,c
 12361  0157DA  0E00               	movlw	0
 12362  0157DC  22E2               	addwfc	fsr1h,f,c
 12363                           
 12364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 12365                           
 12366                           ;incstack = 0
 12367 ;; hardware stack exceeded
 12368  0157DE  AE24               	btfss	(_prec+1)^0,7,c
 12369                           
 12370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 12371  0157E0  9225               	bcf	_flags^0,1,c
 12372                           
 12373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 12374  0157E2  BE24               	btfsc	(_prec+1)^0,7,c
 12375  0157E4  D005               	goto	u11290
 12376  0157E6  5024               	movf	(_prec+1)^0,w,c
 12377  0157E8  E110               	bnz	l11954
 12378  0157EA  0423               	decf	_prec^0,w,c
 12379  0157EC  B0D8               	btfsc	status,0,c
 12380  0157EE  D00D               	goto	l11954
 12381  0157F0                     u11290:
 12382  0157F0  0E01               	movlw	1
 12383  0157F2  6E0B               	movwf	(btemp+10)^0,c
 12384  0157F4  0E00               	movlw	0
 12385  0157F6  6E0C               	movwf	(btemp+11)^0,c
 12386                           
 12387                           ;stkvar	_p @ sp[(-20)+18]
 12388  0157F8  0EFE               	movlw	-2
 12389  0157FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12390  015800  0EFF               	movlw	-1
 12391  015802  0060  F033  FFE3   	movff	btemp+11,plusw1
 12392  015808  D008               	goto	l2278
 12393  01580A                     l11954:
 12394                           
 12395                           ;stkvar	_p @ sp[(-20)+18]
 12396  01580A  0EFE               	movlw	-2
 12397  01580C  0060  F08F  FFE3   	movff	_prec,plusw1
 12398  015812  0EFF               	movlw	-1
 12399  015814  0060  F093  FFE3   	movff	_prec+1,plusw1
 12400  01581A                     l2278:
 12401                           
 12402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 12403                           ;stkvar	_w @ sp[(-20)+16]
 12404  01581A  0EFC               	movlw	-4
 12405  01581C  0060  F087  FFE3   	movff	_width,plusw1
 12406  015822  0EFD               	movlw	-3
 12407  015824  0060  F08B  FFE3   	movff	_width+1,plusw1
 12408                           
 12409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 12410  01582A  A825               	btfss	_flags^0,4,c
 12411  01582C  D00B               	goto	l11960
 12412                           
 12413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 12414                           ;stkvar	_w @ sp[(-20)+16]
 12415  01582E  50E1               	movf	fsr1l,w,c
 12416  015830  0FFC               	addlw	-4
 12417  015832  6ED9               	movwf	fsr2l,c
 12418  015834  50E2               	movf	fsr1h,w,c
 12419  015836  6EDA               	movwf	fsr2h,c
 12420  015838  0EFF               	movlw	255
 12421  01583A  22DA               	addwfc	fsr2h,f,c
 12422  01583C  0EFE               	movlw	254
 12423  01583E  26DE               	addwf	postinc2,f,c
 12424  015840  0EFF               	movlw	255
 12425  015842  22DD               	addwfc	postdec2,f,c
 12426  015844                     l11960:
 12427                           
 12428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 12429                           ;stkvar	_d @ sp[(-20)+-10]
 12430  015844  0EE2               	movlw	226
 12431  015846  24E1               	addwf	fsr1l,w,c
 12432  015848  6ED9               	movwf	fsr2l,c
 12433  01584A  0EFF               	movlw	255
 12434  01584C  20E2               	addwfc	fsr1h,w,c
 12435  01584E  6EDA               	movwf	fsr2h,c
 12436                           
 12437                           ;stkvar	_n @ sp[(-20)+4]
 12438  015850  0E08               	movlw	8
 12439  015852  6E01               	movwf	btemp^0,c
 12440  015854  0EF0               	movlw	-16
 12441  015856                     us1131999:
 12442  015856  006F FF7B FFE3     	movff	postinc2,plusw1
 12443  01585C  28E8               	incf	wreg,w,c
 12444  01585E  2E01               	decfsz	btemp^0,f,c
 12445  015860  D7FA               	bra	us1131999
 12446                           
 12447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 12448  015862  0E4F               	movlw	79
 12449  015864  6E0B               	movwf	(btemp+10)^0,c
 12450  015866  0E00               	movlw	0
 12451  015868  6E0C               	movwf	(btemp+11)^0,c
 12452                           
 12453                           ;stkvar	_i @ sp[(-20)+14]
 12454  01586A  0EFA               	movlw	-6
 12455  01586C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12456  015872  0EFB               	movlw	-5
 12457  015874  0060  F033  FFE3   	movff	btemp+11,plusw1
 12458                           
 12459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 12460  01587A  0103               	movlb	3	; () banked
 12461  01587C  6BE3               	clrf	(_dbuf+79)& (0+255),b
 12462                           
 12463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12464  01587E  D0EE               	goto	l11998
 12465  015880                     l11966:
 12466                           
 12467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 12468                           ;stkvar	_i @ sp[(-20)+14]
 12469  015880  50E1               	movf	fsr1l,w,c
 12470  015882  0FFA               	addlw	-6
 12471  015884  6ED9               	movwf	fsr2l,c
 12472  015886  50E2               	movf	fsr1h,w,c
 12473  015888  6EDA               	movwf	fsr2h,c
 12474  01588A  0EFF               	movlw	255
 12475  01588C  22DA               	addwfc	fsr2h,f,c
 12476  01588E  06DE               	decf	postinc2,f,c
 12477  015890  0E00               	movlw	0
 12478  015892  5ADD               	subwfb	postdec2,f,c
 12479                           
 12480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 12481                           ;stkvar	_n @ sp[(-20)+4]
 12482  015894  0EF0               	movlw	-16
 12483  015896  006F FF8C  F00B    	movff	plusw1,btemp+10
 12484  01589C  0EF1               	movlw	-15
 12485  01589E  006F FF8C  F00C    	movff	plusw1,btemp+11
 12486  0158A4  0E0F               	movlw	15
 12487  0158A6  160B               	andwf	(btemp+10)^0,f,c
 12488  0158A8  0E00               	movlw	0
 12489  0158AA  160C               	andwf	(btemp+11)^0,f,c
 12490                           
 12491                           ;stkvar	_c @ sp[(-20)+12]
 12492  0158AC  0EF8               	movlw	-8
 12493  0158AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12494  0158B4  0EF9               	movlw	-7
 12495  0158B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 12496                           
 12497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 12498                           ;stkvar	_c @ sp[(-20)+12]
 12499  0158BC  0EF9               	movlw	-7
 12500  0158BE  BEE3               	btfsc	plusw1,7,c
 12501  0158C0  D00F               	goto	l11974
 12502  0158C2  0EF9               	movlw	-7
 12503  0158C4  50E3               	movf	plusw1,w,c
 12504  0158C6  E108               	bnz	u11320
 12505  0158C8  0EF8               	movlw	-8
 12506  0158CA  006F FF8C  F001    	movff	plusw1,btemp
 12507  0158D0  0E0A               	movlw	10
 12508  0158D2  5E01               	subwf	btemp^0,f,c
 12509  0158D4  A0D8               	btfss	status,0,c
 12510  0158D6  D004               	goto	l11974
 12511  0158D8                     u11320:
 12512                           
 12513                           ;stkvar	_c @ sp[(-20)+12]
 12514  0158D8  0EF8               	movlw	-8
 12515  0158DA  50E3               	movf	plusw1,w,c
 12516  0158DC  0F57               	addlw	87
 12517  0158DE  D003               	goto	L10
 12518  0158E0                     l11974:
 12519                           
 12520                           ;stkvar	_c @ sp[(-20)+12]
 12521  0158E0  0EF8               	movlw	-8
 12522  0158E2  50E3               	movf	plusw1,w,c
 12523  0158E4  0F30               	addlw	48
 12524  0158E6                     L10:
 12525  0158E6  6E0B               	movwf	(btemp+10)^0,c
 12526  0158E8  0EF9               	movlw	-7
 12527  0158EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 12528  0158F0  0E00               	movlw	0
 12529  0158F2  220C               	addwfc	(btemp+11)^0,f,c
 12530                           
 12531                           ;stkvar	_c @ sp[(-20)+12]
 12532  0158F4  0EF8               	movlw	-8
 12533  0158F6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12534  0158FC  0EF9               	movlw	-7
 12535  0158FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 12536  015904  0EBF               	movlw	191
 12537  015906  6E0B               	movwf	(btemp+10)^0,c
 12538  015908  0EFF               	movlw	255
 12539  01590A  6E0C               	movwf	(btemp+11)^0,c
 12540                           
 12541                           ;stkvar	_x @ sp[(-20)+-11]
 12542  01590C  0EE1               	movlw	-31
 12543  01590E  50E3               	movf	plusw1,w,c
 12544  015910  6E09               	movwf	(btemp+8)^0,c
 12545  015912  6A0A               	clrf	(btemp+9)^0,c
 12546  015914  500B               	movf	(btemp+10)^0,w,c
 12547  015916  2609               	addwf	(btemp+8)^0,f,c
 12548  015918  500C               	movf	(btemp+11)^0,w,c
 12549  01591A  220A               	addwfc	(btemp+9)^0,f,c
 12550  01591C  500A               	movf	(btemp+9)^0,w,c
 12551  01591E  E106               	bnz	u11330
 12552  015920  0E1A               	movlw	26
 12553  015922  5C09               	subwf	(btemp+8)^0,w,c
 12554  015924  B0D8               	btfsc	status,0,c
 12555  015926  D002               	goto	u11330
 12556  015928  0E01               	movlw	1
 12557  01592A  D001               	goto	u11340
 12558  01592C                     u11330:
 12559  01592C  0E00               	movlw	0
 12560  01592E                     u11340:
 12561  01592E  6E0B               	movwf	(btemp+10)^0,c
 12562  015930  6A0C               	clrf	(btemp+11)^0,c
 12563                           
 12564                           ;stkvar	_xtoa$5351 @ sp[(-20)+2]
 12565  015932  0EEE               	movlw	-18
 12566  015934  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12567  01593A  0EEF               	movlw	-17
 12568  01593C  0060  F033  FFE3   	movff	btemp+11,plusw1
 12569                           
 12570                           ;stkvar	_xtoa$5351 @ sp[(-20)+2]
 12571  015942  0EEE               	movlw	-18
 12572  015944  006F FF8C  F001    	movff	plusw1,btemp
 12573  01594A  0EEF               	movlw	-17
 12574  01594C  50E3               	movf	plusw1,w,c
 12575  01594E  1001               	iorwf	btemp^0,w,c
 12576  015950  B4D8               	btfsc	status,2,c
 12577  015952  D041               	goto	l11990
 12578  015954  0E9F               	movlw	159
 12579  015956  6E0B               	movwf	(btemp+10)^0,c
 12580  015958  0EFF               	movlw	255
 12581  01595A  6E0C               	movwf	(btemp+11)^0,c
 12582                           
 12583                           ;stkvar	_c @ sp[(-20)+12]
 12584  01595C  0EF8               	movlw	-8
 12585  01595E  006F FF8C  F009    	movff	plusw1,btemp+8
 12586  015964  0EF9               	movlw	-7
 12587  015966  006F FF8C  F00A    	movff	plusw1,btemp+9
 12588  01596C  0E20               	movlw	32
 12589  01596E  1209               	iorwf	(btemp+8)^0,f,c
 12590  015970  0E00               	movlw	0
 12591  015972  120A               	iorwf	(btemp+9)^0,f,c
 12592  015974  500B               	movf	(btemp+10)^0,w,c
 12593  015976  2609               	addwf	(btemp+8)^0,f,c
 12594  015978  500C               	movf	(btemp+11)^0,w,c
 12595  01597A  220A               	addwfc	(btemp+9)^0,f,c
 12596  01597C  500A               	movf	(btemp+9)^0,w,c
 12597  01597E  E106               	bnz	u11360
 12598  015980  0E1A               	movlw	26
 12599  015982  5C09               	subwf	(btemp+8)^0,w,c
 12600  015984  B0D8               	btfsc	status,0,c
 12601  015986  D002               	goto	u11360
 12602  015988  0E01               	movlw	1
 12603  01598A  D001               	goto	u11370
 12604  01598C                     u11360:
 12605  01598C  0E00               	movlw	0
 12606  01598E                     u11370:
 12607  01598E  6E0B               	movwf	(btemp+10)^0,c
 12608  015990  6A0C               	clrf	(btemp+11)^0,c
 12609                           
 12610                           ;stkvar	_xtoa$5352 @ sp[(-20)+0]
 12611  015992  0EEC               	movlw	-20
 12612  015994  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12613  01599A  0EED               	movlw	-19
 12614  01599C  0060  F033  FFE3   	movff	btemp+11,plusw1
 12615                           
 12616                           ;stkvar	_xtoa$5352 @ sp[(-20)+0]
 12617  0159A2  0EEC               	movlw	-20
 12618  0159A4  006F FF8C  F001    	movff	plusw1,btemp
 12619  0159AA  0EED               	movlw	-19
 12620  0159AC  50E3               	movf	plusw1,w,c
 12621  0159AE  1001               	iorwf	btemp^0,w,c
 12622  0159B0  B4D8               	btfsc	status,2,c
 12623  0159B2  D011               	goto	l11990
 12624                           
 12625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 12626                           ;stkvar	_c @ sp[(-20)+12]
 12627  0159B4  0EF8               	movlw	-8
 12628  0159B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12629  0159BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12630  0159C2  ECE9  F0CF         	call	_toupper	;wreg free
 12631                           
 12632                           ;stkvar	_c @ sp[(-20)+12]
 12633  0159C6  0EF8               	movlw	-8
 12634  0159C8  0060  F007  FFE3   	movff	btemp,plusw1
 12635  0159CE  0EF9               	movlw	-7
 12636  0159D0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12637  0159D6                     l11990:
 12638                           
 12639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 12640                           ;stkvar	_c @ sp[(-20)+12]
 12641                           ;stkvar	_i @ sp[(-20)+14]
 12642  0159D6  0EFA               	movlw	-6
 12643  0159D8  006F FF8C  F00B    	movff	plusw1,btemp+10
 12644  0159DE  0EFB               	movlw	-5
 12645  0159E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 12646  0159E6  0E94               	movlw	low _dbuf
 12647  0159E8  240B               	addwf	(btemp+10)^0,w,c
 12648  0159EA  6ED9               	movwf	fsr2l,c
 12649  0159EC  0E03               	movlw	high _dbuf
 12650  0159EE  200C               	addwfc	(btemp+11)^0,w,c
 12651  0159F0  6EDA               	movwf	fsr2h,c
 12652  0159F2  0EF8               	movlw	-8
 12653  0159F4  006F FF8F FFDF     	movff	plusw1,indf2
 12654                           
 12655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 12656                           ;stkvar	_p @ sp[(-20)+18]
 12657  0159FA  50E1               	movf	fsr1l,w,c
 12658  0159FC  0FFE               	addlw	-2
 12659  0159FE  6ED9               	movwf	fsr2l,c
 12660  015A00  50E2               	movf	fsr1h,w,c
 12661  015A02  6EDA               	movwf	fsr2h,c
 12662  015A04  0EFF               	movlw	255
 12663  015A06  22DA               	addwfc	fsr2h,f,c
 12664  015A08  06DE               	decf	postinc2,f,c
 12665  015A0A  0E00               	movlw	0
 12666  015A0C  5ADD               	subwfb	postdec2,f,c
 12667                           
 12668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 12669                           ;stkvar	_w @ sp[(-20)+16]
 12670  015A0E  50E1               	movf	fsr1l,w,c
 12671  015A10  0FFC               	addlw	-4
 12672  015A12  6ED9               	movwf	fsr2l,c
 12673  015A14  50E2               	movf	fsr1h,w,c
 12674  015A16  6EDA               	movwf	fsr2h,c
 12675  015A18  0EFF               	movlw	255
 12676  015A1A  22DA               	addwfc	fsr2h,f,c
 12677  015A1C  06DE               	decf	postinc2,f,c
 12678  015A1E  0E00               	movlw	0
 12679  015A20  5ADD               	subwfb	postdec2,f,c
 12680                           
 12681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 12682  015A22  0E04               	movlw	4
 12683  015A24  6E0C               	movwf	(btemp+11)^0,c
 12684                           
 12685                           ;stkvar	_n @ sp[(-20)+4]
 12686  015A26  50E1               	movf	fsr1l,w,c
 12687  015A28  0FF0               	addlw	-16
 12688  015A2A  6ED9               	movwf	fsr2l,c
 12689  015A2C  50E2               	movf	fsr1h,w,c
 12690  015A2E  6EDA               	movwf	fsr2h,c
 12691  015A30  0EFF               	movlw	255
 12692  015A32  22DA               	addwfc	fsr2h,f,c
 12693  015A34  280C               	incf	(btemp+11)^0,w,c
 12694  015A36  52DE               	movf	postinc2,f,c
 12695  015A38  D00F               	goto	u11390
 12696  015A3A                     u11395:
 12697  015A3A  52DE               	movf	postinc2,f,c
 12698  015A3C  52DE               	movf	postinc2,f,c
 12699  015A3E  52DE               	movf	postinc2,f,c
 12700  015A40  52DE               	movf	postinc2,f,c
 12701  015A42  52DE               	movf	postinc2,f,c
 12702  015A44  52DE               	movf	postinc2,f,c
 12703  015A46  90D8               	bcf	status,0,c
 12704  015A48  32DD               	rrcf	postdec2,f,c
 12705  015A4A  32DD               	rrcf	postdec2,f,c
 12706  015A4C  32DD               	rrcf	postdec2,f,c
 12707  015A4E  32DD               	rrcf	postdec2,f,c
 12708  015A50  32DD               	rrcf	postdec2,f,c
 12709  015A52  32DD               	rrcf	postdec2,f,c
 12710  015A54  32DD               	rrcf	postdec2,f,c
 12711  015A56  32DE               	rrcf	postinc2,f,c
 12712  015A58                     u11390:
 12713  015A58  2EE8               	decfsz	wreg,f,c
 12714  015A5A  D7EF               	goto	u11395
 12715  015A5C                     l11998:
 12716                           
 12717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12718                           ;stkvar	_i @ sp[(-20)+14]
 12719  015A5C  0EFB               	movlw	-5
 12720  015A5E  BEE3               	btfsc	plusw1,7,c
 12721  015A60  D03A               	goto	u11440
 12722  015A62  0EFB               	movlw	-5
 12723  015A64  50E3               	movf	plusw1,w,c
 12724  015A66  E108               	bnz	u11400
 12725  015A68  0EFA               	movlw	-6
 12726  015A6A  006F FF8C  F001    	movff	plusw1,btemp
 12727  015A70  0E02               	movlw	2
 12728  015A72  5E01               	subwf	btemp^0,f,c
 12729  015A74  A0D8               	btfss	status,0,c
 12730  015A76  D02F               	goto	u11440
 12731  015A78                     u11400:
 12732                           
 12733                           ;stkvar	_n @ sp[(-20)+4]
 12734  015A78  0EF0               	movlw	-16
 12735  015A7A  50E3               	movf	plusw1,w,c
 12736  015A7C  E115               	bnz	u11411
 12737  015A7E  0EF1               	movlw	-15
 12738  015A80  50E3               	movf	plusw1,w,c
 12739  015A82  E112               	bnz	u11411
 12740  015A84  0EF2               	movlw	-14
 12741  015A86  50E3               	movf	plusw1,w,c
 12742  015A88  E10F               	bnz	u11411
 12743  015A8A  0EF3               	movlw	-13
 12744  015A8C  50E3               	movf	plusw1,w,c
 12745  015A8E  E10C               	bnz	u11411
 12746  015A90  0EF4               	movlw	-12
 12747  015A92  50E3               	movf	plusw1,w,c
 12748  015A94  E109               	bnz	u11411
 12749  015A96  0EF5               	movlw	-11
 12750  015A98  50E3               	movf	plusw1,w,c
 12751  015A9A  E106               	bnz	u11411
 12752  015A9C  0EF6               	movlw	-10
 12753  015A9E  50E3               	movf	plusw1,w,c
 12754  015AA0  E103               	bnz	u11411
 12755  015AA2  0EF7               	movlw	-9
 12756  015AA4  50E3               	movf	plusw1,w,c
 12757  015AA6  A4D8               	btfss	status,2,c
 12758  015AA8                     u11411:
 12759  015AA8  D6EB               	goto	l11966
 12760                           
 12761                           ;stkvar	_p @ sp[(-20)+18]
 12762  015AAA  0EFF               	movlw	-1
 12763  015AAC  BEE3               	btfsc	plusw1,7,c
 12764  015AAE  D007               	goto	u11420
 12765  015AB0  0EFF               	movlw	-1
 12766  015AB2  50E3               	movf	plusw1,w,c
 12767  015AB4  E103               	bnz	u11421
 12768  015AB6  0EFE               	movlw	-2
 12769  015AB8  04E3               	decf	plusw1,w,c
 12770  015ABA  B0D8               	btfsc	status,0,c
 12771  015ABC                     u11421:
 12772  015ABC  D6E1               	goto	l11966
 12773  015ABE                     u11420:
 12774                           
 12775                           ;stkvar	_w @ sp[(-20)+16]
 12776  015ABE  0EFD               	movlw	-3
 12777  015AC0  BEE3               	btfsc	plusw1,7,c
 12778  015AC2  D009               	goto	u11440
 12779  015AC4  0EFD               	movlw	-3
 12780  015AC6  50E3               	movf	plusw1,w,c
 12781  015AC8  E104               	bnz	u11430
 12782  015ACA  0EFC               	movlw	-4
 12783  015ACC  04E3               	decf	plusw1,w,c
 12784  015ACE  A0D8               	btfss	status,0,c
 12785  015AD0  D002               	goto	u11440
 12786  015AD2                     u11430:
 12787  015AD2  B225               	btfsc	_flags^0,1,c
 12788  015AD4  D6D5               	goto	l11966
 12789  015AD6                     u11440:
 12790                           
 12791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 12792  015AD6  A825               	btfss	_flags^0,4,c
 12793  015AD8  D036               	goto	l12014
 12794                           
 12795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 12796                           ;stkvar	_i @ sp[(-20)+14]
 12797  015ADA  50E1               	movf	fsr1l,w,c
 12798  015ADC  0FFA               	addlw	-6
 12799  015ADE  6ED9               	movwf	fsr2l,c
 12800  015AE0  50E2               	movf	fsr1h,w,c
 12801  015AE2  6EDA               	movwf	fsr2h,c
 12802  015AE4  0EFF               	movlw	255
 12803  015AE6  22DA               	addwfc	fsr2h,f,c
 12804  015AE8  06DE               	decf	postinc2,f,c
 12805  015AEA  0E00               	movlw	0
 12806  015AEC  5ADD               	subwfb	postdec2,f,c
 12807                           
 12808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 12809                           ;stkvar	_x @ sp[(-20)+-11]
 12810                           ;stkvar	_i @ sp[(-20)+14]
 12811  015AEE  0EFA               	movlw	-6
 12812  015AF0  006F FF8C  F00B    	movff	plusw1,btemp+10
 12813  015AF6  0EFB               	movlw	-5
 12814  015AF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 12815  015AFE  0E94               	movlw	low _dbuf
 12816  015B00  240B               	addwf	(btemp+10)^0,w,c
 12817  015B02  6ED9               	movwf	fsr2l,c
 12818  015B04  0E03               	movlw	high _dbuf
 12819  015B06  200C               	addwfc	(btemp+11)^0,w,c
 12820  015B08  6EDA               	movwf	fsr2h,c
 12821  015B0A  0EE1               	movlw	-31
 12822  015B0C  006F FF8F FFDF     	movff	plusw1,indf2
 12823                           
 12824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 12825                           ;stkvar	_i @ sp[(-20)+14]
 12826  015B12  50E1               	movf	fsr1l,w,c
 12827  015B14  0FFA               	addlw	-6
 12828  015B16  6ED9               	movwf	fsr2l,c
 12829  015B18  50E2               	movf	fsr1h,w,c
 12830  015B1A  6EDA               	movwf	fsr2h,c
 12831  015B1C  0EFF               	movlw	255
 12832  015B1E  22DA               	addwfc	fsr2h,f,c
 12833  015B20  06DE               	decf	postinc2,f,c
 12834  015B22  0E00               	movlw	0
 12835  015B24  5ADD               	subwfb	postdec2,f,c
 12836                           
 12837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 12838                           ;stkvar	_i @ sp[(-20)+14]
 12839  015B26  0EFA               	movlw	-6
 12840  015B28  006F FF8C  F00B    	movff	plusw1,btemp+10
 12841  015B2E  0EFB               	movlw	-5
 12842  015B30  006F FF8C  F00C    	movff	plusw1,btemp+11
 12843  015B36  0E94               	movlw	low _dbuf
 12844  015B38  240B               	addwf	(btemp+10)^0,w,c
 12845  015B3A  6ED9               	movwf	fsr2l,c
 12846  015B3C  0E03               	movlw	high _dbuf
 12847  015B3E  200C               	addwfc	(btemp+11)^0,w,c
 12848  015B40  6EDA               	movwf	fsr2h,c
 12849  015B42  0E30               	movlw	48
 12850  015B44  6EDF               	movwf	indf2,c
 12851  015B46                     l12014:
 12852                           
 12853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 12854                           ;stkvar	_w @ sp[(-20)+16]
 12855  015B46  0EFC               	movlw	-4
 12856  015B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12857  015B4E  006F FF8F FFE6     	movff	plusw1,postinc1
 12858                           
 12859                           ;stkvar	_i @ sp[(-22)+14]
 12860  015B54  0E94               	movlw	low _dbuf
 12861  015B56  6E0B               	movwf	(btemp+10)^0,c
 12862  015B58  0E03               	movlw	high _dbuf
 12863  015B5A  6E0C               	movwf	(btemp+11)^0,c
 12864  015B5C  0EF8               	movlw	-8
 12865  015B5E  50E3               	movf	plusw1,w,c
 12866  015B60  260B               	addwf	(btemp+10)^0,f,c
 12867  015B62  0EF9               	movlw	-7
 12868  015B64  50E3               	movf	plusw1,w,c
 12869  015B66  220C               	addwfc	(btemp+11)^0,f,c
 12870  015B68  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12871  015B6E  0060  F033  FFE6   	movff	btemp+11,postinc1
 12872                           
 12873                           ;stkvar	_fp @ sp[(-24)+-2]
 12874  015B74  0EE6               	movlw	-26
 12875  015B76  006F FF8F FFE6     	movff	plusw1,postinc1
 12876  015B7C  006F FF8F FFE6     	movff	plusw1,postinc1
 12877  015B82  EC09  F0C7         	call	_pad	;wreg free
 12878                           
 12879                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 12880  015B86  0EE1               	movlw	225
 12881  015B88  26E1               	addwf	fsr1l,f,c
 12882  015B8A  0EFF               	movlw	255
 12883  015B8C  22E2               	addwfc	fsr1h,f,c
 12884  015B8E  0012               	return		;funcret
 12885  015B90                     __end_of_xtoa:
 12886                           	opt callstack 0
 12887                           
 12888 ;; *************** function _toupper *****************
 12889 ;; Defined at:
 12890 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 12891 ;; Parameters:    Size  Location     Type
 12892 ;;  c               2  [STACK] int 
 12893 ;; Auto vars:     Size  Location     Type
 12894 ;;		None
 12895 ;; Return value:  Size  Location     Type
 12896 ;;                  2  [STACK] int 
 12897 ;; Registers used:
 12898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12899 ;; Tracked objects:
 12900 ;;		On entry : 0/3
 12901 ;;		On exit  : 0/0
 12902 ;;		Unchanged: 0/0
 12903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12908 ;;Total ram usage:        0 bytes
 12909 ;; Hardware stack levels used:    1
 12910 ;; Hardware stack levels required when called:   16
 12911 ;; This function calls:
 12912 ;;		_islower
 12913 ;; This function is called by:
 12914 ;;		_xtoa
 12915 ;; This function uses a reentrant model
 12916 ;;
 12917                           
 12918                           	psect	text47
 12919  019FD2                     __ptext47:
 12920                           	opt callstack 0
 12921  019FD2                     _toupper:
 12922                           	opt callstack 0
 12923                           
 12924                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12925  019FD2  52E6               	movf	postinc1,f,c
 12926  019FD4  52E6               	movf	postinc1,f,c
 12927                           
 12928                           ;stkvar	_c @ sp[(-2)+-2]
 12929                           
 12930                           ;incstack = 0
 12931 ;; hardware stack exceeded
 12932  019FD6  0EFC               	movlw	-4
 12933  019FD8  50E3               	movf	plusw1,w,c
 12934  019FDA  0F9F               	addlw	159
 12935  019FDC  6E0B               	movwf	(btemp+10)^0,c
 12936  019FDE  0EFD               	movlw	-3
 12937  019FE0  006F FF8C  F00C    	movff	plusw1,btemp+11
 12938  019FE6  0EFF               	movlw	255
 12939  019FE8  220C               	addwfc	(btemp+11)^0,f,c
 12940  019FEA  500C               	movf	(btemp+11)^0,w,c
 12941  019FEC  E106               	bnz	u5950
 12942  019FEE  0E1A               	movlw	26
 12943  019FF0  5C0B               	subwf	(btemp+10)^0,w,c
 12944  019FF2  B0D8               	btfsc	status,0,c
 12945  019FF4  D002               	goto	u5950
 12946  019FF6  0E01               	movlw	1
 12947  019FF8  D001               	goto	u5960
 12948  019FFA                     u5950:
 12949  019FFA  0E00               	movlw	0
 12950  019FFC                     u5960:
 12951  019FFC  6E0B               	movwf	(btemp+10)^0,c
 12952  019FFE  6A0C               	clrf	(btemp+11)^0,c
 12953                           
 12954                           ;stkvar	_toupper$6158 @ sp[(-2)+0]
 12955  01A000  0EFE               	movlw	-2
 12956  01A002  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12957  01A008  0EFF               	movlw	-1
 12958  01A00A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12959                           
 12960                           ;stkvar	_toupper$6158 @ sp[(-2)+0]
 12961  01A010  0EFE               	movlw	-2
 12962  01A012  006F FF8C  F001    	movff	plusw1,btemp
 12963  01A018  0EFF               	movlw	-1
 12964  01A01A  50E3               	movf	plusw1,w,c
 12965  01A01C  1001               	iorwf	btemp^0,w,c
 12966  01A01E  B4D8               	btfsc	status,2,c
 12967  01A020  D00D               	goto	l7834
 12968                           
 12969                           ;stkvar	_c @ sp[(-2)+-2]
 12970  01A022  0EFC               	movlw	-4
 12971  01A024  006F FF8C  F001    	movff	plusw1,btemp
 12972  01A02A  0EFD               	movlw	-3
 12973  01A02C  006F FF8C  F002    	movff	plusw1,btemp+1
 12974  01A032  0E5F               	movlw	95
 12975  01A034  1601               	andwf	btemp^0,f,c
 12976  01A036  0E00               	movlw	0
 12977  01A038  1602               	andwf	(btemp+1)^0,f,c
 12978  01A03A  D008               	goto	l3445
 12979  01A03C                     l7834:
 12980                           
 12981                           ;stkvar	_c @ sp[(-2)+-2]
 12982  01A03C  0EFC               	movlw	-4
 12983  01A03E  006F FF8C  F001    	movff	plusw1,btemp
 12984  01A044  0EFD               	movlw	-3
 12985  01A046  006F FF8C  F002    	movff	plusw1,btemp+1
 12986  01A04C                     l3445:
 12987                           
 12988                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12989  01A04C  52E5               	movf	postdec1,f,c
 12990  01A04E  52E5               	movf	postdec1,f,c
 12991  01A050  52E5               	movf	postdec1,f,c
 12992  01A052  52E5               	movf	postdec1,f,c
 12993  01A054  0012               	return		;funcret
 12994  01A056                     __end_of_toupper:
 12995                           	opt callstack 0
 12996                           
 12997 ;; *************** function _islower *****************
 12998 ;; Defined at:
 12999 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 13000 ;; Parameters:    Size  Location     Type
 13001 ;;  c               2  [STACK] int 
 13002 ;; Auto vars:     Size  Location     Type
 13003 ;;		None
 13004 ;; Return value:  Size  Location     Type
 13005 ;;                  2  [STACK] int 
 13006 ;; Registers used:
 13007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13008 ;; Tracked objects:
 13009 ;;		On entry : 0/0
 13010 ;;		On exit  : 0/0
 13011 ;;		Unchanged: 0/0
 13012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13017 ;;Total ram usage:        0 bytes
 13018 ;; Hardware stack levels used:    1
 13019 ;; Hardware stack levels required when called:   15
 13020 ;; This function calls:
 13021 ;;		Nothing
 13022 ;; This function is called by:
 13023 ;;		_toupper
 13024 ;; This function uses a reentrant model
 13025 ;;
 13026                           
 13027                           	psect	text48
 13028  01AC6A                     __ptext48:
 13029                           	opt callstack 0
 13030  01AC6A                     _islower:
 13031                           	opt callstack 0
 13032                           
 13033                           ;stkvar	_c @ sp[(0)+-2]
 13034                           
 13035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13036                           ;incstack = 0
 13037 ;; hardware stack exceeded
 13038  01AC6A  0EFE               	movlw	-2
 13039  01AC6C  50E3               	movf	plusw1,w,c
 13040  01AC6E  0F9F               	addlw	159
 13041  01AC70  6E0B               	movwf	(btemp+10)^0,c
 13042  01AC72  0EFF               	movlw	-1
 13043  01AC74  006F FF8C  F00C    	movff	plusw1,btemp+11
 13044  01AC7A  0EFF               	movlw	255
 13045  01AC7C  220C               	addwfc	(btemp+11)^0,f,c
 13046  01AC7E  500C               	movf	(btemp+11)^0,w,c
 13047  01AC80  E106               	bnz	u5640
 13048  01AC82  0E1A               	movlw	26
 13049  01AC84  5C0B               	subwf	(btemp+10)^0,w,c
 13050  01AC86  B0D8               	btfsc	status,0,c
 13051  01AC88  D002               	goto	u5640
 13052  01AC8A  0E01               	movlw	1
 13053  01AC8C  D001               	goto	u5650
 13054  01AC8E                     u5640:
 13055  01AC8E  0E00               	movlw	0
 13056  01AC90                     u5650:
 13057  01AC90  6E01               	movwf	btemp^0,c
 13058  01AC92  6A02               	clrf	(btemp+1)^0,c
 13059                           
 13060                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13061  01AC94  52E5               	movf	postdec1,f,c
 13062  01AC96  52E5               	movf	postdec1,f,c
 13063  01AC98  0012               	return		;funcret
 13064  01AC9A                     __end_of_islower:
 13065                           	opt callstack 0
 13066                           
 13067 ;; *************** function _isalpha *****************
 13068 ;; Defined at:
 13069 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 13070 ;; Parameters:    Size  Location     Type
 13071 ;;  c               2  [STACK] int 
 13072 ;; Auto vars:     Size  Location     Type
 13073 ;;		None
 13074 ;; Return value:  Size  Location     Type
 13075 ;;                  2  [STACK] int 
 13076 ;; Registers used:
 13077 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 13078 ;; Tracked objects:
 13079 ;;		On entry : 0/0
 13080 ;;		On exit  : 0/0
 13081 ;;		Unchanged: 0/0
 13082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13087 ;;Total ram usage:        0 bytes
 13088 ;; Hardware stack levels used:    1
 13089 ;; Hardware stack levels required when called:   15
 13090 ;; This function calls:
 13091 ;;		Nothing
 13092 ;; This function is called by:
 13093 ;;		_xtoa
 13094 ;; This function uses a reentrant model
 13095 ;;
 13096                           
 13097                           	psect	text49
 13098  01A8C6                     __ptext49:
 13099                           	opt callstack 0
 13100  01A8C6                     _isalpha:
 13101                           	opt callstack 0
 13102                           
 13103                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13104                           ;incstack = 0
 13105 ;; hardware stack exceeded
 13106  01A8C6  0E9F               	movlw	159
 13107  01A8C8  6E0B               	movwf	(btemp+10)^0,c
 13108  01A8CA  0EFF               	movlw	255
 13109  01A8CC  6E0C               	movwf	(btemp+11)^0,c
 13110                           
 13111                           ;stkvar	_c @ sp[(0)+-2]
 13112  01A8CE  0EFE               	movlw	-2
 13113  01A8D0  006F FF8C  F009    	movff	plusw1,btemp+8
 13114  01A8D6  0EFF               	movlw	-1
 13115  01A8D8  006F FF8C  F00A    	movff	plusw1,btemp+9
 13116  01A8DE  0E20               	movlw	32
 13117  01A8E0  1209               	iorwf	(btemp+8)^0,f,c
 13118  01A8E2  0E00               	movlw	0
 13119  01A8E4  120A               	iorwf	(btemp+9)^0,f,c
 13120  01A8E6  500B               	movf	(btemp+10)^0,w,c
 13121  01A8E8  2609               	addwf	(btemp+8)^0,f,c
 13122  01A8EA  500C               	movf	(btemp+11)^0,w,c
 13123  01A8EC  220A               	addwfc	(btemp+9)^0,f,c
 13124  01A8EE  500A               	movf	(btemp+9)^0,w,c
 13125  01A8F0  E106               	bnz	u5930
 13126  01A8F2  0E1A               	movlw	26
 13127  01A8F4  5C09               	subwf	(btemp+8)^0,w,c
 13128  01A8F6  B0D8               	btfsc	status,0,c
 13129  01A8F8  D002               	goto	u5930
 13130  01A8FA  0E01               	movlw	1
 13131  01A8FC  D001               	goto	u5940
 13132  01A8FE                     u5930:
 13133  01A8FE  0E00               	movlw	0
 13134  01A900                     u5940:
 13135  01A900  6E01               	movwf	btemp^0,c
 13136  01A902  6A02               	clrf	(btemp+1)^0,c
 13137                           
 13138                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13139  01A904  52E5               	movf	postdec1,f,c
 13140  01A906  52E5               	movf	postdec1,f,c
 13141  01A908  0012               	return		;funcret
 13142  01A90A                     __end_of_isalpha:
 13143                           	opt callstack 0
 13144                           
 13145 ;; *************** function _utoa *****************
 13146 ;; Defined at:
 13147 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13148 ;; Parameters:    Size  Location     Type
 13149 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13150 ;;		 -> f(6), NULL(0), 
 13151 ;;  d               8  [STACK] unsigned long long 
 13152 ;; Auto vars:     Size  Location     Type
 13153 ;;  n               8  [STACK] unsigned long long 
 13154 ;;  i               2  [STACK] int 
 13155 ;;  w               2  [STACK] int 
 13156 ;;  p               2  [STACK] int 
 13157 ;; Return value:  Size  Location     Type
 13158 ;;                  2  [STACK] int 
 13159 ;; Registers used:
 13160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 13161 ;; Tracked objects:
 13162 ;;		On entry : 0/0
 13163 ;;		On exit  : 0/0
 13164 ;;		Unchanged: 0/0
 13165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13170 ;;Total ram usage:        0 bytes
 13171 ;; Hardware stack levels used:    1
 13172 ;; Hardware stack levels required when called:   20
 13173 ;; This function calls:
 13174 ;;		___lodiv
 13175 ;;		___lomod
 13176 ;;		_pad
 13177 ;; This function is called by:
 13178 ;;		_vfpfcnvrt
 13179 ;; This function uses a reentrant model
 13180 ;;
 13181                           
 13182                           	psect	text50
 13183  01629E                     __ptext50:
 13184                           	opt callstack 0
 13185  01629E                     _utoa:
 13186                           	opt callstack 0
 13187                           
 13188                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13189  01629E  0E0E               	movlw	14
 13190  0162A0  26E1               	addwf	fsr1l,f,c
 13191  0162A2  0E00               	movlw	0
 13192  0162A4  22E2               	addwfc	fsr1h,f,c
 13193                           
 13194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 13195                           
 13196                           ;incstack = 0
 13197 ;; hardware stack exceeded
 13198  0162A6  AE24               	btfss	(_prec+1)^0,7,c
 13199                           
 13200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 13201  0162A8  9225               	bcf	_flags^0,1,c
 13202                           
 13203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 13204  0162AA  BE24               	btfsc	(_prec+1)^0,7,c
 13205  0162AC  D005               	goto	u11210
 13206  0162AE  5024               	movf	(_prec+1)^0,w,c
 13207  0162B0  E110               	bnz	l11914
 13208  0162B2  0423               	decf	_prec^0,w,c
 13209  0162B4  B0D8               	btfsc	status,0,c
 13210  0162B6  D00D               	goto	l11914
 13211  0162B8                     u11210:
 13212  0162B8  0E01               	movlw	1
 13213  0162BA  6E0B               	movwf	(btemp+10)^0,c
 13214  0162BC  0E00               	movlw	0
 13215  0162BE  6E0C               	movwf	(btemp+11)^0,c
 13216                           
 13217                           ;stkvar	_p @ sp[(-14)+12]
 13218  0162C0  0EFE               	movlw	-2
 13219  0162C2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13220  0162C8  0EFF               	movlw	-1
 13221  0162CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 13222  0162D0  D008               	goto	l2263
 13223  0162D2                     l11914:
 13224                           
 13225                           ;stkvar	_p @ sp[(-14)+12]
 13226  0162D2  0EFE               	movlw	-2
 13227  0162D4  0060  F08F  FFE3   	movff	_prec,plusw1
 13228  0162DA  0EFF               	movlw	-1
 13229  0162DC  0060  F093  FFE3   	movff	_prec+1,plusw1
 13230  0162E2                     l2263:
 13231                           
 13232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 13233                           ;stkvar	_w @ sp[(-14)+10]
 13234  0162E2  0EFC               	movlw	-4
 13235  0162E4  0060  F087  FFE3   	movff	_width,plusw1
 13236  0162EA  0EFD               	movlw	-3
 13237  0162EC  0060  F08B  FFE3   	movff	_width+1,plusw1
 13238                           
 13239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 13240                           ;stkvar	_d @ sp[(-14)+-10]
 13241  0162F2  0EE8               	movlw	232
 13242  0162F4  24E1               	addwf	fsr1l,w,c
 13243  0162F6  6ED9               	movwf	fsr2l,c
 13244  0162F8  0EFF               	movlw	255
 13245  0162FA  20E2               	addwfc	fsr1h,w,c
 13246  0162FC  6EDA               	movwf	fsr2h,c
 13247                           
 13248                           ;stkvar	_n @ sp[(-14)+0]
 13249  0162FE  0E08               	movlw	8
 13250  016300  6E01               	movwf	btemp^0,c
 13251  016302  0EF2               	movlw	-14
 13252  016304                     us1122999:
 13253  016304  006F FF7B FFE3     	movff	postinc2,plusw1
 13254  01630A  28E8               	incf	wreg,w,c
 13255  01630C  2E01               	decfsz	btemp^0,f,c
 13256  01630E  D7FA               	bra	us1122999
 13257                           
 13258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 13259  016310  0E4F               	movlw	79
 13260  016312  6E0B               	movwf	(btemp+10)^0,c
 13261  016314  0E00               	movlw	0
 13262  016316  6E0C               	movwf	(btemp+11)^0,c
 13263                           
 13264                           ;stkvar	_i @ sp[(-14)+8]
 13265  016318  0EFA               	movlw	-6
 13266  01631A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13267  016320  0EFB               	movlw	-5
 13268  016322  0060  F033  FFE3   	movff	btemp+11,plusw1
 13269                           
 13270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 13271  016328  0103               	movlb	3	; () banked
 13272  01632A  6BE3               	clrf	(_dbuf+79)& (0+255),b
 13273                           
 13274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13275  01632C  D0FB               	goto	l11932
 13276  01632E                     l11922:
 13277                           
 13278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 13279                           ;stkvar	_i @ sp[(-14)+8]
 13280  01632E  50E1               	movf	fsr1l,w,c
 13281  016330  0FFA               	addlw	-6
 13282  016332  6ED9               	movwf	fsr2l,c
 13283  016334  50E2               	movf	fsr1h,w,c
 13284  016336  6EDA               	movwf	fsr2h,c
 13285  016338  0EFF               	movlw	255
 13286  01633A  22DA               	addwfc	fsr2h,f,c
 13287  01633C  06DE               	decf	postinc2,f,c
 13288  01633E  0E00               	movlw	0
 13289  016340  5ADD               	subwfb	postdec2,f,c
 13290                           
 13291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 13292  016342  0E0A               	movlw	10
 13293  016344  6EE6               	movwf	postinc1,c
 13294  016346  0E00               	movlw	0
 13295  016348  6EE6               	movwf	postinc1,c
 13296  01634A  0E00               	movlw	0
 13297  01634C  6EE6               	movwf	postinc1,c
 13298  01634E  0E00               	movlw	0
 13299  016350  6EE6               	movwf	postinc1,c
 13300  016352  0E00               	movlw	0
 13301  016354  6EE6               	movwf	postinc1,c
 13302  016356  0E00               	movlw	0
 13303  016358  6EE6               	movwf	postinc1,c
 13304  01635A  0E00               	movlw	0
 13305  01635C  6EE6               	movwf	postinc1,c
 13306  01635E  0E00               	movlw	0
 13307  016360  6EE6               	movwf	postinc1,c
 13308                           
 13309                           ;stkvar	_n @ sp[(-22)+0]
 13310  016362  50E1               	movf	fsr1l,w,c
 13311  016364  0FEA               	addlw	-22
 13312  016366  6ED9               	movwf	fsr2l,c
 13313  016368  50E2               	movf	fsr1h,w,c
 13314  01636A  6EDA               	movwf	fsr2h,c
 13315  01636C  0EFF               	movlw	255
 13316  01636E  22DA               	addwfc	fsr2h,f,c
 13317  016370  006F FF7B FFE6     	movff	postinc2,postinc1
 13318  016376  006F FF7B FFE6     	movff	postinc2,postinc1
 13319  01637C  006F FF7B FFE6     	movff	postinc2,postinc1
 13320  016382  006F FF7B FFE6     	movff	postinc2,postinc1
 13321  016388  006F FF7B FFE6     	movff	postinc2,postinc1
 13322  01638E  006F FF7B FFE6     	movff	postinc2,postinc1
 13323  016394  006F FF7B FFE6     	movff	postinc2,postinc1
 13324  01639A  006F FF7B FFE6     	movff	postinc2,postinc1
 13325  0163A0  EC16  F0C4         	call	___lomod	;wreg free
 13326  0163A4  52E5               	movf	postdec1,f,c
 13327  0163A6  006F FF9C  F018    	movff	indf1,btemp+23
 13328  0163AC  52E5               	movf	postdec1,f,c
 13329  0163AE  006F FF9C  F017    	movff	indf1,btemp+22
 13330  0163B4  52E5               	movf	postdec1,f,c
 13331  0163B6  006F FF9C  F016    	movff	indf1,btemp+21
 13332  0163BC  52E5               	movf	postdec1,f,c
 13333  0163BE  006F FF9C  F015    	movff	indf1,btemp+20
 13334  0163C4  52E5               	movf	postdec1,f,c
 13335  0163C6  006F FF9C  F014    	movff	indf1,btemp+19
 13336  0163CC  52E5               	movf	postdec1,f,c
 13337  0163CE  006F FF9C  F013    	movff	indf1,btemp+18
 13338  0163D4  52E5               	movf	postdec1,f,c
 13339  0163D6  006F FF9C  F012    	movff	indf1,btemp+17
 13340  0163DC  52E5               	movf	postdec1,f,c
 13341  0163DE  006F FF9C  F011    	movff	indf1,btemp+16
 13342  0163E4  0EF8               	movlw	248
 13343  0163E6  26E1               	addwf	fsr1l,f,c
 13344  0163E8  0EFF               	movlw	255
 13345  0163EA  22E2               	addwfc	fsr1h,f,c
 13346  0163EC  0E30               	movlw	48
 13347  0163EE  2611               	addwf	(btemp+16)^0,f,c
 13348                           
 13349                           ;stkvar	_i @ sp[(-14)+8]
 13350  0163F0  0EFA               	movlw	-6
 13351  0163F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 13352  0163F8  0EFB               	movlw	-5
 13353  0163FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 13354  016400  0E94               	movlw	low _dbuf
 13355  016402  240B               	addwf	(btemp+10)^0,w,c
 13356  016404  6ED9               	movwf	fsr2l,c
 13357  016406  0E03               	movlw	high _dbuf
 13358  016408  200C               	addwfc	(btemp+11)^0,w,c
 13359  01640A  6EDA               	movwf	fsr2h,c
 13360  01640C  0060  F047  FFDF   	movff	btemp+16,indf2
 13361                           
 13362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 13363                           ;stkvar	_p @ sp[(-14)+12]
 13364  016412  50E1               	movf	fsr1l,w,c
 13365  016414  0FFE               	addlw	-2
 13366  016416  6ED9               	movwf	fsr2l,c
 13367  016418  50E2               	movf	fsr1h,w,c
 13368  01641A  6EDA               	movwf	fsr2h,c
 13369  01641C  0EFF               	movlw	255
 13370  01641E  22DA               	addwfc	fsr2h,f,c
 13371  016420  06DE               	decf	postinc2,f,c
 13372  016422  0E00               	movlw	0
 13373  016424  5ADD               	subwfb	postdec2,f,c
 13374                           
 13375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 13376                           ;stkvar	_w @ sp[(-14)+10]
 13377  016426  50E1               	movf	fsr1l,w,c
 13378  016428  0FFC               	addlw	-4
 13379  01642A  6ED9               	movwf	fsr2l,c
 13380  01642C  50E2               	movf	fsr1h,w,c
 13381  01642E  6EDA               	movwf	fsr2h,c
 13382  016430  0EFF               	movlw	255
 13383  016432  22DA               	addwfc	fsr2h,f,c
 13384  016434  06DE               	decf	postinc2,f,c
 13385  016436  0E00               	movlw	0
 13386  016438  5ADD               	subwfb	postdec2,f,c
 13387                           
 13388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 13389  01643A  0E0A               	movlw	10
 13390  01643C  6EE6               	movwf	postinc1,c
 13391  01643E  0E00               	movlw	0
 13392  016440  6EE6               	movwf	postinc1,c
 13393  016442  0E00               	movlw	0
 13394  016444  6EE6               	movwf	postinc1,c
 13395  016446  0E00               	movlw	0
 13396  016448  6EE6               	movwf	postinc1,c
 13397  01644A  0E00               	movlw	0
 13398  01644C  6EE6               	movwf	postinc1,c
 13399  01644E  0E00               	movlw	0
 13400  016450  6EE6               	movwf	postinc1,c
 13401  016452  0E00               	movlw	0
 13402  016454  6EE6               	movwf	postinc1,c
 13403  016456  0E00               	movlw	0
 13404  016458  6EE6               	movwf	postinc1,c
 13405                           
 13406                           ;stkvar	_n @ sp[(-22)+0]
 13407  01645A  50E1               	movf	fsr1l,w,c
 13408  01645C  0FEA               	addlw	-22
 13409  01645E  6ED9               	movwf	fsr2l,c
 13410  016460  50E2               	movf	fsr1h,w,c
 13411  016462  6EDA               	movwf	fsr2h,c
 13412  016464  0EFF               	movlw	255
 13413  016466  22DA               	addwfc	fsr2h,f,c
 13414  016468  006F FF7B FFE6     	movff	postinc2,postinc1
 13415  01646E  006F FF7B FFE6     	movff	postinc2,postinc1
 13416  016474  006F FF7B FFE6     	movff	postinc2,postinc1
 13417  01647A  006F FF7B FFE6     	movff	postinc2,postinc1
 13418  016480  006F FF7B FFE6     	movff	postinc2,postinc1
 13419  016486  006F FF7B FFE6     	movff	postinc2,postinc1
 13420  01648C  006F FF7B FFE6     	movff	postinc2,postinc1
 13421  016492  006F FF7B FFE6     	movff	postinc2,postinc1
 13422  016498  EC22  F0BF         	call	___lodiv	;wreg free
 13423  01649C  52E5               	movf	postdec1,f,c
 13424  01649E  006F FF9C  F018    	movff	indf1,btemp+23
 13425  0164A4  52E5               	movf	postdec1,f,c
 13426  0164A6  006F FF9C  F017    	movff	indf1,btemp+22
 13427  0164AC  52E5               	movf	postdec1,f,c
 13428  0164AE  006F FF9C  F016    	movff	indf1,btemp+21
 13429  0164B4  52E5               	movf	postdec1,f,c
 13430  0164B6  006F FF9C  F015    	movff	indf1,btemp+20
 13431  0164BC  52E5               	movf	postdec1,f,c
 13432  0164BE  006F FF9C  F014    	movff	indf1,btemp+19
 13433  0164C4  52E5               	movf	postdec1,f,c
 13434  0164C6  006F FF9C  F013    	movff	indf1,btemp+18
 13435  0164CC  52E5               	movf	postdec1,f,c
 13436  0164CE  006F FF9C  F012    	movff	indf1,btemp+17
 13437  0164D4  52E5               	movf	postdec1,f,c
 13438  0164D6  006F FF9C  F011    	movff	indf1,btemp+16
 13439  0164DC  0EF8               	movlw	248
 13440  0164DE  26E1               	addwf	fsr1l,f,c
 13441  0164E0  0EFF               	movlw	255
 13442  0164E2  22E2               	addwfc	fsr1h,f,c
 13443                           
 13444                           ;stkvar	_n @ sp[(-14)+0]
 13445  0164E4  0EF2               	movlw	-14
 13446  0164E6  0060  F047  FFE3   	movff	btemp+16,plusw1
 13447  0164EC  0EF3               	movlw	-13
 13448  0164EE  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13449  0164F4  0EF4               	movlw	-12
 13450  0164F6  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13451  0164FC  0EF5               	movlw	-11
 13452  0164FE  0060  F053  FFE3   	movff	btemp+19,plusw1
 13453  016504  0EF6               	movlw	-10
 13454  016506  0060  F057  FFE3   	movff	btemp+20,plusw1
 13455  01650C  0EF7               	movlw	-9
 13456  01650E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13457  016514  0EF8               	movlw	-8
 13458  016516  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13459  01651C  0EF9               	movlw	-7
 13460  01651E  0060  F063  FFE3   	movff	btemp+23,plusw1
 13461  016524                     l11932:
 13462                           
 13463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13464                           ;stkvar	_i @ sp[(-14)+8]
 13465  016524  0EFA               	movlw	-6
 13466  016526  006F FF8C  F001    	movff	plusw1,btemp
 13467  01652C  0EFB               	movlw	-5
 13468  01652E  50E3               	movf	plusw1,w,c
 13469  016530  1001               	iorwf	btemp^0,w,c
 13470  016532  B4D8               	btfsc	status,2,c
 13471  016534  D02F               	goto	u11270
 13472                           
 13473                           ;stkvar	_n @ sp[(-14)+0]
 13474  016536  0EF2               	movlw	-14
 13475  016538  50E3               	movf	plusw1,w,c
 13476  01653A  E115               	bnz	u11241
 13477  01653C  0EF3               	movlw	-13
 13478  01653E  50E3               	movf	plusw1,w,c
 13479  016540  E112               	bnz	u11241
 13480  016542  0EF4               	movlw	-12
 13481  016544  50E3               	movf	plusw1,w,c
 13482  016546  E10F               	bnz	u11241
 13483  016548  0EF5               	movlw	-11
 13484  01654A  50E3               	movf	plusw1,w,c
 13485  01654C  E10C               	bnz	u11241
 13486  01654E  0EF6               	movlw	-10
 13487  016550  50E3               	movf	plusw1,w,c
 13488  016552  E109               	bnz	u11241
 13489  016554  0EF7               	movlw	-9
 13490  016556  50E3               	movf	plusw1,w,c
 13491  016558  E106               	bnz	u11241
 13492  01655A  0EF8               	movlw	-8
 13493  01655C  50E3               	movf	plusw1,w,c
 13494  01655E  E103               	bnz	u11241
 13495  016560  0EF9               	movlw	-7
 13496  016562  50E3               	movf	plusw1,w,c
 13497  016564  A4D8               	btfss	status,2,c
 13498  016566                     u11241:
 13499  016566  D6E3               	goto	l11922
 13500                           
 13501                           ;stkvar	_p @ sp[(-14)+12]
 13502  016568  0EFF               	movlw	-1
 13503  01656A  BEE3               	btfsc	plusw1,7,c
 13504  01656C  D007               	goto	u11250
 13505  01656E  0EFF               	movlw	-1
 13506  016570  50E3               	movf	plusw1,w,c
 13507  016572  E103               	bnz	u11251
 13508  016574  0EFE               	movlw	-2
 13509  016576  04E3               	decf	plusw1,w,c
 13510  016578  B0D8               	btfsc	status,0,c
 13511  01657A                     u11251:
 13512  01657A  D6D9               	goto	l11922
 13513  01657C                     u11250:
 13514                           
 13515                           ;stkvar	_w @ sp[(-14)+10]
 13516  01657C  0EFD               	movlw	-3
 13517  01657E  BEE3               	btfsc	plusw1,7,c
 13518  016580  D009               	goto	u11270
 13519  016582  0EFD               	movlw	-3
 13520  016584  50E3               	movf	plusw1,w,c
 13521  016586  E104               	bnz	u11260
 13522  016588  0EFC               	movlw	-4
 13523  01658A  04E3               	decf	plusw1,w,c
 13524  01658C  A0D8               	btfss	status,0,c
 13525  01658E  D002               	goto	u11270
 13526  016590                     u11260:
 13527  016590  B225               	btfsc	_flags^0,1,c
 13528  016592  D6CD               	goto	l11922
 13529  016594                     u11270:
 13530                           
 13531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 13532                           ;stkvar	_w @ sp[(-14)+10]
 13533  016594  0EFC               	movlw	-4
 13534  016596  006F FF8F FFE6     	movff	plusw1,postinc1
 13535  01659C  006F FF8F FFE6     	movff	plusw1,postinc1
 13536                           
 13537                           ;stkvar	_i @ sp[(-16)+8]
 13538  0165A2  0E94               	movlw	low _dbuf
 13539  0165A4  6E0B               	movwf	(btemp+10)^0,c
 13540  0165A6  0E03               	movlw	high _dbuf
 13541  0165A8  6E0C               	movwf	(btemp+11)^0,c
 13542  0165AA  0EF8               	movlw	-8
 13543  0165AC  50E3               	movf	plusw1,w,c
 13544  0165AE  260B               	addwf	(btemp+10)^0,f,c
 13545  0165B0  0EF9               	movlw	-7
 13546  0165B2  50E3               	movf	plusw1,w,c
 13547  0165B4  220C               	addwfc	(btemp+11)^0,f,c
 13548  0165B6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13549  0165BC  0060  F033  FFE6   	movff	btemp+11,postinc1
 13550                           
 13551                           ;stkvar	_fp @ sp[(-18)+-2]
 13552  0165C2  0EEC               	movlw	-20
 13553  0165C4  006F FF8F FFE6     	movff	plusw1,postinc1
 13554  0165CA  006F FF8F FFE6     	movff	plusw1,postinc1
 13555  0165D0  EC09  F0C7         	call	_pad	;wreg free
 13556                           
 13557                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 13558  0165D4  0EE8               	movlw	232
 13559  0165D6  26E1               	addwf	fsr1l,f,c
 13560  0165D8  0EFF               	movlw	255
 13561  0165DA  22E2               	addwfc	fsr1h,f,c
 13562  0165DC  0012               	return		;funcret
 13563  0165DE                     __end_of_utoa:
 13564                           	opt callstack 0
 13565                           
 13566 ;; *************** function ___lomod *****************
 13567 ;; Defined at:
 13568 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 13569 ;; Parameters:    Size  Location     Type
 13570 ;;  dividend        8  [STACK] unsigned long long 
 13571 ;;  divisor         8  [STACK] unsigned long long 
 13572 ;; Auto vars:     Size  Location     Type
 13573 ;;  counter         1  [STACK] unsigned char 
 13574 ;; Return value:  Size  Location     Type
 13575 ;;                  8  [STACK] unsigned long long 
 13576 ;; Registers used:
 13577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13578 ;; Tracked objects:
 13579 ;;		On entry : 0/3
 13580 ;;		On exit  : 0/0
 13581 ;;		Unchanged: 0/0
 13582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13587 ;;Total ram usage:        0 bytes
 13588 ;; Hardware stack levels used:    1
 13589 ;; Hardware stack levels required when called:   15
 13590 ;; This function calls:
 13591 ;;		Nothing
 13592 ;; This function is called by:
 13593 ;;		_utoa
 13594 ;; This function uses a reentrant model
 13595 ;;
 13596                           
 13597                           	psect	text51
 13598  01882C                     __ptext51:
 13599                           	opt callstack 0
 13600  01882C                     ___lomod:
 13601                           	opt callstack 0
 13602                           
 13603                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13604  01882C  52E6               	movf	postinc1,f,c
 13605                           
 13606                           ;stkvar	_divisor @ sp[(-1)+-16]
 13607                           
 13608                           ;incstack = 0
 13609 ;; hardware stack exceeded
 13610  01882E  0EEF               	movlw	-17
 13611  018830  50E3               	movf	plusw1,w,c
 13612  018832  E116               	bnz	u7080
 13613  018834  0EF0               	movlw	-16
 13614  018836  50E3               	movf	plusw1,w,c
 13615  018838  E113               	bnz	u7080
 13616  01883A  0EF1               	movlw	-15
 13617  01883C  50E3               	movf	plusw1,w,c
 13618  01883E  E110               	bnz	u7080
 13619  018840  0EF2               	movlw	-14
 13620  018842  50E3               	movf	plusw1,w,c
 13621  018844  E10D               	bnz	u7080
 13622  018846  0EF3               	movlw	-13
 13623  018848  50E3               	movf	plusw1,w,c
 13624  01884A  E10A               	bnz	u7080
 13625  01884C  0EF4               	movlw	-12
 13626  01884E  50E3               	movf	plusw1,w,c
 13627  018850  E107               	bnz	u7080
 13628  018852  0EF5               	movlw	-11
 13629  018854  50E3               	movf	plusw1,w,c
 13630  018856  E104               	bnz	u7080
 13631  018858  0EF6               	movlw	-10
 13632  01885A  50E3               	movf	plusw1,w,c
 13633  01885C  B4D8               	btfsc	status,2,c
 13634  01885E  D075               	goto	u7110
 13635  018860                     u7080:
 13636                           
 13637                           ;stkvar	_counter @ sp[(-1)+0]
 13638  018860  0EFF               	movlw	-1
 13639  018862  6AE3               	clrf	plusw1,c
 13640  018864  D012               	goto	L11
 13641  018866                     l8444:
 13642                           
 13643                           ;stkvar	_divisor @ sp[(-1)+-16]
 13644  018866  90D8               	bcf	status,0,c
 13645  018868  0EEF               	movlw	-17
 13646  01886A  36E3               	rlcf	plusw1,f,c
 13647  01886C  0EF0               	movlw	-16
 13648  01886E  36E3               	rlcf	plusw1,f,c
 13649  018870  0EF1               	movlw	-15
 13650  018872  36E3               	rlcf	plusw1,f,c
 13651  018874  0EF2               	movlw	-14
 13652  018876  36E3               	rlcf	plusw1,f,c
 13653  018878  0EF3               	movlw	-13
 13654  01887A  36E3               	rlcf	plusw1,f,c
 13655  01887C  0EF4               	movlw	-12
 13656  01887E  36E3               	rlcf	plusw1,f,c
 13657  018880  0EF5               	movlw	-11
 13658  018882  36E3               	rlcf	plusw1,f,c
 13659  018884  0EF6               	movlw	-10
 13660  018886  36E3               	rlcf	plusw1,f,c
 13661                           
 13662                           ;stkvar	_counter @ sp[(-1)+0]
 13663  018888  0EFF               	movlw	-1
 13664  01888A                     L11:
 13665  01888A  2AE3               	incf	plusw1,f,c
 13666                           
 13667                           ;stkvar	_divisor @ sp[(-1)+-16]
 13668  01888C  0EF6               	movlw	-10
 13669  01888E  AEE3               	btfss	plusw1,7,c
 13670  018890  D7EA               	goto	l8444
 13671  018892                     u7090:
 13672                           
 13673                           ;stkvar	_divisor @ sp[(-1)+-16]
 13674                           ;stkvar	_dividend @ sp[(-1)+-8]
 13675  018892  50E1               	movf	fsr1l,w,c
 13676  018894  0FF7               	addlw	-9
 13677  018896  6ED9               	movwf	fsr2l,c
 13678  018898  50E2               	movf	fsr1h,w,c
 13679  01889A  6EDA               	movwf	fsr2h,c
 13680  01889C  0EFF               	movlw	255
 13681  01889E  22DA               	addwfc	fsr2h,f,c
 13682  0188A0  0EEF               	movlw	-17
 13683  0188A2  50E3               	movf	plusw1,w,c
 13684  0188A4  5CDE               	subwf	postinc2,w,c
 13685  0188A6  0EF0               	movlw	-16
 13686  0188A8  50E3               	movf	plusw1,w,c
 13687  0188AA  58DE               	subwfb	postinc2,w,c
 13688  0188AC  0EF1               	movlw	-15
 13689  0188AE  50E3               	movf	plusw1,w,c
 13690  0188B0  58DE               	subwfb	postinc2,w,c
 13691  0188B2  0EF2               	movlw	-14
 13692  0188B4  50E3               	movf	plusw1,w,c
 13693  0188B6  58DE               	subwfb	postinc2,w,c
 13694  0188B8  0EF3               	movlw	-13
 13695  0188BA  50E3               	movf	plusw1,w,c
 13696  0188BC  58DE               	subwfb	postinc2,w,c
 13697  0188BE  0EF4               	movlw	-12
 13698  0188C0  50E3               	movf	plusw1,w,c
 13699  0188C2  58DE               	subwfb	postinc2,w,c
 13700  0188C4  0EF5               	movlw	-11
 13701  0188C6  50E3               	movf	plusw1,w,c
 13702  0188C8  58DE               	subwfb	postinc2,w,c
 13703  0188CA  0EF6               	movlw	-10
 13704  0188CC  50E3               	movf	plusw1,w,c
 13705  0188CE  58DE               	subwfb	postinc2,w,c
 13706  0188D0  A0D8               	btfss	status,0,c
 13707  0188D2  D01F               	goto	l8452
 13708                           
 13709                           ;stkvar	_divisor @ sp[(-1)+-16]
 13710                           ;stkvar	_dividend @ sp[(-1)+-8]
 13711  0188D4  50E1               	movf	fsr1l,w,c
 13712  0188D6  0FF7               	addlw	-9
 13713  0188D8  6ED9               	movwf	fsr2l,c
 13714  0188DA  50E2               	movf	fsr1h,w,c
 13715  0188DC  6EDA               	movwf	fsr2h,c
 13716  0188DE  0EFF               	movlw	255
 13717  0188E0  22DA               	addwfc	fsr2h,f,c
 13718  0188E2  0EEF               	movlw	-17
 13719  0188E4  50E3               	movf	plusw1,w,c
 13720  0188E6  5EDE               	subwf	postinc2,f,c
 13721  0188E8  0EF0               	movlw	-16
 13722  0188EA  50E3               	movf	plusw1,w,c
 13723  0188EC  5ADE               	subwfb	postinc2,f,c
 13724  0188EE  0EF1               	movlw	-15
 13725  0188F0  50E3               	movf	plusw1,w,c
 13726  0188F2  5ADE               	subwfb	postinc2,f,c
 13727  0188F4  0EF2               	movlw	-14
 13728  0188F6  50E3               	movf	plusw1,w,c
 13729  0188F8  5ADE               	subwfb	postinc2,f,c
 13730  0188FA  0EF3               	movlw	-13
 13731  0188FC  50E3               	movf	plusw1,w,c
 13732  0188FE  5ADE               	subwfb	postinc2,f,c
 13733  018900  0EF4               	movlw	-12
 13734  018902  50E3               	movf	plusw1,w,c
 13735  018904  5ADE               	subwfb	postinc2,f,c
 13736  018906  0EF5               	movlw	-11
 13737  018908  50E3               	movf	plusw1,w,c
 13738  01890A  5ADE               	subwfb	postinc2,f,c
 13739  01890C  0EF6               	movlw	-10
 13740  01890E  50E3               	movf	plusw1,w,c
 13741  018910  5ADE               	subwfb	postinc2,f,c
 13742  018912                     l8452:
 13743                           
 13744                           ;stkvar	_divisor @ sp[(-1)+-16]
 13745  018912  90D8               	bcf	status,0,c
 13746  018914  0EF6               	movlw	-10
 13747  018916  32E3               	rrcf	plusw1,f,c
 13748  018918  0EF5               	movlw	-11
 13749  01891A  32E3               	rrcf	plusw1,f,c
 13750  01891C  0EF4               	movlw	-12
 13751  01891E  32E3               	rrcf	plusw1,f,c
 13752  018920  0EF3               	movlw	-13
 13753  018922  32E3               	rrcf	plusw1,f,c
 13754  018924  0EF2               	movlw	-14
 13755  018926  32E3               	rrcf	plusw1,f,c
 13756  018928  0EF1               	movlw	-15
 13757  01892A  32E3               	rrcf	plusw1,f,c
 13758  01892C  0EF0               	movlw	-16
 13759  01892E  32E3               	rrcf	plusw1,f,c
 13760  018930  0EEF               	movlw	-17
 13761  018932  32E3               	rrcf	plusw1,f,c
 13762                           
 13763                           ;stkvar	_counter @ sp[(-1)+0]
 13764  018934  0EFF               	movlw	-1
 13765  018936  50E3               	movf	plusw1,w,c
 13766  018938  6E01               	movwf	btemp^0,c
 13767  01893A  0E01               	movlw	1
 13768  01893C  5E01               	subwf	btemp^0,f,c
 13769  01893E  0EFF               	movlw	-1
 13770  018940  0060  F007  FFE3   	movff	btemp,plusw1
 13771  018946  A4D8               	btfss	status,2,c
 13772  018948  D7A4               	goto	u7090
 13773  01894A                     u7110:
 13774                           
 13775                           ;stkvar	_dividend @ sp[(-1)+-8]
 13776  01894A  0EF7               	movlw	247
 13777  01894C  24E1               	addwf	fsr1l,w,c
 13778  01894E  6ED9               	movwf	fsr2l,c
 13779  018950  0EFF               	movlw	255
 13780  018952  20E2               	addwfc	fsr1h,w,c
 13781  018954  6EDA               	movwf	fsr2h,c
 13782                           
 13783                           ;stkvar	?___lomod @ sp[(-1)+-8]
 13784  018956  0E08               	movlw	8
 13785  018958  6E01               	movwf	btemp^0,c
 13786  01895A  0EF7               	movlw	-9
 13787  01895C                     us712999:
 13788  01895C  006F FF7B FFE3     	movff	postinc2,plusw1
 13789  018962  28E8               	incf	wreg,w,c
 13790  018964  2E01               	decfsz	btemp^0,f,c
 13791  018966  D7FA               	bra	us712999
 13792                           
 13793                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 13794  018968  52E5               	movf	postdec1,f,c
 13795  01896A  0012               	return		;funcret
 13796  01896C                     __end_of___lomod:
 13797                           	opt callstack 0
 13798                           
 13799 ;; *************** function ___lodiv *****************
 13800 ;; Defined at:
 13801 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 13802 ;; Parameters:    Size  Location     Type
 13803 ;;  dividend        8  [STACK] unsigned long long 
 13804 ;;  divisor         8  [STACK] unsigned long long 
 13805 ;; Auto vars:     Size  Location     Type
 13806 ;;  quotient        8  [STACK] unsigned long long 
 13807 ;;  counter         1  [STACK] unsigned char 
 13808 ;; Return value:  Size  Location     Type
 13809 ;;                  8  [STACK] unsigned long long 
 13810 ;; Registers used:
 13811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13812 ;; Tracked objects:
 13813 ;;		On entry : 0/3
 13814 ;;		On exit  : 0/0
 13815 ;;		Unchanged: 0/0
 13816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13821 ;;Total ram usage:        0 bytes
 13822 ;; Hardware stack levels used:    1
 13823 ;; Hardware stack levels required when called:   15
 13824 ;; This function calls:
 13825 ;;		Nothing
 13826 ;; This function is called by:
 13827 ;;		_utoa
 13828 ;; This function uses a reentrant model
 13829 ;;
 13830                           
 13831                           	psect	text52
 13832  017E44                     __ptext52:
 13833                           	opt callstack 0
 13834  017E44                     ___lodiv:
 13835                           	opt callstack 0
 13836                           
 13837                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13838  017E44  0E09               	movlw	9
 13839  017E46  26E1               	addwf	fsr1l,f,c
 13840  017E48  0E00               	movlw	0
 13841  017E4A  22E2               	addwfc	fsr1h,f,c
 13842                           
 13843                           ;stkvar	_quotient @ sp[(-9)+0]
 13844                           
 13845                           ;incstack = 0
 13846 ;; hardware stack exceeded
 13847  017E4C  0E07               	movlw	7
 13848  017E4E  6E01               	movwf	btemp^0,c
 13849  017E50  0EF7               	movlw	-9
 13850  017E52                     u7021:
 13851  017E52  6AE3               	clrf	plusw1,c
 13852  017E54  2AE8               	incf	wreg,f,c
 13853  017E56  0601               	decf	btemp^0,f,c
 13854  017E58  E2FC               	bc	u7021
 13855                           
 13856                           ;stkvar	_divisor @ sp[(-9)+-16]
 13857  017E5A  0EE7               	movlw	-25
 13858  017E5C  50E3               	movf	plusw1,w,c
 13859  017E5E  E116               	bnz	u7030
 13860  017E60  0EE8               	movlw	-24
 13861  017E62  50E3               	movf	plusw1,w,c
 13862  017E64  E113               	bnz	u7030
 13863  017E66  0EE9               	movlw	-23
 13864  017E68  50E3               	movf	plusw1,w,c
 13865  017E6A  E110               	bnz	u7030
 13866  017E6C  0EEA               	movlw	-22
 13867  017E6E  50E3               	movf	plusw1,w,c
 13868  017E70  E10D               	bnz	u7030
 13869  017E72  0EEB               	movlw	-21
 13870  017E74  50E3               	movf	plusw1,w,c
 13871  017E76  E10A               	bnz	u7030
 13872  017E78  0EEC               	movlw	-20
 13873  017E7A  50E3               	movf	plusw1,w,c
 13874  017E7C  E107               	bnz	u7030
 13875  017E7E  0EED               	movlw	-19
 13876  017E80  50E3               	movf	plusw1,w,c
 13877  017E82  E104               	bnz	u7030
 13878  017E84  0EEE               	movlw	-18
 13879  017E86  50E3               	movf	plusw1,w,c
 13880  017E88  B4D8               	btfsc	status,2,c
 13881  017E8A  D088               	goto	u7060
 13882  017E8C                     u7030:
 13883                           
 13884                           ;stkvar	_counter @ sp[(-9)+8]
 13885  017E8C  0EFF               	movlw	-1
 13886  017E8E  6AE3               	clrf	plusw1,c
 13887  017E90  D012               	goto	L12
 13888  017E92                     l8420:
 13889                           
 13890                           ;stkvar	_divisor @ sp[(-9)+-16]
 13891  017E92  90D8               	bcf	status,0,c
 13892  017E94  0EE7               	movlw	-25
 13893  017E96  36E3               	rlcf	plusw1,f,c
 13894  017E98  0EE8               	movlw	-24
 13895  017E9A  36E3               	rlcf	plusw1,f,c
 13896  017E9C  0EE9               	movlw	-23
 13897  017E9E  36E3               	rlcf	plusw1,f,c
 13898  017EA0  0EEA               	movlw	-22
 13899  017EA2  36E3               	rlcf	plusw1,f,c
 13900  017EA4  0EEB               	movlw	-21
 13901  017EA6  36E3               	rlcf	plusw1,f,c
 13902  017EA8  0EEC               	movlw	-20
 13903  017EAA  36E3               	rlcf	plusw1,f,c
 13904  017EAC  0EED               	movlw	-19
 13905  017EAE  36E3               	rlcf	plusw1,f,c
 13906  017EB0  0EEE               	movlw	-18
 13907  017EB2  36E3               	rlcf	plusw1,f,c
 13908                           
 13909                           ;stkvar	_counter @ sp[(-9)+8]
 13910  017EB4  0EFF               	movlw	-1
 13911  017EB6                     L12:
 13912  017EB6  2AE3               	incf	plusw1,f,c
 13913                           
 13914                           ;stkvar	_divisor @ sp[(-9)+-16]
 13915  017EB8  0EEE               	movlw	-18
 13916  017EBA  AEE3               	btfss	plusw1,7,c
 13917  017EBC  D7EA               	goto	l8420
 13918  017EBE                     u7040:
 13919                           
 13920                           ;stkvar	_quotient @ sp[(-9)+0]
 13921  017EBE  90D8               	bcf	status,0,c
 13922  017EC0  0EF7               	movlw	-9
 13923  017EC2  36E3               	rlcf	plusw1,f,c
 13924  017EC4  0EF8               	movlw	-8
 13925  017EC6  36E3               	rlcf	plusw1,f,c
 13926  017EC8  0EF9               	movlw	-7
 13927  017ECA  36E3               	rlcf	plusw1,f,c
 13928  017ECC  0EFA               	movlw	-6
 13929  017ECE  36E3               	rlcf	plusw1,f,c
 13930  017ED0  0EFB               	movlw	-5
 13931  017ED2  36E3               	rlcf	plusw1,f,c
 13932  017ED4  0EFC               	movlw	-4
 13933  017ED6  36E3               	rlcf	plusw1,f,c
 13934  017ED8  0EFD               	movlw	-3
 13935  017EDA  36E3               	rlcf	plusw1,f,c
 13936  017EDC  0EFE               	movlw	-2
 13937  017EDE  36E3               	rlcf	plusw1,f,c
 13938                           
 13939                           ;stkvar	_divisor @ sp[(-9)+-16]
 13940                           ;stkvar	_dividend @ sp[(-9)+-8]
 13941  017EE0  50E1               	movf	fsr1l,w,c
 13942  017EE2  0FEF               	addlw	-17
 13943  017EE4  6ED9               	movwf	fsr2l,c
 13944  017EE6  50E2               	movf	fsr1h,w,c
 13945  017EE8  6EDA               	movwf	fsr2h,c
 13946  017EEA  0EFF               	movlw	255
 13947  017EEC  22DA               	addwfc	fsr2h,f,c
 13948  017EEE  0EE7               	movlw	-25
 13949  017EF0  50E3               	movf	plusw1,w,c
 13950  017EF2  5CDE               	subwf	postinc2,w,c
 13951  017EF4  0EE8               	movlw	-24
 13952  017EF6  50E3               	movf	plusw1,w,c
 13953  017EF8  58DE               	subwfb	postinc2,w,c
 13954  017EFA  0EE9               	movlw	-23
 13955  017EFC  50E3               	movf	plusw1,w,c
 13956  017EFE  58DE               	subwfb	postinc2,w,c
 13957  017F00  0EEA               	movlw	-22
 13958  017F02  50E3               	movf	plusw1,w,c
 13959  017F04  58DE               	subwfb	postinc2,w,c
 13960  017F06  0EEB               	movlw	-21
 13961  017F08  50E3               	movf	plusw1,w,c
 13962  017F0A  58DE               	subwfb	postinc2,w,c
 13963  017F0C  0EEC               	movlw	-20
 13964  017F0E  50E3               	movf	plusw1,w,c
 13965  017F10  58DE               	subwfb	postinc2,w,c
 13966  017F12  0EED               	movlw	-19
 13967  017F14  50E3               	movf	plusw1,w,c
 13968  017F16  58DE               	subwfb	postinc2,w,c
 13969  017F18  0EEE               	movlw	-18
 13970  017F1A  50E3               	movf	plusw1,w,c
 13971  017F1C  58DE               	subwfb	postinc2,w,c
 13972  017F1E  A0D8               	btfss	status,0,c
 13973  017F20  D021               	goto	l8432
 13974                           
 13975                           ;stkvar	_divisor @ sp[(-9)+-16]
 13976                           ;stkvar	_dividend @ sp[(-9)+-8]
 13977  017F22  50E1               	movf	fsr1l,w,c
 13978  017F24  0FEF               	addlw	-17
 13979  017F26  6ED9               	movwf	fsr2l,c
 13980  017F28  50E2               	movf	fsr1h,w,c
 13981  017F2A  6EDA               	movwf	fsr2h,c
 13982  017F2C  0EFF               	movlw	255
 13983  017F2E  22DA               	addwfc	fsr2h,f,c
 13984  017F30  0EE7               	movlw	-25
 13985  017F32  50E3               	movf	plusw1,w,c
 13986  017F34  5EDE               	subwf	postinc2,f,c
 13987  017F36  0EE8               	movlw	-24
 13988  017F38  50E3               	movf	plusw1,w,c
 13989  017F3A  5ADE               	subwfb	postinc2,f,c
 13990  017F3C  0EE9               	movlw	-23
 13991  017F3E  50E3               	movf	plusw1,w,c
 13992  017F40  5ADE               	subwfb	postinc2,f,c
 13993  017F42  0EEA               	movlw	-22
 13994  017F44  50E3               	movf	plusw1,w,c
 13995  017F46  5ADE               	subwfb	postinc2,f,c
 13996  017F48  0EEB               	movlw	-21
 13997  017F4A  50E3               	movf	plusw1,w,c
 13998  017F4C  5ADE               	subwfb	postinc2,f,c
 13999  017F4E  0EEC               	movlw	-20
 14000  017F50  50E3               	movf	plusw1,w,c
 14001  017F52  5ADE               	subwfb	postinc2,f,c
 14002  017F54  0EED               	movlw	-19
 14003  017F56  50E3               	movf	plusw1,w,c
 14004  017F58  5ADE               	subwfb	postinc2,f,c
 14005  017F5A  0EEE               	movlw	-18
 14006  017F5C  50E3               	movf	plusw1,w,c
 14007  017F5E  5ADE               	subwfb	postinc2,f,c
 14008                           
 14009                           ;stkvar	_quotient @ sp[(-9)+0]
 14010  017F60  0EF7               	movlw	-9
 14011  017F62  80E3               	bsf	plusw1,0,c
 14012  017F64                     l8432:
 14013                           
 14014                           ;stkvar	_divisor @ sp[(-9)+-16]
 14015  017F64  90D8               	bcf	status,0,c
 14016  017F66  0EEE               	movlw	-18
 14017  017F68  32E3               	rrcf	plusw1,f,c
 14018  017F6A  0EED               	movlw	-19
 14019  017F6C  32E3               	rrcf	plusw1,f,c
 14020  017F6E  0EEC               	movlw	-20
 14021  017F70  32E3               	rrcf	plusw1,f,c
 14022  017F72  0EEB               	movlw	-21
 14023  017F74  32E3               	rrcf	plusw1,f,c
 14024  017F76  0EEA               	movlw	-22
 14025  017F78  32E3               	rrcf	plusw1,f,c
 14026  017F7A  0EE9               	movlw	-23
 14027  017F7C  32E3               	rrcf	plusw1,f,c
 14028  017F7E  0EE8               	movlw	-24
 14029  017F80  32E3               	rrcf	plusw1,f,c
 14030  017F82  0EE7               	movlw	-25
 14031  017F84  32E3               	rrcf	plusw1,f,c
 14032                           
 14033                           ;stkvar	_counter @ sp[(-9)+8]
 14034  017F86  0EFF               	movlw	-1
 14035  017F88  50E3               	movf	plusw1,w,c
 14036  017F8A  6E01               	movwf	btemp^0,c
 14037  017F8C  0E01               	movlw	1
 14038  017F8E  5E01               	subwf	btemp^0,f,c
 14039  017F90  0EFF               	movlw	-1
 14040  017F92  0060  F007  FFE3   	movff	btemp,plusw1
 14041  017F98  A4D8               	btfss	status,2,c
 14042  017F9A  D791               	goto	u7040
 14043  017F9C                     u7060:
 14044                           
 14045                           ;stkvar	_quotient @ sp[(-9)+0]
 14046  017F9C  0EF7               	movlw	247
 14047  017F9E  24E1               	addwf	fsr1l,w,c
 14048  017FA0  6ED9               	movwf	fsr2l,c
 14049  017FA2  0EFF               	movlw	255
 14050  017FA4  20E2               	addwfc	fsr1h,w,c
 14051  017FA6  6EDA               	movwf	fsr2h,c
 14052                           
 14053                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 14054  017FA8  0E08               	movlw	8
 14055  017FAA  6E01               	movwf	btemp^0,c
 14056  017FAC  0EEF               	movlw	-17
 14057  017FAE                     us707999:
 14058  017FAE  006F FF7B FFE3     	movff	postinc2,plusw1
 14059  017FB4  28E8               	incf	wreg,w,c
 14060  017FB6  2E01               	decfsz	btemp^0,f,c
 14061  017FB8  D7FA               	bra	us707999
 14062                           
 14063                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14064  017FBA  0EF7               	movlw	247
 14065  017FBC  26E1               	addwf	fsr1l,f,c
 14066  017FBE  0EFF               	movlw	255
 14067  017FC0  22E2               	addwfc	fsr1h,f,c
 14068  017FC2  0012               	return		;funcret
 14069  017FC4                     __end_of___lodiv:
 14070                           	opt callstack 0
 14071                           
 14072 ;; *************** function _strncmp *****************
 14073 ;; Defined at:
 14074 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 14075 ;; Parameters:    Size  Location     Type
 14076 ;;  _l              2  [STACK] PTR const unsigned char 
 14077 ;;		 -> ct(3), STR_56(85), STR_54(3), STR_53(3), 
 14078 ;;		 -> STR_52(19), STR_51(19), STR_50(19), STR_49(19), 
 14079 ;;		 -> STR_48(19), STR_47(19), STR_46(24), STR_45(15), 
 14080 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 14081 ;;		 -> STR_40(19), STR_39(19), STR_36(3), STR_35(3), 
 14082 ;;		 -> STR_34(3), STR_33(17), STR_32(16), STR_31(16), 
 14083 ;;		 -> STR_30(20), STR_29(20), STR_28(19), STR_27(19), 
 14084 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 14085 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 14086 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(22), 
 14087 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 14088 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 14089 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 14090 ;;		 -> STR_1(17), 
 14091 ;;  _r              2  [STACK] PTR const unsigned char 
 14092 ;;		 -> STR_90(3), STR_86(3), STR_81(3), STR_76(3), 
 14093 ;;		 -> STR_71(3), STR_67(3), 
 14094 ;;  n               2  [STACK] unsigned int 
 14095 ;; Auto vars:     Size  Location     Type
 14096 ;;  r               2  [STACK] PTR const unsigned char 
 14097 ;;		 -> STR_90(3), STR_86(3), STR_81(3), STR_76(3), 
 14098 ;;		 -> STR_71(3), STR_67(3), 
 14099 ;;  l               2  [STACK] PTR const unsigned char 
 14100 ;;		 -> ct(3), STR_56(85), STR_54(3), STR_53(3), 
 14101 ;;		 -> STR_52(19), STR_51(19), STR_50(19), STR_49(19), 
 14102 ;;		 -> STR_48(19), STR_47(19), STR_46(24), STR_45(15), 
 14103 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 14104 ;;		 -> STR_40(19), STR_39(19), STR_36(3), STR_35(3), 
 14105 ;;		 -> STR_34(3), STR_33(17), STR_32(16), STR_31(16), 
 14106 ;;		 -> STR_30(20), STR_29(20), STR_28(19), STR_27(19), 
 14107 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 14108 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 14109 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(22), 
 14110 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 14111 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 14112 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 14113 ;;		 -> STR_1(17), 
 14114 ;; Return value:  Size  Location     Type
 14115 ;;                  2  [STACK] int 
 14116 ;; Registers used:
 14117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 14118 ;; Tracked objects:
 14119 ;;		On entry : 0/0
 14120 ;;		On exit  : 0/0
 14121 ;;		Unchanged: 0/0
 14122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14127 ;;Total ram usage:        0 bytes
 14128 ;; Hardware stack levels used:    1
 14129 ;; Hardware stack levels required when called:   15
 14130 ;; This function calls:
 14131 ;;		Nothing
 14132 ;; This function is called by:
 14133 ;;		_vfpfcnvrt
 14134 ;; This function uses a reentrant model
 14135 ;;
 14136                           
 14137                           	psect	text53
 14138  0172BC                     __ptext53:
 14139                           	opt callstack 0
 14140  0172BC                     _strncmp:
 14141                           	opt callstack 0
 14142                           
 14143                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14144  0172BC  52E6               	movf	postinc1,f,c
 14145  0172BE  52E6               	movf	postinc1,f,c
 14146  0172C0  52E6               	movf	postinc1,f,c
 14147  0172C2  52E6               	movf	postinc1,f,c
 14148                           
 14149                           ;stkvar	__l @ sp[(-4)+-2]
 14150                           
 14151                           ;incstack = 0
 14152 ;; hardware stack exceeded
 14153  0172C4  0EFA               	movlw	-6
 14154  0172C6  006F FF8C  F00B    	movff	plusw1,btemp+10
 14155  0172CC  0EFB               	movlw	-5
 14156  0172CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 14157                           
 14158                           ;stkvar	_l @ sp[(-4)+2]
 14159  0172D4  0EFF               	movlw	-1
 14160  0172D6  0060  F033  FFE3   	movff	btemp+11,plusw1
 14161  0172DC  0EFE               	movlw	-2
 14162  0172DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14163                           
 14164                           ;stkvar	__r @ sp[(-4)+-4]
 14165  0172E4  0EF8               	movlw	-8
 14166  0172E6  006F FF8C  F00B    	movff	plusw1,btemp+10
 14167  0172EC  0EF9               	movlw	-7
 14168  0172EE  006F FF8C  F00C    	movff	plusw1,btemp+11
 14169                           
 14170                           ;stkvar	_r @ sp[(-4)+0]
 14171  0172F4  0EFD               	movlw	-3
 14172  0172F6  0060  F033  FFE3   	movff	btemp+11,plusw1
 14173  0172FC  0EFC               	movlw	-4
 14174  0172FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14175                           
 14176                           ;stkvar	_n @ sp[(-4)+-6]
 14177  017304  0EF6               	movlw	-10
 14178  017306  006F FF8C  F001    	movff	plusw1,btemp
 14179  01730C  0E01               	movlw	1
 14180  01730E  5E01               	subwf	btemp^0,f,c
 14181  017310  0EF6               	movlw	-10
 14182  017312  0060  F007  FFE3   	movff	btemp,plusw1
 14183  017318  0EF7               	movlw	-9
 14184  01731A  006F FF8C  F001    	movff	plusw1,btemp
 14185  017320  0E00               	movlw	0
 14186  017322  5A01               	subwfb	btemp^0,f,c
 14187  017324  0EF7               	movlw	-9
 14188  017326  0060  F007  FFE3   	movff	btemp,plusw1
 14189  01732C  0EF6               	movlw	-10
 14190  01732E  28E3               	incf	plusw1,w,c
 14191  017330  E13F               	bnz	l9128
 14192  017332  0EF7               	movlw	-9
 14193  017334  28E3               	incf	plusw1,w,c
 14194  017336  A4D8               	btfss	status,2,c
 14195  017338  D03B               	goto	l9128
 14196  01733A  0E00               	movlw	0
 14197  01733C  6E01               	movwf	btemp^0,c
 14198  01733E  0E00               	movlw	0
 14199  017340  6E02               	movwf	(btemp+1)^0,c
 14200  017342  D0C7               	goto	l3417
 14201  017344                     l9126:
 14202                           
 14203                           ;stkvar	_l @ sp[(-4)+2]
 14204  017344  0EFE               	movlw	-2
 14205  017346  50E3               	movf	plusw1,w,c
 14206  017348  0F01               	addlw	1
 14207  01734A  6E01               	movwf	btemp^0,c
 14208  01734C  0EFE               	movlw	-2
 14209  01734E  0060  F007  FFE3   	movff	btemp,plusw1
 14210  017354  6A01               	clrf	btemp^0,c
 14211  017356  0EFF               	movlw	-1
 14212  017358  50E3               	movf	plusw1,w,c
 14213  01735A  2001               	addwfc	btemp^0,w,c
 14214  01735C  6E01               	movwf	btemp^0,c
 14215  01735E  0EFF               	movlw	-1
 14216  017360  0060  F007  FFE3   	movff	btemp,plusw1
 14217                           
 14218                           ;stkvar	_r @ sp[(-4)+0]
 14219  017366  0EFC               	movlw	-4
 14220  017368  50E3               	movf	plusw1,w,c
 14221  01736A  0F01               	addlw	1
 14222  01736C  6E01               	movwf	btemp^0,c
 14223  01736E  0EFC               	movlw	-4
 14224  017370  0060  F007  FFE3   	movff	btemp,plusw1
 14225  017376  6A01               	clrf	btemp^0,c
 14226  017378  0EFD               	movlw	-3
 14227  01737A  50E3               	movf	plusw1,w,c
 14228  01737C  2001               	addwfc	btemp^0,w,c
 14229  01737E  6E01               	movwf	btemp^0,c
 14230  017380  0EFD               	movlw	-3
 14231  017382  0060  F007  FFE3   	movff	btemp,plusw1
 14232                           
 14233                           ;stkvar	_n @ sp[(-4)+-6]
 14234  017388  0EF6               	movlw	-10
 14235  01738A  006F FF8C  F001    	movff	plusw1,btemp
 14236  017390  0E01               	movlw	1
 14237  017392  5E01               	subwf	btemp^0,f,c
 14238  017394  0EF6               	movlw	-10
 14239  017396  0060  F007  FFE3   	movff	btemp,plusw1
 14240  01739C  0EF7               	movlw	-9
 14241  01739E  006F FF8C  F001    	movff	plusw1,btemp
 14242  0173A4  0E00               	movlw	0
 14243  0173A6  5A01               	subwfb	btemp^0,f,c
 14244  0173A8  0EF7               	movlw	-9
 14245  0173AA  0060  F007  FFE3   	movff	btemp,plusw1
 14246  0173B0                     l9128:
 14247                           
 14248                           ;stkvar	_l @ sp[(-4)+2]
 14249  0173B0  0EFE               	movlw	-2
 14250  0173B2  006F FF8F FFF6     	movff	plusw1,tblptrl
 14251  0173B8  0EFF               	movlw	-1
 14252  0173BA  006F FF8F FFF7     	movff	plusw1,tblptrh
 14253  0173C0  0E00               	movlw	low (__mediumconst shr (0+16))
 14254  0173C2  6EF8               	movwf	tblptru,c
 14255  0173C4  0E1F               	movlw	(high __ramtop+-1)
 14256  0173C6  64F7               	cpfsgt	tblptrh,c
 14257  0173C8  D003               	bra	u8357
 14258  0173CA  0008               	tblrd		*
 14259  0173CC  50F5               	movf	tablat,w,c
 14260  0173CE  D007               	bra	u8350
 14261  0173D0                     u8357:
 14262  0173D0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14263  0173D6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14264  0173DC  50EF               	movf	indf0,w,c
 14265  0173DE                     u8350:
 14266  0173DE  0900               	iorlw	0
 14267  0173E0  B4D8               	btfsc	status,2,c
 14268  0173E2  D04A               	goto	u8390
 14269                           
 14270                           ;stkvar	_r @ sp[(-4)+0]
 14271  0173E4  50E1               	movf	fsr1l,w,c
 14272  0173E6  0FFC               	addlw	-4
 14273  0173E8  6ED9               	movwf	fsr2l,c
 14274  0173EA  50E2               	movf	fsr1h,w,c
 14275  0173EC  6EDA               	movwf	fsr2h,c
 14276  0173EE  0EFF               	movlw	255
 14277  0173F0  22DA               	addwfc	fsr2h,f,c
 14278  0173F2  006F FF7B FFF6     	movff	postinc2,tblptrl
 14279  0173F8  006F FF77 FFF7     	movff	postdec2,tblptrh
 14280  0173FE                     	if	0	;tblptru may be non-zero
 14281  0173FE                     	endif
 14282  0173FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14283  0173FE  0E00               	movlw	low (__mediumconst shr (0+16))
 14284  017400  6EF8               	movwf	tblptru,c
 14285  017402                     	endif
 14286  017402  0008               	tblrd		*
 14287  017404  50F5               	movf	tablat,w,c
 14288  017406  0900               	iorlw	0
 14289  017408  B4D8               	btfsc	status,2,c
 14290  01740A  D036               	goto	u8390
 14291                           
 14292                           ;stkvar	_n @ sp[(-4)+-6]
 14293  01740C  0EF6               	movlw	-10
 14294  01740E  006F FF8C  F001    	movff	plusw1,btemp
 14295  017414  0EF7               	movlw	-9
 14296  017416  50E3               	movf	plusw1,w,c
 14297  017418  1001               	iorwf	btemp^0,w,c
 14298  01741A  B4D8               	btfsc	status,2,c
 14299  01741C  D02D               	goto	u8390
 14300                           
 14301                           ;stkvar	_r @ sp[(-4)+0]
 14302  01741E  50E1               	movf	fsr1l,w,c
 14303  017420  0FFC               	addlw	-4
 14304  017422  6ED9               	movwf	fsr2l,c
 14305  017424  50E2               	movf	fsr1h,w,c
 14306  017426  6EDA               	movwf	fsr2h,c
 14307  017428  0EFF               	movlw	255
 14308  01742A  22DA               	addwfc	fsr2h,f,c
 14309  01742C  006F FF7B FFF6     	movff	postinc2,tblptrl
 14310  017432  006F FF77 FFF7     	movff	postdec2,tblptrh
 14311  017438                     	if	0	;tblptru may be non-zero
 14312  017438                     	endif
 14313  017438                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14314  017438  0E00               	movlw	low (__mediumconst shr (0+16))
 14315  01743A  6EF8               	movwf	tblptru,c
 14316  01743C                     	endif
 14317  01743C  0008               	tblrd		*
 14318  01743E  006F FFD4  F00C    	movff	tablat,btemp+11
 14319                           
 14320                           ;stkvar	_l @ sp[(-4)+2]
 14321  017444  0EFE               	movlw	-2
 14322  017446  006F FF8F FFF6     	movff	plusw1,tblptrl
 14323  01744C  0EFF               	movlw	-1
 14324  01744E  006F FF8F FFF7     	movff	plusw1,tblptrh
 14325  017454  0E00               	movlw	low (__mediumconst shr (0+16))
 14326  017456  6EF8               	movwf	tblptru,c
 14327  017458  0E1F               	movlw	(high __ramtop+-1)
 14328  01745A  64F7               	cpfsgt	tblptrh,c
 14329  01745C  D003               	bra	u8397
 14330  01745E  0008               	tblrd		*
 14331  017460  50F5               	movf	tablat,w,c
 14332  017462  D007               	bra	u8395
 14333  017464                     u8397:
 14334  017464  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14335  01746A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14336  017470  50EF               	movf	indf0,w,c
 14337  017472                     u8395:
 14338  017472  180C               	xorwf	(btemp+11)^0,w,c
 14339  017474  B4D8               	btfsc	status,2,c
 14340  017476  D766               	goto	l9126
 14341  017478                     u8390:
 14342                           
 14343                           ;stkvar	_l @ sp[(-4)+2]
 14344  017478  0EFE               	movlw	-2
 14345  01747A  006F FF8F FFF6     	movff	plusw1,tblptrl
 14346  017480  0EFF               	movlw	-1
 14347  017482  006F FF8F FFF7     	movff	plusw1,tblptrh
 14348  017488  0E00               	movlw	low (__mediumconst shr (0+16))
 14349  01748A  6EF8               	movwf	tblptru,c
 14350  01748C  0E1F               	movlw	(high __ramtop+-1)
 14351  01748E  64F7               	cpfsgt	tblptrh,c
 14352  017490  D003               	bra	u8407
 14353  017492  0008               	tblrd		*
 14354  017494  50F5               	movf	tablat,w,c
 14355  017496  D007               	bra	u8400
 14356  017498                     u8407:
 14357  017498  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14358  01749E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14359  0174A4  50EF               	movf	indf0,w,c
 14360  0174A6                     u8400:
 14361  0174A6  6E01               	movwf	btemp^0,c
 14362  0174A8  6A02               	clrf	(btemp+1)^0,c
 14363                           
 14364                           ;stkvar	_r @ sp[(-4)+0]
 14365  0174AA  50E1               	movf	fsr1l,w,c
 14366  0174AC  0FFC               	addlw	-4
 14367  0174AE  6ED9               	movwf	fsr2l,c
 14368  0174B0  50E2               	movf	fsr1h,w,c
 14369  0174B2  6EDA               	movwf	fsr2h,c
 14370  0174B4  0EFF               	movlw	255
 14371  0174B6  22DA               	addwfc	fsr2h,f,c
 14372  0174B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 14373  0174BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 14374  0174C4                     	if	0	;tblptru may be non-zero
 14375  0174C4                     	endif
 14376  0174C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14377  0174C4  0E00               	movlw	low (__mediumconst shr (0+16))
 14378  0174C6  6EF8               	movwf	tblptru,c
 14379  0174C8                     	endif
 14380  0174C8  0008               	tblrd		*
 14381  0174CA  50F5               	movf	tablat,w,c
 14382  0174CC  5E01               	subwf	btemp^0,f,c
 14383  0174CE  0E00               	movlw	0
 14384  0174D0  5A02               	subwfb	(btemp+1)^0,f,c
 14385  0174D2                     l3417:
 14386                           
 14387                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 14388  0174D2  0EF6               	movlw	246
 14389  0174D4  26E1               	addwf	fsr1l,f,c
 14390  0174D6  0EFF               	movlw	255
 14391  0174D8  22E2               	addwfc	fsr1h,f,c
 14392  0174DA  0012               	return		;funcret
 14393  0174DC                     __end_of_strncmp:
 14394                           	opt callstack 0
 14395                           
 14396 ;; *************** function _stoa *****************
 14397 ;; Defined at:
 14398 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14399 ;; Parameters:    Size  Location     Type
 14400 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14401 ;;		 -> f(6), NULL(0), 
 14402 ;;  s               2  [STACK] PTR unsigned char 
 14403 ;;		 -> ?_printf(2), ?_sprintf(2), STR_38(9), STR_37(12), 
 14404 ;;		 -> D.lcd(288), D(290), T(144), STR_3(6), 
 14405 ;;		 -> V(188), 
 14406 ;; Auto vars:     Size  Location     Type
 14407 ;;  nuls            7  [STACK] unsigned char [7]
 14408 ;;  l               2  [STACK] int 
 14409 ;;  p               2  [STACK] int 
 14410 ;;  cp              2  [STACK] PTR unsigned char 
 14411 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_38(9), 
 14412 ;;		 -> STR_37(12), D.lcd(288), D(290), T(144), 
 14413 ;;		 -> STR_3(6), V(188), 
 14414 ;;  w               2  [STACK] int 
 14415 ;;  i               2  [STACK] int 
 14416 ;; Return value:  Size  Location     Type
 14417 ;;                  2  [STACK] int 
 14418 ;; Registers used:
 14419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14420 ;; Tracked objects:
 14421 ;;		On entry : 0/0
 14422 ;;		On exit  : 0/0
 14423 ;;		Unchanged: 0/0
 14424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14429 ;;Total ram usage:        0 bytes
 14430 ;; Hardware stack levels used:    1
 14431 ;; Hardware stack levels required when called:   18
 14432 ;; This function calls:
 14433 ;;		_fputc
 14434 ;;		_strlen
 14435 ;; This function is called by:
 14436 ;;		_vfpfcnvrt
 14437 ;; This function uses a reentrant model
 14438 ;;
 14439                           
 14440                           	psect	text54
 14441  0168CA                     __ptext54:
 14442                           	opt callstack 0
 14443  0168CA                     _stoa:
 14444                           	opt callstack 0
 14445                           
 14446                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14447  0168CA  0E11               	movlw	17
 14448  0168CC  26E1               	addwf	fsr1l,f,c
 14449  0168CE  0E00               	movlw	0
 14450  0168D0  22E2               	addwfc	fsr1h,f,c
 14451                           
 14452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 14453                           
 14454                           ;incstack = 0
 14455 ;; hardware stack exceeded
 14456  0168D2  EE20  F0EC         	lfsr	2,stoa@F1166
 14457                           
 14458                           ;stkvar	_nuls @ sp[(-17)+0]
 14459  0168D6  0E07               	movlw	7
 14460  0168D8  6E01               	movwf	btemp^0,c
 14461  0168DA  0EEF               	movlw	-17
 14462  0168DC                     us1110999:
 14463  0168DC  006F FF7B FFE3     	movff	postinc2,plusw1
 14464  0168E2  28E8               	incf	wreg,w,c
 14465  0168E4  2E01               	decfsz	btemp^0,f,c
 14466  0168E6  D7FA               	bra	us1110999
 14467                           
 14468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 14469                           ;stkvar	_s @ sp[(-17)+-4]
 14470  0168E8  0EEB               	movlw	-21
 14471  0168EA  006F FF8C  F00B    	movff	plusw1,btemp+10
 14472  0168F0  0EEC               	movlw	-20
 14473  0168F2  006F FF8C  F00C    	movff	plusw1,btemp+11
 14474                           
 14475                           ;stkvar	_cp @ sp[(-17)+11]
 14476  0168F8  0EFB               	movlw	-5
 14477  0168FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14478  016900  0EFA               	movlw	-6
 14479  016902  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14480                           
 14481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 14482                           ;stkvar	_cp @ sp[(-17)+11]
 14483  016908  0EFA               	movlw	-6
 14484  01690A  006F FF8C  F001    	movff	plusw1,btemp
 14485  016910  0EFB               	movlw	-5
 14486  016912  50E3               	movf	plusw1,w,c
 14487  016914  1001               	iorwf	btemp^0,w,c
 14488  016916  A4D8               	btfss	status,2,c
 14489  016918  D00E               	goto	l11862
 14490                           
 14491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 14492                           ;stkvar	_nuls @ sp[(-17)+0]
 14493  01691A  0EEF               	movlw	239
 14494  01691C  24E1               	addwf	fsr1l,w,c
 14495  01691E  6E0B               	movwf	(btemp+10)^0,c
 14496  016920  0EFF               	movlw	255
 14497  016922  20E2               	addwfc	fsr1h,w,c
 14498  016924  6E0C               	movwf	(btemp+11)^0,c
 14499                           
 14500                           ;stkvar	_cp @ sp[(-17)+11]
 14501  016926  0EFB               	movlw	-5
 14502  016928  0060  F033  FFE3   	movff	btemp+11,plusw1
 14503  01692E  0EFA               	movlw	-6
 14504  016930  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14505  016936                     l11862:
 14506                           
 14507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 14508                           ;stkvar	_cp @ sp[(-17)+11]
 14509  016936  0EFA               	movlw	-6
 14510  016938  006F FF8F FFE6     	movff	plusw1,postinc1
 14511  01693E  006F FF8F FFE6     	movff	plusw1,postinc1
 14512  016944  ECE5  F0CD         	call	_strlen	;wreg free
 14513                           
 14514                           ;stkvar	_l @ sp[(-17)+7]
 14515  016948  0EF6               	movlw	-10
 14516  01694A  0060  F007  FFE3   	movff	btemp,plusw1
 14517  016950  0EF7               	movlw	-9
 14518  016952  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14519                           
 14520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 14521                           ;stkvar	_p @ sp[(-17)+9]
 14522  016958  0EF8               	movlw	-8
 14523  01695A  0060  F08F  FFE3   	movff	_prec,plusw1
 14524  016960  0EF9               	movlw	-7
 14525  016962  0060  F093  FFE3   	movff	_prec+1,plusw1
 14526                           
 14527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 14528                           ;stkvar	_p @ sp[(-17)+9]
 14529  016968  0EF9               	movlw	-7
 14530  01696A  BEE3               	btfsc	plusw1,7,c
 14531  01696C  D023               	goto	l2242
 14532                           
 14533                           ;stkvar	_l @ sp[(-17)+7]
 14534                           ;stkvar	_p @ sp[(-17)+9]
 14535  01696E  50E1               	movf	fsr1l,w,c
 14536  016970  0FF8               	addlw	-8
 14537  016972  6ED9               	movwf	fsr2l,c
 14538  016974  50E2               	movf	fsr1h,w,c
 14539  016976  6EDA               	movwf	fsr2h,c
 14540  016978  0EFF               	movlw	255
 14541  01697A  22DA               	addwfc	fsr2h,f,c
 14542  01697C  0EF6               	movlw	-10
 14543  01697E  50E3               	movf	plusw1,w,c
 14544  016980  5CDE               	subwf	postinc2,w,c
 14545  016982  50DE               	movf	postinc2,w,c
 14546  016984  0A80               	xorlw	128
 14547  016986  6E01               	movwf	btemp^0,c
 14548  016988  0EF7               	movlw	-9
 14549  01698A  50E3               	movf	plusw1,w,c
 14550  01698C  0A80               	xorlw	128
 14551  01698E  5801               	subwfb	btemp^0,w,c
 14552  016990  B0D8               	btfsc	status,0,c
 14553  016992  D010               	goto	l2242
 14554                           
 14555                           ;stkvar	_p @ sp[(-17)+9]
 14556                           ;stkvar	_l @ sp[(-17)+7]
 14557  016994  0EF8               	movlw	-8
 14558  016996  006F FF8C  F001    	movff	plusw1,btemp
 14559  01699C  0EF6               	movlw	-10
 14560  01699E  0060  F007  FFE3   	movff	btemp,plusw1
 14561  0169A4  0EF9               	movlw	-7
 14562  0169A6  006F FF8C  F001    	movff	plusw1,btemp
 14563  0169AC  0EF7               	movlw	-9
 14564  0169AE  0060  F007  FFE3   	movff	btemp,plusw1
 14565  0169B4                     l2242:
 14566                           
 14567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 14568                           ;stkvar	_l @ sp[(-17)+7]
 14569                           ;stkvar	_p @ sp[(-17)+9]
 14570  0169B4  0EF6               	movlw	-10
 14571  0169B6  006F FF8C  F001    	movff	plusw1,btemp
 14572  0169BC  0EF8               	movlw	-8
 14573  0169BE  0060  F007  FFE3   	movff	btemp,plusw1
 14574  0169C4  0EF7               	movlw	-9
 14575  0169C6  006F FF8C  F001    	movff	plusw1,btemp
 14576  0169CC  0EF9               	movlw	-7
 14577  0169CE  0060  F007  FFE3   	movff	btemp,plusw1
 14578                           
 14579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 14580                           ;stkvar	_w @ sp[(-17)+13]
 14581  0169D4  0EFC               	movlw	-4
 14582  0169D6  0060  F087  FFE3   	movff	_width,plusw1
 14583  0169DC  0EFD               	movlw	-3
 14584  0169DE  0060  F08B  FFE3   	movff	_width+1,plusw1
 14585                           
 14586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 14587  0169E4  A025               	btfss	_flags^0,0,c
 14588  0169E6  D01F               	goto	l11882
 14589  0169E8  D031               	goto	u11150
 14590  0169EA                     l11878:
 14591                           
 14592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 14593                           ;stkvar	_fp @ sp[(-17)+-2]
 14594  0169EA  0EED               	movlw	-19
 14595  0169EC  006F FF8F FFE6     	movff	plusw1,postinc1
 14596  0169F2  006F FF8F FFE6     	movff	plusw1,postinc1
 14597  0169F8  0E20               	movlw	32
 14598  0169FA  6EE6               	movwf	postinc1,c
 14599  0169FC  0E00               	movlw	0
 14600  0169FE  6EE6               	movwf	postinc1,c
 14601  016A00  ECEB  F0C5         	call	_fputc	;wreg free
 14602                           
 14603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 14604                           ;stkvar	_l @ sp[(-17)+7]
 14605  016A04  0EF6               	movlw	-10
 14606  016A06  50E3               	movf	plusw1,w,c
 14607  016A08  0F01               	addlw	1
 14608  016A0A  6E01               	movwf	btemp^0,c
 14609  016A0C  0EF6               	movlw	-10
 14610  016A0E  0060  F007  FFE3   	movff	btemp,plusw1
 14611  016A14  6A01               	clrf	btemp^0,c
 14612  016A16  0EF7               	movlw	-9
 14613  016A18  50E3               	movf	plusw1,w,c
 14614  016A1A  2001               	addwfc	btemp^0,w,c
 14615  016A1C  6E01               	movwf	btemp^0,c
 14616  016A1E  0EF7               	movlw	-9
 14617  016A20  0060  F007  FFE3   	movff	btemp,plusw1
 14618  016A26                     l11882:
 14619                           
 14620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 14621                           ;stkvar	_w @ sp[(-17)+13]
 14622                           ;stkvar	_l @ sp[(-17)+7]
 14623  016A26  50E1               	movf	fsr1l,w,c
 14624  016A28  0FF6               	addlw	-10
 14625  016A2A  6ED9               	movwf	fsr2l,c
 14626  016A2C  50E2               	movf	fsr1h,w,c
 14627  016A2E  6EDA               	movwf	fsr2h,c
 14628  016A30  0EFF               	movlw	255
 14629  016A32  22DA               	addwfc	fsr2h,f,c
 14630  016A34  0EFC               	movlw	-4
 14631  016A36  50E3               	movf	plusw1,w,c
 14632  016A38  5CDE               	subwf	postinc2,w,c
 14633  016A3A  50DE               	movf	postinc2,w,c
 14634  016A3C  0A80               	xorlw	128
 14635  016A3E  6E01               	movwf	btemp^0,c
 14636  016A40  0EFD               	movlw	-3
 14637  016A42  50E3               	movf	plusw1,w,c
 14638  016A44  0A80               	xorlw	128
 14639  016A46  5801               	subwfb	btemp^0,w,c
 14640  016A48  A0D8               	btfss	status,0,c
 14641  016A4A  D7CF               	goto	l11878
 14642  016A4C                     u11150:
 14643                           
 14644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 14645                           ;stkvar	_i @ sp[(-17)+15]
 14646  016A4C  0EFE               	movlw	-2
 14647  016A4E  6AE3               	clrf	plusw1,c
 14648  016A50  0EFF               	movlw	-1
 14649  016A52  6AE3               	clrf	plusw1,c
 14650                           
 14651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 14652  016A54  D045               	goto	l11892
 14653  016A56                     l11886:
 14654                           
 14655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 14656                           ;stkvar	_fp @ sp[(-17)+-2]
 14657  016A56  0EED               	movlw	-19
 14658  016A58  006F FF8F FFE6     	movff	plusw1,postinc1
 14659  016A5E  006F FF8F FFE6     	movff	plusw1,postinc1
 14660                           
 14661                           ;stkvar	_cp @ sp[(-19)+11]
 14662  016A64  0EF8               	movlw	-8
 14663  016A66  006F FF8F FFF6     	movff	plusw1,tblptrl
 14664  016A6C  0EF9               	movlw	-7
 14665  016A6E  006F FF8F FFF7     	movff	plusw1,tblptrh
 14666  016A74  0E00               	movlw	low (__mediumconst shr (0+16))
 14667  016A76  6EF8               	movwf	tblptru,c
 14668  016A78  0E1F               	movlw	(high __ramtop+-1)
 14669  016A7A  64F7               	cpfsgt	tblptrh,c
 14670  016A7C  D003               	bra	u11167
 14671  016A7E  0008               	tblrd		*
 14672  016A80  50F5               	movf	tablat,w,c
 14673  016A82  D007               	bra	u11160
 14674  016A84                     u11167:
 14675  016A84  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14676  016A8A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14677  016A90  50EF               	movf	indf0,w,c
 14678  016A92                     u11160:
 14679  016A92  6EE6               	movwf	postinc1,c
 14680  016A94  0E00               	movlw	0
 14681  016A96  6EE6               	movwf	postinc1,c
 14682  016A98  ECEB  F0C5         	call	_fputc	;wreg free
 14683                           
 14684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 14685                           ;stkvar	_cp @ sp[(-17)+11]
 14686  016A9C  0EFA               	movlw	-6
 14687  016A9E  50E3               	movf	plusw1,w,c
 14688  016AA0  0F01               	addlw	1
 14689  016AA2  6E01               	movwf	btemp^0,c
 14690  016AA4  0EFA               	movlw	-6
 14691  016AA6  0060  F007  FFE3   	movff	btemp,plusw1
 14692  016AAC  6A01               	clrf	btemp^0,c
 14693  016AAE  0EFB               	movlw	-5
 14694  016AB0  50E3               	movf	plusw1,w,c
 14695  016AB2  2001               	addwfc	btemp^0,w,c
 14696  016AB4  6E01               	movwf	btemp^0,c
 14697  016AB6  0EFB               	movlw	-5
 14698  016AB8  0060  F007  FFE3   	movff	btemp,plusw1
 14699                           
 14700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 14701                           ;stkvar	_i @ sp[(-17)+15]
 14702  016ABE  0EFE               	movlw	-2
 14703  016AC0  50E3               	movf	plusw1,w,c
 14704  016AC2  0F01               	addlw	1
 14705  016AC4  6E01               	movwf	btemp^0,c
 14706  016AC6  0EFE               	movlw	-2
 14707  016AC8  0060  F007  FFE3   	movff	btemp,plusw1
 14708  016ACE  6A01               	clrf	btemp^0,c
 14709  016AD0  0EFF               	movlw	-1
 14710  016AD2  50E3               	movf	plusw1,w,c
 14711  016AD4  2001               	addwfc	btemp^0,w,c
 14712  016AD6  6E01               	movwf	btemp^0,c
 14713  016AD8  0EFF               	movlw	-1
 14714  016ADA  0060  F007  FFE3   	movff	btemp,plusw1
 14715  016AE0                     l11892:
 14716                           
 14717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 14718                           ;stkvar	_p @ sp[(-17)+9]
 14719                           ;stkvar	_i @ sp[(-17)+15]
 14720  016AE0  50E1               	movf	fsr1l,w,c
 14721  016AE2  0FFE               	addlw	-2
 14722  016AE4  6ED9               	movwf	fsr2l,c
 14723  016AE6  50E2               	movf	fsr1h,w,c
 14724  016AE8  6EDA               	movwf	fsr2h,c
 14725  016AEA  0EFF               	movlw	255
 14726  016AEC  22DA               	addwfc	fsr2h,f,c
 14727  016AEE  0EF8               	movlw	-8
 14728  016AF0  50E3               	movf	plusw1,w,c
 14729  016AF2  5CDE               	subwf	postinc2,w,c
 14730  016AF4  50DE               	movf	postinc2,w,c
 14731  016AF6  0A80               	xorlw	128
 14732  016AF8  6E01               	movwf	btemp^0,c
 14733  016AFA  0EF9               	movlw	-7
 14734  016AFC  50E3               	movf	plusw1,w,c
 14735  016AFE  0A80               	xorlw	128
 14736  016B00  5801               	subwfb	btemp^0,w,c
 14737  016B02  A0D8               	btfss	status,0,c
 14738  016B04  D7A8               	goto	l11886
 14739                           
 14740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 14741  016B06  B025               	btfsc	_flags^0,0,c
 14742  016B08  D01F               	goto	l11900
 14743  016B0A  D031               	goto	u11190
 14744  016B0C                     l11896:
 14745                           
 14746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 14747                           ;stkvar	_fp @ sp[(-17)+-2]
 14748  016B0C  0EED               	movlw	-19
 14749  016B0E  006F FF8F FFE6     	movff	plusw1,postinc1
 14750  016B14  006F FF8F FFE6     	movff	plusw1,postinc1
 14751  016B1A  0E20               	movlw	32
 14752  016B1C  6EE6               	movwf	postinc1,c
 14753  016B1E  0E00               	movlw	0
 14754  016B20  6EE6               	movwf	postinc1,c
 14755  016B22  ECEB  F0C5         	call	_fputc	;wreg free
 14756                           
 14757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 14758                           ;stkvar	_l @ sp[(-17)+7]
 14759  016B26  0EF6               	movlw	-10
 14760  016B28  50E3               	movf	plusw1,w,c
 14761  016B2A  0F01               	addlw	1
 14762  016B2C  6E01               	movwf	btemp^0,c
 14763  016B2E  0EF6               	movlw	-10
 14764  016B30  0060  F007  FFE3   	movff	btemp,plusw1
 14765  016B36  6A01               	clrf	btemp^0,c
 14766  016B38  0EF7               	movlw	-9
 14767  016B3A  50E3               	movf	plusw1,w,c
 14768  016B3C  2001               	addwfc	btemp^0,w,c
 14769  016B3E  6E01               	movwf	btemp^0,c
 14770  016B40  0EF7               	movlw	-9
 14771  016B42  0060  F007  FFE3   	movff	btemp,plusw1
 14772  016B48                     l11900:
 14773                           
 14774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 14775                           ;stkvar	_w @ sp[(-17)+13]
 14776                           ;stkvar	_l @ sp[(-17)+7]
 14777  016B48  50E1               	movf	fsr1l,w,c
 14778  016B4A  0FF6               	addlw	-10
 14779  016B4C  6ED9               	movwf	fsr2l,c
 14780  016B4E  50E2               	movf	fsr1h,w,c
 14781  016B50  6EDA               	movwf	fsr2h,c
 14782  016B52  0EFF               	movlw	255
 14783  016B54  22DA               	addwfc	fsr2h,f,c
 14784  016B56  0EFC               	movlw	-4
 14785  016B58  50E3               	movf	plusw1,w,c
 14786  016B5A  5CDE               	subwf	postinc2,w,c
 14787  016B5C  50DE               	movf	postinc2,w,c
 14788  016B5E  0A80               	xorlw	128
 14789  016B60  6E01               	movwf	btemp^0,c
 14790  016B62  0EFD               	movlw	-3
 14791  016B64  50E3               	movf	plusw1,w,c
 14792  016B66  0A80               	xorlw	128
 14793  016B68  5801               	subwfb	btemp^0,w,c
 14794  016B6A  A0D8               	btfss	status,0,c
 14795  016B6C  D7CF               	goto	l11896
 14796  016B6E                     u11190:
 14797                           
 14798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 14799                           ;stkvar	_l @ sp[(-17)+7]
 14800  016B6E  0EF6               	movlw	-10
 14801  016B70  006F FF8C  F001    	movff	plusw1,btemp
 14802  016B76  0EF7               	movlw	-9
 14803  016B78  006F FF8C  F002    	movff	plusw1,btemp+1
 14804                           
 14805                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 14806  016B7E  0EEB               	movlw	235
 14807  016B80  26E1               	addwf	fsr1l,f,c
 14808  016B82  0EFF               	movlw	255
 14809  016B84  22E2               	addwfc	fsr1h,f,c
 14810  016B86  0012               	return		;funcret
 14811  016B88                     __end_of_stoa:
 14812                           	opt callstack 0
 14813                           
 14814 ;; *************** function _efgtoa *****************
 14815 ;; Defined at:
 14816 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14817 ;; Parameters:    Size  Location     Type
 14818 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14819 ;;		 -> f(6), NULL(0), 
 14820 ;;  f               4  [STACK] PTR struct _IO_FILE
 14821 ;;  c               1  [STACK] unsigned char 
 14822 ;; Auto vars:     Size  Location     Type
 14823 ;;  u               4  [STACK] unsigned char 
 14824 ;;  g               4  [STACK] unsigned char 
 14825 ;;  l               4  [STACK] unsigned char 
 14826 ;;  h               4  [STACK] unsigned char 
 14827 ;;  ou              4  [STACK] unsigned char 
 14828 ;;  n               2  [STACK] int 
 14829 ;;  e               2  [STACK] int 
 14830 ;;  i               2  [STACK] int 
 14831 ;;  w               2  [STACK] int 
 14832 ;;  p               2  [STACK] int 
 14833 ;;  sign            2  [STACK] int 
 14834 ;;  d               2  [STACK] int 
 14835 ;;  ne              2  [STACK] int 
 14836 ;;  m               2  [STACK] int 
 14837 ;;  pp              2  [STACK] int 
 14838 ;;  t               2  [STACK] int 
 14839 ;;  mode            1  [STACK] unsigned char 
 14840 ;;  nmode           1  [STACK] unsigned char 
 14841 ;; Return value:  Size  Location     Type
 14842 ;;                  2  [STACK] int 
 14843 ;; Registers used:
 14844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 14845 ;; Tracked objects:
 14846 ;;		On entry : 0/0
 14847 ;;		On exit  : 0/0
 14848 ;;		Unchanged: 0/0
 14849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14854 ;;Total ram usage:        0 bytes
 14855 ;; Hardware stack levels used:    1
 14856 ;; Hardware stack levels required when called:   20
 14857 ;; This function calls:
 14858 ;;		___awdiv
 14859 ;;		___awmod
 14860 ;;		___fladd
 14861 ;;		___fldiv
 14862 ;;		___fleq
 14863 ;;		___flge
 14864 ;;		___flmul
 14865 ;;		___flneg
 14866 ;;		___flsub
 14867 ;;		___fltol
 14868 ;;		___fpclassifyf
 14869 ;;		_floorf
 14870 ;;		_isupper
 14871 ;;		_pad
 14872 ;;		_strcpy
 14873 ;;		_tolower
 14874 ;; This function is called by:
 14875 ;;		_vfpfcnvrt
 14876 ;; This function uses a reentrant model
 14877 ;;
 14878                           
 14879                           	psect	text55
 14880  010000                     __ptext55:
 14881                           	opt callstack 0
 14882  010000                     _efgtoa:
 14883                           	opt callstack 0
 14884                           
 14885                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14886  010000  0E38               	movlw	56
 14887  010002  26E1               	addwf	fsr1l,f,c
 14888  010004  0E00               	movlw	0
 14889  010006  22E2               	addwfc	fsr1h,f,c
 14890                           
 14891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 14892                           ;stkvar	_sign @ sp[(-56)+42]
 14893                           
 14894                           ;incstack = 0
 14895 ;; hardware stack exceeded
 14896  010008  0EF2               	movlw	-14
 14897  01000A  6AE3               	clrf	plusw1,c
 14898  01000C  0EF3               	movlw	-13
 14899  01000E  6AE3               	clrf	plusw1,c
 14900                           
 14901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 14902                           ;stkvar	_f @ sp[(-56)+-6]
 14903  010010  0EC2               	movlw	-62
 14904  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 14905  010018  0EC3               	movlw	-61
 14906  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 14907  010020  0EC4               	movlw	-60
 14908  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 14909  010028  0EC5               	movlw	-59
 14910  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14911                           
 14912                           ;stkvar	_g @ sp[(-56)+16]
 14913  010030  0ED8               	movlw	-40
 14914  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 14915  010038  0ED9               	movlw	-39
 14916  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14917  010040  0EDA               	movlw	-38
 14918  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14919  010048  0EDB               	movlw	-37
 14920  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14921                           
 14922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 14923                           ;stkvar	_g @ sp[(-56)+16]
 14924  010050  0EDB               	movlw	-37
 14925  010052  AEE3               	btfss	plusw1,7,c
 14926  010054  D02B               	goto	l11560
 14927                           
 14928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 14929  010056  0E01               	movlw	1
 14930  010058  6E0B               	movwf	(btemp+10)^0,c
 14931  01005A  0E00               	movlw	0
 14932  01005C  6E0C               	movwf	(btemp+11)^0,c
 14933                           
 14934                           ;stkvar	_sign @ sp[(-56)+42]
 14935  01005E  0EF2               	movlw	-14
 14936  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14937  010066  0EF3               	movlw	-13
 14938  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 14939                           
 14940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 14941                           ;stkvar	_g @ sp[(-56)+16]
 14942  01006E  0ED8               	movlw	-40
 14943  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 14944  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 14945  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 14946  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 14947  010088  EC90  F0D3         	call	___flneg	;wreg free
 14948                           
 14949                           ;stkvar	_g @ sp[(-56)+16]
 14950  01008C  0ED8               	movlw	-40
 14951  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 14952  010094  0ED9               	movlw	-39
 14953  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14954  01009C  0EDA               	movlw	-38
 14955  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14956  0100A4  0EDB               	movlw	-37
 14957  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 14958  0100AC                     l11560:
 14959                           
 14960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 14961                           ;stkvar	_n @ sp[(-56)+32]
 14962  0100AC  0EE8               	movlw	-24
 14963  0100AE  6AE3               	clrf	plusw1,c
 14964  0100B0  0EE9               	movlw	-23
 14965  0100B2  6AE3               	clrf	plusw1,c
 14966                           
 14967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 14968                           ;stkvar	_w @ sp[(-56)+38]
 14969  0100B4  0EEE               	movlw	-18
 14970  0100B6  0060  F087  FFE3   	movff	_width,plusw1
 14971  0100BC  0EEF               	movlw	-17
 14972  0100BE  0060  F08B  FFE3   	movff	_width+1,plusw1
 14973                           
 14974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 14975                           ;stkvar	_sign @ sp[(-56)+42]
 14976  0100C4  0EF2               	movlw	-14
 14977  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 14978  0100CC  0EF3               	movlw	-13
 14979  0100CE  50E3               	movf	plusw1,w,c
 14980  0100D0  1001               	iorwf	btemp^0,w,c
 14981  0100D2  A4D8               	btfss	status,2,c
 14982  0100D4  D002               	goto	u10600
 14983  0100D6  A425               	btfss	_flags^0,2,c
 14984  0100D8  D036               	goto	l11580
 14985  0100DA                     u10600:
 14986                           
 14987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 14988                           ;stkvar	_sign @ sp[(-56)+42]
 14989  0100DA  0EF2               	movlw	-14
 14990  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 14991  0100E2  0EF3               	movlw	-13
 14992  0100E4  50E3               	movf	plusw1,w,c
 14993  0100E6  1001               	iorwf	btemp^0,w,c
 14994  0100E8  A4D8               	btfss	status,2,c
 14995  0100EA  D002               	goto	l11572
 14996  0100EC  0E2B               	movlw	43
 14997  0100EE  D001               	goto	L13
 14998  0100F0                     l11572:
 14999  0100F0  0E2D               	movlw	45
 15000  0100F2                     L13:
 15001  0100F2  6E0B               	movwf	(btemp+10)^0,c
 15002  0100F4  0E00               	movlw	0
 15003  0100F6  6E0C               	movwf	(btemp+11)^0,c
 15004                           
 15005                           ;stkvar	_efgtoa$5313 @ sp[(-56)+10]
 15006  0100F8  0ED2               	movlw	-46
 15007  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15008  010100  0ED3               	movlw	-45
 15009  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 15010                           
 15011                           ;stkvar	_efgtoa$5313 @ sp[(-56)+10]
 15012  010108  0ED2               	movlw	-46
 15013  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 15014                           
 15015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 15016                           ;stkvar	_n @ sp[(-56)+32]
 15017  010110  0EE8               	movlw	-24
 15018  010112  50E3               	movf	plusw1,w,c
 15019  010114  0F01               	addlw	1
 15020  010116  6E01               	movwf	btemp^0,c
 15021  010118  0EE8               	movlw	-24
 15022  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 15023  010120  6A01               	clrf	btemp^0,c
 15024  010122  0EE9               	movlw	-23
 15025  010124  50E3               	movf	plusw1,w,c
 15026  010126  2001               	addwfc	btemp^0,w,c
 15027  010128  6E01               	movwf	btemp^0,c
 15028  01012A  0EE9               	movlw	-23
 15029  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 15030                           
 15031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 15032                           ;stkvar	_w @ sp[(-56)+38]
 15033  010132  50E1               	movf	fsr1l,w,c
 15034  010134  0FEE               	addlw	-18
 15035  010136  6ED9               	movwf	fsr2l,c
 15036  010138  50E2               	movf	fsr1h,w,c
 15037  01013A  6EDA               	movwf	fsr2h,c
 15038  01013C  0EFF               	movlw	255
 15039  01013E  22DA               	addwfc	fsr2h,f,c
 15040  010140  06DE               	decf	postinc2,f,c
 15041  010142  0E00               	movlw	0
 15042  010144  5ADD               	subwfb	postdec2,f,c
 15043  010146                     l11580:
 15044                           
 15045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15046                           ;stkvar	_g @ sp[(-56)+16]
 15047  010146  0ED8               	movlw	-40
 15048  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 15049  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 15050  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 15051  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 15052  010160  EC57  F0BE         	call	___fpclassifyf	;wreg free
 15053  010164  0401               	decf	btemp^0,w,c
 15054  010166  1002               	iorwf	(btemp+1)^0,w,c
 15055  010168  A4D8               	btfss	status,2,c
 15056  01016A  D076               	goto	l11598
 15057  01016C  0EBF               	movlw	191
 15058  01016E  6E0B               	movwf	(btemp+10)^0,c
 15059  010170  0EFF               	movlw	255
 15060  010172  6E0C               	movwf	(btemp+11)^0,c
 15061                           
 15062                           ;stkvar	_c @ sp[(-56)+-7]
 15063  010174  0EC1               	movlw	-63
 15064  010176  50E3               	movf	plusw1,w,c
 15065  010178  6E09               	movwf	(btemp+8)^0,c
 15066  01017A  6A0A               	clrf	(btemp+9)^0,c
 15067  01017C  500B               	movf	(btemp+10)^0,w,c
 15068  01017E  2609               	addwf	(btemp+8)^0,f,c
 15069  010180  500C               	movf	(btemp+11)^0,w,c
 15070  010182  220A               	addwfc	(btemp+9)^0,f,c
 15071  010184  500A               	movf	(btemp+9)^0,w,c
 15072  010186  E106               	bnz	u10630
 15073  010188  0E1A               	movlw	26
 15074  01018A  5C09               	subwf	(btemp+8)^0,w,c
 15075  01018C  B0D8               	btfsc	status,0,c
 15076  01018E  D002               	goto	u10630
 15077  010190  0E01               	movlw	1
 15078  010192  D001               	goto	u10640
 15079  010194                     u10630:
 15080  010194  0E00               	movlw	0
 15081  010196                     u10640:
 15082  010196  6E0B               	movwf	(btemp+10)^0,c
 15083  010198  6A0C               	clrf	(btemp+11)^0,c
 15084                           
 15085                           ;stkvar	_efgtoa$5314 @ sp[(-56)+8]
 15086  01019A  0ED0               	movlw	-48
 15087  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15088  0101A2  0ED1               	movlw	-47
 15089  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15090                           
 15091                           ;stkvar	_efgtoa$5314 @ sp[(-56)+8]
 15092  0101AA  0ED0               	movlw	-48
 15093  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 15094  0101B2  0ED1               	movlw	-47
 15095  0101B4  50E3               	movf	plusw1,w,c
 15096  0101B6  1001               	iorwf	btemp^0,w,c
 15097  0101B8  B4D8               	btfsc	status,2,c
 15098  0101BA  D017               	goto	l11590
 15099                           
 15100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 15101  0101BC  0ED6               	movlw	low STR_57
 15102  0101BE  6EE6               	movwf	postinc1,c
 15103  0101C0  0EFF               	movlw	high STR_57
 15104  0101C2  6EE6               	movwf	postinc1,c
 15105                           
 15106                           ;stkvar	_n @ sp[(-58)+32]
 15107  0101C4  0E94               	movlw	low _dbuf
 15108  0101C6  6E0B               	movwf	(btemp+10)^0,c
 15109  0101C8  0E03               	movlw	high _dbuf
 15110  0101CA  6E0C               	movwf	(btemp+11)^0,c
 15111  0101CC  0EE6               	movlw	-26
 15112  0101CE  50E3               	movf	plusw1,w,c
 15113  0101D0  260B               	addwf	(btemp+10)^0,f,c
 15114  0101D2  0EE7               	movlw	-25
 15115  0101D4  50E3               	movf	plusw1,w,c
 15116  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 15117  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15118  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 15119  0101E4  EC0A  F0CB         	call	_strcpy	;wreg free
 15120                           
 15121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 15122  0101E8  D016               	goto	l11592
 15123  0101EA                     l11590:
 15124                           
 15125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 15126  0101EA  0EDE               	movlw	low STR_58
 15127  0101EC  6EE6               	movwf	postinc1,c
 15128  0101EE  0EFF               	movlw	high STR_58
 15129  0101F0  6EE6               	movwf	postinc1,c
 15130                           
 15131                           ;stkvar	_n @ sp[(-58)+32]
 15132  0101F2  0E94               	movlw	low _dbuf
 15133  0101F4  6E0B               	movwf	(btemp+10)^0,c
 15134  0101F6  0E03               	movlw	high _dbuf
 15135  0101F8  6E0C               	movwf	(btemp+11)^0,c
 15136  0101FA  0EE6               	movlw	-26
 15137  0101FC  50E3               	movf	plusw1,w,c
 15138  0101FE  260B               	addwf	(btemp+10)^0,f,c
 15139  010200  0EE7               	movlw	-25
 15140  010202  50E3               	movf	plusw1,w,c
 15141  010204  220C               	addwfc	(btemp+11)^0,f,c
 15142  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15143  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 15144  010212  EC0A  F0CB         	call	_strcpy	;wreg free
 15145  010216                     l11592:
 15146                           
 15147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 15148                           ;stkvar	_w @ sp[(-56)+38]
 15149  010216  50E1               	movf	fsr1l,w,c
 15150  010218  0FEE               	addlw	-18
 15151  01021A  6ED9               	movwf	fsr2l,c
 15152  01021C  50E2               	movf	fsr1h,w,c
 15153  01021E  6EDA               	movwf	fsr2h,c
 15154  010220  0EFF               	movlw	255
 15155  010222  22DA               	addwfc	fsr2h,f,c
 15156  010224  0EFD               	movlw	253
 15157  010226  26DE               	addwf	postinc2,f,c
 15158  010228  0EFF               	movlw	255
 15159  01022A  22DD               	addwfc	postdec2,f,c
 15160  01022C                     l11594:
 15161                           
 15162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 15163                           ;stkvar	_w @ sp[(-56)+38]
 15164  01022C  0EEE               	movlw	-18
 15165  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 15166  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 15167  01023A  0E94               	movlw	low _dbuf
 15168  01023C  6EE6               	movwf	postinc1,c
 15169  01023E  0E03               	movlw	high _dbuf
 15170  010240  6EE6               	movwf	postinc1,c
 15171                           
 15172                           ;stkvar	_fp @ sp[(-60)+-2]
 15173  010242  0EC2               	movlw	-62
 15174  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 15175  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 15176  010250  EC09  F0C7         	call	_pad	;wreg free
 15177  010254  EF1D  F089         	goto	l2160
 15178  010258                     l11598:
 15179                           
 15180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15181                           ;stkvar	_g @ sp[(-56)+16]
 15182  010258  0ED8               	movlw	-40
 15183  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 15184  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 15185  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 15186  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 15187  010272  EC57  F0BE         	call	___fpclassifyf	;wreg free
 15188  010276  5001               	movf	btemp^0,w,c
 15189  010278  1002               	iorwf	(btemp+1)^0,w,c
 15190  01027A  A4D8               	btfss	status,2,c
 15191  01027C  D056               	goto	l11616
 15192  01027E  0EBF               	movlw	191
 15193  010280  6E0B               	movwf	(btemp+10)^0,c
 15194  010282  0EFF               	movlw	255
 15195  010284  6E0C               	movwf	(btemp+11)^0,c
 15196                           
 15197                           ;stkvar	_c @ sp[(-56)+-7]
 15198  010286  0EC1               	movlw	-63
 15199  010288  50E3               	movf	plusw1,w,c
 15200  01028A  6E09               	movwf	(btemp+8)^0,c
 15201  01028C  6A0A               	clrf	(btemp+9)^0,c
 15202  01028E  500B               	movf	(btemp+10)^0,w,c
 15203  010290  2609               	addwf	(btemp+8)^0,f,c
 15204  010292  500C               	movf	(btemp+11)^0,w,c
 15205  010294  220A               	addwfc	(btemp+9)^0,f,c
 15206  010296  500A               	movf	(btemp+9)^0,w,c
 15207  010298  E106               	bnz	u10670
 15208  01029A  0E1A               	movlw	26
 15209  01029C  5C09               	subwf	(btemp+8)^0,w,c
 15210  01029E  B0D8               	btfsc	status,0,c
 15211  0102A0  D002               	goto	u10670
 15212  0102A2  0E01               	movlw	1
 15213  0102A4  D001               	goto	u10680
 15214  0102A6                     u10670:
 15215  0102A6  0E00               	movlw	0
 15216  0102A8                     u10680:
 15217  0102A8  6E0B               	movwf	(btemp+10)^0,c
 15218  0102AA  6A0C               	clrf	(btemp+11)^0,c
 15219                           
 15220                           ;stkvar	_efgtoa$5318 @ sp[(-56)+6]
 15221  0102AC  0ECE               	movlw	-50
 15222  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15223  0102B4  0ECF               	movlw	-49
 15224  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 15225                           
 15226                           ;stkvar	_efgtoa$5318 @ sp[(-56)+6]
 15227  0102BC  0ECE               	movlw	-50
 15228  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 15229  0102C4  0ECF               	movlw	-49
 15230  0102C6  50E3               	movf	plusw1,w,c
 15231  0102C8  1001               	iorwf	btemp^0,w,c
 15232  0102CA  B4D8               	btfsc	status,2,c
 15233  0102CC  D017               	goto	l11608
 15234                           
 15235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 15236  0102CE  0EDA               	movlw	low STR_61
 15237  0102D0  6EE6               	movwf	postinc1,c
 15238  0102D2  0EFF               	movlw	high STR_61
 15239  0102D4  6EE6               	movwf	postinc1,c
 15240                           
 15241                           ;stkvar	_n @ sp[(-58)+32]
 15242  0102D6  0E94               	movlw	low _dbuf
 15243  0102D8  6E0B               	movwf	(btemp+10)^0,c
 15244  0102DA  0E03               	movlw	high _dbuf
 15245  0102DC  6E0C               	movwf	(btemp+11)^0,c
 15246  0102DE  0EE6               	movlw	-26
 15247  0102E0  50E3               	movf	plusw1,w,c
 15248  0102E2  260B               	addwf	(btemp+10)^0,f,c
 15249  0102E4  0EE7               	movlw	-25
 15250  0102E6  50E3               	movf	plusw1,w,c
 15251  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 15252  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15253  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 15254  0102F6  EC0A  F0CB         	call	_strcpy	;wreg free
 15255                           
 15256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 15257  0102FA  D78D               	goto	l11592
 15258  0102FC                     l11608:
 15259                           
 15260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 15261  0102FC  0EE2               	movlw	low STR_62
 15262  0102FE  6EE6               	movwf	postinc1,c
 15263  010300  0EFF               	movlw	high STR_62
 15264  010302  6EE6               	movwf	postinc1,c
 15265                           
 15266                           ;stkvar	_n @ sp[(-58)+32]
 15267  010304  0E94               	movlw	low _dbuf
 15268  010306  6E0B               	movwf	(btemp+10)^0,c
 15269  010308  0E03               	movlw	high _dbuf
 15270  01030A  6E0C               	movwf	(btemp+11)^0,c
 15271  01030C  0EE6               	movlw	-26
 15272  01030E  50E3               	movf	plusw1,w,c
 15273  010310  260B               	addwf	(btemp+10)^0,f,c
 15274  010312  0EE7               	movlw	-25
 15275  010314  50E3               	movf	plusw1,w,c
 15276  010316  220C               	addwfc	(btemp+11)^0,f,c
 15277  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15278  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 15279  010324  EC0A  F0CB         	call	_strcpy	;wreg free
 15280  010328  D776               	goto	l11592
 15281  01032A                     l11616:
 15282                           
 15283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 15284  01032A  0E00               	movlw	0
 15285  01032C  6E09               	movwf	(btemp+8)^0,c
 15286  01032E  0E00               	movlw	0
 15287  010330  6E0A               	movwf	(btemp+9)^0,c
 15288  010332  0E80               	movlw	128
 15289  010334  6E0B               	movwf	(btemp+10)^0,c
 15290  010336  0E3F               	movlw	63
 15291  010338  6E0C               	movwf	(btemp+11)^0,c
 15292                           
 15293                           ;stkvar	_u @ sp[(-56)+12]
 15294  01033A  0ED4               	movlw	-44
 15295  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 15296  010342  0ED5               	movlw	-43
 15297  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15298  01034A  0ED6               	movlw	-42
 15299  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15300  010352  0ED7               	movlw	-41
 15301  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 15302                           
 15303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 15304                           ;stkvar	_e @ sp[(-56)+34]
 15305  01035A  0EEA               	movlw	-22
 15306  01035C  6AE3               	clrf	plusw1,c
 15307  01035E  0EEB               	movlw	-21
 15308  010360  6AE3               	clrf	plusw1,c
 15309                           
 15310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 15311  010362  0E00               	movlw	0
 15312  010364  6EE6               	movwf	postinc1,c
 15313  010366  0E00               	movlw	0
 15314  010368  6EE6               	movwf	postinc1,c
 15315  01036A  0E00               	movlw	0
 15316  01036C  6EE6               	movwf	postinc1,c
 15317  01036E  0E00               	movlw	0
 15318  010370  6EE6               	movwf	postinc1,c
 15319                           
 15320                           ;stkvar	_g @ sp[(-60)+16]
 15321  010372  0ED4               	movlw	-44
 15322  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 15323  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 15324  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 15325  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 15326  01038C  EC74  F0CB         	call	___fleq	;wreg free
 15327  010390  A001               	btfss	btemp& (0+255),0,c
 15328  010392  D039               	goto	l11628
 15329  010394  D0BC               	goto	u10720
 15330  010396                     l11624:
 15331                           
 15332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 15333  010396  0E00               	movlw	0
 15334  010398  6EE6               	movwf	postinc1,c
 15335  01039A  0E00               	movlw	0
 15336  01039C  6EE6               	movwf	postinc1,c
 15337  01039E  0E20               	movlw	32
 15338  0103A0  6EE6               	movwf	postinc1,c
 15339  0103A2  0E41               	movlw	65
 15340  0103A4  6EE6               	movwf	postinc1,c
 15341                           
 15342                           ;stkvar	_u @ sp[(-60)+12]
 15343  0103A6  0ED0               	movlw	-48
 15344  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15345  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15346  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 15347  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 15348  0103C0  EC70  F097         	call	___flmul	;wreg free
 15349                           
 15350                           ;stkvar	_u @ sp[(-56)+12]
 15351  0103C4  0ED4               	movlw	-44
 15352  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 15353  0103CC  0ED5               	movlw	-43
 15354  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15355  0103D4  0ED6               	movlw	-42
 15356  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15357  0103DC  0ED7               	movlw	-41
 15358  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 15359                           
 15360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 15361                           ;stkvar	_e @ sp[(-56)+34]
 15362  0103E4  0EEA               	movlw	-22
 15363  0103E6  50E3               	movf	plusw1,w,c
 15364  0103E8  0F01               	addlw	1
 15365  0103EA  6E01               	movwf	btemp^0,c
 15366  0103EC  0EEA               	movlw	-22
 15367  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 15368  0103F4  6A01               	clrf	btemp^0,c
 15369  0103F6  0EEB               	movlw	-21
 15370  0103F8  50E3               	movf	plusw1,w,c
 15371  0103FA  2001               	addwfc	btemp^0,w,c
 15372  0103FC  6E01               	movwf	btemp^0,c
 15373  0103FE  0EEB               	movlw	-21
 15374  010400  0060  F007  FFE3   	movff	btemp,plusw1
 15375  010406                     l11628:
 15376                           
 15377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 15378  010406  0E00               	movlw	0
 15379  010408  6EE6               	movwf	postinc1,c
 15380  01040A  0E00               	movlw	0
 15381  01040C  6EE6               	movwf	postinc1,c
 15382  01040E  0E20               	movlw	32
 15383  010410  6EE6               	movwf	postinc1,c
 15384  010412  0E41               	movlw	65
 15385  010414  6EE6               	movwf	postinc1,c
 15386                           
 15387                           ;stkvar	_u @ sp[(-60)+12]
 15388  010416  0ED0               	movlw	-48
 15389  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 15390  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 15391  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 15392  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 15393  010430  EC70  F097         	call	___flmul	;wreg free
 15394  010434  0060  F007  FFE6   	movff	btemp,postinc1
 15395  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15396  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15397  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 15398                           
 15399                           ;stkvar	_g @ sp[(-60)+16]
 15400  01044C  0ED4               	movlw	-44
 15401  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 15402  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 15403  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 15404  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 15405  010466  EC0D  F0C2         	call	___flge	;wreg free
 15406  01046A  A001               	btfss	btemp& (0+255),0,c
 15407  01046C  D032               	goto	l11634
 15408  01046E  D793               	goto	l11624
 15409  010470                     l11630:
 15410                           
 15411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 15412  010470  0E00               	movlw	0
 15413  010472  6EE6               	movwf	postinc1,c
 15414  010474  0E00               	movlw	0
 15415  010476  6EE6               	movwf	postinc1,c
 15416  010478  0E20               	movlw	32
 15417  01047A  6EE6               	movwf	postinc1,c
 15418  01047C  0E41               	movlw	65
 15419  01047E  6EE6               	movwf	postinc1,c
 15420                           
 15421                           ;stkvar	_u @ sp[(-60)+12]
 15422  010480  0ED0               	movlw	-48
 15423  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 15424  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 15425  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 15426  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 15427  01049A  ECB2  F0A2         	call	___fldiv	;wreg free
 15428                           
 15429                           ;stkvar	_u @ sp[(-56)+12]
 15430  01049E  0ED4               	movlw	-44
 15431  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 15432  0104A6  0ED5               	movlw	-43
 15433  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15434  0104AE  0ED6               	movlw	-42
 15435  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15436  0104B6  0ED7               	movlw	-41
 15437  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 15438                           
 15439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 15440                           ;stkvar	_e @ sp[(-56)+34]
 15441  0104BE  50E1               	movf	fsr1l,w,c
 15442  0104C0  0FEA               	addlw	-22
 15443  0104C2  6ED9               	movwf	fsr2l,c
 15444  0104C4  50E2               	movf	fsr1h,w,c
 15445  0104C6  6EDA               	movwf	fsr2h,c
 15446  0104C8  0EFF               	movlw	255
 15447  0104CA  22DA               	addwfc	fsr2h,f,c
 15448  0104CC  06DE               	decf	postinc2,f,c
 15449  0104CE  0E00               	movlw	0
 15450  0104D0  5ADD               	subwfb	postdec2,f,c
 15451  0104D2                     l11634:
 15452                           
 15453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 15454                           ;stkvar	_u @ sp[(-56)+12]
 15455  0104D2  0ED4               	movlw	-44
 15456  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15457  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15458  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 15459  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 15460                           
 15461                           ;stkvar	_g @ sp[(-60)+16]
 15462  0104EC  0ED4               	movlw	-44
 15463  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 15464  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 15465  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 15466  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 15467  010506  EC0D  F0C2         	call	___flge	;wreg free
 15468  01050A  A001               	btfss	btemp& (0+255),0,c
 15469  01050C  D7B1               	goto	l11630
 15470  01050E                     u10720:
 15471                           
 15472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 15473                           ;stkvar	_c @ sp[(-56)+-7]
 15474  01050E  0EC1               	movlw	-63
 15475  010510  50E3               	movf	plusw1,w,c
 15476  010512  6EE6               	movwf	postinc1,c
 15477  010514  0E00               	movlw	0
 15478  010516  6EE6               	movwf	postinc1,c
 15479  010518  EC2B  F0D0         	call	_tolower	;wreg free
 15480                           
 15481                           ;stkvar	_mode @ sp[(-56)+54]
 15482  01051C  0EFE               	movlw	-2
 15483  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 15484                           
 15485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 15486                           ;stkvar	_mode @ sp[(-56)+54]
 15487                           ;stkvar	_nmode @ sp[(-56)+55]
 15488  010524  0EFE               	movlw	-2
 15489  010526  006F FF8C  F001    	movff	plusw1,btemp
 15490  01052C  0EFF               	movlw	-1
 15491  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 15492                           
 15493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 15494                           ;stkvar	_mode @ sp[(-56)+54]
 15495  010534  0EFE               	movlw	-2
 15496  010536  006F FF8C  F001    	movff	plusw1,btemp
 15497  01053C  0E67               	movlw	103
 15498  01053E  1801               	xorwf	btemp^0,w,c
 15499  010540  A4D8               	btfss	status,2,c
 15500  010542  D025               	goto	l11652
 15501                           
 15502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 15503  010544  5023               	movf	_prec^0,w,c
 15504  010546  1024               	iorwf	(_prec+1)^0,w,c
 15505  010548  A4D8               	btfss	status,2,c
 15506  01054A  D004               	goto	l11646
 15507                           
 15508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 15509  01054C  0E00               	movlw	0
 15510  01054E  6E24               	movwf	(_prec+1)^0,c
 15511  010550  0E01               	movlw	1
 15512  010552  6E23               	movwf	_prec^0,c
 15513  010554                     l11646:
 15514                           
 15515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 15516  010554  BE24               	btfsc	(_prec+1)^0,7,c
 15517  010556  D005               	goto	u10750
 15518  010558  5024               	movf	(_prec+1)^0,w,c
 15519  01055A  E110               	bnz	l11650
 15520  01055C  0423               	decf	_prec^0,w,c
 15521  01055E  B0D8               	btfsc	status,0,c
 15522  010560  D00D               	goto	l11650
 15523  010562                     u10750:
 15524  010562  0E06               	movlw	6
 15525  010564  6E0B               	movwf	(btemp+10)^0,c
 15526  010566  0E00               	movlw	0
 15527  010568  6E0C               	movwf	(btemp+11)^0,c
 15528                           
 15529                           ;stkvar	_p @ sp[(-56)+40]
 15530  01056A  0EF0               	movlw	-16
 15531  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15532  010572  0EF1               	movlw	-15
 15533  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 15534  01057A  D00C               	goto	l11658
 15535  01057C                     l11650:
 15536                           
 15537                           ;stkvar	_p @ sp[(-56)+40]
 15538  01057C  0EF0               	movlw	-16
 15539  01057E  0060  F08F  FFE3   	movff	_prec,plusw1
 15540  010584  0EF1               	movlw	-15
 15541  010586  0060  F093  FFE3   	movff	_prec+1,plusw1
 15542  01058C  D003               	goto	l11658
 15543  01058E                     l11652:
 15544                           
 15545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 15546  01058E  AE24               	btfss	(_prec+1)^0,7,c
 15547  010590  D7F5               	goto	l11650
 15548  010592  D7E7               	goto	u10750
 15549  010594                     l11658:
 15550                           
 15551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 15552                           ;stkvar	_mode @ sp[(-56)+54]
 15553  010594  0EFE               	movlw	-2
 15554  010596  006F FF8C  F001    	movff	plusw1,btemp
 15555  01059C  0E67               	movlw	103
 15556  01059E  1801               	xorwf	btemp^0,w,c
 15557  0105A0  A4D8               	btfss	status,2,c
 15558  0105A2  D02F               	goto	l11668
 15559                           
 15560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 15561                           ;stkvar	_e @ sp[(-56)+34]
 15562  0105A4  0EEB               	movlw	-21
 15563  0105A6  AEE3               	btfss	plusw1,7,c
 15564  0105A8  D00E               	goto	u10780
 15565  0105AA  0EEA               	movlw	-22
 15566  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 15567  0105B2  0EFC               	movlw	252
 15568  0105B4  5E01               	subwf	btemp^0,f,c
 15569  0105B6  0EEB               	movlw	-21
 15570  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 15571  0105BE  0EFF               	movlw	255
 15572  0105C0  5A01               	subwfb	btemp^0,f,c
 15573  0105C2  A0D8               	btfss	status,0,c
 15574  0105C4  D018               	goto	l11666
 15575  0105C6                     u10780:
 15576                           
 15577                           ;stkvar	_e @ sp[(-56)+34]
 15578                           ;stkvar	_p @ sp[(-56)+40]
 15579  0105C6  0EF0               	movlw	-16
 15580  0105C8  50E3               	movf	plusw1,w,c
 15581  0105CA  0FFF               	addlw	255
 15582  0105CC  6E0B               	movwf	(btemp+10)^0,c
 15583  0105CE  0EF1               	movlw	-15
 15584  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15585  0105D6  0EFF               	movlw	255
 15586  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 15587  0105DA  0EEA               	movlw	-22
 15588  0105DC  50E3               	movf	plusw1,w,c
 15589  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 15590  0105E0  500C               	movf	(btemp+11)^0,w,c
 15591  0105E2  0A80               	xorlw	128
 15592  0105E4  6E01               	movwf	btemp^0,c
 15593  0105E6  0EEB               	movlw	-21
 15594  0105E8  50E3               	movf	plusw1,w,c
 15595  0105EA  0A80               	xorlw	128
 15596  0105EC  5801               	subwfb	btemp^0,w,c
 15597  0105EE  A0D8               	btfss	status,0,c
 15598  0105F0  D002               	goto	l11666
 15599                           
 15600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 15601  0105F2  0E66               	movlw	102
 15602  0105F4  D001               	goto	L14
 15603  0105F6                     l11666:
 15604                           
 15605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 15606  0105F6  0E65               	movlw	101
 15607  0105F8                     L14:
 15608  0105F8  6E0C               	movwf	(btemp+11)^0,c
 15609                           
 15610                           ;stkvar	_nmode @ sp[(-56)+55]
 15611  0105FA  0EFF               	movlw	-1
 15612  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15613  010602                     l11668:
 15614                           
 15615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 15616                           ;stkvar	_p @ sp[(-56)+40]
 15617                           ;stkvar	_m @ sp[(-56)+48]
 15618  010602  0EF0               	movlw	-16
 15619  010604  006F FF8C  F001    	movff	plusw1,btemp
 15620  01060A  0EF8               	movlw	-8
 15621  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 15622  010612  0EF1               	movlw	-15
 15623  010614  006F FF8C  F001    	movff	plusw1,btemp
 15624  01061A  0EF9               	movlw	-7
 15625  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 15626                           
 15627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 15628                           ;stkvar	_mode @ sp[(-56)+54]
 15629  010622  0EFE               	movlw	-2
 15630  010624  006F FF8C  F001    	movff	plusw1,btemp
 15631  01062A  0E67               	movlw	103
 15632  01062C  1801               	xorwf	btemp^0,w,c
 15633  01062E  A4D8               	btfss	status,2,c
 15634  010630  D00B               	goto	u10820
 15635                           
 15636                           ;stkvar	_nmode @ sp[(-56)+55]
 15637  010632  0EFF               	movlw	-1
 15638  010634  006F FF8C  F001    	movff	plusw1,btemp
 15639  01063A  0E66               	movlw	102
 15640  01063C  1801               	xorwf	btemp^0,w,c
 15641  01063E  A4D8               	btfss	status,2,c
 15642  010640  D014               	goto	l2189
 15643                           
 15644                           ;stkvar	_e @ sp[(-56)+34]
 15645  010642  0EEB               	movlw	-21
 15646  010644  AEE3               	btfss	plusw1,7,c
 15647  010646  D011               	goto	l2189
 15648  010648                     u10820:
 15649                           
 15650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 15651                           ;stkvar	_m @ sp[(-56)+48]
 15652  010648  0EF8               	movlw	-8
 15653  01064A  50E3               	movf	plusw1,w,c
 15654  01064C  0F01               	addlw	1
 15655  01064E  6E01               	movwf	btemp^0,c
 15656  010650  0EF8               	movlw	-8
 15657  010652  0060  F007  FFE3   	movff	btemp,plusw1
 15658  010658  6A01               	clrf	btemp^0,c
 15659  01065A  0EF9               	movlw	-7
 15660  01065C  50E3               	movf	plusw1,w,c
 15661  01065E  2001               	addwfc	btemp^0,w,c
 15662  010660  6E01               	movwf	btemp^0,c
 15663  010662  0EF9               	movlw	-7
 15664  010664  0060  F007  FFE3   	movff	btemp,plusw1
 15665  01066A                     l2189:
 15666                           
 15667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 15668                           ;stkvar	_nmode @ sp[(-56)+55]
 15669  01066A  0EFF               	movlw	-1
 15670  01066C  006F FF8C  F001    	movff	plusw1,btemp
 15671  010672  0E66               	movlw	102
 15672  010674  1801               	xorwf	btemp^0,w,c
 15673  010676  A4D8               	btfss	status,2,c
 15674  010678  D03B               	goto	l11688
 15675                           
 15676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 15677                           ;stkvar	_e @ sp[(-56)+34]
 15678  01067A  0EEB               	movlw	-21
 15679  01067C  AEE3               	btfss	plusw1,7,c
 15680  01067E  D01C               	goto	l11684
 15681                           
 15682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 15683  010680  0E00               	movlw	0
 15684  010682  6E09               	movwf	(btemp+8)^0,c
 15685  010684  0E00               	movlw	0
 15686  010686  6E0A               	movwf	(btemp+9)^0,c
 15687  010688  0E80               	movlw	128
 15688  01068A  6E0B               	movwf	(btemp+10)^0,c
 15689  01068C  0E3F               	movlw	63
 15690  01068E  6E0C               	movwf	(btemp+11)^0,c
 15691                           
 15692                           ;stkvar	_u @ sp[(-56)+12]
 15693  010690  0ED4               	movlw	-44
 15694  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 15695  010698  0ED5               	movlw	-43
 15696  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15697  0106A0  0ED6               	movlw	-42
 15698  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15699  0106A8  0ED7               	movlw	-41
 15700  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 15701                           
 15702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 15703                           ;stkvar	_e @ sp[(-56)+34]
 15704  0106B0  0EEA               	movlw	-22
 15705  0106B2  6AE3               	clrf	plusw1,c
 15706  0106B4  0EEB               	movlw	-21
 15707  0106B6  6AE3               	clrf	plusw1,c
 15708  0106B8                     l11684:
 15709                           
 15710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 15711                           ;stkvar	_mode @ sp[(-56)+54]
 15712  0106B8  0EFE               	movlw	-2
 15713  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 15714  0106C0  0E67               	movlw	103
 15715  0106C2  1801               	xorwf	btemp^0,w,c
 15716  0106C4  B4D8               	btfsc	status,2,c
 15717  0106C6  D014               	goto	l11688
 15718                           
 15719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 15720                           ;stkvar	_e @ sp[(-56)+34]
 15721                           ;stkvar	_m @ sp[(-56)+48]
 15722  0106C8  0EF8               	movlw	-8
 15723  0106CA  50E3               	movf	plusw1,w,c
 15724  0106CC  6E01               	movwf	btemp^0,c
 15725  0106CE  0EEA               	movlw	-22
 15726  0106D0  50E3               	movf	plusw1,w,c
 15727  0106D2  2601               	addwf	btemp^0,f,c
 15728  0106D4  0EF8               	movlw	-8
 15729  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 15730  0106DC  0EF9               	movlw	-7
 15731  0106DE  50E3               	movf	plusw1,w,c
 15732  0106E0  6E01               	movwf	btemp^0,c
 15733  0106E2  0EEB               	movlw	-21
 15734  0106E4  50E3               	movf	plusw1,w,c
 15735  0106E6  2201               	addwfc	btemp^0,f,c
 15736  0106E8  0EF9               	movlw	-7
 15737  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 15738  0106F0                     l11688:
 15739                           
 15740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 15741                           ;stkvar	_i @ sp[(-56)+36]
 15742  0106F0  0EEC               	movlw	-20
 15743  0106F2  6AE3               	clrf	plusw1,c
 15744  0106F4  0EED               	movlw	-19
 15745  0106F6  6AE3               	clrf	plusw1,c
 15746                           
 15747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 15748                           ;stkvar	_g @ sp[(-56)+16]
 15749  0106F8  0ED8               	movlw	-40
 15750  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 15751  010700  0ED9               	movlw	-39
 15752  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 15753  010708  0EDA               	movlw	-38
 15754  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15755  010710  0EDB               	movlw	-37
 15756  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 15757                           
 15758                           ;stkvar	_h @ sp[(-56)+24]
 15759  010718  0EE0               	movlw	-32
 15760  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15761  010720  0EE1               	movlw	-31
 15762  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15763  010728  0EE2               	movlw	-30
 15764  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15765  010730  0EE3               	movlw	-29
 15766  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 15767                           
 15768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 15769                           ;stkvar	_u @ sp[(-56)+12]
 15770  010738  0ED4               	movlw	-44
 15771  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 15772  010740  0ED5               	movlw	-43
 15773  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 15774  010748  0ED6               	movlw	-42
 15775  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15776  010750  0ED7               	movlw	-41
 15777  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 15778                           
 15779                           ;stkvar	_ou @ sp[(-56)+28]
 15780  010758  0EE4               	movlw	-28
 15781  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15782  010760  0EE5               	movlw	-27
 15783  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15784  010768  0EE6               	movlw	-26
 15785  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15786  010770  0EE7               	movlw	-25
 15787  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 15788                           
 15789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 15790  010778  D0D6               	goto	l11704
 15791  01077A                     l11694:
 15792                           
 15793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 15794                           ;stkvar	_u @ sp[(-56)+12]
 15795  01077A  0ED4               	movlw	-44
 15796  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 15797  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 15798  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 15799  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 15800                           
 15801                           ;stkvar	_h @ sp[(-60)+24]
 15802  010794  0EDC               	movlw	-36
 15803  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 15804  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 15805  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 15806  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15807  0107AE  ECB2  F0A2         	call	___fldiv	;wreg free
 15808  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 15809  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15810  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15811  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 15812  0107CA  EC99  F0AF         	call	_floorf	;wreg free
 15813                           
 15814                           ;stkvar	_l @ sp[(-56)+20]
 15815  0107CE  0EDC               	movlw	-36
 15816  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 15817  0107D6  0EDD               	movlw	-35
 15818  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15819  0107DE  0EDE               	movlw	-34
 15820  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15821  0107E6  0EDF               	movlw	-33
 15822  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 15823                           
 15824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 15825                           ;stkvar	_l @ sp[(-56)+20]
 15826  0107EE  0EDC               	movlw	-36
 15827  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 15828  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 15829  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 15830  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 15831  010808  EC9C  F0C0         	call	___fltol	;wreg free
 15832  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 15833  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 15834                           
 15835                           ;stkvar	_d @ sp[(-56)+44]
 15836  010818  0EF4               	movlw	-12
 15837  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15838  010820  0EF5               	movlw	-11
 15839  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 15840                           
 15841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 15842                           ;stkvar	_u @ sp[(-56)+12]
 15843  010828  0ED4               	movlw	-44
 15844  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 15845  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 15846  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 15847  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 15848                           
 15849                           ;stkvar	_l @ sp[(-60)+20]
 15850  010842  0ED8               	movlw	-40
 15851  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 15852  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 15853  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 15854  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 15855  01085C  EC70  F097         	call	___flmul	;wreg free
 15856  010860  0060  F007  FFE6   	movff	btemp,postinc1
 15857  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15858  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15859  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 15860                           
 15861                           ;stkvar	_h @ sp[(-60)+24]
 15862  010878  0EDC               	movlw	-36
 15863  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 15864  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 15865  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 15866  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 15867  010892  ECD7  F0D3         	call	___flsub	;wreg free
 15868                           
 15869                           ;stkvar	_h @ sp[(-56)+24]
 15870  010896  0EE0               	movlw	-32
 15871  010898  0060  F007  FFE3   	movff	btemp,plusw1
 15872  01089E  0EE1               	movlw	-31
 15873  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15874  0108A6  0EE2               	movlw	-30
 15875  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15876  0108AE  0EE3               	movlw	-29
 15877  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 15878                           
 15879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 15880  0108B6  0E00               	movlw	0
 15881  0108B8  6EE6               	movwf	postinc1,c
 15882  0108BA  0E00               	movlw	0
 15883  0108BC  6EE6               	movwf	postinc1,c
 15884  0108BE  0E20               	movlw	32
 15885  0108C0  6EE6               	movwf	postinc1,c
 15886  0108C2  0E41               	movlw	65
 15887  0108C4  6EE6               	movwf	postinc1,c
 15888                           
 15889                           ;stkvar	_u @ sp[(-60)+12]
 15890  0108C6  0ED0               	movlw	-48
 15891  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15892  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 15893  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15894  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15895  0108E0  ECB2  F0A2         	call	___fldiv	;wreg free
 15896                           
 15897                           ;stkvar	_u @ sp[(-56)+12]
 15898  0108E4  0ED4               	movlw	-44
 15899  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 15900  0108EC  0ED5               	movlw	-43
 15901  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15902  0108F4  0ED6               	movlw	-42
 15903  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15904  0108FC  0ED7               	movlw	-41
 15905  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 15906                           
 15907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 15908                           ;stkvar	_i @ sp[(-56)+36]
 15909  010904  0EEC               	movlw	-20
 15910  010906  50E3               	movf	plusw1,w,c
 15911  010908  0F01               	addlw	1
 15912  01090A  6E01               	movwf	btemp^0,c
 15913  01090C  0EEC               	movlw	-20
 15914  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 15915  010914  6A01               	clrf	btemp^0,c
 15916  010916  0EED               	movlw	-19
 15917  010918  50E3               	movf	plusw1,w,c
 15918  01091A  2001               	addwfc	btemp^0,w,c
 15919  01091C  6E01               	movwf	btemp^0,c
 15920  01091E  0EED               	movlw	-19
 15921  010920  0060  F007  FFE3   	movff	btemp,plusw1
 15922  010926                     l11704:
 15923                           
 15924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 15925                           ;stkvar	_m @ sp[(-56)+48]
 15926                           ;stkvar	_i @ sp[(-56)+36]
 15927  010926  50E1               	movf	fsr1l,w,c
 15928  010928  0FEC               	addlw	-20
 15929  01092A  6ED9               	movwf	fsr2l,c
 15930  01092C  50E2               	movf	fsr1h,w,c
 15931  01092E  6EDA               	movwf	fsr2h,c
 15932  010930  0EFF               	movlw	255
 15933  010932  22DA               	addwfc	fsr2h,f,c
 15934  010934  0EF8               	movlw	-8
 15935  010936  50E3               	movf	plusw1,w,c
 15936  010938  5CDE               	subwf	postinc2,w,c
 15937  01093A  50DE               	movf	postinc2,w,c
 15938  01093C  0A80               	xorlw	128
 15939  01093E  6E01               	movwf	btemp^0,c
 15940  010940  0EF9               	movlw	-7
 15941  010942  50E3               	movf	plusw1,w,c
 15942  010944  0A80               	xorlw	128
 15943  010946  5801               	subwfb	btemp^0,w,c
 15944  010948  A0D8               	btfss	status,0,c
 15945  01094A  D717               	goto	l11694
 15946                           
 15947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 15948  01094C  0E00               	movlw	0
 15949  01094E  6EE6               	movwf	postinc1,c
 15950  010950  0E00               	movlw	0
 15951  010952  6EE6               	movwf	postinc1,c
 15952  010954  0EA0               	movlw	160
 15953  010956  6EE6               	movwf	postinc1,c
 15954  010958  0E40               	movlw	64
 15955  01095A  6EE6               	movwf	postinc1,c
 15956                           
 15957                           ;stkvar	_u @ sp[(-60)+12]
 15958  01095C  0ED0               	movlw	-48
 15959  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 15960  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 15961  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 15962  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 15963  010976  EC70  F097         	call	___flmul	;wreg free
 15964                           
 15965                           ;stkvar	_l @ sp[(-56)+20]
 15966  01097A  0EDC               	movlw	-36
 15967  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 15968  010982  0EDD               	movlw	-35
 15969  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15970  01098A  0EDE               	movlw	-34
 15971  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15972  010992  0EDF               	movlw	-33
 15973  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 15974                           
 15975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 15976                           ;stkvar	_l @ sp[(-56)+20]
 15977  01099A  0EDC               	movlw	-36
 15978  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 15979  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 15980  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15981  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15982                           
 15983                           ;stkvar	_h @ sp[(-60)+24]
 15984  0109B4  0EDC               	movlw	-36
 15985  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 15986  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 15987  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 15988  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15989  0109CE  EC0D  F0C2         	call	___flge	;wreg free
 15990  0109D2  A001               	btfss	btemp& (0+255),0,c
 15991  0109D4  D021               	goto	u10890
 15992                           
 15993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 15994                           ;stkvar	_l @ sp[(-56)+20]
 15995                           
 15996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 15997                           
 15998                           ;stkvar	_l @ sp[(-56)+20]
 15999                           
 16000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 16001  0109D6  0EDC               	movlw	-36
 16002  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16003  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 16004  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 16005  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 16006                           
 16007                           ;stkvar	_h @ sp[(-60)+24]
 16008  0109F0  0EDC               	movlw	-36
 16009  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16010  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 16011  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 16012  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 16013  010A0A  EC74  F0CB         	call	___fleq	;wreg free
 16014  010A0E  A001               	btfss	btemp& (0+255),0,c
 16015  010A10  D01B               	goto	l11718
 16016                           
 16017                           ;stkvar	_d @ sp[(-56)+44]
 16018  010A12  0EF4               	movlw	-12
 16019  010A14  B0E3               	btfsc	plusw1,0,c
 16020  010A16  D018               	goto	l11718
 16021  010A18                     u10890:
 16022                           
 16023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 16024  010A18  0E00               	movlw	0
 16025  010A1A  6E09               	movwf	(btemp+8)^0,c
 16026  010A1C  0E00               	movlw	0
 16027  010A1E  6E0A               	movwf	(btemp+9)^0,c
 16028  010A20  0E00               	movlw	0
 16029  010A22  6E0B               	movwf	(btemp+10)^0,c
 16030  010A24  0E00               	movlw	0
 16031  010A26  6E0C               	movwf	(btemp+11)^0,c
 16032                           
 16033                           ;stkvar	_l @ sp[(-56)+20]
 16034  010A28  0EDC               	movlw	-36
 16035  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16036  010A30  0EDD               	movlw	-35
 16037  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16038  010A38  0EDE               	movlw	-34
 16039  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16040  010A40  0EDF               	movlw	-33
 16041  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 16042  010A48                     l11718:
 16043                           
 16044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 16045                           ;stkvar	_l @ sp[(-56)+20]
 16046  010A48  0EDC               	movlw	-36
 16047  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 16048  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 16049  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 16050  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16051                           
 16052                           ;stkvar	_g @ sp[(-60)+16]
 16053  010A62  0ED4               	movlw	-44
 16054  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 16055  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 16056  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 16057  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 16058  010A7C  EC85  F09B         	call	___fladd	;wreg free
 16059                           
 16060                           ;stkvar	_h @ sp[(-56)+24]
 16061  010A80  0EE0               	movlw	-32
 16062  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 16063  010A88  0EE1               	movlw	-31
 16064  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16065  010A90  0EE2               	movlw	-30
 16066  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16067  010A98  0EE3               	movlw	-29
 16068  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 16069                           
 16070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 16071                           ;stkvar	_ou @ sp[(-56)+28]
 16072  010AA0  0EE4               	movlw	-28
 16073  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 16074  010AA8  0EE5               	movlw	-27
 16075  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 16076  010AB0  0EE6               	movlw	-26
 16077  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 16078  010AB8  0EE7               	movlw	-25
 16079  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 16080                           
 16081                           ;stkvar	_u @ sp[(-56)+12]
 16082  010AC0  0ED4               	movlw	-44
 16083  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 16084  010AC8  0ED5               	movlw	-43
 16085  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16086  010AD0  0ED6               	movlw	-42
 16087  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16088  010AD8  0ED7               	movlw	-41
 16089  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16090                           
 16091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 16092                           ;stkvar	_nmode @ sp[(-56)+55]
 16093  010AE0  0EFF               	movlw	-1
 16094  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 16095  010AE8  0E65               	movlw	101
 16096  010AEA  1801               	xorwf	btemp^0,w,c
 16097  010AEC  B4D8               	btfsc	status,2,c
 16098  010AEE  D011               	goto	l11726
 16099                           
 16100                           ;stkvar	_e @ sp[(-56)+34]
 16101                           ;stkvar	_ne @ sp[(-56)+46]
 16102  010AF0  0EEA               	movlw	-22
 16103  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 16104  010AF8  0EF6               	movlw	-10
 16105  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 16106  010B00  0EEB               	movlw	-21
 16107  010B02  006F FF8C  F001    	movff	plusw1,btemp
 16108  010B08  0EF7               	movlw	-9
 16109  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 16110  010B10  D004               	goto	l2204
 16111  010B12                     l11726:
 16112                           
 16113                           ;stkvar	_ne @ sp[(-56)+46]
 16114  010B12  0EF6               	movlw	-10
 16115  010B14  6AE3               	clrf	plusw1,c
 16116  010B16  0EF7               	movlw	-9
 16117  010B18  6AE3               	clrf	plusw1,c
 16118  010B1A                     l2204:
 16119                           
 16120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 16121                           ;stkvar	_pp @ sp[(-56)+50]
 16122  010B1A  0EFA               	movlw	-6
 16123  010B1C  6AE3               	clrf	plusw1,c
 16124  010B1E  0EFB               	movlw	-5
 16125  010B20  6AE3               	clrf	plusw1,c
 16126                           
 16127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 16128                           ;stkvar	_t @ sp[(-56)+52]
 16129  010B22  0EFC               	movlw	-4
 16130  010B24  6AE3               	clrf	plusw1,c
 16131  010B26  0EFD               	movlw	-3
 16132  010B28  6AE3               	clrf	plusw1,c
 16133                           
 16134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 16135                           ;stkvar	_i @ sp[(-56)+36]
 16136  010B2A  0EEC               	movlw	-20
 16137  010B2C  6AE3               	clrf	plusw1,c
 16138  010B2E  0EED               	movlw	-19
 16139  010B30  6AE3               	clrf	plusw1,c
 16140                           
 16141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16142  010B32  D1B7               	goto	l11778
 16143  010B34                     l11728:
 16144                           
 16145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 16146                           ;stkvar	_u @ sp[(-56)+12]
 16147  010B34  0ED4               	movlw	-44
 16148  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 16149  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16150  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 16151  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 16152                           
 16153                           ;stkvar	_h @ sp[(-60)+24]
 16154  010B4E  0EDC               	movlw	-36
 16155  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 16156  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 16157  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16158  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 16159  010B68  ECB2  F0A2         	call	___fldiv	;wreg free
 16160  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 16161  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16162  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16163  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 16164  010B84  EC99  F0AF         	call	_floorf	;wreg free
 16165                           
 16166                           ;stkvar	_l @ sp[(-56)+20]
 16167  010B88  0EDC               	movlw	-36
 16168  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 16169  010B90  0EDD               	movlw	-35
 16170  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16171  010B98  0EDE               	movlw	-34
 16172  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16173  010BA0  0EDF               	movlw	-33
 16174  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 16175                           
 16176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 16177                           ;stkvar	_l @ sp[(-56)+20]
 16178  010BA8  0EDC               	movlw	-36
 16179  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 16180  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 16181  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 16182  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 16183  010BC2  EC9C  F0C0         	call	___fltol	;wreg free
 16184  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 16185  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 16186                           
 16187                           ;stkvar	_d @ sp[(-56)+44]
 16188  010BD2  0EF4               	movlw	-12
 16189  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16190  010BDA  0EF5               	movlw	-11
 16191  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16192                           
 16193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16194  010BE2  B825               	btfsc	_flags^0,4,c
 16195  010BE4  D026               	goto	l11742
 16196                           
 16197                           ;stkvar	_d @ sp[(-56)+44]
 16198  010BE6  0EF4               	movlw	-12
 16199  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 16200  010BEE  0EF5               	movlw	-11
 16201  010BF0  50E3               	movf	plusw1,w,c
 16202  010BF2  1001               	iorwf	btemp^0,w,c
 16203  010BF4  A4D8               	btfss	status,2,c
 16204  010BF6  D01D               	goto	l11742
 16205                           
 16206                           ;stkvar	_mode @ sp[(-56)+54]
 16207  010BF8  0EFE               	movlw	-2
 16208  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 16209  010C00  0E67               	movlw	103
 16210  010C02  1801               	xorwf	btemp^0,w,c
 16211  010C04  A4D8               	btfss	status,2,c
 16212  010C06  D015               	goto	l11742
 16213                           
 16214                           ;stkvar	_ne @ sp[(-56)+46]
 16215  010C08  0EF7               	movlw	-9
 16216  010C0A  AEE3               	btfss	plusw1,7,c
 16217  010C0C  D012               	goto	l11742
 16218                           
 16219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 16220                           ;stkvar	_t @ sp[(-56)+52]
 16221  010C0E  0EFC               	movlw	-4
 16222  010C10  50E3               	movf	plusw1,w,c
 16223  010C12  0F01               	addlw	1
 16224  010C14  6E01               	movwf	btemp^0,c
 16225  010C16  0EFC               	movlw	-4
 16226  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 16227  010C1E  6A01               	clrf	btemp^0,c
 16228  010C20  0EFD               	movlw	-3
 16229  010C22  50E3               	movf	plusw1,w,c
 16230  010C24  2001               	addwfc	btemp^0,w,c
 16231  010C26  6E01               	movwf	btemp^0,c
 16232  010C28  0EFD               	movlw	-3
 16233  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 16234                           
 16235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 16236  010C30  D0AF               	goto	l11770
 16237  010C32                     l11742:
 16238                           
 16239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 16240                           ;stkvar	_pp @ sp[(-56)+50]
 16241  010C32  0EFA               	movlw	-6
 16242  010C34  006F FF8C  F001    	movff	plusw1,btemp
 16243  010C3A  0EFB               	movlw	-5
 16244  010C3C  50E3               	movf	plusw1,w,c
 16245  010C3E  1001               	iorwf	btemp^0,w,c
 16246  010C40  A4D8               	btfss	status,2,c
 16247  010C42  D070               	goto	l11762
 16248                           
 16249                           ;stkvar	_ne @ sp[(-56)+46]
 16250  010C44  0EF7               	movlw	-9
 16251  010C46  AEE3               	btfss	plusw1,7,c
 16252  010C48  D06D               	goto	l11762
 16253                           
 16254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 16255                           ;stkvar	_n @ sp[(-56)+32]
 16256  010C4A  0EE8               	movlw	-24
 16257  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16258  010C52  0EE9               	movlw	-23
 16259  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 16260  010C5A  0E94               	movlw	low _dbuf
 16261  010C5C  240B               	addwf	(btemp+10)^0,w,c
 16262  010C5E  6ED9               	movwf	fsr2l,c
 16263  010C60  0E03               	movlw	high _dbuf
 16264  010C62  200C               	addwfc	(btemp+11)^0,w,c
 16265  010C64  6EDA               	movwf	fsr2h,c
 16266  010C66  0E2E               	movlw	46
 16267  010C68  6EDF               	movwf	indf2,c
 16268                           
 16269                           ;stkvar	_n @ sp[(-56)+32]
 16270  010C6A  0EE8               	movlw	-24
 16271  010C6C  50E3               	movf	plusw1,w,c
 16272  010C6E  0F01               	addlw	1
 16273  010C70  6E01               	movwf	btemp^0,c
 16274  010C72  0EE8               	movlw	-24
 16275  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 16276  010C7A  6A01               	clrf	btemp^0,c
 16277  010C7C  0EE9               	movlw	-23
 16278  010C7E  50E3               	movf	plusw1,w,c
 16279  010C80  2001               	addwfc	btemp^0,w,c
 16280  010C82  6E01               	movwf	btemp^0,c
 16281  010C84  0EE9               	movlw	-23
 16282  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 16283                           
 16284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 16285                           ;stkvar	_w @ sp[(-56)+38]
 16286  010C8C  50E1               	movf	fsr1l,w,c
 16287  010C8E  0FEE               	addlw	-18
 16288  010C90  6ED9               	movwf	fsr2l,c
 16289  010C92  50E2               	movf	fsr1h,w,c
 16290  010C94  6EDA               	movwf	fsr2h,c
 16291  010C96  0EFF               	movlw	255
 16292  010C98  22DA               	addwfc	fsr2h,f,c
 16293  010C9A  06DE               	decf	postinc2,f,c
 16294  010C9C  0E00               	movlw	0
 16295  010C9E  5ADD               	subwfb	postdec2,f,c
 16296                           
 16297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 16298  010CA0  0E01               	movlw	1
 16299  010CA2  6E0B               	movwf	(btemp+10)^0,c
 16300  010CA4  0E00               	movlw	0
 16301  010CA6  6E0C               	movwf	(btemp+11)^0,c
 16302                           
 16303                           ;stkvar	_pp @ sp[(-56)+50]
 16304  010CA8  0EFA               	movlw	-6
 16305  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16306  010CB0  0EFB               	movlw	-5
 16307  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16308  010CB8  D035               	goto	l11762
 16309  010CBA                     l11754:
 16310                           
 16311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 16312                           ;stkvar	_n @ sp[(-56)+32]
 16313  010CBA  0EE8               	movlw	-24
 16314  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16315  010CC2  0EE9               	movlw	-23
 16316  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16317  010CCA  0E94               	movlw	low _dbuf
 16318  010CCC  240B               	addwf	(btemp+10)^0,w,c
 16319  010CCE  6ED9               	movwf	fsr2l,c
 16320  010CD0  0E03               	movlw	high _dbuf
 16321  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 16322  010CD4  6EDA               	movwf	fsr2h,c
 16323  010CD6  0E30               	movlw	48
 16324  010CD8  6EDF               	movwf	indf2,c
 16325                           
 16326                           ;stkvar	_n @ sp[(-56)+32]
 16327  010CDA  0EE8               	movlw	-24
 16328  010CDC  50E3               	movf	plusw1,w,c
 16329  010CDE  0F01               	addlw	1
 16330  010CE0  6E01               	movwf	btemp^0,c
 16331  010CE2  0EE8               	movlw	-24
 16332  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 16333  010CEA  6A01               	clrf	btemp^0,c
 16334  010CEC  0EE9               	movlw	-23
 16335  010CEE  50E3               	movf	plusw1,w,c
 16336  010CF0  2001               	addwfc	btemp^0,w,c
 16337  010CF2  6E01               	movwf	btemp^0,c
 16338  010CF4  0EE9               	movlw	-23
 16339  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 16340                           
 16341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 16342                           ;stkvar	_w @ sp[(-56)+38]
 16343  010CFC  50E1               	movf	fsr1l,w,c
 16344  010CFE  0FEE               	addlw	-18
 16345  010D00  6ED9               	movwf	fsr2l,c
 16346  010D02  50E2               	movf	fsr1h,w,c
 16347  010D04  6EDA               	movwf	fsr2h,c
 16348  010D06  0EFF               	movlw	255
 16349  010D08  22DA               	addwfc	fsr2h,f,c
 16350  010D0A  06DE               	decf	postinc2,f,c
 16351  010D0C  0E00               	movlw	0
 16352  010D0E  5ADD               	subwfb	postdec2,f,c
 16353                           
 16354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 16355                           ;stkvar	_t @ sp[(-56)+52]
 16356  010D10  50E1               	movf	fsr1l,w,c
 16357  010D12  0FFC               	addlw	-4
 16358  010D14  6ED9               	movwf	fsr2l,c
 16359  010D16  50E2               	movf	fsr1h,w,c
 16360  010D18  6EDA               	movwf	fsr2h,c
 16361  010D1A  0EFF               	movlw	255
 16362  010D1C  22DA               	addwfc	fsr2h,f,c
 16363  010D1E  06DE               	decf	postinc2,f,c
 16364  010D20  0E00               	movlw	0
 16365  010D22  5ADD               	subwfb	postdec2,f,c
 16366  010D24                     l11762:
 16367                           
 16368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 16369                           ;stkvar	_t @ sp[(-56)+52]
 16370  010D24  0EFC               	movlw	-4
 16371  010D26  006F FF8C  F001    	movff	plusw1,btemp
 16372  010D2C  0EFD               	movlw	-3
 16373  010D2E  50E3               	movf	plusw1,w,c
 16374  010D30  1001               	iorwf	btemp^0,w,c
 16375  010D32  A4D8               	btfss	status,2,c
 16376  010D34  D7C2               	goto	l11754
 16377                           
 16378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 16379                           ;stkvar	_n @ sp[(-56)+32]
 16380  010D36  0EE8               	movlw	-24
 16381  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 16382  010D3E  0EE9               	movlw	-23
 16383  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 16384  010D46  0E94               	movlw	low _dbuf
 16385  010D48  240B               	addwf	(btemp+10)^0,w,c
 16386  010D4A  6ED9               	movwf	fsr2l,c
 16387  010D4C  0E03               	movlw	high _dbuf
 16388  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 16389  010D50  6EDA               	movwf	fsr2h,c
 16390                           
 16391                           ;stkvar	_d @ sp[(-56)+44]
 16392  010D52  0EF4               	movlw	-12
 16393  010D54  50E3               	movf	plusw1,w,c
 16394  010D56  0F30               	addlw	48
 16395  010D58  6EDF               	movwf	indf2,c
 16396                           
 16397                           ;stkvar	_n @ sp[(-56)+32]
 16398  010D5A  0EE8               	movlw	-24
 16399  010D5C  50E3               	movf	plusw1,w,c
 16400  010D5E  0F01               	addlw	1
 16401  010D60  6E01               	movwf	btemp^0,c
 16402  010D62  0EE8               	movlw	-24
 16403  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 16404  010D6A  6A01               	clrf	btemp^0,c
 16405  010D6C  0EE9               	movlw	-23
 16406  010D6E  50E3               	movf	plusw1,w,c
 16407  010D70  2001               	addwfc	btemp^0,w,c
 16408  010D72  6E01               	movwf	btemp^0,c
 16409  010D74  0EE9               	movlw	-23
 16410  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 16411                           
 16412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 16413                           ;stkvar	_w @ sp[(-56)+38]
 16414  010D7C  50E1               	movf	fsr1l,w,c
 16415  010D7E  0FEE               	addlw	-18
 16416  010D80  6ED9               	movwf	fsr2l,c
 16417  010D82  50E2               	movf	fsr1h,w,c
 16418  010D84  6EDA               	movwf	fsr2h,c
 16419  010D86  0EFF               	movlw	255
 16420  010D88  22DA               	addwfc	fsr2h,f,c
 16421  010D8A  06DE               	decf	postinc2,f,c
 16422  010D8C  0E00               	movlw	0
 16423  010D8E  5ADD               	subwfb	postdec2,f,c
 16424  010D90                     l11770:
 16425                           
 16426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 16427                           ;stkvar	_u @ sp[(-56)+12]
 16428  010D90  0ED4               	movlw	-44
 16429  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 16430  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 16431  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 16432  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 16433                           
 16434                           ;stkvar	_l @ sp[(-60)+20]
 16435  010DAA  0ED8               	movlw	-40
 16436  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 16437  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 16438  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 16439  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 16440  010DC4  EC70  F097         	call	___flmul	;wreg free
 16441  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 16442  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16443  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16444  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 16445                           
 16446                           ;stkvar	_h @ sp[(-60)+24]
 16447  010DE0  0EDC               	movlw	-36
 16448  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 16449  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 16450  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 16451  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 16452  010DFA  ECD7  F0D3         	call	___flsub	;wreg free
 16453                           
 16454                           ;stkvar	_h @ sp[(-56)+24]
 16455  010DFE  0EE0               	movlw	-32
 16456  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 16457  010E06  0EE1               	movlw	-31
 16458  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16459  010E0E  0EE2               	movlw	-30
 16460  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16461  010E16  0EE3               	movlw	-29
 16462  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 16463                           
 16464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 16465  010E1E  0E00               	movlw	0
 16466  010E20  6EE6               	movwf	postinc1,c
 16467  010E22  0E00               	movlw	0
 16468  010E24  6EE6               	movwf	postinc1,c
 16469  010E26  0E20               	movlw	32
 16470  010E28  6EE6               	movwf	postinc1,c
 16471  010E2A  0E41               	movlw	65
 16472  010E2C  6EE6               	movwf	postinc1,c
 16473                           
 16474                           ;stkvar	_u @ sp[(-60)+12]
 16475  010E2E  0ED0               	movlw	-48
 16476  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 16477  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 16478  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16479  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 16480  010E48  ECB2  F0A2         	call	___fldiv	;wreg free
 16481                           
 16482                           ;stkvar	_u @ sp[(-56)+12]
 16483  010E4C  0ED4               	movlw	-44
 16484  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 16485  010E54  0ED5               	movlw	-43
 16486  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16487  010E5C  0ED6               	movlw	-42
 16488  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16489  010E64  0ED7               	movlw	-41
 16490  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 16491                           
 16492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 16493                           ;stkvar	_ne @ sp[(-56)+46]
 16494  010E6C  50E1               	movf	fsr1l,w,c
 16495  010E6E  0FF6               	addlw	-10
 16496  010E70  6ED9               	movwf	fsr2l,c
 16497  010E72  50E2               	movf	fsr1h,w,c
 16498  010E74  6EDA               	movwf	fsr2h,c
 16499  010E76  0EFF               	movlw	255
 16500  010E78  22DA               	addwfc	fsr2h,f,c
 16501  010E7A  06DE               	decf	postinc2,f,c
 16502  010E7C  0E00               	movlw	0
 16503  010E7E  5ADD               	subwfb	postdec2,f,c
 16504                           
 16505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 16506                           ;stkvar	_i @ sp[(-56)+36]
 16507  010E80  0EEC               	movlw	-20
 16508  010E82  50E3               	movf	plusw1,w,c
 16509  010E84  0F01               	addlw	1
 16510  010E86  6E01               	movwf	btemp^0,c
 16511  010E88  0EEC               	movlw	-20
 16512  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 16513  010E90  6A01               	clrf	btemp^0,c
 16514  010E92  0EED               	movlw	-19
 16515  010E94  50E3               	movf	plusw1,w,c
 16516  010E96  2001               	addwfc	btemp^0,w,c
 16517  010E98  6E01               	movwf	btemp^0,c
 16518  010E9A  0EED               	movlw	-19
 16519  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 16520  010EA2                     l11778:
 16521                           
 16522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16523                           ;stkvar	_m @ sp[(-56)+48]
 16524                           ;stkvar	_i @ sp[(-56)+36]
 16525  010EA2  50E1               	movf	fsr1l,w,c
 16526  010EA4  0FEC               	addlw	-20
 16527  010EA6  6ED9               	movwf	fsr2l,c
 16528  010EA8  50E2               	movf	fsr1h,w,c
 16529  010EAA  6EDA               	movwf	fsr2h,c
 16530  010EAC  0EFF               	movlw	255
 16531  010EAE  22DA               	addwfc	fsr2h,f,c
 16532  010EB0  0EF8               	movlw	-8
 16533  010EB2  50E3               	movf	plusw1,w,c
 16534  010EB4  5CDE               	subwf	postinc2,w,c
 16535  010EB6  50DE               	movf	postinc2,w,c
 16536  010EB8  0A80               	xorlw	128
 16537  010EBA  6E01               	movwf	btemp^0,c
 16538  010EBC  0EF9               	movlw	-7
 16539  010EBE  50E3               	movf	plusw1,w,c
 16540  010EC0  0A80               	xorlw	128
 16541  010EC2  5801               	subwfb	btemp^0,w,c
 16542  010EC4  B0D8               	btfsc	status,0,c
 16543  010EC6  D00E               	goto	u10990
 16544                           
 16545                           ;stkvar	_n @ sp[(-56)+32]
 16546  010EC8  0EE9               	movlw	-23
 16547  010ECA  BEE3               	btfsc	plusw1,7,c
 16548  010ECC  D633               	goto	l11728
 16549  010ECE  0EE9               	movlw	-23
 16550  010ED0  50E3               	movf	plusw1,w,c
 16551  010ED2  E108               	bnz	u10990
 16552  010ED4  0EE8               	movlw	-24
 16553  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 16554  010EDC  0E4B               	movlw	75
 16555  010EDE  5E01               	subwf	btemp^0,f,c
 16556  010EE0  A0D8               	btfss	status,0,c
 16557  010EE2  D628               	goto	l11728
 16558  010EE4                     u10990:
 16559                           
 16560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 16561                           ;stkvar	_pp @ sp[(-56)+50]
 16562  010EE4  0EFA               	movlw	-6
 16563  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 16564  010EEC  0EFB               	movlw	-5
 16565  010EEE  50E3               	movf	plusw1,w,c
 16566  010EF0  1001               	iorwf	btemp^0,w,c
 16567  010EF2  B4D8               	btfsc	status,2,c
 16568  010EF4  A825               	btfss	_flags^0,4,c
 16569  010EF6  D021               	goto	l11790
 16570                           
 16571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 16572                           ;stkvar	_n @ sp[(-56)+32]
 16573  010EF8  0EE8               	movlw	-24
 16574  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 16575  010F00  0EE9               	movlw	-23
 16576  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 16577  010F08  0E94               	movlw	low _dbuf
 16578  010F0A  240B               	addwf	(btemp+10)^0,w,c
 16579  010F0C  6ED9               	movwf	fsr2l,c
 16580  010F0E  0E03               	movlw	high _dbuf
 16581  010F10  200C               	addwfc	(btemp+11)^0,w,c
 16582  010F12  6EDA               	movwf	fsr2h,c
 16583  010F14  0E2E               	movlw	46
 16584  010F16  6EDF               	movwf	indf2,c
 16585                           
 16586                           ;stkvar	_n @ sp[(-56)+32]
 16587  010F18  0EE8               	movlw	-24
 16588  010F1A  50E3               	movf	plusw1,w,c
 16589  010F1C  0F01               	addlw	1
 16590  010F1E  6E01               	movwf	btemp^0,c
 16591  010F20  0EE8               	movlw	-24
 16592  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 16593  010F28  6A01               	clrf	btemp^0,c
 16594  010F2A  0EE9               	movlw	-23
 16595  010F2C  50E3               	movf	plusw1,w,c
 16596  010F2E  2001               	addwfc	btemp^0,w,c
 16597  010F30  6E01               	movwf	btemp^0,c
 16598  010F32  0EE9               	movlw	-23
 16599  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 16600  010F3A                     l11790:
 16601                           
 16602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 16603                           ;stkvar	_n @ sp[(-56)+32]
 16604  010F3A  0EE8               	movlw	-24
 16605  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16606  010F42  0EE9               	movlw	-23
 16607  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 16608  010F4A  0E94               	movlw	low _dbuf
 16609  010F4C  240B               	addwf	(btemp+10)^0,w,c
 16610  010F4E  6ED9               	movwf	fsr2l,c
 16611  010F50  0E03               	movlw	high _dbuf
 16612  010F52  200C               	addwfc	(btemp+11)^0,w,c
 16613  010F54  6EDA               	movwf	fsr2h,c
 16614  010F56  0E00               	movlw	0
 16615  010F58  6EDF               	movwf	indf2,c
 16616                           
 16617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 16618                           ;stkvar	_nmode @ sp[(-56)+55]
 16619  010F5A  0EFF               	movlw	-1
 16620  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 16621  010F62  0E65               	movlw	101
 16622  010F64  1801               	xorwf	btemp^0,w,c
 16623  010F66  A4D8               	btfss	status,2,c
 16624  010F68  EF16  F081         	goto	l11594
 16625                           
 16626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 16627  010F6C  0E4F               	movlw	79
 16628  010F6E  6E0B               	movwf	(btemp+10)^0,c
 16629  010F70  0E00               	movlw	0
 16630  010F72  6E0C               	movwf	(btemp+11)^0,c
 16631                           
 16632                           ;stkvar	_i @ sp[(-56)+36]
 16633  010F74  0EEC               	movlw	-20
 16634  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16635  010F7C  0EED               	movlw	-19
 16636  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16637                           
 16638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 16639                           ;stkvar	_i @ sp[(-56)+36]
 16640  010F84  0EEC               	movlw	-20
 16641  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 16642  010F8C  0EED               	movlw	-19
 16643  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16644  010F94  0E94               	movlw	low _dbuf
 16645  010F96  240B               	addwf	(btemp+10)^0,w,c
 16646  010F98  6ED9               	movwf	fsr2l,c
 16647  010F9A  0E03               	movlw	high _dbuf
 16648  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 16649  010F9E  6EDA               	movwf	fsr2h,c
 16650  010FA0  0E00               	movlw	0
 16651  010FA2  6EDF               	movwf	indf2,c
 16652                           
 16653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 16654                           ;stkvar	_sign @ sp[(-56)+42]
 16655  010FA4  0EF2               	movlw	-14
 16656  010FA6  6AE3               	clrf	plusw1,c
 16657  010FA8  0EF3               	movlw	-13
 16658  010FAA  6AE3               	clrf	plusw1,c
 16659                           
 16660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 16661                           ;stkvar	_e @ sp[(-56)+34]
 16662  010FAC  0EEB               	movlw	-21
 16663  010FAE  AEE3               	btfss	plusw1,7,c
 16664  010FB0  D012               	goto	l11804
 16665                           
 16666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 16667  010FB2  0E01               	movlw	1
 16668  010FB4  6E0B               	movwf	(btemp+10)^0,c
 16669  010FB6  0E00               	movlw	0
 16670  010FB8  6E0C               	movwf	(btemp+11)^0,c
 16671                           
 16672                           ;stkvar	_sign @ sp[(-56)+42]
 16673  010FBA  0EF2               	movlw	-14
 16674  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16675  010FC2  0EF3               	movlw	-13
 16676  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16677                           
 16678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 16679                           ;stkvar	_e @ sp[(-56)+34]
 16680                           ;stkvar	_e @ sp[(-56)+34]
 16681  010FCA  0EEA               	movlw	-22
 16682  010FCC  6CE3               	negf	plusw1,c
 16683  010FCE  0EEB               	movlw	-21
 16684  010FD0  1EE3               	comf	plusw1,f,c
 16685  010FD2  B0D8               	btfsc	status,0,c
 16686  010FD4  2AE3               	incf	plusw1,f,c
 16687  010FD6                     l11804:
 16688                           
 16689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 16690  010FD6  0E02               	movlw	2
 16691  010FD8  6E0B               	movwf	(btemp+10)^0,c
 16692  010FDA  0E00               	movlw	0
 16693  010FDC  6E0C               	movwf	(btemp+11)^0,c
 16694                           
 16695                           ;stkvar	_p @ sp[(-56)+40]
 16696  010FDE  0EF0               	movlw	-16
 16697  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16698  010FE6  0EF1               	movlw	-15
 16699  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 16700                           
 16701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 16702  010FEE  D051               	goto	l11816
 16703  010FF0                     l11806:
 16704                           
 16705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 16706                           ;stkvar	_i @ sp[(-56)+36]
 16707  010FF0  50E1               	movf	fsr1l,w,c
 16708  010FF2  0FEC               	addlw	-20
 16709  010FF4  6ED9               	movwf	fsr2l,c
 16710  010FF6  50E2               	movf	fsr1h,w,c
 16711  010FF8  6EDA               	movwf	fsr2h,c
 16712  010FFA  0EFF               	movlw	255
 16713  010FFC  22DA               	addwfc	fsr2h,f,c
 16714  010FFE  06DE               	decf	postinc2,f,c
 16715  011000  0E00               	movlw	0
 16716  011002  5ADD               	subwfb	postdec2,f,c
 16717                           
 16718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 16719                           ;stkvar	_i @ sp[(-56)+36]
 16720  011004  0EEC               	movlw	-20
 16721  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 16722  01100C  0EED               	movlw	-19
 16723  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16724  011014  0E94               	movlw	low _dbuf
 16725  011016  240B               	addwf	(btemp+10)^0,w,c
 16726  011018  6ED9               	movwf	fsr2l,c
 16727  01101A  0E03               	movlw	high _dbuf
 16728  01101C  200C               	addwfc	(btemp+11)^0,w,c
 16729  01101E  6EDA               	movwf	fsr2h,c
 16730  011020  0E0A               	movlw	10
 16731  011022  6EE6               	movwf	postinc1,c
 16732  011024  0E00               	movlw	0
 16733  011026  6EE6               	movwf	postinc1,c
 16734                           
 16735                           ;stkvar	_e @ sp[(-58)+34]
 16736  011028  0EE8               	movlw	-24
 16737  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 16738  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 16739  011036  EC7D  F0C6         	call	___awmod	;wreg free
 16740  01103A  5001               	movf	btemp^0,w,c
 16741  01103C  0F30               	addlw	48
 16742  01103E  6EDF               	movwf	indf2,c
 16743                           
 16744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 16745  011040  0E0A               	movlw	10
 16746  011042  6EE6               	movwf	postinc1,c
 16747  011044  0E00               	movlw	0
 16748  011046  6EE6               	movwf	postinc1,c
 16749                           
 16750                           ;stkvar	_e @ sp[(-58)+34]
 16751  011048  0EE8               	movlw	-24
 16752  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 16753  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 16754  011056  EC6F  F0C3         	call	___awdiv	;wreg free
 16755                           
 16756                           ;stkvar	_e @ sp[(-56)+34]
 16757  01105A  0EEA               	movlw	-22
 16758  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 16759  011062  0EEB               	movlw	-21
 16760  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16761                           
 16762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 16763                           ;stkvar	_p @ sp[(-56)+40]
 16764  01106A  50E1               	movf	fsr1l,w,c
 16765  01106C  0FF0               	addlw	-16
 16766  01106E  6ED9               	movwf	fsr2l,c
 16767  011070  50E2               	movf	fsr1h,w,c
 16768  011072  6EDA               	movwf	fsr2h,c
 16769  011074  0EFF               	movlw	255
 16770  011076  22DA               	addwfc	fsr2h,f,c
 16771  011078  06DE               	decf	postinc2,f,c
 16772  01107A  0E00               	movlw	0
 16773  01107C  5ADD               	subwfb	postdec2,f,c
 16774                           
 16775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 16776                           ;stkvar	_w @ sp[(-56)+38]
 16777  01107E  50E1               	movf	fsr1l,w,c
 16778  011080  0FEE               	addlw	-18
 16779  011082  6ED9               	movwf	fsr2l,c
 16780  011084  50E2               	movf	fsr1h,w,c
 16781  011086  6EDA               	movwf	fsr2h,c
 16782  011088  0EFF               	movlw	255
 16783  01108A  22DA               	addwfc	fsr2h,f,c
 16784  01108C  06DE               	decf	postinc2,f,c
 16785  01108E  0E00               	movlw	0
 16786  011090  5ADD               	subwfb	postdec2,f,c
 16787  011092                     l11816:
 16788                           
 16789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 16790                           ;stkvar	_e @ sp[(-56)+34]
 16791  011092  0EEA               	movlw	-22
 16792  011094  006F FF8C  F001    	movff	plusw1,btemp
 16793  01109A  0EEB               	movlw	-21
 16794  01109C  50E3               	movf	plusw1,w,c
 16795  01109E  1001               	iorwf	btemp^0,w,c
 16796  0110A0  A4D8               	btfss	status,2,c
 16797  0110A2  D7A6               	goto	l11806
 16798                           
 16799                           ;stkvar	_p @ sp[(-56)+40]
 16800  0110A4  0EF1               	movlw	-15
 16801  0110A6  BEE3               	btfsc	plusw1,7,c
 16802  0110A8  D007               	goto	u11050
 16803  0110AA  0EF1               	movlw	-15
 16804  0110AC  50E3               	movf	plusw1,w,c
 16805  0110AE  E1A0               	bnz	l11806
 16806  0110B0  0EF0               	movlw	-16
 16807  0110B2  04E3               	decf	plusw1,w,c
 16808  0110B4  B0D8               	btfsc	status,0,c
 16809  0110B6  D79C               	goto	l11806
 16810  0110B8                     u11050:
 16811                           
 16812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 16813                           ;stkvar	_i @ sp[(-56)+36]
 16814  0110B8  50E1               	movf	fsr1l,w,c
 16815  0110BA  0FEC               	addlw	-20
 16816  0110BC  6ED9               	movwf	fsr2l,c
 16817  0110BE  50E2               	movf	fsr1h,w,c
 16818  0110C0  6EDA               	movwf	fsr2h,c
 16819  0110C2  0EFF               	movlw	255
 16820  0110C4  22DA               	addwfc	fsr2h,f,c
 16821  0110C6  06DE               	decf	postinc2,f,c
 16822  0110C8  0E00               	movlw	0
 16823  0110CA  5ADD               	subwfb	postdec2,f,c
 16824                           
 16825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 16826                           ;stkvar	_sign @ sp[(-56)+42]
 16827  0110CC  0EF2               	movlw	-14
 16828  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 16829  0110D4  0EF3               	movlw	-13
 16830  0110D6  50E3               	movf	plusw1,w,c
 16831  0110D8  1001               	iorwf	btemp^0,w,c
 16832  0110DA  A4D8               	btfss	status,2,c
 16833  0110DC  D002               	goto	l11826
 16834  0110DE  0E2B               	movlw	43
 16835  0110E0  D001               	goto	L15
 16836  0110E2                     l11826:
 16837  0110E2  0E2D               	movlw	45
 16838  0110E4                     L15:
 16839  0110E4  6E0B               	movwf	(btemp+10)^0,c
 16840  0110E6  0E00               	movlw	0
 16841  0110E8  6E0C               	movwf	(btemp+11)^0,c
 16842                           
 16843                           ;stkvar	_efgtoa$5322 @ sp[(-56)+4]
 16844  0110EA  0ECC               	movlw	-52
 16845  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16846  0110F2  0ECD               	movlw	-51
 16847  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16848                           
 16849                           ;stkvar	_efgtoa$5322 @ sp[(-56)+4]
 16850                           ;stkvar	_i @ sp[(-56)+36]
 16851  0110FA  0EEC               	movlw	-20
 16852  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16853  011102  0EED               	movlw	-19
 16854  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 16855  01110A  0E94               	movlw	low _dbuf
 16856  01110C  240B               	addwf	(btemp+10)^0,w,c
 16857  01110E  6ED9               	movwf	fsr2l,c
 16858  011110  0E03               	movlw	high _dbuf
 16859  011112  200C               	addwfc	(btemp+11)^0,w,c
 16860  011114  6EDA               	movwf	fsr2h,c
 16861  011116  0ECC               	movlw	-52
 16862  011118  006F FF8F FFDF     	movff	plusw1,indf2
 16863                           
 16864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 16865                           ;stkvar	_w @ sp[(-56)+38]
 16866  01111E  50E1               	movf	fsr1l,w,c
 16867  011120  0FEE               	addlw	-18
 16868  011122  6ED9               	movwf	fsr2l,c
 16869  011124  50E2               	movf	fsr1h,w,c
 16870  011126  6EDA               	movwf	fsr2h,c
 16871  011128  0EFF               	movlw	255
 16872  01112A  22DA               	addwfc	fsr2h,f,c
 16873  01112C  06DE               	decf	postinc2,f,c
 16874  01112E  0E00               	movlw	0
 16875  011130  5ADD               	subwfb	postdec2,f,c
 16876                           
 16877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 16878                           ;stkvar	_i @ sp[(-56)+36]
 16879  011132  50E1               	movf	fsr1l,w,c
 16880  011134  0FEC               	addlw	-20
 16881  011136  6ED9               	movwf	fsr2l,c
 16882  011138  50E2               	movf	fsr1h,w,c
 16883  01113A  6EDA               	movwf	fsr2h,c
 16884  01113C  0EFF               	movlw	255
 16885  01113E  22DA               	addwfc	fsr2h,f,c
 16886  011140  06DE               	decf	postinc2,f,c
 16887  011142  0E00               	movlw	0
 16888  011144  5ADD               	subwfb	postdec2,f,c
 16889  011146  0EBF               	movlw	191
 16890  011148  6E0B               	movwf	(btemp+10)^0,c
 16891  01114A  0EFF               	movlw	255
 16892  01114C  6E0C               	movwf	(btemp+11)^0,c
 16893                           
 16894                           ;stkvar	_c @ sp[(-56)+-7]
 16895  01114E  0EC1               	movlw	-63
 16896  011150  50E3               	movf	plusw1,w,c
 16897  011152  6E09               	movwf	(btemp+8)^0,c
 16898  011154  6A0A               	clrf	(btemp+9)^0,c
 16899  011156  500B               	movf	(btemp+10)^0,w,c
 16900  011158  2609               	addwf	(btemp+8)^0,f,c
 16901  01115A  500C               	movf	(btemp+11)^0,w,c
 16902  01115C  220A               	addwfc	(btemp+9)^0,f,c
 16903  01115E  500A               	movf	(btemp+9)^0,w,c
 16904  011160  E106               	bnz	u11070
 16905  011162  0E1A               	movlw	26
 16906  011164  5C09               	subwf	(btemp+8)^0,w,c
 16907  011166  B0D8               	btfsc	status,0,c
 16908  011168  D002               	goto	u11070
 16909  01116A  0E01               	movlw	1
 16910  01116C  D001               	goto	u11080
 16911  01116E                     u11070:
 16912  01116E  0E00               	movlw	0
 16913  011170                     u11080:
 16914  011170  6E0B               	movwf	(btemp+10)^0,c
 16915  011172  6A0C               	clrf	(btemp+11)^0,c
 16916                           
 16917                           ;stkvar	_efgtoa$5324 @ sp[(-56)+0]
 16918  011174  0EC8               	movlw	-56
 16919  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16920  01117C  0EC9               	movlw	-55
 16921  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16922                           
 16923                           ;stkvar	_efgtoa$5324 @ sp[(-56)+0]
 16924  011184  0EC8               	movlw	-56
 16925  011186  006F FF8C  F001    	movff	plusw1,btemp
 16926  01118C  0EC9               	movlw	-55
 16927  01118E  50E3               	movf	plusw1,w,c
 16928  011190  1001               	iorwf	btemp^0,w,c
 16929  011192  A4D8               	btfss	status,2,c
 16930  011194  D002               	goto	l11842
 16931  011196  0E65               	movlw	101
 16932  011198  D001               	goto	L16
 16933  01119A                     l11842:
 16934  01119A  0E45               	movlw	69
 16935  01119C                     L16:
 16936  01119C  6E0B               	movwf	(btemp+10)^0,c
 16937  01119E  0E00               	movlw	0
 16938  0111A0  6E0C               	movwf	(btemp+11)^0,c
 16939                           
 16940                           ;stkvar	_efgtoa$5323 @ sp[(-56)+2]
 16941  0111A2  0ECA               	movlw	-54
 16942  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16943  0111AA  0ECB               	movlw	-53
 16944  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16945                           
 16946                           ;stkvar	_efgtoa$5323 @ sp[(-56)+2]
 16947                           ;stkvar	_i @ sp[(-56)+36]
 16948  0111B2  0EEC               	movlw	-20
 16949  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 16950  0111BA  0EED               	movlw	-19
 16951  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 16952  0111C2  0E94               	movlw	low _dbuf
 16953  0111C4  240B               	addwf	(btemp+10)^0,w,c
 16954  0111C6  6ED9               	movwf	fsr2l,c
 16955  0111C8  0E03               	movlw	high _dbuf
 16956  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 16957  0111CC  6EDA               	movwf	fsr2h,c
 16958  0111CE  0ECA               	movlw	-54
 16959  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 16960                           
 16961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 16962                           ;stkvar	_w @ sp[(-56)+38]
 16963  0111D6  50E1               	movf	fsr1l,w,c
 16964  0111D8  0FEE               	addlw	-18
 16965  0111DA  6ED9               	movwf	fsr2l,c
 16966  0111DC  50E2               	movf	fsr1h,w,c
 16967  0111DE  6EDA               	movwf	fsr2h,c
 16968  0111E0  0EFF               	movlw	255
 16969  0111E2  22DA               	addwfc	fsr2h,f,c
 16970  0111E4  06DE               	decf	postinc2,f,c
 16971  0111E6  0E00               	movlw	0
 16972  0111E8  5ADD               	subwfb	postdec2,f,c
 16973                           
 16974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 16975                           ;stkvar	_i @ sp[(-56)+36]
 16976  0111EA  0EEC               	movlw	-20
 16977  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16978  0111F2  0EED               	movlw	-19
 16979  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16980  0111FA  0E94               	movlw	low _dbuf
 16981  0111FC  240B               	addwf	(btemp+10)^0,w,c
 16982  0111FE  6E09               	movwf	(btemp+8)^0,c
 16983  011200  0E03               	movlw	high _dbuf
 16984  011202  200C               	addwfc	(btemp+11)^0,w,c
 16985  011204  6E0A               	movwf	(btemp+9)^0,c
 16986  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 16987  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 16988                           
 16989                           ;stkvar	_n @ sp[(-58)+32]
 16990  011212  0E94               	movlw	low _dbuf
 16991  011214  6E0B               	movwf	(btemp+10)^0,c
 16992  011216  0E03               	movlw	high _dbuf
 16993  011218  6E0C               	movwf	(btemp+11)^0,c
 16994  01121A  0EE6               	movlw	-26
 16995  01121C  50E3               	movf	plusw1,w,c
 16996  01121E  260B               	addwf	(btemp+10)^0,f,c
 16997  011220  0EE7               	movlw	-25
 16998  011222  50E3               	movf	plusw1,w,c
 16999  011224  220C               	addwfc	(btemp+11)^0,f,c
 17000  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17001  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 17002  011232  EC0A  F0CB         	call	_strcpy	;wreg free
 17003  011236  EF16  F081         	goto	l11594
 17004  01123A                     l2160:
 17005                           
 17006                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 17007  01123A  0EC1               	movlw	193
 17008  01123C  26E1               	addwf	fsr1l,f,c
 17009  01123E  0EFF               	movlw	255
 17010  011240  22E2               	addwfc	fsr1h,f,c
 17011  011242  0012               	return		;funcret
 17012  011244                     __end_of_efgtoa:
 17013                           	opt callstack 0
 17014                           
 17015 ;; *************** function _tolower *****************
 17016 ;; Defined at:
 17017 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 17018 ;; Parameters:    Size  Location     Type
 17019 ;;  c               2  [STACK] int 
 17020 ;; Auto vars:     Size  Location     Type
 17021 ;;		None
 17022 ;; Return value:  Size  Location     Type
 17023 ;;                  2  [STACK] int 
 17024 ;; Registers used:
 17025 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17026 ;; Tracked objects:
 17027 ;;		On entry : 0/0
 17028 ;;		On exit  : 0/0
 17029 ;;		Unchanged: 0/0
 17030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17035 ;;Total ram usage:        0 bytes
 17036 ;; Hardware stack levels used:    1
 17037 ;; Hardware stack levels required when called:   16
 17038 ;; This function calls:
 17039 ;;		_isupper
 17040 ;; This function is called by:
 17041 ;;		_efgtoa
 17042 ;;		_vfpfcnvrt
 17043 ;; This function uses a reentrant model
 17044 ;;
 17045                           
 17046                           	psect	text56
 17047  01A056                     __ptext56:
 17048                           	opt callstack 0
 17049  01A056                     _tolower:
 17050                           	opt callstack 0
 17051                           
 17052                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17053  01A056  52E6               	movf	postinc1,f,c
 17054  01A058  52E6               	movf	postinc1,f,c
 17055                           
 17056                           ;stkvar	_c @ sp[(-2)+-2]
 17057                           
 17058                           ;incstack = 0
 17059 ;; hardware stack exceeded
 17060  01A05A  0EFC               	movlw	-4
 17061  01A05C  50E3               	movf	plusw1,w,c
 17062  01A05E  0FBF               	addlw	191
 17063  01A060  6E0B               	movwf	(btemp+10)^0,c
 17064  01A062  0EFD               	movlw	-3
 17065  01A064  006F FF8C  F00C    	movff	plusw1,btemp+11
 17066  01A06A  0EFF               	movlw	255
 17067  01A06C  220C               	addwfc	(btemp+11)^0,f,c
 17068  01A06E  500C               	movf	(btemp+11)^0,w,c
 17069  01A070  E106               	bnz	u5800
 17070  01A072  0E1A               	movlw	26
 17071  01A074  5C0B               	subwf	(btemp+10)^0,w,c
 17072  01A076  B0D8               	btfsc	status,0,c
 17073  01A078  D002               	goto	u5800
 17074  01A07A  0E01               	movlw	1
 17075  01A07C  D001               	goto	u5810
 17076  01A07E                     u5800:
 17077  01A07E  0E00               	movlw	0
 17078  01A080                     u5810:
 17079  01A080  6E0B               	movwf	(btemp+10)^0,c
 17080  01A082  6A0C               	clrf	(btemp+11)^0,c
 17081                           
 17082                           ;stkvar	_tolower$6143 @ sp[(-2)+0]
 17083  01A084  0EFE               	movlw	-2
 17084  01A086  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17085  01A08C  0EFF               	movlw	-1
 17086  01A08E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17087                           
 17088                           ;stkvar	_tolower$6143 @ sp[(-2)+0]
 17089  01A094  0EFE               	movlw	-2
 17090  01A096  006F FF8C  F001    	movff	plusw1,btemp
 17091  01A09C  0EFF               	movlw	-1
 17092  01A09E  50E3               	movf	plusw1,w,c
 17093  01A0A0  1001               	iorwf	btemp^0,w,c
 17094  01A0A2  B4D8               	btfsc	status,2,c
 17095  01A0A4  D00D               	goto	l7778
 17096                           
 17097                           ;stkvar	_c @ sp[(-2)+-2]
 17098  01A0A6  0EFC               	movlw	-4
 17099  01A0A8  006F FF8C  F001    	movff	plusw1,btemp
 17100  01A0AE  0EFD               	movlw	-3
 17101  01A0B0  006F FF8C  F002    	movff	plusw1,btemp+1
 17102  01A0B6  0E20               	movlw	32
 17103  01A0B8  1201               	iorwf	btemp^0,f,c
 17104  01A0BA  0E00               	movlw	0
 17105  01A0BC  1202               	iorwf	(btemp+1)^0,f,c
 17106  01A0BE  D008               	goto	l3432
 17107  01A0C0                     l7778:
 17108                           
 17109                           ;stkvar	_c @ sp[(-2)+-2]
 17110  01A0C0  0EFC               	movlw	-4
 17111  01A0C2  006F FF8C  F001    	movff	plusw1,btemp
 17112  01A0C8  0EFD               	movlw	-3
 17113  01A0CA  006F FF8C  F002    	movff	plusw1,btemp+1
 17114  01A0D0                     l3432:
 17115                           
 17116                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17117  01A0D0  52E5               	movf	postdec1,f,c
 17118  01A0D2  52E5               	movf	postdec1,f,c
 17119  01A0D4  52E5               	movf	postdec1,f,c
 17120  01A0D6  52E5               	movf	postdec1,f,c
 17121  01A0D8  0012               	return		;funcret
 17122  01A0DA                     __end_of_tolower:
 17123                           	opt callstack 0
 17124                           
 17125 ;; *************** function _isupper *****************
 17126 ;; Defined at:
 17127 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 17128 ;; Parameters:    Size  Location     Type
 17129 ;;  c               2  [STACK] int 
 17130 ;; Auto vars:     Size  Location     Type
 17131 ;;		None
 17132 ;; Return value:  Size  Location     Type
 17133 ;;                  2  [STACK] int 
 17134 ;; Registers used:
 17135 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17136 ;; Tracked objects:
 17137 ;;		On entry : 0/0
 17138 ;;		On exit  : 0/0
 17139 ;;		Unchanged: 0/0
 17140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17145 ;;Total ram usage:        0 bytes
 17146 ;; Hardware stack levels used:    1
 17147 ;; Hardware stack levels required when called:   15
 17148 ;; This function calls:
 17149 ;;		Nothing
 17150 ;; This function is called by:
 17151 ;;		_efgtoa
 17152 ;;		_xtoa
 17153 ;;		_vfpfcnvrt
 17154 ;;		_tolower
 17155 ;; This function uses a reentrant model
 17156 ;;
 17157                           
 17158                           	psect	text57
 17159  01AC9A                     __ptext57:
 17160                           	opt callstack 0
 17161  01AC9A                     _isupper:
 17162                           	opt callstack 0
 17163                           
 17164                           ;stkvar	_c @ sp[(0)+-2]
 17165                           
 17166                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17167                           ;incstack = 0
 17168 ;; hardware stack exceeded
 17169  01AC9A  0EFE               	movlw	-2
 17170  01AC9C  50E3               	movf	plusw1,w,c
 17171  01AC9E  0FBF               	addlw	191
 17172  01ACA0  6E0B               	movwf	(btemp+10)^0,c
 17173  01ACA2  0EFF               	movlw	-1
 17174  01ACA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17175  01ACAA  0EFF               	movlw	255
 17176  01ACAC  220C               	addwfc	(btemp+11)^0,f,c
 17177  01ACAE  500C               	movf	(btemp+11)^0,w,c
 17178  01ACB0  E106               	bnz	u5200
 17179  01ACB2  0E1A               	movlw	26
 17180  01ACB4  5C0B               	subwf	(btemp+10)^0,w,c
 17181  01ACB6  B0D8               	btfsc	status,0,c
 17182  01ACB8  D002               	goto	u5200
 17183  01ACBA  0E01               	movlw	1
 17184  01ACBC  D001               	goto	u5210
 17185  01ACBE                     u5200:
 17186  01ACBE  0E00               	movlw	0
 17187  01ACC0                     u5210:
 17188  01ACC0  6E01               	movwf	btemp^0,c
 17189  01ACC2  6A02               	clrf	(btemp+1)^0,c
 17190                           
 17191                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17192  01ACC4  52E5               	movf	postdec1,f,c
 17193  01ACC6  52E5               	movf	postdec1,f,c
 17194  01ACC8  0012               	return		;funcret
 17195  01ACCA                     __end_of_isupper:
 17196                           	opt callstack 0
 17197                           
 17198 ;; *************** function _strcpy *****************
 17199 ;; Defined at:
 17200 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 17201 ;; Parameters:    Size  Location     Type
 17202 ;;  dest            2  [STACK] PTR unsigned char 
 17203 ;;		 -> dbuf(80), 
 17204 ;;  src             2  [STACK] PTR const unsigned char 
 17205 ;;		 -> STR_62(4), STR_61(4), STR_58(4), STR_57(4), 
 17206 ;;		 -> dbuf(80), 
 17207 ;; Auto vars:     Size  Location     Type
 17208 ;;  d               2  [STACK] PTR unsigned char 
 17209 ;;		 -> dbuf(80), 
 17210 ;;  s               2  [STACK] PTR const unsigned char 
 17211 ;;		 -> STR_62(4), STR_61(4), STR_58(4), STR_57(4), 
 17212 ;;		 -> dbuf(80), 
 17213 ;; Return value:  Size  Location     Type
 17214 ;;                  2  [STACK] PTR unsigned char 
 17215 ;; Registers used:
 17216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 17217 ;; Tracked objects:
 17218 ;;		On entry : 0/0
 17219 ;;		On exit  : 0/0
 17220 ;;		Unchanged: 0/0
 17221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17226 ;;Total ram usage:        0 bytes
 17227 ;; Hardware stack levels used:    1
 17228 ;; Hardware stack levels required when called:   15
 17229 ;; This function calls:
 17230 ;;		Nothing
 17231 ;; This function is called by:
 17232 ;;		_efgtoa
 17233 ;; This function uses a reentrant model
 17234 ;;
 17235                           
 17236                           	psect	text58
 17237  019614                     __ptext58:
 17238                           	opt callstack 0
 17239  019614                     _strcpy:
 17240                           	opt callstack 0
 17241                           
 17242                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17243  019614  52E6               	movf	postinc1,f,c
 17244  019616  52E6               	movf	postinc1,f,c
 17245  019618  52E6               	movf	postinc1,f,c
 17246  01961A  52E6               	movf	postinc1,f,c
 17247                           
 17248                           ;stkvar	_src @ sp[(-4)+-4]
 17249                           
 17250                           ;incstack = 0
 17251 ;; hardware stack exceeded
 17252  01961C  0EF8               	movlw	-8
 17253  01961E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17254  019624  0EF9               	movlw	-7
 17255  019626  006F FF8C  F00C    	movff	plusw1,btemp+11
 17256                           
 17257                           ;stkvar	_s @ sp[(-4)+2]
 17258  01962C  0EFF               	movlw	-1
 17259  01962E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17260  019634  0EFE               	movlw	-2
 17261  019636  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17262                           
 17263                           ;stkvar	_dest @ sp[(-4)+-2]
 17264  01963C  0EFA               	movlw	-6
 17265  01963E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17266  019644  0EFB               	movlw	-5
 17267  019646  006F FF8C  F00C    	movff	plusw1,btemp+11
 17268                           
 17269                           ;stkvar	_d @ sp[(-4)+0]
 17270  01964C  0EFD               	movlw	-3
 17271  01964E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17272  019654  0EFC               	movlw	-4
 17273  019656  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17274  01965C                     l11426:
 17275                           
 17276                           ;stkvar	_s @ sp[(-4)+2]
 17277  01965C  50E1               	movf	fsr1l,w,c
 17278  01965E  0FFE               	addlw	-2
 17279  019660  6ED9               	movwf	fsr2l,c
 17280  019662  50E2               	movf	fsr1h,w,c
 17281  019664  6EDA               	movwf	fsr2h,c
 17282  019666  0EFF               	movlw	255
 17283  019668  22DA               	addwfc	fsr2h,f,c
 17284  01966A  006F FF7C  F00B    	movff	indf2,btemp+10
 17285  019670  0E01               	movlw	1
 17286  019672  26DE               	addwf	postinc2,f,c
 17287  019674  006F FF7C  F00C    	movff	indf2,btemp+11
 17288  01967A  0E00               	movlw	0
 17289  01967C  22DD               	addwfc	postdec2,f,c
 17290  01967E  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 17291  019684  0060  F033  FFF7   	movff	btemp+11,tblptrh
 17292  01968A  0E00               	movlw	low (__mediumconst shr (0+16))
 17293  01968C  6EF8               	movwf	tblptru,c
 17294                           
 17295                           ;stkvar	_d @ sp[(-4)+0]
 17296  01968E  50E1               	movf	fsr1l,w,c
 17297  019690  0FFC               	addlw	-4
 17298  019692  6ED9               	movwf	fsr2l,c
 17299  019694  50E2               	movf	fsr1h,w,c
 17300  019696  6EDA               	movwf	fsr2h,c
 17301  019698  0EFF               	movlw	255
 17302  01969A  22DA               	addwfc	fsr2h,f,c
 17303  01969C  006F FF7C  F00B    	movff	indf2,btemp+10
 17304  0196A2  0E01               	movlw	1
 17305  0196A4  26DE               	addwf	postinc2,f,c
 17306  0196A6  006F FF7C  F00C    	movff	indf2,btemp+11
 17307  0196AC  0E00               	movlw	0
 17308  0196AE  22DD               	addwfc	postdec2,f,c
 17309  0196B0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17310  0196B6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17311  0196BC  0E1F               	movlw	(high __ramtop+-1)
 17312  0196BE  64F7               	cpfsgt	tblptrh,c
 17313  0196C0  D003               	bra	u10337
 17314  0196C2  0008               	tblrd		*
 17315  0196C4  50F5               	movf	tablat,w,c
 17316  0196C6  D007               	bra	u10330
 17317  0196C8                     u10337:
 17318  0196C8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17319  0196CE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17320  0196D4  50EF               	movf	indf0,w,c
 17321  0196D6                     u10330:
 17322  0196D6  6EDF               	movwf	indf2,c
 17323  0196D8  50DF               	movf	indf2,w,c
 17324  0196DA  A4D8               	btfss	status,2,c
 17325  0196DC  D7BF               	goto	l11426
 17326                           
 17327                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 17328  0196DE  0EF8               	movlw	248
 17329  0196E0  26E1               	addwf	fsr1l,f,c
 17330  0196E2  0EFF               	movlw	255
 17331  0196E4  22E2               	addwfc	fsr1h,f,c
 17332  0196E6  0012               	return		;funcret
 17333  0196E8                     __end_of_strcpy:
 17334                           	opt callstack 0
 17335                           
 17336 ;; *************** function _floorf *****************
 17337 ;; Defined at:
 17338 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 17339 ;; Parameters:    Size  Location     Type
 17340 ;;  x               4  [STACK] float 
 17341 ;; Auto vars:     Size  Location     Type
 17342 ;;  u               4  [STACK] struct .
 17343 ;;  m               4  [STACK] unsigned long 
 17344 ;;  e               2  [STACK] int 
 17345 ;; Return value:  Size  Location     Type
 17346 ;;                  4  [STACK] float 
 17347 ;; Registers used:
 17348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 17349 ;; Tracked objects:
 17350 ;;		On entry : 0/0
 17351 ;;		On exit  : 0/0
 17352 ;;		Unchanged: 0/0
 17353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17358 ;;Total ram usage:        0 bytes
 17359 ;; Hardware stack levels used:    1
 17360 ;; Hardware stack levels required when called:   15
 17361 ;; This function calls:
 17362 ;;		Nothing
 17363 ;; This function is called by:
 17364 ;;		_efgtoa
 17365 ;; This function uses a reentrant model
 17366 ;;
 17367                           
 17368                           	psect	text59
 17369  015F32                     __ptext59:
 17370                           	opt callstack 0
 17371  015F32                     _floorf:
 17372                           	opt callstack 0
 17373                           
 17374                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17375  015F32  0E0A               	movlw	10
 17376  015F34  26E1               	addwf	fsr1l,f,c
 17377  015F36  0E00               	movlw	0
 17378  015F38  22E2               	addwfc	fsr1h,f,c
 17379                           
 17380                           ;incstack = 0
 17381 ;; hardware stack exceeded
 17382  015F3A  0060  F1E8  F009   	movff	floorf@F524,btemp+8
 17383  015F40  0060  F1EC  F00A   	movff	floorf@F524+1,btemp+9
 17384  015F46  0060  F1F0  F00B   	movff	floorf@F524+2,btemp+10
 17385  015F4C  0060  F1F4  F00C   	movff	floorf@F524+3,btemp+11
 17386                           
 17387                           ;stkvar	_u @ sp[(-10)+0]
 17388  015F52  0EF6               	movlw	-10
 17389  015F54  0060  F027  FFE3   	movff	btemp+8,plusw1
 17390  015F5A  0EF7               	movlw	-9
 17391  015F5C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17392  015F62  0EF8               	movlw	-8
 17393  015F64  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17394  015F6A  0EF9               	movlw	-7
 17395  015F6C  0060  F033  FFE3   	movff	btemp+11,plusw1
 17396                           
 17397                           ;stkvar	_x @ sp[(-10)+-4]
 17398  015F72  0EF2               	movlw	-14
 17399  015F74  006F FF8C  F009    	movff	plusw1,btemp+8
 17400  015F7A  0EF3               	movlw	-13
 17401  015F7C  006F FF8C  F00A    	movff	plusw1,btemp+9
 17402  015F82  0EF4               	movlw	-12
 17403  015F84  006F FF8C  F00B    	movff	plusw1,btemp+10
 17404  015F8A  0EF5               	movlw	-11
 17405  015F8C  006F FF8C  F00C    	movff	plusw1,btemp+11
 17406                           
 17407                           ;stkvar	_u @ sp[(-10)+0]
 17408  015F92  0EF6               	movlw	-10
 17409  015F94  0060  F027  FFE3   	movff	btemp+8,plusw1
 17410  015F9A  0EF7               	movlw	-9
 17411  015F9C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17412  015FA2  0EF8               	movlw	-8
 17413  015FA4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17414  015FAA  0EF9               	movlw	-7
 17415  015FAC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17416  015FB2  0E81               	movlw	129
 17417  015FB4  6E0B               	movwf	(btemp+10)^0,c
 17418  015FB6  0EFF               	movlw	255
 17419  015FB8  6E0C               	movwf	(btemp+11)^0,c
 17420                           
 17421                           ;stkvar	_u @ sp[(-10)+0]
 17422  015FBA  0EF6               	movlw	-10
 17423  015FBC  006F FF8C  F005    	movff	plusw1,btemp+4
 17424  015FC2  0EF7               	movlw	-9
 17425  015FC4  006F FF8C  F006    	movff	plusw1,btemp+5
 17426  015FCA  0EF8               	movlw	-8
 17427  015FCC  006F FF8C  F007    	movff	plusw1,btemp+6
 17428  015FD2  0EF9               	movlw	-7
 17429  015FD4  006F FF8C  F008    	movff	plusw1,btemp+7
 17430  015FDA  0E18               	movlw	24
 17431  015FDC  D005               	goto	u5830
 17432  015FDE                     u5835:
 17433  015FDE  90D8               	bcf	status,0,c
 17434  015FE0  3208               	rrcf	(btemp+7)^0,f,c
 17435  015FE2  3207               	rrcf	(btemp+6)^0,f,c
 17436  015FE4  3206               	rrcf	(btemp+5)^0,f,c
 17437  015FE6  3205               	rrcf	(btemp+4)^0,f,c
 17438  015FE8                     u5830:
 17439  015FE8  2EE8               	decfsz	wreg,f,c
 17440  015FEA  D7F9               	goto	u5835
 17441  015FEC  0060  F014  F009   	movff	btemp+4,btemp+8
 17442  015FF2  0060  F018  F00A   	movff	btemp+5,btemp+9
 17443  015FF8  0EFF               	movlw	255
 17444  015FFA  1609               	andwf	(btemp+8)^0,f,c
 17445  015FFC  0E00               	movlw	0
 17446  015FFE  160A               	andwf	(btemp+9)^0,f,c
 17447  016000  500B               	movf	(btemp+10)^0,w,c
 17448  016002  2609               	addwf	(btemp+8)^0,f,c
 17449  016004  500C               	movf	(btemp+11)^0,w,c
 17450  016006  220A               	addwfc	(btemp+9)^0,f,c
 17451                           
 17452                           ;stkvar	_e @ sp[(-10)+8]
 17453  016008  0EFE               	movlw	-2
 17454  01600A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17455  016010  0EFF               	movlw	-1
 17456  016012  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17457                           
 17458                           ;stkvar	_e @ sp[(-10)+8]
 17459  016018  0EFF               	movlw	-1
 17460  01601A  BEE3               	btfsc	plusw1,7,c
 17461  01601C  D019               	goto	l7792
 17462  01601E  0EFF               	movlw	-1
 17463  016020  50E3               	movf	plusw1,w,c
 17464  016022  E108               	bnz	u5840
 17465  016024  0EFE               	movlw	-2
 17466  016026  006F FF8C  F001    	movff	plusw1,btemp
 17467  01602C  0E17               	movlw	23
 17468  01602E  5E01               	subwf	btemp^0,f,c
 17469  016030  A0D8               	btfss	status,0,c
 17470  016032  D00E               	goto	l7792
 17471  016034                     u5840:
 17472                           
 17473                           ;stkvar	_x @ sp[(-10)+-4]
 17474  016034  0EF2               	movlw	-14
 17475  016036  006F FF8C  F001    	movff	plusw1,btemp
 17476  01603C  0EF3               	movlw	-13
 17477  01603E  006F FF8C  F002    	movff	plusw1,btemp+1
 17478  016044  0EF4               	movlw	-12
 17479  016046  006F FF8C  F003    	movff	plusw1,btemp+2
 17480  01604C  0EF5               	movlw	-11
 17481  01604E  D11F               	goto	L17
 17482  016050                     l7792:
 17483                           
 17484                           ;stkvar	_e @ sp[(-10)+8]
 17485  016050  0EFF               	movlw	-1
 17486  016052  BEE3               	btfsc	plusw1,7,c
 17487  016054  D0B4               	goto	l7808
 17488                           
 17489                           ;stkvar	_e @ sp[(-10)+8]
 17490  016056  0EFE               	movlw	-2
 17491  016058  006F FF8C  F00C    	movff	plusw1,btemp+11
 17492  01605E  0EFF               	movlw	255
 17493  016060  6E05               	movwf	(btemp+4)^0,c
 17494  016062  0EFF               	movlw	255
 17495  016064  6E06               	movwf	(btemp+5)^0,c
 17496  016066  0E7F               	movlw	127
 17497  016068  6E07               	movwf	(btemp+6)^0,c
 17498  01606A  0E00               	movlw	0
 17499  01606C  6E08               	movwf	(btemp+7)^0,c
 17500  01606E                     u5865:
 17501  01606E  660C               	tstfsz	(btemp+11)^0,c
 17502  016070  D001               	goto	u5866
 17503  016072  D007               	goto	u5867
 17504  016074                     u5866:
 17505  016074  3408               	rlcf	(btemp+7)^0,w,c
 17506  016076  3208               	rrcf	(btemp+7)^0,f,c
 17507  016078  3207               	rrcf	(btemp+6)^0,f,c
 17508  01607A  3206               	rrcf	(btemp+5)^0,f,c
 17509  01607C  3205               	rrcf	(btemp+4)^0,f,c
 17510  01607E  2E0C               	decfsz	(btemp+11)^0,f,c
 17511  016080  D7F6               	goto	u5865
 17512  016082                     u5867:
 17513                           
 17514                           ;stkvar	_m @ sp[(-10)+4]
 17515  016082  0EFA               	movlw	-6
 17516  016084  0060  F017  FFE3   	movff	btemp+4,plusw1
 17517  01608A  0EFB               	movlw	-5
 17518  01608C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 17519  016092  0EFC               	movlw	-4
 17520  016094  0060  F01F  FFE3   	movff	btemp+6,plusw1
 17521  01609A  0EFD               	movlw	-3
 17522  01609C  0060  F023  FFE3   	movff	btemp+7,plusw1
 17523                           
 17524                           ;stkvar	_m @ sp[(-10)+4]
 17525                           ;stkvar	_u @ sp[(-10)+0]
 17526  0160A2  0EF6               	movlw	-10
 17527  0160A4  006F FF8C  F009    	movff	plusw1,btemp+8
 17528  0160AA  0EF7               	movlw	-9
 17529  0160AC  006F FF8C  F00A    	movff	plusw1,btemp+9
 17530  0160B2  0EF8               	movlw	-8
 17531  0160B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 17532  0160BA  0EF9               	movlw	-7
 17533  0160BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 17534  0160C2  0EFA               	movlw	-6
 17535  0160C4  50E3               	movf	plusw1,w,c
 17536  0160C6  1609               	andwf	(btemp+8)^0,f,c
 17537  0160C8  0EFB               	movlw	-5
 17538  0160CA  50E3               	movf	plusw1,w,c
 17539  0160CC  160A               	andwf	(btemp+9)^0,f,c
 17540  0160CE  0EFC               	movlw	-4
 17541  0160D0  50E3               	movf	plusw1,w,c
 17542  0160D2  160B               	andwf	(btemp+10)^0,f,c
 17543  0160D4  0EFD               	movlw	-3
 17544  0160D6  50E3               	movf	plusw1,w,c
 17545  0160D8  160C               	andwf	(btemp+11)^0,f,c
 17546  0160DA  5009               	movf	(btemp+8)^0,w,c
 17547  0160DC  100A               	iorwf	(btemp+9)^0,w,c
 17548  0160DE  100B               	iorwf	(btemp+10)^0,w,c
 17549  0160E0  100C               	iorwf	(btemp+11)^0,w,c
 17550  0160E2  B4D8               	btfsc	status,2,c
 17551  0160E4  D7A7               	goto	u5840
 17552                           
 17553                           ;stkvar	_u @ sp[(-10)+0]
 17554  0160E6  0EF6               	movlw	-10
 17555  0160E8  006F FF8C  F009    	movff	plusw1,btemp+8
 17556  0160EE  0EF7               	movlw	-9
 17557  0160F0  006F FF8C  F00A    	movff	plusw1,btemp+9
 17558  0160F6  0EF8               	movlw	-8
 17559  0160F8  006F FF8C  F00B    	movff	plusw1,btemp+10
 17560  0160FE  0EF9               	movlw	-7
 17561  016100  006F FF8C  F00C    	movff	plusw1,btemp+11
 17562  016106  0E20               	movlw	32
 17563  016108  D005               	goto	u5880
 17564  01610A                     u5885:
 17565  01610A  90D8               	bcf	status,0,c
 17566  01610C  320C               	rrcf	(btemp+11)^0,f,c
 17567  01610E  320B               	rrcf	(btemp+10)^0,f,c
 17568  016110  320A               	rrcf	(btemp+9)^0,f,c
 17569  016112  3209               	rrcf	(btemp+8)^0,f,c
 17570  016114                     u5880:
 17571  016114  2EE8               	decfsz	wreg,f,c
 17572  016116  D7F9               	goto	u5885
 17573  016118  5009               	movf	(btemp+8)^0,w,c
 17574  01611A  B4D8               	btfsc	status,2,c
 17575  01611C  D028               	goto	l7806
 17576                           
 17577                           ;stkvar	_m @ sp[(-10)+4]
 17578                           ;stkvar	_u @ sp[(-10)+0]
 17579  01611E  0EF6               	movlw	-10
 17580  016120  50E3               	movf	plusw1,w,c
 17581  016122  6E01               	movwf	btemp^0,c
 17582  016124  0EFA               	movlw	-6
 17583  016126  50E3               	movf	plusw1,w,c
 17584  016128  2601               	addwf	btemp^0,f,c
 17585  01612A  0EF6               	movlw	-10
 17586  01612C  0060  F007  FFE3   	movff	btemp,plusw1
 17587  016132  0EF7               	movlw	-9
 17588  016134  50E3               	movf	plusw1,w,c
 17589  016136  6E01               	movwf	btemp^0,c
 17590  016138  0EFB               	movlw	-5
 17591  01613A  50E3               	movf	plusw1,w,c
 17592  01613C  2201               	addwfc	btemp^0,f,c
 17593  01613E  0EF7               	movlw	-9
 17594  016140  0060  F007  FFE3   	movff	btemp,plusw1
 17595  016146  0EF8               	movlw	-8
 17596  016148  50E3               	movf	plusw1,w,c
 17597  01614A  6E01               	movwf	btemp^0,c
 17598  01614C  0EFC               	movlw	-4
 17599  01614E  50E3               	movf	plusw1,w,c
 17600  016150  2201               	addwfc	btemp^0,f,c
 17601  016152  0EF8               	movlw	-8
 17602  016154  0060  F007  FFE3   	movff	btemp,plusw1
 17603  01615A  0EF9               	movlw	-7
 17604  01615C  50E3               	movf	plusw1,w,c
 17605  01615E  6E01               	movwf	btemp^0,c
 17606  016160  0EFD               	movlw	-3
 17607  016162  50E3               	movf	plusw1,w,c
 17608  016164  2201               	addwfc	btemp^0,f,c
 17609  016166  0EF9               	movlw	-7
 17610  016168  0060  F007  FFE3   	movff	btemp,plusw1
 17611  01616E                     l7806:
 17612                           
 17613                           ;stkvar	_m @ sp[(-10)+4]
 17614  01616E  0EFA               	movlw	-6
 17615  016170  006F FF8C  F009    	movff	plusw1,btemp+8
 17616  016176  0EFB               	movlw	-5
 17617  016178  006F FF8C  F00A    	movff	plusw1,btemp+9
 17618  01617E  0EFC               	movlw	-4
 17619  016180  006F FF8C  F00B    	movff	plusw1,btemp+10
 17620  016186  0EFD               	movlw	-3
 17621  016188  006F FF8C  F00C    	movff	plusw1,btemp+11
 17622  01618E  1C09               	comf	(btemp+8)^0,w,c
 17623  016190  6E05               	movwf	(btemp+4)^0,c
 17624  016192  1C0A               	comf	(btemp+9)^0,w,c
 17625  016194  6E06               	movwf	(btemp+5)^0,c
 17626  016196  1C0B               	comf	(btemp+10)^0,w,c
 17627  016198  6E07               	movwf	(btemp+6)^0,c
 17628  01619A  1C0C               	comf	(btemp+11)^0,w,c
 17629  01619C  6E08               	movwf	(btemp+7)^0,c
 17630                           
 17631                           ;stkvar	_u @ sp[(-10)+0]
 17632  01619E  50E1               	movf	fsr1l,w,c
 17633  0161A0  0FF6               	addlw	-10
 17634  0161A2  6ED9               	movwf	fsr2l,c
 17635  0161A4  50E2               	movf	fsr1h,w,c
 17636  0161A6  6EDA               	movwf	fsr2h,c
 17637  0161A8  0EFF               	movlw	255
 17638  0161AA  22DA               	addwfc	fsr2h,f,c
 17639  0161AC  5005               	movf	(btemp+4)^0,w,c
 17640  0161AE  16DE               	andwf	postinc2,f,c
 17641  0161B0  5006               	movf	(btemp+5)^0,w,c
 17642  0161B2  16DE               	andwf	postinc2,f,c
 17643  0161B4  5007               	movf	(btemp+6)^0,w,c
 17644  0161B6  16DE               	andwf	postinc2,f,c
 17645  0161B8  5008               	movf	(btemp+7)^0,w,c
 17646  0161BA  16DE               	andwf	postinc2,f,c
 17647  0161BC  D05B               	goto	l7816
 17648  0161BE                     l7808:
 17649                           
 17650                           ;stkvar	_u @ sp[(-10)+0]
 17651  0161BE  0EF6               	movlw	-10
 17652  0161C0  006F FF8C  F009    	movff	plusw1,btemp+8
 17653  0161C6  0EF7               	movlw	-9
 17654  0161C8  006F FF8C  F00A    	movff	plusw1,btemp+9
 17655  0161CE  0EF8               	movlw	-8
 17656  0161D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 17657  0161D6  0EF9               	movlw	-7
 17658  0161D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 17659  0161DE  0E20               	movlw	32
 17660  0161E0  D005               	goto	u5900
 17661  0161E2                     u5905:
 17662  0161E2  90D8               	bcf	status,0,c
 17663  0161E4  320C               	rrcf	(btemp+11)^0,f,c
 17664  0161E6  320B               	rrcf	(btemp+10)^0,f,c
 17665  0161E8  320A               	rrcf	(btemp+9)^0,f,c
 17666  0161EA  3209               	rrcf	(btemp+8)^0,f,c
 17667  0161EC                     u5900:
 17668  0161EC  2EE8               	decfsz	wreg,f,c
 17669  0161EE  D7F9               	goto	u5905
 17670  0161F0  6609               	tstfsz	(btemp+8)^0,c
 17671  0161F2  D009               	goto	l7812
 17672                           
 17673                           ;stkvar	_u @ sp[(-10)+0]
 17674  0161F4  0EF6               	movlw	-10
 17675  0161F6  6AE3               	clrf	plusw1,c
 17676  0161F8  0EF7               	movlw	-9
 17677  0161FA  6AE3               	clrf	plusw1,c
 17678  0161FC  0EF8               	movlw	-8
 17679  0161FE  6AE3               	clrf	plusw1,c
 17680  016200  0EF9               	movlw	-7
 17681  016202  6AE3               	clrf	plusw1,c
 17682  016204  D037               	goto	l7816
 17683  016206                     l7812:
 17684                           
 17685                           ;stkvar	_u @ sp[(-10)+0]
 17686  016206  0EF6               	movlw	-10
 17687  016208  006F FF8C  F009    	movff	plusw1,btemp+8
 17688  01620E  0EF7               	movlw	-9
 17689  016210  006F FF8C  F00A    	movff	plusw1,btemp+9
 17690  016216  0EF8               	movlw	-8
 17691  016218  006F FF8C  F00B    	movff	plusw1,btemp+10
 17692  01621E  0EF9               	movlw	-7
 17693  016220  006F FF8C  F00C    	movff	plusw1,btemp+11
 17694  016226  90D8               	bcf	status,0,c
 17695  016228  3409               	rlcf	(btemp+8)^0,w,c
 17696  01622A  6E05               	movwf	(btemp+4)^0,c
 17697  01622C  340A               	rlcf	(btemp+9)^0,w,c
 17698  01622E  6E06               	movwf	(btemp+5)^0,c
 17699  016230  340B               	rlcf	(btemp+10)^0,w,c
 17700  016232  6E07               	movwf	(btemp+6)^0,c
 17701  016234  340C               	rlcf	(btemp+11)^0,w,c
 17702  016236  6E08               	movwf	(btemp+7)^0,c
 17703  016238  5005               	movf	(btemp+4)^0,w,c
 17704  01623A  1006               	iorwf	(btemp+5)^0,w,c
 17705  01623C  1007               	iorwf	(btemp+6)^0,w,c
 17706  01623E  1008               	iorwf	(btemp+7)^0,w,c
 17707  016240  B4D8               	btfsc	status,2,c
 17708  016242  D018               	goto	l7816
 17709  016244  0E00               	movlw	0
 17710  016246  6E09               	movwf	(btemp+8)^0,c
 17711  016248  0E00               	movlw	0
 17712  01624A  6E0A               	movwf	(btemp+9)^0,c
 17713  01624C  0E80               	movlw	128
 17714  01624E  6E0B               	movwf	(btemp+10)^0,c
 17715  016250  0EBF               	movlw	191
 17716  016252  6E0C               	movwf	(btemp+11)^0,c
 17717                           
 17718                           ;stkvar	_u @ sp[(-10)+0]
 17719  016254  0EF6               	movlw	-10
 17720  016256  0060  F027  FFE3   	movff	btemp+8,plusw1
 17721  01625C  0EF7               	movlw	-9
 17722  01625E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17723  016264  0EF8               	movlw	-8
 17724  016266  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17725  01626C  0EF9               	movlw	-7
 17726  01626E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17727  016274                     l7816:
 17728                           
 17729                           ;stkvar	_u @ sp[(-10)+0]
 17730  016274  0EF6               	movlw	-10
 17731  016276  006F FF8C  F001    	movff	plusw1,btemp
 17732  01627C  0EF7               	movlw	-9
 17733  01627E  006F FF8C  F002    	movff	plusw1,btemp+1
 17734  016284  0EF8               	movlw	-8
 17735  016286  006F FF8C  F003    	movff	plusw1,btemp+2
 17736  01628C  0EF9               	movlw	-7
 17737  01628E                     L17:
 17738  01628E  006F FF8C  F004    	movff	plusw1,btemp+3
 17739                           
 17740                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17741  016294  0EF2               	movlw	242
 17742  016296  26E1               	addwf	fsr1l,f,c
 17743  016298  0EFF               	movlw	255
 17744  01629A  22E2               	addwfc	fsr1h,f,c
 17745  01629C  0012               	return		;funcret
 17746  01629E                     __end_of_floorf:
 17747                           	opt callstack 0
 17748                           
 17749 ;; *************** function ___fpclassifyf *****************
 17750 ;; Defined at:
 17751 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 17752 ;; Parameters:    Size  Location     Type
 17753 ;;  x               4  [STACK] float 
 17754 ;; Auto vars:     Size  Location     Type
 17755 ;;  u               4  [STACK] struct .
 17756 ;;  e               2  [STACK] int 
 17757 ;; Return value:  Size  Location     Type
 17758 ;;                  2  [STACK] int 
 17759 ;; Registers used:
 17760 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 17761 ;; Tracked objects:
 17762 ;;		On entry : 0/0
 17763 ;;		On exit  : 0/0
 17764 ;;		Unchanged: 0/0
 17765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17770 ;;Total ram usage:        0 bytes
 17771 ;; Hardware stack levels used:    1
 17772 ;; Hardware stack levels required when called:   15
 17773 ;; This function calls:
 17774 ;;		Nothing
 17775 ;; This function is called by:
 17776 ;;		_efgtoa
 17777 ;; This function uses a reentrant model
 17778 ;;
 17779                           
 17780                           	psect	text60
 17781  017CAE                     __ptext60:
 17782                           	opt callstack 0
 17783  017CAE                     ___fpclassifyf:
 17784                           	opt callstack 0
 17785                           
 17786                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17787  017CAE  0E06               	movlw	6
 17788  017CB0  26E1               	addwf	fsr1l,f,c
 17789  017CB2  0E00               	movlw	0
 17790  017CB4  22E2               	addwfc	fsr1h,f,c
 17791                           
 17792                           ;incstack = 0
 17793 ;; hardware stack exceeded
 17794  017CB6  0060  F208  F009   	movff	___fpclassifyf@F463,btemp+8
 17795  017CBC  0060  F20C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 17796  017CC2  0060  F210  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 17797  017CC8  0060  F214  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 17798                           
 17799                           ;stkvar	_u @ sp[(-6)+0]
 17800  017CCE  0EFA               	movlw	-6
 17801  017CD0  0060  F027  FFE3   	movff	btemp+8,plusw1
 17802  017CD6  0EFB               	movlw	-5
 17803  017CD8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17804  017CDE  0EFC               	movlw	-4
 17805  017CE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17806  017CE6  0EFD               	movlw	-3
 17807  017CE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17808                           
 17809                           ;stkvar	_x @ sp[(-6)+-4]
 17810  017CEE  0EF6               	movlw	-10
 17811  017CF0  006F FF8C  F009    	movff	plusw1,btemp+8
 17812  017CF6  0EF7               	movlw	-9
 17813  017CF8  006F FF8C  F00A    	movff	plusw1,btemp+9
 17814  017CFE  0EF8               	movlw	-8
 17815  017D00  006F FF8C  F00B    	movff	plusw1,btemp+10
 17816  017D06  0EF9               	movlw	-7
 17817  017D08  006F FF8C  F00C    	movff	plusw1,btemp+11
 17818                           
 17819                           ;stkvar	_u @ sp[(-6)+0]
 17820  017D0E  0EFA               	movlw	-6
 17821  017D10  0060  F027  FFE3   	movff	btemp+8,plusw1
 17822  017D16  0EFB               	movlw	-5
 17823  017D18  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17824  017D1E  0EFC               	movlw	-4
 17825  017D20  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17826  017D26  0EFD               	movlw	-3
 17827  017D28  0060  F033  FFE3   	movff	btemp+11,plusw1
 17828                           
 17829                           ;stkvar	_u @ sp[(-6)+0]
 17830  017D2E  0EFA               	movlw	-6
 17831  017D30  006F FF8C  F009    	movff	plusw1,btemp+8
 17832  017D36  0EFB               	movlw	-5
 17833  017D38  006F FF8C  F00A    	movff	plusw1,btemp+9
 17834  017D3E  0EFC               	movlw	-4
 17835  017D40  006F FF8C  F00B    	movff	plusw1,btemp+10
 17836  017D46  0EFD               	movlw	-3
 17837  017D48  006F FF8C  F00C    	movff	plusw1,btemp+11
 17838  017D4E  0E18               	movlw	24
 17839  017D50  D005               	goto	u5710
 17840  017D52                     u5715:
 17841  017D52  90D8               	bcf	status,0,c
 17842  017D54  320C               	rrcf	(btemp+11)^0,f,c
 17843  017D56  320B               	rrcf	(btemp+10)^0,f,c
 17844  017D58  320A               	rrcf	(btemp+9)^0,f,c
 17845  017D5A  3209               	rrcf	(btemp+8)^0,f,c
 17846  017D5C                     u5710:
 17847  017D5C  2EE8               	decfsz	wreg,f,c
 17848  017D5E  D7F9               	goto	u5715
 17849  017D60  0060  F024  F007   	movff	btemp+8,btemp+6
 17850  017D66  0060  F028  F008   	movff	btemp+9,btemp+7
 17851  017D6C  0EFF               	movlw	255
 17852  017D6E  1607               	andwf	(btemp+6)^0,f,c
 17853  017D70  0E00               	movlw	0
 17854  017D72  1608               	andwf	(btemp+7)^0,f,c
 17855                           
 17856                           ;stkvar	_e @ sp[(-6)+4]
 17857  017D74  0EFE               	movlw	-2
 17858  017D76  0060  F01F  FFE3   	movff	btemp+6,plusw1
 17859  017D7C  0EFF               	movlw	-1
 17860  017D7E  0060  F023  FFE3   	movff	btemp+7,plusw1
 17861                           
 17862                           ;stkvar	_e @ sp[(-6)+4]
 17863  017D84  0EFE               	movlw	-2
 17864  017D86  006F FF8C  F001    	movff	plusw1,btemp
 17865  017D8C  0EFF               	movlw	-1
 17866  017D8E  50E3               	movf	plusw1,w,c
 17867  017D90  1001               	iorwf	btemp^0,w,c
 17868  017D92  A4D8               	btfss	status,2,c
 17869  017D94  D023               	goto	l7754
 17870                           
 17871                           ;stkvar	_u @ sp[(-6)+0]
 17872  017D96  0EFA               	movlw	-6
 17873  017D98  006F FF8C  F009    	movff	plusw1,btemp+8
 17874  017D9E  0EFB               	movlw	-5
 17875  017DA0  006F FF8C  F00A    	movff	plusw1,btemp+9
 17876  017DA6  0EFC               	movlw	-4
 17877  017DA8  006F FF8C  F00B    	movff	plusw1,btemp+10
 17878  017DAE  0EFD               	movlw	-3
 17879  017DB0  006F FF8C  F00C    	movff	plusw1,btemp+11
 17880  017DB6  90D8               	bcf	status,0,c
 17881  017DB8  3409               	rlcf	(btemp+8)^0,w,c
 17882  017DBA  6E05               	movwf	(btemp+4)^0,c
 17883  017DBC  340A               	rlcf	(btemp+9)^0,w,c
 17884  017DBE  6E06               	movwf	(btemp+5)^0,c
 17885  017DC0  340B               	rlcf	(btemp+10)^0,w,c
 17886  017DC2  6E07               	movwf	(btemp+6)^0,c
 17887  017DC4  340C               	rlcf	(btemp+11)^0,w,c
 17888  017DC6  6E08               	movwf	(btemp+7)^0,c
 17889  017DC8  5005               	movf	(btemp+4)^0,w,c
 17890  017DCA  1006               	iorwf	(btemp+5)^0,w,c
 17891  017DCC  1007               	iorwf	(btemp+6)^0,w,c
 17892  017DCE  1008               	iorwf	(btemp+7)^0,w,c
 17893  017DD0  A4D8               	btfss	status,2,c
 17894  017DD2  D002               	goto	l7750
 17895  017DD4  0E02               	movlw	2
 17896  017DD6  D02E               	goto	L18
 17897  017DD8                     l7750:
 17898  017DD8  0E03               	movlw	3
 17899  017DDA  D02C               	goto	L18
 17900  017DDC                     l7754:
 17901                           
 17902                           ;stkvar	_e @ sp[(-6)+4]
 17903  017DDC  0EFE               	movlw	-2
 17904  017DDE  28E3               	incf	plusw1,w,c
 17905  017DE0  E128               	bnz	l7760
 17906  017DE2  0EFF               	movlw	-1
 17907  017DE4  50E3               	movf	plusw1,w,c
 17908  017DE6  A4D8               	btfss	status,2,c
 17909  017DE8  D024               	goto	l7760
 17910                           
 17911                           ;stkvar	_u @ sp[(-6)+0]
 17912  017DEA  0EFA               	movlw	-6
 17913  017DEC  006F FF8C  F009    	movff	plusw1,btemp+8
 17914  017DF2  0EFB               	movlw	-5
 17915  017DF4  006F FF8C  F00A    	movff	plusw1,btemp+9
 17916  017DFA  0EFC               	movlw	-4
 17917  017DFC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17918  017E02  0EFD               	movlw	-3
 17919  017E04  006F FF8C  F00C    	movff	plusw1,btemp+11
 17920  017E0A  0E09               	movlw	9
 17921  017E0C                     u5755:
 17922  017E0C  90D8               	bcf	status,0,c
 17923  017E0E  3609               	rlcf	(btemp+8)^0,f,c
 17924  017E10  360A               	rlcf	(btemp+9)^0,f,c
 17925  017E12  360B               	rlcf	(btemp+10)^0,f,c
 17926  017E14  360C               	rlcf	(btemp+11)^0,f,c
 17927  017E16  2EE8               	decfsz	wreg,f,c
 17928  017E18  D7F9               	goto	u5755
 17929  017E1A  5009               	movf	(btemp+8)^0,w,c
 17930  017E1C  100A               	iorwf	(btemp+9)^0,w,c
 17931  017E1E  100B               	iorwf	(btemp+10)^0,w,c
 17932  017E20  100C               	iorwf	(btemp+11)^0,w,c
 17933  017E22  A4D8               	btfss	status,2,c
 17934  017E24  D002               	goto	u5760
 17935  017E26  0E01               	movlw	1
 17936  017E28  D001               	goto	u5770
 17937  017E2A                     u5760:
 17938  017E2A  0E00               	movlw	0
 17939  017E2C                     u5770:
 17940  017E2C  6E01               	movwf	btemp^0,c
 17941  017E2E  6A02               	clrf	(btemp+1)^0,c
 17942  017E30  D004               	goto	l3042
 17943  017E32                     l7760:
 17944  017E32  0E04               	movlw	4
 17945  017E34                     L18:
 17946  017E34  6E01               	movwf	btemp^0,c
 17947  017E36  0E00               	movlw	0
 17948  017E38  6E02               	movwf	(btemp+1)^0,c
 17949  017E3A                     l3042:
 17950                           
 17951                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 17952  017E3A  0EF6               	movlw	246
 17953  017E3C  26E1               	addwf	fsr1l,f,c
 17954  017E3E  0EFF               	movlw	255
 17955  017E40  22E2               	addwfc	fsr1h,f,c
 17956  017E42  0012               	return		;funcret
 17957  017E44                     __end_of___fpclassifyf:
 17958                           	opt callstack 0
 17959                           
 17960 ;; *************** function ___fltol *****************
 17961 ;; Defined at:
 17962 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 17963 ;; Parameters:    Size  Location     Type
 17964 ;;  f1              4  [STACK] int 
 17965 ;; Auto vars:     Size  Location     Type
 17966 ;;  exp1            1  [STACK] unsigned char 
 17967 ;;  sign1           1  [STACK] unsigned char 
 17968 ;; Return value:  Size  Location     Type
 17969 ;;                  4  [STACK] long 
 17970 ;; Registers used:
 17971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 17972 ;; Tracked objects:
 17973 ;;		On entry : 0/1
 17974 ;;		On exit  : 0/0
 17975 ;;		Unchanged: 0/0
 17976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17981 ;;Total ram usage:        0 bytes
 17982 ;; Hardware stack levels used:    1
 17983 ;; Hardware stack levels required when called:   15
 17984 ;; This function calls:
 17985 ;;		Nothing
 17986 ;; This function is called by:
 17987 ;;		_calc_bsoc
 17988 ;;		_init_bsoc
 17989 ;;		_efgtoa
 17990 ;; This function uses a reentrant model
 17991 ;;
 17992                           
 17993                           	psect	text61
 17994  018138                     __ptext61:
 17995                           	opt callstack 0
 17996  018138                     ___fltol:
 17997                           	opt callstack 0
 17998                           
 17999                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18000  018138  52E6               	movf	postinc1,f,c
 18001  01813A  52E6               	movf	postinc1,f,c
 18002                           
 18003                           ;stkvar	_f1 @ sp[(-2)+-4]
 18004                           
 18005                           ;incstack = 0
 18006 ;; hardware stack exceeded
 18007  01813C  0EFA               	movlw	-6
 18008  01813E  006F FF8C  F009    	movff	plusw1,btemp+8
 18009  018144  0EFB               	movlw	-5
 18010  018146  006F FF8C  F00A    	movff	plusw1,btemp+9
 18011  01814C  0EFC               	movlw	-4
 18012  01814E  006F FF8C  F00B    	movff	plusw1,btemp+10
 18013  018154  0EFD               	movlw	-3
 18014  018156  006F FF8C  F00C    	movff	plusw1,btemp+11
 18015  01815C  0E18               	movlw	24
 18016  01815E  D005               	goto	u6920
 18017  018160                     u6925:
 18018  018160  90D8               	bcf	status,0,c
 18019  018162  320C               	rrcf	(btemp+11)^0,f,c
 18020  018164  320B               	rrcf	(btemp+10)^0,f,c
 18021  018166  320A               	rrcf	(btemp+9)^0,f,c
 18022  018168  3209               	rrcf	(btemp+8)^0,f,c
 18023  01816A                     u6920:
 18024  01816A  2EE8               	decfsz	wreg,f,c
 18025  01816C  D7F9               	goto	u6925
 18026                           
 18027                           ;stkvar	_exp1 @ sp[(-2)+0]
 18028  01816E  0EFE               	movlw	-2
 18029  018170  0060  F027  FFE3   	movff	btemp+8,plusw1
 18030  018176  0EFE               	movlw	-2
 18031  018178  50E3               	movf	plusw1,w,c
 18032  01817A  A4D8               	btfss	status,2,c
 18033  01817C  D006               	goto	l8380
 18034  01817E                     u6930:
 18035  01817E  0E00               	movlw	0
 18036  018180  6E01               	movwf	btemp^0,c
 18037  018182  6A02               	clrf	(btemp+1)^0,c
 18038  018184  6A03               	clrf	(btemp+2)^0,c
 18039  018186  6A04               	clrf	(btemp+3)^0,c
 18040  018188  D08B               	goto	l2658
 18041  01818A                     l8380:
 18042                           
 18043                           ;stkvar	_f1 @ sp[(-2)+-4]
 18044  01818A  0EFA               	movlw	-6
 18045  01818C  006F FF8C  F009    	movff	plusw1,btemp+8
 18046  018192  0EFB               	movlw	-5
 18047  018194  006F FF8C  F00A    	movff	plusw1,btemp+9
 18048  01819A  0EFC               	movlw	-4
 18049  01819C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18050  0181A2  0EFD               	movlw	-3
 18051  0181A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18052  0181AA  0E20               	movlw	32
 18053  0181AC  D005               	goto	u6940
 18054  0181AE                     u6945:
 18055  0181AE  90D8               	bcf	status,0,c
 18056  0181B0  320C               	rrcf	(btemp+11)^0,f,c
 18057  0181B2  320B               	rrcf	(btemp+10)^0,f,c
 18058  0181B4  320A               	rrcf	(btemp+9)^0,f,c
 18059  0181B6  3209               	rrcf	(btemp+8)^0,f,c
 18060  0181B8                     u6940:
 18061  0181B8  2EE8               	decfsz	wreg,f,c
 18062  0181BA  D7F9               	goto	u6945
 18063                           
 18064                           ;stkvar	_sign1 @ sp[(-2)+1]
 18065  0181BC  0EFF               	movlw	-1
 18066  0181BE  0060  F027  FFE3   	movff	btemp+8,plusw1
 18067                           
 18068                           ;stkvar	_f1 @ sp[(-2)+-4]
 18069  0181C4  0EFC               	movlw	-4
 18070  0181C6  8EE3               	bsf	plusw1,7,c
 18071                           
 18072                           ;stkvar	_f1 @ sp[(-2)+-4]
 18073  0181C8  50E1               	movf	fsr1l,w,c
 18074  0181CA  0FFA               	addlw	-6
 18075  0181CC  6ED9               	movwf	fsr2l,c
 18076  0181CE  50E2               	movf	fsr1h,w,c
 18077  0181D0  6EDA               	movwf	fsr2h,c
 18078  0181D2  0EFF               	movlw	255
 18079  0181D4  22DA               	addwfc	fsr2h,f,c
 18080  0181D6  0EFF               	movlw	255
 18081  0181D8  16DE               	andwf	postinc2,f,c
 18082  0181DA  0EFF               	movlw	255
 18083  0181DC  16DE               	andwf	postinc2,f,c
 18084  0181DE  0EFF               	movlw	255
 18085  0181E0  16DE               	andwf	postinc2,f,c
 18086  0181E2  0E00               	movlw	0
 18087  0181E4  16DE               	andwf	postinc2,f,c
 18088                           
 18089                           ;stkvar	_exp1 @ sp[(-2)+0]
 18090  0181E6  0EFE               	movlw	-2
 18091  0181E8  006F FF8C  F001    	movff	plusw1,btemp
 18092  0181EE  0E96               	movlw	150
 18093  0181F0  5E01               	subwf	btemp^0,f,c
 18094  0181F2  0EFE               	movlw	-2
 18095  0181F4  0060  F007  FFE3   	movff	btemp,plusw1
 18096                           
 18097                           ;stkvar	_exp1 @ sp[(-2)+0]
 18098  0181FA  0EFE               	movlw	-2
 18099  0181FC  AEE3               	btfss	plusw1,7,c
 18100  0181FE  D014               	goto	l8398
 18101                           
 18102                           ;stkvar	_exp1 @ sp[(-2)+0]
 18103  018200  0EFE               	movlw	-2
 18104  018202  50E3               	movf	plusw1,w,c
 18105  018204  0A80               	xorlw	128
 18106  018206  0F97               	addlw	151
 18107  018208  A0D8               	btfss	status,0,c
 18108  01820A  D7B9               	goto	u6930
 18109  01820C                     l8396:
 18110                           
 18111                           ;stkvar	_f1 @ sp[(-2)+-4]
 18112  01820C  90D8               	bcf	status,0,c
 18113  01820E  0EFD               	movlw	-3
 18114  018210  32E3               	rrcf	plusw1,f,c
 18115  018212  0EFC               	movlw	-4
 18116  018214  32E3               	rrcf	plusw1,f,c
 18117  018216  0EFB               	movlw	-5
 18118  018218  32E3               	rrcf	plusw1,f,c
 18119  01821A  0EFA               	movlw	-6
 18120  01821C  32E3               	rrcf	plusw1,f,c
 18121                           
 18122                           ;stkvar	_exp1 @ sp[(-2)+0]
 18123  01821E  0EFE               	movlw	-2
 18124  018220  2AE3               	incf	plusw1,f,c
 18125  018222  B4D8               	btfsc	status,2,c
 18126  018224  D018               	goto	u6990
 18127  018226  D7F2               	goto	l8396
 18128  018228                     l8398:
 18129                           
 18130                           ;stkvar	_exp1 @ sp[(-2)+0]
 18131  018228  0EFE               	movlw	-2
 18132  01822A  006F FF8C  F001    	movff	plusw1,btemp
 18133  018230  0E1F               	movlw	31
 18134  018232  6401               	cpfsgt	btemp^0,c
 18135  018234  D00C               	goto	l8406
 18136  018236  D7A3               	goto	u6930
 18137  018238                     l8404:
 18138                           
 18139                           ;stkvar	_f1 @ sp[(-2)+-4]
 18140  018238  90D8               	bcf	status,0,c
 18141  01823A  0EFA               	movlw	-6
 18142  01823C  36E3               	rlcf	plusw1,f,c
 18143  01823E  0EFB               	movlw	-5
 18144  018240  36E3               	rlcf	plusw1,f,c
 18145  018242  0EFC               	movlw	-4
 18146  018244  36E3               	rlcf	plusw1,f,c
 18147  018246  0EFD               	movlw	-3
 18148  018248  36E3               	rlcf	plusw1,f,c
 18149                           
 18150                           ;stkvar	_exp1 @ sp[(-2)+0]
 18151  01824A  0EFE               	movlw	-2
 18152  01824C  06E3               	decf	plusw1,f,c
 18153  01824E                     l8406:
 18154                           
 18155                           ;stkvar	_exp1 @ sp[(-2)+0]
 18156  01824E  0EFE               	movlw	-2
 18157  018250  50E3               	movf	plusw1,w,c
 18158  018252  A4D8               	btfss	status,2,c
 18159  018254  D7F1               	goto	l8404
 18160  018256                     u6990:
 18161                           
 18162                           ;stkvar	_sign1 @ sp[(-2)+1]
 18163  018256  0EFF               	movlw	-1
 18164  018258  50E3               	movf	plusw1,w,c
 18165  01825A  B4D8               	btfsc	status,2,c
 18166  01825C  D011               	goto	u7010
 18167                           
 18168                           ;stkvar	_f1 @ sp[(-2)+-4]
 18169                           ;stkvar	_f1 @ sp[(-2)+-4]
 18170  01825E  0EFA               	movlw	-6
 18171  018260  6CE3               	negf	plusw1,c
 18172  018262  0EFB               	movlw	-5
 18173  018264  1EE3               	comf	plusw1,f,c
 18174  018266  0EFC               	movlw	-4
 18175  018268  1EE3               	comf	plusw1,f,c
 18176  01826A  0EFD               	movlw	-3
 18177  01826C  1EE3               	comf	plusw1,f,c
 18178  01826E  E308               	bnc	u7010
 18179  018270  0EFB               	movlw	-5
 18180  018272  2AE3               	incf	plusw1,f,c
 18181  018274  E305               	bnc	u7010
 18182  018276  0EFC               	movlw	-4
 18183  018278  2AE3               	incf	plusw1,f,c
 18184  01827A  E302               	bnc	u7010
 18185  01827C  0EFD               	movlw	-3
 18186  01827E  2AE3               	incf	plusw1,f,c
 18187  018280                     u7010:
 18188                           
 18189                           ;stkvar	_f1 @ sp[(-2)+-4]
 18190  018280  0EFA               	movlw	-6
 18191  018282  006F FF8C  F001    	movff	plusw1,btemp
 18192  018288  0EFB               	movlw	-5
 18193  01828A  006F FF8C  F002    	movff	plusw1,btemp+1
 18194  018290  0EFC               	movlw	-4
 18195  018292  006F FF8C  F003    	movff	plusw1,btemp+2
 18196  018298  0EFD               	movlw	-3
 18197  01829A  006F FF8C  F004    	movff	plusw1,btemp+3
 18198  0182A0                     l2658:
 18199                           
 18200                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18201  0182A0  0EFA               	movlw	250
 18202  0182A2  26E1               	addwf	fsr1l,f,c
 18203  0182A4  0EFF               	movlw	255
 18204  0182A6  22E2               	addwfc	fsr1h,f,c
 18205  0182A8  0012               	return		;funcret
 18206  0182AA                     __end_of___fltol:
 18207                           	opt callstack 0
 18208                           
 18209 ;; *************** function ___flneg *****************
 18210 ;; Defined at:
 18211 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 18212 ;; Parameters:    Size  Location     Type
 18213 ;;  f1              4  [STACK] long 
 18214 ;; Auto vars:     Size  Location     Type
 18215 ;;		None
 18216 ;; Return value:  Size  Location     Type
 18217 ;;                  4  [STACK] long 
 18218 ;; Registers used:
 18219 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18220 ;; Tracked objects:
 18221 ;;		On entry : 0/0
 18222 ;;		On exit  : 0/0
 18223 ;;		Unchanged: 0/0
 18224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18229 ;;Total ram usage:        0 bytes
 18230 ;; Hardware stack levels used:    1
 18231 ;; Hardware stack levels required when called:   15
 18232 ;; This function calls:
 18233 ;;		Nothing
 18234 ;; This function is called by:
 18235 ;;		_calc_bsoc
 18236 ;;		_efgtoa
 18237 ;; This function uses a reentrant model
 18238 ;;
 18239                           
 18240                           	psect	text62
 18241  01A720                     __ptext62:
 18242                           	opt callstack 0
 18243  01A720                     ___flneg:
 18244                           	opt callstack 0
 18245                           
 18246                           ;stkvar	_f1 @ sp[(0)+-4]
 18247                           
 18248                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18249                           ;incstack = 0
 18250 ;; hardware stack exceeded
 18251  01A720  0EFC               	movlw	-4
 18252  01A722  50E3               	movf	plusw1,w,c
 18253  01A724  E10A               	bnz	u6910
 18254  01A726  0EFD               	movlw	-3
 18255  01A728  50E3               	movf	plusw1,w,c
 18256  01A72A  E107               	bnz	u6910
 18257  01A72C  0EFE               	movlw	-2
 18258  01A72E  50E3               	movf	plusw1,w,c
 18259  01A730  E104               	bnz	u6910
 18260  01A732  0EFF               	movlw	-1
 18261  01A734  50E3               	movf	plusw1,w,c
 18262  01A736  B4D8               	btfsc	status,2,c
 18263  01A738  D002               	goto	l8370
 18264  01A73A                     u6910:
 18265                           
 18266                           ;stkvar	_f1 @ sp[(0)+-4]
 18267  01A73A  0EFF               	movlw	-1
 18268  01A73C  7EE3               	btg	plusw1,7,c
 18269  01A73E                     l8370:
 18270                           
 18271                           ;stkvar	_f1 @ sp[(0)+-4]
 18272  01A73E  0EFC               	movlw	-4
 18273  01A740  006F FF8C  F001    	movff	plusw1,btemp
 18274  01A746  0EFD               	movlw	-3
 18275  01A748  006F FF8C  F002    	movff	plusw1,btemp+1
 18276  01A74E  0EFE               	movlw	-2
 18277  01A750  006F FF8C  F003    	movff	plusw1,btemp+2
 18278  01A756  0EFF               	movlw	-1
 18279  01A758  006F FF8C  F004    	movff	plusw1,btemp+3
 18280                           
 18281                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18282  01A75E  52E5               	movf	postdec1,f,c
 18283  01A760  52E5               	movf	postdec1,f,c
 18284  01A762  52E5               	movf	postdec1,f,c
 18285  01A764  52E5               	movf	postdec1,f,c
 18286  01A766  0012               	return		;funcret
 18287  01A768                     __end_of___flneg:
 18288                           	opt callstack 0
 18289                           
 18290 ;; *************** function ___fleq *****************
 18291 ;; Defined at:
 18292 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 18293 ;; Parameters:    Size  Location     Type
 18294 ;;  ff1             4  [STACK] long 
 18295 ;;  ff2             4  [STACK] long 
 18296 ;; Auto vars:     Size  Location     Type
 18297 ;;		None
 18298 ;; Return value:  Size  Location     Type
 18299 ;;		None               void
 18300 ;; Registers used:
 18301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18302 ;; Tracked objects:
 18303 ;;		On entry : 0/0
 18304 ;;		On exit  : 0/0
 18305 ;;		Unchanged: 0/0
 18306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18311 ;;Total ram usage:        0 bytes
 18312 ;; Hardware stack levels used:    1
 18313 ;; Hardware stack levels required when called:   15
 18314 ;; This function calls:
 18315 ;;		Nothing
 18316 ;; This function is called by:
 18317 ;;		_efgtoa
 18318 ;; This function uses a reentrant model
 18319 ;;
 18320                           
 18321                           	psect	text63
 18322  0196E8                     __ptext63:
 18323                           	opt callstack 0
 18324  0196E8                     ___fleq:
 18325                           	opt callstack 0
 18326                           
 18327                           ;stkvar	_ff1 @ sp[(0)+-4]
 18328                           
 18329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18330                           ;incstack = 0
 18331 ;; hardware stack exceeded
 18332  0196E8  50E1               	movf	fsr1l,w,c
 18333  0196EA  0FFC               	addlw	-4
 18334  0196EC  6ED9               	movwf	fsr2l,c
 18335  0196EE  50E2               	movf	fsr1h,w,c
 18336  0196F0  6EDA               	movwf	fsr2h,c
 18337  0196F2  0EFF               	movlw	255
 18338  0196F4  22DA               	addwfc	fsr2h,f,c
 18339  0196F6  0E00               	movlw	0
 18340  0196F8  14DE               	andwf	postinc2,w,c
 18341  0196FA  6E09               	movwf	(btemp+8)^0,c
 18342  0196FC  0E00               	movlw	0
 18343  0196FE  14DE               	andwf	postinc2,w,c
 18344  019700  6E0A               	movwf	(btemp+9)^0,c
 18345  019702  0E80               	movlw	128
 18346  019704  14DE               	andwf	postinc2,w,c
 18347  019706  6E0B               	movwf	(btemp+10)^0,c
 18348  019708  0E7F               	movlw	127
 18349  01970A  14DE               	andwf	postinc2,w,c
 18350  01970C  6E0C               	movwf	(btemp+11)^0,c
 18351  01970E  5009               	movf	(btemp+8)^0,w,c
 18352  019710  100A               	iorwf	(btemp+9)^0,w,c
 18353  019712  100B               	iorwf	(btemp+10)^0,w,c
 18354  019714  100C               	iorwf	(btemp+11)^0,w,c
 18355  019716  A4D8               	btfss	status,2,c
 18356  019718  D008               	goto	l8328
 18357                           
 18358                           ;stkvar	_ff1 @ sp[(0)+-4]
 18359  01971A  0EFC               	movlw	-4
 18360  01971C  6AE3               	clrf	plusw1,c
 18361  01971E  0EFD               	movlw	-3
 18362  019720  6AE3               	clrf	plusw1,c
 18363  019722  0EFE               	movlw	-2
 18364  019724  6AE3               	clrf	plusw1,c
 18365  019726  0EFF               	movlw	-1
 18366  019728  6AE3               	clrf	plusw1,c
 18367  01972A                     l8328:
 18368                           
 18369                           ;stkvar	_ff2 @ sp[(0)+-8]
 18370  01972A  50E1               	movf	fsr1l,w,c
 18371  01972C  0FF8               	addlw	-8
 18372  01972E  6ED9               	movwf	fsr2l,c
 18373  019730  50E2               	movf	fsr1h,w,c
 18374  019732  6EDA               	movwf	fsr2h,c
 18375  019734  0EFF               	movlw	255
 18376  019736  22DA               	addwfc	fsr2h,f,c
 18377  019738  0E00               	movlw	0
 18378  01973A  14DE               	andwf	postinc2,w,c
 18379  01973C  6E09               	movwf	(btemp+8)^0,c
 18380  01973E  0E00               	movlw	0
 18381  019740  14DE               	andwf	postinc2,w,c
 18382  019742  6E0A               	movwf	(btemp+9)^0,c
 18383  019744  0E80               	movlw	128
 18384  019746  14DE               	andwf	postinc2,w,c
 18385  019748  6E0B               	movwf	(btemp+10)^0,c
 18386  01974A  0E7F               	movlw	127
 18387  01974C  14DE               	andwf	postinc2,w,c
 18388  01974E  6E0C               	movwf	(btemp+11)^0,c
 18389  019750  5009               	movf	(btemp+8)^0,w,c
 18390  019752  100A               	iorwf	(btemp+9)^0,w,c
 18391  019754  100B               	iorwf	(btemp+10)^0,w,c
 18392  019756  100C               	iorwf	(btemp+11)^0,w,c
 18393  019758  A4D8               	btfss	status,2,c
 18394  01975A  D008               	goto	l8332
 18395                           
 18396                           ;stkvar	_ff2 @ sp[(0)+-8]
 18397  01975C  0EF8               	movlw	-8
 18398  01975E  6AE3               	clrf	plusw1,c
 18399  019760  0EF9               	movlw	-7
 18400  019762  6AE3               	clrf	plusw1,c
 18401  019764  0EFA               	movlw	-6
 18402  019766  6AE3               	clrf	plusw1,c
 18403  019768  0EFB               	movlw	-5
 18404  01976A  6AE3               	clrf	plusw1,c
 18405  01976C                     l8332:
 18406                           
 18407                           ;stkvar	_ff2 @ sp[(0)+-8]
 18408                           ;stkvar	_ff1 @ sp[(0)+-4]
 18409  01976C  50E1               	movf	fsr1l,w,c
 18410  01976E  0FFC               	addlw	-4
 18411  019770  6ED9               	movwf	fsr2l,c
 18412  019772  50E2               	movf	fsr1h,w,c
 18413  019774  6EDA               	movwf	fsr2h,c
 18414  019776  0EFF               	movlw	255
 18415  019778  22DA               	addwfc	fsr2h,f,c
 18416  01977A  0EF8               	movlw	-8
 18417  01977C  50E3               	movf	plusw1,w,c
 18418  01977E  18DE               	xorwf	postinc2,w,c
 18419  019780  E10D               	bnz	u6850
 18420  019782  0EF9               	movlw	-7
 18421  019784  50E3               	movf	plusw1,w,c
 18422  019786  18DE               	xorwf	postinc2,w,c
 18423  019788  E109               	bnz	u6850
 18424  01978A  0EFA               	movlw	-6
 18425  01978C  50E3               	movf	plusw1,w,c
 18426  01978E  18DE               	xorwf	postinc2,w,c
 18427  019790  E105               	bnz	u6850
 18428  019792  0EFB               	movlw	-5
 18429  019794  50E3               	movf	plusw1,w,c
 18430  019796  18DE               	xorwf	postinc2,w,c
 18431  019798  B4D8               	btfsc	status,2,c
 18432  01979A  D002               	goto	l8336
 18433  01979C                     u6850:
 18434  01979C  9001               	bcf	btemp& (0+255),0,c
 18435  01979E  D001               	goto	l2620
 18436  0197A0                     l8336:
 18437  0197A0  8001               	bsf	btemp& (0+255),0,c
 18438  0197A2                     l2620:
 18439                           
 18440                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18441  0197A2  0EF8               	movlw	248
 18442  0197A4  26E1               	addwf	fsr1l,f,c
 18443  0197A6  0EFF               	movlw	255
 18444  0197A8  22E2               	addwfc	fsr1h,f,c
 18445  0197AA  0012               	return		;funcret
 18446  0197AC                     __end_of___fleq:
 18447                           	opt callstack 0
 18448                           
 18449 ;; *************** function ___awmod *****************
 18450 ;; Defined at:
 18451 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18452 ;; Parameters:    Size  Location     Type
 18453 ;;  dividend        2  [STACK] int 
 18454 ;;  divisor         2  [STACK] int 
 18455 ;; Auto vars:     Size  Location     Type
 18456 ;;  sign            1  [STACK] unsigned char 
 18457 ;;  counter         1  [STACK] unsigned char 
 18458 ;; Return value:  Size  Location     Type
 18459 ;;                  2  [STACK] int 
 18460 ;; Registers used:
 18461 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18462 ;; Tracked objects:
 18463 ;;		On entry : 0/0
 18464 ;;		On exit  : 0/0
 18465 ;;		Unchanged: 0/0
 18466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18471 ;;Total ram usage:        0 bytes
 18472 ;; Hardware stack levels used:    1
 18473 ;; Hardware stack levels required when called:   15
 18474 ;; This function calls:
 18475 ;;		Nothing
 18476 ;; This function is called by:
 18477 ;;		_efgtoa
 18478 ;; This function uses a reentrant model
 18479 ;;
 18480                           
 18481                           	psect	text64
 18482  018CFA                     __ptext64:
 18483                           	opt callstack 0
 18484  018CFA                     ___awmod:
 18485                           	opt callstack 0
 18486                           
 18487                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18488  018CFA  52E6               	movf	postinc1,f,c
 18489  018CFC  52E6               	movf	postinc1,f,c
 18490                           
 18491                           ;stkvar	_sign @ sp[(-2)+0]
 18492                           
 18493                           ;incstack = 0
 18494 ;; hardware stack exceeded
 18495  018CFE  0EFE               	movlw	-2
 18496  018D00  6AE3               	clrf	plusw1,c
 18497                           
 18498                           ;stkvar	_dividend @ sp[(-2)+-2]
 18499  018D02  0EFD               	movlw	-3
 18500  018D04  AEE3               	btfss	plusw1,7,c
 18501  018D06  D009               	goto	l8294
 18502                           
 18503                           ;stkvar	_dividend @ sp[(-2)+-2]
 18504                           ;stkvar	_dividend @ sp[(-2)+-2]
 18505  018D08  0EFC               	movlw	-4
 18506  018D0A  6CE3               	negf	plusw1,c
 18507  018D0C  0EFD               	movlw	-3
 18508  018D0E  1EE3               	comf	plusw1,f,c
 18509  018D10  B0D8               	btfsc	status,0,c
 18510  018D12  2AE3               	incf	plusw1,f,c
 18511                           
 18512                           ;stkvar	_sign @ sp[(-2)+0]
 18513  018D14  0EFE               	movlw	-2
 18514  018D16  6AE3               	clrf	plusw1,c
 18515  018D18  2AE3               	incf	plusw1,f,c
 18516  018D1A                     l8294:
 18517                           
 18518                           ;stkvar	_divisor @ sp[(-2)+-4]
 18519  018D1A  0EFB               	movlw	-5
 18520  018D1C  AEE3               	btfss	plusw1,7,c
 18521  018D1E  D006               	goto	l8298
 18522                           
 18523                           ;stkvar	_divisor @ sp[(-2)+-4]
 18524                           ;stkvar	_divisor @ sp[(-2)+-4]
 18525  018D20  0EFA               	movlw	-6
 18526  018D22  6CE3               	negf	plusw1,c
 18527  018D24  0EFB               	movlw	-5
 18528  018D26  1EE3               	comf	plusw1,f,c
 18529  018D28  B0D8               	btfsc	status,0,c
 18530  018D2A  2AE3               	incf	plusw1,f,c
 18531  018D2C                     l8298:
 18532                           
 18533                           ;stkvar	_divisor @ sp[(-2)+-4]
 18534  018D2C  0EFA               	movlw	-6
 18535  018D2E  006F FF8C  F001    	movff	plusw1,btemp
 18536  018D34  0EFB               	movlw	-5
 18537  018D36  50E3               	movf	plusw1,w,c
 18538  018D38  1001               	iorwf	btemp^0,w,c
 18539  018D3A  B4D8               	btfsc	status,2,c
 18540  018D3C  D053               	goto	u6810
 18541                           
 18542                           ;stkvar	_counter @ sp[(-2)+1]
 18543  018D3E  0EFF               	movlw	-1
 18544  018D40  6AE3               	clrf	plusw1,c
 18545  018D42  D012               	goto	L19
 18546  018D44                     l8302:
 18547                           
 18548                           ;stkvar	_divisor @ sp[(-2)+-4]
 18549  018D44  0EFA               	movlw	-6
 18550  018D46  50E3               	movf	plusw1,w,c
 18551  018D48  90D8               	bcf	status,0,c
 18552  018D4A  34E8               	rlcf	wreg,w,c
 18553  018D4C  6E01               	movwf	btemp^0,c
 18554  018D4E  0EFA               	movlw	-6
 18555  018D50  0060  F007  FFE3   	movff	btemp,plusw1
 18556  018D56  0EFB               	movlw	-5
 18557  018D58  50E3               	movf	plusw1,w,c
 18558  018D5A  34E8               	rlcf	wreg,w,c
 18559  018D5C  6E01               	movwf	btemp^0,c
 18560  018D5E  0EFB               	movlw	-5
 18561  018D60  0060  F007  FFE3   	movff	btemp,plusw1
 18562                           
 18563                           ;stkvar	_counter @ sp[(-2)+1]
 18564  018D66  0EFF               	movlw	-1
 18565  018D68                     L19:
 18566  018D68  2AE3               	incf	plusw1,f,c
 18567                           
 18568                           ;stkvar	_divisor @ sp[(-2)+-4]
 18569  018D6A  0EFB               	movlw	-5
 18570  018D6C  AEE3               	btfss	plusw1,7,c
 18571  018D6E  D7EA               	goto	l8302
 18572  018D70                     u6790:
 18573                           
 18574                           ;stkvar	_divisor @ sp[(-2)+-4]
 18575  018D70  0EFA               	movlw	-6
 18576  018D72  006F FF8C  F00B    	movff	plusw1,btemp+10
 18577  018D78  0EFB               	movlw	-5
 18578  018D7A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18579                           
 18580                           ;stkvar	_dividend @ sp[(-2)+-2]
 18581  018D80  0EFC               	movlw	-4
 18582  018D82  006F FF8C  F009    	movff	plusw1,btemp+8
 18583  018D88  0EFD               	movlw	-3
 18584  018D8A  006F FF8C  F00A    	movff	plusw1,btemp+9
 18585  018D90  500B               	movf	(btemp+10)^0,w,c
 18586  018D92  5C09               	subwf	(btemp+8)^0,w,c
 18587  018D94  500C               	movf	(btemp+11)^0,w,c
 18588  018D96  580A               	subwfb	(btemp+9)^0,w,c
 18589  018D98  A0D8               	btfss	status,0,c
 18590  018D9A  D014               	goto	l8312
 18591                           
 18592                           ;stkvar	_divisor @ sp[(-2)+-4]
 18593                           ;stkvar	_dividend @ sp[(-2)+-2]
 18594  018D9C  0EFC               	movlw	-4
 18595  018D9E  50E3               	movf	plusw1,w,c
 18596  018DA0  6E01               	movwf	btemp^0,c
 18597  018DA2  0EFA               	movlw	-6
 18598  018DA4  50E3               	movf	plusw1,w,c
 18599  018DA6  5E01               	subwf	btemp^0,f,c
 18600  018DA8  0EFC               	movlw	-4
 18601  018DAA  0060  F007  FFE3   	movff	btemp,plusw1
 18602  018DB0  0EFD               	movlw	-3
 18603  018DB2  50E3               	movf	plusw1,w,c
 18604  018DB4  6E01               	movwf	btemp^0,c
 18605  018DB6  0EFB               	movlw	-5
 18606  018DB8  50E3               	movf	plusw1,w,c
 18607  018DBA  5A01               	subwfb	btemp^0,f,c
 18608  018DBC  0EFD               	movlw	-3
 18609  018DBE  0060  F007  FFE3   	movff	btemp,plusw1
 18610  018DC4                     l8312:
 18611                           
 18612                           ;stkvar	_divisor @ sp[(-2)+-4]
 18613  018DC4  90D8               	bcf	status,0,c
 18614  018DC6  0EFB               	movlw	-5
 18615  018DC8  32E3               	rrcf	plusw1,f,c
 18616  018DCA  0EFA               	movlw	-6
 18617  018DCC  32E3               	rrcf	plusw1,f,c
 18618                           
 18619                           ;stkvar	_counter @ sp[(-2)+1]
 18620  018DCE  0EFF               	movlw	-1
 18621  018DD0  50E3               	movf	plusw1,w,c
 18622  018DD2  6E01               	movwf	btemp^0,c
 18623  018DD4  0E01               	movlw	1
 18624  018DD6  5E01               	subwf	btemp^0,f,c
 18625  018DD8  0EFF               	movlw	-1
 18626  018DDA  0060  F007  FFE3   	movff	btemp,plusw1
 18627  018DE0  A4D8               	btfss	status,2,c
 18628  018DE2  D7C6               	goto	u6790
 18629  018DE4                     u6810:
 18630                           
 18631                           ;stkvar	_sign @ sp[(-2)+0]
 18632  018DE4  0EFE               	movlw	-2
 18633  018DE6  50E3               	movf	plusw1,w,c
 18634  018DE8  B4D8               	btfsc	status,2,c
 18635  018DEA  D006               	goto	l8320
 18636                           
 18637                           ;stkvar	_dividend @ sp[(-2)+-2]
 18638                           ;stkvar	_dividend @ sp[(-2)+-2]
 18639  018DEC  0EFC               	movlw	-4
 18640  018DEE  6CE3               	negf	plusw1,c
 18641  018DF0  0EFD               	movlw	-3
 18642  018DF2  1EE3               	comf	plusw1,f,c
 18643  018DF4  B0D8               	btfsc	status,0,c
 18644  018DF6  2AE3               	incf	plusw1,f,c
 18645  018DF8                     l8320:
 18646                           
 18647                           ;stkvar	_dividend @ sp[(-2)+-2]
 18648  018DF8  0EFC               	movlw	-4
 18649  018DFA  006F FF8C  F001    	movff	plusw1,btemp
 18650  018E00  0EFD               	movlw	-3
 18651  018E02  006F FF8C  F002    	movff	plusw1,btemp+1
 18652                           
 18653                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18654  018E08  0EFA               	movlw	250
 18655  018E0A  26E1               	addwf	fsr1l,f,c
 18656  018E0C  0EFF               	movlw	255
 18657  018E0E  22E2               	addwfc	fsr1h,f,c
 18658  018E10  0012               	return		;funcret
 18659  018E12                     __end_of___awmod:
 18660                           	opt callstack 0
 18661                           
 18662 ;; *************** function ___awdiv *****************
 18663 ;; Defined at:
 18664 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 18665 ;; Parameters:    Size  Location     Type
 18666 ;;  dividend        2  [STACK] int 
 18667 ;;  divisor         2  [STACK] int 
 18668 ;; Auto vars:     Size  Location     Type
 18669 ;;  quotient        2  [STACK] int 
 18670 ;;  sign            1  [STACK] unsigned char 
 18671 ;;  counter         1  [STACK] unsigned char 
 18672 ;; Return value:  Size  Location     Type
 18673 ;;                  2  [STACK] int 
 18674 ;; Registers used:
 18675 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18676 ;; Tracked objects:
 18677 ;;		On entry : 0/0
 18678 ;;		On exit  : 0/0
 18679 ;;		Unchanged: 0/0
 18680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18685 ;;Total ram usage:        0 bytes
 18686 ;; Hardware stack levels used:    1
 18687 ;; Hardware stack levels required when called:   15
 18688 ;; This function calls:
 18689 ;;		Nothing
 18690 ;; This function is called by:
 18691 ;;		_efgtoa
 18692 ;; This function uses a reentrant model
 18693 ;;
 18694                           
 18695                           	psect	text65
 18696  0186DE                     __ptext65:
 18697                           	opt callstack 0
 18698  0186DE                     ___awdiv:
 18699                           	opt callstack 0
 18700                           
 18701                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18702  0186DE  52E6               	movf	postinc1,f,c
 18703  0186E0  52E6               	movf	postinc1,f,c
 18704  0186E2  52E6               	movf	postinc1,f,c
 18705  0186E4  52E6               	movf	postinc1,f,c
 18706                           
 18707                           ;stkvar	_sign @ sp[(-4)+2]
 18708                           
 18709                           ;incstack = 0
 18710 ;; hardware stack exceeded
 18711  0186E6  0EFE               	movlw	-2
 18712  0186E8  6AE3               	clrf	plusw1,c
 18713                           
 18714                           ;stkvar	_divisor @ sp[(-4)+-4]
 18715  0186EA  0EF9               	movlw	-7
 18716  0186EC  AEE3               	btfss	plusw1,7,c
 18717  0186EE  D009               	goto	l8248
 18718                           
 18719                           ;stkvar	_divisor @ sp[(-4)+-4]
 18720                           ;stkvar	_divisor @ sp[(-4)+-4]
 18721  0186F0  0EF8               	movlw	-8
 18722  0186F2  6CE3               	negf	plusw1,c
 18723  0186F4  0EF9               	movlw	-7
 18724  0186F6  1EE3               	comf	plusw1,f,c
 18725  0186F8  B0D8               	btfsc	status,0,c
 18726  0186FA  2AE3               	incf	plusw1,f,c
 18727                           
 18728                           ;stkvar	_sign @ sp[(-4)+2]
 18729  0186FC  0EFE               	movlw	-2
 18730  0186FE  6AE3               	clrf	plusw1,c
 18731  018700  2AE3               	incf	plusw1,f,c
 18732  018702                     l8248:
 18733                           
 18734                           ;stkvar	_dividend @ sp[(-4)+-2]
 18735  018702  0EFB               	movlw	-5
 18736  018704  AEE3               	btfss	plusw1,7,c
 18737  018706  D008               	goto	l8254
 18738                           
 18739                           ;stkvar	_dividend @ sp[(-4)+-2]
 18740                           ;stkvar	_dividend @ sp[(-4)+-2]
 18741  018708  0EFA               	movlw	-6
 18742  01870A  6CE3               	negf	plusw1,c
 18743  01870C  0EFB               	movlw	-5
 18744  01870E  1EE3               	comf	plusw1,f,c
 18745  018710  B0D8               	btfsc	status,0,c
 18746  018712  2AE3               	incf	plusw1,f,c
 18747                           
 18748                           ;stkvar	_sign @ sp[(-4)+2]
 18749  018714  0EFE               	movlw	-2
 18750  018716  70E3               	btg	plusw1,0,c
 18751  018718                     l8254:
 18752                           
 18753                           ;stkvar	_quotient @ sp[(-4)+0]
 18754  018718  0EFC               	movlw	-4
 18755  01871A  6AE3               	clrf	plusw1,c
 18756  01871C  0EFD               	movlw	-3
 18757  01871E  6AE3               	clrf	plusw1,c
 18758                           
 18759                           ;stkvar	_divisor @ sp[(-4)+-4]
 18760  018720  0EF8               	movlw	-8
 18761  018722  006F FF8C  F001    	movff	plusw1,btemp
 18762  018728  0EF9               	movlw	-7
 18763  01872A  50E3               	movf	plusw1,w,c
 18764  01872C  1001               	iorwf	btemp^0,w,c
 18765  01872E  B4D8               	btfsc	status,2,c
 18766  018730  D066               	goto	u6740
 18767                           
 18768                           ;stkvar	_counter @ sp[(-4)+3]
 18769  018732  0EFF               	movlw	-1
 18770  018734  6AE3               	clrf	plusw1,c
 18771  018736  D012               	goto	L20
 18772  018738                     l8260:
 18773                           
 18774                           ;stkvar	_divisor @ sp[(-4)+-4]
 18775  018738  0EF8               	movlw	-8
 18776  01873A  50E3               	movf	plusw1,w,c
 18777  01873C  90D8               	bcf	status,0,c
 18778  01873E  34E8               	rlcf	wreg,w,c
 18779  018740  6E01               	movwf	btemp^0,c
 18780  018742  0EF8               	movlw	-8
 18781  018744  0060  F007  FFE3   	movff	btemp,plusw1
 18782  01874A  0EF9               	movlw	-7
 18783  01874C  50E3               	movf	plusw1,w,c
 18784  01874E  34E8               	rlcf	wreg,w,c
 18785  018750  6E01               	movwf	btemp^0,c
 18786  018752  0EF9               	movlw	-7
 18787  018754  0060  F007  FFE3   	movff	btemp,plusw1
 18788                           
 18789                           ;stkvar	_counter @ sp[(-4)+3]
 18790  01875A  0EFF               	movlw	-1
 18791  01875C                     L20:
 18792  01875C  2AE3               	incf	plusw1,f,c
 18793                           
 18794                           ;stkvar	_divisor @ sp[(-4)+-4]
 18795  01875E  0EF9               	movlw	-7
 18796  018760  AEE3               	btfss	plusw1,7,c
 18797  018762  D7EA               	goto	l8260
 18798  018764                     u6720:
 18799                           
 18800                           ;stkvar	_quotient @ sp[(-4)+0]
 18801  018764  0EFC               	movlw	-4
 18802  018766  50E3               	movf	plusw1,w,c
 18803  018768  90D8               	bcf	status,0,c
 18804  01876A  34E8               	rlcf	wreg,w,c
 18805  01876C  6E01               	movwf	btemp^0,c
 18806  01876E  0EFC               	movlw	-4
 18807  018770  0060  F007  FFE3   	movff	btemp,plusw1
 18808  018776  0EFD               	movlw	-3
 18809  018778  50E3               	movf	plusw1,w,c
 18810  01877A  34E8               	rlcf	wreg,w,c
 18811  01877C  6E01               	movwf	btemp^0,c
 18812  01877E  0EFD               	movlw	-3
 18813  018780  0060  F007  FFE3   	movff	btemp,plusw1
 18814                           
 18815                           ;stkvar	_divisor @ sp[(-4)+-4]
 18816  018786  0EF8               	movlw	-8
 18817  018788  006F FF8C  F00B    	movff	plusw1,btemp+10
 18818  01878E  0EF9               	movlw	-7
 18819  018790  006F FF8C  F00C    	movff	plusw1,btemp+11
 18820                           
 18821                           ;stkvar	_dividend @ sp[(-4)+-2]
 18822  018796  0EFA               	movlw	-6
 18823  018798  006F FF8C  F009    	movff	plusw1,btemp+8
 18824  01879E  0EFB               	movlw	-5
 18825  0187A0  006F FF8C  F00A    	movff	plusw1,btemp+9
 18826  0187A6  500B               	movf	(btemp+10)^0,w,c
 18827  0187A8  5C09               	subwf	(btemp+8)^0,w,c
 18828  0187AA  500C               	movf	(btemp+11)^0,w,c
 18829  0187AC  580A               	subwfb	(btemp+9)^0,w,c
 18830  0187AE  A0D8               	btfss	status,0,c
 18831  0187B0  D016               	goto	l8274
 18832                           
 18833                           ;stkvar	_divisor @ sp[(-4)+-4]
 18834                           ;stkvar	_dividend @ sp[(-4)+-2]
 18835  0187B2  0EFA               	movlw	-6
 18836  0187B4  50E3               	movf	plusw1,w,c
 18837  0187B6  6E01               	movwf	btemp^0,c
 18838  0187B8  0EF8               	movlw	-8
 18839  0187BA  50E3               	movf	plusw1,w,c
 18840  0187BC  5E01               	subwf	btemp^0,f,c
 18841  0187BE  0EFA               	movlw	-6
 18842  0187C0  0060  F007  FFE3   	movff	btemp,plusw1
 18843  0187C6  0EFB               	movlw	-5
 18844  0187C8  50E3               	movf	plusw1,w,c
 18845  0187CA  6E01               	movwf	btemp^0,c
 18846  0187CC  0EF9               	movlw	-7
 18847  0187CE  50E3               	movf	plusw1,w,c
 18848  0187D0  5A01               	subwfb	btemp^0,f,c
 18849  0187D2  0EFB               	movlw	-5
 18850  0187D4  0060  F007  FFE3   	movff	btemp,plusw1
 18851                           
 18852                           ;stkvar	_quotient @ sp[(-4)+0]
 18853  0187DA  0EFC               	movlw	-4
 18854  0187DC  80E3               	bsf	plusw1,0,c
 18855  0187DE                     l8274:
 18856                           
 18857                           ;stkvar	_divisor @ sp[(-4)+-4]
 18858  0187DE  90D8               	bcf	status,0,c
 18859  0187E0  0EF9               	movlw	-7
 18860  0187E2  32E3               	rrcf	plusw1,f,c
 18861  0187E4  0EF8               	movlw	-8
 18862  0187E6  32E3               	rrcf	plusw1,f,c
 18863                           
 18864                           ;stkvar	_counter @ sp[(-4)+3]
 18865  0187E8  0EFF               	movlw	-1
 18866  0187EA  50E3               	movf	plusw1,w,c
 18867  0187EC  6E01               	movwf	btemp^0,c
 18868  0187EE  0E01               	movlw	1
 18869  0187F0  5E01               	subwf	btemp^0,f,c
 18870  0187F2  0EFF               	movlw	-1
 18871  0187F4  0060  F007  FFE3   	movff	btemp,plusw1
 18872  0187FA  A4D8               	btfss	status,2,c
 18873  0187FC  D7B3               	goto	u6720
 18874  0187FE                     u6740:
 18875                           
 18876                           ;stkvar	_sign @ sp[(-4)+2]
 18877  0187FE  0EFE               	movlw	-2
 18878  018800  50E3               	movf	plusw1,w,c
 18879  018802  B4D8               	btfsc	status,2,c
 18880  018804  D006               	goto	l8282
 18881                           
 18882                           ;stkvar	_quotient @ sp[(-4)+0]
 18883                           ;stkvar	_quotient @ sp[(-4)+0]
 18884  018806  0EFC               	movlw	-4
 18885  018808  6CE3               	negf	plusw1,c
 18886  01880A  0EFD               	movlw	-3
 18887  01880C  1EE3               	comf	plusw1,f,c
 18888  01880E  B0D8               	btfsc	status,0,c
 18889  018810  2AE3               	incf	plusw1,f,c
 18890  018812                     l8282:
 18891                           
 18892                           ;stkvar	_quotient @ sp[(-4)+0]
 18893  018812  0EFC               	movlw	-4
 18894  018814  006F FF8C  F001    	movff	plusw1,btemp
 18895  01881A  0EFD               	movlw	-3
 18896  01881C  006F FF8C  F002    	movff	plusw1,btemp+1
 18897                           
 18898                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18899  018822  0EF8               	movlw	248
 18900  018824  26E1               	addwf	fsr1l,f,c
 18901  018826  0EFF               	movlw	255
 18902  018828  22E2               	addwfc	fsr1h,f,c
 18903  01882A  0012               	return		;funcret
 18904  01882C                     __end_of___awdiv:
 18905                           	opt callstack 0
 18906                           
 18907 ;; *************** function _dtoa *****************
 18908 ;; Defined at:
 18909 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18910 ;; Parameters:    Size  Location     Type
 18911 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18912 ;;		 -> f(6), NULL(0), 
 18913 ;;  d               8  [STACK] long long 
 18914 ;; Auto vars:     Size  Location     Type
 18915 ;;  n               8  [STACK] long long 
 18916 ;;  i               2  [STACK] int 
 18917 ;;  s               2  [STACK] int 
 18918 ;;  w               2  [STACK] int 
 18919 ;;  p               2  [STACK] int 
 18920 ;; Return value:  Size  Location     Type
 18921 ;;                  2  [STACK] int 
 18922 ;; Registers used:
 18923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 18924 ;; Tracked objects:
 18925 ;;		On entry : 0/0
 18926 ;;		On exit  : 0/0
 18927 ;;		Unchanged: 0/0
 18928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18933 ;;Total ram usage:        0 bytes
 18934 ;; Hardware stack levels used:    1
 18935 ;; Hardware stack levels required when called:   20
 18936 ;; This function calls:
 18937 ;;		___aodiv
 18938 ;;		___aomod
 18939 ;;		_abs
 18940 ;;		_pad
 18941 ;; This function is called by:
 18942 ;;		_vfpfcnvrt
 18943 ;; This function uses a reentrant model
 18944 ;;
 18945                           
 18946                           	psect	text66
 18947  014F8A                     __ptext66:
 18948                           	opt callstack 0
 18949  014F8A                     _dtoa:
 18950                           	opt callstack 0
 18951                           
 18952                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 18953  014F8A  0E12               	movlw	18
 18954  014F8C  26E1               	addwf	fsr1l,f,c
 18955  014F8E  0E00               	movlw	0
 18956  014F90  22E2               	addwfc	fsr1h,f,c
 18957                           
 18958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 18959                           ;stkvar	_d @ sp[(-18)+-10]
 18960                           
 18961                           ;incstack = 0
 18962 ;; hardware stack exceeded
 18963  014F92  0EE4               	movlw	228
 18964  014F94  24E1               	addwf	fsr1l,w,c
 18965  014F96  6ED9               	movwf	fsr2l,c
 18966  014F98  0EFF               	movlw	255
 18967  014F9A  20E2               	addwfc	fsr1h,w,c
 18968  014F9C  6EDA               	movwf	fsr2h,c
 18969                           
 18970                           ;stkvar	_n @ sp[(-18)+2]
 18971  014F9E  0E08               	movlw	8
 18972  014FA0  6E01               	movwf	btemp^0,c
 18973  014FA2  0EF0               	movlw	-16
 18974  014FA4                     us1041999:
 18975  014FA4  006F FF7B FFE3     	movff	postinc2,plusw1
 18976  014FAA  28E8               	incf	wreg,w,c
 18977  014FAC  2E01               	decfsz	btemp^0,f,c
 18978  014FAE  D7FA               	bra	us1041999
 18979                           
 18980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 18981                           ;stkvar	_n @ sp[(-18)+2]
 18982  014FB0  0EF7               	movlw	-9
 18983  014FB2  AEE3               	btfss	plusw1,7,c
 18984  014FB4  D002               	goto	u10420
 18985  014FB6  0E01               	movlw	1
 18986  014FB8  D001               	goto	u10430
 18987  014FBA                     u10420:
 18988  014FBA  0E00               	movlw	0
 18989  014FBC                     u10430:
 18990  014FBC  6E0B               	movwf	(btemp+10)^0,c
 18991  014FBE  6A0C               	clrf	(btemp+11)^0,c
 18992                           
 18993                           ;stkvar	_s @ sp[(-18)+12]
 18994  014FC0  0EFA               	movlw	-6
 18995  014FC2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18996  014FC8  0EFB               	movlw	-5
 18997  014FCA  0060  F033  FFE3   	movff	btemp+11,plusw1
 18998                           
 18999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19000                           ;stkvar	_s @ sp[(-18)+12]
 19001  014FD0  0EFA               	movlw	-6
 19002  014FD2  006F FF8C  F001    	movff	plusw1,btemp
 19003  014FD8  0EFB               	movlw	-5
 19004  014FDA  50E3               	movf	plusw1,w,c
 19005  014FDC  1001               	iorwf	btemp^0,w,c
 19006  014FDE  B4D8               	btfsc	status,2,c
 19007  014FE0  D025               	goto	u10450
 19008                           
 19009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19010                           ;stkvar	_n @ sp[(-18)+2]
 19011                           ;stkvar	_n @ sp[(-18)+2]
 19012  014FE2  0EF0               	movlw	-16
 19013  014FE4  6CE3               	negf	plusw1,c
 19014  014FE6  0EF1               	movlw	-15
 19015  014FE8  1EE3               	comf	plusw1,f,c
 19016  014FEA  0EF2               	movlw	-14
 19017  014FEC  1EE3               	comf	plusw1,f,c
 19018  014FEE  0EF3               	movlw	-13
 19019  014FF0  1EE3               	comf	plusw1,f,c
 19020  014FF2  0EF4               	movlw	-12
 19021  014FF4  1EE3               	comf	plusw1,f,c
 19022  014FF6  0EF5               	movlw	-11
 19023  014FF8  1EE3               	comf	plusw1,f,c
 19024  014FFA  0EF6               	movlw	-10
 19025  014FFC  1EE3               	comf	plusw1,f,c
 19026  014FFE  0EF7               	movlw	-9
 19027  015000  1EE3               	comf	plusw1,f,c
 19028  015002  E314               	bnc	u10450
 19029  015004  0EF1               	movlw	-15
 19030  015006  2AE3               	incf	plusw1,f,c
 19031  015008  E311               	bnc	u10450
 19032  01500A  0EF2               	movlw	-14
 19033  01500C  2AE3               	incf	plusw1,f,c
 19034  01500E  E30E               	bnc	u10450
 19035  015010  0EF3               	movlw	-13
 19036  015012  2AE3               	incf	plusw1,f,c
 19037  015014  E30B               	bnc	u10450
 19038  015016  0EF4               	movlw	-12
 19039  015018  2AE3               	incf	plusw1,f,c
 19040  01501A  E308               	bnc	u10450
 19041  01501C  0EF5               	movlw	-11
 19042  01501E  2AE3               	incf	plusw1,f,c
 19043  015020  E305               	bnc	u10450
 19044  015022  0EF6               	movlw	-10
 19045  015024  2AE3               	incf	plusw1,f,c
 19046  015026  E302               	bnc	u10450
 19047  015028  0EF7               	movlw	-9
 19048  01502A  2AE3               	incf	plusw1,f,c
 19049  01502C                     u10450:
 19050                           
 19051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19052  01502C  AE24               	btfss	(_prec+1)^0,7,c
 19053                           
 19054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19055  01502E  9225               	bcf	_flags^0,1,c
 19056                           
 19057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19058  015030  BE24               	btfsc	(_prec+1)^0,7,c
 19059  015032  D005               	goto	u10470
 19060  015034  5024               	movf	(_prec+1)^0,w,c
 19061  015036  E110               	bnz	l11500
 19062  015038  0423               	decf	_prec^0,w,c
 19063  01503A  B0D8               	btfsc	status,0,c
 19064  01503C  D00D               	goto	l11500
 19065  01503E                     u10470:
 19066  01503E  0E01               	movlw	1
 19067  015040  6E0B               	movwf	(btemp+10)^0,c
 19068  015042  0E00               	movlw	0
 19069  015044  6E0C               	movwf	(btemp+11)^0,c
 19070                           
 19071                           ;stkvar	_p @ sp[(-18)+16]
 19072  015046  0EFE               	movlw	-2
 19073  015048  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19074  01504E  0EFF               	movlw	-1
 19075  015050  0060  F033  FFE3   	movff	btemp+11,plusw1
 19076  015056  D008               	goto	l2124
 19077  015058                     l11500:
 19078                           
 19079                           ;stkvar	_p @ sp[(-18)+16]
 19080  015058  0EFE               	movlw	-2
 19081  01505A  0060  F08F  FFE3   	movff	_prec,plusw1
 19082  015060  0EFF               	movlw	-1
 19083  015062  0060  F093  FFE3   	movff	_prec+1,plusw1
 19084  015068                     l2124:
 19085                           
 19086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19087                           ;stkvar	_w @ sp[(-18)+14]
 19088  015068  0EFC               	movlw	-4
 19089  01506A  0060  F087  FFE3   	movff	_width,plusw1
 19090  015070  0EFD               	movlw	-3
 19091  015072  0060  F08B  FFE3   	movff	_width+1,plusw1
 19092                           
 19093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19094                           ;stkvar	_s @ sp[(-18)+12]
 19095  015078  0EFA               	movlw	-6
 19096  01507A  006F FF8C  F001    	movff	plusw1,btemp
 19097  015080  0EFB               	movlw	-5
 19098  015082  50E3               	movf	plusw1,w,c
 19099  015084  1001               	iorwf	btemp^0,w,c
 19100  015086  A4D8               	btfss	status,2,c
 19101  015088  D002               	goto	u10490
 19102  01508A  A425               	btfss	_flags^0,2,c
 19103  01508C  D00A               	goto	l11508
 19104  01508E                     u10490:
 19105                           
 19106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19107                           ;stkvar	_w @ sp[(-18)+14]
 19108  01508E  50E1               	movf	fsr1l,w,c
 19109  015090  0FFC               	addlw	-4
 19110  015092  6ED9               	movwf	fsr2l,c
 19111  015094  50E2               	movf	fsr1h,w,c
 19112  015096  6EDA               	movwf	fsr2h,c
 19113  015098  0EFF               	movlw	255
 19114  01509A  22DA               	addwfc	fsr2h,f,c
 19115  01509C  06DE               	decf	postinc2,f,c
 19116  01509E  0E00               	movlw	0
 19117  0150A0  5ADD               	subwfb	postdec2,f,c
 19118  0150A2                     l11508:
 19119                           
 19120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19121  0150A2  0E4F               	movlw	79
 19122  0150A4  6E0B               	movwf	(btemp+10)^0,c
 19123  0150A6  0E00               	movlw	0
 19124  0150A8  6E0C               	movwf	(btemp+11)^0,c
 19125                           
 19126                           ;stkvar	_i @ sp[(-18)+10]
 19127  0150AA  0EF8               	movlw	-8
 19128  0150AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19129  0150B2  0EF9               	movlw	-7
 19130  0150B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 19131                           
 19132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19133  0150BA  0103               	movlb	3	; () banked
 19134  0150BC  6BE3               	clrf	(_dbuf+79)& (0+255),b
 19135                           
 19136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19137  0150BE  D109               	goto	l11522
 19138  0150C0                     l11512:
 19139                           
 19140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19141                           ;stkvar	_i @ sp[(-18)+10]
 19142  0150C0  50E1               	movf	fsr1l,w,c
 19143  0150C2  0FF8               	addlw	-8
 19144  0150C4  6ED9               	movwf	fsr2l,c
 19145  0150C6  50E2               	movf	fsr1h,w,c
 19146  0150C8  6EDA               	movwf	fsr2h,c
 19147  0150CA  0EFF               	movlw	255
 19148  0150CC  22DA               	addwfc	fsr2h,f,c
 19149  0150CE  06DE               	decf	postinc2,f,c
 19150  0150D0  0E00               	movlw	0
 19151  0150D2  5ADD               	subwfb	postdec2,f,c
 19152                           
 19153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19154  0150D4  0E0A               	movlw	10
 19155  0150D6  6EE6               	movwf	postinc1,c
 19156  0150D8  0E00               	movlw	0
 19157  0150DA  6EE6               	movwf	postinc1,c
 19158  0150DC  0E00               	movlw	0
 19159  0150DE  6EE6               	movwf	postinc1,c
 19160  0150E0  0E00               	movlw	0
 19161  0150E2  6EE6               	movwf	postinc1,c
 19162  0150E4  0E00               	movlw	0
 19163  0150E6  6EE6               	movwf	postinc1,c
 19164  0150E8  0E00               	movlw	0
 19165  0150EA  6EE6               	movwf	postinc1,c
 19166  0150EC  0E00               	movlw	0
 19167  0150EE  6EE6               	movwf	postinc1,c
 19168  0150F0  0E00               	movlw	0
 19169  0150F2  6EE6               	movwf	postinc1,c
 19170                           
 19171                           ;stkvar	_n @ sp[(-26)+2]
 19172  0150F4  50E1               	movf	fsr1l,w,c
 19173  0150F6  0FE8               	addlw	-24
 19174  0150F8  6ED9               	movwf	fsr2l,c
 19175  0150FA  50E2               	movf	fsr1h,w,c
 19176  0150FC  6EDA               	movwf	fsr2h,c
 19177  0150FE  0EFF               	movlw	255
 19178  015100  22DA               	addwfc	fsr2h,f,c
 19179  015102  006F FF7B FFE6     	movff	postinc2,postinc1
 19180  015108  006F FF7B FFE6     	movff	postinc2,postinc1
 19181  01510E  006F FF7B FFE6     	movff	postinc2,postinc1
 19182  015114  006F FF7B FFE6     	movff	postinc2,postinc1
 19183  01511A  006F FF7B FFE6     	movff	postinc2,postinc1
 19184  015120  006F FF7B FFE6     	movff	postinc2,postinc1
 19185  015126  006F FF7B FFE6     	movff	postinc2,postinc1
 19186  01512C  006F FF7B FFE6     	movff	postinc2,postinc1
 19187  015132  EC3E  F0B8         	call	___aomod	;wreg free
 19188  015136  52E5               	movf	postdec1,f,c
 19189  015138  006F FF9C  F018    	movff	indf1,btemp+23
 19190  01513E  52E5               	movf	postdec1,f,c
 19191  015140  006F FF9C  F017    	movff	indf1,btemp+22
 19192  015146  52E5               	movf	postdec1,f,c
 19193  015148  006F FF9C  F016    	movff	indf1,btemp+21
 19194  01514E  52E5               	movf	postdec1,f,c
 19195  015150  006F FF9C  F015    	movff	indf1,btemp+20
 19196  015156  52E5               	movf	postdec1,f,c
 19197  015158  006F FF9C  F014    	movff	indf1,btemp+19
 19198  01515E  52E5               	movf	postdec1,f,c
 19199  015160  006F FF9C  F013    	movff	indf1,btemp+18
 19200  015166  52E5               	movf	postdec1,f,c
 19201  015168  006F FF9C  F012    	movff	indf1,btemp+17
 19202  01516E  52E5               	movf	postdec1,f,c
 19203  015170  006F FF9C  F011    	movff	indf1,btemp+16
 19204  015176  0EF8               	movlw	248
 19205  015178  26E1               	addwf	fsr1l,f,c
 19206  01517A  0EFF               	movlw	255
 19207  01517C  22E2               	addwfc	fsr1h,f,c
 19208  01517E  0060  F044  F00B   	movff	btemp+16,btemp+10
 19209  015184  0060  F048  F00C   	movff	btemp+17,btemp+11
 19210  01518A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19211  015190  0060  F033  FFE6   	movff	btemp+11,postinc1
 19212  015196  ECB4  F0D3         	call	_abs	;wreg free
 19213  01519A  0E30               	movlw	48
 19214  01519C  2601               	addwf	btemp^0,f,c
 19215                           
 19216                           ;stkvar	_i @ sp[(-18)+10]
 19217  01519E  0EF8               	movlw	-8
 19218  0151A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 19219  0151A6  0EF9               	movlw	-7
 19220  0151A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 19221  0151AE  0E94               	movlw	low _dbuf
 19222  0151B0  240B               	addwf	(btemp+10)^0,w,c
 19223  0151B2  6ED9               	movwf	fsr2l,c
 19224  0151B4  0E03               	movlw	high _dbuf
 19225  0151B6  200C               	addwfc	(btemp+11)^0,w,c
 19226  0151B8  6EDA               	movwf	fsr2h,c
 19227  0151BA  0060  F007  FFDF   	movff	btemp,indf2
 19228                           
 19229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19230                           ;stkvar	_p @ sp[(-18)+16]
 19231  0151C0  50E1               	movf	fsr1l,w,c
 19232  0151C2  0FFE               	addlw	-2
 19233  0151C4  6ED9               	movwf	fsr2l,c
 19234  0151C6  50E2               	movf	fsr1h,w,c
 19235  0151C8  6EDA               	movwf	fsr2h,c
 19236  0151CA  0EFF               	movlw	255
 19237  0151CC  22DA               	addwfc	fsr2h,f,c
 19238  0151CE  06DE               	decf	postinc2,f,c
 19239  0151D0  0E00               	movlw	0
 19240  0151D2  5ADD               	subwfb	postdec2,f,c
 19241                           
 19242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19243                           ;stkvar	_w @ sp[(-18)+14]
 19244  0151D4  50E1               	movf	fsr1l,w,c
 19245  0151D6  0FFC               	addlw	-4
 19246  0151D8  6ED9               	movwf	fsr2l,c
 19247  0151DA  50E2               	movf	fsr1h,w,c
 19248  0151DC  6EDA               	movwf	fsr2h,c
 19249  0151DE  0EFF               	movlw	255
 19250  0151E0  22DA               	addwfc	fsr2h,f,c
 19251  0151E2  06DE               	decf	postinc2,f,c
 19252  0151E4  0E00               	movlw	0
 19253  0151E6  5ADD               	subwfb	postdec2,f,c
 19254                           
 19255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19256  0151E8  0E0A               	movlw	10
 19257  0151EA  6EE6               	movwf	postinc1,c
 19258  0151EC  0E00               	movlw	0
 19259  0151EE  6EE6               	movwf	postinc1,c
 19260  0151F0  0E00               	movlw	0
 19261  0151F2  6EE6               	movwf	postinc1,c
 19262  0151F4  0E00               	movlw	0
 19263  0151F6  6EE6               	movwf	postinc1,c
 19264  0151F8  0E00               	movlw	0
 19265  0151FA  6EE6               	movwf	postinc1,c
 19266  0151FC  0E00               	movlw	0
 19267  0151FE  6EE6               	movwf	postinc1,c
 19268  015200  0E00               	movlw	0
 19269  015202  6EE6               	movwf	postinc1,c
 19270  015204  0E00               	movlw	0
 19271  015206  6EE6               	movwf	postinc1,c
 19272                           
 19273                           ;stkvar	_n @ sp[(-26)+2]
 19274  015208  50E1               	movf	fsr1l,w,c
 19275  01520A  0FE8               	addlw	-24
 19276  01520C  6ED9               	movwf	fsr2l,c
 19277  01520E  50E2               	movf	fsr1h,w,c
 19278  015210  6EDA               	movwf	fsr2h,c
 19279  015212  0EFF               	movlw	255
 19280  015214  22DA               	addwfc	fsr2h,f,c
 19281  015216  006F FF7B FFE6     	movff	postinc2,postinc1
 19282  01521C  006F FF7B FFE6     	movff	postinc2,postinc1
 19283  015222  006F FF7B FFE6     	movff	postinc2,postinc1
 19284  015228  006F FF7B FFE6     	movff	postinc2,postinc1
 19285  01522E  006F FF7B FFE6     	movff	postinc2,postinc1
 19286  015234  006F FF7B FFE6     	movff	postinc2,postinc1
 19287  01523A  006F FF7B FFE6     	movff	postinc2,postinc1
 19288  015240  006F FF7B FFE6     	movff	postinc2,postinc1
 19289  015246  ECC4  F0B5         	call	___aodiv	;wreg free
 19290  01524A  52E5               	movf	postdec1,f,c
 19291  01524C  006F FF9C  F018    	movff	indf1,btemp+23
 19292  015252  52E5               	movf	postdec1,f,c
 19293  015254  006F FF9C  F017    	movff	indf1,btemp+22
 19294  01525A  52E5               	movf	postdec1,f,c
 19295  01525C  006F FF9C  F016    	movff	indf1,btemp+21
 19296  015262  52E5               	movf	postdec1,f,c
 19297  015264  006F FF9C  F015    	movff	indf1,btemp+20
 19298  01526A  52E5               	movf	postdec1,f,c
 19299  01526C  006F FF9C  F014    	movff	indf1,btemp+19
 19300  015272  52E5               	movf	postdec1,f,c
 19301  015274  006F FF9C  F013    	movff	indf1,btemp+18
 19302  01527A  52E5               	movf	postdec1,f,c
 19303  01527C  006F FF9C  F012    	movff	indf1,btemp+17
 19304  015282  52E5               	movf	postdec1,f,c
 19305  015284  006F FF9C  F011    	movff	indf1,btemp+16
 19306  01528A  0EF8               	movlw	248
 19307  01528C  26E1               	addwf	fsr1l,f,c
 19308  01528E  0EFF               	movlw	255
 19309  015290  22E2               	addwfc	fsr1h,f,c
 19310                           
 19311                           ;stkvar	_n @ sp[(-18)+2]
 19312  015292  0EF0               	movlw	-16
 19313  015294  0060  F047  FFE3   	movff	btemp+16,plusw1
 19314  01529A  0EF1               	movlw	-15
 19315  01529C  0060  F04B  FFE3   	movff	btemp+17,plusw1
 19316  0152A2  0EF2               	movlw	-14
 19317  0152A4  0060  F04F  FFE3   	movff	btemp+18,plusw1
 19318  0152AA  0EF3               	movlw	-13
 19319  0152AC  0060  F053  FFE3   	movff	btemp+19,plusw1
 19320  0152B2  0EF4               	movlw	-12
 19321  0152B4  0060  F057  FFE3   	movff	btemp+20,plusw1
 19322  0152BA  0EF5               	movlw	-11
 19323  0152BC  0060  F05B  FFE3   	movff	btemp+21,plusw1
 19324  0152C2  0EF6               	movlw	-10
 19325  0152C4  0060  F05F  FFE3   	movff	btemp+22,plusw1
 19326  0152CA  0EF7               	movlw	-9
 19327  0152CC  0060  F063  FFE3   	movff	btemp+23,plusw1
 19328  0152D2                     l11522:
 19329                           
 19330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19331                           ;stkvar	_i @ sp[(-18)+10]
 19332  0152D2  0EF9               	movlw	-7
 19333  0152D4  BEE3               	btfsc	plusw1,7,c
 19334  0152D6  D036               	goto	u10540
 19335  0152D8  0EF9               	movlw	-7
 19336  0152DA  50E3               	movf	plusw1,w,c
 19337  0152DC  E104               	bnz	u10500
 19338  0152DE  0EF8               	movlw	-8
 19339  0152E0  04E3               	decf	plusw1,w,c
 19340  0152E2  A0D8               	btfss	status,0,c
 19341  0152E4  D02F               	goto	u10540
 19342  0152E6                     u10500:
 19343                           
 19344                           ;stkvar	_n @ sp[(-18)+2]
 19345  0152E6  0EF0               	movlw	-16
 19346  0152E8  50E3               	movf	plusw1,w,c
 19347  0152EA  E115               	bnz	u10511
 19348  0152EC  0EF1               	movlw	-15
 19349  0152EE  50E3               	movf	plusw1,w,c
 19350  0152F0  E112               	bnz	u10511
 19351  0152F2  0EF2               	movlw	-14
 19352  0152F4  50E3               	movf	plusw1,w,c
 19353  0152F6  E10F               	bnz	u10511
 19354  0152F8  0EF3               	movlw	-13
 19355  0152FA  50E3               	movf	plusw1,w,c
 19356  0152FC  E10C               	bnz	u10511
 19357  0152FE  0EF4               	movlw	-12
 19358  015300  50E3               	movf	plusw1,w,c
 19359  015302  E109               	bnz	u10511
 19360  015304  0EF5               	movlw	-11
 19361  015306  50E3               	movf	plusw1,w,c
 19362  015308  E106               	bnz	u10511
 19363  01530A  0EF6               	movlw	-10
 19364  01530C  50E3               	movf	plusw1,w,c
 19365  01530E  E103               	bnz	u10511
 19366  015310  0EF7               	movlw	-9
 19367  015312  50E3               	movf	plusw1,w,c
 19368  015314  A4D8               	btfss	status,2,c
 19369  015316                     u10511:
 19370  015316  D6D4               	goto	l11512
 19371                           
 19372                           ;stkvar	_p @ sp[(-18)+16]
 19373  015318  0EFF               	movlw	-1
 19374  01531A  BEE3               	btfsc	plusw1,7,c
 19375  01531C  D007               	goto	u10520
 19376  01531E  0EFF               	movlw	-1
 19377  015320  50E3               	movf	plusw1,w,c
 19378  015322  E103               	bnz	u10521
 19379  015324  0EFE               	movlw	-2
 19380  015326  04E3               	decf	plusw1,w,c
 19381  015328  B0D8               	btfsc	status,0,c
 19382  01532A                     u10521:
 19383  01532A  D6CA               	goto	l11512
 19384  01532C                     u10520:
 19385                           
 19386                           ;stkvar	_w @ sp[(-18)+14]
 19387  01532C  0EFD               	movlw	-3
 19388  01532E  BEE3               	btfsc	plusw1,7,c
 19389  015330  D009               	goto	u10540
 19390  015332  0EFD               	movlw	-3
 19391  015334  50E3               	movf	plusw1,w,c
 19392  015336  E104               	bnz	u10530
 19393  015338  0EFC               	movlw	-4
 19394  01533A  04E3               	decf	plusw1,w,c
 19395  01533C  A0D8               	btfss	status,0,c
 19396  01533E  D002               	goto	u10540
 19397  015340                     u10530:
 19398  015340  B225               	btfsc	_flags^0,1,c
 19399  015342  D6BE               	goto	l11512
 19400  015344                     u10540:
 19401                           
 19402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19403                           ;stkvar	_s @ sp[(-18)+12]
 19404  015344  0EFA               	movlw	-6
 19405  015346  006F FF8C  F001    	movff	plusw1,btemp
 19406  01534C  0EFB               	movlw	-5
 19407  01534E  50E3               	movf	plusw1,w,c
 19408  015350  1001               	iorwf	btemp^0,w,c
 19409  015352  A4D8               	btfss	status,2,c
 19410  015354  D002               	goto	u10560
 19411  015356  A425               	btfss	_flags^0,2,c
 19412  015358  D033               	goto	l11546
 19413  01535A                     u10560:
 19414                           
 19415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19416                           ;stkvar	_i @ sp[(-18)+10]
 19417  01535A  50E1               	movf	fsr1l,w,c
 19418  01535C  0FF8               	addlw	-8
 19419  01535E  6ED9               	movwf	fsr2l,c
 19420  015360  50E2               	movf	fsr1h,w,c
 19421  015362  6EDA               	movwf	fsr2h,c
 19422  015364  0EFF               	movlw	255
 19423  015366  22DA               	addwfc	fsr2h,f,c
 19424  015368  06DE               	decf	postinc2,f,c
 19425  01536A  0E00               	movlw	0
 19426  01536C  5ADD               	subwfb	postdec2,f,c
 19427                           
 19428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19429                           ;stkvar	_s @ sp[(-18)+12]
 19430  01536E  0EFA               	movlw	-6
 19431  015370  006F FF8C  F001    	movff	plusw1,btemp
 19432  015376  0EFB               	movlw	-5
 19433  015378  50E3               	movf	plusw1,w,c
 19434  01537A  1001               	iorwf	btemp^0,w,c
 19435  01537C  A4D8               	btfss	status,2,c
 19436  01537E  D002               	goto	l11542
 19437  015380  0E2B               	movlw	43
 19438  015382  D001               	goto	L21
 19439  015384                     l11542:
 19440  015384  0E2D               	movlw	45
 19441  015386                     L21:
 19442  015386  6E0B               	movwf	(btemp+10)^0,c
 19443  015388  0E00               	movlw	0
 19444  01538A  6E0C               	movwf	(btemp+11)^0,c
 19445                           
 19446                           ;stkvar	_dtoa$5290 @ sp[(-18)+0]
 19447  01538C  0EEE               	movlw	-18
 19448  01538E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19449  015394  0EEF               	movlw	-17
 19450  015396  0060  F033  FFE3   	movff	btemp+11,plusw1
 19451                           
 19452                           ;stkvar	_dtoa$5290 @ sp[(-18)+0]
 19453                           ;stkvar	_i @ sp[(-18)+10]
 19454  01539C  0EF8               	movlw	-8
 19455  01539E  006F FF8C  F00B    	movff	plusw1,btemp+10
 19456  0153A4  0EF9               	movlw	-7
 19457  0153A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 19458  0153AC  0E94               	movlw	low _dbuf
 19459  0153AE  240B               	addwf	(btemp+10)^0,w,c
 19460  0153B0  6ED9               	movwf	fsr2l,c
 19461  0153B2  0E03               	movlw	high _dbuf
 19462  0153B4  200C               	addwfc	(btemp+11)^0,w,c
 19463  0153B6  6EDA               	movwf	fsr2h,c
 19464  0153B8  0EEE               	movlw	-18
 19465  0153BA  006F FF8F FFDF     	movff	plusw1,indf2
 19466  0153C0                     l11546:
 19467                           
 19468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19469                           ;stkvar	_w @ sp[(-18)+14]
 19470  0153C0  0EFC               	movlw	-4
 19471  0153C2  006F FF8F FFE6     	movff	plusw1,postinc1
 19472  0153C8  006F FF8F FFE6     	movff	plusw1,postinc1
 19473                           
 19474                           ;stkvar	_i @ sp[(-20)+10]
 19475  0153CE  0E94               	movlw	low _dbuf
 19476  0153D0  6E0B               	movwf	(btemp+10)^0,c
 19477  0153D2  0E03               	movlw	high _dbuf
 19478  0153D4  6E0C               	movwf	(btemp+11)^0,c
 19479  0153D6  0EF6               	movlw	-10
 19480  0153D8  50E3               	movf	plusw1,w,c
 19481  0153DA  260B               	addwf	(btemp+10)^0,f,c
 19482  0153DC  0EF7               	movlw	-9
 19483  0153DE  50E3               	movf	plusw1,w,c
 19484  0153E0  220C               	addwfc	(btemp+11)^0,f,c
 19485  0153E2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19486  0153E8  0060  F033  FFE6   	movff	btemp+11,postinc1
 19487                           
 19488                           ;stkvar	_fp @ sp[(-22)+-2]
 19489  0153EE  0EE8               	movlw	-24
 19490  0153F0  006F FF8F FFE6     	movff	plusw1,postinc1
 19491  0153F6  006F FF8F FFE6     	movff	plusw1,postinc1
 19492  0153FC  EC09  F0C7         	call	_pad	;wreg free
 19493                           
 19494                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19495  015400  0EE4               	movlw	228
 19496  015402  26E1               	addwf	fsr1l,f,c
 19497  015404  0EFF               	movlw	255
 19498  015406  22E2               	addwfc	fsr1h,f,c
 19499  015408  0012               	return		;funcret
 19500  01540A                     __end_of_dtoa:
 19501                           	opt callstack 0
 19502                           
 19503 ;; *************** function _abs *****************
 19504 ;; Defined at:
 19505 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19506 ;; Parameters:    Size  Location     Type
 19507 ;;  a               2  [STACK] int 
 19508 ;; Auto vars:     Size  Location     Type
 19509 ;;		None
 19510 ;; Return value:  Size  Location     Type
 19511 ;;                  2  [STACK] int 
 19512 ;; Registers used:
 19513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19514 ;; Tracked objects:
 19515 ;;		On entry : 0/3
 19516 ;;		On exit  : 0/0
 19517 ;;		Unchanged: 0/0
 19518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19523 ;;Total ram usage:        0 bytes
 19524 ;; Hardware stack levels used:    1
 19525 ;; Hardware stack levels required when called:   15
 19526 ;; This function calls:
 19527 ;;		Nothing
 19528 ;; This function is called by:
 19529 ;;		_dtoa
 19530 ;; This function uses a reentrant model
 19531 ;;
 19532                           
 19533                           	psect	text67
 19534  01A768                     __ptext67:
 19535                           	opt callstack 0
 19536  01A768                     _abs:
 19537                           	opt callstack 0
 19538                           
 19539                           ;stkvar	_a @ sp[(0)+-2]
 19540                           
 19541                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19542                           ;incstack = 0
 19543 ;; hardware stack exceeded
 19544  01A768  0EFF               	movlw	-1
 19545  01A76A  BEE3               	btfsc	plusw1,7,c
 19546  01A76C  D007               	goto	u5700
 19547  01A76E  0EFF               	movlw	-1
 19548  01A770  50E3               	movf	plusw1,w,c
 19549  01A772  E112               	bnz	l7736
 19550  01A774  0EFE               	movlw	-2
 19551  01A776  04E3               	decf	plusw1,w,c
 19552  01A778  B0D8               	btfsc	status,0,c
 19553  01A77A  D00E               	goto	l7736
 19554  01A77C                     u5700:
 19555                           
 19556                           ;stkvar	_a @ sp[(0)+-2]
 19557  01A77C  0EFE               	movlw	-2
 19558  01A77E  006F FF8C  F001    	movff	plusw1,btemp
 19559  01A784  1E01               	comf	btemp^0,f,c
 19560  01A786  0EFF               	movlw	-1
 19561  01A788  006F FF8C  F002    	movff	plusw1,btemp+1
 19562  01A78E  1E02               	comf	(btemp+1)^0,f,c
 19563  01A790  2A01               	incf	btemp^0,f,c
 19564  01A792  B4D8               	btfsc	status,2,c
 19565  01A794  2A02               	incf	(btemp+1)^0,f,c
 19566  01A796  D008               	goto	l3050
 19567  01A798                     l7736:
 19568                           
 19569                           ;stkvar	_a @ sp[(0)+-2]
 19570  01A798  0EFE               	movlw	-2
 19571  01A79A  006F FF8C  F001    	movff	plusw1,btemp
 19572  01A7A0  0EFF               	movlw	-1
 19573  01A7A2  006F FF8C  F002    	movff	plusw1,btemp+1
 19574  01A7A8                     l3050:
 19575                           
 19576                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19577  01A7A8  52E5               	movf	postdec1,f,c
 19578  01A7AA  52E5               	movf	postdec1,f,c
 19579  01A7AC  0012               	return		;funcret
 19580  01A7AE                     __end_of_abs:
 19581                           	opt callstack 0
 19582                           
 19583 ;; *************** function ___aomod *****************
 19584 ;; Defined at:
 19585 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19586 ;; Parameters:    Size  Location     Type
 19587 ;;  dividend        8  [STACK] long long 
 19588 ;;  divisor         8  [STACK] long long 
 19589 ;; Auto vars:     Size  Location     Type
 19590 ;;  sign            1  [STACK] unsigned char 
 19591 ;;  counter         1  [STACK] unsigned char 
 19592 ;; Return value:  Size  Location     Type
 19593 ;;                  8  [STACK] long long 
 19594 ;; Registers used:
 19595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19596 ;; Tracked objects:
 19597 ;;		On entry : 0/3
 19598 ;;		On exit  : 0/0
 19599 ;;		Unchanged: 0/0
 19600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19605 ;;Total ram usage:        0 bytes
 19606 ;; Hardware stack levels used:    1
 19607 ;; Hardware stack levels required when called:   15
 19608 ;; This function calls:
 19609 ;;		Nothing
 19610 ;; This function is called by:
 19611 ;;		_dtoa
 19612 ;; This function uses a reentrant model
 19613 ;;
 19614                           
 19615                           	psect	text68
 19616  01707C                     __ptext68:
 19617                           	opt callstack 0
 19618  01707C                     ___aomod:
 19619                           	opt callstack 0
 19620                           
 19621                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19622  01707C  52E6               	movf	postinc1,f,c
 19623  01707E  52E6               	movf	postinc1,f,c
 19624                           
 19625                           ;stkvar	_sign @ sp[(-2)+0]
 19626                           
 19627                           ;incstack = 0
 19628 ;; hardware stack exceeded
 19629  017080  0EFE               	movlw	-2
 19630  017082  6AE3               	clrf	plusw1,c
 19631                           
 19632                           ;stkvar	_dividend @ sp[(-2)+-8]
 19633  017084  0EFD               	movlw	-3
 19634  017086  AEE3               	btfss	plusw1,7,c
 19635  017088  D028               	goto	l7894
 19636                           
 19637                           ;stkvar	_dividend @ sp[(-2)+-8]
 19638                           ;stkvar	_dividend @ sp[(-2)+-8]
 19639  01708A  0EF6               	movlw	-10
 19640  01708C  6CE3               	negf	plusw1,c
 19641  01708E  0EF7               	movlw	-9
 19642  017090  1EE3               	comf	plusw1,f,c
 19643  017092  0EF8               	movlw	-8
 19644  017094  1EE3               	comf	plusw1,f,c
 19645  017096  0EF9               	movlw	-7
 19646  017098  1EE3               	comf	plusw1,f,c
 19647  01709A  0EFA               	movlw	-6
 19648  01709C  1EE3               	comf	plusw1,f,c
 19649  01709E  0EFB               	movlw	-5
 19650  0170A0  1EE3               	comf	plusw1,f,c
 19651  0170A2  0EFC               	movlw	-4
 19652  0170A4  1EE3               	comf	plusw1,f,c
 19653  0170A6  0EFD               	movlw	-3
 19654  0170A8  1EE3               	comf	plusw1,f,c
 19655  0170AA  E314               	bnc	u6130
 19656  0170AC  0EF7               	movlw	-9
 19657  0170AE  2AE3               	incf	plusw1,f,c
 19658  0170B0  E311               	bnc	u6130
 19659  0170B2  0EF8               	movlw	-8
 19660  0170B4  2AE3               	incf	plusw1,f,c
 19661  0170B6  E30E               	bnc	u6130
 19662  0170B8  0EF9               	movlw	-7
 19663  0170BA  2AE3               	incf	plusw1,f,c
 19664  0170BC  E30B               	bnc	u6130
 19665  0170BE  0EFA               	movlw	-6
 19666  0170C0  2AE3               	incf	plusw1,f,c
 19667  0170C2  E308               	bnc	u6130
 19668  0170C4  0EFB               	movlw	-5
 19669  0170C6  2AE3               	incf	plusw1,f,c
 19670  0170C8  E305               	bnc	u6130
 19671  0170CA  0EFC               	movlw	-4
 19672  0170CC  2AE3               	incf	plusw1,f,c
 19673  0170CE  E302               	bnc	u6130
 19674  0170D0  0EFD               	movlw	-3
 19675  0170D2  2AE3               	incf	plusw1,f,c
 19676  0170D4                     u6130:
 19677                           
 19678                           ;stkvar	_sign @ sp[(-2)+0]
 19679  0170D4  0EFE               	movlw	-2
 19680  0170D6  6AE3               	clrf	plusw1,c
 19681  0170D8  2AE3               	incf	plusw1,f,c
 19682  0170DA                     l7894:
 19683                           
 19684                           ;stkvar	_divisor @ sp[(-2)+-16]
 19685  0170DA  0EF5               	movlw	-11
 19686  0170DC  AEE3               	btfss	plusw1,7,c
 19687  0170DE  D025               	goto	u6150
 19688                           
 19689                           ;stkvar	_divisor @ sp[(-2)+-16]
 19690                           ;stkvar	_divisor @ sp[(-2)+-16]
 19691  0170E0  0EEE               	movlw	-18
 19692  0170E2  6CE3               	negf	plusw1,c
 19693  0170E4  0EEF               	movlw	-17
 19694  0170E6  1EE3               	comf	plusw1,f,c
 19695  0170E8  0EF0               	movlw	-16
 19696  0170EA  1EE3               	comf	plusw1,f,c
 19697  0170EC  0EF1               	movlw	-15
 19698  0170EE  1EE3               	comf	plusw1,f,c
 19699  0170F0  0EF2               	movlw	-14
 19700  0170F2  1EE3               	comf	plusw1,f,c
 19701  0170F4  0EF3               	movlw	-13
 19702  0170F6  1EE3               	comf	plusw1,f,c
 19703  0170F8  0EF4               	movlw	-12
 19704  0170FA  1EE3               	comf	plusw1,f,c
 19705  0170FC  0EF5               	movlw	-11
 19706  0170FE  1EE3               	comf	plusw1,f,c
 19707  017100  E314               	bnc	u6150
 19708  017102  0EEF               	movlw	-17
 19709  017104  2AE3               	incf	plusw1,f,c
 19710  017106  E311               	bnc	u6150
 19711  017108  0EF0               	movlw	-16
 19712  01710A  2AE3               	incf	plusw1,f,c
 19713  01710C  E30E               	bnc	u6150
 19714  01710E  0EF1               	movlw	-15
 19715  017110  2AE3               	incf	plusw1,f,c
 19716  017112  E30B               	bnc	u6150
 19717  017114  0EF2               	movlw	-14
 19718  017116  2AE3               	incf	plusw1,f,c
 19719  017118  E308               	bnc	u6150
 19720  01711A  0EF3               	movlw	-13
 19721  01711C  2AE3               	incf	plusw1,f,c
 19722  01711E  E305               	bnc	u6150
 19723  017120  0EF4               	movlw	-12
 19724  017122  2AE3               	incf	plusw1,f,c
 19725  017124  E302               	bnc	u6150
 19726  017126  0EF5               	movlw	-11
 19727  017128  2AE3               	incf	plusw1,f,c
 19728  01712A                     u6150:
 19729                           
 19730                           ;stkvar	_divisor @ sp[(-2)+-16]
 19731  01712A  0EEE               	movlw	-18
 19732  01712C  50E3               	movf	plusw1,w,c
 19733  01712E  E116               	bnz	u6160
 19734  017130  0EEF               	movlw	-17
 19735  017132  50E3               	movf	plusw1,w,c
 19736  017134  E113               	bnz	u6160
 19737  017136  0EF0               	movlw	-16
 19738  017138  50E3               	movf	plusw1,w,c
 19739  01713A  E110               	bnz	u6160
 19740  01713C  0EF1               	movlw	-15
 19741  01713E  50E3               	movf	plusw1,w,c
 19742  017140  E10D               	bnz	u6160
 19743  017142  0EF2               	movlw	-14
 19744  017144  50E3               	movf	plusw1,w,c
 19745  017146  E10A               	bnz	u6160
 19746  017148  0EF3               	movlw	-13
 19747  01714A  50E3               	movf	plusw1,w,c
 19748  01714C  E107               	bnz	u6160
 19749  01714E  0EF4               	movlw	-12
 19750  017150  50E3               	movf	plusw1,w,c
 19751  017152  E104               	bnz	u6160
 19752  017154  0EF5               	movlw	-11
 19753  017156  50E3               	movf	plusw1,w,c
 19754  017158  B4D8               	btfsc	status,2,c
 19755  01715A  D075               	goto	u6190
 19756  01715C                     u6160:
 19757                           
 19758                           ;stkvar	_counter @ sp[(-2)+1]
 19759  01715C  0EFF               	movlw	-1
 19760  01715E  6AE3               	clrf	plusw1,c
 19761  017160  D012               	goto	L22
 19762  017162                     l7902:
 19763                           
 19764                           ;stkvar	_divisor @ sp[(-2)+-16]
 19765  017162  90D8               	bcf	status,0,c
 19766  017164  0EEE               	movlw	-18
 19767  017166  36E3               	rlcf	plusw1,f,c
 19768  017168  0EEF               	movlw	-17
 19769  01716A  36E3               	rlcf	plusw1,f,c
 19770  01716C  0EF0               	movlw	-16
 19771  01716E  36E3               	rlcf	plusw1,f,c
 19772  017170  0EF1               	movlw	-15
 19773  017172  36E3               	rlcf	plusw1,f,c
 19774  017174  0EF2               	movlw	-14
 19775  017176  36E3               	rlcf	plusw1,f,c
 19776  017178  0EF3               	movlw	-13
 19777  01717A  36E3               	rlcf	plusw1,f,c
 19778  01717C  0EF4               	movlw	-12
 19779  01717E  36E3               	rlcf	plusw1,f,c
 19780  017180  0EF5               	movlw	-11
 19781  017182  36E3               	rlcf	plusw1,f,c
 19782                           
 19783                           ;stkvar	_counter @ sp[(-2)+1]
 19784  017184  0EFF               	movlw	-1
 19785  017186                     L22:
 19786  017186  2AE3               	incf	plusw1,f,c
 19787                           
 19788                           ;stkvar	_divisor @ sp[(-2)+-16]
 19789  017188  0EF5               	movlw	-11
 19790  01718A  AEE3               	btfss	plusw1,7,c
 19791  01718C  D7EA               	goto	l7902
 19792  01718E                     u6170:
 19793                           
 19794                           ;stkvar	_divisor @ sp[(-2)+-16]
 19795                           ;stkvar	_dividend @ sp[(-2)+-8]
 19796  01718E  50E1               	movf	fsr1l,w,c
 19797  017190  0FF6               	addlw	-10
 19798  017192  6ED9               	movwf	fsr2l,c
 19799  017194  50E2               	movf	fsr1h,w,c
 19800  017196  6EDA               	movwf	fsr2h,c
 19801  017198  0EFF               	movlw	255
 19802  01719A  22DA               	addwfc	fsr2h,f,c
 19803  01719C  0EEE               	movlw	-18
 19804  01719E  50E3               	movf	plusw1,w,c
 19805  0171A0  5CDE               	subwf	postinc2,w,c
 19806  0171A2  0EEF               	movlw	-17
 19807  0171A4  50E3               	movf	plusw1,w,c
 19808  0171A6  58DE               	subwfb	postinc2,w,c
 19809  0171A8  0EF0               	movlw	-16
 19810  0171AA  50E3               	movf	plusw1,w,c
 19811  0171AC  58DE               	subwfb	postinc2,w,c
 19812  0171AE  0EF1               	movlw	-15
 19813  0171B0  50E3               	movf	plusw1,w,c
 19814  0171B2  58DE               	subwfb	postinc2,w,c
 19815  0171B4  0EF2               	movlw	-14
 19816  0171B6  50E3               	movf	plusw1,w,c
 19817  0171B8  58DE               	subwfb	postinc2,w,c
 19818  0171BA  0EF3               	movlw	-13
 19819  0171BC  50E3               	movf	plusw1,w,c
 19820  0171BE  58DE               	subwfb	postinc2,w,c
 19821  0171C0  0EF4               	movlw	-12
 19822  0171C2  50E3               	movf	plusw1,w,c
 19823  0171C4  58DE               	subwfb	postinc2,w,c
 19824  0171C6  0EF5               	movlw	-11
 19825  0171C8  50E3               	movf	plusw1,w,c
 19826  0171CA  58DE               	subwfb	postinc2,w,c
 19827  0171CC  A0D8               	btfss	status,0,c
 19828  0171CE  D01F               	goto	l7910
 19829                           
 19830                           ;stkvar	_divisor @ sp[(-2)+-16]
 19831                           ;stkvar	_dividend @ sp[(-2)+-8]
 19832  0171D0  50E1               	movf	fsr1l,w,c
 19833  0171D2  0FF6               	addlw	-10
 19834  0171D4  6ED9               	movwf	fsr2l,c
 19835  0171D6  50E2               	movf	fsr1h,w,c
 19836  0171D8  6EDA               	movwf	fsr2h,c
 19837  0171DA  0EFF               	movlw	255
 19838  0171DC  22DA               	addwfc	fsr2h,f,c
 19839  0171DE  0EEE               	movlw	-18
 19840  0171E0  50E3               	movf	plusw1,w,c
 19841  0171E2  5EDE               	subwf	postinc2,f,c
 19842  0171E4  0EEF               	movlw	-17
 19843  0171E6  50E3               	movf	plusw1,w,c
 19844  0171E8  5ADE               	subwfb	postinc2,f,c
 19845  0171EA  0EF0               	movlw	-16
 19846  0171EC  50E3               	movf	plusw1,w,c
 19847  0171EE  5ADE               	subwfb	postinc2,f,c
 19848  0171F0  0EF1               	movlw	-15
 19849  0171F2  50E3               	movf	plusw1,w,c
 19850  0171F4  5ADE               	subwfb	postinc2,f,c
 19851  0171F6  0EF2               	movlw	-14
 19852  0171F8  50E3               	movf	plusw1,w,c
 19853  0171FA  5ADE               	subwfb	postinc2,f,c
 19854  0171FC  0EF3               	movlw	-13
 19855  0171FE  50E3               	movf	plusw1,w,c
 19856  017200  5ADE               	subwfb	postinc2,f,c
 19857  017202  0EF4               	movlw	-12
 19858  017204  50E3               	movf	plusw1,w,c
 19859  017206  5ADE               	subwfb	postinc2,f,c
 19860  017208  0EF5               	movlw	-11
 19861  01720A  50E3               	movf	plusw1,w,c
 19862  01720C  5ADE               	subwfb	postinc2,f,c
 19863  01720E                     l7910:
 19864                           
 19865                           ;stkvar	_divisor @ sp[(-2)+-16]
 19866  01720E  90D8               	bcf	status,0,c
 19867  017210  0EF5               	movlw	-11
 19868  017212  32E3               	rrcf	plusw1,f,c
 19869  017214  0EF4               	movlw	-12
 19870  017216  32E3               	rrcf	plusw1,f,c
 19871  017218  0EF3               	movlw	-13
 19872  01721A  32E3               	rrcf	plusw1,f,c
 19873  01721C  0EF2               	movlw	-14
 19874  01721E  32E3               	rrcf	plusw1,f,c
 19875  017220  0EF1               	movlw	-15
 19876  017222  32E3               	rrcf	plusw1,f,c
 19877  017224  0EF0               	movlw	-16
 19878  017226  32E3               	rrcf	plusw1,f,c
 19879  017228  0EEF               	movlw	-17
 19880  01722A  32E3               	rrcf	plusw1,f,c
 19881  01722C  0EEE               	movlw	-18
 19882  01722E  32E3               	rrcf	plusw1,f,c
 19883                           
 19884                           ;stkvar	_counter @ sp[(-2)+1]
 19885  017230  0EFF               	movlw	-1
 19886  017232  50E3               	movf	plusw1,w,c
 19887  017234  6E01               	movwf	btemp^0,c
 19888  017236  0E01               	movlw	1
 19889  017238  5E01               	subwf	btemp^0,f,c
 19890  01723A  0EFF               	movlw	-1
 19891  01723C  0060  F007  FFE3   	movff	btemp,plusw1
 19892  017242  A4D8               	btfss	status,2,c
 19893  017244  D7A4               	goto	u6170
 19894  017246                     u6190:
 19895                           
 19896                           ;stkvar	_sign @ sp[(-2)+0]
 19897  017246  0EFE               	movlw	-2
 19898  017248  50E3               	movf	plusw1,w,c
 19899  01724A  B4D8               	btfsc	status,2,c
 19900  01724C  D025               	goto	u6210
 19901                           
 19902                           ;stkvar	_dividend @ sp[(-2)+-8]
 19903                           ;stkvar	_dividend @ sp[(-2)+-8]
 19904  01724E  0EF6               	movlw	-10
 19905  017250  6CE3               	negf	plusw1,c
 19906  017252  0EF7               	movlw	-9
 19907  017254  1EE3               	comf	plusw1,f,c
 19908  017256  0EF8               	movlw	-8
 19909  017258  1EE3               	comf	plusw1,f,c
 19910  01725A  0EF9               	movlw	-7
 19911  01725C  1EE3               	comf	plusw1,f,c
 19912  01725E  0EFA               	movlw	-6
 19913  017260  1EE3               	comf	plusw1,f,c
 19914  017262  0EFB               	movlw	-5
 19915  017264  1EE3               	comf	plusw1,f,c
 19916  017266  0EFC               	movlw	-4
 19917  017268  1EE3               	comf	plusw1,f,c
 19918  01726A  0EFD               	movlw	-3
 19919  01726C  1EE3               	comf	plusw1,f,c
 19920  01726E  E314               	bnc	u6210
 19921  017270  0EF7               	movlw	-9
 19922  017272  2AE3               	incf	plusw1,f,c
 19923  017274  E311               	bnc	u6210
 19924  017276  0EF8               	movlw	-8
 19925  017278  2AE3               	incf	plusw1,f,c
 19926  01727A  E30E               	bnc	u6210
 19927  01727C  0EF9               	movlw	-7
 19928  01727E  2AE3               	incf	plusw1,f,c
 19929  017280  E30B               	bnc	u6210
 19930  017282  0EFA               	movlw	-6
 19931  017284  2AE3               	incf	plusw1,f,c
 19932  017286  E308               	bnc	u6210
 19933  017288  0EFB               	movlw	-5
 19934  01728A  2AE3               	incf	plusw1,f,c
 19935  01728C  E305               	bnc	u6210
 19936  01728E  0EFC               	movlw	-4
 19937  017290  2AE3               	incf	plusw1,f,c
 19938  017292  E302               	bnc	u6210
 19939  017294  0EFD               	movlw	-3
 19940  017296  2AE3               	incf	plusw1,f,c
 19941  017298                     u6210:
 19942                           
 19943                           ;stkvar	_dividend @ sp[(-2)+-8]
 19944  017298  0EF6               	movlw	246
 19945  01729A  24E1               	addwf	fsr1l,w,c
 19946  01729C  6ED9               	movwf	fsr2l,c
 19947  01729E  0EFF               	movlw	255
 19948  0172A0  20E2               	addwfc	fsr1h,w,c
 19949  0172A2  6EDA               	movwf	fsr2h,c
 19950                           
 19951                           ;stkvar	?___aomod @ sp[(-2)+-8]
 19952  0172A4  0E08               	movlw	8
 19953  0172A6  6E01               	movwf	btemp^0,c
 19954  0172A8  0EF6               	movlw	-10
 19955  0172AA                     us622999:
 19956  0172AA  006F FF7B FFE3     	movff	postinc2,plusw1
 19957  0172B0  28E8               	incf	wreg,w,c
 19958  0172B2  2E01               	decfsz	btemp^0,f,c
 19959  0172B4  D7FA               	bra	us622999
 19960                           
 19961                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 19962  0172B6  52E5               	movf	postdec1,f,c
 19963  0172B8  52E5               	movf	postdec1,f,c
 19964  0172BA  0012               	return		;funcret
 19965  0172BC                     __end_of___aomod:
 19966                           	opt callstack 0
 19967                           
 19968 ;; *************** function ___aodiv *****************
 19969 ;; Defined at:
 19970 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 19971 ;; Parameters:    Size  Location     Type
 19972 ;;  dividend        8  [STACK] long long 
 19973 ;;  divisor         8  [STACK] long long 
 19974 ;; Auto vars:     Size  Location     Type
 19975 ;;  quotient        8  [STACK] long long 
 19976 ;;  sign            1  [STACK] unsigned char 
 19977 ;;  counter         1  [STACK] unsigned char 
 19978 ;; Return value:  Size  Location     Type
 19979 ;;                  8  [STACK] long long 
 19980 ;; Registers used:
 19981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19982 ;; Tracked objects:
 19983 ;;		On entry : 0/3
 19984 ;;		On exit  : 0/0
 19985 ;;		Unchanged: 0/0
 19986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19991 ;;Total ram usage:        0 bytes
 19992 ;; Hardware stack levels used:    1
 19993 ;; Hardware stack levels required when called:   15
 19994 ;; This function calls:
 19995 ;;		Nothing
 19996 ;; This function is called by:
 19997 ;;		_dtoa
 19998 ;; This function uses a reentrant model
 19999 ;;
 20000                           
 20001                           	psect	text69
 20002  016B88                     __ptext69:
 20003                           	opt callstack 0
 20004  016B88                     ___aodiv:
 20005                           	opt callstack 0
 20006                           
 20007                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20008  016B88  0E0A               	movlw	10
 20009  016B8A  26E1               	addwf	fsr1l,f,c
 20010  016B8C  0E00               	movlw	0
 20011  016B8E  22E2               	addwfc	fsr1h,f,c
 20012                           
 20013                           ;stkvar	_sign @ sp[(-10)+8]
 20014                           
 20015                           ;incstack = 0
 20016 ;; hardware stack exceeded
 20017  016B90  0EFE               	movlw	-2
 20018  016B92  6AE3               	clrf	plusw1,c
 20019                           
 20020                           ;stkvar	_divisor @ sp[(-10)+-16]
 20021  016B94  0EED               	movlw	-19
 20022  016B96  AEE3               	btfss	plusw1,7,c
 20023  016B98  D028               	goto	l7850
 20024                           
 20025                           ;stkvar	_divisor @ sp[(-10)+-16]
 20026                           ;stkvar	_divisor @ sp[(-10)+-16]
 20027  016B9A  0EE6               	movlw	-26
 20028  016B9C  6CE3               	negf	plusw1,c
 20029  016B9E  0EE7               	movlw	-25
 20030  016BA0  1EE3               	comf	plusw1,f,c
 20031  016BA2  0EE8               	movlw	-24
 20032  016BA4  1EE3               	comf	plusw1,f,c
 20033  016BA6  0EE9               	movlw	-23
 20034  016BA8  1EE3               	comf	plusw1,f,c
 20035  016BAA  0EEA               	movlw	-22
 20036  016BAC  1EE3               	comf	plusw1,f,c
 20037  016BAE  0EEB               	movlw	-21
 20038  016BB0  1EE3               	comf	plusw1,f,c
 20039  016BB2  0EEC               	movlw	-20
 20040  016BB4  1EE3               	comf	plusw1,f,c
 20041  016BB6  0EED               	movlw	-19
 20042  016BB8  1EE3               	comf	plusw1,f,c
 20043  016BBA  E314               	bnc	u6010
 20044  016BBC  0EE7               	movlw	-25
 20045  016BBE  2AE3               	incf	plusw1,f,c
 20046  016BC0  E311               	bnc	u6010
 20047  016BC2  0EE8               	movlw	-24
 20048  016BC4  2AE3               	incf	plusw1,f,c
 20049  016BC6  E30E               	bnc	u6010
 20050  016BC8  0EE9               	movlw	-23
 20051  016BCA  2AE3               	incf	plusw1,f,c
 20052  016BCC  E30B               	bnc	u6010
 20053  016BCE  0EEA               	movlw	-22
 20054  016BD0  2AE3               	incf	plusw1,f,c
 20055  016BD2  E308               	bnc	u6010
 20056  016BD4  0EEB               	movlw	-21
 20057  016BD6  2AE3               	incf	plusw1,f,c
 20058  016BD8  E305               	bnc	u6010
 20059  016BDA  0EEC               	movlw	-20
 20060  016BDC  2AE3               	incf	plusw1,f,c
 20061  016BDE  E302               	bnc	u6010
 20062  016BE0  0EED               	movlw	-19
 20063  016BE2  2AE3               	incf	plusw1,f,c
 20064  016BE4                     u6010:
 20065                           
 20066                           ;stkvar	_sign @ sp[(-10)+8]
 20067  016BE4  0EFE               	movlw	-2
 20068  016BE6  6AE3               	clrf	plusw1,c
 20069  016BE8  2AE3               	incf	plusw1,f,c
 20070  016BEA                     l7850:
 20071                           
 20072                           ;stkvar	_dividend @ sp[(-10)+-8]
 20073  016BEA  0EF5               	movlw	-11
 20074  016BEC  AEE3               	btfss	plusw1,7,c
 20075  016BEE  D027               	goto	l7856
 20076                           
 20077                           ;stkvar	_dividend @ sp[(-10)+-8]
 20078                           ;stkvar	_dividend @ sp[(-10)+-8]
 20079  016BF0  0EEE               	movlw	-18
 20080  016BF2  6CE3               	negf	plusw1,c
 20081  016BF4  0EEF               	movlw	-17
 20082  016BF6  1EE3               	comf	plusw1,f,c
 20083  016BF8  0EF0               	movlw	-16
 20084  016BFA  1EE3               	comf	plusw1,f,c
 20085  016BFC  0EF1               	movlw	-15
 20086  016BFE  1EE3               	comf	plusw1,f,c
 20087  016C00  0EF2               	movlw	-14
 20088  016C02  1EE3               	comf	plusw1,f,c
 20089  016C04  0EF3               	movlw	-13
 20090  016C06  1EE3               	comf	plusw1,f,c
 20091  016C08  0EF4               	movlw	-12
 20092  016C0A  1EE3               	comf	plusw1,f,c
 20093  016C0C  0EF5               	movlw	-11
 20094  016C0E  1EE3               	comf	plusw1,f,c
 20095  016C10  E314               	bnc	u6030
 20096  016C12  0EEF               	movlw	-17
 20097  016C14  2AE3               	incf	plusw1,f,c
 20098  016C16  E311               	bnc	u6030
 20099  016C18  0EF0               	movlw	-16
 20100  016C1A  2AE3               	incf	plusw1,f,c
 20101  016C1C  E30E               	bnc	u6030
 20102  016C1E  0EF1               	movlw	-15
 20103  016C20  2AE3               	incf	plusw1,f,c
 20104  016C22  E30B               	bnc	u6030
 20105  016C24  0EF2               	movlw	-14
 20106  016C26  2AE3               	incf	plusw1,f,c
 20107  016C28  E308               	bnc	u6030
 20108  016C2A  0EF3               	movlw	-13
 20109  016C2C  2AE3               	incf	plusw1,f,c
 20110  016C2E  E305               	bnc	u6030
 20111  016C30  0EF4               	movlw	-12
 20112  016C32  2AE3               	incf	plusw1,f,c
 20113  016C34  E302               	bnc	u6030
 20114  016C36  0EF5               	movlw	-11
 20115  016C38  2AE3               	incf	plusw1,f,c
 20116  016C3A                     u6030:
 20117                           
 20118                           ;stkvar	_sign @ sp[(-10)+8]
 20119  016C3A  0EFE               	movlw	-2
 20120  016C3C  70E3               	btg	plusw1,0,c
 20121  016C3E                     l7856:
 20122                           
 20123                           ;stkvar	_quotient @ sp[(-10)+0]
 20124  016C3E  0E07               	movlw	7
 20125  016C40  6E01               	movwf	btemp^0,c
 20126  016C42  0EF6               	movlw	-10
 20127  016C44                     u6041:
 20128  016C44  6AE3               	clrf	plusw1,c
 20129  016C46  2AE8               	incf	wreg,f,c
 20130  016C48  0601               	decf	btemp^0,f,c
 20131  016C4A  E2FC               	bc	u6041
 20132                           
 20133                           ;stkvar	_divisor @ sp[(-10)+-16]
 20134  016C4C  0EE6               	movlw	-26
 20135  016C4E  50E3               	movf	plusw1,w,c
 20136  016C50  E116               	bnz	u6050
 20137  016C52  0EE7               	movlw	-25
 20138  016C54  50E3               	movf	plusw1,w,c
 20139  016C56  E113               	bnz	u6050
 20140  016C58  0EE8               	movlw	-24
 20141  016C5A  50E3               	movf	plusw1,w,c
 20142  016C5C  E110               	bnz	u6050
 20143  016C5E  0EE9               	movlw	-23
 20144  016C60  50E3               	movf	plusw1,w,c
 20145  016C62  E10D               	bnz	u6050
 20146  016C64  0EEA               	movlw	-22
 20147  016C66  50E3               	movf	plusw1,w,c
 20148  016C68  E10A               	bnz	u6050
 20149  016C6A  0EEB               	movlw	-21
 20150  016C6C  50E3               	movf	plusw1,w,c
 20151  016C6E  E107               	bnz	u6050
 20152  016C70  0EEC               	movlw	-20
 20153  016C72  50E3               	movf	plusw1,w,c
 20154  016C74  E104               	bnz	u6050
 20155  016C76  0EED               	movlw	-19
 20156  016C78  50E3               	movf	plusw1,w,c
 20157  016C7A  B4D8               	btfsc	status,2,c
 20158  016C7C  D088               	goto	u6080
 20159  016C7E                     u6050:
 20160                           
 20161                           ;stkvar	_counter @ sp[(-10)+9]
 20162  016C7E  0EFF               	movlw	-1
 20163  016C80  6AE3               	clrf	plusw1,c
 20164  016C82  D012               	goto	L23
 20165  016C84                     l7862:
 20166                           
 20167                           ;stkvar	_divisor @ sp[(-10)+-16]
 20168  016C84  90D8               	bcf	status,0,c
 20169  016C86  0EE6               	movlw	-26
 20170  016C88  36E3               	rlcf	plusw1,f,c
 20171  016C8A  0EE7               	movlw	-25
 20172  016C8C  36E3               	rlcf	plusw1,f,c
 20173  016C8E  0EE8               	movlw	-24
 20174  016C90  36E3               	rlcf	plusw1,f,c
 20175  016C92  0EE9               	movlw	-23
 20176  016C94  36E3               	rlcf	plusw1,f,c
 20177  016C96  0EEA               	movlw	-22
 20178  016C98  36E3               	rlcf	plusw1,f,c
 20179  016C9A  0EEB               	movlw	-21
 20180  016C9C  36E3               	rlcf	plusw1,f,c
 20181  016C9E  0EEC               	movlw	-20
 20182  016CA0  36E3               	rlcf	plusw1,f,c
 20183  016CA2  0EED               	movlw	-19
 20184  016CA4  36E3               	rlcf	plusw1,f,c
 20185                           
 20186                           ;stkvar	_counter @ sp[(-10)+9]
 20187  016CA6  0EFF               	movlw	-1
 20188  016CA8                     L23:
 20189  016CA8  2AE3               	incf	plusw1,f,c
 20190                           
 20191                           ;stkvar	_divisor @ sp[(-10)+-16]
 20192  016CAA  0EED               	movlw	-19
 20193  016CAC  AEE3               	btfss	plusw1,7,c
 20194  016CAE  D7EA               	goto	l7862
 20195  016CB0                     u6060:
 20196                           
 20197                           ;stkvar	_quotient @ sp[(-10)+0]
 20198  016CB0  90D8               	bcf	status,0,c
 20199  016CB2  0EF6               	movlw	-10
 20200  016CB4  36E3               	rlcf	plusw1,f,c
 20201  016CB6  0EF7               	movlw	-9
 20202  016CB8  36E3               	rlcf	plusw1,f,c
 20203  016CBA  0EF8               	movlw	-8
 20204  016CBC  36E3               	rlcf	plusw1,f,c
 20205  016CBE  0EF9               	movlw	-7
 20206  016CC0  36E3               	rlcf	plusw1,f,c
 20207  016CC2  0EFA               	movlw	-6
 20208  016CC4  36E3               	rlcf	plusw1,f,c
 20209  016CC6  0EFB               	movlw	-5
 20210  016CC8  36E3               	rlcf	plusw1,f,c
 20211  016CCA  0EFC               	movlw	-4
 20212  016CCC  36E3               	rlcf	plusw1,f,c
 20213  016CCE  0EFD               	movlw	-3
 20214  016CD0  36E3               	rlcf	plusw1,f,c
 20215                           
 20216                           ;stkvar	_divisor @ sp[(-10)+-16]
 20217                           ;stkvar	_dividend @ sp[(-10)+-8]
 20218  016CD2  50E1               	movf	fsr1l,w,c
 20219  016CD4  0FEE               	addlw	-18
 20220  016CD6  6ED9               	movwf	fsr2l,c
 20221  016CD8  50E2               	movf	fsr1h,w,c
 20222  016CDA  6EDA               	movwf	fsr2h,c
 20223  016CDC  0EFF               	movlw	255
 20224  016CDE  22DA               	addwfc	fsr2h,f,c
 20225  016CE0  0EE6               	movlw	-26
 20226  016CE2  50E3               	movf	plusw1,w,c
 20227  016CE4  5CDE               	subwf	postinc2,w,c
 20228  016CE6  0EE7               	movlw	-25
 20229  016CE8  50E3               	movf	plusw1,w,c
 20230  016CEA  58DE               	subwfb	postinc2,w,c
 20231  016CEC  0EE8               	movlw	-24
 20232  016CEE  50E3               	movf	plusw1,w,c
 20233  016CF0  58DE               	subwfb	postinc2,w,c
 20234  016CF2  0EE9               	movlw	-23
 20235  016CF4  50E3               	movf	plusw1,w,c
 20236  016CF6  58DE               	subwfb	postinc2,w,c
 20237  016CF8  0EEA               	movlw	-22
 20238  016CFA  50E3               	movf	plusw1,w,c
 20239  016CFC  58DE               	subwfb	postinc2,w,c
 20240  016CFE  0EEB               	movlw	-21
 20241  016D00  50E3               	movf	plusw1,w,c
 20242  016D02  58DE               	subwfb	postinc2,w,c
 20243  016D04  0EEC               	movlw	-20
 20244  016D06  50E3               	movf	plusw1,w,c
 20245  016D08  58DE               	subwfb	postinc2,w,c
 20246  016D0A  0EED               	movlw	-19
 20247  016D0C  50E3               	movf	plusw1,w,c
 20248  016D0E  58DE               	subwfb	postinc2,w,c
 20249  016D10  A0D8               	btfss	status,0,c
 20250  016D12  D021               	goto	l7874
 20251                           
 20252                           ;stkvar	_divisor @ sp[(-10)+-16]
 20253                           ;stkvar	_dividend @ sp[(-10)+-8]
 20254  016D14  50E1               	movf	fsr1l,w,c
 20255  016D16  0FEE               	addlw	-18
 20256  016D18  6ED9               	movwf	fsr2l,c
 20257  016D1A  50E2               	movf	fsr1h,w,c
 20258  016D1C  6EDA               	movwf	fsr2h,c
 20259  016D1E  0EFF               	movlw	255
 20260  016D20  22DA               	addwfc	fsr2h,f,c
 20261  016D22  0EE6               	movlw	-26
 20262  016D24  50E3               	movf	plusw1,w,c
 20263  016D26  5EDE               	subwf	postinc2,f,c
 20264  016D28  0EE7               	movlw	-25
 20265  016D2A  50E3               	movf	plusw1,w,c
 20266  016D2C  5ADE               	subwfb	postinc2,f,c
 20267  016D2E  0EE8               	movlw	-24
 20268  016D30  50E3               	movf	plusw1,w,c
 20269  016D32  5ADE               	subwfb	postinc2,f,c
 20270  016D34  0EE9               	movlw	-23
 20271  016D36  50E3               	movf	plusw1,w,c
 20272  016D38  5ADE               	subwfb	postinc2,f,c
 20273  016D3A  0EEA               	movlw	-22
 20274  016D3C  50E3               	movf	plusw1,w,c
 20275  016D3E  5ADE               	subwfb	postinc2,f,c
 20276  016D40  0EEB               	movlw	-21
 20277  016D42  50E3               	movf	plusw1,w,c
 20278  016D44  5ADE               	subwfb	postinc2,f,c
 20279  016D46  0EEC               	movlw	-20
 20280  016D48  50E3               	movf	plusw1,w,c
 20281  016D4A  5ADE               	subwfb	postinc2,f,c
 20282  016D4C  0EED               	movlw	-19
 20283  016D4E  50E3               	movf	plusw1,w,c
 20284  016D50  5ADE               	subwfb	postinc2,f,c
 20285                           
 20286                           ;stkvar	_quotient @ sp[(-10)+0]
 20287  016D52  0EF6               	movlw	-10
 20288  016D54  80E3               	bsf	plusw1,0,c
 20289  016D56                     l7874:
 20290                           
 20291                           ;stkvar	_divisor @ sp[(-10)+-16]
 20292  016D56  90D8               	bcf	status,0,c
 20293  016D58  0EED               	movlw	-19
 20294  016D5A  32E3               	rrcf	plusw1,f,c
 20295  016D5C  0EEC               	movlw	-20
 20296  016D5E  32E3               	rrcf	plusw1,f,c
 20297  016D60  0EEB               	movlw	-21
 20298  016D62  32E3               	rrcf	plusw1,f,c
 20299  016D64  0EEA               	movlw	-22
 20300  016D66  32E3               	rrcf	plusw1,f,c
 20301  016D68  0EE9               	movlw	-23
 20302  016D6A  32E3               	rrcf	plusw1,f,c
 20303  016D6C  0EE8               	movlw	-24
 20304  016D6E  32E3               	rrcf	plusw1,f,c
 20305  016D70  0EE7               	movlw	-25
 20306  016D72  32E3               	rrcf	plusw1,f,c
 20307  016D74  0EE6               	movlw	-26
 20308  016D76  32E3               	rrcf	plusw1,f,c
 20309                           
 20310                           ;stkvar	_counter @ sp[(-10)+9]
 20311  016D78  0EFF               	movlw	-1
 20312  016D7A  50E3               	movf	plusw1,w,c
 20313  016D7C  6E01               	movwf	btemp^0,c
 20314  016D7E  0E01               	movlw	1
 20315  016D80  5E01               	subwf	btemp^0,f,c
 20316  016D82  0EFF               	movlw	-1
 20317  016D84  0060  F007  FFE3   	movff	btemp,plusw1
 20318  016D8A  A4D8               	btfss	status,2,c
 20319  016D8C  D791               	goto	u6060
 20320  016D8E                     u6080:
 20321                           
 20322                           ;stkvar	_sign @ sp[(-10)+8]
 20323  016D8E  0EFE               	movlw	-2
 20324  016D90  50E3               	movf	plusw1,w,c
 20325  016D92  B4D8               	btfsc	status,2,c
 20326  016D94  D025               	goto	u6100
 20327                           
 20328                           ;stkvar	_quotient @ sp[(-10)+0]
 20329                           ;stkvar	_quotient @ sp[(-10)+0]
 20330  016D96  0EF6               	movlw	-10
 20331  016D98  6CE3               	negf	plusw1,c
 20332  016D9A  0EF7               	movlw	-9
 20333  016D9C  1EE3               	comf	plusw1,f,c
 20334  016D9E  0EF8               	movlw	-8
 20335  016DA0  1EE3               	comf	plusw1,f,c
 20336  016DA2  0EF9               	movlw	-7
 20337  016DA4  1EE3               	comf	plusw1,f,c
 20338  016DA6  0EFA               	movlw	-6
 20339  016DA8  1EE3               	comf	plusw1,f,c
 20340  016DAA  0EFB               	movlw	-5
 20341  016DAC  1EE3               	comf	plusw1,f,c
 20342  016DAE  0EFC               	movlw	-4
 20343  016DB0  1EE3               	comf	plusw1,f,c
 20344  016DB2  0EFD               	movlw	-3
 20345  016DB4  1EE3               	comf	plusw1,f,c
 20346  016DB6  E314               	bnc	u6100
 20347  016DB8  0EF7               	movlw	-9
 20348  016DBA  2AE3               	incf	plusw1,f,c
 20349  016DBC  E311               	bnc	u6100
 20350  016DBE  0EF8               	movlw	-8
 20351  016DC0  2AE3               	incf	plusw1,f,c
 20352  016DC2  E30E               	bnc	u6100
 20353  016DC4  0EF9               	movlw	-7
 20354  016DC6  2AE3               	incf	plusw1,f,c
 20355  016DC8  E30B               	bnc	u6100
 20356  016DCA  0EFA               	movlw	-6
 20357  016DCC  2AE3               	incf	plusw1,f,c
 20358  016DCE  E308               	bnc	u6100
 20359  016DD0  0EFB               	movlw	-5
 20360  016DD2  2AE3               	incf	plusw1,f,c
 20361  016DD4  E305               	bnc	u6100
 20362  016DD6  0EFC               	movlw	-4
 20363  016DD8  2AE3               	incf	plusw1,f,c
 20364  016DDA  E302               	bnc	u6100
 20365  016DDC  0EFD               	movlw	-3
 20366  016DDE  2AE3               	incf	plusw1,f,c
 20367  016DE0                     u6100:
 20368                           
 20369                           ;stkvar	_quotient @ sp[(-10)+0]
 20370  016DE0  0EF6               	movlw	246
 20371  016DE2  24E1               	addwf	fsr1l,w,c
 20372  016DE4  6ED9               	movwf	fsr2l,c
 20373  016DE6  0EFF               	movlw	255
 20374  016DE8  20E2               	addwfc	fsr1h,w,c
 20375  016DEA  6EDA               	movwf	fsr2h,c
 20376                           
 20377                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20378  016DEC  0E08               	movlw	8
 20379  016DEE  6E01               	movwf	btemp^0,c
 20380  016DF0  0EEE               	movlw	-18
 20381  016DF2                     us611999:
 20382  016DF2  006F FF7B FFE3     	movff	postinc2,plusw1
 20383  016DF8  28E8               	incf	wreg,w,c
 20384  016DFA  2E01               	decfsz	btemp^0,f,c
 20385  016DFC  D7FA               	bra	us611999
 20386                           
 20387                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20388  016DFE  0EF6               	movlw	246
 20389  016E00  26E1               	addwf	fsr1l,f,c
 20390  016E02  0EFF               	movlw	255
 20391  016E04  22E2               	addwfc	fsr1h,f,c
 20392  016E06  0012               	return		;funcret
 20393  016E08                     __end_of___aodiv:
 20394                           	opt callstack 0
 20395                           
 20396 ;; *************** function _ctoa *****************
 20397 ;; Defined at:
 20398 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20399 ;; Parameters:    Size  Location     Type
 20400 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20401 ;;		 -> f(6), NULL(0), 
 20402 ;;  c               1  [STACK] unsigned char 
 20403 ;; Auto vars:     Size  Location     Type
 20404 ;;  w               2  [STACK] int 
 20405 ;;  l               2    0        int 
 20406 ;; Return value:  Size  Location     Type
 20407 ;;                  2  [STACK] int 
 20408 ;; Registers used:
 20409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20410 ;; Tracked objects:
 20411 ;;		On entry : 0/0
 20412 ;;		On exit  : 0/0
 20413 ;;		Unchanged: 0/0
 20414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20419 ;;Total ram usage:        0 bytes
 20420 ;; Hardware stack levels used:    1
 20421 ;; Hardware stack levels required when called:   20
 20422 ;; This function calls:
 20423 ;;		_pad
 20424 ;; This function is called by:
 20425 ;;		_vfpfcnvrt
 20426 ;; This function uses a reentrant model
 20427 ;;
 20428                           
 20429                           	psect	text70
 20430  019F4A                     __ptext70:
 20431                           	opt callstack 0
 20432  019F4A                     _ctoa:
 20433                           	opt callstack 0
 20434                           
 20435                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20436  019F4A  52E6               	movf	postinc1,f,c
 20437  019F4C  52E6               	movf	postinc1,f,c
 20438                           
 20439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20440                           
 20441                           ;incstack = 0
 20442 ;; hardware stack exceeded
 20443  019F4E  5021               	movf	_width^0,w,c
 20444  019F50  1022               	iorwf	(_width+1)^0,w,c
 20445  019F52  A4D8               	btfss	status,2,c
 20446  019F54  D009               	goto	l11474
 20447                           
 20448                           ;stkvar	_w @ sp[(-2)+0]
 20449  019F56  0EFE               	movlw	-2
 20450  019F58  0060  F087  FFE3   	movff	_width,plusw1
 20451  019F5E  0EFF               	movlw	-1
 20452  019F60  0060  F08B  FFE3   	movff	_width+1,plusw1
 20453  019F66  D016               	goto	l11476
 20454  019F68                     l11474:
 20455  019F68  0EFF               	movlw	255
 20456  019F6A  6E0B               	movwf	(btemp+10)^0,c
 20457  019F6C  0EFF               	movlw	255
 20458  019F6E  6E0C               	movwf	(btemp+11)^0,c
 20459  019F70  0060  F084  F009   	movff	_width,btemp+8
 20460  019F76  0060  F088  F00A   	movff	_width+1,btemp+9
 20461  019F7C  500B               	movf	(btemp+10)^0,w,c
 20462  019F7E  2609               	addwf	(btemp+8)^0,f,c
 20463  019F80  500C               	movf	(btemp+11)^0,w,c
 20464  019F82  220A               	addwfc	(btemp+9)^0,f,c
 20465                           
 20466                           ;stkvar	_w @ sp[(-2)+0]
 20467  019F84  0EFE               	movlw	-2
 20468  019F86  0060  F027  FFE3   	movff	btemp+8,plusw1
 20469  019F8C  0EFF               	movlw	-1
 20470  019F8E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20471  019F94                     l11476:
 20472                           
 20473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20474                           ;stkvar	_c @ sp[(-2)+-3]
 20475  019F94  0EFB               	movlw	-5
 20476  019F96  006F FF8C  F394    	movff	plusw1,_dbuf
 20477                           
 20478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20479  019F9C  0103               	movlb	3	; () banked
 20480  019F9E  6B95               	clrf	(_dbuf+1)& (0+255),b
 20481                           
 20482                           ; BSR set to: 3
 20483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20484                           ;stkvar	_w @ sp[(-2)+0]
 20485  019FA0  0EFE               	movlw	-2
 20486  019FA2  006F FF8F FFE6     	movff	plusw1,postinc1
 20487  019FA8  006F FF8F FFE6     	movff	plusw1,postinc1
 20488  019FAE  0E94               	movlw	low _dbuf
 20489  019FB0  6EE6               	movwf	postinc1,c
 20490  019FB2  0E03               	movlw	high _dbuf
 20491  019FB4  6EE6               	movwf	postinc1,c
 20492                           
 20493                           ;stkvar	_fp @ sp[(-6)+-2]
 20494  019FB6  0EF8               	movlw	-8
 20495  019FB8  006F FF8F FFE6     	movff	plusw1,postinc1
 20496  019FBE  006F FF8F FFE6     	movff	plusw1,postinc1
 20497  019FC4  EC09  F0C7         	call	_pad	;wreg free
 20498                           
 20499                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20500  019FC8  0EFB               	movlw	251
 20501  019FCA  26E1               	addwf	fsr1l,f,c
 20502  019FCC  0EFF               	movlw	255
 20503  019FCE  22E2               	addwfc	fsr1h,f,c
 20504  019FD0  0012               	return		;funcret
 20505  019FD2                     __end_of_ctoa:
 20506                           	opt callstack 0
 20507                           
 20508 ;; *************** function _pad *****************
 20509 ;; Defined at:
 20510 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20511 ;; Parameters:    Size  Location     Type
 20512 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20513 ;;		 -> f(6), NULL(0), 
 20514 ;;  buf             2  [STACK] PTR unsigned char 
 20515 ;;		 -> dbuf(80), 
 20516 ;;  p               2  [STACK] int 
 20517 ;; Auto vars:     Size  Location     Type
 20518 ;;  w               2  [STACK] int 
 20519 ;;  i               2  [STACK] int 
 20520 ;; Return value:  Size  Location     Type
 20521 ;;                  2  [STACK] int 
 20522 ;; Registers used:
 20523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20524 ;; Tracked objects:
 20525 ;;		On entry : 0/3
 20526 ;;		On exit  : 0/0
 20527 ;;		Unchanged: 0/0
 20528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20533 ;;Total ram usage:        0 bytes
 20534 ;; Hardware stack levels used:    1
 20535 ;; Hardware stack levels required when called:   19
 20536 ;; This function calls:
 20537 ;;		_fputc
 20538 ;;		_fputs
 20539 ;;		_strlen
 20540 ;; This function is called by:
 20541 ;;		_ctoa
 20542 ;;		_dtoa
 20543 ;;		_efgtoa
 20544 ;;		_utoa
 20545 ;;		_xtoa
 20546 ;; This function uses a reentrant model
 20547 ;;
 20548                           
 20549                           	psect	text71
 20550  018E12                     __ptext71:
 20551                           	opt callstack 0
 20552  018E12                     _pad:
 20553                           	opt callstack 0
 20554                           
 20555                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20556  018E12  52E6               	movf	postinc1,f,c
 20557  018E14  52E6               	movf	postinc1,f,c
 20558  018E16  52E6               	movf	postinc1,f,c
 20559  018E18  52E6               	movf	postinc1,f,c
 20560                           
 20561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20562                           
 20563                           ;incstack = 0
 20564 ;; hardware stack exceeded
 20565  018E1A  A025               	btfss	_flags^0,0,c
 20566  018E1C  D010               	goto	l11406
 20567                           
 20568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20569                           ;stkvar	_fp @ sp[(-4)+-2]
 20570  018E1E  0EFA               	movlw	-6
 20571  018E20  006F FF8F FFE6     	movff	plusw1,postinc1
 20572  018E26  006F FF8F FFE6     	movff	plusw1,postinc1
 20573                           
 20574                           ;stkvar	_buf @ sp[(-6)+-4]
 20575  018E2C  0EF6               	movlw	-10
 20576  018E2E  006F FF8F FFE6     	movff	plusw1,postinc1
 20577  018E34  006F FF8F FFE6     	movff	plusw1,postinc1
 20578  018E3A  EC36  F0CE         	call	_fputs	;wreg free
 20579  018E3E                     l11406:
 20580                           
 20581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20582                           ;stkvar	_p @ sp[(-4)+-6]
 20583  018E3E  0EF7               	movlw	-9
 20584  018E40  BEE3               	btfsc	plusw1,7,c
 20585  018E42  D011               	goto	l11410
 20586                           
 20587                           ;stkvar	_p @ sp[(-4)+-6]
 20588                           ;stkvar	_w @ sp[(-4)+0]
 20589  018E44  0EF6               	movlw	-10
 20590  018E46  006F FF8C  F001    	movff	plusw1,btemp
 20591  018E4C  0EFC               	movlw	-4
 20592  018E4E  0060  F007  FFE3   	movff	btemp,plusw1
 20593  018E54  0EF7               	movlw	-9
 20594  018E56  006F FF8C  F001    	movff	plusw1,btemp
 20595  018E5C  0EFD               	movlw	-3
 20596  018E5E  0060  F007  FFE3   	movff	btemp,plusw1
 20597  018E64  D004               	goto	l2104
 20598  018E66                     l11410:
 20599                           
 20600                           ;stkvar	_w @ sp[(-4)+0]
 20601  018E66  0EFC               	movlw	-4
 20602  018E68  6AE3               	clrf	plusw1,c
 20603  018E6A  0EFD               	movlw	-3
 20604  018E6C  6AE3               	clrf	plusw1,c
 20605  018E6E                     l2104:
 20606                           
 20607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20608                           ;stkvar	_i @ sp[(-4)+2]
 20609  018E6E  0EFE               	movlw	-2
 20610  018E70  6AE3               	clrf	plusw1,c
 20611  018E72  0EFF               	movlw	-1
 20612  018E74  6AE3               	clrf	plusw1,c
 20613                           
 20614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20615  018E76  D01E               	goto	l11416
 20616  018E78                     l11412:
 20617                           
 20618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 20619                           ;stkvar	_fp @ sp[(-4)+-2]
 20620  018E78  0EFA               	movlw	-6
 20621  018E7A  006F FF8F FFE6     	movff	plusw1,postinc1
 20622  018E80  006F FF8F FFE6     	movff	plusw1,postinc1
 20623  018E86  0E20               	movlw	32
 20624  018E88  6EE6               	movwf	postinc1,c
 20625  018E8A  0E00               	movlw	0
 20626  018E8C  6EE6               	movwf	postinc1,c
 20627  018E8E  ECEB  F0C5         	call	_fputc	;wreg free
 20628                           
 20629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 20630                           ;stkvar	_i @ sp[(-4)+2]
 20631  018E92  0EFE               	movlw	-2
 20632  018E94  50E3               	movf	plusw1,w,c
 20633  018E96  0F01               	addlw	1
 20634  018E98  6E01               	movwf	btemp^0,c
 20635  018E9A  0EFE               	movlw	-2
 20636  018E9C  0060  F007  FFE3   	movff	btemp,plusw1
 20637  018EA2  6A01               	clrf	btemp^0,c
 20638  018EA4  0EFF               	movlw	-1
 20639  018EA6  50E3               	movf	plusw1,w,c
 20640  018EA8  2001               	addwfc	btemp^0,w,c
 20641  018EAA  6E01               	movwf	btemp^0,c
 20642  018EAC  0EFF               	movlw	-1
 20643  018EAE  0060  F007  FFE3   	movff	btemp,plusw1
 20644  018EB4                     l11416:
 20645                           
 20646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20647                           ;stkvar	_w @ sp[(-4)+0]
 20648                           ;stkvar	_i @ sp[(-4)+2]
 20649  018EB4  50E1               	movf	fsr1l,w,c
 20650  018EB6  0FFE               	addlw	-2
 20651  018EB8  6ED9               	movwf	fsr2l,c
 20652  018EBA  50E2               	movf	fsr1h,w,c
 20653  018EBC  6EDA               	movwf	fsr2h,c
 20654  018EBE  0EFF               	movlw	255
 20655  018EC0  22DA               	addwfc	fsr2h,f,c
 20656  018EC2  0EFC               	movlw	-4
 20657  018EC4  50E3               	movf	plusw1,w,c
 20658  018EC6  5CDE               	subwf	postinc2,w,c
 20659  018EC8  50DE               	movf	postinc2,w,c
 20660  018ECA  0A80               	xorlw	128
 20661  018ECC  6E01               	movwf	btemp^0,c
 20662  018ECE  0EFD               	movlw	-3
 20663  018ED0  50E3               	movf	plusw1,w,c
 20664  018ED2  0A80               	xorlw	128
 20665  018ED4  5801               	subwfb	btemp^0,w,c
 20666  018ED6  A0D8               	btfss	status,0,c
 20667  018ED8  D7CF               	goto	l11412
 20668                           
 20669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 20670  018EDA  B025               	btfsc	_flags^0,0,c
 20671  018EDC  D010               	goto	l11420
 20672                           
 20673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 20674                           ;stkvar	_fp @ sp[(-4)+-2]
 20675  018EDE  0EFA               	movlw	-6
 20676  018EE0  006F FF8F FFE6     	movff	plusw1,postinc1
 20677  018EE6  006F FF8F FFE6     	movff	plusw1,postinc1
 20678                           
 20679                           ;stkvar	_buf @ sp[(-6)+-4]
 20680  018EEC  0EF6               	movlw	-10
 20681  018EEE  006F FF8F FFE6     	movff	plusw1,postinc1
 20682  018EF4  006F FF8F FFE6     	movff	plusw1,postinc1
 20683  018EFA  EC36  F0CE         	call	_fputs	;wreg free
 20684  018EFE                     l11420:
 20685                           
 20686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 20687                           ;stkvar	_w @ sp[(-4)+0]
 20688                           ;stkvar	_buf @ sp[(-4)+-4]
 20689  018EFE  0EF8               	movlw	-8
 20690  018F00  006F FF8F FFE6     	movff	plusw1,postinc1
 20691  018F06  006F FF8F FFE6     	movff	plusw1,postinc1
 20692  018F0C  ECE5  F0CD         	call	_strlen	;wreg free
 20693  018F10  0EFC               	movlw	-4
 20694  018F12  50E3               	movf	plusw1,w,c
 20695  018F14  2601               	addwf	btemp^0,f,c
 20696  018F16  0EFD               	movlw	-3
 20697  018F18  50E3               	movf	plusw1,w,c
 20698  018F1A  2202               	addwfc	(btemp+1)^0,f,c
 20699                           
 20700                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 20701  018F1C  0EF6               	movlw	246
 20702  018F1E  26E1               	addwf	fsr1l,f,c
 20703  018F20  0EFF               	movlw	255
 20704  018F22  22E2               	addwfc	fsr1h,f,c
 20705  018F24  0012               	return		;funcret
 20706  018F26                     __end_of_pad:
 20707                           	opt callstack 0
 20708                           
 20709 ;; *************** function _strlen *****************
 20710 ;; Defined at:
 20711 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 20712 ;; Parameters:    Size  Location     Type
 20713 ;;  s               2  [STACK] PTR const unsigned char 
 20714 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20715 ;;		 -> spin(120), STR_38(9), STR_37(12), D.lcd(288), 
 20716 ;;		 -> D(290), T(144), port_data(512), STR_3(6), 
 20717 ;;		 -> V(188), 
 20718 ;; Auto vars:     Size  Location     Type
 20719 ;;  a               2  [STACK] PTR const unsigned char 
 20720 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20721 ;;		 -> spin(120), STR_38(9), STR_37(12), D.lcd(288), 
 20722 ;;		 -> D(290), T(144), port_data(512), STR_3(6), 
 20723 ;;		 -> V(188), 
 20724 ;; Return value:  Size  Location     Type
 20725 ;;                  2  [STACK] unsigned int 
 20726 ;; Registers used:
 20727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 20728 ;; Tracked objects:
 20729 ;;		On entry : 0/0
 20730 ;;		On exit  : 0/0
 20731 ;;		Unchanged: 0/0
 20732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20737 ;;Total ram usage:        0 bytes
 20738 ;; Hardware stack levels used:    1
 20739 ;; Hardware stack levels required when called:   15
 20740 ;; This function calls:
 20741 ;;		Nothing
 20742 ;; This function is called by:
 20743 ;;		_eaDogM_WriteString
 20744 ;;		_spinners
 20745 ;;		_calc_bsoc
 20746 ;;		_pad
 20747 ;;		_stoa
 20748 ;; This function uses a reentrant model
 20749 ;;
 20750                           
 20751                           	psect	text72
 20752  019BCA                     __ptext72:
 20753                           	opt callstack 0
 20754  019BCA                     _strlen:
 20755                           	opt callstack 0
 20756                           
 20757                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20758  019BCA  52E6               	movf	postinc1,f,c
 20759  019BCC  52E6               	movf	postinc1,f,c
 20760                           
 20761                           ;stkvar	_s @ sp[(-2)+-2]
 20762                           
 20763                           ;incstack = 0
 20764 ;; hardware stack exceeded
 20765  019BCE  0EFC               	movlw	-4
 20766  019BD0  006F FF8C  F00B    	movff	plusw1,btemp+10
 20767  019BD6  0EFD               	movlw	-3
 20768  019BD8  006F FF8C  F00C    	movff	plusw1,btemp+11
 20769                           
 20770                           ;stkvar	_a @ sp[(-2)+0]
 20771  019BDE  0EFF               	movlw	-1
 20772  019BE0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20773  019BE6  0EFE               	movlw	-2
 20774  019BE8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20775  019BEE  D011               	goto	l7468
 20776  019BF0                     l7466:
 20777                           
 20778                           ;stkvar	_s @ sp[(-2)+-2]
 20779  019BF0  0EFC               	movlw	-4
 20780  019BF2  50E3               	movf	plusw1,w,c
 20781  019BF4  0F01               	addlw	1
 20782  019BF6  6E01               	movwf	btemp^0,c
 20783  019BF8  0EFC               	movlw	-4
 20784  019BFA  0060  F007  FFE3   	movff	btemp,plusw1
 20785  019C00  6A01               	clrf	btemp^0,c
 20786  019C02  0EFD               	movlw	-3
 20787  019C04  50E3               	movf	plusw1,w,c
 20788  019C06  2001               	addwfc	btemp^0,w,c
 20789  019C08  6E01               	movwf	btemp^0,c
 20790  019C0A  0EFD               	movlw	-3
 20791  019C0C  0060  F007  FFE3   	movff	btemp,plusw1
 20792  019C12                     l7468:
 20793                           
 20794                           ;stkvar	_s @ sp[(-2)+-2]
 20795  019C12  0EFC               	movlw	-4
 20796  019C14  006F FF8F FFF6     	movff	plusw1,tblptrl
 20797  019C1A  0EFD               	movlw	-3
 20798  019C1C  006F FF8F FFF7     	movff	plusw1,tblptrh
 20799  019C22  0E00               	movlw	low (__mediumconst shr (0+16))
 20800  019C24  6EF8               	movwf	tblptru,c
 20801  019C26  0E1F               	movlw	(high __ramtop+-1)
 20802  019C28  64F7               	cpfsgt	tblptrh,c
 20803  019C2A  D003               	bra	u5177
 20804  019C2C  0008               	tblrd		*
 20805  019C2E  50F5               	movf	tablat,w,c
 20806  019C30  D007               	bra	u5170
 20807  019C32                     u5177:
 20808  019C32  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20809  019C38  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20810  019C3E  50EF               	movf	indf0,w,c
 20811  019C40                     u5170:
 20812  019C40  0900               	iorlw	0
 20813  019C42  A4D8               	btfss	status,2,c
 20814  019C44  D7D5               	goto	l7466
 20815                           
 20816                           ;stkvar	_a @ sp[(-2)+0]
 20817                           ;stkvar	_s @ sp[(-2)+-2]
 20818  019C46  0EFC               	movlw	-4
 20819  019C48  006F FF8C  F001    	movff	plusw1,btemp
 20820  019C4E  0EFD               	movlw	-3
 20821  019C50  006F FF8C  F002    	movff	plusw1,btemp+1
 20822  019C56  0EFE               	movlw	-2
 20823  019C58  50E3               	movf	plusw1,w,c
 20824  019C5A  5E01               	subwf	btemp^0,f,c
 20825  019C5C  0EFF               	movlw	-1
 20826  019C5E  50E3               	movf	plusw1,w,c
 20827  019C60  5A02               	subwfb	(btemp+1)^0,f,c
 20828                           
 20829                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 20830  019C62  52E5               	movf	postdec1,f,c
 20831  019C64  52E5               	movf	postdec1,f,c
 20832  019C66  52E5               	movf	postdec1,f,c
 20833  019C68  52E5               	movf	postdec1,f,c
 20834  019C6A  0012               	return		;funcret
 20835  019C6C                     __end_of_strlen:
 20836                           	opt callstack 0
 20837                           
 20838 ;; *************** function _fputs *****************
 20839 ;; Defined at:
 20840 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 20841 ;; Parameters:    Size  Location     Type
 20842 ;;  s               2  [STACK] PTR const unsigned char 
 20843 ;;		 -> dbuf(80), 
 20844 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20845 ;;		 -> f(6), NULL(0), 
 20846 ;; Auto vars:     Size  Location     Type
 20847 ;;  i               2  [STACK] int 
 20848 ;;  c               1  [STACK] unsigned char 
 20849 ;; Return value:  Size  Location     Type
 20850 ;;                  2  [STACK] int 
 20851 ;; Registers used:
 20852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20853 ;; Tracked objects:
 20854 ;;		On entry : 0/3
 20855 ;;		On exit  : 0/0
 20856 ;;		Unchanged: 0/0
 20857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20862 ;;Total ram usage:        0 bytes
 20863 ;; Hardware stack levels used:    1
 20864 ;; Hardware stack levels required when called:   18
 20865 ;; This function calls:
 20866 ;;		_fputc
 20867 ;; This function is called by:
 20868 ;;		_pad
 20869 ;; This function uses a reentrant model
 20870 ;;
 20871                           
 20872                           	psect	text73
 20873  019C6C                     __ptext73:
 20874                           	opt callstack 0
 20875  019C6C                     _fputs:
 20876                           	opt callstack 0
 20877                           
 20878                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20879  019C6C  52E6               	movf	postinc1,f,c
 20880  019C6E  52E6               	movf	postinc1,f,c
 20881  019C70  52E6               	movf	postinc1,f,c
 20882                           
 20883                           ;stkvar	_i @ sp[(-3)+0]
 20884                           
 20885                           ;incstack = 0
 20886 ;; hardware stack exceeded
 20887  019C72  0EFD               	movlw	-3
 20888  019C74  6AE3               	clrf	plusw1,c
 20889  019C76  0EFE               	movlw	-2
 20890  019C78  6AE3               	clrf	plusw1,c
 20891  019C7A  D01F               	goto	l11400
 20892  019C7C                     l11396:
 20893                           
 20894                           ;stkvar	_fp @ sp[(-3)+-4]
 20895  019C7C  0EF9               	movlw	-7
 20896  019C7E  006F FF8F FFE6     	movff	plusw1,postinc1
 20897  019C84  006F FF8F FFE6     	movff	plusw1,postinc1
 20898                           
 20899                           ;stkvar	_c @ sp[(-5)+2]
 20900  019C8A  0EFD               	movlw	-3
 20901  019C8C  50E3               	movf	plusw1,w,c
 20902  019C8E  6EE6               	movwf	postinc1,c
 20903  019C90  0E00               	movlw	0
 20904  019C92  6EE6               	movwf	postinc1,c
 20905  019C94  ECEB  F0C5         	call	_fputc	;wreg free
 20906                           
 20907                           ;stkvar	_i @ sp[(-3)+0]
 20908  019C98  0EFD               	movlw	-3
 20909  019C9A  50E3               	movf	plusw1,w,c
 20910  019C9C  0F01               	addlw	1
 20911  019C9E  6E01               	movwf	btemp^0,c
 20912  019CA0  0EFD               	movlw	-3
 20913  019CA2  0060  F007  FFE3   	movff	btemp,plusw1
 20914  019CA8  6A01               	clrf	btemp^0,c
 20915  019CAA  0EFE               	movlw	-2
 20916  019CAC  50E3               	movf	plusw1,w,c
 20917  019CAE  2001               	addwfc	btemp^0,w,c
 20918  019CB0  6E01               	movwf	btemp^0,c
 20919  019CB2  0EFE               	movlw	-2
 20920  019CB4  0060  F007  FFE3   	movff	btemp,plusw1
 20921  019CBA                     l11400:
 20922                           
 20923                           ;stkvar	_i @ sp[(-3)+0]
 20924  019CBA  0EFD               	movlw	-3
 20925  019CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 20926  019CC2  0EFE               	movlw	-2
 20927  019CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 20928                           
 20929                           ;stkvar	_s @ sp[(-3)+-2]
 20930  019CCA  0EFB               	movlw	-5
 20931  019CCC  006F FF8C  F009    	movff	plusw1,btemp+8
 20932  019CD2  0EFC               	movlw	-4
 20933  019CD4  006F FF8C  F00A    	movff	plusw1,btemp+9
 20934  019CDA  500B               	movf	(btemp+10)^0,w,c
 20935  019CDC  2409               	addwf	(btemp+8)^0,w,c
 20936  019CDE  6ED9               	movwf	fsr2l,c
 20937  019CE0  500C               	movf	(btemp+11)^0,w,c
 20938  019CE2  200A               	addwfc	(btemp+9)^0,w,c
 20939  019CE4  6EDA               	movwf	fsr2h,c
 20940  019CE6  50DF               	movf	indf2,w,c
 20941  019CE8  6E0C               	movwf	(btemp+11)^0,c
 20942                           
 20943                           ;stkvar	_c @ sp[(-3)+2]
 20944  019CEA  0EFF               	movlw	-1
 20945  019CEC  0060  F033  FFE3   	movff	btemp+11,plusw1
 20946  019CF2  0EFF               	movlw	-1
 20947  019CF4  50E3               	movf	plusw1,w,c
 20948  019CF6  A4D8               	btfss	status,2,c
 20949  019CF8  D7C1               	goto	l11396
 20950                           
 20951                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20952  019CFA  0EF9               	movlw	249
 20953  019CFC  26E1               	addwf	fsr1l,f,c
 20954  019CFE  0EFF               	movlw	255
 20955  019D00  22E2               	addwfc	fsr1h,f,c
 20956  019D02  0012               	return		;funcret
 20957  019D04                     __end_of_fputs:
 20958                           	opt callstack 0
 20959                           
 20960 ;; *************** function _fputc *****************
 20961 ;; Defined at:
 20962 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 20963 ;; Parameters:    Size  Location     Type
 20964 ;;  c               2  [STACK] int 
 20965 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20966 ;;		 -> f(6), NULL(0), 
 20967 ;; Auto vars:     Size  Location     Type
 20968 ;;		None
 20969 ;; Return value:  Size  Location     Type
 20970 ;;                  2  [STACK] int 
 20971 ;; Registers used:
 20972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20973 ;; Tracked objects:
 20974 ;;		On entry : 0/0
 20975 ;;		On exit  : 0/0
 20976 ;;		Unchanged: 0/0
 20977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20982 ;;Total ram usage:        0 bytes
 20983 ;; Hardware stack levels used:    1
 20984 ;; Hardware stack levels required when called:   17
 20985 ;; This function calls:
 20986 ;;		_putch
 20987 ;; This function is called by:
 20988 ;;		_pad
 20989 ;;		_stoa
 20990 ;;		_vfpfcnvrt
 20991 ;;		_fputs
 20992 ;; This function uses a reentrant model
 20993 ;;
 20994                           
 20995                           	psect	text74
 20996  018BD6                     __ptext74:
 20997                           	opt callstack 0
 20998  018BD6                     _fputc:
 20999                           	opt callstack 0
 21000                           
 21001                           ;stkvar	_fp @ sp[(0)+-4]
 21002                           
 21003                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21004                           ;incstack = 0
 21005 ;; hardware stack exceeded
 21006  018BD6  0EFC               	movlw	-4
 21007  018BD8  006F FF8C  F001    	movff	plusw1,btemp
 21008  018BDE  0EFD               	movlw	-3
 21009  018BE0  50E3               	movf	plusw1,w,c
 21010  018BE2  1001               	iorwf	btemp^0,w,c
 21011  018BE4  B4D8               	btfsc	status,2,c
 21012  018BE6  D009               	goto	u10250
 21013                           
 21014                           ;stkvar	_fp @ sp[(0)+-4]
 21015  018BE8  0EFC               	movlw	-4
 21016  018BEA  006F FF8C  F001    	movff	plusw1,btemp
 21017  018BF0  0EFD               	movlw	-3
 21018  018BF2  50E3               	movf	plusw1,w,c
 21019  018BF4  1001               	iorwf	btemp^0,w,c
 21020  018BF6  A4D8               	btfss	status,2,c
 21021  018BF8  D006               	goto	l11384
 21022  018BFA                     u10250:
 21023                           
 21024                           ;stkvar	_c @ sp[(0)+-2]
 21025  018BFA  0EFE               	movlw	-2
 21026  018BFC  50E3               	movf	plusw1,w,c
 21027  018BFE  6EE6               	movwf	postinc1,c
 21028  018C00  EC46  F0D9         	call	_putch	;wreg free
 21029  018C04  D075               	goto	l3150
 21030  018C06                     l11384:
 21031                           
 21032                           ;stkvar	_fp @ sp[(0)+-4]
 21033  018C06  0EFC               	movlw	-4
 21034  018C08  006F FF8C  F00B    	movff	plusw1,btemp+10
 21035  018C0E  0EFD               	movlw	-3
 21036  018C10  006F FF8C  F00C    	movff	plusw1,btemp+11
 21037  018C16  0E04               	movlw	4
 21038  018C18  240B               	addwf	(btemp+10)^0,w,c
 21039  018C1A  6ED9               	movwf	fsr2l,c
 21040  018C1C  0E00               	movlw	0
 21041  018C1E  200C               	addwfc	(btemp+11)^0,w,c
 21042  018C20  6EDA               	movwf	fsr2h,c
 21043  018C22  50DE               	movf	postinc2,w,c
 21044  018C24  10DE               	iorwf	postinc2,w,c
 21045  018C26  B4D8               	btfsc	status,2,c
 21046  018C28  D026               	goto	u10270
 21047                           
 21048                           ;stkvar	_fp @ sp[(0)+-4]
 21049  018C2A  0EFC               	movlw	-4
 21050  018C2C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21051  018C32  0EFD               	movlw	-3
 21052  018C34  006F FF8C  F00C    	movff	plusw1,btemp+11
 21053  018C3A  0E04               	movlw	4
 21054  018C3C  240B               	addwf	(btemp+10)^0,w,c
 21055  018C3E  6ED9               	movwf	fsr2l,c
 21056  018C40  0E00               	movlw	0
 21057  018C42  200C               	addwfc	(btemp+11)^0,w,c
 21058  018C44  6EDA               	movwf	fsr2h,c
 21059                           
 21060                           ;stkvar	_fp @ sp[(0)+-4]
 21061  018C46  0EFC               	movlw	-4
 21062  018C48  006F FF8C  F00B    	movff	plusw1,btemp+10
 21063  018C4E  0EFD               	movlw	-3
 21064  018C50  006F FF8C  F00C    	movff	plusw1,btemp+11
 21065  018C56  0E02               	movlw	2
 21066  018C58  240B               	addwf	(btemp+10)^0,w,c
 21067  018C5A  6EE9               	movwf	fsr0l,c
 21068  018C5C  0E00               	movlw	0
 21069  018C5E  200C               	addwfc	(btemp+11)^0,w,c
 21070  018C60  6EEA               	movwf	fsr0h,c
 21071  018C62  50DE               	movf	postinc2,w,c
 21072  018C64  5CEE               	subwf	postinc0,w,c
 21073  018C66  50EE               	movf	postinc0,w,c
 21074  018C68  0A80               	xorlw	128
 21075  018C6A  6E01               	movwf	btemp^0,c
 21076  018C6C  50DE               	movf	postinc2,w,c
 21077  018C6E  0A80               	xorlw	128
 21078  018C70  5801               	subwfb	btemp^0,w,c
 21079  018C72  B0D8               	btfsc	status,0,c
 21080  018C74  D03D               	goto	l3150
 21081  018C76                     u10270:
 21082                           
 21083                           ;stkvar	_c @ sp[(0)+-2]
 21084                           ;stkvar	_fp @ sp[(0)+-4]
 21085  018C76  0EFC               	movlw	-4
 21086  018C78  006F FF8C  F00B    	movff	plusw1,btemp+10
 21087  018C7E  0EFD               	movlw	-3
 21088  018C80  006F FF8C  F00C    	movff	plusw1,btemp+11
 21089  018C86  0E02               	movlw	2
 21090  018C88  240B               	addwf	(btemp+10)^0,w,c
 21091  018C8A  6ED9               	movwf	fsr2l,c
 21092  018C8C  0E00               	movlw	0
 21093  018C8E  200C               	addwfc	(btemp+11)^0,w,c
 21094  018C90  6EDA               	movwf	fsr2h,c
 21095  018C92  006F FF78  F00B    	movff	postinc2,btemp+10
 21096  018C98  006F FF74  F00C    	movff	postdec2,btemp+11
 21097                           
 21098                           ;stkvar	_fp @ sp[(0)+-4]
 21099  018C9E  0EFC               	movlw	-4
 21100  018CA0  006F FF8F FFD9     	movff	plusw1,fsr2l
 21101  018CA6  0EFD               	movlw	-3
 21102  018CA8  006F FF8F FFDA     	movff	plusw1,fsr2h
 21103  018CAE  006F FF78  F009    	movff	postinc2,btemp+8
 21104  018CB4  006F FF74  F00A    	movff	postdec2,btemp+9
 21105  018CBA  500B               	movf	(btemp+10)^0,w,c
 21106  018CBC  2409               	addwf	(btemp+8)^0,w,c
 21107  018CBE  6ED9               	movwf	fsr2l,c
 21108  018CC0  500C               	movf	(btemp+11)^0,w,c
 21109  018CC2  200A               	addwfc	(btemp+9)^0,w,c
 21110  018CC4  6EDA               	movwf	fsr2h,c
 21111  018CC6  0EFE               	movlw	-2
 21112  018CC8  006F FF8F FFDF     	movff	plusw1,indf2
 21113                           
 21114                           ;stkvar	_fp @ sp[(0)+-4]
 21115  018CCE  0EFC               	movlw	-4
 21116  018CD0  006F FF8C  F00B    	movff	plusw1,btemp+10
 21117  018CD6  0EFD               	movlw	-3
 21118  018CD8  006F FF8C  F00C    	movff	plusw1,btemp+11
 21119  018CDE  0E02               	movlw	2
 21120  018CE0  240B               	addwf	(btemp+10)^0,w,c
 21121  018CE2  6ED9               	movwf	fsr2l,c
 21122  018CE4  0E00               	movlw	0
 21123  018CE6  200C               	addwfc	(btemp+11)^0,w,c
 21124  018CE8  6EDA               	movwf	fsr2h,c
 21125  018CEA  2ADE               	incf	postinc2,f,c
 21126  018CEC  0E00               	movlw	0
 21127  018CEE  22DD               	addwfc	postdec2,f,c
 21128  018CF0                     l3150:
 21129                           
 21130                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21131  018CF0  52E5               	movf	postdec1,f,c
 21132  018CF2  52E5               	movf	postdec1,f,c
 21133  018CF4  52E5               	movf	postdec1,f,c
 21134  018CF6  52E5               	movf	postdec1,f,c
 21135  018CF8  0012               	return		;funcret
 21136  018CFA                     __end_of_fputc:
 21137                           	opt callstack 0
 21138                           
 21139 ;; *************** function _putch *****************
 21140 ;; Defined at:
 21141 ;;		line 170 in file "eadog.c"
 21142 ;; Parameters:    Size  Location     Type
 21143 ;;  c               1  [STACK] unsigned char 
 21144 ;; Auto vars:     Size  Location     Type
 21145 ;;		None
 21146 ;; Return value:  Size  Location     Type
 21147 ;;                  1  [STACK] void 
 21148 ;; Registers used:
 21149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21150 ;; Tracked objects:
 21151 ;;		On entry : 0/0
 21152 ;;		On exit  : 0/0
 21153 ;;		Unchanged: 0/0
 21154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21159 ;;Total ram usage:        0 bytes
 21160 ;; Hardware stack levels used:    1
 21161 ;; Hardware stack levels required when called:   16
 21162 ;; This function calls:
 21163 ;;		_ringBufS_put_dma
 21164 ;; This function is called by:
 21165 ;;		_fputc
 21166 ;; This function uses a reentrant model
 21167 ;;
 21168                           
 21169                           	psect	text75
 21170  01B28C                     __ptext75:
 21171                           	opt callstack 0
 21172  01B28C                     _putch:
 21173                           	opt callstack 0
 21174                           
 21175                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21176                           ;stkvar	_c @ sp[(0)+-1]
 21177                           
 21178                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21179                           ;incstack = 0
 21180 ;; hardware stack exceeded
 21181  01B28C  0EFF               	movlw	-1
 21182  01B28E  50E3               	movf	plusw1,w,c
 21183  01B290  6EE6               	movwf	postinc1,c
 21184  01B292  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 21185  01B298  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 21186  01B29E  EC3D  F0CD         	call	_ringBufS_put_dma	;wreg free
 21187                           
 21188                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21189  01B2A2  52E5               	movf	postdec1,f,c
 21190  01B2A4  0012               	return		;funcret
 21191  01B2A6                     __end_of_putch:
 21192                           	opt callstack 0
 21193                           
 21194 ;; *************** function _ringBufS_put_dma *****************
 21195 ;; Defined at:
 21196 ;;		line 67 in file "ringbufs.c"
 21197 ;; Parameters:    Size  Location     Type
 21198 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21199 ;;		 -> ring_buf1(67), 
 21200 ;;  c               1  [STACK] const unsigned char 
 21201 ;; Auto vars:     Size  Location     Type
 21202 ;;		None
 21203 ;; Return value:  Size  Location     Type
 21204 ;;                  1  [STACK] void 
 21205 ;; Registers used:
 21206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21207 ;; Tracked objects:
 21208 ;;		On entry : 0/0
 21209 ;;		On exit  : 0/0
 21210 ;;		Unchanged: 0/0
 21211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21216 ;;Total ram usage:        0 bytes
 21217 ;; Hardware stack levels used:    1
 21218 ;; Hardware stack levels required when called:   15
 21219 ;; This function calls:
 21220 ;;		Nothing
 21221 ;; This function is called by:
 21222 ;;		_putch
 21223 ;; This function uses a reentrant model
 21224 ;;
 21225                           
 21226                           	psect	text76
 21227  019A7A                     __ptext76:
 21228                           	opt callstack 0
 21229  019A7A                     _ringBufS_put_dma:
 21230                           	opt callstack 0
 21231                           
 21232                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21233                           ;stkvar	__this @ sp[(0)+-2]
 21234                           
 21235                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21236                           ;incstack = 0
 21237 ;; hardware stack exceeded
 21238  019A7A  0EFE               	movlw	-2
 21239  019A7C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21240  019A82  0EFF               	movlw	-1
 21241  019A84  006F FF8C  F00C    	movff	plusw1,btemp+11
 21242  019A8A  0E42               	movlw	66
 21243  019A8C  240B               	addwf	(btemp+10)^0,w,c
 21244  019A8E  6ED9               	movwf	fsr2l,c
 21245  019A90  0E00               	movlw	0
 21246  019A92  200C               	addwfc	(btemp+11)^0,w,c
 21247  019A94  6EDA               	movwf	fsr2h,c
 21248  019A96  0E40               	movlw	64
 21249  019A98  60DF               	cpfslt	indf2,c
 21250  019A9A  D040               	goto	l1574
 21251                           
 21252                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21253                           ;stkvar	_c @ sp[(0)+-3]
 21254                           ;stkvar	__this @ sp[(0)+-2]
 21255  019A9C  0EFE               	movlw	-2
 21256  019A9E  006F FF8C  F00B    	movff	plusw1,btemp+10
 21257  019AA4  0EFF               	movlw	-1
 21258  019AA6  006F FF8C  F00C    	movff	plusw1,btemp+11
 21259  019AAC  0E40               	movlw	64
 21260  019AAE  240B               	addwf	(btemp+10)^0,w,c
 21261  019AB0  6ED9               	movwf	fsr2l,c
 21262  019AB2  0E00               	movlw	0
 21263  019AB4  200C               	addwfc	(btemp+11)^0,w,c
 21264  019AB6  6EDA               	movwf	fsr2h,c
 21265  019AB8  50DF               	movf	indf2,w,c
 21266  019ABA  6E0C               	movwf	(btemp+11)^0,c
 21267                           
 21268                           ;stkvar	__this @ sp[(0)+-2]
 21269  019ABC  0EFE               	movlw	-2
 21270  019ABE  006F FF8C  F009    	movff	plusw1,btemp+8
 21271  019AC4  0EFF               	movlw	-1
 21272  019AC6  006F FF8C  F00A    	movff	plusw1,btemp+9
 21273  019ACC  500C               	movf	(btemp+11)^0,w,c
 21274  019ACE  2409               	addwf	(btemp+8)^0,w,c
 21275  019AD0  6ED9               	movwf	fsr2l,c
 21276  019AD2  0E00               	movlw	0
 21277  019AD4  200A               	addwfc	(btemp+9)^0,w,c
 21278  019AD6  6EDA               	movwf	fsr2h,c
 21279  019AD8  0EFD               	movlw	-3
 21280  019ADA  006F FF8F FFDF     	movff	plusw1,indf2
 21281                           
 21282                           ;ringbufs.c: 71:   ++_this->head;
 21283                           ;stkvar	__this @ sp[(0)+-2]
 21284  019AE0  0EFE               	movlw	-2
 21285  019AE2  006F FF8C  F00B    	movff	plusw1,btemp+10
 21286  019AE8  0EFF               	movlw	-1
 21287  019AEA  006F FF8C  F00C    	movff	plusw1,btemp+11
 21288  019AF0  0E40               	movlw	64
 21289  019AF2  240B               	addwf	(btemp+10)^0,w,c
 21290  019AF4  6ED9               	movwf	fsr2l,c
 21291  019AF6  0E00               	movlw	0
 21292  019AF8  200C               	addwfc	(btemp+11)^0,w,c
 21293  019AFA  6EDA               	movwf	fsr2h,c
 21294  019AFC  2ADF               	incf	indf2,f,c
 21295                           
 21296                           ;ringbufs.c: 72:   ++_this->count;
 21297                           ;stkvar	__this @ sp[(0)+-2]
 21298  019AFE  0EFE               	movlw	-2
 21299  019B00  006F FF8C  F00B    	movff	plusw1,btemp+10
 21300  019B06  0EFF               	movlw	-1
 21301  019B08  006F FF8C  F00C    	movff	plusw1,btemp+11
 21302  019B0E  0E42               	movlw	66
 21303  019B10  240B               	addwf	(btemp+10)^0,w,c
 21304  019B12  6ED9               	movwf	fsr2l,c
 21305  019B14  0E00               	movlw	0
 21306  019B16  200C               	addwfc	(btemp+11)^0,w,c
 21307  019B18  6EDA               	movwf	fsr2h,c
 21308  019B1A  2ADF               	incf	indf2,f,c
 21309  019B1C                     l1574:
 21310                           
 21311                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21312  019B1C  52E5               	movf	postdec1,f,c
 21313  019B1E  52E5               	movf	postdec1,f,c
 21314  019B20  52E5               	movf	postdec1,f,c
 21315  019B22  0012               	return		;funcret
 21316  019B24                     __end_of_ringBufS_put_dma:
 21317                           	opt callstack 0
 21318                           
 21319 ;; *************** function _atoi *****************
 21320 ;; Defined at:
 21321 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21322 ;; Parameters:    Size  Location     Type
 21323 ;;  s               2  [STACK] PTR const unsigned char 
 21324 ;;		 -> STR_56(85), STR_54(3), STR_53(3), STR_52(19), 
 21325 ;;		 -> STR_51(19), STR_50(19), STR_49(19), STR_48(19), 
 21326 ;;		 -> STR_47(19), STR_46(24), STR_45(15), STR_44(15), 
 21327 ;;		 -> STR_43(15), STR_42(10), STR_41(10), STR_40(19), 
 21328 ;;		 -> STR_39(19), STR_36(3), STR_35(3), STR_34(3), 
 21329 ;;		 -> STR_33(17), STR_32(16), STR_31(16), STR_30(20), 
 21330 ;;		 -> STR_29(20), STR_28(19), STR_27(19), STR_26(19), 
 21331 ;;		 -> STR_25(19), STR_24(19), STR_23(19), STR_22(19), 
 21332 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 21333 ;;		 -> STR_17(26), STR_16(22), STR_15(22), STR_14(17), 
 21334 ;;		 -> STR_13(17), STR_12(17), STR_11(22), STR_10(22), 
 21335 ;;		 -> STR_9(23), STR_8(18), STR_7(17), STR_6(17), 
 21336 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 21337 ;; Auto vars:     Size  Location     Type
 21338 ;;  n               2  [STACK] int 
 21339 ;;  neg             2  [STACK] int 
 21340 ;; Return value:  Size  Location     Type
 21341 ;;                  2  [STACK] int 
 21342 ;; Registers used:
 21343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21344 ;; Tracked objects:
 21345 ;;		On entry : 0/0
 21346 ;;		On exit  : 0/0
 21347 ;;		Unchanged: 0/0
 21348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21353 ;;Total ram usage:        0 bytes
 21354 ;; Hardware stack levels used:    1
 21355 ;; Hardware stack levels required when called:   16
 21356 ;; This function calls:
 21357 ;;		_isdigit
 21358 ;;		_isspace
 21359 ;; This function is called by:
 21360 ;;		_vfpfcnvrt
 21361 ;; This function uses a reentrant model
 21362 ;;
 21363                           
 21364                           	psect	text77
 21365  016E08                     __ptext77:
 21366                           	opt callstack 0
 21367  016E08                     _atoi:
 21368                           	opt callstack 0
 21369                           
 21370                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21371  016E08  0E09               	movlw	9
 21372  016E0A  26E1               	addwf	fsr1l,f,c
 21373  016E0C  0E00               	movlw	0
 21374  016E0E  22E2               	addwfc	fsr1h,f,c
 21375                           
 21376                           ;stkvar	_n @ sp[(-9)+5]
 21377                           
 21378                           ;incstack = 0
 21379 ;; hardware stack exceeded
 21380  016E10  0EFC               	movlw	-4
 21381  016E12  6AE3               	clrf	plusw1,c
 21382  016E14  0EFD               	movlw	-3
 21383  016E16  6AE3               	clrf	plusw1,c
 21384                           
 21385                           ;stkvar	_neg @ sp[(-9)+7]
 21386  016E18  0EFE               	movlw	-2
 21387  016E1A  6AE3               	clrf	plusw1,c
 21388  016E1C  0EFF               	movlw	-1
 21389  016E1E  6AE3               	clrf	plusw1,c
 21390  016E20  D011               	goto	l9076
 21391  016E22                     l9074:
 21392                           
 21393                           ;stkvar	_s @ sp[(-9)+-2]
 21394  016E22  0EF5               	movlw	-11
 21395  016E24  50E3               	movf	plusw1,w,c
 21396  016E26  0F01               	addlw	1
 21397  016E28  6E01               	movwf	btemp^0,c
 21398  016E2A  0EF5               	movlw	-11
 21399  016E2C  0060  F007  FFE3   	movff	btemp,plusw1
 21400  016E32  6A01               	clrf	btemp^0,c
 21401  016E34  0EF6               	movlw	-10
 21402  016E36  50E3               	movf	plusw1,w,c
 21403  016E38  2001               	addwfc	btemp^0,w,c
 21404  016E3A  6E01               	movwf	btemp^0,c
 21405  016E3C  0EF6               	movlw	-10
 21406  016E3E  0060  F007  FFE3   	movff	btemp,plusw1
 21407  016E44                     l9076:
 21408                           
 21409                           ;stkvar	_atoi$5873 @ sp[(-9)+4]
 21410  016E44  0EFB               	movlw	-5
 21411  016E46  6AE3               	clrf	plusw1,c
 21412  016E48  2AE3               	incf	plusw1,f,c
 21413                           
 21414                           ;stkvar	_s @ sp[(-9)+-2]
 21415  016E4A  50E1               	movf	fsr1l,w,c
 21416  016E4C  0FF5               	addlw	-11
 21417  016E4E  6ED9               	movwf	fsr2l,c
 21418  016E50  50E2               	movf	fsr1h,w,c
 21419  016E52  6EDA               	movwf	fsr2h,c
 21420  016E54  0EFF               	movlw	255
 21421  016E56  22DA               	addwfc	fsr2h,f,c
 21422  016E58  006F FF7B FFF6     	movff	postinc2,tblptrl
 21423  016E5E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21424  016E64                     	if	0	;tblptru may be non-zero
 21425  016E64                     	endif
 21426  016E64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21427  016E64  0E00               	movlw	low (__mediumconst shr (0+16))
 21428  016E66  6EF8               	movwf	tblptru,c
 21429  016E68                     	endif
 21430  016E68  0008               	tblrd		*
 21431  016E6A  50F5               	movf	tablat,w,c
 21432  016E6C  0A20               	xorlw	32
 21433  016E6E  B4D8               	btfsc	status,2,c
 21434  016E70  D023               	goto	l9084
 21435  016E72  0EF7               	movlw	247
 21436  016E74  6E0B               	movwf	(btemp+10)^0,c
 21437  016E76  0EFF               	movlw	255
 21438  016E78  6E0C               	movwf	(btemp+11)^0,c
 21439                           
 21440                           ;stkvar	_s @ sp[(-9)+-2]
 21441  016E7A  50E1               	movf	fsr1l,w,c
 21442  016E7C  0FF5               	addlw	-11
 21443  016E7E  6ED9               	movwf	fsr2l,c
 21444  016E80  50E2               	movf	fsr1h,w,c
 21445  016E82  6EDA               	movwf	fsr2h,c
 21446  016E84  0EFF               	movlw	255
 21447  016E86  22DA               	addwfc	fsr2h,f,c
 21448  016E88  006F FF7B FFF6     	movff	postinc2,tblptrl
 21449  016E8E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21450  016E94                     	if	0	;tblptru may be non-zero
 21451  016E94                     	endif
 21452  016E94                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21453  016E94  0E00               	movlw	low (__mediumconst shr (0+16))
 21454  016E96  6EF8               	movwf	tblptru,c
 21455  016E98                     	endif
 21456  016E98  0008               	tblrd		*
 21457  016E9A  50F5               	movf	tablat,w,c
 21458  016E9C  6E09               	movwf	(btemp+8)^0,c
 21459  016E9E  6A0A               	clrf	(btemp+9)^0,c
 21460  016EA0  500B               	movf	(btemp+10)^0,w,c
 21461  016EA2  2609               	addwf	(btemp+8)^0,f,c
 21462  016EA4  500C               	movf	(btemp+11)^0,w,c
 21463  016EA6  220A               	addwfc	(btemp+9)^0,f,c
 21464  016EA8  500A               	movf	(btemp+9)^0,w,c
 21465  016EAA  E104               	bnz	u8280
 21466  016EAC  0E05               	movlw	5
 21467  016EAE  5C09               	subwf	(btemp+8)^0,w,c
 21468  016EB0  A0D8               	btfss	status,0,c
 21469  016EB2  D002               	goto	l9084
 21470  016EB4                     u8280:
 21471                           
 21472                           ;stkvar	_atoi$5873 @ sp[(-9)+4]
 21473  016EB4  0EFB               	movlw	-5
 21474  016EB6  6AE3               	clrf	plusw1,c
 21475  016EB8                     l9084:
 21476                           
 21477                           ;stkvar	_atoi$5873 @ sp[(-9)+4]
 21478  016EB8  0EFB               	movlw	-5
 21479  016EBA  50E3               	movf	plusw1,w,c
 21480  016EBC  6E0B               	movwf	(btemp+10)^0,c
 21481  016EBE  6A0C               	clrf	(btemp+11)^0,c
 21482                           
 21483                           ;stkvar	_atoi$5872 @ sp[(-9)+2]
 21484  016EC0  0EF9               	movlw	-7
 21485  016EC2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21486  016EC8  0EFA               	movlw	-6
 21487  016ECA  0060  F033  FFE3   	movff	btemp+11,plusw1
 21488                           
 21489                           ;stkvar	_atoi$5872 @ sp[(-9)+2]
 21490  016ED0  0EF9               	movlw	-7
 21491  016ED2  006F FF8C  F001    	movff	plusw1,btemp
 21492  016ED8  0EFA               	movlw	-6
 21493  016EDA  50E3               	movf	plusw1,w,c
 21494  016EDC  1001               	iorwf	btemp^0,w,c
 21495  016EDE  B4D8               	btfsc	status,2,c
 21496  016EE0  D01F               	goto	l9094
 21497  016EE2  D79F               	goto	l9074
 21498  016EE4                     l9090:
 21499  016EE4  0E01               	movlw	1
 21500  016EE6  6E0B               	movwf	(btemp+10)^0,c
 21501  016EE8  0E00               	movlw	0
 21502  016EEA  6E0C               	movwf	(btemp+11)^0,c
 21503                           
 21504                           ;stkvar	_neg @ sp[(-9)+7]
 21505  016EEC  0EFE               	movlw	-2
 21506  016EEE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21507  016EF4  0EFF               	movlw	-1
 21508  016EF6  0060  F033  FFE3   	movff	btemp+11,plusw1
 21509  016EFC                     l9092:
 21510                           
 21511                           ;stkvar	_s @ sp[(-9)+-2]
 21512  016EFC  0EF5               	movlw	-11
 21513  016EFE  50E3               	movf	plusw1,w,c
 21514  016F00  0F01               	addlw	1
 21515  016F02  6E01               	movwf	btemp^0,c
 21516  016F04  0EF5               	movlw	-11
 21517  016F06  0060  F007  FFE3   	movff	btemp,plusw1
 21518  016F0C  6A01               	clrf	btemp^0,c
 21519  016F0E  0EF6               	movlw	-10
 21520  016F10  50E3               	movf	plusw1,w,c
 21521  016F12  2001               	addwfc	btemp^0,w,c
 21522  016F14  6E01               	movwf	btemp^0,c
 21523  016F16  0EF6               	movlw	-10
 21524  016F18  0060  F007  FFE3   	movff	btemp,plusw1
 21525  016F1E  D053               	goto	l9100
 21526  016F20                     l9094:
 21527                           
 21528                           ;stkvar	_s @ sp[(-9)+-2]
 21529  016F20  50E1               	movf	fsr1l,w,c
 21530  016F22  0FF5               	addlw	-11
 21531  016F24  6ED9               	movwf	fsr2l,c
 21532  016F26  50E2               	movf	fsr1h,w,c
 21533  016F28  6EDA               	movwf	fsr2h,c
 21534  016F2A  0EFF               	movlw	255
 21535  016F2C  22DA               	addwfc	fsr2h,f,c
 21536  016F2E  006F FF7B FFF6     	movff	postinc2,tblptrl
 21537  016F34  006F FF77 FFF7     	movff	postdec2,tblptrh
 21538  016F3A                     	if	0	;tblptru may be non-zero
 21539  016F3A                     	endif
 21540  016F3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21541  016F3A  0E00               	movlw	low (__mediumconst shr (0+16))
 21542  016F3C  6EF8               	movwf	tblptru,c
 21543  016F3E                     	endif
 21544  016F3E  0008               	tblrd		*
 21545  016F40  50F5               	movf	tablat,w,c
 21546  016F42  6E0B               	movwf	(btemp+10)^0,c
 21547  016F44  6A0C               	clrf	(btemp+11)^0,c
 21548                           
 21549                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21550                           ; Switch size 1, requested type "simple"
 21551                           ; Number of cases is 1, Range of values is 0 to 0
 21552                           ; switch strategies available:
 21553                           ; Name         Instructions Cycles
 21554                           ; simple_byte            4     3 (average)
 21555                           ;	Chosen strategy is simple_byte
 21556  016F46  500C               	movf	(btemp+11)^0,w,c
 21557  016F48  0A00               	xorlw	0	; case 0
 21558  016F4A  A4D8               	btfss	status,2,c
 21559  016F4C  D03C               	goto	l9100
 21560                           
 21561                           ; Switch size 1, requested type "simple"
 21562                           ; Number of cases is 2, Range of values is 43 to 45
 21563                           ; switch strategies available:
 21564                           ; Name         Instructions Cycles
 21565                           ; simple_byte            7     4 (average)
 21566                           ;	Chosen strategy is simple_byte
 21567  016F4E  500B               	movf	(btemp+10)^0,w,c
 21568  016F50  0A2B               	xorlw	43	; case 43
 21569  016F52  B4D8               	btfsc	status,2,c
 21570  016F54  D7D3               	goto	l9092
 21571  016F56  0A06               	xorlw	6	; case 45
 21572  016F58  B4D8               	btfsc	status,2,c
 21573  016F5A  D7C4               	goto	l9090
 21574  016F5C  D034               	goto	l9100
 21575  016F5E                     l9096:
 21576                           
 21577                           ;stkvar	_n @ sp[(-9)+5]
 21578  016F5E  0EFC               	movlw	-4
 21579  016F60  006F FF8C  F00B    	movff	plusw1,btemp+10
 21580  016F66  0EFD               	movlw	-3
 21581  016F68  006F FF8C  F00C    	movff	plusw1,btemp+11
 21582  016F6E  0E0A               	movlw	10
 21583  016F70  020B               	mulwf	(btemp+10)^0,c
 21584  016F72  006F FFCC  F009    	movff	prodl,btemp+8
 21585  016F78  006F FFD0  F00A    	movff	prodh,btemp+9
 21586  016F7E  020C               	mulwf	(btemp+11)^0,c
 21587  016F80  50F3               	movf	prodl,w,c
 21588  016F82  260A               	addwf	(btemp+9)^0,f,c
 21589                           
 21590                           ;stkvar	_s @ sp[(-9)+-2]
 21591  016F84  50E1               	movf	fsr1l,w,c
 21592  016F86  0FF5               	addlw	-11
 21593  016F88  6ED9               	movwf	fsr2l,c
 21594  016F8A  50E2               	movf	fsr1h,w,c
 21595  016F8C  6EDA               	movwf	fsr2h,c
 21596  016F8E  0EFF               	movlw	255
 21597  016F90  22DA               	addwfc	fsr2h,f,c
 21598  016F92  006F FF7B FFF6     	movff	postinc2,tblptrl
 21599  016F98  006F FF77 FFF7     	movff	postdec2,tblptrh
 21600  016F9E                     	if	0	;tblptru may be non-zero
 21601  016F9E                     	endif
 21602  016F9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21603  016F9E  0E00               	movlw	low (__mediumconst shr (0+16))
 21604  016FA0  6EF8               	movwf	tblptru,c
 21605  016FA2                     	endif
 21606  016FA2  0008               	tblrd		*
 21607  016FA4  50F5               	movf	tablat,w,c
 21608  016FA6  5E09               	subwf	(btemp+8)^0,f,c
 21609  016FA8  0E00               	movlw	0
 21610  016FAA  5A0A               	subwfb	(btemp+9)^0,f,c
 21611  016FAC  0E30               	movlw	48
 21612  016FAE  2609               	addwf	(btemp+8)^0,f,c
 21613  016FB0  0E00               	movlw	0
 21614  016FB2  220A               	addwfc	(btemp+9)^0,f,c
 21615                           
 21616                           ;stkvar	_n @ sp[(-9)+5]
 21617  016FB4  0EFC               	movlw	-4
 21618  016FB6  0060  F027  FFE3   	movff	btemp+8,plusw1
 21619  016FBC  0EFD               	movlw	-3
 21620  016FBE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21621  016FC4  D79B               	goto	l9092
 21622  016FC6                     l9100:
 21623  016FC6  0ED0               	movlw	208
 21624  016FC8  6E0B               	movwf	(btemp+10)^0,c
 21625  016FCA  0EFF               	movlw	255
 21626  016FCC  6E0C               	movwf	(btemp+11)^0,c
 21627                           
 21628                           ;stkvar	_s @ sp[(-9)+-2]
 21629  016FCE  50E1               	movf	fsr1l,w,c
 21630  016FD0  0FF5               	addlw	-11
 21631  016FD2  6ED9               	movwf	fsr2l,c
 21632  016FD4  50E2               	movf	fsr1h,w,c
 21633  016FD6  6EDA               	movwf	fsr2h,c
 21634  016FD8  0EFF               	movlw	255
 21635  016FDA  22DA               	addwfc	fsr2h,f,c
 21636  016FDC  006F FF7B FFF6     	movff	postinc2,tblptrl
 21637  016FE2  006F FF77 FFF7     	movff	postdec2,tblptrh
 21638  016FE8                     	if	0	;tblptru may be non-zero
 21639  016FE8                     	endif
 21640  016FE8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21641  016FE8  0E00               	movlw	low (__mediumconst shr (0+16))
 21642  016FEA  6EF8               	movwf	tblptru,c
 21643  016FEC                     	endif
 21644  016FEC  0008               	tblrd		*
 21645  016FEE  50F5               	movf	tablat,w,c
 21646  016FF0  6E09               	movwf	(btemp+8)^0,c
 21647  016FF2  6A0A               	clrf	(btemp+9)^0,c
 21648  016FF4  500B               	movf	(btemp+10)^0,w,c
 21649  016FF6  2609               	addwf	(btemp+8)^0,f,c
 21650  016FF8  500C               	movf	(btemp+11)^0,w,c
 21651  016FFA  220A               	addwfc	(btemp+9)^0,f,c
 21652  016FFC  500A               	movf	(btemp+9)^0,w,c
 21653  016FFE  E106               	bnz	u8300
 21654  017000  0E0A               	movlw	10
 21655  017002  5C09               	subwf	(btemp+8)^0,w,c
 21656  017004  B0D8               	btfsc	status,0,c
 21657  017006  D002               	goto	u8300
 21658  017008  0E01               	movlw	1
 21659  01700A  D001               	goto	u8310
 21660  01700C                     u8300:
 21661  01700C  0E00               	movlw	0
 21662  01700E                     u8310:
 21663  01700E  6E0B               	movwf	(btemp+10)^0,c
 21664  017010  6A0C               	clrf	(btemp+11)^0,c
 21665                           
 21666                           ;stkvar	_atoi$5874 @ sp[(-9)+0]
 21667  017012  0EF7               	movlw	-9
 21668  017014  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21669  01701A  0EF8               	movlw	-8
 21670  01701C  0060  F033  FFE3   	movff	btemp+11,plusw1
 21671                           
 21672                           ;stkvar	_atoi$5874 @ sp[(-9)+0]
 21673  017022  0EF7               	movlw	-9
 21674  017024  006F FF8C  F001    	movff	plusw1,btemp
 21675  01702A  0EF8               	movlw	-8
 21676  01702C  50E3               	movf	plusw1,w,c
 21677  01702E  1001               	iorwf	btemp^0,w,c
 21678  017030  A4D8               	btfss	status,2,c
 21679  017032  D795               	goto	l9096
 21680                           
 21681                           ;stkvar	_neg @ sp[(-9)+7]
 21682  017034  0EFE               	movlw	-2
 21683  017036  006F FF8C  F001    	movff	plusw1,btemp
 21684  01703C  0EFF               	movlw	-1
 21685  01703E  50E3               	movf	plusw1,w,c
 21686  017040  1001               	iorwf	btemp^0,w,c
 21687  017042  A4D8               	btfss	status,2,c
 21688  017044  D00E               	goto	l9110
 21689                           
 21690                           ;stkvar	_n @ sp[(-9)+5]
 21691  017046  0EFC               	movlw	-4
 21692  017048  006F FF8C  F001    	movff	plusw1,btemp
 21693  01704E  1E01               	comf	btemp^0,f,c
 21694  017050  0EFD               	movlw	-3
 21695  017052  006F FF8C  F002    	movff	plusw1,btemp+1
 21696  017058  1E02               	comf	(btemp+1)^0,f,c
 21697  01705A  2A01               	incf	btemp^0,f,c
 21698  01705C  B4D8               	btfsc	status,2,c
 21699  01705E  2A02               	incf	(btemp+1)^0,f,c
 21700  017060  D008               	goto	l3081
 21701  017062                     l9110:
 21702                           
 21703                           ;stkvar	_n @ sp[(-9)+5]
 21704  017062  0EFC               	movlw	-4
 21705  017064  006F FF8C  F001    	movff	plusw1,btemp
 21706  01706A  0EFD               	movlw	-3
 21707  01706C  006F FF8C  F002    	movff	plusw1,btemp+1
 21708  017072                     l3081:
 21709                           
 21710                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 21711  017072  0EF5               	movlw	245
 21712  017074  26E1               	addwf	fsr1l,f,c
 21713  017076  0EFF               	movlw	255
 21714  017078  22E2               	addwfc	fsr1h,f,c
 21715  01707A  0012               	return		;funcret
 21716  01707C                     __end_of_atoi:
 21717                           	opt callstack 0
 21718                           
 21719 ;; *************** function _isspace *****************
 21720 ;; Defined at:
 21721 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 21722 ;; Parameters:    Size  Location     Type
 21723 ;;  c               2  [STACK] int 
 21724 ;; Auto vars:     Size  Location     Type
 21725 ;;		None
 21726 ;; Return value:  Size  Location     Type
 21727 ;;                  2  [STACK] int 
 21728 ;; Registers used:
 21729 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21730 ;; Tracked objects:
 21731 ;;		On entry : 0/0
 21732 ;;		On exit  : 0/0
 21733 ;;		Unchanged: 0/0
 21734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21739 ;;Total ram usage:        0 bytes
 21740 ;; Hardware stack levels used:    1
 21741 ;; Hardware stack levels required when called:   15
 21742 ;; This function calls:
 21743 ;;		Nothing
 21744 ;; This function is called by:
 21745 ;;		_atoi
 21746 ;; This function uses a reentrant model
 21747 ;;
 21748                           
 21749                           	psect	text78
 21750  01A5E4                     __ptext78:
 21751                           	opt callstack 0
 21752  01A5E4                     _isspace:
 21753                           	opt callstack 0
 21754                           
 21755                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21756  01A5E4  52E6               	movf	postinc1,f,c
 21757                           
 21758                           ;stkvar	_isspace$5923 @ sp[(-1)+0]
 21759                           
 21760                           ;incstack = 0
 21761 ;; hardware stack exceeded
 21762  01A5E6  0EFF               	movlw	-1
 21763  01A5E8  6AE3               	clrf	plusw1,c
 21764  01A5EA  2AE3               	incf	plusw1,f,c
 21765                           
 21766                           ;stkvar	_c @ sp[(-1)+-2]
 21767  01A5EC  0EFD               	movlw	-3
 21768  01A5EE  006F FF8C  F001    	movff	plusw1,btemp
 21769  01A5F4  0E20               	movlw	32
 21770  01A5F6  1801               	xorwf	btemp^0,w,c
 21771  01A5F8  E104               	bnz	u7130
 21772  01A5FA  0EFE               	movlw	-2
 21773  01A5FC  50E3               	movf	plusw1,w,c
 21774  01A5FE  B4D8               	btfsc	status,2,c
 21775  01A600  D012               	goto	l8468
 21776  01A602                     u7130:
 21777                           
 21778                           ;stkvar	_c @ sp[(-1)+-2]
 21779  01A602  0EFD               	movlw	-3
 21780  01A604  50E3               	movf	plusw1,w,c
 21781  01A606  0FF7               	addlw	247
 21782  01A608  6E0B               	movwf	(btemp+10)^0,c
 21783  01A60A  0EFE               	movlw	-2
 21784  01A60C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21785  01A612  0EFF               	movlw	255
 21786  01A614  220C               	addwfc	(btemp+11)^0,f,c
 21787  01A616  500C               	movf	(btemp+11)^0,w,c
 21788  01A618  E104               	bnz	u7140
 21789  01A61A  0E05               	movlw	5
 21790  01A61C  5C0B               	subwf	(btemp+10)^0,w,c
 21791  01A61E  A0D8               	btfss	status,0,c
 21792  01A620  D002               	goto	l8468
 21793  01A622                     u7140:
 21794                           
 21795                           ;stkvar	_isspace$5923 @ sp[(-1)+0]
 21796  01A622  0EFF               	movlw	-1
 21797  01A624  6AE3               	clrf	plusw1,c
 21798  01A626                     l8468:
 21799                           
 21800                           ;stkvar	_isspace$5923 @ sp[(-1)+0]
 21801  01A626  0EFF               	movlw	-1
 21802  01A628  50E3               	movf	plusw1,w,c
 21803  01A62A  6E01               	movwf	btemp^0,c
 21804  01A62C  6A02               	clrf	(btemp+1)^0,c
 21805                           
 21806                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21807  01A62E  52E5               	movf	postdec1,f,c
 21808  01A630  52E5               	movf	postdec1,f,c
 21809  01A632  52E5               	movf	postdec1,f,c
 21810  01A634  0012               	return		;funcret
 21811  01A636                     __end_of_isspace:
 21812                           	opt callstack 0
 21813                           
 21814 ;; *************** function _isdigit *****************
 21815 ;; Defined at:
 21816 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 21817 ;; Parameters:    Size  Location     Type
 21818 ;;  c               2  [STACK] int 
 21819 ;; Auto vars:     Size  Location     Type
 21820 ;;		None
 21821 ;; Return value:  Size  Location     Type
 21822 ;;                  2  [STACK] int 
 21823 ;; Registers used:
 21824 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21825 ;; Tracked objects:
 21826 ;;		On entry : 0/0
 21827 ;;		On exit  : 0/0
 21828 ;;		Unchanged: 0/0
 21829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21834 ;;Total ram usage:        0 bytes
 21835 ;; Hardware stack levels used:    1
 21836 ;; Hardware stack levels required when called:   15
 21837 ;; This function calls:
 21838 ;;		Nothing
 21839 ;; This function is called by:
 21840 ;;		_vfpfcnvrt
 21841 ;;		_atoi
 21842 ;; This function uses a reentrant model
 21843 ;;
 21844                           
 21845                           	psect	text79
 21846  01ACCA                     __ptext79:
 21847                           	opt callstack 0
 21848  01ACCA                     _isdigit:
 21849                           	opt callstack 0
 21850                           
 21851                           ;stkvar	_c @ sp[(0)+-2]
 21852                           
 21853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21854                           ;incstack = 0
 21855 ;; hardware stack exceeded
 21856  01ACCA  0EFE               	movlw	-2
 21857  01ACCC  50E3               	movf	plusw1,w,c
 21858  01ACCE  0FD0               	addlw	208
 21859  01ACD0  6E0B               	movwf	(btemp+10)^0,c
 21860  01ACD2  0EFF               	movlw	-1
 21861  01ACD4  006F FF8C  F00C    	movff	plusw1,btemp+11
 21862  01ACDA  0EFF               	movlw	255
 21863  01ACDC  220C               	addwfc	(btemp+11)^0,f,c
 21864  01ACDE  500C               	movf	(btemp+11)^0,w,c
 21865  01ACE0  E106               	bnz	u5980
 21866  01ACE2  0E0A               	movlw	10
 21867  01ACE4  5C0B               	subwf	(btemp+10)^0,w,c
 21868  01ACE6  B0D8               	btfsc	status,0,c
 21869  01ACE8  D002               	goto	u5980
 21870  01ACEA  0E01               	movlw	1
 21871  01ACEC  D001               	goto	u5990
 21872  01ACEE                     u5980:
 21873  01ACEE  0E00               	movlw	0
 21874  01ACF0                     u5990:
 21875  01ACF0  6E01               	movwf	btemp^0,c
 21876  01ACF2  6A02               	clrf	(btemp+1)^0,c
 21877                           
 21878                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21879  01ACF4  52E5               	movf	postdec1,f,c
 21880  01ACF6  52E5               	movf	postdec1,f,c
 21881  01ACF8  0012               	return		;funcret
 21882  01ACFA                     __end_of_isdigit:
 21883                           	opt callstack 0
 21884                           
 21885 ;; *************** function _set_vterm *****************
 21886 ;; Defined at:
 21887 ;;		line 107 in file "mconfig.c"
 21888 ;; Parameters:    Size  Location     Type
 21889 ;;  vterm           1  [STACK] const unsigned char 
 21890 ;; Auto vars:     Size  Location     Type
 21891 ;;		None
 21892 ;; Return value:  Size  Location     Type
 21893 ;;                  1  [STACK] unsigned char 
 21894 ;; Registers used:
 21895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 21896 ;; Tracked objects:
 21897 ;;		On entry : 0/1
 21898 ;;		On exit  : 0/0
 21899 ;;		Unchanged: 0/0
 21900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21905 ;;Total ram usage:        0 bytes
 21906 ;; Hardware stack levels used:    1
 21907 ;; Hardware stack levels required when called:   15
 21908 ;; This function calls:
 21909 ;;		Nothing
 21910 ;; This function is called by:
 21911 ;;		_main
 21912 ;;		_check_help
 21913 ;; This function uses a reentrant model
 21914 ;;
 21915                           
 21916                           	psect	text80
 21917  01B1DC                     __ptext80:
 21918                           	opt callstack 0
 21919  01B1DC                     _set_vterm:
 21920                           	opt callstack 15
 21921                           
 21922                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 21923                           ;stkvar	_vterm @ sp[(0)+-1]
 21924                           
 21925                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21926                           ;incstack = 0
 21927  01B1DC  0EFF               	movlw	-1
 21928  01B1DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 21929  01B1E4  0E03               	movlw	3
 21930  01B1E6  160C               	andwf	(btemp+11)^0,f,c
 21931  01B1E8  EE22  F11F         	lfsr	2,_D+288
 21932  01B1EC  50DF               	movf	223,w,c
 21933  01B1EE  180C               	xorwf	(btemp+11)^0,w,c
 21934  01B1F0  0BFE               	andlw	-2
 21935  01B1F2  180C               	xorwf	(btemp+11)^0,w,c
 21936  01B1F4  6EDF               	movwf	223,c
 21937                           
 21938                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21939  01B1F6  52E5               	movf	postdec1,f,c
 21940  01B1F8  0012               	return		;funcret
 21941  01B1FA                     __end_of_set_vterm:
 21942                           	opt callstack 0
 21943                           
 21944 ;; *************** function _set_temp_display_help *****************
 21945 ;; Defined at:
 21946 ;;		line 211 in file "mconfig.c"
 21947 ;; Parameters:    Size  Location     Type
 21948 ;;  new_response    1  [STACK] const enum E16509
 21949 ;; Auto vars:     Size  Location     Type
 21950 ;;		None
 21951 ;; Return value:  Size  Location     Type
 21952 ;;                  1  [STACK] enum E16509
 21953 ;; Registers used:
 21954 ;;		wreg, fsr1l, fsr1h
 21955 ;; Tracked objects:
 21956 ;;		On entry : 0/2
 21957 ;;		On exit  : 3F/2
 21958 ;;		Unchanged: 0/0
 21959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21964 ;;Total ram usage:        0 bytes
 21965 ;; Hardware stack levels used:    1
 21966 ;; Hardware stack levels required when called:   15
 21967 ;; This function calls:
 21968 ;;		Nothing
 21969 ;; This function is called by:
 21970 ;;		_check_help
 21971 ;; This function uses a reentrant model
 21972 ;;
 21973                           
 21974                           	psect	text81
 21975  01B37A                     __ptext81:
 21976                           	opt callstack 0
 21977  01B37A                     _set_temp_display_help:
 21978                           	opt callstack 14
 21979                           
 21980                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 21981                           
 21982                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21983                           ;incstack = 0
 21984  01B37A  0102               	movlb	2	; () banked
 21985  01B37C  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 21986                           
 21987                           ; BSR set to: 2
 21988                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 21989                           ;stkvar	_new_response_info @ sp[(0)+-1]
 21990  01B37E  0EFF               	movlw	-1
 21991  01B380  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 21992                           
 21993                           ; BSR set to: 2
 21994                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 21995  01B386  52E5               	movf	postdec1,f,c
 21996  01B388  0012               	return		;funcret
 21997  01B38A                     __end_of_set_temp_display_help:
 21998                           	opt callstack 0
 21999                           
 22000 ;; *************** function _set_display_info *****************
 22001 ;; Defined at:
 22002 ;;		line 200 in file "mconfig.c"
 22003 ;; Parameters:    Size  Location     Type
 22004 ;;  new_response    1  [STACK] const enum E16509
 22005 ;; Auto vars:     Size  Location     Type
 22006 ;;		None
 22007 ;; Return value:  Size  Location     Type
 22008 ;;                  1  [STACK] enum E16994
 22009 ;; Registers used:
 22010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22011 ;; Tracked objects:
 22012 ;;		On entry : 0/0
 22013 ;;		On exit  : 0/0
 22014 ;;		Unchanged: 0/0
 22015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22020 ;;Total ram usage:        0 bytes
 22021 ;; Hardware stack levels used:    1
 22022 ;; Hardware stack levels required when called:   16
 22023 ;; This function calls:
 22024 ;;		_TimerDone
 22025 ;; This function is called by:
 22026 ;;		_main
 22027 ;;		_check_help
 22028 ;; This function uses a reentrant model
 22029 ;;
 22030                           
 22031                           	psect	text82
 22032  01B1FA                     __ptext82:
 22033                           	opt callstack 0
 22034  01B1FA                     _set_display_info:
 22035                           	opt callstack 14
 22036                           
 22037                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22038                           
 22039                           ; BSR set to: 2
 22040                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22041                           ;incstack = 0
 22042  01B1FA  0E07               	movlw	7
 22043  01B1FC  6EE6               	movwf	postinc1,c
 22044  01B1FE  EC27  F0D7         	call	_TimerDone	;wreg free
 22045  01B202  5001               	movf	btemp^0,w,c
 22046  01B204  B4D8               	btfsc	status,2,c
 22047  01B206  D006               	goto	l1709
 22048                           
 22049                           ;mconfig.c: 205:   old_info = V.response.info;
 22050  01B208  0102               	movlb	2	; () banked
 22051  01B20A  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 22052                           
 22053                           ; BSR set to: 2
 22054                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22055                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22056  01B20C  0EFF               	movlw	-1
 22057  01B20E  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 22058  01B214                     l1709:
 22059                           
 22060                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22061  01B214  52E5               	movf	postdec1,f,c
 22062  01B216  0012               	return		;funcret
 22063  01B218                     __end_of_set_display_info:
 22064                           	opt callstack 0
 22065                           
 22066 ;; *************** function _mode_lamp_dim *****************
 22067 ;; Defined at:
 22068 ;;		line 13 in file "mconfig.c"
 22069 ;; Parameters:    Size  Location     Type
 22070 ;;  level           2  [STACK] const unsigned short 
 22071 ;; Auto vars:     Size  Location     Type
 22072 ;;		None
 22073 ;; Return value:  Size  Location     Type
 22074 ;;                  1  [STACK] void 
 22075 ;; Registers used:
 22076 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22077 ;; Tracked objects:
 22078 ;;		On entry : 0/2
 22079 ;;		On exit  : 0/0
 22080 ;;		Unchanged: 0/0
 22081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22086 ;;Total ram usage:        0 bytes
 22087 ;; Hardware stack levels used:    1
 22088 ;; Hardware stack levels required when called:   16
 22089 ;; This function calls:
 22090 ;;		_PWM8_LoadDutyValue
 22091 ;; This function is called by:
 22092 ;;		_main
 22093 ;;		_check_help
 22094 ;; This function uses a reentrant model
 22095 ;;
 22096                           
 22097                           	psect	text83
 22098  01B2C2                     __ptext83:
 22099                           	opt callstack 0
 22100  01B2C2                     _mode_lamp_dim:
 22101                           	opt callstack 14
 22102                           
 22103                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22104                           ;stkvar	_level @ sp[(0)+-2]
 22105                           
 22106                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22107                           ;incstack = 0
 22108  01B2C2  0EFE               	movlw	-2
 22109  01B2C4  006F FF8F FFE6     	movff	plusw1,postinc1
 22110  01B2CA  006F FF8F FFE6     	movff	plusw1,postinc1
 22111  01B2D0  EC85  F0D4         	call	_PWM8_LoadDutyValue	;wreg free
 22112                           
 22113                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22114  01B2D4  52E5               	movf	postdec1,f,c
 22115  01B2D6  52E5               	movf	postdec1,f,c
 22116  01B2D8  0012               	return		;funcret
 22117  01B2DA                     __end_of_mode_lamp_dim:
 22118                           	opt callstack 0
 22119                           
 22120 ;; *************** function _mode_lamp_bright *****************
 22121 ;; Defined at:
 22122 ;;		line 18 in file "mconfig.c"
 22123 ;; Parameters:    Size  Location     Type
 22124 ;;		None
 22125 ;; Auto vars:     Size  Location     Type
 22126 ;;		None
 22127 ;; Return value:  Size  Location     Type
 22128 ;;                  1  [STACK] void 
 22129 ;; Registers used:
 22130 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22131 ;; Tracked objects:
 22132 ;;		On entry : 0/0
 22133 ;;		On exit  : 0/0
 22134 ;;		Unchanged: 0/0
 22135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22140 ;;Total ram usage:        0 bytes
 22141 ;; Hardware stack levels used:    1
 22142 ;; Hardware stack levels required when called:   16
 22143 ;; This function calls:
 22144 ;;		_PWM8_LoadDutyValue
 22145 ;; This function is called by:
 22146 ;;		_check_help
 22147 ;; This function uses a reentrant model
 22148 ;;
 22149                           
 22150                           	psect	text84
 22151  01B398                     __ptext84:
 22152                           	opt callstack 0
 22153  01B398                     _mode_lamp_bright:
 22154                           	opt callstack 13
 22155                           
 22156                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22157                           
 22158                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22159                           ;incstack = 0
 22160  01B398  0E2C               	movlw	44
 22161  01B39A  6EE6               	movwf	postinc1,c
 22162  01B39C  0E01               	movlw	1
 22163  01B39E  6EE6               	movwf	postinc1,c
 22164  01B3A0  EC85  F0D4         	call	_PWM8_LoadDutyValue	;wreg free
 22165                           
 22166                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22167  01B3A4  0012               	return		;funcret
 22168  01B3A6                     __end_of_mode_lamp_bright:
 22169                           	opt callstack 0
 22170                           
 22171 ;; *************** function _PWM8_LoadDutyValue *****************
 22172 ;; Defined at:
 22173 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22174 ;; Parameters:    Size  Location     Type
 22175 ;;  dutyValue       2  [STACK] unsigned short 
 22176 ;; Auto vars:     Size  Location     Type
 22177 ;;		None
 22178 ;; Return value:  Size  Location     Type
 22179 ;;                  1  [STACK] void 
 22180 ;; Registers used:
 22181 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22182 ;; Tracked objects:
 22183 ;;		On entry : 0/2
 22184 ;;		On exit  : 0/0
 22185 ;;		Unchanged: 0/0
 22186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22191 ;;Total ram usage:        0 bytes
 22192 ;; Hardware stack levels used:    1
 22193 ;; Hardware stack levels required when called:   15
 22194 ;; This function calls:
 22195 ;;		Nothing
 22196 ;; This function is called by:
 22197 ;;		_mode_lamp_dim
 22198 ;;		_mode_lamp_bright
 22199 ;; This function uses a reentrant model
 22200 ;;
 22201                           
 22202                           	psect	text85
 22203  01A90A                     __ptext85:
 22204                           	opt callstack 0
 22205  01A90A                     _PWM8_LoadDutyValue:
 22206                           	opt callstack 14
 22207                           
 22208                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22209                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22210                           
 22211                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22212                           ;incstack = 0
 22213  01A90A  0EFE               	movlw	-2
 22214  01A90C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22215  01A912  0EFF               	movlw	-1
 22216  01A914  006F FF8C  F00C    	movff	plusw1,btemp+11
 22217  01A91A  90D8               	bcf	status,0,c
 22218  01A91C  320C               	rrcf	(btemp+11)^0,f,c
 22219  01A91E  320B               	rrcf	(btemp+10)^0,f,c
 22220  01A920  90D8               	bcf	status,0,c
 22221  01A922  320C               	rrcf	(btemp+11)^0,f,c
 22222  01A924  320B               	rrcf	(btemp+10)^0,f,c
 22223  01A926  500B               	movf	(btemp+10)^0,w,c
 22224  01A928  6E61               	movwf	97,c	;volatile
 22225                           
 22226                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22227                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22228  01A92A  0EFE               	movlw	-2
 22229  01A92C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22230  01A932  0E03               	movlw	3
 22231  01A934  160C               	andwf	(btemp+11)^0,f,c
 22232  01A936  0E06               	movlw	6
 22233  01A938  6E01               	movwf	btemp^0,c
 22234  01A93A                     u8785:
 22235  01A93A  90D8               	bcf	status,0,c
 22236  01A93C  360C               	rlcf	(btemp+11)^0,f,c
 22237  01A93E  2E01               	decfsz	btemp^0,f,c
 22238  01A940  D7FC               	goto	u8785
 22239  01A942  500C               	movf	(btemp+11)^0,w,c
 22240  01A944  6E60               	movwf	96,c	;volatile
 22241                           
 22242                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22243  01A946  52E5               	movf	postdec1,f,c
 22244  01A948  52E5               	movf	postdec1,f,c
 22245  01A94A  0012               	return		;funcret
 22246  01A94C                     __end_of_PWM8_LoadDutyValue:
 22247                           	opt callstack 0
 22248                           
 22249 ;; *************** function _help_button *****************
 22250 ;; Defined at:
 22251 ;;		line 26 in file "mconfig.c"
 22252 ;; Parameters:    Size  Location     Type
 22253 ;;		None
 22254 ;; Auto vars:     Size  Location     Type
 22255 ;;		None
 22256 ;; Return value:  Size  Location     Type
 22257 ;;                  1  [STACK] _Bool 
 22258 ;; Registers used:
 22259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22260 ;; Tracked objects:
 22261 ;;		On entry : 0/2
 22262 ;;		On exit  : 0/0
 22263 ;;		Unchanged: 0/0
 22264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22269 ;;Total ram usage:        0 bytes
 22270 ;; Hardware stack levels used:    1
 22271 ;; Hardware stack levels required when called:   16
 22272 ;; This function calls:
 22273 ;;		_StartTimer
 22274 ;;		_TimerDone
 22275 ;; This function is called by:
 22276 ;;		_check_help
 22277 ;; This function uses a reentrant model
 22278 ;;
 22279                           
 22280                           	psect	text86
 22281  01AAC4                     __ptext86:
 22282                           	opt callstack 0
 22283  01AAC4                     _help_button:
 22284                           	opt callstack 13
 22285                           
 22286                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22287                           
 22288                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22289                           ;incstack = 0
 22290  01AAC4  B0CB               	btfsc	203,0,c	;volatile
 22291  01AAC6  D00C               	goto	l1652
 22292                           
 22293                           ;mconfig.c: 29:   V.help = 1;
 22294  01AAC8  0102               	movlb	2	; () banked
 22295  01AACA  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 22296                           
 22297                           ; BSR set to: 2
 22298                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22299  01AACC  0E08               	movlw	8
 22300  01AACE  6EE6               	movwf	postinc1,c
 22301  01AAD0  EC27  F0D7         	call	_TimerDone	;wreg free
 22302  01AAD4  5001               	movf	btemp^0,w,c
 22303  01AAD6  B4D8               	btfsc	status,2,c
 22304  01AAD8  D003               	goto	l1652
 22305                           
 22306                           ;mconfig.c: 31:    return 1;
 22307  01AADA  0E01               	movlw	1
 22308  01AADC  6E01               	movwf	btemp^0,c
 22309  01AADE  0012               	return	
 22310  01AAE0                     l1652:
 22311                           
 22312                           ;mconfig.c: 34:  if (!V.help)
 22313  01AAE0  0102               	movlb	2	; () banked
 22314  01AAE2  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22315  01AAE4  D008               	goto	l10146
 22316                           
 22317                           ; BSR set to: 2
 22318                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22319  01AAE6  0E2C               	movlw	44
 22320  01AAE8  6EE6               	movwf	postinc1,c
 22321  01AAEA  0E01               	movlw	1
 22322  01AAEC  6EE6               	movwf	postinc1,c
 22323  01AAEE  0E08               	movlw	8
 22324  01AAF0  6EE6               	movwf	postinc1,c
 22325  01AAF2  ECA6  F0D4         	call	_StartTimer	;wreg free
 22326  01AAF6                     l10146:
 22327                           
 22328                           ;mconfig.c: 37:  return 0;
 22329  01AAF6  0E00               	movlw	0
 22330  01AAF8  6E01               	movwf	btemp^0,c
 22331                           
 22332                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22333  01AAFA  0012               	return		;funcret
 22334  01AAFC                     __end_of_help_button:
 22335                           	opt callstack 0
 22336                           
 22337 ;; *************** function _TimerDone *****************
 22338 ;; Defined at:
 22339 ;;		line 20 in file "timers.c"
 22340 ;; Parameters:    Size  Location     Type
 22341 ;;  timer           1  [STACK] const unsigned char 
 22342 ;; Auto vars:     Size  Location     Type
 22343 ;;		None
 22344 ;; Return value:  Size  Location     Type
 22345 ;;                  1  [STACK] _Bool 
 22346 ;; Registers used:
 22347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22348 ;; Tracked objects:
 22349 ;;		On entry : 0/0
 22350 ;;		On exit  : 0/0
 22351 ;;		Unchanged: 0/0
 22352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22357 ;;Total ram usage:        0 bytes
 22358 ;; Hardware stack levels used:    1
 22359 ;; Hardware stack levels required when called:   15
 22360 ;; This function calls:
 22361 ;;		Nothing
 22362 ;; This function is called by:
 22363 ;;		_main
 22364 ;;		_WaitMs
 22365 ;;		_help_button
 22366 ;;		_check_help
 22367 ;;		_set_display_info
 22368 ;;		_update_adc_result
 22369 ;;		_esr_check
 22370 ;; This function uses a reentrant model
 22371 ;;
 22372                           
 22373                           	psect	text87
 22374  01AE4E                     __ptext87:
 22375                           	opt callstack 0
 22376  01AE4E                     _TimerDone:
 22377                           	opt callstack 14
 22378                           
 22379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22380                           ;incstack = 0
 22381  01AE4E  0004               	clrwdt		;# 
 22382                           
 22383                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22384                           ;stkvar	_timer @ sp[(0)+-1]
 22385  01AE50  0EFF               	movlw	-1
 22386  01AE52  50E3               	movf	plusw1,w,c
 22387  01AE54  0D02               	mullw	2
 22388  01AE56  0EE5               	movlw	low _tickCount
 22389  01AE58  24F3               	addwf	243,w,c
 22390  01AE5A  6ED9               	movwf	fsr2l,c
 22391  01AE5C  0E02               	movlw	high _tickCount
 22392  01AE5E  20F4               	addwfc	prodh,w,c
 22393  01AE60  6EDA               	movwf	fsr2h,c
 22394  01AE62  50DE               	movf	postinc2,w,c
 22395  01AE64  10DE               	iorwf	postinc2,w,c
 22396  01AE66  A4D8               	btfss	status,2,c
 22397  01AE68  D002               	goto	l9380
 22398                           
 22399                           ;timers.c: 24:   return 1;
 22400  01AE6A  0E01               	movlw	1
 22401  01AE6C  D001               	goto	L24
 22402  01AE6E                     l9380:
 22403                           
 22404                           ;timers.c: 26:  return 0;
 22405  01AE6E  0E00               	movlw	0
 22406  01AE70                     L24:
 22407  01AE70  6E01               	movwf	btemp^0,c
 22408                           
 22409                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22410  01AE72  52E5               	movf	postdec1,f,c
 22411  01AE74  0012               	return		;funcret
 22412  01AE76                     __end_of_TimerDone:
 22413                           	opt callstack 0
 22414                           
 22415 ;; *************** function _StartTimer *****************
 22416 ;; Defined at:
 22417 ;;		line 12 in file "timers.c"
 22418 ;; Parameters:    Size  Location     Type
 22419 ;;  timer           1  [STACK] const unsigned char 
 22420 ;;  count           2  [STACK] const unsigned short 
 22421 ;; Auto vars:     Size  Location     Type
 22422 ;;		None
 22423 ;; Return value:  Size  Location     Type
 22424 ;;                  1  [STACK] void 
 22425 ;; Registers used:
 22426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22427 ;; Tracked objects:
 22428 ;;		On entry : 0/0
 22429 ;;		On exit  : 0/0
 22430 ;;		Unchanged: 0/0
 22431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22436 ;;Total ram usage:        0 bytes
 22437 ;; Hardware stack levels used:    1
 22438 ;; Hardware stack levels required when called:   15
 22439 ;; This function calls:
 22440 ;;		Nothing
 22441 ;; This function is called by:
 22442 ;;		_main
 22443 ;;		_WaitMs
 22444 ;;		_help_button
 22445 ;;		_check_help
 22446 ;;		_update_adc_result
 22447 ;;		_calc_bsoc
 22448 ;;		_esr_check
 22449 ;; This function uses a reentrant model
 22450 ;;
 22451                           
 22452                           	psect	text88
 22453  01A94C                     __ptext88:
 22454                           	opt callstack 0
 22455  01A94C                     _StartTimer:
 22456                           	opt callstack 0
 22457                           
 22458                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22459                           ;stkvar	_count @ sp[(0)+-3]
 22460                           
 22461                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22462                           ;incstack = 0
 22463 ;; hardware stack exceeded
 22464  01A94C  0EFD               	movlw	-3
 22465  01A94E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22466  01A954  0EFE               	movlw	-2
 22467  01A956  006F FF8C  F00C    	movff	plusw1,btemp+11
 22468  01A95C  90D8               	bcf	status,0,c
 22469  01A95E  340B               	rlcf	(btemp+10)^0,w,c
 22470  01A960  6E09               	movwf	(btemp+8)^0,c
 22471  01A962  340C               	rlcf	(btemp+11)^0,w,c
 22472  01A964  6E0A               	movwf	(btemp+9)^0,c
 22473                           
 22474                           ;stkvar	_timer @ sp[(0)+-1]
 22475  01A966  0EFF               	movlw	-1
 22476  01A968  50E3               	movf	plusw1,w,c
 22477  01A96A  0D02               	mullw	2
 22478  01A96C  0EE5               	movlw	low _tickCount
 22479  01A96E  24F3               	addwf	243,w,c
 22480  01A970  6ED9               	movwf	fsr2l,c
 22481  01A972  0E02               	movlw	high _tickCount
 22482  01A974  20F4               	addwfc	prodh,w,c
 22483  01A976  6EDA               	movwf	fsr2h,c
 22484  01A978  0060  F027  FFDE   	movff	btemp+8,postinc2
 22485  01A97E  0060  F02B  FFDD   	movff	btemp+9,postdec2
 22486                           
 22487                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22488  01A984  52E5               	movf	postdec1,f,c
 22489  01A986  52E5               	movf	postdec1,f,c
 22490  01A988  52E5               	movf	postdec1,f,c
 22491  01A98A  0012               	return		;funcret
 22492  01A98C                     __end_of_StartTimer:
 22493                           	opt callstack 0
 22494                           
 22495 ;; *************** function _display_info *****************
 22496 ;; Defined at:
 22497 ;;		line 190 in file "mconfig.c"
 22498 ;; Parameters:    Size  Location     Type
 22499 ;;		None
 22500 ;; Auto vars:     Size  Location     Type
 22501 ;;		None
 22502 ;; Return value:  Size  Location     Type
 22503 ;;                  1  [STACK] enum E16509
 22504 ;; Registers used:
 22505 ;;		btemp
 22506 ;; Tracked objects:
 22507 ;;		On entry : 0/2
 22508 ;;		On exit  : 0/0
 22509 ;;		Unchanged: 0/0
 22510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22515 ;;Total ram usage:        0 bytes
 22516 ;; Hardware stack levels used:    1
 22517 ;; Hardware stack levels required when called:   15
 22518 ;; This function calls:
 22519 ;;		Nothing
 22520 ;; This function is called by:
 22521 ;;		_check_help
 22522 ;; This function uses a reentrant model
 22523 ;;
 22524                           
 22525                           	psect	text89
 22526  01B40E                     __ptext89:
 22527                           	opt callstack 0
 22528  01B40E                     _display_info:
 22529                           	opt callstack 14
 22530                           
 22531                           ;mconfig.c: 192:  return V.response.info;
 22532                           
 22533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22534                           ;incstack = 0
 22535  01B40E  0060  FA8C  F001   	movff	_V+163,btemp	;volatile
 22536                           
 22537                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22538  01B414  0012               	return		;funcret
 22539  01B416                     __end_of_display_info:
 22540                           	opt callstack 0
 22541                           
 22542 ;; *************** function _display_help *****************
 22543 ;; Defined at:
 22544 ;;		line 195 in file "mconfig.c"
 22545 ;; Parameters:    Size  Location     Type
 22546 ;;		None
 22547 ;; Auto vars:     Size  Location     Type
 22548 ;;		None
 22549 ;; Return value:  Size  Location     Type
 22550 ;;                  1  [STACK] enum E16509
 22551 ;; Registers used:
 22552 ;;		btemp
 22553 ;; Tracked objects:
 22554 ;;		On entry : 3F/2
 22555 ;;		On exit  : 0/0
 22556 ;;		Unchanged: 0/0
 22557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22562 ;;Total ram usage:        0 bytes
 22563 ;; Hardware stack levels used:    1
 22564 ;; Hardware stack levels required when called:   15
 22565 ;; This function calls:
 22566 ;;		Nothing
 22567 ;; This function is called by:
 22568 ;;		_check_help
 22569 ;; This function uses a reentrant model
 22570 ;;
 22571                           
 22572                           	psect	text90
 22573  01B416                     __ptext90:
 22574                           	opt callstack 0
 22575  01B416                     _display_help:
 22576                           	opt callstack 14
 22577                           
 22578                           ;mconfig.c: 197:  return V.response.help_temp;
 22579                           
 22580                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22581                           ;incstack = 0
 22582  01B416  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 22583                           
 22584                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22585  01B41C  0012               	return		;funcret
 22586  01B41E                     __end_of_display_help:
 22587                           	opt callstack 0
 22588                           
 22589 ;; *************** function _check_enter_button *****************
 22590 ;; Defined at:
 22591 ;;		line 42 in file "hid.c"
 22592 ;; Parameters:    Size  Location     Type
 22593 ;;  h               1  [STACK] PTR struct H_data
 22594 ;;		 -> H(7), 
 22595 ;; Auto vars:     Size  Location     Type
 22596 ;;		None
 22597 ;; Return value:  Size  Location     Type
 22598 ;;                  1  [STACK] _Bool 
 22599 ;; Registers used:
 22600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22601 ;; Tracked objects:
 22602 ;;		On entry : 0/0
 22603 ;;		On exit  : 0/0
 22604 ;;		Unchanged: 0/0
 22605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22610 ;;Total ram usage:        0 bytes
 22611 ;; Hardware stack levels used:    1
 22612 ;; Hardware stack levels required when called:   15
 22613 ;; This function calls:
 22614 ;;		Nothing
 22615 ;; This function is called by:
 22616 ;;		_main
 22617 ;; This function uses a reentrant model
 22618 ;;
 22619                           
 22620                           	psect	text91
 22621  01A98C                     __ptext91:
 22622                           	opt callstack 0
 22623  01A98C                     _check_enter_button:
 22624                           	opt callstack 15
 22625                           
 22626                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 22627                           ;stkvar	_h @ sp[(0)+-1]
 22628                           
 22629                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22630                           ;incstack = 0
 22631  01A98C  0EFF               	movlw	-1
 22632  01A98E  50E3               	movf	plusw1,w,c
 22633  01A990  6ED9               	movwf	fsr2l,c
 22634  01A992  6ADA               	clrf	fsr2h,c
 22635  01A994  0E04               	movlw	4
 22636  01A996  26D9               	addwf	fsr2l,f,c
 22637  01A998  50DF               	movf	indf2,w,c
 22638  01A99A  A4D8               	btfss	status,2,c
 22639  01A99C  D013               	goto	l10814
 22640                           
 22641                           ;stkvar	_h @ sp[(0)+-1]
 22642  01A99E  0EFF               	movlw	-1
 22643  01A9A0  50E3               	movf	plusw1,w,c
 22644  01A9A2  6ED9               	movwf	fsr2l,c
 22645  01A9A4  6ADA               	clrf	fsr2h,c
 22646  01A9A6  0E05               	movlw	5
 22647  01A9A8  26D9               	addwf	fsr2l,f,c
 22648  01A9AA  50DF               	movf	indf2,w,c
 22649  01A9AC  A4D8               	btfss	status,2,c
 22650  01A9AE  D00A               	goto	l10814
 22651                           
 22652                           ;hid.c: 45:   h->wait_enter = 1;
 22653                           ;stkvar	_h @ sp[(0)+-1]
 22654  01A9B0  0EFF               	movlw	-1
 22655  01A9B2  50E3               	movf	plusw1,w,c
 22656  01A9B4  6ED9               	movwf	fsr2l,c
 22657  01A9B6  6ADA               	clrf	fsr2h,c
 22658  01A9B8  0E04               	movlw	4
 22659  01A9BA  26D9               	addwf	fsr2l,f,c
 22660  01A9BC  0E01               	movlw	1
 22661  01A9BE  6EDF               	movwf	indf2,c
 22662                           
 22663                           ;hid.c: 46:   return 1;
 22664  01A9C0  0E01               	movlw	1
 22665  01A9C2  D001               	goto	L25
 22666  01A9C4                     l10814:
 22667                           
 22668                           ;hid.c: 48:  return 0;
 22669  01A9C4  0E00               	movlw	0
 22670  01A9C6                     L25:
 22671  01A9C6  6E01               	movwf	btemp^0,c
 22672                           
 22673                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 22674  01A9C8  52E5               	movf	postdec1,f,c
 22675  01A9CA  0012               	return		;funcret
 22676  01A9CC                     __end_of_check_enter_button:
 22677                           	opt callstack 0
 22678                           
 22679 ;; *************** function _calc_ror_data *****************
 22680 ;; Defined at:
 22681 ;;		line 101 in file "mbmc.c"
 22682 ;; Parameters:    Size  Location     Type
 22683 ;;		None
 22684 ;; Auto vars:     Size  Location     Type
 22685 ;;		None
 22686 ;; Return value:  Size  Location     Type
 22687 ;;                  1  [STACK] void 
 22688 ;; Registers used:
 22689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22690 ;; Tracked objects:
 22691 ;;		On entry : 0/39
 22692 ;;		On exit  : 0/0
 22693 ;;		Unchanged: 0/0
 22694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22699 ;;Total ram usage:        0 bytes
 22700 ;; Hardware stack levels used:    1
 22701 ;; Hardware stack levels required when called:   18
 22702 ;; This function calls:
 22703 ;;		___flge
 22704 ;;		___flsub
 22705 ;;		_conv_raw_result
 22706 ;;		_fabsf
 22707 ;; This function is called by:
 22708 ;;		_main
 22709 ;; This function uses a reentrant model
 22710 ;;
 22711                           
 22712                           	psect	text92
 22713  017FC4                     __ptext92:
 22714                           	opt callstack 0
 22715  017FC4                     _calc_ror_data:
 22716                           	opt callstack 12
 22717                           
 22718                           ;mbmc.c: 103:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 105:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 22719                           
 22720                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22721                           ;incstack = 0
 22722  017FC4  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 22723  017FCA  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 22724  017FD0  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 22725  017FD6  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 22726  017FDC  0E00               	movlw	0
 22727  017FDE  6EE6               	movwf	postinc1,c
 22728  017FE0  0E00               	movlw	0
 22729  017FE2  6EE6               	movwf	postinc1,c
 22730  017FE4  EC6F  F0A5         	call	_conv_raw_result	;wreg free
 22731  017FE8  0060  F007  FFE6   	movff	btemp,postinc1
 22732  017FEE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22733  017FF4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22734  017FFA  0060  F013  FFE6   	movff	btemp+3,postinc1
 22735  018000  ECD7  F0D3         	call	___flsub	;wreg free
 22736  018004  0060  F007  FFE6   	movff	btemp,postinc1
 22737  01800A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22738  018010  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22739  018016  0060  F013  FFE6   	movff	btemp+3,postinc1
 22740  01801C  EC90  F0CC         	call	_fabsf	;wreg free
 22741  018020  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 22742  018026  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 22743  01802C  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 22744  018032  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 22745                           
 22746                           ;mbmc.c: 106:  bcror = conv_raw_result(C_BATT, CONV);
 22747  018038  0E00               	movlw	0
 22748  01803A  6EE6               	movwf	postinc1,c
 22749  01803C  0E00               	movlw	0
 22750  01803E  6EE6               	movwf	postinc1,c
 22751  018040  EC6F  F0A5         	call	_conv_raw_result	;wreg free
 22752  018044  0060  F004  F086   	movff	btemp,calc_ror_data@bcror
 22753  01804A  0060  F008  F087   	movff	btemp+1,calc_ror_data@bcror+1
 22754  018050  0060  F00C  F088   	movff	btemp+2,calc_ror_data@bcror+2
 22755  018056  0060  F010  F089   	movff	btemp+3,calc_ror_data@bcror+3
 22756                           
 22757                           ;mbmc.c: 107:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 22758  01805C  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 22759  018062  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 22760  018068  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 22761  01806E  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 22762  018074  0E00               	movlw	0
 22763  018076  6EE6               	movwf	postinc1,c
 22764  018078  0E04               	movlw	4
 22765  01807A  6EE6               	movwf	postinc1,c
 22766  01807C  EC6F  F0A5         	call	_conv_raw_result	;wreg free
 22767  018080  0060  F007  FFE6   	movff	btemp,postinc1
 22768  018086  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22769  01808C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22770  018092  0060  F013  FFE6   	movff	btemp+3,postinc1
 22771  018098  ECD7  F0D3         	call	___flsub	;wreg free
 22772  01809C  0060  F007  FFE6   	movff	btemp,postinc1
 22773  0180A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22774  0180A8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22775  0180AE  0060  F013  FFE6   	movff	btemp+3,postinc1
 22776  0180B4  EC90  F0CC         	call	_fabsf	;wreg free
 22777  0180B8  0060  F004  F168   	movff	btemp,_C+104	;volatile
 22778  0180BE  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 22779  0180C4  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 22780  0180CA  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 22781                           
 22782                           ;mbmc.c: 108:  if (C.bv_ror < 0.0051)
 22783  0180D0  0EE7               	movlw	231
 22784  0180D2  6EE6               	movwf	postinc1,c
 22785  0180D4  0E1D               	movlw	29
 22786  0180D6  6EE6               	movwf	postinc1,c
 22787  0180D8  0EA7               	movlw	167
 22788  0180DA  6EE6               	movwf	postinc1,c
 22789  0180DC  0E3B               	movlw	59
 22790  0180DE  6EE6               	movwf	postinc1,c
 22791  0180E0  0060  F5A3  FFE6   	movff	_C+104,postinc1
 22792  0180E6  0060  F5A7  FFE6   	movff	_C+105,postinc1
 22793  0180EC  0060  F5AB  FFE6   	movff	_C+106,postinc1
 22794  0180F2  0060  F5AF  FFE6   	movff	_C+107,postinc1
 22795  0180F8  EC0D  F0C2         	call	___flge	;wreg free
 22796  0180FC  B001               	btfsc	btemp& (0+255),0,c
 22797  0180FE  D009               	goto	l10542
 22798                           
 22799                           ;mbmc.c: 109:   C.bv_ror = 0.0140 + 0.0001;
 22800  018100  0EB0               	movlw	176
 22801  018102  0101               	movlb	1	; () banked
 22802  018104  6F68               	movwf	(_C+104)& (0+255),b	;volatile
 22803  018106  0E03               	movlw	3
 22804  018108  6F69               	movwf	(_C+105)& (0+255),b	;volatile
 22805  01810A  0E67               	movlw	103
 22806  01810C  6F6A               	movwf	(_C+106)& (0+255),b	;volatile
 22807  01810E  0E3C               	movlw	60
 22808  018110  6F6B               	movwf	(_C+107)& (0+255),b	;volatile
 22809  018112                     l10542:
 22810                           
 22811                           ;mbmc.c: 110:  bvror = conv_raw_result(V_BAT, CONV);
 22812  018112  0E00               	movlw	0
 22813  018114  6EE6               	movwf	postinc1,c
 22814  018116  0E04               	movlw	4
 22815  018118  6EE6               	movwf	postinc1,c
 22816  01811A  EC6F  F0A5         	call	_conv_raw_result	;wreg free
 22817  01811E  0060  F004  F08A   	movff	btemp,calc_ror_data@bvror
 22818  018124  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 22819  01812A  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 22820  018130  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 22821                           
 22822                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 22823  018136  0012               	return		;funcret
 22824  018138                     __end_of_calc_ror_data:
 22825                           	opt callstack 0
 22826                           
 22827 ;; *************** function _fabsf *****************
 22828 ;; Defined at:
 22829 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 22830 ;; Parameters:    Size  Location     Type
 22831 ;;  x               4  [STACK] float 
 22832 ;; Auto vars:     Size  Location     Type
 22833 ;;  u               4  [STACK] struct .
 22834 ;; Return value:  Size  Location     Type
 22835 ;;                  4  [STACK] float 
 22836 ;; Registers used:
 22837 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 22838 ;; Tracked objects:
 22839 ;;		On entry : 0/0
 22840 ;;		On exit  : 0/0
 22841 ;;		Unchanged: 0/0
 22842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22847 ;;Total ram usage:        0 bytes
 22848 ;; Hardware stack levels used:    1
 22849 ;; Hardware stack levels required when called:   15
 22850 ;; This function calls:
 22851 ;;		Nothing
 22852 ;; This function is called by:
 22853 ;;		_calc_ror_data
 22854 ;;		_esr_check
 22855 ;; This function uses a reentrant model
 22856 ;;
 22857                           
 22858                           	psect	text93
 22859  019920                     __ptext93:
 22860                           	opt callstack 0
 22861  019920                     _fabsf:
 22862                           	opt callstack 0
 22863                           
 22864                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22865  019920  52E6               	movf	postinc1,f,c
 22866  019922  52E6               	movf	postinc1,f,c
 22867  019924  52E6               	movf	postinc1,f,c
 22868  019926  52E6               	movf	postinc1,f,c
 22869                           
 22870                           ;incstack = 0
 22871  019928  0060  F1F8  F009   	movff	fabsf@F463,btemp+8
 22872  01992E  0060  F1FC  F00A   	movff	fabsf@F463+1,btemp+9
 22873  019934  0060  F200  F00B   	movff	fabsf@F463+2,btemp+10
 22874  01993A  0060  F204  F00C   	movff	fabsf@F463+3,btemp+11
 22875                           
 22876                           ;stkvar	_u @ sp[(-4)+0]
 22877  019940  0EFC               	movlw	-4
 22878  019942  0060  F027  FFE3   	movff	btemp+8,plusw1
 22879  019948  0EFD               	movlw	-3
 22880  01994A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22881  019950  0EFE               	movlw	-2
 22882  019952  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22883  019958  0EFF               	movlw	-1
 22884  01995A  0060  F033  FFE3   	movff	btemp+11,plusw1
 22885                           
 22886                           ;stkvar	_x @ sp[(-4)+-4]
 22887  019960  0EF8               	movlw	-8
 22888  019962  006F FF8C  F009    	movff	plusw1,btemp+8
 22889  019968  0EF9               	movlw	-7
 22890  01996A  006F FF8C  F00A    	movff	plusw1,btemp+9
 22891  019970  0EFA               	movlw	-6
 22892  019972  006F FF8C  F00B    	movff	plusw1,btemp+10
 22893  019978  0EFB               	movlw	-5
 22894  01997A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22895                           
 22896                           ;stkvar	_u @ sp[(-4)+0]
 22897  019980  0EFC               	movlw	-4
 22898  019982  0060  F027  FFE3   	movff	btemp+8,plusw1
 22899  019988  0EFD               	movlw	-3
 22900  01998A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22901  019990  0EFE               	movlw	-2
 22902  019992  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22903  019998  0EFF               	movlw	-1
 22904  01999A  0060  F033  FFE3   	movff	btemp+11,plusw1
 22905                           
 22906                           ;stkvar	_u @ sp[(-4)+0]
 22907  0199A0  0EFF               	movlw	-1
 22908  0199A2  9EE3               	bcf	plusw1,7,c
 22909                           
 22910                           ;stkvar	_u @ sp[(-4)+0]
 22911  0199A4  0EFC               	movlw	-4
 22912  0199A6  006F FF8C  F001    	movff	plusw1,btemp
 22913  0199AC  0EFD               	movlw	-3
 22914  0199AE  006F FF8C  F002    	movff	plusw1,btemp+1
 22915  0199B4  0EFE               	movlw	-2
 22916  0199B6  006F FF8C  F003    	movff	plusw1,btemp+2
 22917  0199BC  0EFF               	movlw	-1
 22918  0199BE  006F FF8C  F004    	movff	plusw1,btemp+3
 22919                           
 22920                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22921  0199C4  0EF8               	movlw	248
 22922  0199C6  26E1               	addwf	fsr1l,f,c
 22923  0199C8  0EFF               	movlw	255
 22924  0199CA  22E2               	addwfc	fsr1h,f,c
 22925  0199CC  0012               	return		;funcret
 22926  0199CE                     __end_of_fabsf:
 22927                           	opt callstack 0
 22928                           
 22929 ;; *************** function _conv_raw_result *****************
 22930 ;; Defined at:
 22931 ;;		line 95 in file "daq.c"
 22932 ;; Parameters:    Size  Location     Type
 22933 ;;  chan            1  [STACK] const enum E16582
 22934 ;;  to_what         1  [STACK] const enum E16644
 22935 ;; Auto vars:     Size  Location     Type
 22936 ;;		None
 22937 ;; Return value:  Size  Location     Type
 22938 ;;                  4  [STACK] float 
 22939 ;; Registers used:
 22940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22941 ;; Tracked objects:
 22942 ;;		On entry : 0/39
 22943 ;;		On exit  : 0/0
 22944 ;;		Unchanged: 0/0
 22945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22950 ;;Total ram usage:        0 bytes
 22951 ;; Hardware stack levels used:    1
 22952 ;; Hardware stack levels required when called:   17
 22953 ;; This function calls:
 22954 ;;		___fldiv
 22955 ;;		___flmul
 22956 ;;		___flsub
 22957 ;;		___xxtofl
 22958 ;;		_get_raw_result
 22959 ;;		_nanf
 22960 ;; This function is called by:
 22961 ;;		_main
 22962 ;;		_convert_adc_data
 22963 ;;		_calc_ror_data
 22964 ;;		_init_bsoc
 22965 ;;		_esr_check
 22966 ;; This function uses a reentrant model
 22967 ;;
 22968                           
 22969                           	psect	text94
 22970  014ADE                     __ptext94:
 22971                           	opt callstack 0
 22972  014ADE                     _conv_raw_result:
 22973                           	opt callstack 12
 22974                           
 22975                           ;daq.c: 95: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 96: {;daq.c: 98:  switch (to_what) {
 22976                           
 22977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22978                           ;incstack = 0
 22979  014ADE  D242               	goto	l10076
 22980  014AE0                     l10022:
 22981                           
 22982                           ;daq.c: 100:   if (!(0b0011110001110111 >> chan & 0x1))
 22983                           ;stkvar	_chan @ sp[(0)+-1]
 22984  014AE0  0EFF               	movlw	-1
 22985  014AE2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22986  014AE8  0E77               	movlw	119
 22987  014AEA  6E09               	movwf	(btemp+8)^0,c
 22988  014AEC  0E3C               	movlw	60
 22989  014AEE  6E0A               	movwf	(btemp+9)^0,c
 22990  014AF0  2A0C               	incf	(btemp+11)^0,f,c
 22991  014AF2  D003               	goto	u9044
 22992  014AF4                     u9045:
 22993  014AF4  340A               	rlcf	(btemp+9)^0,w,c
 22994  014AF6  320A               	rrcf	(btemp+9)^0,f,c
 22995  014AF8  3209               	rrcf	(btemp+8)^0,f,c
 22996  014AFA                     u9044:
 22997  014AFA  2E0C               	decfsz	(btemp+11)^0,f,c
 22998  014AFC  D7FB               	goto	u9045
 22999  014AFE  B009               	btfsc	(btemp+8)^0,0,c
 23000  014B00  D007               	goto	l10028
 23001                           
 23002                           ;daq.c: 101:    return nanf("");
 23003  014B02  0E69               	movlw	low (STR_56+84)
 23004  014B04  6EE6               	movwf	postinc1,c
 23005  014B06  0EFD               	movlw	high (STR_56+84)
 23006  014B08  6EE6               	movwf	postinc1,c
 23007  014B0A  ECE1  F0D1         	call	_nanf	;wreg free
 23008  014B0E  D23A               	goto	l1771
 23009  014B10                     l10028:
 23010                           
 23011                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1) {
 23012                           ;stkvar	_chan @ sp[(0)+-1]
 23013  014B10  0EFF               	movlw	-1
 23014  014B12  006F FF8C  F00C    	movff	plusw1,btemp+11
 23015  014B18  0E03               	movlw	3
 23016  014B1A  6E09               	movwf	(btemp+8)^0,c
 23017  014B1C  0E00               	movlw	0
 23018  014B1E  6E0A               	movwf	(btemp+9)^0,c
 23019  014B20  2A0C               	incf	(btemp+11)^0,f,c
 23020  014B22  D003               	goto	u9064
 23021  014B24                     u9065:
 23022  014B24  340A               	rlcf	(btemp+9)^0,w,c
 23023  014B26  320A               	rrcf	(btemp+9)^0,f,c
 23024  014B28  3209               	rrcf	(btemp+8)^0,f,c
 23025  014B2A                     u9064:
 23026  014B2A  2E0C               	decfsz	(btemp+11)^0,f,c
 23027  014B2C  D7FB               	goto	u9065
 23028  014B2E  A009               	btfss	(btemp+8)^0,0,c
 23029  014B30  D0EB               	goto	l10042
 23030                           
 23031                           ;daq.c: 104:    if (0b0000000000000001 >> chan & 0x1) {
 23032                           ;stkvar	_chan @ sp[(0)+-1]
 23033  014B32  0EFF               	movlw	-1
 23034  014B34  006F FF8C  F00C    	movff	plusw1,btemp+11
 23035  014B3A  0E01               	movlw	1
 23036  014B3C  6E09               	movwf	(btemp+8)^0,c
 23037  014B3E  0E00               	movlw	0
 23038  014B40  6E0A               	movwf	(btemp+9)^0,c
 23039  014B42  2A0C               	incf	(btemp+11)^0,f,c
 23040  014B44  D003               	goto	u9084
 23041  014B46                     u9085:
 23042  014B46  340A               	rlcf	(btemp+9)^0,w,c
 23043  014B48  320A               	rrcf	(btemp+9)^0,f,c
 23044  014B4A  3209               	rrcf	(btemp+8)^0,f,c
 23045  014B4C                     u9084:
 23046  014B4C  2E0C               	decfsz	(btemp+11)^0,f,c
 23047  014B4E  D7FB               	goto	u9085
 23048  014B50  A009               	btfss	(btemp+8)^0,0,c
 23049  014B52  D06D               	goto	l10038
 23050                           
 23051                           ;daq.c: 105:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.0850
      +                          000;
 23052  014B54  0E7B               	movlw	123
 23053  014B56  6EE6               	movwf	postinc1,c
 23054  014B58  0E14               	movlw	20
 23055  014B5A  6EE6               	movwf	postinc1,c
 23056  014B5C  0EAE               	movlw	174
 23057  014B5E  6EE6               	movwf	postinc1,c
 23058  014B60  0E3D               	movlw	61
 23059  014B62  6EE6               	movwf	postinc1,c
 23060  014B64  0060  F390  F009   	movff	_R+32,btemp+8	;volatile
 23061  014B6A  0060  F394  F00A   	movff	_R+33,btemp+9	;volatile
 23062  014B70  0E00               	movlw	0
 23063  014B72  BE0A               	btfsc	(btemp+9)^0,7,c
 23064  014B74  0EFF               	movlw	255
 23065  014B76  6E0B               	movwf	(btemp+10)^0,c
 23066  014B78  6E0C               	movwf	(btemp+11)^0,c
 23067  014B7A  0060  F027  FFE6   	movff	btemp+8,postinc1
 23068  014B80  0060  F02B  FFE6   	movff	btemp+9,postinc1
 23069  014B86  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23070  014B8C  0060  F033  FFE6   	movff	btemp+11,postinc1
 23071  014B92  0E01               	movlw	1
 23072  014B94  6EE6               	movwf	postinc1,c
 23073  014B96  EC77  F0BB         	call	___xxtofl	;wreg free
 23074  014B9A  0060  F007  FFE6   	movff	btemp,postinc1
 23075  014BA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23076  014BA6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23077  014BAC  0060  F013  FFE6   	movff	btemp+3,postinc1
 23078                           
 23079                           ;stkvar	_chan @ sp[(-8)+-1]
 23080  014BB2  0EF7               	movlw	-9
 23081  014BB4  50E3               	movf	plusw1,w,c
 23082  014BB6  6EE6               	movwf	postinc1,c
 23083  014BB8  EC0C  F0D9         	call	_get_raw_result	;wreg free
 23084  014BBC  0060  F004  F00B   	movff	btemp,btemp+10
 23085  014BC2  0060  F008  F00C   	movff	btemp+1,btemp+11
 23086  014BC8  500B               	movf	(btemp+10)^0,w,c
 23087  014BCA  6E05               	movwf	(btemp+4)^0,c
 23088  014BCC  500C               	movf	(btemp+11)^0,w,c
 23089  014BCE  6E06               	movwf	(btemp+5)^0,c
 23090  014BD0  6A07               	clrf	(btemp+6)^0,c
 23091  014BD2  6A08               	clrf	(btemp+7)^0,c
 23092  014BD4  0060  F017  FFE6   	movff	btemp+4,postinc1
 23093  014BDA  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23094  014BE0  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23095  014BE6  0060  F023  FFE6   	movff	btemp+7,postinc1
 23096  014BEC  0E00               	movlw	0
 23097  014BEE  6EE6               	movwf	postinc1,c
 23098  014BF0  EC77  F0BB         	call	___xxtofl	;wreg free
 23099  014BF4  0060  F007  FFE6   	movff	btemp,postinc1
 23100  014BFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23101  014C00  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23102  014C06  0060  F013  FFE6   	movff	btemp+3,postinc1
 23103  014C0C  ECD7  F0D3         	call	___flsub	;wreg free
 23104  014C10  0060  F007  FFE6   	movff	btemp,postinc1
 23105  014C16  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23106  014C1C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23107  014C22  0060  F013  FFE6   	movff	btemp+3,postinc1
 23108  014C28  EC70  F097         	call	___flmul	;wreg free
 23109  014C2C  D1AB               	goto	l1771
 23110  014C2E                     l10038:
 23111                           
 23112                           ;daq.c: 107:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.0350
      +                          000;
 23113  014C2E  0E29               	movlw	41
 23114  014C30  6EE6               	movwf	postinc1,c
 23115  014C32  0E5C               	movlw	92
 23116  014C34  6EE6               	movwf	postinc1,c
 23117  014C36  0E0F               	movlw	15
 23118  014C38  6EE6               	movwf	postinc1,c
 23119  014C3A  0E3D               	movlw	61
 23120  014C3C  6EE6               	movwf	postinc1,c
 23121  014C3E  0060  F398  F009   	movff	_R+34,btemp+8	;volatile
 23122  014C44  0060  F39C  F00A   	movff	_R+35,btemp+9	;volatile
 23123  014C4A  0E00               	movlw	0
 23124  014C4C  BE0A               	btfsc	(btemp+9)^0,7,c
 23125  014C4E  0EFF               	movlw	255
 23126  014C50  6E0B               	movwf	(btemp+10)^0,c
 23127  014C52  6E0C               	movwf	(btemp+11)^0,c
 23128  014C54  0060  F027  FFE6   	movff	btemp+8,postinc1
 23129  014C5A  0060  F02B  FFE6   	movff	btemp+9,postinc1
 23130  014C60  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23131  014C66  0060  F033  FFE6   	movff	btemp+11,postinc1
 23132  014C6C  0E01               	movlw	1
 23133  014C6E  6EE6               	movwf	postinc1,c
 23134  014C70  EC77  F0BB         	call	___xxtofl	;wreg free
 23135  014C74  0060  F007  FFE6   	movff	btemp,postinc1
 23136  014C7A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23137  014C80  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23138  014C86  0060  F013  FFE6   	movff	btemp+3,postinc1
 23139                           
 23140                           ;stkvar	_chan @ sp[(-8)+-1]
 23141  014C8C  0EF7               	movlw	-9
 23142  014C8E  50E3               	movf	plusw1,w,c
 23143  014C90  6EE6               	movwf	postinc1,c
 23144  014C92  EC0C  F0D9         	call	_get_raw_result	;wreg free
 23145  014C96  0060  F004  F00B   	movff	btemp,btemp+10
 23146  014C9C  0060  F008  F00C   	movff	btemp+1,btemp+11
 23147  014CA2  500B               	movf	(btemp+10)^0,w,c
 23148  014CA4  6E05               	movwf	(btemp+4)^0,c
 23149  014CA6  500C               	movf	(btemp+11)^0,w,c
 23150  014CA8  6E06               	movwf	(btemp+5)^0,c
 23151  014CAA  6A07               	clrf	(btemp+6)^0,c
 23152  014CAC  6A08               	clrf	(btemp+7)^0,c
 23153  014CAE  0060  F017  FFE6   	movff	btemp+4,postinc1
 23154  014CB4  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23155  014CBA  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23156  014CC0  0060  F023  FFE6   	movff	btemp+7,postinc1
 23157  014CC6  0E00               	movlw	0
 23158  014CC8  6EE6               	movwf	postinc1,c
 23159  014CCA  EC77  F0BB         	call	___xxtofl	;wreg free
 23160  014CCE  0060  F007  FFE6   	movff	btemp,postinc1
 23161  014CD4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23162  014CDA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23163  014CE0  0060  F013  FFE6   	movff	btemp+3,postinc1
 23164  014CE6  ECD7  F0D3         	call	___flsub	;wreg free
 23165  014CEA  0060  F007  FFE6   	movff	btemp,postinc1
 23166  014CF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23167  014CF6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23168  014CFC  0060  F013  FFE6   	movff	btemp+3,postinc1
 23169  014D02  EC70  F097         	call	___flmul	;wreg free
 23170  014D06  D13E               	goto	l1771
 23171  014D08                     l10042:
 23172                           
 23173                           ;daq.c: 110:    if (0b0000100000000000 >> chan & 0x1) {
 23174                           ;stkvar	_chan @ sp[(0)+-1]
 23175  014D08  0EFF               	movlw	-1
 23176  014D0A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23177  014D10  0E00               	movlw	0
 23178  014D12  6E09               	movwf	(btemp+8)^0,c
 23179  014D14  0E08               	movlw	8
 23180  014D16  6E0A               	movwf	(btemp+9)^0,c
 23181  014D18  2A0C               	incf	(btemp+11)^0,f,c
 23182  014D1A  D003               	goto	u9104
 23183  014D1C                     u9105:
 23184  014D1C  340A               	rlcf	(btemp+9)^0,w,c
 23185  014D1E  320A               	rrcf	(btemp+9)^0,f,c
 23186  014D20  3209               	rrcf	(btemp+8)^0,f,c
 23187  014D22                     u9104:
 23188  014D22  2E0C               	decfsz	(btemp+11)^0,f,c
 23189  014D24  D7FB               	goto	u9105
 23190  014D26  A009               	btfss	(btemp+8)^0,0,c
 23191  014D28  D008               	goto	l10050
 23192                           
 23193                           ;daq.c: 111:     return 25.0;
 23194  014D2A  0E00               	movlw	0
 23195  014D2C  6E01               	movwf	btemp^0,c
 23196  014D2E  0E00               	movlw	0
 23197  014D30  6E02               	movwf	(btemp+1)^0,c
 23198  014D32  0EC8               	movlw	200
 23199  014D34  6E03               	movwf	(btemp+2)^0,c
 23200  014D36  0E41               	movlw	65
 23201  014D38  D113               	goto	L26
 23202  014D3A                     l10050:
 23203                           
 23204                           ;daq.c: 113:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23205  014D3A  0E00               	movlw	0
 23206  014D3C  6EE6               	movwf	postinc1,c
 23207  014D3E  0E00               	movlw	0
 23208  014D40  6EE6               	movwf	postinc1,c
 23209  014D42  0E7A               	movlw	122
 23210  014D44  6EE6               	movwf	postinc1,c
 23211  014D46  0E44               	movlw	68
 23212  014D48  6EE6               	movwf	postinc1,c
 23213  014D4A  0E61               	movlw	97
 23214  014D4C  6EE6               	movwf	postinc1,c
 23215  014D4E  0E03               	movlw	3
 23216  014D50  6EE6               	movwf	postinc1,c
 23217  014D52  0E84               	movlw	132
 23218  014D54  6EE6               	movwf	postinc1,c
 23219  014D56  0E40               	movlw	64
 23220  014D58  6EE6               	movwf	postinc1,c
 23221                           
 23222                           ;stkvar	_chan @ sp[(-8)+-1]
 23223  014D5A  0EF7               	movlw	-9
 23224  014D5C  50E3               	movf	plusw1,w,c
 23225  014D5E  6EE6               	movwf	postinc1,c
 23226  014D60  EC0C  F0D9         	call	_get_raw_result	;wreg free
 23227  014D64  0060  F004  F00B   	movff	btemp,btemp+10
 23228  014D6A  0060  F008  F00C   	movff	btemp+1,btemp+11
 23229  014D70  500B               	movf	(btemp+10)^0,w,c
 23230  014D72  6E05               	movwf	(btemp+4)^0,c
 23231  014D74  500C               	movf	(btemp+11)^0,w,c
 23232  014D76  6E06               	movwf	(btemp+5)^0,c
 23233  014D78  6A07               	clrf	(btemp+6)^0,c
 23234  014D7A  6A08               	clrf	(btemp+7)^0,c
 23235  014D7C  0060  F017  FFE6   	movff	btemp+4,postinc1
 23236  014D82  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23237  014D88  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23238  014D8E  0060  F023  FFE6   	movff	btemp+7,postinc1
 23239  014D94  0E00               	movlw	0
 23240  014D96  6EE6               	movwf	postinc1,c
 23241  014D98  EC77  F0BB         	call	___xxtofl	;wreg free
 23242  014D9C  0060  F007  FFE6   	movff	btemp,postinc1
 23243  014DA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23244  014DA8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23245  014DAE  0060  F013  FFE6   	movff	btemp+3,postinc1
 23246  014DB4  EC70  F097         	call	___flmul	;wreg free
 23247  014DB8  0060  F007  FFE6   	movff	btemp,postinc1
 23248  014DBE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23249  014DC4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23250  014DCA  0060  F013  FFE6   	movff	btemp+3,postinc1
 23251  014DD0  ECB2  F0A2         	call	___fldiv	;wreg free
 23252  014DD4  D0D7               	goto	l1771
 23253  014DD6                     l10054:
 23254                           
 23255                           ;daq.c: 118:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 23256                           ;stkvar	_chan @ sp[(0)+-1]
 23257  014DD6  0EFF               	movlw	-1
 23258  014DD8  006F FF8C  F00C    	movff	plusw1,btemp+11
 23259  014DDE  0E03               	movlw	3
 23260  014DE0  6E09               	movwf	(btemp+8)^0,c
 23261  014DE2  0E00               	movlw	0
 23262  014DE4  6E0A               	movwf	(btemp+9)^0,c
 23263  014DE6  2A0C               	incf	(btemp+11)^0,f,c
 23264  014DE8  D003               	goto	u9124
 23265  014DEA                     u9125:
 23266  014DEA  340A               	rlcf	(btemp+9)^0,w,c
 23267  014DEC  320A               	rrcf	(btemp+9)^0,f,c
 23268  014DEE  3209               	rrcf	(btemp+8)^0,f,c
 23269  014DF0                     u9124:
 23270  014DF0  2E0C               	decfsz	(btemp+11)^0,f,c
 23271  014DF2  D7FB               	goto	u9125
 23272  014DF4  B009               	btfsc	(btemp+8)^0,0,c
 23273  014DF6  D011               	goto	u9150
 23274                           
 23275                           ;stkvar	_chan @ sp[(0)+-1]
 23276  014DF8  0EFF               	movlw	-1
 23277  014DFA  006F FF8C  F00C    	movff	plusw1,btemp+11
 23278  014E00  0E00               	movlw	0
 23279  014E02  6E09               	movwf	(btemp+8)^0,c
 23280  014E04  0E08               	movlw	8
 23281  014E06  6E0A               	movwf	(btemp+9)^0,c
 23282  014E08  2A0C               	incf	(btemp+11)^0,f,c
 23283  014E0A  D003               	goto	u9144
 23284  014E0C                     u9145:
 23285  014E0C  340A               	rlcf	(btemp+9)^0,w,c
 23286  014E0E  320A               	rrcf	(btemp+9)^0,f,c
 23287  014E10  3209               	rrcf	(btemp+8)^0,f,c
 23288  014E12                     u9144:
 23289  014E12  2E0C               	decfsz	(btemp+11)^0,f,c
 23290  014E14  D7FB               	goto	u9145
 23291  014E16  A009               	btfss	(btemp+8)^0,0,c
 23292  014E18  D04E               	goto	l10062
 23293  014E1A                     u9150:
 23294                           
 23295                           ;daq.c: 119:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 23296  014E1A  0E00               	movlw	0
 23297  014E1C  6EE6               	movwf	postinc1,c
 23298  014E1E  0E00               	movlw	0
 23299  014E20  6EE6               	movwf	postinc1,c
 23300  014E22  0E7A               	movlw	122
 23301  014E24  6EE6               	movwf	postinc1,c
 23302  014E26  0E44               	movlw	68
 23303  014E28  6EE6               	movwf	postinc1,c
 23304  014E2A  0E00               	movlw	0
 23305  014E2C  6EE6               	movwf	postinc1,c
 23306  014E2E  0E00               	movlw	0
 23307  014E30  6EE6               	movwf	postinc1,c
 23308  014E32  0E20               	movlw	32
 23309  014E34  6EE6               	movwf	postinc1,c
 23310  014E36  0E3F               	movlw	63
 23311  014E38  6EE6               	movwf	postinc1,c
 23312                           
 23313                           ;stkvar	_chan @ sp[(-8)+-1]
 23314  014E3A  0EF7               	movlw	-9
 23315  014E3C  50E3               	movf	plusw1,w,c
 23316  014E3E  6EE6               	movwf	postinc1,c
 23317  014E40  EC0C  F0D9         	call	_get_raw_result	;wreg free
 23318  014E44  0060  F004  F00B   	movff	btemp,btemp+10
 23319  014E4A  0060  F008  F00C   	movff	btemp+1,btemp+11
 23320  014E50  500B               	movf	(btemp+10)^0,w,c
 23321  014E52  6E05               	movwf	(btemp+4)^0,c
 23322  014E54  500C               	movf	(btemp+11)^0,w,c
 23323  014E56  6E06               	movwf	(btemp+5)^0,c
 23324  014E58  6A07               	clrf	(btemp+6)^0,c
 23325  014E5A  6A08               	clrf	(btemp+7)^0,c
 23326  014E5C  0060  F017  FFE6   	movff	btemp+4,postinc1
 23327  014E62  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23328  014E68  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23329  014E6E  0060  F023  FFE6   	movff	btemp+7,postinc1
 23330  014E74  0E00               	movlw	0
 23331  014E76  6EE6               	movwf	postinc1,c
 23332  014E78  EC77  F0BB         	call	___xxtofl	;wreg free
 23333  014E7C  0060  F007  FFE6   	movff	btemp,postinc1
 23334  014E82  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23335  014E88  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23336  014E8E  0060  F013  FFE6   	movff	btemp+3,postinc1
 23337  014E94  EC70  F097         	call	___flmul	;wreg free
 23338  014E98  0060  F007  FFE6   	movff	btemp,postinc1
 23339  014E9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23340  014EA4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23341  014EAA  0060  F013  FFE6   	movff	btemp+3,postinc1
 23342  014EB0  ECB2  F0A2         	call	___fldiv	;wreg free
 23343  014EB4  D067               	goto	l1771
 23344  014EB6                     l10062:
 23345                           
 23346                           ;daq.c: 121:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23347  014EB6  0E00               	movlw	0
 23348  014EB8  6EE6               	movwf	postinc1,c
 23349  014EBA  0E00               	movlw	0
 23350  014EBC  6EE6               	movwf	postinc1,c
 23351  014EBE  0E7A               	movlw	122
 23352  014EC0  6EE6               	movwf	postinc1,c
 23353  014EC2  0E44               	movlw	68
 23354  014EC4  6EE6               	movwf	postinc1,c
 23355  014EC6  0E61               	movlw	97
 23356  014EC8  6EE6               	movwf	postinc1,c
 23357  014ECA  0E03               	movlw	3
 23358  014ECC  6EE6               	movwf	postinc1,c
 23359  014ECE  0E84               	movlw	132
 23360  014ED0  6EE6               	movwf	postinc1,c
 23361  014ED2  0E40               	movlw	64
 23362  014ED4  6EE6               	movwf	postinc1,c
 23363                           
 23364                           ;stkvar	_chan @ sp[(-8)+-1]
 23365  014ED6  0EF7               	movlw	-9
 23366  014ED8  50E3               	movf	plusw1,w,c
 23367  014EDA  6EE6               	movwf	postinc1,c
 23368  014EDC  EC0C  F0D9         	call	_get_raw_result	;wreg free
 23369  014EE0  0060  F004  F00B   	movff	btemp,btemp+10
 23370  014EE6  0060  F008  F00C   	movff	btemp+1,btemp+11
 23371  014EEC  500B               	movf	(btemp+10)^0,w,c
 23372  014EEE  6E05               	movwf	(btemp+4)^0,c
 23373  014EF0  500C               	movf	(btemp+11)^0,w,c
 23374  014EF2  6E06               	movwf	(btemp+5)^0,c
 23375  014EF4  6A07               	clrf	(btemp+6)^0,c
 23376  014EF6  6A08               	clrf	(btemp+7)^0,c
 23377  014EF8  0060  F017  FFE6   	movff	btemp+4,postinc1
 23378  014EFE  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23379  014F04  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23380  014F0A  0060  F023  FFE6   	movff	btemp+7,postinc1
 23381  014F10  0E00               	movlw	0
 23382  014F12  6EE6               	movwf	postinc1,c
 23383  014F14  EC77  F0BB         	call	___xxtofl	;wreg free
 23384  014F18  0060  F007  FFE6   	movff	btemp,postinc1
 23385  014F1E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23386  014F24  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23387  014F2A  0060  F013  FFE6   	movff	btemp+3,postinc1
 23388  014F30  EC70  F097         	call	___flmul	;wreg free
 23389  014F34  0060  F007  FFE6   	movff	btemp,postinc1
 23390  014F3A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23391  014F40  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23392  014F46  0060  F013  FFE6   	movff	btemp+3,postinc1
 23393  014F4C  ECB2  F0A2         	call	___fldiv	;wreg free
 23394  014F50  D019               	goto	l1771
 23395  014F52                     l10068:
 23396                           
 23397                           ;daq.c: 124:   return 0.0;
 23398  014F52  0E00               	movlw	0
 23399  014F54  6E01               	movwf	btemp^0,c
 23400  014F56  0E00               	movlw	0
 23401  014F58  6E02               	movwf	(btemp+1)^0,c
 23402  014F5A  0E00               	movlw	0
 23403  014F5C  6E03               	movwf	(btemp+2)^0,c
 23404  014F5E  0E00               	movlw	0
 23405  014F60                     L26:
 23406  014F60  6E04               	movwf	(btemp+3)^0,c
 23407  014F62  D010               	goto	l1771
 23408  014F64                     l10076:
 23409                           
 23410                           ;stkvar	_to_what @ sp[(0)+-2]
 23411  014F64  0EFE               	movlw	-2
 23412  014F66  50E3               	movf	plusw1,w,c
 23413  014F68  6E0B               	movwf	(btemp+10)^0,c
 23414  014F6A  6A0C               	clrf	(btemp+11)^0,c
 23415                           
 23416                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23417                           ; Switch size 1, requested type "simple"
 23418                           ; Number of cases is 1, Range of values is 0 to 0
 23419                           ; switch strategies available:
 23420                           ; Name         Instructions Cycles
 23421                           ; simple_byte            4     3 (average)
 23422                           ;	Chosen strategy is simple_byte
 23423  014F6C  500C               	movf	(btemp+11)^0,w,c
 23424  014F6E  0A00               	xorlw	0	; case 0
 23425  014F70  A4D8               	btfss	status,2,c
 23426  014F72  D7EF               	goto	l10068
 23427                           
 23428                           ; Switch size 1, requested type "simple"
 23429                           ; Number of cases is 2, Range of values is 0 to 1
 23430                           ; switch strategies available:
 23431                           ; Name         Instructions Cycles
 23432                           ; simple_byte            7     4 (average)
 23433                           ;	Chosen strategy is simple_byte
 23434  014F74  500B               	movf	(btemp+10)^0,w,c
 23435  014F76  0A00               	xorlw	0	; case 0
 23436  014F78  B4D8               	btfsc	status,2,c
 23437  014F7A  D5B2               	goto	l10022
 23438  014F7C  0A01               	xorlw	1	; case 1
 23439  014F7E  B4D8               	btfsc	status,2,c
 23440  014F80  D72A               	goto	l10054
 23441  014F82  D7E7               	goto	l10068
 23442  014F84                     l1771:
 23443                           
 23444                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23445  014F84  52E5               	movf	postdec1,f,c
 23446  014F86  52E5               	movf	postdec1,f,c
 23447  014F88  0012               	return		;funcret
 23448  014F8A                     __end_of_conv_raw_result:
 23449                           	opt callstack 0
 23450                           
 23451 ;; *************** function _nanf *****************
 23452 ;; Defined at:
 23453 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 23454 ;; Parameters:    Size  Location     Type
 23455 ;;  s               2  [STACK] PTR const unsigned char 
 23456 ;;		 -> STR_93(1), STR_55(1), 
 23457 ;; Auto vars:     Size  Location     Type
 23458 ;;  u               4  [STACK] struct .
 23459 ;; Return value:  Size  Location     Type
 23460 ;;                  4  [STACK] float 
 23461 ;; Registers used:
 23462 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23463 ;; Tracked objects:
 23464 ;;		On entry : 0/39
 23465 ;;		On exit  : 0/0
 23466 ;;		Unchanged: 0/0
 23467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23472 ;;Total ram usage:        0 bytes
 23473 ;; Hardware stack levels used:    1
 23474 ;; Hardware stack levels required when called:   15
 23475 ;; This function calls:
 23476 ;;		Nothing
 23477 ;; This function is called by:
 23478 ;;		_conv_raw_result
 23479 ;; This function uses a reentrant model
 23480 ;;
 23481                           
 23482                           	psect	text95
 23483  01A3C2                     __ptext95:
 23484                           	opt callstack 0
 23485  01A3C2                     _nanf:
 23486                           	opt callstack 0
 23487                           
 23488                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23489  01A3C2  52E6               	movf	postinc1,f,c
 23490  01A3C4  52E6               	movf	postinc1,f,c
 23491  01A3C6  52E6               	movf	postinc1,f,c
 23492  01A3C8  52E6               	movf	postinc1,f,c
 23493                           
 23494                           ;incstack = 0
 23495  01A3CA  0EFF               	movlw	255
 23496  01A3CC  6E09               	movwf	(btemp+8)^0,c
 23497  01A3CE  0EFF               	movlw	255
 23498  01A3D0  6E0A               	movwf	(btemp+9)^0,c
 23499  01A3D2  0EFF               	movlw	255
 23500  01A3D4  6E0B               	movwf	(btemp+10)^0,c
 23501  01A3D6  0E7F               	movlw	127
 23502  01A3D8  6E0C               	movwf	(btemp+11)^0,c
 23503                           
 23504                           ;stkvar	_u @ sp[(-4)+0]
 23505  01A3DA  0EFC               	movlw	-4
 23506  01A3DC  0060  F027  FFE3   	movff	btemp+8,plusw1
 23507  01A3E2  0EFD               	movlw	-3
 23508  01A3E4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23509  01A3EA  0EFE               	movlw	-2
 23510  01A3EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23511  01A3F2  0EFF               	movlw	-1
 23512  01A3F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 23513                           
 23514                           ;stkvar	_u @ sp[(-4)+0]
 23515  01A3FA  0EFC               	movlw	-4
 23516  01A3FC  006F FF8C  F001    	movff	plusw1,btemp
 23517  01A402  0EFD               	movlw	-3
 23518  01A404  006F FF8C  F002    	movff	plusw1,btemp+1
 23519  01A40A  0EFE               	movlw	-2
 23520  01A40C  006F FF8C  F003    	movff	plusw1,btemp+2
 23521  01A412  0EFF               	movlw	-1
 23522  01A414  006F FF8C  F004    	movff	plusw1,btemp+3
 23523                           
 23524                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23525  01A41A  0EFA               	movlw	250
 23526  01A41C  26E1               	addwf	fsr1l,f,c
 23527  01A41E  0EFF               	movlw	255
 23528  01A420  22E2               	addwfc	fsr1h,f,c
 23529  01A422  0012               	return		;funcret
 23530  01A424                     __end_of_nanf:
 23531                           	opt callstack 0
 23532                           
 23533 ;; *************** function _get_raw_result *****************
 23534 ;; Defined at:
 23535 ;;		line 87 in file "daq.c"
 23536 ;; Parameters:    Size  Location     Type
 23537 ;;  index           1  [STACK] const enum E16582
 23538 ;; Auto vars:     Size  Location     Type
 23539 ;;		None
 23540 ;; Return value:  Size  Location     Type
 23541 ;;                  2  [STACK] unsigned short 
 23542 ;; Registers used:
 23543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23544 ;; Tracked objects:
 23545 ;;		On entry : 0/2
 23546 ;;		On exit  : 0/0
 23547 ;;		Unchanged: 0/0
 23548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23553 ;;Total ram usage:        0 bytes
 23554 ;; Hardware stack levels used:    1
 23555 ;; Hardware stack levels required when called:   15
 23556 ;; This function calls:
 23557 ;;		Nothing
 23558 ;; This function is called by:
 23559 ;;		_main
 23560 ;;		_conv_raw_result
 23561 ;; This function uses a reentrant model
 23562 ;;
 23563                           
 23564                           	psect	text96
 23565  01B218                     __ptext96:
 23566                           	opt callstack 0
 23567  01B218                     _get_raw_result:
 23568                           	opt callstack 13
 23569                           
 23570                           ;daq.c: 87: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 88: {;daq.c: 
      +                          89:  return R.raw_adc[index];
 23571                           ;stkvar	_index @ sp[(0)+-1]
 23572                           
 23573                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23574                           ;incstack = 0
 23575  01B218  0EFF               	movlw	-1
 23576  01B21A  50E3               	movf	plusw1,w,c
 23577  01B21C  0D02               	mullw	2
 23578  01B21E  50F3               	movf	243,w,c
 23579  01B220  0FC4               	addlw	low _R
 23580  01B222  6ED9               	movwf	fsr2l,c
 23581  01B224  6ADA               	clrf	fsr2h,c
 23582  01B226  006F FF78  F001    	movff	postinc2,btemp
 23583  01B22C  006F FF74  F002    	movff	postdec2,btemp+1
 23584                           
 23585                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 23586  01B232  52E5               	movf	postdec1,f,c
 23587  01B234  0012               	return		;funcret
 23588  01B236                     __end_of_get_raw_result:
 23589                           	opt callstack 0
 23590                           
 23591 ;; *************** function ___xxtofl *****************
 23592 ;; Defined at:
 23593 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 23594 ;; Parameters:    Size  Location     Type
 23595 ;;  sign            1  [STACK] unsigned char 
 23596 ;;  val             4  [STACK] long 
 23597 ;; Auto vars:     Size  Location     Type
 23598 ;;  arg             4  [STACK] unsigned long 
 23599 ;;  exp             1  [STACK] unsigned char 
 23600 ;; Return value:  Size  Location     Type
 23601 ;;                  4  [STACK] unsigned char 
 23602 ;; Registers used:
 23603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23604 ;; Tracked objects:
 23605 ;;		On entry : 0/1
 23606 ;;		On exit  : 0/0
 23607 ;;		Unchanged: 0/0
 23608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23613 ;;Total ram usage:        0 bytes
 23614 ;; Hardware stack levels used:    1
 23615 ;; Hardware stack levels required when called:   15
 23616 ;; This function calls:
 23617 ;;		Nothing
 23618 ;; This function is called by:
 23619 ;;		_conv_raw_result
 23620 ;;		_init_bsoc
 23621 ;; This function uses a reentrant model
 23622 ;;
 23623                           
 23624                           	psect	text97
 23625  0176EE                     __ptext97:
 23626                           	opt callstack 0
 23627  0176EE                     ___xxtofl:
 23628                           	opt callstack 0
 23629                           
 23630                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23631  0176EE  0E05               	movlw	5
 23632  0176F0  26E1               	addwf	fsr1l,f,c
 23633  0176F2  0E00               	movlw	0
 23634  0176F4  22E2               	addwfc	fsr1h,f,c
 23635                           
 23636                           ;stkvar	_sign @ sp[(-5)+-1]
 23637                           
 23638                           ;incstack = 0
 23639  0176F6  0EFA               	movlw	-6
 23640  0176F8  50E3               	movf	plusw1,w,c
 23641  0176FA  B4D8               	btfsc	status,2,c
 23642  0176FC  D01D               	goto	l9558
 23643                           
 23644                           ;stkvar	_val @ sp[(-5)+-5]
 23645  0176FE  0EF9               	movlw	-7
 23646  017700  AEE3               	btfss	plusw1,7,c
 23647  017702  D01A               	goto	l9558
 23648                           
 23649                           ;stkvar	_val @ sp[(-5)+-5]
 23650  017704  0EF6               	movlw	-10
 23651  017706  006F FF8C  F009    	movff	plusw1,btemp+8
 23652  01770C  0EF7               	movlw	-9
 23653  01770E  006F FF8C  F00A    	movff	plusw1,btemp+9
 23654  017714  0EF8               	movlw	-8
 23655  017716  006F FF8C  F00B    	movff	plusw1,btemp+10
 23656  01771C  0EF9               	movlw	-7
 23657  01771E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23658  017724  1E09               	comf	(btemp+8)^0,f,c
 23659  017726  1E0A               	comf	(btemp+9)^0,f,c
 23660  017728  1E0B               	comf	(btemp+10)^0,f,c
 23661  01772A  1E0C               	comf	(btemp+11)^0,f,c
 23662  01772C  2A09               	incf	(btemp+8)^0,f,c
 23663  01772E  0E00               	movlw	0
 23664  017730  220A               	addwfc	(btemp+9)^0,f,c
 23665  017732  220B               	addwfc	(btemp+10)^0,f,c
 23666  017734  220C               	addwfc	(btemp+11)^0,f,c
 23667  017736  D010               	goto	L27
 23668  017738                     l9558:
 23669                           
 23670                           ;stkvar	_val @ sp[(-5)+-5]
 23671  017738  0EF6               	movlw	-10
 23672  01773A  006F FF8C  F009    	movff	plusw1,btemp+8
 23673  017740  0EF7               	movlw	-9
 23674  017742  006F FF8C  F00A    	movff	plusw1,btemp+9
 23675  017748  0EF8               	movlw	-8
 23676  01774A  006F FF8C  F00B    	movff	plusw1,btemp+10
 23677  017750  0EF9               	movlw	-7
 23678  017752  006F FF8C  F00C    	movff	plusw1,btemp+11
 23679  017758                     L27:
 23680                           
 23681                           ;stkvar	_arg @ sp[(-5)+0]
 23682  017758  0EFB               	movlw	-5
 23683  01775A  0060  F027  FFE3   	movff	btemp+8,plusw1
 23684  017760  0EFC               	movlw	-4
 23685  017762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23686  017768  0EFD               	movlw	-3
 23687  01776A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23688  017770  0EFE               	movlw	-2
 23689  017772  0060  F033  FFE3   	movff	btemp+11,plusw1
 23690                           
 23691                           ;stkvar	_val @ sp[(-5)+-5]
 23692  017778  0EF6               	movlw	-10
 23693  01777A  50E3               	movf	plusw1,w,c
 23694  01777C  E113               	bnz	l9566
 23695  01777E  0EF7               	movlw	-9
 23696  017780  50E3               	movf	plusw1,w,c
 23697  017782  E110               	bnz	l9566
 23698  017784  0EF8               	movlw	-8
 23699  017786  50E3               	movf	plusw1,w,c
 23700  017788  E10D               	bnz	l9566
 23701  01778A  0EF9               	movlw	-7
 23702  01778C  50E3               	movf	plusw1,w,c
 23703  01778E  A4D8               	btfss	status,2,c
 23704  017790  D009               	goto	l9566
 23705  017792  0E00               	movlw	0
 23706  017794  6E01               	movwf	btemp^0,c
 23707  017796  0E00               	movlw	0
 23708  017798  6E02               	movwf	(btemp+1)^0,c
 23709  01779A  0E00               	movlw	0
 23710  01779C  6E03               	movwf	(btemp+2)^0,c
 23711  01779E  0E00               	movlw	0
 23712  0177A0  6E04               	movwf	(btemp+3)^0,c
 23713  0177A2  D0A2               	goto	l3019
 23714  0177A4                     l9566:
 23715  0177A4  0E96               	movlw	150
 23716  0177A6  6E0C               	movwf	(btemp+11)^0,c
 23717                           
 23718                           ;stkvar	_exp @ sp[(-5)+4]
 23719  0177A8  0EFF               	movlw	-1
 23720  0177AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 23721  0177B0  D00B               	goto	l9570
 23722  0177B2                     l9568:
 23723                           
 23724                           ;stkvar	_exp @ sp[(-5)+4]
 23725  0177B2  0EFF               	movlw	-1
 23726  0177B4  2AE3               	incf	plusw1,f,c
 23727                           
 23728                           ;stkvar	_arg @ sp[(-5)+0]
 23729  0177B6  90D8               	bcf	status,0,c
 23730  0177B8  0EFE               	movlw	-2
 23731  0177BA  32E3               	rrcf	plusw1,f,c
 23732  0177BC  0EFD               	movlw	-3
 23733  0177BE  32E3               	rrcf	plusw1,f,c
 23734  0177C0  0EFC               	movlw	-4
 23735  0177C2  32E3               	rrcf	plusw1,f,c
 23736  0177C4  0EFB               	movlw	-5
 23737  0177C6  32E3               	rrcf	plusw1,f,c
 23738  0177C8                     l9570:
 23739                           
 23740                           ;stkvar	_arg @ sp[(-5)+0]
 23741  0177C8  50E1               	movf	fsr1l,w,c
 23742  0177CA  0FFB               	addlw	-5
 23743  0177CC  6ED9               	movwf	fsr2l,c
 23744  0177CE  50E2               	movf	fsr1h,w,c
 23745  0177D0  6EDA               	movwf	fsr2h,c
 23746  0177D2  0EFF               	movlw	255
 23747  0177D4  22DA               	addwfc	fsr2h,f,c
 23748  0177D6  52DE               	movf	postinc2,f,c
 23749  0177D8  52DE               	movf	postinc2,f,c
 23750  0177DA  52DE               	movf	postinc2,f,c
 23751  0177DC  0EFE               	movlw	254
 23752  0177DE  14DD               	andwf	postdec2,w,c
 23753  0177E0  B4D8               	btfsc	status,2,c
 23754  0177E2  D018               	goto	l9578
 23755  0177E4  D7E6               	goto	l9568
 23756  0177E6                     l9572:
 23757                           
 23758                           ;stkvar	_exp @ sp[(-5)+4]
 23759  0177E6  0EFF               	movlw	-1
 23760  0177E8  2AE3               	incf	plusw1,f,c
 23761                           
 23762                           ;stkvar	_arg @ sp[(-5)+0]
 23763  0177EA  50E1               	movf	fsr1l,w,c
 23764  0177EC  0FFB               	addlw	-5
 23765  0177EE  6ED9               	movwf	fsr2l,c
 23766  0177F0  50E2               	movf	fsr1h,w,c
 23767  0177F2  6EDA               	movwf	fsr2h,c
 23768  0177F4  0EFF               	movlw	255
 23769  0177F6  22DA               	addwfc	fsr2h,f,c
 23770  0177F8  2ADE               	incf	postinc2,f,c
 23771  0177FA  0E00               	movlw	0
 23772  0177FC  22DE               	addwfc	postinc2,f,c
 23773  0177FE  22DE               	addwfc	postinc2,f,c
 23774  017800  22DE               	addwfc	postinc2,f,c
 23775                           
 23776                           ;stkvar	_arg @ sp[(-5)+0]
 23777  017802  90D8               	bcf	status,0,c
 23778  017804  0EFE               	movlw	-2
 23779  017806  32E3               	rrcf	plusw1,f,c
 23780  017808  0EFD               	movlw	-3
 23781  01780A  32E3               	rrcf	plusw1,f,c
 23782  01780C  0EFC               	movlw	-4
 23783  01780E  32E3               	rrcf	plusw1,f,c
 23784  017810  0EFB               	movlw	-5
 23785  017812  32E3               	rrcf	plusw1,f,c
 23786  017814                     l9578:
 23787                           
 23788                           ;stkvar	_arg @ sp[(-5)+0]
 23789  017814  50E1               	movf	fsr1l,w,c
 23790  017816  0FFB               	addlw	-5
 23791  017818  6ED9               	movwf	fsr2l,c
 23792  01781A  50E2               	movf	fsr1h,w,c
 23793  01781C  6EDA               	movwf	fsr2h,c
 23794  01781E  0EFF               	movlw	255
 23795  017820  22DA               	addwfc	fsr2h,f,c
 23796  017822  52DE               	movf	postinc2,f,c
 23797  017824  52DE               	movf	postinc2,f,c
 23798  017826  52DE               	movf	postinc2,f,c
 23799  017828  0EFF               	movlw	255
 23800  01782A  14DD               	andwf	postdec2,w,c
 23801  01782C  B4D8               	btfsc	status,2,c
 23802  01782E  D00C               	goto	l9582
 23803  017830  D7DA               	goto	l9572
 23804  017832                     l9580:
 23805                           
 23806                           ;stkvar	_exp @ sp[(-5)+4]
 23807  017832  0EFF               	movlw	-1
 23808  017834  06E3               	decf	plusw1,f,c
 23809                           
 23810                           ;stkvar	_arg @ sp[(-5)+0]
 23811  017836  90D8               	bcf	status,0,c
 23812  017838  0EFB               	movlw	-5
 23813  01783A  36E3               	rlcf	plusw1,f,c
 23814  01783C  0EFC               	movlw	-4
 23815  01783E  36E3               	rlcf	plusw1,f,c
 23816  017840  0EFD               	movlw	-3
 23817  017842  36E3               	rlcf	plusw1,f,c
 23818  017844  0EFE               	movlw	-2
 23819  017846  36E3               	rlcf	plusw1,f,c
 23820  017848                     l9582:
 23821                           
 23822                           ;stkvar	_arg @ sp[(-5)+0]
 23823  017848  0EFD               	movlw	-3
 23824  01784A  BEE3               	btfsc	plusw1,7,c
 23825  01784C  D007               	goto	u8890
 23826                           
 23827                           ;stkvar	_exp @ sp[(-5)+4]
 23828  01784E  0EFF               	movlw	-1
 23829  017850  006F FF8C  F001    	movff	plusw1,btemp
 23830  017856  0E02               	movlw	2
 23831  017858  6001               	cpfslt	btemp^0,c
 23832  01785A  D7EB               	goto	l9580
 23833  01785C                     u8890:
 23834                           
 23835                           ;stkvar	_exp @ sp[(-5)+4]
 23836  01785C  0EFF               	movlw	-1
 23837  01785E  B0E3               	btfsc	plusw1,0,c
 23838  017860  D002               	goto	l9590
 23839                           
 23840                           ;stkvar	_arg @ sp[(-5)+0]
 23841  017862  0EFD               	movlw	-3
 23842  017864  9EE3               	bcf	plusw1,7,c
 23843  017866                     l9590:
 23844                           
 23845                           ;stkvar	_exp @ sp[(-5)+4]
 23846  017866  50E1               	movf	fsr1l,w,c
 23847  017868  0FFF               	addlw	-1
 23848  01786A  6ED9               	movwf	fsr2l,c
 23849  01786C  50E2               	movf	fsr1h,w,c
 23850  01786E  6EDA               	movwf	fsr2h,c
 23851  017870  0EFF               	movlw	255
 23852  017872  22DA               	addwfc	fsr2h,f,c
 23853  017874  90D8               	bcf	status,0,c
 23854  017876  32DF               	rrcf	indf2,f,c
 23855                           
 23856                           ;stkvar	_exp @ sp[(-5)+4]
 23857  017878  0EFF               	movlw	-1
 23858  01787A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23859  017880  0060  F030  F005   	movff	btemp+11,btemp+4
 23860  017886  6A06               	clrf	(btemp+5)^0,c
 23861  017888  6A07               	clrf	(btemp+6)^0,c
 23862  01788A  6A08               	clrf	(btemp+7)^0,c
 23863  01788C  0060  F014  F008   	movff	btemp+4,btemp+7
 23864  017892  6A07               	clrf	(btemp+6)^0,c
 23865  017894  6A06               	clrf	(btemp+5)^0,c
 23866  017896  6A05               	clrf	(btemp+4)^0,c
 23867                           
 23868                           ;stkvar	_arg @ sp[(-5)+0]
 23869  017898  50E1               	movf	fsr1l,w,c
 23870  01789A  0FFB               	addlw	-5
 23871  01789C  6ED9               	movwf	fsr2l,c
 23872  01789E  50E2               	movf	fsr1h,w,c
 23873  0178A0  6EDA               	movwf	fsr2h,c
 23874  0178A2  0EFF               	movlw	255
 23875  0178A4  22DA               	addwfc	fsr2h,f,c
 23876  0178A6  5005               	movf	(btemp+4)^0,w,c
 23877  0178A8  12DE               	iorwf	postinc2,f,c
 23878  0178AA  5006               	movf	(btemp+5)^0,w,c
 23879  0178AC  12DE               	iorwf	postinc2,f,c
 23880  0178AE  5007               	movf	(btemp+6)^0,w,c
 23881  0178B0  12DE               	iorwf	postinc2,f,c
 23882  0178B2  5008               	movf	(btemp+7)^0,w,c
 23883  0178B4  12DE               	iorwf	postinc2,f,c
 23884                           
 23885                           ;stkvar	_sign @ sp[(-5)+-1]
 23886  0178B6  0EFA               	movlw	-6
 23887  0178B8  50E3               	movf	plusw1,w,c
 23888  0178BA  B4D8               	btfsc	status,2,c
 23889  0178BC  D005               	goto	l9600
 23890                           
 23891                           ;stkvar	_val @ sp[(-5)+-5]
 23892  0178BE  0EF9               	movlw	-7
 23893  0178C0  AEE3               	btfss	plusw1,7,c
 23894  0178C2  D002               	goto	l9600
 23895                           
 23896                           ;stkvar	_arg @ sp[(-5)+0]
 23897  0178C4  0EFE               	movlw	-2
 23898  0178C6  8EE3               	bsf	plusw1,7,c
 23899  0178C8                     l9600:
 23900                           
 23901                           ;stkvar	_arg @ sp[(-5)+0]
 23902  0178C8  0EFB               	movlw	-5
 23903  0178CA  006F FF8C  F001    	movff	plusw1,btemp
 23904  0178D0  0EFC               	movlw	-4
 23905  0178D2  006F FF8C  F002    	movff	plusw1,btemp+1
 23906  0178D8  0EFD               	movlw	-3
 23907  0178DA  006F FF8C  F003    	movff	plusw1,btemp+2
 23908  0178E0  0EFE               	movlw	-2
 23909  0178E2  006F FF8C  F004    	movff	plusw1,btemp+3
 23910  0178E8                     l3019:
 23911                           
 23912                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 23913  0178E8  0EF6               	movlw	246
 23914  0178EA  26E1               	addwf	fsr1l,f,c
 23915  0178EC  0EFF               	movlw	255
 23916  0178EE  22E2               	addwfc	fsr1h,f,c
 23917  0178F0  0012               	return		;funcret
 23918  0178F2                     __end_of___xxtofl:
 23919                           	opt callstack 0
 23920                           
 23921 ;; *************** function ___fldiv *****************
 23922 ;; Defined at:
 23923 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 23924 ;; Parameters:    Size  Location     Type
 23925 ;;  b               4  [STACK] unsigned char 
 23926 ;;  a               4  [STACK] unsigned char 
 23927 ;; Auto vars:     Size  Location     Type
 23928 ;;  grs             4  [STACK] unsigned long 
 23929 ;;  rem             4  [STACK] unsigned long 
 23930 ;;  new_exp         2  [STACK] short 
 23931 ;;  aexp            1  [STACK] unsigned char 
 23932 ;;  bexp            1  [STACK] unsigned char 
 23933 ;;  sign            1  [STACK] unsigned char 
 23934 ;; Return value:  Size  Location     Type
 23935 ;;                  4  [STACK] unsigned char 
 23936 ;; Registers used:
 23937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 23938 ;; Tracked objects:
 23939 ;;		On entry : 0/1
 23940 ;;		On exit  : 0/0
 23941 ;;		Unchanged: 0/0
 23942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23947 ;;Total ram usage:        0 bytes
 23948 ;; Hardware stack levels used:    1
 23949 ;; Hardware stack levels required when called:   15
 23950 ;; This function calls:
 23951 ;;		Nothing
 23952 ;; This function is called by:
 23953 ;;		_conv_raw_result
 23954 ;;		_calc_bsoc
 23955 ;;		_init_bsoc
 23956 ;;		_esr_check
 23957 ;;		_efgtoa
 23958 ;; This function uses a reentrant model
 23959 ;;
 23960                           
 23961                           	psect	text98
 23962  014564                     __ptext98:
 23963                           	opt callstack 0
 23964  014564                     ___fldiv:
 23965                           	opt callstack 0
 23966                           
 23967                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 23968  014564  0E0D               	movlw	13
 23969  014566  26E1               	addwf	fsr1l,f,c
 23970  014568  0E00               	movlw	0
 23971  01456A  22E2               	addwfc	fsr1h,f,c
 23972                           
 23973                           ;stkvar	_b @ sp[(-13)+-4]
 23974                           
 23975                           ;incstack = 0
 23976 ;; hardware stack exceeded
 23977  01456C  0EF2               	movlw	242
 23978  01456E  24E1               	addwf	fsr1l,w,c
 23979  014570  6ED9               	movwf	fsr2l,c
 23980  014572  0EFF               	movlw	255
 23981  014574  20E2               	addwfc	fsr1h,w,c
 23982  014576  6EDA               	movwf	fsr2h,c
 23983  014578  50DF               	movf	indf2,w,c
 23984  01457A  6E0C               	movwf	(btemp+11)^0,c
 23985  01457C  0E80               	movlw	128
 23986  01457E  160C               	andwf	(btemp+11)^0,f,c
 23987                           
 23988                           ;stkvar	_sign @ sp[(-13)+12]
 23989  014580  0EFF               	movlw	-1
 23990  014582  0060  F033  FFE3   	movff	btemp+11,plusw1
 23991                           
 23992                           ;stkvar	_b @ sp[(-13)+-4]
 23993  014588  0EF2               	movlw	242
 23994  01458A  24E1               	addwf	fsr1l,w,c
 23995  01458C  6ED9               	movwf	fsr2l,c
 23996  01458E  0EFF               	movlw	255
 23997  014590  20E2               	addwfc	fsr1h,w,c
 23998  014592  6EDA               	movwf	fsr2h,c
 23999  014594  50DF               	movf	indf2,w,c
 24000  014596  6E0C               	movwf	(btemp+11)^0,c
 24001  014598  90D8               	bcf	status,0,c
 24002  01459A  340C               	rlcf	(btemp+11)^0,w,c
 24003  01459C  6E0B               	movwf	(btemp+10)^0,c
 24004                           
 24005                           ;stkvar	_bexp @ sp[(-13)+11]
 24006  01459E  0EFE               	movlw	-2
 24007  0145A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24008                           
 24009                           ;stkvar	_b @ sp[(-13)+-4]
 24010  0145A6  0EF1               	movlw	241
 24011  0145A8  24E1               	addwf	fsr1l,w,c
 24012  0145AA  6ED9               	movwf	fsr2l,c
 24013  0145AC  0EFF               	movlw	255
 24014  0145AE  20E2               	addwfc	fsr1h,w,c
 24015  0145B0  6EDA               	movwf	fsr2h,c
 24016  0145B2  AEDF               	btfss	indf2,7,c
 24017  0145B4  D002               	goto	l7930
 24018                           
 24019                           ;stkvar	_bexp @ sp[(-13)+11]
 24020  0145B6  0EFE               	movlw	-2
 24021  0145B8  80E3               	bsf	plusw1,0,c
 24022  0145BA                     l7930:
 24023                           
 24024                           ;stkvar	_bexp @ sp[(-13)+11]
 24025  0145BA  0EFE               	movlw	-2
 24026  0145BC  50E3               	movf	plusw1,w,c
 24027  0145BE  B4D8               	btfsc	status,2,c
 24028  0145C0  D027               	goto	l7940
 24029                           
 24030                           ;stkvar	_bexp @ sp[(-13)+11]
 24031  0145C2  0EFE               	movlw	-2
 24032  0145C4  28E3               	incf	plusw1,w,c
 24033  0145C6  A4D8               	btfss	status,2,c
 24034  0145C8  D018               	goto	l7936
 24035  0145CA  0E00               	movlw	0
 24036  0145CC  6E09               	movwf	(btemp+8)^0,c
 24037  0145CE  0E00               	movlw	0
 24038  0145D0  6E0A               	movwf	(btemp+9)^0,c
 24039  0145D2  0E00               	movlw	0
 24040  0145D4  6E0B               	movwf	(btemp+10)^0,c
 24041  0145D6  0E00               	movlw	0
 24042  0145D8  6E0C               	movwf	(btemp+11)^0,c
 24043                           
 24044                           ;stkvar	_b @ sp[(-13)+-4]
 24045  0145DA  0EEF               	movlw	-17
 24046  0145DC  0060  F027  FFE3   	movff	btemp+8,plusw1
 24047  0145E2  0EF0               	movlw	-16
 24048  0145E4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24049  0145EA  0EF1               	movlw	-15
 24050  0145EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24051  0145F2  0EF2               	movlw	-14
 24052  0145F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 24053  0145FA                     l7936:
 24054                           
 24055                           ;stkvar	_b @ sp[(-13)+-4]
 24056  0145FA  0EF1               	movlw	-15
 24057  0145FC  8EE3               	bsf	plusw1,7,c
 24058                           
 24059                           ;stkvar	_b @ sp[(-13)+-4]
 24060  0145FE  0EF2               	movlw	242
 24061  014600  24E1               	addwf	fsr1l,w,c
 24062  014602  6ED9               	movwf	fsr2l,c
 24063  014604  0EFF               	movlw	255
 24064  014606  20E2               	addwfc	fsr1h,w,c
 24065  014608  6EDA               	movwf	fsr2h,c
 24066  01460A  0E00               	movlw	0
 24067  01460C  6EDF               	movwf	indf2,c
 24068  01460E  D018               	goto	l7942
 24069  014610                     l7940:
 24070  014610  0E00               	movlw	0
 24071  014612  6E09               	movwf	(btemp+8)^0,c
 24072  014614  0E00               	movlw	0
 24073  014616  6E0A               	movwf	(btemp+9)^0,c
 24074  014618  0E00               	movlw	0
 24075  01461A  6E0B               	movwf	(btemp+10)^0,c
 24076  01461C  0E00               	movlw	0
 24077  01461E  6E0C               	movwf	(btemp+11)^0,c
 24078                           
 24079                           ;stkvar	_b @ sp[(-13)+-4]
 24080  014620  0EEF               	movlw	-17
 24081  014622  0060  F027  FFE3   	movff	btemp+8,plusw1
 24082  014628  0EF0               	movlw	-16
 24083  01462A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24084  014630  0EF1               	movlw	-15
 24085  014632  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24086  014638  0EF2               	movlw	-14
 24087  01463A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24088  014640                     l7942:
 24089                           
 24090                           ;stkvar	_a @ sp[(-13)+-8]
 24091  014640  0EEE               	movlw	238
 24092  014642  24E1               	addwf	fsr1l,w,c
 24093  014644  6ED9               	movwf	fsr2l,c
 24094  014646  0EFF               	movlw	255
 24095  014648  20E2               	addwfc	fsr1h,w,c
 24096  01464A  6EDA               	movwf	fsr2h,c
 24097  01464C  50DF               	movf	indf2,w,c
 24098  01464E  6E0C               	movwf	(btemp+11)^0,c
 24099  014650  0E80               	movlw	128
 24100  014652  160C               	andwf	(btemp+11)^0,f,c
 24101                           
 24102                           ;stkvar	_sign @ sp[(-13)+12]
 24103  014654  50E1               	movf	fsr1l,w,c
 24104  014656  0FFF               	addlw	-1
 24105  014658  6ED9               	movwf	fsr2l,c
 24106  01465A  50E2               	movf	fsr1h,w,c
 24107  01465C  6EDA               	movwf	fsr2h,c
 24108  01465E  0EFF               	movlw	255
 24109  014660  22DA               	addwfc	fsr2h,f,c
 24110  014662  500C               	movf	(btemp+11)^0,w,c
 24111  014664  1ADF               	xorwf	indf2,f,c
 24112                           
 24113                           ;stkvar	_a @ sp[(-13)+-8]
 24114  014666  0EEE               	movlw	238
 24115  014668  24E1               	addwf	fsr1l,w,c
 24116  01466A  6ED9               	movwf	fsr2l,c
 24117  01466C  0EFF               	movlw	255
 24118  01466E  20E2               	addwfc	fsr1h,w,c
 24119  014670  6EDA               	movwf	fsr2h,c
 24120  014672  50DF               	movf	indf2,w,c
 24121  014674  6E0C               	movwf	(btemp+11)^0,c
 24122  014676  90D8               	bcf	status,0,c
 24123  014678  340C               	rlcf	(btemp+11)^0,w,c
 24124  01467A  6E0B               	movwf	(btemp+10)^0,c
 24125                           
 24126                           ;stkvar	_aexp @ sp[(-13)+10]
 24127  01467C  0EFD               	movlw	-3
 24128  01467E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24129                           
 24130                           ;stkvar	_a @ sp[(-13)+-8]
 24131  014684  0EED               	movlw	237
 24132  014686  24E1               	addwf	fsr1l,w,c
 24133  014688  6ED9               	movwf	fsr2l,c
 24134  01468A  0EFF               	movlw	255
 24135  01468C  20E2               	addwfc	fsr1h,w,c
 24136  01468E  6EDA               	movwf	fsr2h,c
 24137  014690  AEDF               	btfss	indf2,7,c
 24138  014692  D002               	goto	l7950
 24139                           
 24140                           ;stkvar	_aexp @ sp[(-13)+10]
 24141  014694  0EFD               	movlw	-3
 24142  014696  80E3               	bsf	plusw1,0,c
 24143  014698                     l7950:
 24144                           
 24145                           ;stkvar	_aexp @ sp[(-13)+10]
 24146  014698  0EFD               	movlw	-3
 24147  01469A  50E3               	movf	plusw1,w,c
 24148  01469C  B4D8               	btfsc	status,2,c
 24149  01469E  D027               	goto	l7960
 24150                           
 24151                           ;stkvar	_aexp @ sp[(-13)+10]
 24152  0146A0  0EFD               	movlw	-3
 24153  0146A2  28E3               	incf	plusw1,w,c
 24154  0146A4  A4D8               	btfss	status,2,c
 24155  0146A6  D018               	goto	l7956
 24156  0146A8  0E00               	movlw	0
 24157  0146AA  6E09               	movwf	(btemp+8)^0,c
 24158  0146AC  0E00               	movlw	0
 24159  0146AE  6E0A               	movwf	(btemp+9)^0,c
 24160  0146B0  0E00               	movlw	0
 24161  0146B2  6E0B               	movwf	(btemp+10)^0,c
 24162  0146B4  0E00               	movlw	0
 24163  0146B6  6E0C               	movwf	(btemp+11)^0,c
 24164                           
 24165                           ;stkvar	_a @ sp[(-13)+-8]
 24166  0146B8  0EEB               	movlw	-21
 24167  0146BA  0060  F027  FFE3   	movff	btemp+8,plusw1
 24168  0146C0  0EEC               	movlw	-20
 24169  0146C2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24170  0146C8  0EED               	movlw	-19
 24171  0146CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24172  0146D0  0EEE               	movlw	-18
 24173  0146D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 24174  0146D8                     l7956:
 24175                           
 24176                           ;stkvar	_a @ sp[(-13)+-8]
 24177  0146D8  0EED               	movlw	-19
 24178  0146DA  8EE3               	bsf	plusw1,7,c
 24179                           
 24180                           ;stkvar	_a @ sp[(-13)+-8]
 24181  0146DC  0EEE               	movlw	238
 24182  0146DE  24E1               	addwf	fsr1l,w,c
 24183  0146E0  6ED9               	movwf	fsr2l,c
 24184  0146E2  0EFF               	movlw	255
 24185  0146E4  20E2               	addwfc	fsr1h,w,c
 24186  0146E6  6EDA               	movwf	fsr2h,c
 24187  0146E8  0E00               	movlw	0
 24188  0146EA  6EDF               	movwf	indf2,c
 24189  0146EC  D018               	goto	l7962
 24190  0146EE                     l7960:
 24191  0146EE  0E00               	movlw	0
 24192  0146F0  6E09               	movwf	(btemp+8)^0,c
 24193  0146F2  0E00               	movlw	0
 24194  0146F4  6E0A               	movwf	(btemp+9)^0,c
 24195  0146F6  0E00               	movlw	0
 24196  0146F8  6E0B               	movwf	(btemp+10)^0,c
 24197  0146FA  0E00               	movlw	0
 24198  0146FC  6E0C               	movwf	(btemp+11)^0,c
 24199                           
 24200                           ;stkvar	_a @ sp[(-13)+-8]
 24201  0146FE  0EEB               	movlw	-21
 24202  014700  0060  F027  FFE3   	movff	btemp+8,plusw1
 24203  014706  0EEC               	movlw	-20
 24204  014708  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24205  01470E  0EED               	movlw	-19
 24206  014710  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24207  014716  0EEE               	movlw	-18
 24208  014718  0060  F033  FFE3   	movff	btemp+11,plusw1
 24209  01471E                     l7962:
 24210                           
 24211                           ;stkvar	_a @ sp[(-13)+-8]
 24212  01471E  0EEB               	movlw	-21
 24213  014720  50E3               	movf	plusw1,w,c
 24214  014722  E139               	bnz	l7974
 24215  014724  0EEC               	movlw	-20
 24216  014726  50E3               	movf	plusw1,w,c
 24217  014728  E136               	bnz	l7974
 24218  01472A  0EED               	movlw	-19
 24219  01472C  50E3               	movf	plusw1,w,c
 24220  01472E  E133               	bnz	l7974
 24221  014730  0EEE               	movlw	-18
 24222  014732  50E3               	movf	plusw1,w,c
 24223  014734  A4D8               	btfss	status,2,c
 24224  014736  D02F               	goto	l7974
 24225                           
 24226                           ;stkvar	_b @ sp[(-13)+-4]
 24227  014738  0EEF               	movlw	-17
 24228  01473A  6AE3               	clrf	plusw1,c
 24229  01473C  0EF0               	movlw	-16
 24230  01473E  6AE3               	clrf	plusw1,c
 24231  014740  0EF1               	movlw	-15
 24232  014742  6AE3               	clrf	plusw1,c
 24233  014744  0EF2               	movlw	-14
 24234  014746  6AE3               	clrf	plusw1,c
 24235                           
 24236                           ;stkvar	_b @ sp[(-13)+-4]
 24237  014748  0EF1               	movlw	241
 24238  01474A  24E1               	addwf	fsr1l,w,c
 24239  01474C  6ED9               	movwf	fsr2l,c
 24240  01474E  0EFF               	movlw	255
 24241  014750  20E2               	addwfc	fsr1h,w,c
 24242  014752  6EDA               	movwf	fsr2h,c
 24243  014754  0E80               	movlw	128
 24244  014756  12DE               	iorwf	postinc2,f,c
 24245  014758  0E7F               	movlw	127
 24246  01475A  12DD               	iorwf	postdec2,f,c
 24247  01475C                     l7968:
 24248                           
 24249                           ;stkvar	_sign @ sp[(-13)+12]
 24250  01475C  0EFF               	movlw	-1
 24251  01475E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24252                           
 24253                           ;stkvar	_b @ sp[(-13)+-4]
 24254  014764  0EF2               	movlw	242
 24255  014766  24E1               	addwf	fsr1l,w,c
 24256  014768  6ED9               	movwf	fsr2l,c
 24257  01476A  0EFF               	movlw	255
 24258  01476C  20E2               	addwfc	fsr1h,w,c
 24259  01476E  6EDA               	movwf	fsr2h,c
 24260  014770  500C               	movf	(btemp+11)^0,w,c
 24261  014772  12DF               	iorwf	indf2,f,c
 24262                           
 24263                           ;stkvar	_b @ sp[(-13)+-4]
 24264  014774  0EEF               	movlw	-17
 24265  014776  006F FF8C  F001    	movff	plusw1,btemp
 24266  01477C  0EF0               	movlw	-16
 24267  01477E  006F FF8C  F002    	movff	plusw1,btemp+1
 24268  014784  0EF1               	movlw	-15
 24269  014786  006F FF8C  F003    	movff	plusw1,btemp+2
 24270  01478C  0EF2               	movlw	-14
 24271  01478E  006F FF8C  F004    	movff	plusw1,btemp+3
 24272  014794  D19F               	goto	l2943
 24273  014796                     l7974:
 24274                           
 24275                           ;stkvar	_bexp @ sp[(-13)+11]
 24276  014796  0EFE               	movlw	-2
 24277  014798  50E3               	movf	plusw1,w,c
 24278  01479A  A4D8               	btfss	status,2,c
 24279  01479C  D009               	goto	l7982
 24280  01479E  0E00               	movlw	0
 24281  0147A0  6E01               	movwf	btemp^0,c
 24282  0147A2  0E00               	movlw	0
 24283  0147A4  6E02               	movwf	(btemp+1)^0,c
 24284  0147A6  0E00               	movlw	0
 24285  0147A8  6E03               	movwf	(btemp+2)^0,c
 24286  0147AA  0E00               	movlw	0
 24287  0147AC  6E04               	movwf	(btemp+3)^0,c
 24288  0147AE  D192               	goto	l2943
 24289  0147B0                     l7982:
 24290                           
 24291                           ;stkvar	_bexp @ sp[(-13)+11]
 24292  0147B0  0EFE               	movlw	-2
 24293  0147B2  50E3               	movf	plusw1,w,c
 24294  0147B4  6E0B               	movwf	(btemp+10)^0,c
 24295  0147B6  6A0C               	clrf	(btemp+11)^0,c
 24296                           
 24297                           ;stkvar	_aexp @ sp[(-13)+10]
 24298  0147B8  0EFD               	movlw	-3
 24299  0147BA  50E3               	movf	plusw1,w,c
 24300  0147BC  5E0B               	subwf	(btemp+10)^0,f,c
 24301  0147BE  0E00               	movlw	0
 24302  0147C0  5A0C               	subwfb	(btemp+11)^0,f,c
 24303  0147C2  0E7F               	movlw	127
 24304  0147C4  260B               	addwf	(btemp+10)^0,f,c
 24305  0147C6  0E00               	movlw	0
 24306  0147C8  220C               	addwfc	(btemp+11)^0,f,c
 24307                           
 24308                           ;stkvar	_new_exp @ sp[(-13)+8]
 24309  0147CA  0EFB               	movlw	-5
 24310  0147CC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24311  0147D2  0EFC               	movlw	-4
 24312  0147D4  0060  F033  FFE3   	movff	btemp+11,plusw1
 24313                           
 24314                           ;stkvar	_b @ sp[(-13)+-4]
 24315  0147DA  0EEF               	movlw	-17
 24316  0147DC  006F FF8C  F009    	movff	plusw1,btemp+8
 24317  0147E2  0EF0               	movlw	-16
 24318  0147E4  006F FF8C  F00A    	movff	plusw1,btemp+9
 24319  0147EA  0EF1               	movlw	-15
 24320  0147EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 24321  0147F2  0EF2               	movlw	-14
 24322  0147F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 24323                           
 24324                           ;stkvar	_rem @ sp[(-13)+4]
 24325  0147FA  0EF7               	movlw	-9
 24326  0147FC  0060  F027  FFE3   	movff	btemp+8,plusw1
 24327  014802  0EF8               	movlw	-8
 24328  014804  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24329  01480A  0EF9               	movlw	-7
 24330  01480C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24331  014812  0EFA               	movlw	-6
 24332  014814  0060  F033  FFE3   	movff	btemp+11,plusw1
 24333                           
 24334                           ;stkvar	_b @ sp[(-13)+-4]
 24335  01481A  0EEF               	movlw	-17
 24336  01481C  6AE3               	clrf	plusw1,c
 24337  01481E  0EF0               	movlw	-16
 24338  014820  6AE3               	clrf	plusw1,c
 24339  014822  0EF1               	movlw	-15
 24340  014824  6AE3               	clrf	plusw1,c
 24341  014826  0EF2               	movlw	-14
 24342  014828  6AE3               	clrf	plusw1,c
 24343                           
 24344                           ;stkvar	_grs @ sp[(-13)+0]
 24345  01482A  0EF3               	movlw	-13
 24346  01482C  6AE3               	clrf	plusw1,c
 24347  01482E  0EF4               	movlw	-12
 24348  014830  6AE3               	clrf	plusw1,c
 24349  014832  0EF5               	movlw	-11
 24350  014834  6AE3               	clrf	plusw1,c
 24351  014836  0EF6               	movlw	-10
 24352  014838  6AE3               	clrf	plusw1,c
 24353                           
 24354                           ;stkvar	_aexp @ sp[(-13)+10]
 24355  01483A  0EFD               	movlw	-3
 24356  01483C  6AE3               	clrf	plusw1,c
 24357  01483E  D050               	goto	l8010
 24358  014840                     l7992:
 24359                           
 24360                           ;stkvar	_aexp @ sp[(-13)+10]
 24361  014840  0EFD               	movlw	-3
 24362  014842  50E3               	movf	plusw1,w,c
 24363  014844  B4D8               	btfsc	status,2,c
 24364  014846  D020               	goto	l8002
 24365                           
 24366                           ;stkvar	_rem @ sp[(-13)+4]
 24367  014848  90D8               	bcf	status,0,c
 24368  01484A  0EF7               	movlw	-9
 24369  01484C  36E3               	rlcf	plusw1,f,c
 24370  01484E  0EF8               	movlw	-8
 24371  014850  36E3               	rlcf	plusw1,f,c
 24372  014852  0EF9               	movlw	-7
 24373  014854  36E3               	rlcf	plusw1,f,c
 24374  014856  0EFA               	movlw	-6
 24375  014858  36E3               	rlcf	plusw1,f,c
 24376                           
 24377                           ;stkvar	_b @ sp[(-13)+-4]
 24378  01485A  90D8               	bcf	status,0,c
 24379  01485C  0EEF               	movlw	-17
 24380  01485E  36E3               	rlcf	plusw1,f,c
 24381  014860  0EF0               	movlw	-16
 24382  014862  36E3               	rlcf	plusw1,f,c
 24383  014864  0EF1               	movlw	-15
 24384  014866  36E3               	rlcf	plusw1,f,c
 24385  014868  0EF2               	movlw	-14
 24386  01486A  36E3               	rlcf	plusw1,f,c
 24387                           
 24388                           ;stkvar	_grs @ sp[(-13)+0]
 24389  01486C  0EF6               	movlw	-10
 24390  01486E  AEE3               	btfss	plusw1,7,c
 24391  014870  D002               	goto	l8000
 24392                           
 24393                           ;stkvar	_b @ sp[(-13)+-4]
 24394  014872  0EEF               	movlw	-17
 24395  014874  80E3               	bsf	plusw1,0,c
 24396  014876                     l8000:
 24397                           
 24398                           ;stkvar	_grs @ sp[(-13)+0]
 24399  014876  90D8               	bcf	status,0,c
 24400  014878  0EF3               	movlw	-13
 24401  01487A  36E3               	rlcf	plusw1,f,c
 24402  01487C  0EF4               	movlw	-12
 24403  01487E  36E3               	rlcf	plusw1,f,c
 24404  014880  0EF5               	movlw	-11
 24405  014882  36E3               	rlcf	plusw1,f,c
 24406  014884  0EF6               	movlw	-10
 24407  014886  36E3               	rlcf	plusw1,f,c
 24408  014888                     l8002:
 24409                           
 24410                           ;stkvar	_a @ sp[(-13)+-8]
 24411                           ;stkvar	_rem @ sp[(-13)+4]
 24412  014888  50E1               	movf	fsr1l,w,c
 24413  01488A  0FF7               	addlw	-9
 24414  01488C  6ED9               	movwf	fsr2l,c
 24415  01488E  50E2               	movf	fsr1h,w,c
 24416  014890  6EDA               	movwf	fsr2h,c
 24417  014892  0EFF               	movlw	255
 24418  014894  22DA               	addwfc	fsr2h,f,c
 24419  014896  0EEB               	movlw	-21
 24420  014898  50E3               	movf	plusw1,w,c
 24421  01489A  5CDE               	subwf	postinc2,w,c
 24422  01489C  0EEC               	movlw	-20
 24423  01489E  50E3               	movf	plusw1,w,c
 24424  0148A0  58DE               	subwfb	postinc2,w,c
 24425  0148A2  0EED               	movlw	-19
 24426  0148A4  50E3               	movf	plusw1,w,c
 24427  0148A6  58DE               	subwfb	postinc2,w,c
 24428  0148A8  0EEE               	movlw	-18
 24429  0148AA  50E3               	movf	plusw1,w,c
 24430  0148AC  58DE               	subwfb	postinc2,w,c
 24431  0148AE  A0D8               	btfss	status,0,c
 24432  0148B0  D015               	goto	l8008
 24433                           
 24434                           ;stkvar	_grs @ sp[(-13)+0]
 24435  0148B2  0EF6               	movlw	-10
 24436  0148B4  8CE3               	bsf	plusw1,6,c
 24437                           
 24438                           ;stkvar	_a @ sp[(-13)+-8]
 24439                           ;stkvar	_rem @ sp[(-13)+4]
 24440  0148B6  50E1               	movf	fsr1l,w,c
 24441  0148B8  0FF7               	addlw	-9
 24442  0148BA  6ED9               	movwf	fsr2l,c
 24443  0148BC  50E2               	movf	fsr1h,w,c
 24444  0148BE  6EDA               	movwf	fsr2h,c
 24445  0148C0  0EFF               	movlw	255
 24446  0148C2  22DA               	addwfc	fsr2h,f,c
 24447  0148C4  0EEB               	movlw	-21
 24448  0148C6  50E3               	movf	plusw1,w,c
 24449  0148C8  5EDE               	subwf	postinc2,f,c
 24450  0148CA  0EEC               	movlw	-20
 24451  0148CC  50E3               	movf	plusw1,w,c
 24452  0148CE  5ADE               	subwfb	postinc2,f,c
 24453  0148D0  0EED               	movlw	-19
 24454  0148D2  50E3               	movf	plusw1,w,c
 24455  0148D4  5ADE               	subwfb	postinc2,f,c
 24456  0148D6  0EEE               	movlw	-18
 24457  0148D8  50E3               	movf	plusw1,w,c
 24458  0148DA  5ADE               	subwfb	postinc2,f,c
 24459  0148DC                     l8008:
 24460                           
 24461                           ;stkvar	_aexp @ sp[(-13)+10]
 24462  0148DC  0EFD               	movlw	-3
 24463  0148DE  2AE3               	incf	plusw1,f,c
 24464  0148E0                     l8010:
 24465                           
 24466                           ;stkvar	_aexp @ sp[(-13)+10]
 24467  0148E0  0EFD               	movlw	-3
 24468  0148E2  006F FF8C  F001    	movff	plusw1,btemp
 24469  0148E8  0E19               	movlw	25
 24470  0148EA  6401               	cpfsgt	btemp^0,c
 24471  0148EC  D7A9               	goto	l7992
 24472                           
 24473                           ;stkvar	_rem @ sp[(-13)+4]
 24474  0148EE  0EF7               	movlw	-9
 24475  0148F0  50E3               	movf	plusw1,w,c
 24476  0148F2  E10A               	bnz	u6350
 24477  0148F4  0EF8               	movlw	-8
 24478  0148F6  50E3               	movf	plusw1,w,c
 24479  0148F8  E107               	bnz	u6350
 24480  0148FA  0EF9               	movlw	-7
 24481  0148FC  50E3               	movf	plusw1,w,c
 24482  0148FE  E104               	bnz	u6350
 24483  014900  0EFA               	movlw	-6
 24484  014902  50E3               	movf	plusw1,w,c
 24485  014904  B4D8               	btfsc	status,2,c
 24486  014906  D024               	goto	l8026
 24487  014908                     u6350:
 24488                           
 24489                           ;stkvar	_grs @ sp[(-13)+0]
 24490  014908  0EF3               	movlw	-13
 24491  01490A  80E3               	bsf	plusw1,0,c
 24492  01490C  D021               	goto	l8026
 24493  01490E                     l8016:
 24494                           
 24495                           ;stkvar	_b @ sp[(-13)+-4]
 24496  01490E  90D8               	bcf	status,0,c
 24497  014910  0EEF               	movlw	-17
 24498  014912  36E3               	rlcf	plusw1,f,c
 24499  014914  0EF0               	movlw	-16
 24500  014916  36E3               	rlcf	plusw1,f,c
 24501  014918  0EF1               	movlw	-15
 24502  01491A  36E3               	rlcf	plusw1,f,c
 24503  01491C  0EF2               	movlw	-14
 24504  01491E  36E3               	rlcf	plusw1,f,c
 24505                           
 24506                           ;stkvar	_grs @ sp[(-13)+0]
 24507  014920  0EF6               	movlw	-10
 24508  014922  AEE3               	btfss	plusw1,7,c
 24509  014924  D002               	goto	l8022
 24510                           
 24511                           ;stkvar	_b @ sp[(-13)+-4]
 24512  014926  0EEF               	movlw	-17
 24513  014928  80E3               	bsf	plusw1,0,c
 24514  01492A                     l8022:
 24515                           
 24516                           ;stkvar	_grs @ sp[(-13)+0]
 24517  01492A  90D8               	bcf	status,0,c
 24518  01492C  0EF3               	movlw	-13
 24519  01492E  36E3               	rlcf	plusw1,f,c
 24520  014930  0EF4               	movlw	-12
 24521  014932  36E3               	rlcf	plusw1,f,c
 24522  014934  0EF5               	movlw	-11
 24523  014936  36E3               	rlcf	plusw1,f,c
 24524  014938  0EF6               	movlw	-10
 24525  01493A  36E3               	rlcf	plusw1,f,c
 24526                           
 24527                           ;stkvar	_new_exp @ sp[(-13)+8]
 24528  01493C  50E1               	movf	fsr1l,w,c
 24529  01493E  0FFB               	addlw	-5
 24530  014940  6ED9               	movwf	fsr2l,c
 24531  014942  50E2               	movf	fsr1h,w,c
 24532  014944  6EDA               	movwf	fsr2h,c
 24533  014946  0EFF               	movlw	255
 24534  014948  22DA               	addwfc	fsr2h,f,c
 24535  01494A  06DE               	decf	postinc2,f,c
 24536  01494C  0E00               	movlw	0
 24537  01494E  5ADD               	subwfb	postdec2,f,c
 24538  014950                     l8026:
 24539                           
 24540                           ;stkvar	_b @ sp[(-13)+-4]
 24541  014950  0EF1               	movlw	-15
 24542  014952  AEE3               	btfss	plusw1,7,c
 24543  014954  D7DC               	goto	l8016
 24544                           
 24545                           ;stkvar	_aexp @ sp[(-13)+10]
 24546  014956  0EFD               	movlw	-3
 24547  014958  6AE3               	clrf	plusw1,c
 24548                           
 24549                           ;stkvar	_grs @ sp[(-13)+0]
 24550  01495A  0EF6               	movlw	-10
 24551  01495C  AEE3               	btfss	plusw1,7,c
 24552  01495E  D020               	goto	l8040
 24553                           
 24554                           ;stkvar	_grs @ sp[(-13)+0]
 24555  014960  50E1               	movf	fsr1l,w,c
 24556  014962  0FF3               	addlw	-13
 24557  014964  6ED9               	movwf	fsr2l,c
 24558  014966  50E2               	movf	fsr1h,w,c
 24559  014968  6EDA               	movwf	fsr2h,c
 24560  01496A  0EFF               	movlw	255
 24561  01496C  22DA               	addwfc	fsr2h,f,c
 24562  01496E  0EFF               	movlw	255
 24563  014970  14DE               	andwf	postinc2,w,c
 24564  014972  6E09               	movwf	(btemp+8)^0,c
 24565  014974  0EFF               	movlw	255
 24566  014976  14DE               	andwf	postinc2,w,c
 24567  014978  6E0A               	movwf	(btemp+9)^0,c
 24568  01497A  0EFF               	movlw	255
 24569  01497C  14DE               	andwf	postinc2,w,c
 24570  01497E  6E0B               	movwf	(btemp+10)^0,c
 24571  014980  0E7F               	movlw	127
 24572  014982  14DE               	andwf	postinc2,w,c
 24573  014984  6E0C               	movwf	(btemp+11)^0,c
 24574  014986  5009               	movf	(btemp+8)^0,w,c
 24575  014988  100A               	iorwf	(btemp+9)^0,w,c
 24576  01498A  100B               	iorwf	(btemp+10)^0,w,c
 24577  01498C  100C               	iorwf	(btemp+11)^0,w,c
 24578  01498E  B4D8               	btfsc	status,2,c
 24579  014990  D004               	goto	l8036
 24580  014992                     u6390:
 24581                           
 24582                           ;stkvar	_aexp @ sp[(-13)+10]
 24583  014992  0EFD               	movlw	-3
 24584  014994  6AE3               	clrf	plusw1,c
 24585  014996  2AE3               	incf	plusw1,f,c
 24586  014998  D003               	goto	l8040
 24587  01499A                     l8036:
 24588                           
 24589                           ;stkvar	_b @ sp[(-13)+-4]
 24590  01499A  0EEF               	movlw	-17
 24591  01499C  B0E3               	btfsc	plusw1,0,c
 24592  01499E  D7F9               	goto	u6390
 24593  0149A0                     l8040:
 24594                           
 24595                           ;stkvar	_aexp @ sp[(-13)+10]
 24596  0149A0  0EFD               	movlw	-3
 24597  0149A2  50E3               	movf	plusw1,w,c
 24598  0149A4  B4D8               	btfsc	status,2,c
 24599  0149A6  D036               	goto	l8050
 24600                           
 24601                           ;stkvar	_b @ sp[(-13)+-4]
 24602  0149A8  50E1               	movf	fsr1l,w,c
 24603  0149AA  0FEF               	addlw	-17
 24604  0149AC  6ED9               	movwf	fsr2l,c
 24605  0149AE  50E2               	movf	fsr1h,w,c
 24606  0149B0  6EDA               	movwf	fsr2h,c
 24607  0149B2  0EFF               	movlw	255
 24608  0149B4  22DA               	addwfc	fsr2h,f,c
 24609  0149B6  2ADE               	incf	postinc2,f,c
 24610  0149B8  0E00               	movlw	0
 24611  0149BA  22DE               	addwfc	postinc2,f,c
 24612  0149BC  22DE               	addwfc	postinc2,f,c
 24613  0149BE  22DE               	addwfc	postinc2,f,c
 24614                           
 24615                           ;stkvar	_b @ sp[(-13)+-4]
 24616  0149C0  0EF2               	movlw	-14
 24617  0149C2  A0E3               	btfss	plusw1,0,c
 24618  0149C4  D027               	goto	l8050
 24619  0149C6  0E01               	movlw	1
 24620  0149C8  6E0C               	movwf	(btemp+11)^0,c
 24621                           
 24622                           ;stkvar	_b @ sp[(-13)+-4]
 24623  0149CA  50E1               	movf	fsr1l,w,c
 24624  0149CC  0FEF               	addlw	-17
 24625  0149CE  6ED9               	movwf	fsr2l,c
 24626  0149D0  50E2               	movf	fsr1h,w,c
 24627  0149D2  6EDA               	movwf	fsr2h,c
 24628  0149D4  0EFF               	movlw	255
 24629  0149D6  22DA               	addwfc	fsr2h,f,c
 24630  0149D8  280C               	incf	(btemp+11)^0,w,c
 24631  0149DA  52DE               	movf	postinc2,f,c
 24632  0149DC  D008               	goto	u6430
 24633  0149DE                     u6435:
 24634  0149DE  52DE               	movf	postinc2,f,c
 24635  0149E0  90D8               	bcf	status,0,c
 24636  0149E2  BEDC               	btfsc	preinc2,7,c
 24637  0149E4  80D8               	bsf	status,0,c
 24638  0149E6  32DD               	rrcf	postdec2,f,c
 24639  0149E8  32DD               	rrcf	postdec2,f,c
 24640  0149EA  32DD               	rrcf	postdec2,f,c
 24641  0149EC  32DE               	rrcf	postinc2,f,c
 24642  0149EE                     u6430:
 24643  0149EE  2EE8               	decfsz	wreg,f,c
 24644  0149F0  D7F6               	goto	u6435
 24645                           
 24646                           ;stkvar	_new_exp @ sp[(-13)+8]
 24647  0149F2  0EFB               	movlw	-5
 24648  0149F4  50E3               	movf	plusw1,w,c
 24649  0149F6  0F01               	addlw	1
 24650  0149F8  6E01               	movwf	btemp^0,c
 24651  0149FA  0EFB               	movlw	-5
 24652  0149FC  0060  F007  FFE3   	movff	btemp,plusw1
 24653  014A02  6A01               	clrf	btemp^0,c
 24654  014A04  0EFC               	movlw	-4
 24655  014A06  50E3               	movf	plusw1,w,c
 24656  014A08  2001               	addwfc	btemp^0,w,c
 24657  014A0A  6E01               	movwf	btemp^0,c
 24658  014A0C  0EFC               	movlw	-4
 24659  014A0E  0060  F007  FFE3   	movff	btemp,plusw1
 24660  014A14                     l8050:
 24661                           
 24662                           ;stkvar	_new_exp @ sp[(-13)+8]
 24663  014A14  0EFC               	movlw	-4
 24664  014A16  BEE3               	btfsc	plusw1,7,c
 24665  014A18  D01B               	goto	l8056
 24666  014A1A  0EFC               	movlw	-4
 24667  014A1C  50E3               	movf	plusw1,w,c
 24668  014A1E  E104               	bnz	u6440
 24669  014A20  0EFB               	movlw	-5
 24670  014A22  28E3               	incf	plusw1,w,c
 24671  014A24  A0D8               	btfss	status,0,c
 24672  014A26  D014               	goto	l8056
 24673  014A28                     u6440:
 24674  014A28  0EFF               	movlw	255
 24675  014A2A  6E0B               	movwf	(btemp+10)^0,c
 24676  014A2C  0E00               	movlw	0
 24677  014A2E  6E0C               	movwf	(btemp+11)^0,c
 24678                           
 24679                           ;stkvar	_new_exp @ sp[(-13)+8]
 24680  014A30  0EFB               	movlw	-5
 24681  014A32  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24682  014A38  0EFC               	movlw	-4
 24683  014A3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24684                           
 24685                           ;stkvar	_b @ sp[(-13)+-4]
 24686  014A40  0EEF               	movlw	-17
 24687  014A42  6AE3               	clrf	plusw1,c
 24688  014A44  0EF0               	movlw	-16
 24689  014A46  6AE3               	clrf	plusw1,c
 24690  014A48  0EF1               	movlw	-15
 24691  014A4A  6AE3               	clrf	plusw1,c
 24692  014A4C  0EF2               	movlw	-14
 24693  014A4E  6AE3               	clrf	plusw1,c
 24694  014A50                     l8056:
 24695                           
 24696                           ;stkvar	_new_exp @ sp[(-13)+8]
 24697  014A50  0EFC               	movlw	-4
 24698  014A52  BEE3               	btfsc	plusw1,7,c
 24699  014A54  D007               	goto	u6450
 24700  014A56  0EFC               	movlw	-4
 24701  014A58  50E3               	movf	plusw1,w,c
 24702  014A5A  E112               	bnz	l8062
 24703  014A5C  0EFB               	movlw	-5
 24704  014A5E  04E3               	decf	plusw1,w,c
 24705  014A60  B0D8               	btfsc	status,0,c
 24706  014A62  D00E               	goto	l8062
 24707  014A64                     u6450:
 24708                           
 24709                           ;stkvar	_new_exp @ sp[(-13)+8]
 24710  014A64  0EFB               	movlw	-5
 24711  014A66  6AE3               	clrf	plusw1,c
 24712  014A68  0EFC               	movlw	-4
 24713  014A6A  6AE3               	clrf	plusw1,c
 24714                           
 24715                           ;stkvar	_b @ sp[(-13)+-4]
 24716  014A6C  0EEF               	movlw	-17
 24717  014A6E  6AE3               	clrf	plusw1,c
 24718  014A70  0EF0               	movlw	-16
 24719  014A72  6AE3               	clrf	plusw1,c
 24720  014A74  0EF1               	movlw	-15
 24721  014A76  6AE3               	clrf	plusw1,c
 24722  014A78  0EF2               	movlw	-14
 24723  014A7A  6AE3               	clrf	plusw1,c
 24724                           
 24725                           ;stkvar	_sign @ sp[(-13)+12]
 24726  014A7C  0EFF               	movlw	-1
 24727  014A7E  6AE3               	clrf	plusw1,c
 24728  014A80                     l8062:
 24729                           
 24730                           ;stkvar	_new_exp @ sp[(-13)+8]
 24731                           ;stkvar	_bexp @ sp[(-13)+11]
 24732  014A80  0EFB               	movlw	-5
 24733  014A82  006F FF8C  F001    	movff	plusw1,btemp
 24734  014A88  0EFE               	movlw	-2
 24735  014A8A  0060  F007  FFE3   	movff	btemp,plusw1
 24736                           
 24737                           ;stkvar	_bexp @ sp[(-13)+11]
 24738  014A90  0EFE               	movlw	-2
 24739  014A92  A0E3               	btfss	plusw1,0,c
 24740  014A94  D009               	goto	l8068
 24741                           
 24742                           ;stkvar	_b @ sp[(-13)+-4]
 24743  014A96  0EF1               	movlw	241
 24744  014A98  24E1               	addwf	fsr1l,w,c
 24745  014A9A  6ED9               	movwf	fsr2l,c
 24746  014A9C  0EFF               	movlw	255
 24747  014A9E  20E2               	addwfc	fsr1h,w,c
 24748  014AA0  6EDA               	movwf	fsr2h,c
 24749  014AA2  0E00               	movlw	0
 24750  014AA4  8EDB               	bsf	plusw2,7,c
 24751  014AA6  D008               	goto	l8070
 24752  014AA8                     l8068:
 24753                           
 24754                           ;stkvar	_b @ sp[(-13)+-4]
 24755  014AA8  0EF1               	movlw	241
 24756  014AAA  24E1               	addwf	fsr1l,w,c
 24757  014AAC  6ED9               	movwf	fsr2l,c
 24758  014AAE  0EFF               	movlw	255
 24759  014AB0  20E2               	addwfc	fsr1h,w,c
 24760  014AB2  6EDA               	movwf	fsr2h,c
 24761  014AB4  0E7F               	movlw	127
 24762  014AB6  16DF               	andwf	indf2,f,c
 24763  014AB8                     l8070:
 24764                           
 24765                           ;stkvar	_b @ sp[(-13)+-4]
 24766  014AB8  0EF2               	movlw	242
 24767  014ABA  24E1               	addwf	fsr1l,w,c
 24768  014ABC  6ED9               	movwf	fsr2l,c
 24769  014ABE  0EFF               	movlw	255
 24770  014AC0  20E2               	addwfc	fsr1h,w,c
 24771  014AC2  6EDA               	movwf	fsr2h,c
 24772                           
 24773                           ;stkvar	_bexp @ sp[(-13)+11]
 24774  014AC4  0EFE               	movlw	-2
 24775  014AC6  006F FF8C  F00C    	movff	plusw1,btemp+11
 24776  014ACC  90D8               	bcf	status,0,c
 24777  014ACE  300C               	rrcf	(btemp+11)^0,w,c
 24778  014AD0  6EDF               	movwf	indf2,c
 24779  014AD2  D644               	goto	l7968
 24780  014AD4                     l2943:
 24781                           
 24782                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 24783  014AD4  0EEB               	movlw	235
 24784  014AD6  26E1               	addwf	fsr1l,f,c
 24785  014AD8  0EFF               	movlw	255
 24786  014ADA  22E2               	addwfc	fsr1h,f,c
 24787  014ADC  0012               	return		;funcret
 24788  014ADE                     __end_of___fldiv:
 24789                           	opt callstack 0
 24790                           
 24791 ;; *************** function ___flge *****************
 24792 ;; Defined at:
 24793 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 24794 ;; Parameters:    Size  Location     Type
 24795 ;;  ff1             4  [STACK] unsigned char 
 24796 ;;  ff2             4  [STACK] unsigned char 
 24797 ;; Auto vars:     Size  Location     Type
 24798 ;;		None
 24799 ;; Return value:  Size  Location     Type
 24800 ;;		None               void
 24801 ;; Registers used:
 24802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 24803 ;; Tracked objects:
 24804 ;;		On entry : 0/0
 24805 ;;		On exit  : 0/0
 24806 ;;		Unchanged: 0/0
 24807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24812 ;;Total ram usage:        0 bytes
 24813 ;; Hardware stack levels used:    1
 24814 ;; Hardware stack levels required when called:   15
 24815 ;; This function calls:
 24816 ;;		Nothing
 24817 ;; This function is called by:
 24818 ;;		_main
 24819 ;;		_calc_ror_data
 24820 ;;		_calc_bsoc
 24821 ;;		_efgtoa
 24822 ;; This function uses a reentrant model
 24823 ;;
 24824                           
 24825                           	psect	text99
 24826  01841A                     __ptext99:
 24827                           	opt callstack 0
 24828  01841A                     ___flge:
 24829                           	opt callstack 0
 24830                           
 24831                           ;stkvar	_ff1 @ sp[(0)+-4]
 24832                           
 24833                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24834                           ;incstack = 0
 24835 ;; hardware stack exceeded
 24836  01841A  50E1               	movf	fsr1l,w,c
 24837  01841C  0FFC               	addlw	-4
 24838  01841E  6ED9               	movwf	fsr2l,c
 24839  018420  50E2               	movf	fsr1h,w,c
 24840  018422  6EDA               	movwf	fsr2h,c
 24841  018424  0EFF               	movlw	255
 24842  018426  22DA               	addwfc	fsr2h,f,c
 24843  018428  0E00               	movlw	0
 24844  01842A  14DE               	andwf	postinc2,w,c
 24845  01842C  6E09               	movwf	(btemp+8)^0,c
 24846  01842E  0E00               	movlw	0
 24847  018430  14DE               	andwf	postinc2,w,c
 24848  018432  6E0A               	movwf	(btemp+9)^0,c
 24849  018434  0E80               	movlw	128
 24850  018436  14DE               	andwf	postinc2,w,c
 24851  018438  6E0B               	movwf	(btemp+10)^0,c
 24852  01843A  0E7F               	movlw	127
 24853  01843C  14DE               	andwf	postinc2,w,c
 24854  01843E  6E0C               	movwf	(btemp+11)^0,c
 24855  018440  5009               	movf	(btemp+8)^0,w,c
 24856  018442  100A               	iorwf	(btemp+9)^0,w,c
 24857  018444  100B               	iorwf	(btemp+10)^0,w,c
 24858  018446  100C               	iorwf	(btemp+11)^0,w,c
 24859  018448  A4D8               	btfss	status,2,c
 24860  01844A  D008               	goto	l8344
 24861                           
 24862                           ;stkvar	_ff1 @ sp[(0)+-4]
 24863  01844C  0EFC               	movlw	-4
 24864  01844E  6AE3               	clrf	plusw1,c
 24865  018450  0EFD               	movlw	-3
 24866  018452  6AE3               	clrf	plusw1,c
 24867  018454  0EFE               	movlw	-2
 24868  018456  6AE3               	clrf	plusw1,c
 24869  018458  0EFF               	movlw	-1
 24870  01845A  6AE3               	clrf	plusw1,c
 24871  01845C                     l8344:
 24872                           
 24873                           ;stkvar	_ff2 @ sp[(0)+-8]
 24874  01845C  50E1               	movf	fsr1l,w,c
 24875  01845E  0FF8               	addlw	-8
 24876  018460  6ED9               	movwf	fsr2l,c
 24877  018462  50E2               	movf	fsr1h,w,c
 24878  018464  6EDA               	movwf	fsr2h,c
 24879  018466  0EFF               	movlw	255
 24880  018468  22DA               	addwfc	fsr2h,f,c
 24881  01846A  0E00               	movlw	0
 24882  01846C  14DE               	andwf	postinc2,w,c
 24883  01846E  6E09               	movwf	(btemp+8)^0,c
 24884  018470  0E00               	movlw	0
 24885  018472  14DE               	andwf	postinc2,w,c
 24886  018474  6E0A               	movwf	(btemp+9)^0,c
 24887  018476  0E80               	movlw	128
 24888  018478  14DE               	andwf	postinc2,w,c
 24889  01847A  6E0B               	movwf	(btemp+10)^0,c
 24890  01847C  0E7F               	movlw	127
 24891  01847E  14DE               	andwf	postinc2,w,c
 24892  018480  6E0C               	movwf	(btemp+11)^0,c
 24893  018482  5009               	movf	(btemp+8)^0,w,c
 24894  018484  100A               	iorwf	(btemp+9)^0,w,c
 24895  018486  100B               	iorwf	(btemp+10)^0,w,c
 24896  018488  100C               	iorwf	(btemp+11)^0,w,c
 24897  01848A  A4D8               	btfss	status,2,c
 24898  01848C  D008               	goto	l2624
 24899                           
 24900                           ;stkvar	_ff2 @ sp[(0)+-8]
 24901  01848E  0EF8               	movlw	-8
 24902  018490  6AE3               	clrf	plusw1,c
 24903  018492  0EF9               	movlw	-7
 24904  018494  6AE3               	clrf	plusw1,c
 24905  018496  0EFA               	movlw	-6
 24906  018498  6AE3               	clrf	plusw1,c
 24907  01849A  0EFB               	movlw	-5
 24908  01849C  6AE3               	clrf	plusw1,c
 24909  01849E                     l2624:
 24910                           
 24911                           ;stkvar	_ff1 @ sp[(0)+-4]
 24912  01849E  0EFF               	movlw	-1
 24913  0184A0  AEE3               	btfss	plusw1,7,c
 24914  0184A2  D024               	goto	l8350
 24915                           
 24916                           ;stkvar	_ff1 @ sp[(0)+-4]
 24917  0184A4  0E00               	movlw	0
 24918  0184A6  6E09               	movwf	(btemp+8)^0,c
 24919  0184A8  0E00               	movlw	0
 24920  0184AA  6E0A               	movwf	(btemp+9)^0,c
 24921  0184AC  0E00               	movlw	0
 24922  0184AE  6E0B               	movwf	(btemp+10)^0,c
 24923  0184B0  0E80               	movlw	128
 24924  0184B2  6E0C               	movwf	(btemp+11)^0,c
 24925  0184B4  0EFC               	movlw	-4
 24926  0184B6  50E3               	movf	plusw1,w,c
 24927  0184B8  5E09               	subwf	(btemp+8)^0,f,c
 24928  0184BA  0EFD               	movlw	-3
 24929  0184BC  50E3               	movf	plusw1,w,c
 24930  0184BE  5A0A               	subwfb	(btemp+9)^0,f,c
 24931  0184C0  0EFE               	movlw	-2
 24932  0184C2  50E3               	movf	plusw1,w,c
 24933  0184C4  5A0B               	subwfb	(btemp+10)^0,f,c
 24934  0184C6  0EFF               	movlw	-1
 24935  0184C8  50E3               	movf	plusw1,w,c
 24936  0184CA  5A0C               	subwfb	(btemp+11)^0,f,c
 24937                           
 24938                           ;stkvar	_ff1 @ sp[(0)+-4]
 24939  0184CC  0EFC               	movlw	-4
 24940  0184CE  0060  F027  FFE3   	movff	btemp+8,plusw1
 24941  0184D4  0EFD               	movlw	-3
 24942  0184D6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24943  0184DC  0EFE               	movlw	-2
 24944  0184DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24945  0184E4  0EFF               	movlw	-1
 24946  0184E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 24947  0184EC                     l8350:
 24948                           
 24949                           ;stkvar	_ff2 @ sp[(0)+-8]
 24950  0184EC  0EFB               	movlw	-5
 24951  0184EE  AEE3               	btfss	plusw1,7,c
 24952  0184F0  D024               	goto	l8354
 24953                           
 24954                           ;stkvar	_ff2 @ sp[(0)+-8]
 24955  0184F2  0E00               	movlw	0
 24956  0184F4  6E09               	movwf	(btemp+8)^0,c
 24957  0184F6  0E00               	movlw	0
 24958  0184F8  6E0A               	movwf	(btemp+9)^0,c
 24959  0184FA  0E00               	movlw	0
 24960  0184FC  6E0B               	movwf	(btemp+10)^0,c
 24961  0184FE  0E80               	movlw	128
 24962  018500  6E0C               	movwf	(btemp+11)^0,c
 24963  018502  0EF8               	movlw	-8
 24964  018504  50E3               	movf	plusw1,w,c
 24965  018506  5E09               	subwf	(btemp+8)^0,f,c
 24966  018508  0EF9               	movlw	-7
 24967  01850A  50E3               	movf	plusw1,w,c
 24968  01850C  5A0A               	subwfb	(btemp+9)^0,f,c
 24969  01850E  0EFA               	movlw	-6
 24970  018510  50E3               	movf	plusw1,w,c
 24971  018512  5A0B               	subwfb	(btemp+10)^0,f,c
 24972  018514  0EFB               	movlw	-5
 24973  018516  50E3               	movf	plusw1,w,c
 24974  018518  5A0C               	subwfb	(btemp+11)^0,f,c
 24975                           
 24976                           ;stkvar	_ff2 @ sp[(0)+-8]
 24977  01851A  0EF8               	movlw	-8
 24978  01851C  0060  F027  FFE3   	movff	btemp+8,plusw1
 24979  018522  0EF9               	movlw	-7
 24980  018524  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24981  01852A  0EFA               	movlw	-6
 24982  01852C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24983  018532  0EFB               	movlw	-5
 24984  018534  0060  F033  FFE3   	movff	btemp+11,plusw1
 24985  01853A                     l8354:
 24986                           
 24987                           ;stkvar	_ff1 @ sp[(0)+-4]
 24988  01853A  0EFF               	movlw	-1
 24989  01853C  7EE3               	btg	plusw1,7,c
 24990                           
 24991                           ;stkvar	_ff2 @ sp[(0)+-8]
 24992  01853E  0EFB               	movlw	-5
 24993  018540  7EE3               	btg	plusw1,7,c
 24994                           
 24995                           ;stkvar	_ff2 @ sp[(0)+-8]
 24996                           ;stkvar	_ff1 @ sp[(0)+-4]
 24997  018542  50E1               	movf	fsr1l,w,c
 24998  018544  0FFC               	addlw	-4
 24999  018546  6ED9               	movwf	fsr2l,c
 25000  018548  50E2               	movf	fsr1h,w,c
 25001  01854A  6EDA               	movwf	fsr2h,c
 25002  01854C  0EFF               	movlw	255
 25003  01854E  22DA               	addwfc	fsr2h,f,c
 25004  018550  0EF8               	movlw	-8
 25005  018552  50E3               	movf	plusw1,w,c
 25006  018554  5CDE               	subwf	postinc2,w,c
 25007  018556  0EF9               	movlw	-7
 25008  018558  50E3               	movf	plusw1,w,c
 25009  01855A  58DE               	subwfb	postinc2,w,c
 25010  01855C  0EFA               	movlw	-6
 25011  01855E  50E3               	movf	plusw1,w,c
 25012  018560  58DE               	subwfb	postinc2,w,c
 25013  018562  0EFB               	movlw	-5
 25014  018564  50E3               	movf	plusw1,w,c
 25015  018566  58DE               	subwfb	postinc2,w,c
 25016  018568  B0D8               	btfsc	status,0,c
 25017  01856A  D002               	goto	l8362
 25018  01856C  9001               	bcf	btemp& (0+255),0,c
 25019  01856E  D001               	goto	l2631
 25020  018570                     l8362:
 25021  018570  8001               	bsf	btemp& (0+255),0,c
 25022  018572                     l2631:
 25023                           
 25024                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 25025  018572  0EF8               	movlw	248
 25026  018574  26E1               	addwf	fsr1l,f,c
 25027  018576  0EFF               	movlw	255
 25028  018578  22E2               	addwfc	fsr1h,f,c
 25029  01857A  0012               	return		;funcret
 25030  01857C                     __end_of___flge:
 25031                           	opt callstack 0
 25032                           
 25033 ;; *************** function _calc_model_data *****************
 25034 ;; Defined at:
 25035 ;;		line 67 in file "mbmc.c"
 25036 ;; Parameters:    Size  Location     Type
 25037 ;;		None
 25038 ;; Auto vars:     Size  Location     Type
 25039 ;;		None
 25040 ;; Return value:  Size  Location     Type
 25041 ;;                  1  [STACK] void 
 25042 ;; Registers used:
 25043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25044 ;; Tracked objects:
 25045 ;;		On entry : 0/0
 25046 ;;		On exit  : 3F/1
 25047 ;;		Unchanged: 0/0
 25048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25053 ;;Total ram usage:        0 bytes
 25054 ;; Hardware stack levels used:    1
 25055 ;; Hardware stack levels required when called:   18
 25056 ;; This function calls:
 25057 ;;		___fladd
 25058 ;;		___flmul
 25059 ;;		___flsub
 25060 ;;		_lp_filter
 25061 ;;		_start_bsoc
 25062 ;;		_stop_bsoc
 25063 ;; This function is called by:
 25064 ;;		_main
 25065 ;; This function uses a reentrant model
 25066 ;;
 25067                           
 25068                           	psect	text100
 25069  015B90                     __ptext100:
 25070                           	opt callstack 0
 25071  015B90                     _calc_model_data:
 25072                           	opt callstack 12
 25073                           
 25074                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 25075                           
 25076                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25077                           ;incstack = 0
 25078  015B90  EC1C  F0DA         	call	_stop_bsoc	;wreg free
 25079                           
 25080                           ; BSR set to: 57
 25081                           ;mbmc.c: 72:  if (!V.calib) {
 25082  015B94  0102               	movlb	2	; () banked
 25083  015B96  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 25084  015B98  A4D8               	btfss	status,2,c
 25085  015B9A  D1C5               	goto	l10714
 25086                           
 25087                           ; BSR set to: 2
 25088                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 25089  015B9C  C100  F144         	movff	_C,_C+68	;volatile
 25090  015BA0  C101  F145         	movff	_C+1,_C+69	;volatile
 25091  015BA4  C102  F146         	movff	_C+2,_C+70	;volatile
 25092  015BA8  C103  F147         	movff	_C+3,_C+71	;volatile
 25093                           
 25094                           ; BSR set to: 2
 25095                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 25096  015BAC  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 25097  015BB2  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 25098  015BB8  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 25099  015BBE  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 25100  015BC4  0060  F513  FFE6   	movff	_C+68,postinc1
 25101  015BCA  0060  F517  FFE6   	movff	_C+69,postinc1
 25102  015BD0  0060  F51B  FFE6   	movff	_C+70,postinc1
 25103  015BD6  0060  F51F  FFE6   	movff	_C+71,postinc1
 25104  015BDC  ECD7  F0D3         	call	___flsub	;wreg free
 25105  015BE0  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 25106  015BE6  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 25107  015BEC  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 25108  015BF2  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 25109                           
 25110                           ;mbmc.c: 75:   bcror = C.c_bat;
 25111  015BF8  C144  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 25112  015BFC  C145  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 25113  015C00  C146  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 25114  015C04  C147  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 25115                           
 25116                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 25117  015C08  C104  F148         	movff	_C+4,_C+72	;volatile
 25118  015C0C  C105  F149         	movff	_C+5,_C+73	;volatile
 25119  015C10  C106  F14A         	movff	_C+6,_C+74	;volatile
 25120  015C14  C107  F14B         	movff	_C+7,_C+75	;volatile
 25121                           
 25122                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 25123  015C18  C110  F154         	movff	_C+16,_C+84	;volatile
 25124  015C1C  C111  F155         	movff	_C+17,_C+85	;volatile
 25125  015C20  C112  F156         	movff	_C+18,_C+86	;volatile
 25126  015C24  C113  F157         	movff	_C+19,_C+87	;volatile
 25127                           
 25128                           ;mbmc.c: 78:   C.bv_ror = C.v_bat - bvror;
 25129  015C28  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 25130  015C2E  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 25131  015C34  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 25132  015C3A  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 25133  015C40  0060  F553  FFE6   	movff	_C+84,postinc1
 25134  015C46  0060  F557  FFE6   	movff	_C+85,postinc1
 25135  015C4C  0060  F55B  FFE6   	movff	_C+86,postinc1
 25136  015C52  0060  F55F  FFE6   	movff	_C+87,postinc1
 25137  015C58  ECD7  F0D3         	call	___flsub	;wreg free
 25138  015C5C  0060  F004  F168   	movff	btemp,_C+104	;volatile
 25139  015C62  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 25140  015C68  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 25141  015C6E  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 25142                           
 25143                           ;mbmc.c: 79:   bvror = C.v_bat;
 25144  015C74  C154  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 25145  015C78  C155  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 25146  015C7C  C156  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 25147  015C80  C157  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 25148                           
 25149                           ;mbmc.c: 80:   C.v_pv = C.calc[V_PV];
 25150  015C84  C114  F150         	movff	_C+20,_C+80	;volatile
 25151  015C88  C115  F151         	movff	_C+21,_C+81	;volatile
 25152  015C8C  C116  F152         	movff	_C+22,_C+82	;volatile
 25153  015C90  C117  F153         	movff	_C+23,_C+83	;volatile
 25154                           
 25155                           ;mbmc.c: 81:   C.v_cc = C.calc[V_CC];
 25156  015C94  C108  F14C         	movff	_C+8,_C+76	;volatile
 25157  015C98  C109  F14D         	movff	_C+9,_C+77	;volatile
 25158  015C9C  C10A  F14E         	movff	_C+10,_C+78	;volatile
 25159  015CA0  C10B  F14F         	movff	_C+11,_C+79	;volatile
 25160                           
 25161                           ;mbmc.c: 82:   C.v_inverter = C.calc[V_INVERTER];
 25162  015CA4  C130  F164         	movff	_C+48,_C+100	;volatile
 25163  015CA8  C131  F165         	movff	_C+49,_C+101	;volatile
 25164  015CAC  C132  F166         	movff	_C+50,_C+102	;volatile
 25165  015CB0  C133  F167         	movff	_C+51,_C+103	;volatile
 25166                           
 25167                           ;mbmc.c: 83:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 25168  015CB4  0E01               	movlw	1
 25169  015CB6  6EE6               	movwf	postinc1,c
 25170  015CB8  0E10               	movlw	16
 25171  015CBA  6EE6               	movwf	postinc1,c
 25172  015CBC  0060  F403  FFE6   	movff	_C,postinc1
 25173  015CC2  0060  F407  FFE6   	movff	_C+1,postinc1
 25174  015CC8  0060  F40B  FFE6   	movff	_C+2,postinc1
 25175  015CCE  0060  F40F  FFE6   	movff	_C+3,postinc1
 25176  015CD4  0060  F413  FFE6   	movff	_C+4,postinc1
 25177  015CDA  0060  F417  FFE6   	movff	_C+5,postinc1
 25178  015CE0  0060  F41B  FFE6   	movff	_C+6,postinc1
 25179  015CE6  0060  F41F  FFE6   	movff	_C+7,postinc1
 25180  015CEC  ECD7  F0D3         	call	___flsub	;wreg free
 25181  015CF0  0060  F007  FFE6   	movff	btemp,postinc1
 25182  015CF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25183  015CFC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25184  015D02  0060  F013  FFE6   	movff	btemp+3,postinc1
 25185  015D08  EC79  F0BD         	call	_lp_filter	;wreg free
 25186  015D0C  0060  F004  F140   	movff	btemp,_C+64	;volatile
 25187  015D12  0060  F008  F141   	movff	btemp+1,_C+65	;volatile
 25188  015D18  0060  F00C  F142   	movff	btemp+2,_C+66	;volatile
 25189  015D1E  0060  F010  F143   	movff	btemp+3,_C+67	;volatile
 25190                           
 25191                           ;mbmc.c: 84:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 25192  015D24  0E01               	movlw	1
 25193  015D26  6EE6               	movwf	postinc1,c
 25194  015D28  0E11               	movlw	17
 25195  015D2A  6EE6               	movwf	postinc1,c
 25196  015D2C  0060  F553  FFE6   	movff	_C+84,postinc1
 25197  015D32  0060  F557  FFE6   	movff	_C+85,postinc1
 25198  015D38  0060  F55B  FFE6   	movff	_C+86,postinc1
 25199  015D3E  0060  F55F  FFE6   	movff	_C+87,postinc1
 25200  015D44  0060  F503  FFE6   	movff	_C+64,postinc1
 25201  015D4A  0060  F507  FFE6   	movff	_C+65,postinc1
 25202  015D50  0060  F50B  FFE6   	movff	_C+66,postinc1
 25203  015D56  0060  F50F  FFE6   	movff	_C+67,postinc1
 25204  015D5C  EC70  F097         	call	___flmul	;wreg free
 25205  015D60  0060  F007  FFE6   	movff	btemp,postinc1
 25206  015D66  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25207  015D6C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25208  015D72  0060  F013  FFE6   	movff	btemp+3,postinc1
 25209  015D78  EC79  F0BD         	call	_lp_filter	;wreg free
 25210  015D7C  0060  F004  F170   	movff	btemp,_C+112	;volatile
 25211  015D82  0060  F008  F171   	movff	btemp+1,_C+113	;volatile
 25212  015D88  0060  F00C  F172   	movff	btemp+2,_C+114	;volatile
 25213  015D8E  0060  F010  F173   	movff	btemp+3,_C+115	;volatile
 25214                           
 25215                           ;mbmc.c: 85:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 25216  015D94  0E01               	movlw	1
 25217  015D96  6EE6               	movwf	postinc1,c
 25218  015D98  0E12               	movlw	18
 25219  015D9A  6EE6               	movwf	postinc1,c
 25220  015D9C  0060  F543  FFE6   	movff	_C+80,postinc1
 25221  015DA2  0060  F547  FFE6   	movff	_C+81,postinc1
 25222  015DA8  0060  F54B  FFE6   	movff	_C+82,postinc1
 25223  015DAE  0060  F54F  FFE6   	movff	_C+83,postinc1
 25224  015DB4  0060  F523  FFE6   	movff	_C+72,postinc1
 25225  015DBA  0060  F527  FFE6   	movff	_C+73,postinc1
 25226  015DC0  0060  F52B  FFE6   	movff	_C+74,postinc1
 25227  015DC6  0060  F52F  FFE6   	movff	_C+75,postinc1
 25228  015DCC  EC70  F097         	call	___flmul	;wreg free
 25229  015DD0  0060  F007  FFE6   	movff	btemp,postinc1
 25230  015DD6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25231  015DDC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25232  015DE2  0060  F013  FFE6   	movff	btemp+3,postinc1
 25233  015DE8  EC79  F0BD         	call	_lp_filter	;wreg free
 25234  015DEC  0060  F004  F178   	movff	btemp,_C+120	;volatile
 25235  015DF2  0060  F008  F179   	movff	btemp+1,_C+121	;volatile
 25236  015DF8  0060  F00C  F17A   	movff	btemp+2,_C+122	;volatile
 25237  015DFE  0060  F010  F17B   	movff	btemp+3,_C+123	;volatile
 25238                           
 25239                           ;mbmc.c: 86:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 25240  015E04  0E01               	movlw	1
 25241  015E06  6EE6               	movwf	postinc1,c
 25242  015E08  0E13               	movlw	19
 25243  015E0A  6EE6               	movwf	postinc1,c
 25244  015E0C  0E00               	movlw	0
 25245  015E0E  6EE6               	movwf	postinc1,c
 25246  015E10  0E00               	movlw	0
 25247  015E12  6EE6               	movwf	postinc1,c
 25248  015E14  0E60               	movlw	96
 25249  015E16  6EE6               	movwf	postinc1,c
 25250  015E18  0EC1               	movlw	193
 25251  015E1A  6EE6               	movwf	postinc1,c
 25252  015E1C  0060  F593  FFE6   	movff	_C+100,postinc1
 25253  015E22  0060  F597  FFE6   	movff	_C+101,postinc1
 25254  015E28  0060  F59B  FFE6   	movff	_C+102,postinc1
 25255  015E2E  0060  F59F  FFE6   	movff	_C+103,postinc1
 25256  015E34  0060  F503  FFE6   	movff	_C+64,postinc1
 25257  015E3A  0060  F507  FFE6   	movff	_C+65,postinc1
 25258  015E40  0060  F50B  FFE6   	movff	_C+66,postinc1
 25259  015E46  0060  F50F  FFE6   	movff	_C+67,postinc1
 25260  015E4C  EC70  F097         	call	___flmul	;wreg free
 25261  015E50  0060  F007  FFE6   	movff	btemp,postinc1
 25262  015E56  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25263  015E5C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25264  015E62  0060  F013  FFE6   	movff	btemp+3,postinc1
 25265  015E68  EC85  F09B         	call	___fladd	;wreg free
 25266  015E6C  0060  F007  FFE6   	movff	btemp,postinc1
 25267  015E72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25268  015E78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25269  015E7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 25270  015E84  EC79  F0BD         	call	_lp_filter	;wreg free
 25271  015E88  0060  F004  F174   	movff	btemp,_C+116	;volatile
 25272  015E8E  0060  F008  F175   	movff	btemp+1,_C+117	;volatile
 25273  015E94  0060  F00C  F176   	movff	btemp+2,_C+118	;volatile
 25274  015E9A  0060  F010  F177   	movff	btemp+3,_C+119	;volatile
 25275                           
 25276                           ;mbmc.c: 87:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 25277  015EA0  0E01               	movlw	1
 25278  015EA2  6EE6               	movwf	postinc1,c
 25279  015EA4  0E14               	movlw	20
 25280  015EA6  6EE6               	movwf	postinc1,c
 25281  015EA8  0060  F553  FFE6   	movff	_C+84,postinc1
 25282  015EAE  0060  F557  FFE6   	movff	_C+85,postinc1
 25283  015EB4  0060  F55B  FFE6   	movff	_C+86,postinc1
 25284  015EBA  0060  F55F  FFE6   	movff	_C+87,postinc1
 25285  015EC0  0060  F513  FFE6   	movff	_C+68,postinc1
 25286  015EC6  0060  F517  FFE6   	movff	_C+69,postinc1
 25287  015ECC  0060  F51B  FFE6   	movff	_C+70,postinc1
 25288  015ED2  0060  F51F  FFE6   	movff	_C+71,postinc1
 25289  015ED8  EC70  F097         	call	___flmul	;wreg free
 25290  015EDC  0060  F007  FFE6   	movff	btemp,postinc1
 25291  015EE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25292  015EE8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25293  015EEE  0060  F013  FFE6   	movff	btemp+3,postinc1
 25294  015EF4  EC79  F0BD         	call	_lp_filter	;wreg free
 25295  015EF8  0060  F004  F17C   	movff	btemp,_C+124	;volatile
 25296  015EFE  0060  F008  F17D   	movff	btemp+1,_C+125	;volatile
 25297  015F04  0060  F00C  F17E   	movff	btemp+2,_C+126	;volatile
 25298  015F0A  0060  F010  F17F   	movff	btemp+3,_C+127	;volatile
 25299                           
 25300                           ;mbmc.c: 91:   if (C.p_inverter < 0.0)
 25301  015F10  0101               	movlb	1	; () banked
 25302  015F12  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 25303  015F14  D008               	goto	l10714
 25304                           
 25305                           ; BSR set to: 1
 25306                           ;mbmc.c: 92:    C.p_inverter = 0.0001;
 25307  015F16  0E17               	movlw	23
 25308  015F18  6F74               	movwf	(_C+116)& (0+255),b	;volatile
 25309  015F1A  0EB7               	movlw	183
 25310  015F1C  6F75               	movwf	(_C+117)& (0+255),b	;volatile
 25311  015F1E  0ED1               	movlw	209
 25312  015F20  6F76               	movwf	(_C+118)& (0+255),b	;volatile
 25313  015F22  0E38               	movlw	56
 25314  015F24  6F77               	movwf	(_C+119)& (0+255),b	;volatile
 25315  015F26                     l10714:
 25316                           
 25317                           ;mbmc.c: 94:  start_bsoc();
 25318  015F26  ECBE  F0D8         	call	_start_bsoc	;wreg free
 25319                           
 25320                           ; BSR set to: 57
 25321                           ;mbmc.c: 95:  C.update = 1;
 25322  015F2A  0E01               	movlw	1
 25323  015F2C  0101               	movlb	1	; () banked
 25324  015F2E  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 25325                           
 25326                           ; BSR set to: 1
 25327                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25328  015F30  0012               	return		;funcret
 25329  015F32                     __end_of_calc_model_data:
 25330                           	opt callstack 0
 25331                           
 25332 ;; *************** function _stop_bsoc *****************
 25333 ;; Defined at:
 25334 ;;		line 107 in file "bsoc.c"
 25335 ;; Parameters:    Size  Location     Type
 25336 ;;		None
 25337 ;; Auto vars:     Size  Location     Type
 25338 ;;		None
 25339 ;; Return value:  Size  Location     Type
 25340 ;;                  1  [STACK] void 
 25341 ;; Registers used:
 25342 ;;		None
 25343 ;; Tracked objects:
 25344 ;;		On entry : 0/0
 25345 ;;		On exit  : 3F/39
 25346 ;;		Unchanged: 0/0
 25347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25352 ;;Total ram usage:        0 bytes
 25353 ;; Hardware stack levels used:    1
 25354 ;; Hardware stack levels required when called:   15
 25355 ;; This function calls:
 25356 ;;		Nothing
 25357 ;; This function is called by:
 25358 ;;		_calc_model_data
 25359 ;; This function uses a reentrant model
 25360 ;;
 25361                           
 25362                           	psect	text101
 25363  01B438                     __ptext101:
 25364                           	opt callstack 0
 25365  01B438                     _stop_bsoc:
 25366                           	opt callstack 14
 25367                           
 25368                           ;bsoc.c: 110:  PIE6bits.TMR3IE = 0;
 25369                           
 25370                           ; BSR set to: 1
 25371                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25372                           ;incstack = 0
 25373  01B438  0139               	movlb	57	; () banked
 25374  01B43A  9D96               	bcf	150,6,b	;volatile
 25375                           
 25376                           ; BSR set to: 57
 25377                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 25378  01B43C  0012               	return		;funcret
 25379  01B43E                     __end_of_stop_bsoc:
 25380                           	opt callstack 0
 25381                           
 25382 ;; *************** function _start_bsoc *****************
 25383 ;; Defined at:
 25384 ;;		line 98 in file "bsoc.c"
 25385 ;; Parameters:    Size  Location     Type
 25386 ;;		None
 25387 ;; Auto vars:     Size  Location     Type
 25388 ;;		None
 25389 ;; Return value:  Size  Location     Type
 25390 ;;                  1  [STACK] void 
 25391 ;; Registers used:
 25392 ;;		wreg, status,2, status,0, btemp+11
 25393 ;; Tracked objects:
 25394 ;;		On entry : 3C/2
 25395 ;;		On exit  : 3F/39
 25396 ;;		Unchanged: 0/0
 25397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25402 ;;Total ram usage:        0 bytes
 25403 ;; Hardware stack levels used:    1
 25404 ;; Hardware stack levels required when called:   15
 25405 ;; This function calls:
 25406 ;;		Nothing
 25407 ;; This function is called by:
 25408 ;;		_calc_model_data
 25409 ;; This function uses a reentrant model
 25410 ;;
 25411                           
 25412                           	psect	text102
 25413  01B17C                     __ptext102:
 25414                           	opt callstack 0
 25415  01B17C                     _start_bsoc:
 25416                           	opt callstack 14
 25417                           
 25418                           ;bsoc.c: 101:  PIE6bits.TMR3IE = 1;
 25419                           
 25420                           ; BSR set to: 57
 25421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25422                           ;incstack = 0
 25423  01B17C  0139               	movlb	57	; () banked
 25424  01B17E  8D96               	bsf	150,6,b	;volatile
 25425                           
 25426                           ; BSR set to: 57
 25427  01B180  A4BE               	btfss	190,2,c	;volatile
 25428  01B182  D002               	goto	u9260
 25429  01B184  0E01               	movlw	1
 25430  01B186  D001               	goto	u9266
 25431  01B188                     u9260:
 25432  01B188  0E00               	movlw	0
 25433  01B18A                     u9266:
 25434  01B18A  0AFF               	xorlw	255
 25435  01B18C  6E0C               	movwf	(btemp+11)^0,c
 25436  01B18E  460C               	rlncf	(btemp+11)^0,f,c
 25437  01B190  460C               	rlncf	(btemp+11)^0,f,c
 25438  01B192  50BE               	movf	190,w,c	;volatile
 25439  01B194  180C               	xorwf	(btemp+11)^0,w,c
 25440  01B196  0BFB               	andlw	-5
 25441  01B198  180C               	xorwf	(btemp+11)^0,w,c
 25442  01B19A  6EBE               	movwf	190,c	;volatile
 25443                           
 25444                           ; BSR set to: 57
 25445                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 25446  01B19C  0012               	return		;funcret
 25447  01B19E                     __end_of_start_bsoc:
 25448                           	opt callstack 0
 25449                           
 25450 ;; *************** function _lp_filter *****************
 25451 ;; Defined at:
 25452 ;;		line 29 in file "mbmc.c"
 25453 ;; Parameters:    Size  Location     Type
 25454 ;;  new             4  [STACK] const float 
 25455 ;;  bn              1  [STACK] const unsigned char 
 25456 ;;  slow            1  [STACK] const char 
 25457 ;; Auto vars:     Size  Location     Type
 25458 ;;  lp_speed        4  [STACK] float 
 25459 ;; Return value:  Size  Location     Type
 25460 ;;                  4  [STACK] float 
 25461 ;; Registers used:
 25462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25463 ;; Tracked objects:
 25464 ;;		On entry : 0/2
 25465 ;;		On exit  : 0/0
 25466 ;;		Unchanged: 0/0
 25467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25472 ;;Total ram usage:        0 bytes
 25473 ;; Hardware stack levels used:    1
 25474 ;; Hardware stack levels required when called:   17
 25475 ;; This function calls:
 25476 ;;		___fladd
 25477 ;;		___flmul
 25478 ;;		___flsub
 25479 ;; This function is called by:
 25480 ;;		_main
 25481 ;;		_convert_adc_data
 25482 ;;		_calc_model_data
 25483 ;; This function uses a reentrant model
 25484 ;;
 25485                           
 25486                           	psect	text103
 25487  017AF2                     __ptext103:
 25488                           	opt callstack 0
 25489  017AF2                     _lp_filter:
 25490                           	opt callstack 0
 25491                           
 25492                           ; BSR set to: 57
 25493                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25494  017AF2  52E6               	movf	postinc1,f,c
 25495  017AF4  52E6               	movf	postinc1,f,c
 25496  017AF6  52E6               	movf	postinc1,f,c
 25497  017AF8  52E6               	movf	postinc1,f,c
 25498                           
 25499                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 25500                           ;stkvar	_bn @ sp[(-4)+-5]
 25501                           
 25502                           ;incstack = 0
 25503  017AFA  0EF7               	movlw	-9
 25504  017AFC  006F FF8C  F001    	movff	plusw1,btemp
 25505  017B02  0E14               	movlw	20
 25506  017B04  6401               	cpfsgt	btemp^0,c
 25507  017B06  D011               	goto	l10100
 25508  017B08                     u9170:
 25509                           
 25510                           ;mbmc.c: 35:   return new;
 25511                           ;stkvar	_new @ sp[(-4)+-4]
 25512  017B08  0EF8               	movlw	-8
 25513  017B0A  006F FF8C  F001    	movff	plusw1,btemp
 25514  017B10  0EF9               	movlw	-7
 25515  017B12  006F FF8C  F002    	movff	plusw1,btemp+1
 25516  017B18  0EFA               	movlw	-6
 25517  017B1A  006F FF8C  F003    	movff	plusw1,btemp+2
 25518  017B20  0EFB               	movlw	-5
 25519  017B22  006F FF8C  F004    	movff	plusw1,btemp+3
 25520  017B28  D0BD               	goto	l1822
 25521  017B2A                     l10100:
 25522                           
 25523                           ;mbmc.c: 37:  if (slow == (-1)) {
 25524                           ;stkvar	_slow @ sp[(-4)+-6]
 25525  017B2A  0EF6               	movlw	-10
 25526  017B2C  28E3               	incf	plusw1,w,c
 25527  017B2E  A4D8               	btfss	status,2,c
 25528  017B30  D012               	goto	l10108
 25529                           
 25530                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 25531                           ;stkvar	_bn @ sp[(-4)+-5]
 25532  017B32  0EF7               	movlw	-9
 25533  017B34  50E3               	movf	plusw1,w,c
 25534  017B36  0D04               	mullw	4
 25535  017B38  0E00               	movlw	low lp_filter@smooth
 25536  017B3A  24F3               	addwf	243,w,c
 25537  017B3C  6ED9               	movwf	fsr2l,c
 25538  017B3E  0E03               	movlw	high lp_filter@smooth
 25539  017B40  20F4               	addwfc	prodh,w,c
 25540  017B42  6EDA               	movwf	fsr2h,c
 25541  017B44  0E00               	movlw	0
 25542  017B46  6EDE               	movwf	postinc2,c
 25543  017B48  0E00               	movlw	0
 25544  017B4A  6EDE               	movwf	postinc2,c
 25545  017B4C  0E00               	movlw	0
 25546  017B4E  6EDE               	movwf	postinc2,c
 25547  017B50  0E00               	movlw	0
 25548  017B52  6EDD               	movwf	postdec2,c
 25549  017B54  D7D9               	goto	u9170
 25550  017B56                     l10108:
 25551                           
 25552                           ;mbmc.c: 42:  if (slow) {
 25553                           ;stkvar	_slow @ sp[(-4)+-6]
 25554  017B56  0EF6               	movlw	-10
 25555  017B58  50E3               	movf	plusw1,w,c
 25556  017B5A  B4D8               	btfsc	status,2,c
 25557  017B5C  D006               	goto	l10112
 25558                           
 25559                           ;mbmc.c: 43:   lp_speed = 0.033;
 25560  017B5E  0E02               	movlw	2
 25561  017B60  6E09               	movwf	(btemp+8)^0,c
 25562  017B62  0E2B               	movlw	43
 25563  017B64  6E0A               	movwf	(btemp+9)^0,c
 25564  017B66  0E07               	movlw	7
 25565  017B68  D005               	goto	L28
 25566  017B6A                     l10112:
 25567                           
 25568                           ;mbmc.c: 45:   lp_speed = 0.066;
 25569  017B6A  0E02               	movlw	2
 25570  017B6C  6E09               	movwf	(btemp+8)^0,c
 25571  017B6E  0E2B               	movlw	43
 25572  017B70  6E0A               	movwf	(btemp+9)^0,c
 25573  017B72  0E87               	movlw	135
 25574  017B74                     L28:
 25575  017B74  6E0B               	movwf	(btemp+10)^0,c
 25576  017B76  0E3D               	movlw	61
 25577  017B78  6E0C               	movwf	(btemp+11)^0,c
 25578                           
 25579                           ;stkvar	_lp_speed @ sp[(-4)+0]
 25580  017B7A  0EFC               	movlw	-4
 25581  017B7C  0060  F027  FFE3   	movff	btemp+8,plusw1
 25582  017B82  0EFD               	movlw	-3
 25583  017B84  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25584  017B8A  0EFE               	movlw	-2
 25585  017B8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25586  017B92  0EFF               	movlw	-1
 25587  017B94  0060  F033  FFE3   	movff	btemp+11,plusw1
 25588                           
 25589                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 25590                           ;stkvar	_bn @ sp[(-4)+-5]
 25591  017B9A  0EF7               	movlw	-9
 25592  017B9C  50E3               	movf	plusw1,w,c
 25593  017B9E  0D04               	mullw	4
 25594  017BA0  0E00               	movlw	low lp_filter@smooth
 25595  017BA2  24F3               	addwf	243,w,c
 25596  017BA4  6ED9               	movwf	fsr2l,c
 25597  017BA6  0E03               	movlw	high lp_filter@smooth
 25598  017BA8  20F4               	addwfc	prodh,w,c
 25599  017BAA  6EDA               	movwf	fsr2h,c
 25600  017BAC  006F FF7B FFE6     	movff	postinc2,postinc1
 25601  017BB2  006F FF7B FFE6     	movff	postinc2,postinc1
 25602  017BB8  006F FF7B FFE6     	movff	postinc2,postinc1
 25603  017BBE  006F FF7B FFE6     	movff	postinc2,postinc1
 25604                           
 25605                           ;stkvar	_lp_speed @ sp[(-8)+0]
 25606  017BC4  0EF8               	movlw	-8
 25607  017BC6  006F FF8F FFE6     	movff	plusw1,postinc1
 25608  017BCC  006F FF8F FFE6     	movff	plusw1,postinc1
 25609  017BD2  006F FF8F FFE6     	movff	plusw1,postinc1
 25610  017BD8  006F FF8F FFE6     	movff	plusw1,postinc1
 25611                           
 25612                           ;stkvar	_bn @ sp[(-12)+-5]
 25613  017BDE  0EEF               	movlw	-17
 25614  017BE0  50E3               	movf	plusw1,w,c
 25615  017BE2  0D04               	mullw	4
 25616  017BE4  0E00               	movlw	low lp_filter@smooth
 25617  017BE6  24F3               	addwf	243,w,c
 25618  017BE8  6ED9               	movwf	fsr2l,c
 25619  017BEA  0E03               	movlw	high lp_filter@smooth
 25620  017BEC  20F4               	addwfc	prodh,w,c
 25621  017BEE  6EDA               	movwf	fsr2h,c
 25622  017BF0  006F FF7B FFE6     	movff	postinc2,postinc1
 25623  017BF6  006F FF7B FFE6     	movff	postinc2,postinc1
 25624  017BFC  006F FF7B FFE6     	movff	postinc2,postinc1
 25625  017C02  006F FF7B FFE6     	movff	postinc2,postinc1
 25626                           
 25627                           ;stkvar	_new @ sp[(-16)+-4]
 25628  017C08  0EEC               	movlw	-20
 25629  017C0A  006F FF8F FFE6     	movff	plusw1,postinc1
 25630  017C10  006F FF8F FFE6     	movff	plusw1,postinc1
 25631  017C16  006F FF8F FFE6     	movff	plusw1,postinc1
 25632  017C1C  006F FF8F FFE6     	movff	plusw1,postinc1
 25633  017C22  ECD7  F0D3         	call	___flsub	;wreg free
 25634  017C26  0060  F007  FFE6   	movff	btemp,postinc1
 25635  017C2C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25636  017C32  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25637  017C38  0060  F013  FFE6   	movff	btemp+3,postinc1
 25638  017C3E  EC70  F097         	call	___flmul	;wreg free
 25639  017C42  0060  F007  FFE6   	movff	btemp,postinc1
 25640  017C48  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25641  017C4E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25642  017C54  0060  F013  FFE6   	movff	btemp+3,postinc1
 25643  017C5A  EC85  F09B         	call	___fladd	;wreg free
 25644                           
 25645                           ;stkvar	_bn @ sp[(-4)+-5]
 25646  017C5E  0EF7               	movlw	-9
 25647  017C60  50E3               	movf	plusw1,w,c
 25648  017C62  0D04               	mullw	4
 25649  017C64  0E00               	movlw	low lp_filter@smooth
 25650  017C66  24F3               	addwf	243,w,c
 25651  017C68  6ED9               	movwf	fsr2l,c
 25652  017C6A  0E03               	movlw	high lp_filter@smooth
 25653  017C6C  20F4               	addwfc	prodh,w,c
 25654  017C6E  6EDA               	movwf	fsr2h,c
 25655  017C70  0060  F007  FFDE   	movff	btemp,postinc2
 25656  017C76  0060  F00B  FFDE   	movff	btemp+1,postinc2
 25657  017C7C  0060  F00F  FFDE   	movff	btemp+2,postinc2
 25658  017C82  0060  F013  FFDD   	movff	btemp+3,postdec2
 25659  017C88  52DD               	movf	postdec2,f,c
 25660  017C8A  52DD               	movf	postdec2,f,c
 25661  017C8C  006F FF78  F001    	movff	postinc2,btemp
 25662  017C92  006F FF78  F002    	movff	postinc2,btemp+1
 25663  017C98  006F FF78  F003    	movff	postinc2,btemp+2
 25664  017C9E  006F FF78  F004    	movff	postinc2,btemp+3
 25665  017CA4                     l1822:
 25666                           
 25667                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 25668  017CA4  0EF6               	movlw	246
 25669  017CA6  26E1               	addwf	fsr1l,f,c
 25670  017CA8  0EFF               	movlw	255
 25671  017CAA  22E2               	addwfc	fsr1h,f,c
 25672  017CAC  0012               	return		;funcret
 25673  017CAE                     __end_of_lp_filter:
 25674                           	opt callstack 0
 25675                           
 25676 ;; *************** function ___flsub *****************
 25677 ;; Defined at:
 25678 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 25679 ;; Parameters:    Size  Location     Type
 25680 ;;  b               4  [STACK] float 
 25681 ;;  a               4  [STACK] float 
 25682 ;; Auto vars:     Size  Location     Type
 25683 ;;		None
 25684 ;; Return value:  Size  Location     Type
 25685 ;;                  4  [STACK] float 
 25686 ;; Registers used:
 25687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 25688 ;; Tracked objects:
 25689 ;;		On entry : 0/0
 25690 ;;		On exit  : 0/0
 25691 ;;		Unchanged: 0/0
 25692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25697 ;;Total ram usage:        0 bytes
 25698 ;; Hardware stack levels used:    1
 25699 ;; Hardware stack levels required when called:   16
 25700 ;; This function calls:
 25701 ;;		___fladd
 25702 ;; This function is called by:
 25703 ;;		_conv_raw_result
 25704 ;;		_lp_filter
 25705 ;;		_calc_model_data
 25706 ;;		_calc_ror_data
 25707 ;;		_esr_check
 25708 ;;		_efgtoa
 25709 ;; This function uses a reentrant model
 25710 ;;
 25711                           
 25712                           	psect	text104
 25713  01A7AE                     __ptext104:
 25714                           	opt callstack 0
 25715  01A7AE                     ___flsub:
 25716                           	opt callstack 0
 25717                           
 25718                           ;stkvar	_a @ sp[(0)+-8]
 25719                           
 25720                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25721                           ;incstack = 0
 25722 ;; hardware stack exceeded
 25723  01A7AE  0EFB               	movlw	-5
 25724  01A7B0  7EE3               	btg	plusw1,7,c
 25725                           
 25726                           ;stkvar	_a @ sp[(0)+-8]
 25727  01A7B2  0EF8               	movlw	-8
 25728  01A7B4  006F FF8F FFE6     	movff	plusw1,postinc1
 25729  01A7BA  006F FF8F FFE6     	movff	plusw1,postinc1
 25730  01A7C0  006F FF8F FFE6     	movff	plusw1,postinc1
 25731  01A7C6  006F FF8F FFE6     	movff	plusw1,postinc1
 25732                           
 25733                           ;stkvar	_b @ sp[(-4)+-4]
 25734  01A7CC  0EF8               	movlw	-8
 25735  01A7CE  006F FF8F FFE6     	movff	plusw1,postinc1
 25736  01A7D4  006F FF8F FFE6     	movff	plusw1,postinc1
 25737  01A7DA  006F FF8F FFE6     	movff	plusw1,postinc1
 25738  01A7E0  006F FF8F FFE6     	movff	plusw1,postinc1
 25739  01A7E6  EC85  F09B         	call	___fladd	;wreg free
 25740                           
 25741                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 25742  01A7EA  0EF8               	movlw	248
 25743  01A7EC  26E1               	addwf	fsr1l,f,c
 25744  01A7EE  0EFF               	movlw	255
 25745  01A7F0  22E2               	addwfc	fsr1h,f,c
 25746  01A7F2  0012               	return		;funcret
 25747  01A7F4                     __end_of___flsub:
 25748                           	opt callstack 0
 25749                           
 25750 ;; *************** function ___fladd *****************
 25751 ;; Defined at:
 25752 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 25753 ;; Parameters:    Size  Location     Type
 25754 ;;  b               4  [STACK] float 
 25755 ;;  a               4  [STACK] float 
 25756 ;; Auto vars:     Size  Location     Type
 25757 ;;  grs             1  [STACK] unsigned char 
 25758 ;;  bexp            1  [STACK] unsigned char 
 25759 ;;  aexp            1  [STACK] unsigned char 
 25760 ;;  signs           1  [STACK] unsigned char 
 25761 ;; Return value:  Size  Location     Type
 25762 ;;                  4  [STACK] unsigned char 
 25763 ;; Registers used:
 25764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 25765 ;; Tracked objects:
 25766 ;;		On entry : 0/0
 25767 ;;		On exit  : 0/0
 25768 ;;		Unchanged: 0/0
 25769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25774 ;;Total ram usage:        0 bytes
 25775 ;; Hardware stack levels used:    1
 25776 ;; Hardware stack levels required when called:   15
 25777 ;; This function calls:
 25778 ;;		Nothing
 25779 ;; This function is called by:
 25780 ;;		_lp_filter
 25781 ;;		_calc_model_data
 25782 ;;		_calc_bsoc
 25783 ;;		_efgtoa
 25784 ;;		___flsub
 25785 ;; This function uses a reentrant model
 25786 ;;
 25787                           
 25788                           	psect	text105
 25789  01370A                     __ptext105:
 25790                           	opt callstack 0
 25791  01370A                     ___fladd:
 25792                           	opt callstack 0
 25793                           
 25794                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25795  01370A  52E6               	movf	postinc1,f,c
 25796  01370C  52E6               	movf	postinc1,f,c
 25797  01370E  52E6               	movf	postinc1,f,c
 25798  013710  52E6               	movf	postinc1,f,c
 25799                           
 25800                           ;stkvar	_b @ sp[(-4)+-4]
 25801                           
 25802                           ;incstack = 0
 25803 ;; hardware stack exceeded
 25804  013712  0EFB               	movlw	251
 25805  013714  24E1               	addwf	fsr1l,w,c
 25806  013716  6ED9               	movwf	fsr2l,c
 25807  013718  0EFF               	movlw	255
 25808  01371A  20E2               	addwfc	fsr1h,w,c
 25809  01371C  6EDA               	movwf	fsr2h,c
 25810  01371E  50DF               	movf	indf2,w,c
 25811  013720  6E0C               	movwf	(btemp+11)^0,c
 25812  013722  0E80               	movlw	128
 25813  013724  160C               	andwf	(btemp+11)^0,f,c
 25814                           
 25815                           ;stkvar	_signs @ sp[(-4)+3]
 25816  013726  0EFF               	movlw	-1
 25817  013728  0060  F033  FFE3   	movff	btemp+11,plusw1
 25818                           
 25819                           ;stkvar	_b @ sp[(-4)+-4]
 25820  01372E  0EFB               	movlw	251
 25821  013730  24E1               	addwf	fsr1l,w,c
 25822  013732  6ED9               	movwf	fsr2l,c
 25823  013734  0EFF               	movlw	255
 25824  013736  20E2               	addwfc	fsr1h,w,c
 25825  013738  6EDA               	movwf	fsr2h,c
 25826  01373A  50DF               	movf	indf2,w,c
 25827  01373C  6E0C               	movwf	(btemp+11)^0,c
 25828  01373E  90D8               	bcf	status,0,c
 25829  013740  340C               	rlcf	(btemp+11)^0,w,c
 25830  013742  6E0B               	movwf	(btemp+10)^0,c
 25831                           
 25832                           ;stkvar	_bexp @ sp[(-4)+1]
 25833  013744  0EFD               	movlw	-3
 25834  013746  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25835                           
 25836                           ;stkvar	_b @ sp[(-4)+-4]
 25837  01374C  0EFA               	movlw	250
 25838  01374E  24E1               	addwf	fsr1l,w,c
 25839  013750  6ED9               	movwf	fsr2l,c
 25840  013752  0EFF               	movlw	255
 25841  013754  20E2               	addwfc	fsr1h,w,c
 25842  013756  6EDA               	movwf	fsr2h,c
 25843  013758  AEDF               	btfss	indf2,7,c
 25844  01375A  D002               	goto	l7494
 25845                           
 25846                           ;stkvar	_bexp @ sp[(-4)+1]
 25847  01375C  0EFD               	movlw	-3
 25848  01375E  80E3               	bsf	plusw1,0,c
 25849  013760                     l7494:
 25850                           
 25851                           ;stkvar	_bexp @ sp[(-4)+1]
 25852  013760  0EFD               	movlw	-3
 25853  013762  50E3               	movf	plusw1,w,c
 25854  013764  B4D8               	btfsc	status,2,c
 25855  013766  D027               	goto	l7504
 25856                           
 25857                           ;stkvar	_bexp @ sp[(-4)+1]
 25858  013768  0EFD               	movlw	-3
 25859  01376A  28E3               	incf	plusw1,w,c
 25860  01376C  A4D8               	btfss	status,2,c
 25861  01376E  D018               	goto	l7500
 25862  013770  0E00               	movlw	0
 25863  013772  6E09               	movwf	(btemp+8)^0,c
 25864  013774  0E00               	movlw	0
 25865  013776  6E0A               	movwf	(btemp+9)^0,c
 25866  013778  0E00               	movlw	0
 25867  01377A  6E0B               	movwf	(btemp+10)^0,c
 25868  01377C  0E00               	movlw	0
 25869  01377E  6E0C               	movwf	(btemp+11)^0,c
 25870                           
 25871                           ;stkvar	_b @ sp[(-4)+-4]
 25872  013780  0EF8               	movlw	-8
 25873  013782  0060  F027  FFE3   	movff	btemp+8,plusw1
 25874  013788  0EF9               	movlw	-7
 25875  01378A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25876  013790  0EFA               	movlw	-6
 25877  013792  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25878  013798  0EFB               	movlw	-5
 25879  01379A  0060  F033  FFE3   	movff	btemp+11,plusw1
 25880  0137A0                     l7500:
 25881                           
 25882                           ;stkvar	_b @ sp[(-4)+-4]
 25883  0137A0  0EFA               	movlw	-6
 25884  0137A2  8EE3               	bsf	plusw1,7,c
 25885                           
 25886                           ;stkvar	_b @ sp[(-4)+-4]
 25887  0137A4  0EFB               	movlw	251
 25888  0137A6  24E1               	addwf	fsr1l,w,c
 25889  0137A8  6ED9               	movwf	fsr2l,c
 25890  0137AA  0EFF               	movlw	255
 25891  0137AC  20E2               	addwfc	fsr1h,w,c
 25892  0137AE  6EDA               	movwf	fsr2h,c
 25893  0137B0  0E00               	movlw	0
 25894  0137B2  6EDF               	movwf	indf2,c
 25895  0137B4  D018               	goto	l7506
 25896  0137B6                     l7504:
 25897  0137B6  0E00               	movlw	0
 25898  0137B8  6E09               	movwf	(btemp+8)^0,c
 25899  0137BA  0E00               	movlw	0
 25900  0137BC  6E0A               	movwf	(btemp+9)^0,c
 25901  0137BE  0E00               	movlw	0
 25902  0137C0  6E0B               	movwf	(btemp+10)^0,c
 25903  0137C2  0E00               	movlw	0
 25904  0137C4  6E0C               	movwf	(btemp+11)^0,c
 25905                           
 25906                           ;stkvar	_b @ sp[(-4)+-4]
 25907  0137C6  0EF8               	movlw	-8
 25908  0137C8  0060  F027  FFE3   	movff	btemp+8,plusw1
 25909  0137CE  0EF9               	movlw	-7
 25910  0137D0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25911  0137D6  0EFA               	movlw	-6
 25912  0137D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25913  0137DE  0EFB               	movlw	-5
 25914  0137E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 25915  0137E6                     l7506:
 25916                           
 25917                           ;stkvar	_a @ sp[(-4)+-8]
 25918  0137E6  0EF7               	movlw	247
 25919  0137E8  24E1               	addwf	fsr1l,w,c
 25920  0137EA  6ED9               	movwf	fsr2l,c
 25921  0137EC  0EFF               	movlw	255
 25922  0137EE  20E2               	addwfc	fsr1h,w,c
 25923  0137F0  6EDA               	movwf	fsr2h,c
 25924  0137F2  50DF               	movf	indf2,w,c
 25925  0137F4  6E0C               	movwf	(btemp+11)^0,c
 25926  0137F6  0E80               	movlw	128
 25927  0137F8  160C               	andwf	(btemp+11)^0,f,c
 25928                           
 25929                           ;stkvar	_aexp @ sp[(-4)+2]
 25930  0137FA  0EFE               	movlw	-2
 25931  0137FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 25932                           
 25933                           ;stkvar	_signs @ sp[(-4)+3]
 25934                           ;stkvar	_aexp @ sp[(-4)+2]
 25935  013802  50E1               	movf	fsr1l,w,c
 25936  013804  0FFE               	addlw	-2
 25937  013806  6ED9               	movwf	fsr2l,c
 25938  013808  50E2               	movf	fsr1h,w,c
 25939  01380A  6EDA               	movwf	fsr2h,c
 25940  01380C  0EFF               	movlw	255
 25941  01380E  22DA               	addwfc	fsr2h,f,c
 25942  013810  0EFF               	movlw	-1
 25943  013812  50E3               	movf	plusw1,w,c
 25944  013814  18DE               	xorwf	postinc2,w,c
 25945  013816  B4D8               	btfsc	status,2,c
 25946  013818  D002               	goto	l7512
 25947                           
 25948                           ;stkvar	_signs @ sp[(-4)+3]
 25949  01381A  0EFF               	movlw	-1
 25950  01381C  8CE3               	bsf	plusw1,6,c
 25951  01381E                     l7512:
 25952                           
 25953                           ;stkvar	_a @ sp[(-4)+-8]
 25954  01381E  0EF7               	movlw	247
 25955  013820  24E1               	addwf	fsr1l,w,c
 25956  013822  6ED9               	movwf	fsr2l,c
 25957  013824  0EFF               	movlw	255
 25958  013826  20E2               	addwfc	fsr1h,w,c
 25959  013828  6EDA               	movwf	fsr2h,c
 25960  01382A  50DF               	movf	indf2,w,c
 25961  01382C  6E0C               	movwf	(btemp+11)^0,c
 25962  01382E  90D8               	bcf	status,0,c
 25963  013830  340C               	rlcf	(btemp+11)^0,w,c
 25964  013832  6E0B               	movwf	(btemp+10)^0,c
 25965                           
 25966                           ;stkvar	_aexp @ sp[(-4)+2]
 25967  013834  0EFE               	movlw	-2
 25968  013836  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25969                           
 25970                           ;stkvar	_a @ sp[(-4)+-8]
 25971  01383C  0EF6               	movlw	246
 25972  01383E  24E1               	addwf	fsr1l,w,c
 25973  013840  6ED9               	movwf	fsr2l,c
 25974  013842  0EFF               	movlw	255
 25975  013844  20E2               	addwfc	fsr1h,w,c
 25976  013846  6EDA               	movwf	fsr2h,c
 25977  013848  AEDF               	btfss	indf2,7,c
 25978  01384A  D002               	goto	l7518
 25979                           
 25980                           ;stkvar	_aexp @ sp[(-4)+2]
 25981  01384C  0EFE               	movlw	-2
 25982  01384E  80E3               	bsf	plusw1,0,c
 25983  013850                     l7518:
 25984                           
 25985                           ;stkvar	_aexp @ sp[(-4)+2]
 25986  013850  0EFE               	movlw	-2
 25987  013852  50E3               	movf	plusw1,w,c
 25988  013854  B4D8               	btfsc	status,2,c
 25989  013856  D027               	goto	l7528
 25990                           
 25991                           ;stkvar	_aexp @ sp[(-4)+2]
 25992  013858  0EFE               	movlw	-2
 25993  01385A  28E3               	incf	plusw1,w,c
 25994  01385C  A4D8               	btfss	status,2,c
 25995  01385E  D018               	goto	l7524
 25996  013860  0E00               	movlw	0
 25997  013862  6E09               	movwf	(btemp+8)^0,c
 25998  013864  0E00               	movlw	0
 25999  013866  6E0A               	movwf	(btemp+9)^0,c
 26000  013868  0E00               	movlw	0
 26001  01386A  6E0B               	movwf	(btemp+10)^0,c
 26002  01386C  0E00               	movlw	0
 26003  01386E  6E0C               	movwf	(btemp+11)^0,c
 26004                           
 26005                           ;stkvar	_a @ sp[(-4)+-8]
 26006  013870  0EF4               	movlw	-12
 26007  013872  0060  F027  FFE3   	movff	btemp+8,plusw1
 26008  013878  0EF5               	movlw	-11
 26009  01387A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26010  013880  0EF6               	movlw	-10
 26011  013882  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26012  013888  0EF7               	movlw	-9
 26013  01388A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26014  013890                     l7524:
 26015                           
 26016                           ;stkvar	_a @ sp[(-4)+-8]
 26017  013890  0EF6               	movlw	-10
 26018  013892  8EE3               	bsf	plusw1,7,c
 26019                           
 26020                           ;stkvar	_a @ sp[(-4)+-8]
 26021  013894  0EF7               	movlw	247
 26022  013896  24E1               	addwf	fsr1l,w,c
 26023  013898  6ED9               	movwf	fsr2l,c
 26024  01389A  0EFF               	movlw	255
 26025  01389C  20E2               	addwfc	fsr1h,w,c
 26026  01389E  6EDA               	movwf	fsr2h,c
 26027  0138A0  0E00               	movlw	0
 26028  0138A2  6EDF               	movwf	indf2,c
 26029  0138A4  D018               	goto	l7530
 26030  0138A6                     l7528:
 26031  0138A6  0E00               	movlw	0
 26032  0138A8  6E09               	movwf	(btemp+8)^0,c
 26033  0138AA  0E00               	movlw	0
 26034  0138AC  6E0A               	movwf	(btemp+9)^0,c
 26035  0138AE  0E00               	movlw	0
 26036  0138B0  6E0B               	movwf	(btemp+10)^0,c
 26037  0138B2  0E00               	movlw	0
 26038  0138B4  6E0C               	movwf	(btemp+11)^0,c
 26039                           
 26040                           ;stkvar	_a @ sp[(-4)+-8]
 26041  0138B6  0EF4               	movlw	-12
 26042  0138B8  0060  F027  FFE3   	movff	btemp+8,plusw1
 26043  0138BE  0EF5               	movlw	-11
 26044  0138C0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26045  0138C6  0EF6               	movlw	-10
 26046  0138C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26047  0138CE  0EF7               	movlw	-9
 26048  0138D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 26049  0138D6                     l7530:
 26050                           
 26051                           ;stkvar	_bexp @ sp[(-4)+1]
 26052                           ;stkvar	_aexp @ sp[(-4)+2]
 26053  0138D6  50E1               	movf	fsr1l,w,c
 26054  0138D8  0FFE               	addlw	-2
 26055  0138DA  6ED9               	movwf	fsr2l,c
 26056  0138DC  50E2               	movf	fsr1h,w,c
 26057  0138DE  6EDA               	movwf	fsr2h,c
 26058  0138E0  0EFF               	movlw	255
 26059  0138E2  22DA               	addwfc	fsr2h,f,c
 26060  0138E4  0EFD               	movlw	-3
 26061  0138E6  50E3               	movf	plusw1,w,c
 26062  0138E8  5CDE               	subwf	postinc2,w,c
 26063  0138EA  B0D8               	btfsc	status,0,c
 26064  0138EC  D0A4               	goto	l7566
 26065                           
 26066                           ;stkvar	_signs @ sp[(-4)+3]
 26067  0138EE  0EFF               	movlw	-1
 26068  0138F0  ACE3               	btfss	plusw1,6,c
 26069  0138F2  D002               	goto	l7536
 26070                           
 26071                           ;stkvar	_signs @ sp[(-4)+3]
 26072  0138F4  0EFF               	movlw	-1
 26073  0138F6  7EE3               	btg	plusw1,7,c
 26074  0138F8                     l7536:
 26075                           
 26076                           ;stkvar	_bexp @ sp[(-4)+1]
 26077                           ;stkvar	_grs @ sp[(-4)+0]
 26078  0138F8  0EFD               	movlw	-3
 26079  0138FA  006F FF8C  F001    	movff	plusw1,btemp
 26080  013900  0EFC               	movlw	-4
 26081  013902  0060  F007  FFE3   	movff	btemp,plusw1
 26082                           
 26083                           ;stkvar	_aexp @ sp[(-4)+2]
 26084                           ;stkvar	_bexp @ sp[(-4)+1]
 26085  013908  0EFE               	movlw	-2
 26086  01390A  006F FF8C  F001    	movff	plusw1,btemp
 26087  013910  0EFD               	movlw	-3
 26088  013912  0060  F007  FFE3   	movff	btemp,plusw1
 26089                           
 26090                           ;stkvar	_grs @ sp[(-4)+0]
 26091                           ;stkvar	_aexp @ sp[(-4)+2]
 26092  013918  0EFC               	movlw	-4
 26093  01391A  006F FF8C  F001    	movff	plusw1,btemp
 26094  013920  0EFE               	movlw	-2
 26095  013922  0060  F007  FFE3   	movff	btemp,plusw1
 26096                           
 26097                           ;stkvar	_b @ sp[(-4)+-4]
 26098                           ;stkvar	_grs @ sp[(-4)+0]
 26099  013928  0EF8               	movlw	-8
 26100  01392A  006F FF8C  F001    	movff	plusw1,btemp
 26101  013930  0EFC               	movlw	-4
 26102  013932  0060  F007  FFE3   	movff	btemp,plusw1
 26103                           
 26104                           ;stkvar	_a @ sp[(-4)+-8]
 26105                           ;stkvar	_b @ sp[(-4)+-4]
 26106  013938  0EF4               	movlw	-12
 26107  01393A  006F FF8C  F001    	movff	plusw1,btemp
 26108  013940  0EF8               	movlw	-8
 26109  013942  0060  F007  FFE3   	movff	btemp,plusw1
 26110                           
 26111                           ;stkvar	_grs @ sp[(-4)+0]
 26112                           ;stkvar	_a @ sp[(-4)+-8]
 26113  013948  0EFC               	movlw	-4
 26114  01394A  006F FF8C  F001    	movff	plusw1,btemp
 26115  013950  0EF4               	movlw	-12
 26116  013952  0060  F007  FFE3   	movff	btemp,plusw1
 26117                           
 26118                           ;stkvar	_b @ sp[(-4)+-4]
 26119  013958  0EF9               	movlw	249
 26120  01395A  24E1               	addwf	fsr1l,w,c
 26121  01395C  6ED9               	movwf	fsr2l,c
 26122  01395E  0EFF               	movlw	255
 26123  013960  20E2               	addwfc	fsr1h,w,c
 26124  013962  6EDA               	movwf	fsr2h,c
 26125  013964  50DF               	movf	indf2,w,c
 26126  013966  6E0C               	movwf	(btemp+11)^0,c
 26127                           
 26128                           ;stkvar	_grs @ sp[(-4)+0]
 26129  013968  0EFC               	movlw	-4
 26130  01396A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26131                           
 26132                           ;stkvar	_a @ sp[(-4)+-8]
 26133  013970  0EF5               	movlw	245
 26134  013972  24E1               	addwf	fsr1l,w,c
 26135  013974  6ED9               	movwf	fsr2l,c
 26136  013976  0EFF               	movlw	255
 26137  013978  20E2               	addwfc	fsr1h,w,c
 26138  01397A  6EDA               	movwf	fsr2h,c
 26139                           
 26140                           ;stkvar	_b @ sp[(-4)+-4]
 26141  01397C  0EF9               	movlw	249
 26142  01397E  24E1               	addwf	fsr1l,w,c
 26143  013980  6EE9               	movwf	fsr0l,c
 26144  013982  0EFF               	movlw	255
 26145  013984  20E2               	addwfc	fsr1h,w,c
 26146  013986  6EEA               	movwf	fsr0h,c
 26147  013988  006F FF7F FFEF     	movff	indf2,indf0
 26148                           
 26149                           ;stkvar	_grs @ sp[(-4)+0]
 26150                           ;stkvar	_a @ sp[(-4)+-8]
 26151  01398E  0EF5               	movlw	245
 26152  013990  24E1               	addwf	fsr1l,w,c
 26153  013992  6ED9               	movwf	fsr2l,c
 26154  013994  0EFF               	movlw	255
 26155  013996  20E2               	addwfc	fsr1h,w,c
 26156  013998  6EDA               	movwf	fsr2h,c
 26157  01399A  0EFC               	movlw	-4
 26158  01399C  006F FF8F FFDF     	movff	plusw1,indf2
 26159                           
 26160                           ;stkvar	_b @ sp[(-4)+-4]
 26161  0139A2  0EFA               	movlw	250
 26162  0139A4  24E1               	addwf	fsr1l,w,c
 26163  0139A6  6ED9               	movwf	fsr2l,c
 26164  0139A8  0EFF               	movlw	255
 26165  0139AA  20E2               	addwfc	fsr1h,w,c
 26166  0139AC  6EDA               	movwf	fsr2h,c
 26167  0139AE  50DF               	movf	indf2,w,c
 26168  0139B0  6E0C               	movwf	(btemp+11)^0,c
 26169                           
 26170                           ;stkvar	_grs @ sp[(-4)+0]
 26171  0139B2  0EFC               	movlw	-4
 26172  0139B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 26173                           
 26174                           ;stkvar	_a @ sp[(-4)+-8]
 26175  0139BA  0EF6               	movlw	246
 26176  0139BC  24E1               	addwf	fsr1l,w,c
 26177  0139BE  6ED9               	movwf	fsr2l,c
 26178  0139C0  0EFF               	movlw	255
 26179  0139C2  20E2               	addwfc	fsr1h,w,c
 26180  0139C4  6EDA               	movwf	fsr2h,c
 26181                           
 26182                           ;stkvar	_b @ sp[(-4)+-4]
 26183  0139C6  0EFA               	movlw	250
 26184  0139C8  24E1               	addwf	fsr1l,w,c
 26185  0139CA  6EE9               	movwf	fsr0l,c
 26186  0139CC  0EFF               	movlw	255
 26187  0139CE  20E2               	addwfc	fsr1h,w,c
 26188  0139D0  6EEA               	movwf	fsr0h,c
 26189  0139D2  006F FF7F FFEF     	movff	indf2,indf0
 26190                           
 26191                           ;stkvar	_grs @ sp[(-4)+0]
 26192                           ;stkvar	_a @ sp[(-4)+-8]
 26193  0139D8  0EF6               	movlw	246
 26194  0139DA  24E1               	addwf	fsr1l,w,c
 26195  0139DC  6ED9               	movwf	fsr2l,c
 26196  0139DE  0EFF               	movlw	255
 26197  0139E0  20E2               	addwfc	fsr1h,w,c
 26198  0139E2  6EDA               	movwf	fsr2h,c
 26199  0139E4  0EFC               	movlw	-4
 26200  0139E6  006F FF8F FFDF     	movff	plusw1,indf2
 26201                           
 26202                           ;stkvar	_b @ sp[(-4)+-4]
 26203  0139EC  0EFB               	movlw	251
 26204  0139EE  24E1               	addwf	fsr1l,w,c
 26205  0139F0  6ED9               	movwf	fsr2l,c
 26206  0139F2  0EFF               	movlw	255
 26207  0139F4  20E2               	addwfc	fsr1h,w,c
 26208  0139F6  6EDA               	movwf	fsr2h,c
 26209  0139F8  50DF               	movf	indf2,w,c
 26210  0139FA  6E0C               	movwf	(btemp+11)^0,c
 26211                           
 26212                           ;stkvar	_grs @ sp[(-4)+0]
 26213  0139FC  0EFC               	movlw	-4
 26214  0139FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 26215                           
 26216                           ;stkvar	_a @ sp[(-4)+-8]
 26217  013A04  0EF7               	movlw	247
 26218  013A06  24E1               	addwf	fsr1l,w,c
 26219  013A08  6ED9               	movwf	fsr2l,c
 26220  013A0A  0EFF               	movlw	255
 26221  013A0C  20E2               	addwfc	fsr1h,w,c
 26222  013A0E  6EDA               	movwf	fsr2h,c
 26223                           
 26224                           ;stkvar	_b @ sp[(-4)+-4]
 26225  013A10  0EFB               	movlw	251
 26226  013A12  24E1               	addwf	fsr1l,w,c
 26227  013A14  6EE9               	movwf	fsr0l,c
 26228  013A16  0EFF               	movlw	255
 26229  013A18  20E2               	addwfc	fsr1h,w,c
 26230  013A1A  6EEA               	movwf	fsr0h,c
 26231  013A1C  006F FF7F FFEF     	movff	indf2,indf0
 26232                           
 26233                           ;stkvar	_grs @ sp[(-4)+0]
 26234                           ;stkvar	_a @ sp[(-4)+-8]
 26235  013A22  0EF7               	movlw	247
 26236  013A24  24E1               	addwf	fsr1l,w,c
 26237  013A26  6ED9               	movwf	fsr2l,c
 26238  013A28  0EFF               	movlw	255
 26239  013A2A  20E2               	addwfc	fsr1h,w,c
 26240  013A2C  6EDA               	movwf	fsr2h,c
 26241  013A2E  0EFC               	movlw	-4
 26242  013A30  006F FF8F FFDF     	movff	plusw1,indf2
 26243  013A36                     l7566:
 26244                           
 26245                           ;stkvar	_grs @ sp[(-4)+0]
 26246  013A36  0EFC               	movlw	-4
 26247  013A38  6AE3               	clrf	plusw1,c
 26248                           
 26249                           ;stkvar	_aexp @ sp[(-4)+2]
 26250  013A3A  0EFE               	movlw	-2
 26251  013A3C  50E3               	movf	plusw1,w,c
 26252  013A3E  6E0B               	movwf	(btemp+10)^0,c
 26253  013A40  6A0C               	clrf	(btemp+11)^0,c
 26254                           
 26255                           ;stkvar	_bexp @ sp[(-4)+1]
 26256  013A42  0EFD               	movlw	-3
 26257  013A44  50E3               	movf	plusw1,w,c
 26258  013A46  5E0B               	subwf	(btemp+10)^0,f,c
 26259  013A48  0E00               	movlw	0
 26260  013A4A  5A0C               	subwfb	(btemp+11)^0,f,c
 26261  013A4C  BE0C               	btfsc	(btemp+11)^0,7,c
 26262  013A4E  D062               	goto	l7590
 26263  013A50  500C               	movf	(btemp+11)^0,w,c
 26264  013A52  E104               	bnz	u5310
 26265  013A54  0E1A               	movlw	26
 26266  013A56  5C0B               	subwf	(btemp+10)^0,w,c
 26267  013A58  A0D8               	btfss	status,0,c
 26268  013A5A  D05C               	goto	l7590
 26269  013A5C                     u5310:
 26270                           
 26271                           ;stkvar	_b @ sp[(-4)+-4]
 26272  013A5C  0EF8               	movlw	-8
 26273  013A5E  50E3               	movf	plusw1,w,c
 26274  013A60  E10A               	bnz	u5321
 26275  013A62  0EF9               	movlw	-7
 26276  013A64  50E3               	movf	plusw1,w,c
 26277  013A66  E107               	bnz	u5321
 26278  013A68  0EFA               	movlw	-6
 26279  013A6A  50E3               	movf	plusw1,w,c
 26280  013A6C  E104               	bnz	u5321
 26281  013A6E  0EFB               	movlw	-5
 26282  013A70  50E3               	movf	plusw1,w,c
 26283  013A72  B4D8               	btfsc	status,2,c
 26284  013A74  D003               	goto	u5320
 26285  013A76                     u5321:
 26286  013A76  6A0C               	clrf	(btemp+11)^0,c
 26287  013A78  2A0C               	incf	(btemp+11)^0,f,c
 26288  013A7A  D001               	goto	u5338
 26289  013A7C                     u5320:
 26290  013A7C  6A0C               	clrf	(btemp+11)^0,c
 26291  013A7E                     u5338:
 26292                           
 26293                           ;stkvar	_grs @ sp[(-4)+0]
 26294  013A7E  0EFC               	movlw	-4
 26295  013A80  0060  F033  FFE3   	movff	btemp+11,plusw1
 26296                           
 26297                           ;stkvar	_b @ sp[(-4)+-4]
 26298  013A86  0EF8               	movlw	-8
 26299  013A88  6AE3               	clrf	plusw1,c
 26300  013A8A  0EF9               	movlw	-7
 26301  013A8C  6AE3               	clrf	plusw1,c
 26302  013A8E  0EFA               	movlw	-6
 26303  013A90  6AE3               	clrf	plusw1,c
 26304  013A92  0EFB               	movlw	-5
 26305  013A94  6AE3               	clrf	plusw1,c
 26306                           
 26307                           ;stkvar	_aexp @ sp[(-4)+2]
 26308                           ;stkvar	_bexp @ sp[(-4)+1]
 26309  013A96  0EFE               	movlw	-2
 26310  013A98  006F FF8C  F001    	movff	plusw1,btemp
 26311  013A9E  0EFD               	movlw	-3
 26312  013AA0  0060  F007  FFE3   	movff	btemp,plusw1
 26313  013AA6  D042               	goto	u5370
 26314  013AA8                     l7576:
 26315                           
 26316                           ;stkvar	_grs @ sp[(-4)+0]
 26317  013AA8  0EFC               	movlw	-4
 26318  013AAA  A0E3               	btfss	plusw1,0,c
 26319  013AAC  D00D               	goto	l7580
 26320                           
 26321                           ;stkvar	_grs @ sp[(-4)+0]
 26322  013AAE  0EFC               	movlw	-4
 26323  013AB0  006F FF8C  F00C    	movff	plusw1,btemp+11
 26324  013AB6  90D8               	bcf	status,0,c
 26325  013AB8  320C               	rrcf	(btemp+11)^0,f,c
 26326  013ABA  0E01               	movlw	1
 26327  013ABC  120C               	iorwf	(btemp+11)^0,f,c
 26328                           
 26329                           ;stkvar	_grs @ sp[(-4)+0]
 26330  013ABE  0EFC               	movlw	-4
 26331  013AC0  0060  F033  FFE3   	movff	btemp+11,plusw1
 26332  013AC6  D009               	goto	l7582
 26333  013AC8                     l7580:
 26334                           
 26335                           ;stkvar	_grs @ sp[(-4)+0]
 26336  013AC8  50E1               	movf	fsr1l,w,c
 26337  013ACA  0FFC               	addlw	-4
 26338  013ACC  6ED9               	movwf	fsr2l,c
 26339  013ACE  50E2               	movf	fsr1h,w,c
 26340  013AD0  6EDA               	movwf	fsr2h,c
 26341  013AD2  0EFF               	movlw	255
 26342  013AD4  22DA               	addwfc	fsr2h,f,c
 26343  013AD6  90D8               	bcf	status,0,c
 26344  013AD8  32DF               	rrcf	indf2,f,c
 26345  013ADA                     l7582:
 26346                           
 26347                           ;stkvar	_b @ sp[(-4)+-4]
 26348  013ADA  0EF8               	movlw	-8
 26349  013ADC  A0E3               	btfss	plusw1,0,c
 26350  013ADE  D002               	goto	l7586
 26351                           
 26352                           ;stkvar	_grs @ sp[(-4)+0]
 26353  013AE0  0EFC               	movlw	-4
 26354  013AE2  8EE3               	bsf	plusw1,7,c
 26355  013AE4                     l7586:
 26356  013AE4  0E01               	movlw	1
 26357  013AE6  6E0C               	movwf	(btemp+11)^0,c
 26358                           
 26359                           ;stkvar	_b @ sp[(-4)+-4]
 26360  013AE8  50E1               	movf	fsr1l,w,c
 26361  013AEA  0FF8               	addlw	-8
 26362  013AEC  6ED9               	movwf	fsr2l,c
 26363  013AEE  50E2               	movf	fsr1h,w,c
 26364  013AF0  6EDA               	movwf	fsr2h,c
 26365  013AF2  0EFF               	movlw	255
 26366  013AF4  22DA               	addwfc	fsr2h,f,c
 26367  013AF6  280C               	incf	(btemp+11)^0,w,c
 26368  013AF8  52DE               	movf	postinc2,f,c
 26369  013AFA  D008               	goto	u5360
 26370  013AFC                     u5365:
 26371  013AFC  52DE               	movf	postinc2,f,c
 26372  013AFE  90D8               	bcf	status,0,c
 26373  013B00  BEDC               	btfsc	preinc2,7,c
 26374  013B02  80D8               	bsf	status,0,c
 26375  013B04  32DD               	rrcf	postdec2,f,c
 26376  013B06  32DD               	rrcf	postdec2,f,c
 26377  013B08  32DD               	rrcf	postdec2,f,c
 26378  013B0A  32DE               	rrcf	postinc2,f,c
 26379  013B0C                     u5360:
 26380  013B0C  2EE8               	decfsz	wreg,f,c
 26381  013B0E  D7F6               	goto	u5365
 26382                           
 26383                           ;stkvar	_bexp @ sp[(-4)+1]
 26384  013B10  0EFD               	movlw	-3
 26385  013B12  2AE3               	incf	plusw1,f,c
 26386  013B14                     l7590:
 26387                           
 26388                           ;stkvar	_aexp @ sp[(-4)+2]
 26389                           ;stkvar	_bexp @ sp[(-4)+1]
 26390  013B14  50E1               	movf	fsr1l,w,c
 26391  013B16  0FFD               	addlw	-3
 26392  013B18  6ED9               	movwf	fsr2l,c
 26393  013B1A  50E2               	movf	fsr1h,w,c
 26394  013B1C  6EDA               	movwf	fsr2h,c
 26395  013B1E  0EFF               	movlw	255
 26396  013B20  22DA               	addwfc	fsr2h,f,c
 26397  013B22  0EFE               	movlw	-2
 26398  013B24  50E3               	movf	plusw1,w,c
 26399  013B26  5CDE               	subwf	postinc2,w,c
 26400  013B28  A0D8               	btfss	status,0,c
 26401  013B2A  D7BE               	goto	l7576
 26402  013B2C                     u5370:
 26403                           
 26404                           ;stkvar	_signs @ sp[(-4)+3]
 26405  013B2C  0EFF               	movlw	-1
 26406  013B2E  BCE3               	btfsc	plusw1,6,c
 26407  013B30  D066               	goto	l7618
 26408                           
 26409                           ;stkvar	_bexp @ sp[(-4)+1]
 26410  013B32  0EFD               	movlw	-3
 26411  013B34  50E3               	movf	plusw1,w,c
 26412  013B36  B4D8               	btfsc	status,2,c
 26413  013B38  D0F2               	goto	u5470
 26414                           
 26415                           ;stkvar	_a @ sp[(-4)+-8]
 26416                           ;stkvar	_b @ sp[(-4)+-4]
 26417  013B3A  0EF8               	movlw	-8
 26418  013B3C  50E3               	movf	plusw1,w,c
 26419  013B3E  6E01               	movwf	btemp^0,c
 26420  013B40  0EF4               	movlw	-12
 26421  013B42  50E3               	movf	plusw1,w,c
 26422  013B44  2601               	addwf	btemp^0,f,c
 26423  013B46  0EF8               	movlw	-8
 26424  013B48  0060  F007  FFE3   	movff	btemp,plusw1
 26425  013B4E  0EF9               	movlw	-7
 26426  013B50  50E3               	movf	plusw1,w,c
 26427  013B52  6E01               	movwf	btemp^0,c
 26428  013B54  0EF5               	movlw	-11
 26429  013B56  50E3               	movf	plusw1,w,c
 26430  013B58  2201               	addwfc	btemp^0,f,c
 26431  013B5A  0EF9               	movlw	-7
 26432  013B5C  0060  F007  FFE3   	movff	btemp,plusw1
 26433  013B62  0EFA               	movlw	-6
 26434  013B64  50E3               	movf	plusw1,w,c
 26435  013B66  6E01               	movwf	btemp^0,c
 26436  013B68  0EF6               	movlw	-10
 26437  013B6A  50E3               	movf	plusw1,w,c
 26438  013B6C  2201               	addwfc	btemp^0,f,c
 26439  013B6E  0EFA               	movlw	-6
 26440  013B70  0060  F007  FFE3   	movff	btemp,plusw1
 26441  013B76  0EFB               	movlw	-5
 26442  013B78  50E3               	movf	plusw1,w,c
 26443  013B7A  6E01               	movwf	btemp^0,c
 26444  013B7C  0EF7               	movlw	-9
 26445  013B7E  50E3               	movf	plusw1,w,c
 26446  013B80  2201               	addwfc	btemp^0,f,c
 26447  013B82  0EFB               	movlw	-5
 26448  013B84  0060  F007  FFE3   	movff	btemp,plusw1
 26449                           
 26450                           ;stkvar	_b @ sp[(-4)+-4]
 26451  013B8A  0EFB               	movlw	-5
 26452  013B8C  A0E3               	btfss	plusw1,0,c
 26453  013B8E  D101               	goto	u5510
 26454                           
 26455                           ;stkvar	_grs @ sp[(-4)+0]
 26456  013B90  0EFC               	movlw	-4
 26457  013B92  A0E3               	btfss	plusw1,0,c
 26458  013B94  D00D               	goto	l7608
 26459                           
 26460                           ;stkvar	_grs @ sp[(-4)+0]
 26461  013B96  0EFC               	movlw	-4
 26462  013B98  006F FF8C  F00C    	movff	plusw1,btemp+11
 26463  013B9E  90D8               	bcf	status,0,c
 26464  013BA0  320C               	rrcf	(btemp+11)^0,f,c
 26465  013BA2  0E01               	movlw	1
 26466  013BA4  120C               	iorwf	(btemp+11)^0,f,c
 26467                           
 26468                           ;stkvar	_grs @ sp[(-4)+0]
 26469  013BA6  0EFC               	movlw	-4
 26470  013BA8  0060  F033  FFE3   	movff	btemp+11,plusw1
 26471  013BAE  D009               	goto	l7610
 26472  013BB0                     l7608:
 26473                           
 26474                           ;stkvar	_grs @ sp[(-4)+0]
 26475  013BB0  50E1               	movf	fsr1l,w,c
 26476  013BB2  0FFC               	addlw	-4
 26477  013BB4  6ED9               	movwf	fsr2l,c
 26478  013BB6  50E2               	movf	fsr1h,w,c
 26479  013BB8  6EDA               	movwf	fsr2h,c
 26480  013BBA  0EFF               	movlw	255
 26481  013BBC  22DA               	addwfc	fsr2h,f,c
 26482  013BBE  90D8               	bcf	status,0,c
 26483  013BC0  32DF               	rrcf	indf2,f,c
 26484  013BC2                     l7610:
 26485                           
 26486                           ;stkvar	_b @ sp[(-4)+-4]
 26487  013BC2  0EF8               	movlw	-8
 26488  013BC4  A0E3               	btfss	plusw1,0,c
 26489  013BC6  D002               	goto	l7614
 26490                           
 26491                           ;stkvar	_grs @ sp[(-4)+0]
 26492  013BC8  0EFC               	movlw	-4
 26493  013BCA  8EE3               	bsf	plusw1,7,c
 26494  013BCC                     l7614:
 26495  013BCC  0E01               	movlw	1
 26496  013BCE  6E0C               	movwf	(btemp+11)^0,c
 26497                           
 26498                           ;stkvar	_b @ sp[(-4)+-4]
 26499  013BD0  50E1               	movf	fsr1l,w,c
 26500  013BD2  0FF8               	addlw	-8
 26501  013BD4  6ED9               	movwf	fsr2l,c
 26502  013BD6  50E2               	movf	fsr1h,w,c
 26503  013BD8  6EDA               	movwf	fsr2h,c
 26504  013BDA  0EFF               	movlw	255
 26505  013BDC  22DA               	addwfc	fsr2h,f,c
 26506  013BDE  280C               	incf	(btemp+11)^0,w,c
 26507  013BE0  52DE               	movf	postinc2,f,c
 26508  013BE2  D008               	goto	u5430
 26509  013BE4                     u5435:
 26510  013BE4  52DE               	movf	postinc2,f,c
 26511  013BE6  90D8               	bcf	status,0,c
 26512  013BE8  BEDC               	btfsc	preinc2,7,c
 26513  013BEA  80D8               	bsf	status,0,c
 26514  013BEC  32DD               	rrcf	postdec2,f,c
 26515  013BEE  32DD               	rrcf	postdec2,f,c
 26516  013BF0  32DD               	rrcf	postdec2,f,c
 26517  013BF2  32DE               	rrcf	postinc2,f,c
 26518  013BF4                     u5430:
 26519  013BF4  2EE8               	decfsz	wreg,f,c
 26520  013BF6  D7F6               	goto	u5435
 26521                           
 26522                           ;stkvar	_bexp @ sp[(-4)+1]
 26523  013BF8  0EFD               	movlw	-3
 26524  013BFA  2AE3               	incf	plusw1,f,c
 26525  013BFC  D0CA               	goto	u5510
 26526  013BFE                     l7618:
 26527                           
 26528                           ;stkvar	_a @ sp[(-4)+-8]
 26529                           ;stkvar	_b @ sp[(-4)+-4]
 26530  013BFE  50E1               	movf	fsr1l,w,c
 26531  013C00  0FF8               	addlw	-8
 26532  013C02  6ED9               	movwf	fsr2l,c
 26533  013C04  50E2               	movf	fsr1h,w,c
 26534  013C06  6EDA               	movwf	fsr2h,c
 26535  013C08  0EFF               	movlw	255
 26536  013C0A  22DA               	addwfc	fsr2h,f,c
 26537  013C0C  0EF4               	movlw	-12
 26538  013C0E  50E3               	movf	plusw1,w,c
 26539  013C10  5CDE               	subwf	postinc2,w,c
 26540  013C12  0EF5               	movlw	-11
 26541  013C14  50E3               	movf	plusw1,w,c
 26542  013C16  58DE               	subwfb	postinc2,w,c
 26543  013C18  0EF6               	movlw	-10
 26544  013C1A  50E3               	movf	plusw1,w,c
 26545  013C1C  58DE               	subwfb	postinc2,w,c
 26546  013C1E  50DE               	movf	postinc2,w,c
 26547  013C20  0A80               	xorlw	128
 26548  013C22  6E01               	movwf	btemp^0,c
 26549  013C24  0EF7               	movlw	-9
 26550  013C26  50E3               	movf	plusw1,w,c
 26551  013C28  0A80               	xorlw	128
 26552  013C2A  5801               	subwfb	btemp^0,w,c
 26553  013C2C  B0D8               	btfsc	status,0,c
 26554  013C2E  D053               	goto	l7630
 26555                           
 26556                           ;stkvar	_b @ sp[(-4)+-4]
 26557                           ;stkvar	_a @ sp[(-4)+-8]
 26558  013C30  0EF4               	movlw	-12
 26559  013C32  006F FF8C  F009    	movff	plusw1,btemp+8
 26560  013C38  0EF5               	movlw	-11
 26561  013C3A  006F FF8C  F00A    	movff	plusw1,btemp+9
 26562  013C40  0EF6               	movlw	-10
 26563  013C42  006F FF8C  F00B    	movff	plusw1,btemp+10
 26564  013C48  0EF7               	movlw	-9
 26565  013C4A  006F FF8C  F00C    	movff	plusw1,btemp+11
 26566  013C50  0EF8               	movlw	-8
 26567  013C52  50E3               	movf	plusw1,w,c
 26568  013C54  5E09               	subwf	(btemp+8)^0,f,c
 26569  013C56  0EF9               	movlw	-7
 26570  013C58  50E3               	movf	plusw1,w,c
 26571  013C5A  5A0A               	subwfb	(btemp+9)^0,f,c
 26572  013C5C  0EFA               	movlw	-6
 26573  013C5E  50E3               	movf	plusw1,w,c
 26574  013C60  5A0B               	subwfb	(btemp+10)^0,f,c
 26575  013C62  0EFB               	movlw	-5
 26576  013C64  50E3               	movf	plusw1,w,c
 26577  013C66  5A0C               	subwfb	(btemp+11)^0,f,c
 26578  013C68  0EFF               	movlw	255
 26579  013C6A  2409               	addwf	(btemp+8)^0,w,c
 26580  013C6C  6E05               	movwf	(btemp+4)^0,c
 26581  013C6E  0EFF               	movlw	255
 26582  013C70  200A               	addwfc	(btemp+9)^0,w,c
 26583  013C72  6E06               	movwf	(btemp+5)^0,c
 26584  013C74  0EFF               	movlw	255
 26585  013C76  200B               	addwfc	(btemp+10)^0,w,c
 26586  013C78  6E07               	movwf	(btemp+6)^0,c
 26587  013C7A  0EFF               	movlw	255
 26588  013C7C  200C               	addwfc	(btemp+11)^0,w,c
 26589  013C7E  6E08               	movwf	(btemp+7)^0,c
 26590                           
 26591                           ;stkvar	_b @ sp[(-4)+-4]
 26592  013C80  0EF8               	movlw	-8
 26593  013C82  0060  F017  FFE3   	movff	btemp+4,plusw1
 26594  013C88  0EF9               	movlw	-7
 26595  013C8A  0060  F01B  FFE3   	movff	btemp+5,plusw1
 26596  013C90  0EFA               	movlw	-6
 26597  013C92  0060  F01F  FFE3   	movff	btemp+6,plusw1
 26598  013C98  0EFB               	movlw	-5
 26599  013C9A  0060  F023  FFE3   	movff	btemp+7,plusw1
 26600                           
 26601                           ;stkvar	_signs @ sp[(-4)+3]
 26602  013CA0  0EFF               	movlw	-1
 26603  013CA2  7EE3               	btg	plusw1,7,c
 26604                           
 26605                           ;stkvar	_grs @ sp[(-4)+0]
 26606  013CA4  0EFC               	movlw	-4
 26607  013CA6  50E3               	movf	plusw1,w,c
 26608  013CA8  0800               	sublw	0
 26609  013CAA  6E0C               	movwf	(btemp+11)^0,c
 26610                           
 26611                           ;stkvar	_grs @ sp[(-4)+0]
 26612  013CAC  0EFC               	movlw	-4
 26613  013CAE  0060  F033  FFE3   	movff	btemp+11,plusw1
 26614                           
 26615                           ;stkvar	_grs @ sp[(-4)+0]
 26616  013CB4  0EFC               	movlw	-4
 26617  013CB6  50E3               	movf	plusw1,w,c
 26618  013CB8  A4D8               	btfss	status,2,c
 26619  013CBA  D020               	goto	l7632
 26620                           
 26621                           ;stkvar	_b @ sp[(-4)+-4]
 26622  013CBC  50E1               	movf	fsr1l,w,c
 26623  013CBE  0FF8               	addlw	-8
 26624  013CC0  6ED9               	movwf	fsr2l,c
 26625  013CC2  50E2               	movf	fsr1h,w,c
 26626  013CC4  6EDA               	movwf	fsr2h,c
 26627  013CC6  0EFF               	movlw	255
 26628  013CC8  22DA               	addwfc	fsr2h,f,c
 26629  013CCA  2ADE               	incf	postinc2,f,c
 26630  013CCC  0E00               	movlw	0
 26631  013CCE  22DE               	addwfc	postinc2,f,c
 26632  013CD0  22DE               	addwfc	postinc2,f,c
 26633  013CD2  22DE               	addwfc	postinc2,f,c
 26634  013CD4  D013               	goto	l7632
 26635  013CD6                     l7630:
 26636                           
 26637                           ;stkvar	_a @ sp[(-4)+-8]
 26638                           ;stkvar	_b @ sp[(-4)+-4]
 26639  013CD6  50E1               	movf	fsr1l,w,c
 26640  013CD8  0FF8               	addlw	-8
 26641  013CDA  6ED9               	movwf	fsr2l,c
 26642  013CDC  50E2               	movf	fsr1h,w,c
 26643  013CDE  6EDA               	movwf	fsr2h,c
 26644  013CE0  0EFF               	movlw	255
 26645  013CE2  22DA               	addwfc	fsr2h,f,c
 26646  013CE4  0EF4               	movlw	-12
 26647  013CE6  50E3               	movf	plusw1,w,c
 26648  013CE8  5EDE               	subwf	postinc2,f,c
 26649  013CEA  0EF5               	movlw	-11
 26650  013CEC  50E3               	movf	plusw1,w,c
 26651  013CEE  5ADE               	subwfb	postinc2,f,c
 26652  013CF0  0EF6               	movlw	-10
 26653  013CF2  50E3               	movf	plusw1,w,c
 26654  013CF4  5ADE               	subwfb	postinc2,f,c
 26655  013CF6  0EF7               	movlw	-9
 26656  013CF8  50E3               	movf	plusw1,w,c
 26657  013CFA  5ADE               	subwfb	postinc2,f,c
 26658  013CFC                     l7632:
 26659                           
 26660                           ;stkvar	_b @ sp[(-4)+-4]
 26661  013CFC  0EF8               	movlw	-8
 26662  013CFE  50E3               	movf	plusw1,w,c
 26663  013D00  E145               	bnz	l7654
 26664  013D02  0EF9               	movlw	-7
 26665  013D04  50E3               	movf	plusw1,w,c
 26666  013D06  E142               	bnz	l7654
 26667  013D08  0EFA               	movlw	-6
 26668  013D0A  50E3               	movf	plusw1,w,c
 26669  013D0C  E13F               	bnz	l7654
 26670  013D0E  0EFB               	movlw	-5
 26671  013D10  50E3               	movf	plusw1,w,c
 26672  013D12  A4D8               	btfss	status,2,c
 26673  013D14  D03B               	goto	l7654
 26674                           
 26675                           ;stkvar	_grs @ sp[(-4)+0]
 26676  013D16  0EFC               	movlw	-4
 26677  013D18  50E3               	movf	plusw1,w,c
 26678  013D1A  A4D8               	btfss	status,2,c
 26679  013D1C  D037               	goto	l7654
 26680  013D1E                     u5470:
 26681  013D1E  0E00               	movlw	0
 26682  013D20  6E01               	movwf	btemp^0,c
 26683  013D22  0E00               	movlw	0
 26684  013D24  6E02               	movwf	(btemp+1)^0,c
 26685  013D26  0E00               	movlw	0
 26686  013D28  6E03               	movwf	(btemp+2)^0,c
 26687  013D2A  0E00               	movlw	0
 26688  013D2C  6E04               	movwf	(btemp+3)^0,c
 26689  013D2E  D0C6               	goto	l2898
 26690  013D30                     l7640:
 26691                           
 26692                           ;stkvar	_b @ sp[(-4)+-4]
 26693  013D30  90D8               	bcf	status,0,c
 26694  013D32  0EF8               	movlw	-8
 26695  013D34  36E3               	rlcf	plusw1,f,c
 26696  013D36  0EF9               	movlw	-7
 26697  013D38  36E3               	rlcf	plusw1,f,c
 26698  013D3A  0EFA               	movlw	-6
 26699  013D3C  36E3               	rlcf	plusw1,f,c
 26700  013D3E  0EFB               	movlw	-5
 26701  013D40  36E3               	rlcf	plusw1,f,c
 26702                           
 26703                           ;stkvar	_grs @ sp[(-4)+0]
 26704  013D42  0EFC               	movlw	-4
 26705  013D44  AEE3               	btfss	plusw1,7,c
 26706  013D46  D002               	goto	l2910
 26707                           
 26708                           ;stkvar	_b @ sp[(-4)+-4]
 26709  013D48  0EF8               	movlw	-8
 26710  013D4A  80E3               	bsf	plusw1,0,c
 26711  013D4C                     l2910:
 26712                           
 26713                           ;stkvar	_grs @ sp[(-4)+0]
 26714  013D4C  0EFC               	movlw	-4
 26715  013D4E  A0E3               	btfss	plusw1,0,c
 26716  013D50  D00E               	goto	l7648
 26717                           
 26718                           ;stkvar	_grs @ sp[(-4)+0]
 26719  013D52  0EFC               	movlw	-4
 26720  013D54  006F FF8C  F00C    	movff	plusw1,btemp+11
 26721  013D5A  90D8               	bcf	status,0,c
 26722  013D5C  340C               	rlcf	(btemp+11)^0,w,c
 26723  013D5E  6E0B               	movwf	(btemp+10)^0,c
 26724  013D60  0E01               	movlw	1
 26725  013D62  120B               	iorwf	(btemp+10)^0,f,c
 26726                           
 26727                           ;stkvar	_grs @ sp[(-4)+0]
 26728  013D64  0EFC               	movlw	-4
 26729  013D66  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26730  013D6C  D009               	goto	l7650
 26731  013D6E                     l7648:
 26732                           
 26733                           ;stkvar	_grs @ sp[(-4)+0]
 26734  013D6E  50E1               	movf	fsr1l,w,c
 26735  013D70  0FFC               	addlw	-4
 26736  013D72  6ED9               	movwf	fsr2l,c
 26737  013D74  50E2               	movf	fsr1h,w,c
 26738  013D76  6EDA               	movwf	fsr2h,c
 26739  013D78  0EFF               	movlw	255
 26740  013D7A  22DA               	addwfc	fsr2h,f,c
 26741  013D7C  90D8               	bcf	status,0,c
 26742  013D7E  36DF               	rlcf	indf2,f,c
 26743  013D80                     l7650:
 26744                           
 26745                           ;stkvar	_bexp @ sp[(-4)+1]
 26746  013D80  0EFD               	movlw	-3
 26747  013D82  50E3               	movf	plusw1,w,c
 26748  013D84  B4D8               	btfsc	status,2,c
 26749  013D86  D002               	goto	l7654
 26750                           
 26751                           ;stkvar	_bexp @ sp[(-4)+1]
 26752  013D88  0EFD               	movlw	-3
 26753  013D8A  06E3               	decf	plusw1,f,c
 26754  013D8C                     l7654:
 26755                           
 26756                           ;stkvar	_b @ sp[(-4)+-4]
 26757  013D8C  0EFA               	movlw	-6
 26758  013D8E  AEE3               	btfss	plusw1,7,c
 26759  013D90  D7CF               	goto	l7640
 26760  013D92                     u5510:
 26761                           
 26762                           ;stkvar	_aexp @ sp[(-4)+2]
 26763  013D92  0EFE               	movlw	-2
 26764  013D94  6AE3               	clrf	plusw1,c
 26765                           
 26766                           ;stkvar	_grs @ sp[(-4)+0]
 26767  013D96  0EFC               	movlw	-4
 26768  013D98  AEE3               	btfss	plusw1,7,c
 26769  013D9A  D00F               	goto	l7668
 26770                           
 26771                           ;stkvar	_grs @ sp[(-4)+0]
 26772  013D9C  0EFC               	movlw	-4
 26773  013D9E  006F FF8C  F00C    	movff	plusw1,btemp+11
 26774  013DA4  0E7F               	movlw	127
 26775  013DA6  160C               	andwf	(btemp+11)^0,f,c
 26776  013DA8  B4D8               	btfsc	status,2,c
 26777  013DAA  D004               	goto	l7664
 26778  013DAC                     u5530:
 26779                           
 26780                           ;stkvar	_aexp @ sp[(-4)+2]
 26781  013DAC  0EFE               	movlw	-2
 26782  013DAE  6AE3               	clrf	plusw1,c
 26783  013DB0  2AE3               	incf	plusw1,f,c
 26784  013DB2  D003               	goto	l7668
 26785  013DB4                     l7664:
 26786                           
 26787                           ;stkvar	_b @ sp[(-4)+-4]
 26788  013DB4  0EF8               	movlw	-8
 26789  013DB6  B0E3               	btfsc	plusw1,0,c
 26790  013DB8  D7F9               	goto	u5530
 26791  013DBA                     l7668:
 26792                           
 26793                           ;stkvar	_aexp @ sp[(-4)+2]
 26794  013DBA  0EFE               	movlw	-2
 26795  013DBC  50E3               	movf	plusw1,w,c
 26796  013DBE  B4D8               	btfsc	status,2,c
 26797  013DC0  D02B               	goto	l7680
 26798                           
 26799                           ;stkvar	_b @ sp[(-4)+-4]
 26800  013DC2  50E1               	movf	fsr1l,w,c
 26801  013DC4  0FF8               	addlw	-8
 26802  013DC6  6ED9               	movwf	fsr2l,c
 26803  013DC8  50E2               	movf	fsr1h,w,c
 26804  013DCA  6EDA               	movwf	fsr2h,c
 26805  013DCC  0EFF               	movlw	255
 26806  013DCE  22DA               	addwfc	fsr2h,f,c
 26807  013DD0  2ADE               	incf	postinc2,f,c
 26808  013DD2  0E00               	movlw	0
 26809  013DD4  22DE               	addwfc	postinc2,f,c
 26810  013DD6  22DE               	addwfc	postinc2,f,c
 26811  013DD8  22DE               	addwfc	postinc2,f,c
 26812                           
 26813                           ;stkvar	_b @ sp[(-4)+-4]
 26814  013DDA  0EFB               	movlw	-5
 26815  013DDC  A0E3               	btfss	plusw1,0,c
 26816  013DDE  D01C               	goto	l7680
 26817  013DE0  0E01               	movlw	1
 26818  013DE2  6E0C               	movwf	(btemp+11)^0,c
 26819                           
 26820                           ;stkvar	_b @ sp[(-4)+-4]
 26821  013DE4  50E1               	movf	fsr1l,w,c
 26822  013DE6  0FF8               	addlw	-8
 26823  013DE8  6ED9               	movwf	fsr2l,c
 26824  013DEA  50E2               	movf	fsr1h,w,c
 26825  013DEC  6EDA               	movwf	fsr2h,c
 26826  013DEE  0EFF               	movlw	255
 26827  013DF0  22DA               	addwfc	fsr2h,f,c
 26828  013DF2  280C               	incf	(btemp+11)^0,w,c
 26829  013DF4  52DE               	movf	postinc2,f,c
 26830  013DF6  D008               	goto	u5570
 26831  013DF8                     u5575:
 26832  013DF8  52DE               	movf	postinc2,f,c
 26833  013DFA  90D8               	bcf	status,0,c
 26834  013DFC  BEDC               	btfsc	preinc2,7,c
 26835  013DFE  80D8               	bsf	status,0,c
 26836  013E00  32DD               	rrcf	postdec2,f,c
 26837  013E02  32DD               	rrcf	postdec2,f,c
 26838  013E04  32DD               	rrcf	postdec2,f,c
 26839  013E06  32DE               	rrcf	postinc2,f,c
 26840  013E08                     u5570:
 26841  013E08  2EE8               	decfsz	wreg,f,c
 26842  013E0A  D7F6               	goto	u5575
 26843                           
 26844                           ;stkvar	_bexp @ sp[(-4)+1]
 26845  013E0C  0EFD               	movlw	-3
 26846  013E0E  28E3               	incf	plusw1,w,c
 26847  013E10  B4D8               	btfsc	status,2,c
 26848  013E12  D002               	goto	l7680
 26849                           
 26850                           ;stkvar	_bexp @ sp[(-4)+1]
 26851  013E14  0EFD               	movlw	-3
 26852  013E16  2AE3               	incf	plusw1,f,c
 26853  013E18                     l7680:
 26854                           
 26855                           ;stkvar	_bexp @ sp[(-4)+1]
 26856  013E18  0EFD               	movlw	-3
 26857  013E1A  28E3               	incf	plusw1,w,c
 26858  013E1C  B4D8               	btfsc	status,2,c
 26859  013E1E  D004               	goto	u5600
 26860                           
 26861                           ;stkvar	_bexp @ sp[(-4)+1]
 26862  013E20  0EFD               	movlw	-3
 26863  013E22  50E3               	movf	plusw1,w,c
 26864  013E24  A4D8               	btfss	status,2,c
 26865  013E26  D00E               	goto	l7690
 26866  013E28                     u5600:
 26867                           
 26868                           ;stkvar	_b @ sp[(-4)+-4]
 26869  013E28  0EF8               	movlw	-8
 26870  013E2A  6AE3               	clrf	plusw1,c
 26871  013E2C  0EF9               	movlw	-7
 26872  013E2E  6AE3               	clrf	plusw1,c
 26873  013E30  0EFA               	movlw	-6
 26874  013E32  6AE3               	clrf	plusw1,c
 26875  013E34  0EFB               	movlw	-5
 26876  013E36  6AE3               	clrf	plusw1,c
 26877                           
 26878                           ;stkvar	_bexp @ sp[(-4)+1]
 26879  013E38  0EFD               	movlw	-3
 26880  013E3A  50E3               	movf	plusw1,w,c
 26881  013E3C  A4D8               	btfss	status,2,c
 26882  013E3E  D002               	goto	l7690
 26883                           
 26884                           ;stkvar	_signs @ sp[(-4)+3]
 26885  013E40  0EFF               	movlw	-1
 26886  013E42  6AE3               	clrf	plusw1,c
 26887  013E44                     l7690:
 26888                           
 26889                           ;stkvar	_bexp @ sp[(-4)+1]
 26890  013E44  0EFD               	movlw	-3
 26891  013E46  A0E3               	btfss	plusw1,0,c
 26892  013E48  D009               	goto	l7694
 26893                           
 26894                           ;stkvar	_b @ sp[(-4)+-4]
 26895  013E4A  0EFA               	movlw	250
 26896  013E4C  24E1               	addwf	fsr1l,w,c
 26897  013E4E  6ED9               	movwf	fsr2l,c
 26898  013E50  0EFF               	movlw	255
 26899  013E52  20E2               	addwfc	fsr1h,w,c
 26900  013E54  6EDA               	movwf	fsr2h,c
 26901  013E56  0E00               	movlw	0
 26902  013E58  8EDB               	bsf	plusw2,7,c
 26903  013E5A  D008               	goto	l7696
 26904  013E5C                     l7694:
 26905                           
 26906                           ;stkvar	_b @ sp[(-4)+-4]
 26907  013E5C  0EFA               	movlw	250
 26908  013E5E  24E1               	addwf	fsr1l,w,c
 26909  013E60  6ED9               	movwf	fsr2l,c
 26910  013E62  0EFF               	movlw	255
 26911  013E64  20E2               	addwfc	fsr1h,w,c
 26912  013E66  6EDA               	movwf	fsr2h,c
 26913  013E68  0E7F               	movlw	127
 26914  013E6A  16DF               	andwf	indf2,f,c
 26915  013E6C                     l7696:
 26916                           
 26917                           ;stkvar	_b @ sp[(-4)+-4]
 26918  013E6C  0EFB               	movlw	251
 26919  013E6E  24E1               	addwf	fsr1l,w,c
 26920  013E70  6ED9               	movwf	fsr2l,c
 26921  013E72  0EFF               	movlw	255
 26922  013E74  20E2               	addwfc	fsr1h,w,c
 26923  013E76  6EDA               	movwf	fsr2h,c
 26924                           
 26925                           ;stkvar	_bexp @ sp[(-4)+1]
 26926  013E78  0EFD               	movlw	-3
 26927  013E7A  006F FF8C  F00C    	movff	plusw1,btemp+11
 26928  013E80  90D8               	bcf	status,0,c
 26929  013E82  300C               	rrcf	(btemp+11)^0,w,c
 26930  013E84  6EDF               	movwf	indf2,c
 26931                           
 26932                           ;stkvar	_signs @ sp[(-4)+3]
 26933  013E86  0EFF               	movlw	-1
 26934  013E88  AEE3               	btfss	plusw1,7,c
 26935  013E8A  D008               	goto	l7702
 26936                           
 26937                           ;stkvar	_b @ sp[(-4)+-4]
 26938  013E8C  0EFB               	movlw	251
 26939  013E8E  24E1               	addwf	fsr1l,w,c
 26940  013E90  6ED9               	movwf	fsr2l,c
 26941  013E92  0EFF               	movlw	255
 26942  013E94  20E2               	addwfc	fsr1h,w,c
 26943  013E96  6EDA               	movwf	fsr2h,c
 26944  013E98  0E00               	movlw	0
 26945  013E9A  8EDB               	bsf	plusw2,7,c
 26946  013E9C                     l7702:
 26947                           
 26948                           ;stkvar	_b @ sp[(-4)+-4]
 26949  013E9C  0EF8               	movlw	-8
 26950  013E9E  006F FF8C  F001    	movff	plusw1,btemp
 26951  013EA4  0EF9               	movlw	-7
 26952  013EA6  006F FF8C  F002    	movff	plusw1,btemp+1
 26953  013EAC  0EFA               	movlw	-6
 26954  013EAE  006F FF8C  F003    	movff	plusw1,btemp+2
 26955  013EB4  0EFB               	movlw	-5
 26956  013EB6  006F FF8C  F004    	movff	plusw1,btemp+3
 26957  013EBC                     l2898:
 26958                           
 26959                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26960  013EBC  0EF4               	movlw	244
 26961  013EBE  26E1               	addwf	fsr1l,f,c
 26962  013EC0  0EFF               	movlw	255
 26963  013EC2  22E2               	addwfc	fsr1h,f,c
 26964  013EC4  0012               	return		;funcret
 26965  013EC6                     __end_of___fladd:
 26966                           	opt callstack 0
 26967                           
 26968 ;; *************** function ___flmul *****************
 26969 ;; Defined at:
 26970 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 26971 ;; Parameters:    Size  Location     Type
 26972 ;;  b               4  [STACK] unsigned char 
 26973 ;;  a               4  [STACK] unsigned char 
 26974 ;; Auto vars:     Size  Location     Type
 26975 ;;  prod            4  [STACK] struct .
 26976 ;;  grs             4  [STACK] unsigned long 
 26977 ;;  temp            2  [STACK] struct .
 26978 ;;  bexp            1  [STACK] unsigned char 
 26979 ;;  aexp            1  [STACK] unsigned char 
 26980 ;;  sign            1  [STACK] unsigned char 
 26981 ;; Return value:  Size  Location     Type
 26982 ;;                  4  [STACK] unsigned char 
 26983 ;; Registers used:
 26984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26985 ;; Tracked objects:
 26986 ;;		On entry : 0/1
 26987 ;;		On exit  : 0/0
 26988 ;;		Unchanged: 0/0
 26989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26994 ;;Total ram usage:        0 bytes
 26995 ;; Hardware stack levels used:    1
 26996 ;; Hardware stack levels required when called:   15
 26997 ;; This function calls:
 26998 ;;		Nothing
 26999 ;; This function is called by:
 27000 ;;		_conv_raw_result
 27001 ;;		_lp_filter
 27002 ;;		_calc_model_data
 27003 ;;		_calc_bsoc
 27004 ;;		_init_bsoc
 27005 ;;		_efgtoa
 27006 ;; This function uses a reentrant model
 27007 ;;
 27008                           
 27009                           	psect	text106
 27010  012EE0                     __ptext106:
 27011                           	opt callstack 0
 27012  012EE0                     ___flmul:
 27013                           	opt callstack 0
 27014                           
 27015                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 27016  012EE0  0E0D               	movlw	13
 27017  012EE2  26E1               	addwf	fsr1l,f,c
 27018  012EE4  0E00               	movlw	0
 27019  012EE6  22E2               	addwfc	fsr1h,f,c
 27020                           
 27021                           ;stkvar	_b @ sp[(-13)+-4]
 27022                           
 27023                           ;incstack = 0
 27024 ;; hardware stack exceeded
 27025  012EE8  0EF2               	movlw	242
 27026  012EEA  24E1               	addwf	fsr1l,w,c
 27027  012EEC  6ED9               	movwf	fsr2l,c
 27028  012EEE  0EFF               	movlw	255
 27029  012EF0  20E2               	addwfc	fsr1h,w,c
 27030  012EF2  6EDA               	movwf	fsr2h,c
 27031  012EF4  50DF               	movf	indf2,w,c
 27032  012EF6  6E0C               	movwf	(btemp+11)^0,c
 27033  012EF8  0E80               	movlw	128
 27034  012EFA  160C               	andwf	(btemp+11)^0,f,c
 27035                           
 27036                           ;stkvar	_sign @ sp[(-13)+12]
 27037  012EFC  0EFF               	movlw	-1
 27038  012EFE  0060  F033  FFE3   	movff	btemp+11,plusw1
 27039                           
 27040                           ;stkvar	_b @ sp[(-13)+-4]
 27041  012F04  0EF2               	movlw	242
 27042  012F06  24E1               	addwf	fsr1l,w,c
 27043  012F08  6ED9               	movwf	fsr2l,c
 27044  012F0A  0EFF               	movlw	255
 27045  012F0C  20E2               	addwfc	fsr1h,w,c
 27046  012F0E  6EDA               	movwf	fsr2h,c
 27047  012F10  50DF               	movf	indf2,w,c
 27048  012F12  6E0C               	movwf	(btemp+11)^0,c
 27049  012F14  90D8               	bcf	status,0,c
 27050  012F16  340C               	rlcf	(btemp+11)^0,w,c
 27051  012F18  6E0B               	movwf	(btemp+10)^0,c
 27052                           
 27053                           ;stkvar	_bexp @ sp[(-13)+10]
 27054  012F1A  0EFD               	movlw	-3
 27055  012F1C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27056                           
 27057                           ;stkvar	_b @ sp[(-13)+-4]
 27058  012F22  0EF1               	movlw	241
 27059  012F24  24E1               	addwf	fsr1l,w,c
 27060  012F26  6ED9               	movwf	fsr2l,c
 27061  012F28  0EFF               	movlw	255
 27062  012F2A  20E2               	addwfc	fsr1h,w,c
 27063  012F2C  6EDA               	movwf	fsr2h,c
 27064  012F2E  AEDF               	btfss	indf2,7,c
 27065  012F30  D002               	goto	l8086
 27066                           
 27067                           ;stkvar	_bexp @ sp[(-13)+10]
 27068  012F32  0EFD               	movlw	-3
 27069  012F34  80E3               	bsf	plusw1,0,c
 27070  012F36                     l8086:
 27071                           
 27072                           ;stkvar	_bexp @ sp[(-13)+10]
 27073  012F36  0EFD               	movlw	-3
 27074  012F38  50E3               	movf	plusw1,w,c
 27075  012F3A  B4D8               	btfsc	status,2,c
 27076  012F3C  D01F               	goto	l8094
 27077                           
 27078                           ;stkvar	_bexp @ sp[(-13)+10]
 27079  012F3E  0EFD               	movlw	-3
 27080  012F40  28E3               	incf	plusw1,w,c
 27081  012F42  A4D8               	btfss	status,2,c
 27082  012F44  D018               	goto	l8092
 27083  012F46  0E00               	movlw	0
 27084  012F48  6E09               	movwf	(btemp+8)^0,c
 27085  012F4A  0E00               	movlw	0
 27086  012F4C  6E0A               	movwf	(btemp+9)^0,c
 27087  012F4E  0E00               	movlw	0
 27088  012F50  6E0B               	movwf	(btemp+10)^0,c
 27089  012F52  0E00               	movlw	0
 27090  012F54  6E0C               	movwf	(btemp+11)^0,c
 27091                           
 27092                           ;stkvar	_b @ sp[(-13)+-4]
 27093  012F56  0EEF               	movlw	-17
 27094  012F58  0060  F027  FFE3   	movff	btemp+8,plusw1
 27095  012F5E  0EF0               	movlw	-16
 27096  012F60  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27097  012F66  0EF1               	movlw	-15
 27098  012F68  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27099  012F6E  0EF2               	movlw	-14
 27100  012F70  0060  F033  FFE3   	movff	btemp+11,plusw1
 27101  012F76                     l8092:
 27102                           
 27103                           ;stkvar	_b @ sp[(-13)+-4]
 27104  012F76  0EF1               	movlw	-15
 27105  012F78  8EE3               	bsf	plusw1,7,c
 27106  012F7A  D018               	goto	l8096
 27107  012F7C                     l8094:
 27108  012F7C  0E00               	movlw	0
 27109  012F7E  6E09               	movwf	(btemp+8)^0,c
 27110  012F80  0E00               	movlw	0
 27111  012F82  6E0A               	movwf	(btemp+9)^0,c
 27112  012F84  0E00               	movlw	0
 27113  012F86  6E0B               	movwf	(btemp+10)^0,c
 27114  012F88  0E00               	movlw	0
 27115  012F8A  6E0C               	movwf	(btemp+11)^0,c
 27116                           
 27117                           ;stkvar	_b @ sp[(-13)+-4]
 27118  012F8C  0EEF               	movlw	-17
 27119  012F8E  0060  F027  FFE3   	movff	btemp+8,plusw1
 27120  012F94  0EF0               	movlw	-16
 27121  012F96  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27122  012F9C  0EF1               	movlw	-15
 27123  012F9E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27124  012FA4  0EF2               	movlw	-14
 27125  012FA6  0060  F033  FFE3   	movff	btemp+11,plusw1
 27126  012FAC                     l8096:
 27127                           
 27128                           ;stkvar	_a @ sp[(-13)+-8]
 27129  012FAC  0EEE               	movlw	238
 27130  012FAE  24E1               	addwf	fsr1l,w,c
 27131  012FB0  6ED9               	movwf	fsr2l,c
 27132  012FB2  0EFF               	movlw	255
 27133  012FB4  20E2               	addwfc	fsr1h,w,c
 27134  012FB6  6EDA               	movwf	fsr2h,c
 27135  012FB8  50DF               	movf	indf2,w,c
 27136  012FBA  6E0C               	movwf	(btemp+11)^0,c
 27137  012FBC  0E80               	movlw	128
 27138  012FBE  160C               	andwf	(btemp+11)^0,f,c
 27139                           
 27140                           ;stkvar	_sign @ sp[(-13)+12]
 27141  012FC0  50E1               	movf	fsr1l,w,c
 27142  012FC2  0FFF               	addlw	-1
 27143  012FC4  6ED9               	movwf	fsr2l,c
 27144  012FC6  50E2               	movf	fsr1h,w,c
 27145  012FC8  6EDA               	movwf	fsr2h,c
 27146  012FCA  0EFF               	movlw	255
 27147  012FCC  22DA               	addwfc	fsr2h,f,c
 27148  012FCE  500C               	movf	(btemp+11)^0,w,c
 27149  012FD0  1ADF               	xorwf	indf2,f,c
 27150                           
 27151                           ;stkvar	_a @ sp[(-13)+-8]
 27152  012FD2  0EEE               	movlw	238
 27153  012FD4  24E1               	addwf	fsr1l,w,c
 27154  012FD6  6ED9               	movwf	fsr2l,c
 27155  012FD8  0EFF               	movlw	255
 27156  012FDA  20E2               	addwfc	fsr1h,w,c
 27157  012FDC  6EDA               	movwf	fsr2h,c
 27158  012FDE  50DF               	movf	indf2,w,c
 27159  012FE0  6E0C               	movwf	(btemp+11)^0,c
 27160  012FE2  90D8               	bcf	status,0,c
 27161  012FE4  340C               	rlcf	(btemp+11)^0,w,c
 27162  012FE6  6E0B               	movwf	(btemp+10)^0,c
 27163                           
 27164                           ;stkvar	_aexp @ sp[(-13)+11]
 27165  012FE8  0EFE               	movlw	-2
 27166  012FEA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27167                           
 27168                           ;stkvar	_a @ sp[(-13)+-8]
 27169  012FF0  0EED               	movlw	237
 27170  012FF2  24E1               	addwf	fsr1l,w,c
 27171  012FF4  6ED9               	movwf	fsr2l,c
 27172  012FF6  0EFF               	movlw	255
 27173  012FF8  20E2               	addwfc	fsr1h,w,c
 27174  012FFA  6EDA               	movwf	fsr2h,c
 27175  012FFC  AEDF               	btfss	indf2,7,c
 27176  012FFE  D002               	goto	l8104
 27177                           
 27178                           ;stkvar	_aexp @ sp[(-13)+11]
 27179  013000  0EFE               	movlw	-2
 27180  013002  80E3               	bsf	plusw1,0,c
 27181  013004                     l8104:
 27182                           
 27183                           ;stkvar	_aexp @ sp[(-13)+11]
 27184  013004  0EFE               	movlw	-2
 27185  013006  50E3               	movf	plusw1,w,c
 27186  013008  B4D8               	btfsc	status,2,c
 27187  01300A  D01F               	goto	l8112
 27188                           
 27189                           ;stkvar	_aexp @ sp[(-13)+11]
 27190  01300C  0EFE               	movlw	-2
 27191  01300E  28E3               	incf	plusw1,w,c
 27192  013010  A4D8               	btfss	status,2,c
 27193  013012  D018               	goto	l8110
 27194  013014  0E00               	movlw	0
 27195  013016  6E09               	movwf	(btemp+8)^0,c
 27196  013018  0E00               	movlw	0
 27197  01301A  6E0A               	movwf	(btemp+9)^0,c
 27198  01301C  0E00               	movlw	0
 27199  01301E  6E0B               	movwf	(btemp+10)^0,c
 27200  013020  0E00               	movlw	0
 27201  013022  6E0C               	movwf	(btemp+11)^0,c
 27202                           
 27203                           ;stkvar	_a @ sp[(-13)+-8]
 27204  013024  0EEB               	movlw	-21
 27205  013026  0060  F027  FFE3   	movff	btemp+8,plusw1
 27206  01302C  0EEC               	movlw	-20
 27207  01302E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27208  013034  0EED               	movlw	-19
 27209  013036  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27210  01303C  0EEE               	movlw	-18
 27211  01303E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27212  013044                     l8110:
 27213                           
 27214                           ;stkvar	_a @ sp[(-13)+-8]
 27215  013044  0EED               	movlw	-19
 27216  013046  8EE3               	bsf	plusw1,7,c
 27217  013048  D018               	goto	l8114
 27218  01304A                     l8112:
 27219  01304A  0E00               	movlw	0
 27220  01304C  6E09               	movwf	(btemp+8)^0,c
 27221  01304E  0E00               	movlw	0
 27222  013050  6E0A               	movwf	(btemp+9)^0,c
 27223  013052  0E00               	movlw	0
 27224  013054  6E0B               	movwf	(btemp+10)^0,c
 27225  013056  0E00               	movlw	0
 27226  013058  6E0C               	movwf	(btemp+11)^0,c
 27227                           
 27228                           ;stkvar	_a @ sp[(-13)+-8]
 27229  01305A  0EEB               	movlw	-21
 27230  01305C  0060  F027  FFE3   	movff	btemp+8,plusw1
 27231  013062  0EEC               	movlw	-20
 27232  013064  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27233  01306A  0EED               	movlw	-19
 27234  01306C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27235  013072  0EEE               	movlw	-18
 27236  013074  0060  F033  FFE3   	movff	btemp+11,plusw1
 27237  01307A                     l8114:
 27238                           
 27239                           ;stkvar	_aexp @ sp[(-13)+11]
 27240  01307A  0EFE               	movlw	-2
 27241  01307C  50E3               	movf	plusw1,w,c
 27242  01307E  B4D8               	btfsc	status,2,c
 27243  013080  D004               	goto	u6540
 27244                           
 27245                           ;stkvar	_bexp @ sp[(-13)+10]
 27246  013082  0EFD               	movlw	-3
 27247  013084  50E3               	movf	plusw1,w,c
 27248  013086  A4D8               	btfss	status,2,c
 27249  013088  D009               	goto	l8122
 27250  01308A                     u6540:
 27251  01308A  0E00               	movlw	0
 27252  01308C  6E01               	movwf	btemp^0,c
 27253  01308E  0E00               	movlw	0
 27254  013090  6E02               	movwf	(btemp+1)^0,c
 27255  013092  0E00               	movlw	0
 27256  013094  6E03               	movwf	(btemp+2)^0,c
 27257  013096  0E00               	movlw	0
 27258  013098  6E04               	movwf	(btemp+3)^0,c
 27259  01309A  D332               	goto	l2979
 27260  01309C                     l8122:
 27261                           
 27262                           ;stkvar	_b @ sp[(-13)+-4]
 27263  01309C  0EEF               	movlw	-17
 27264  01309E  006F FF8C  F00C    	movff	plusw1,btemp+11
 27265                           
 27266                           ;stkvar	_a @ sp[(-13)+-8]
 27267  0130A4  0EED               	movlw	237
 27268  0130A6  24E1               	addwf	fsr1l,w,c
 27269  0130A8  6ED9               	movwf	fsr2l,c
 27270  0130AA  0EFF               	movlw	255
 27271  0130AC  20E2               	addwfc	fsr1h,w,c
 27272  0130AE  6EDA               	movwf	fsr2h,c
 27273  0130B0  50DF               	movf	indf2,w,c
 27274  0130B2  020C               	mulwf	(btemp+11)^0,c
 27275                           
 27276                           ;stkvar	_temp @ sp[(-13)+8]
 27277  0130B4  0EFB               	movlw	-5
 27278  0130B6  006F FFCF FFE3     	movff	prodl,plusw1
 27279  0130BC  0EFC               	movlw	-4
 27280  0130BE  006F FFD3 FFE3     	movff	prodh,plusw1
 27281                           
 27282                           ;stkvar	_temp @ sp[(-13)+8]
 27283  0130C4  0EFB               	movlw	-5
 27284  0130C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 27285  0130CC  0060  F030  F005   	movff	btemp+11,btemp+4
 27286  0130D2  6A06               	clrf	(btemp+5)^0,c
 27287  0130D4  6A07               	clrf	(btemp+6)^0,c
 27288  0130D6  6A08               	clrf	(btemp+7)^0,c
 27289                           
 27290                           ;stkvar	_grs @ sp[(-13)+4]
 27291  0130D8  0EF7               	movlw	-9
 27292  0130DA  0060  F017  FFE3   	movff	btemp+4,plusw1
 27293  0130E0  0EF8               	movlw	-8
 27294  0130E2  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27295  0130E8  0EF9               	movlw	-7
 27296  0130EA  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27297  0130F0  0EFA               	movlw	-6
 27298  0130F2  0060  F023  FFE3   	movff	btemp+7,plusw1
 27299                           
 27300                           ;stkvar	_temp @ sp[(-13)+8]
 27301  0130F8  0EFC               	movlw	252
 27302  0130FA  24E1               	addwf	fsr1l,w,c
 27303  0130FC  6ED9               	movwf	fsr2l,c
 27304  0130FE  0EFF               	movlw	255
 27305  013100  20E2               	addwfc	fsr1h,w,c
 27306  013102  6EDA               	movwf	fsr2h,c
 27307  013104  50DF               	movf	indf2,w,c
 27308  013106  6E0C               	movwf	(btemp+11)^0,c
 27309  013108  0060  F030  F005   	movff	btemp+11,btemp+4
 27310  01310E  6A06               	clrf	(btemp+5)^0,c
 27311  013110  6A07               	clrf	(btemp+6)^0,c
 27312  013112  6A08               	clrf	(btemp+7)^0,c
 27313                           
 27314                           ;stkvar	_prod @ sp[(-13)+0]
 27315  013114  0EF3               	movlw	-13
 27316  013116  0060  F017  FFE3   	movff	btemp+4,plusw1
 27317  01311C  0EF4               	movlw	-12
 27318  01311E  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27319  013124  0EF5               	movlw	-11
 27320  013126  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27321  01312C  0EF6               	movlw	-10
 27322  01312E  0060  F023  FFE3   	movff	btemp+7,plusw1
 27323                           
 27324                           ;stkvar	_b @ sp[(-13)+-4]
 27325  013134  0EF0               	movlw	240
 27326  013136  24E1               	addwf	fsr1l,w,c
 27327  013138  6ED9               	movwf	fsr2l,c
 27328  01313A  0EFF               	movlw	255
 27329  01313C  20E2               	addwfc	fsr1h,w,c
 27330  01313E  6EDA               	movwf	fsr2h,c
 27331  013140  50DF               	movf	indf2,w,c
 27332  013142  6E0C               	movwf	(btemp+11)^0,c
 27333                           
 27334                           ;stkvar	_a @ sp[(-13)+-8]
 27335  013144  0EEC               	movlw	236
 27336  013146  24E1               	addwf	fsr1l,w,c
 27337  013148  6ED9               	movwf	fsr2l,c
 27338  01314A  0EFF               	movlw	255
 27339  01314C  20E2               	addwfc	fsr1h,w,c
 27340  01314E  6EDA               	movwf	fsr2h,c
 27341  013150  50DF               	movf	indf2,w,c
 27342  013152  020C               	mulwf	(btemp+11)^0,c
 27343                           
 27344                           ;stkvar	_temp @ sp[(-13)+8]
 27345  013154  0EFB               	movlw	-5
 27346  013156  006F FFCF FFE3     	movff	prodl,plusw1
 27347  01315C  0EFC               	movlw	-4
 27348  01315E  006F FFD3 FFE3     	movff	prodh,plusw1
 27349                           
 27350                           ;stkvar	_grs @ sp[(-13)+4]
 27351  013164  50E1               	movf	fsr1l,w,c
 27352  013166  0FF7               	addlw	-9
 27353  013168  6ED9               	movwf	fsr2l,c
 27354  01316A  50E2               	movf	fsr1h,w,c
 27355  01316C  6EDA               	movwf	fsr2h,c
 27356  01316E  0EFF               	movlw	255
 27357  013170  22DA               	addwfc	fsr2h,f,c
 27358                           
 27359                           ;stkvar	_temp @ sp[(-13)+8]
 27360  013172  0EFB               	movlw	-5
 27361  013174  50E3               	movf	plusw1,w,c
 27362  013176  26DE               	addwf	postinc2,f,c
 27363  013178  0E00               	movlw	0
 27364  01317A  22DE               	addwfc	postinc2,f,c
 27365  01317C  22DE               	addwfc	postinc2,f,c
 27366  01317E  22DE               	addwfc	postinc2,f,c
 27367                           
 27368                           ;stkvar	_prod @ sp[(-13)+0]
 27369  013180  50E1               	movf	fsr1l,w,c
 27370  013182  0FF3               	addlw	-13
 27371  013184  6ED9               	movwf	fsr2l,c
 27372  013186  50E2               	movf	fsr1h,w,c
 27373  013188  6EDA               	movwf	fsr2h,c
 27374  01318A  0EFF               	movlw	255
 27375  01318C  22DA               	addwfc	fsr2h,f,c
 27376                           
 27377                           ;stkvar	_temp @ sp[(-13)+8]
 27378  01318E  0EFC               	movlw	252
 27379  013190  24E1               	addwf	fsr1l,w,c
 27380  013192  6EE9               	movwf	fsr0l,c
 27381  013194  0EFF               	movlw	255
 27382  013196  20E2               	addwfc	fsr1h,w,c
 27383  013198  6EEA               	movwf	fsr0h,c
 27384  01319A  50EF               	movf	indf0,w,c
 27385  01319C  26DE               	addwf	postinc2,f,c
 27386  01319E  0E00               	movlw	0
 27387  0131A0  22DE               	addwfc	postinc2,f,c
 27388  0131A2  22DE               	addwfc	postinc2,f,c
 27389  0131A4  22DE               	addwfc	postinc2,f,c
 27390                           
 27391                           ;stkvar	_b @ sp[(-13)+-4]
 27392  0131A6  0EF1               	movlw	241
 27393  0131A8  24E1               	addwf	fsr1l,w,c
 27394  0131AA  6ED9               	movwf	fsr2l,c
 27395  0131AC  0EFF               	movlw	255
 27396  0131AE  20E2               	addwfc	fsr1h,w,c
 27397  0131B0  6EDA               	movwf	fsr2h,c
 27398  0131B2  50DF               	movf	indf2,w,c
 27399  0131B4  6E0C               	movwf	(btemp+11)^0,c
 27400                           
 27401                           ;stkvar	_a @ sp[(-13)+-8]
 27402  0131B6  0EEB               	movlw	-21
 27403  0131B8  50E3               	movf	plusw1,w,c
 27404  0131BA  020C               	mulwf	(btemp+11)^0,c
 27405                           
 27406                           ;stkvar	_temp @ sp[(-13)+8]
 27407  0131BC  0EFB               	movlw	-5
 27408  0131BE  006F FFCF FFE3     	movff	prodl,plusw1
 27409  0131C4  0EFC               	movlw	-4
 27410  0131C6  006F FFD3 FFE3     	movff	prodh,plusw1
 27411                           
 27412                           ;stkvar	_grs @ sp[(-13)+4]
 27413  0131CC  50E1               	movf	fsr1l,w,c
 27414  0131CE  0FF7               	addlw	-9
 27415  0131D0  6ED9               	movwf	fsr2l,c
 27416  0131D2  50E2               	movf	fsr1h,w,c
 27417  0131D4  6EDA               	movwf	fsr2h,c
 27418  0131D6  0EFF               	movlw	255
 27419  0131D8  22DA               	addwfc	fsr2h,f,c
 27420                           
 27421                           ;stkvar	_temp @ sp[(-13)+8]
 27422  0131DA  0EFB               	movlw	-5
 27423  0131DC  50E3               	movf	plusw1,w,c
 27424  0131DE  26DE               	addwf	postinc2,f,c
 27425  0131E0  0E00               	movlw	0
 27426  0131E2  22DE               	addwfc	postinc2,f,c
 27427  0131E4  22DE               	addwfc	postinc2,f,c
 27428  0131E6  22DE               	addwfc	postinc2,f,c
 27429                           
 27430                           ;stkvar	_prod @ sp[(-13)+0]
 27431  0131E8  50E1               	movf	fsr1l,w,c
 27432  0131EA  0FF3               	addlw	-13
 27433  0131EC  6ED9               	movwf	fsr2l,c
 27434  0131EE  50E2               	movf	fsr1h,w,c
 27435  0131F0  6EDA               	movwf	fsr2h,c
 27436  0131F2  0EFF               	movlw	255
 27437  0131F4  22DA               	addwfc	fsr2h,f,c
 27438                           
 27439                           ;stkvar	_temp @ sp[(-13)+8]
 27440  0131F6  0EFC               	movlw	252
 27441  0131F8  24E1               	addwf	fsr1l,w,c
 27442  0131FA  6EE9               	movwf	fsr0l,c
 27443  0131FC  0EFF               	movlw	255
 27444  0131FE  20E2               	addwfc	fsr1h,w,c
 27445  013200  6EEA               	movwf	fsr0h,c
 27446  013202  50EF               	movf	indf0,w,c
 27447  013204  26DE               	addwf	postinc2,f,c
 27448  013206  0E00               	movlw	0
 27449  013208  22DE               	addwfc	postinc2,f,c
 27450  01320A  22DE               	addwfc	postinc2,f,c
 27451  01320C  22DE               	addwfc	postinc2,f,c
 27452                           
 27453                           ;stkvar	_grs @ sp[(-13)+4]
 27454  01320E  50E1               	movf	fsr1l,w,c
 27455  013210  0FF7               	addlw	-9
 27456  013212  6ED9               	movwf	fsr2l,c
 27457  013214  50E2               	movf	fsr1h,w,c
 27458  013216  6EDA               	movwf	fsr2h,c
 27459  013218  0EFF               	movlw	255
 27460  01321A  22DA               	addwfc	fsr2h,f,c
 27461  01321C  0E08               	movlw	8
 27462  01321E                     u6555:
 27463  01321E  90D8               	bcf	status,0,c
 27464  013220  36DE               	rlcf	postinc2,f,c
 27465  013222  36DE               	rlcf	postinc2,f,c
 27466  013224  36DE               	rlcf	postinc2,f,c
 27467  013226  36DD               	rlcf	postdec2,f,c
 27468  013228  52DD               	movf	postdec2,f,c
 27469  01322A  52DD               	movf	postdec2,f,c
 27470  01322C  2EE8               	decfsz	wreg,f,c
 27471  01322E  D7F7               	goto	u6555
 27472                           
 27473                           ;stkvar	_b @ sp[(-13)+-4]
 27474  013230  0EF0               	movlw	240
 27475  013232  24E1               	addwf	fsr1l,w,c
 27476  013234  6ED9               	movwf	fsr2l,c
 27477  013236  0EFF               	movlw	255
 27478  013238  20E2               	addwfc	fsr1h,w,c
 27479  01323A  6EDA               	movwf	fsr2h,c
 27480  01323C  50DF               	movf	indf2,w,c
 27481  01323E  6E0C               	movwf	(btemp+11)^0,c
 27482                           
 27483                           ;stkvar	_a @ sp[(-13)+-8]
 27484  013240  0EEB               	movlw	-21
 27485  013242  50E3               	movf	plusw1,w,c
 27486  013244  020C               	mulwf	(btemp+11)^0,c
 27487                           
 27488                           ;stkvar	_temp @ sp[(-13)+8]
 27489  013246  0EFB               	movlw	-5
 27490  013248  006F FFCF FFE3     	movff	prodl,plusw1
 27491  01324E  0EFC               	movlw	-4
 27492  013250  006F FFD3 FFE3     	movff	prodh,plusw1
 27493                           
 27494                           ;stkvar	_temp @ sp[(-13)+8]
 27495  013256  0EFB               	movlw	-5
 27496  013258  006F FF8C  F00B    	movff	plusw1,btemp+10
 27497  01325E  0EFC               	movlw	-4
 27498  013260  006F FF8C  F00C    	movff	plusw1,btemp+11
 27499                           
 27500                           ;stkvar	_grs @ sp[(-13)+4]
 27501  013266  50E1               	movf	fsr1l,w,c
 27502  013268  0FF7               	addlw	-9
 27503  01326A  6ED9               	movwf	fsr2l,c
 27504  01326C  50E2               	movf	fsr1h,w,c
 27505  01326E  6EDA               	movwf	fsr2h,c
 27506  013270  0EFF               	movlw	255
 27507  013272  22DA               	addwfc	fsr2h,f,c
 27508  013274  500B               	movf	(btemp+10)^0,w,c
 27509  013276  26DE               	addwf	postinc2,f,c
 27510  013278  500C               	movf	(btemp+11)^0,w,c
 27511  01327A  22DE               	addwfc	postinc2,f,c
 27512  01327C  0E00               	movlw	0
 27513  01327E  22DE               	addwfc	postinc2,f,c
 27514  013280  22DE               	addwfc	postinc2,f,c
 27515                           
 27516                           ;stkvar	_b @ sp[(-13)+-4]
 27517  013282  0EEF               	movlw	-17
 27518  013284  006F FF8C  F00C    	movff	plusw1,btemp+11
 27519                           
 27520                           ;stkvar	_a @ sp[(-13)+-8]
 27521  01328A  0EEC               	movlw	236
 27522  01328C  24E1               	addwf	fsr1l,w,c
 27523  01328E  6ED9               	movwf	fsr2l,c
 27524  013290  0EFF               	movlw	255
 27525  013292  20E2               	addwfc	fsr1h,w,c
 27526  013294  6EDA               	movwf	fsr2h,c
 27527  013296  50DF               	movf	indf2,w,c
 27528  013298  020C               	mulwf	(btemp+11)^0,c
 27529                           
 27530                           ;stkvar	_temp @ sp[(-13)+8]
 27531  01329A  0EFB               	movlw	-5
 27532  01329C  006F FFCF FFE3     	movff	prodl,plusw1
 27533  0132A2  0EFC               	movlw	-4
 27534  0132A4  006F FFD3 FFE3     	movff	prodh,plusw1
 27535                           
 27536                           ;stkvar	_temp @ sp[(-13)+8]
 27537  0132AA  0EFB               	movlw	-5
 27538  0132AC  006F FF8C  F00B    	movff	plusw1,btemp+10
 27539  0132B2  0EFC               	movlw	-4
 27540  0132B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 27541                           
 27542                           ;stkvar	_grs @ sp[(-13)+4]
 27543  0132BA  50E1               	movf	fsr1l,w,c
 27544  0132BC  0FF7               	addlw	-9
 27545  0132BE  6ED9               	movwf	fsr2l,c
 27546  0132C0  50E2               	movf	fsr1h,w,c
 27547  0132C2  6EDA               	movwf	fsr2h,c
 27548  0132C4  0EFF               	movlw	255
 27549  0132C6  22DA               	addwfc	fsr2h,f,c
 27550  0132C8  500B               	movf	(btemp+10)^0,w,c
 27551  0132CA  26DE               	addwf	postinc2,f,c
 27552  0132CC  500C               	movf	(btemp+11)^0,w,c
 27553  0132CE  22DE               	addwfc	postinc2,f,c
 27554  0132D0  0E00               	movlw	0
 27555  0132D2  22DE               	addwfc	postinc2,f,c
 27556  0132D4  22DE               	addwfc	postinc2,f,c
 27557                           
 27558                           ;stkvar	_grs @ sp[(-13)+4]
 27559  0132D6  50E1               	movf	fsr1l,w,c
 27560  0132D8  0FF7               	addlw	-9
 27561  0132DA  6ED9               	movwf	fsr2l,c
 27562  0132DC  50E2               	movf	fsr1h,w,c
 27563  0132DE  6EDA               	movwf	fsr2h,c
 27564  0132E0  0EFF               	movlw	255
 27565  0132E2  22DA               	addwfc	fsr2h,f,c
 27566  0132E4  0E08               	movlw	8
 27567  0132E6                     u6565:
 27568  0132E6  90D8               	bcf	status,0,c
 27569  0132E8  36DE               	rlcf	postinc2,f,c
 27570  0132EA  36DE               	rlcf	postinc2,f,c
 27571  0132EC  36DE               	rlcf	postinc2,f,c
 27572  0132EE  36DD               	rlcf	postdec2,f,c
 27573  0132F0  52DD               	movf	postdec2,f,c
 27574  0132F2  52DD               	movf	postdec2,f,c
 27575  0132F4  2EE8               	decfsz	wreg,f,c
 27576  0132F6  D7F7               	goto	u6565
 27577                           
 27578                           ;stkvar	_b @ sp[(-13)+-4]
 27579  0132F8  0EEF               	movlw	-17
 27580  0132FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 27581                           
 27582                           ;stkvar	_a @ sp[(-13)+-8]
 27583  013300  0EEB               	movlw	-21
 27584  013302  50E3               	movf	plusw1,w,c
 27585  013304  020C               	mulwf	(btemp+11)^0,c
 27586                           
 27587                           ;stkvar	_temp @ sp[(-13)+8]
 27588  013306  0EFB               	movlw	-5
 27589  013308  006F FFCF FFE3     	movff	prodl,plusw1
 27590  01330E  0EFC               	movlw	-4
 27591  013310  006F FFD3 FFE3     	movff	prodh,plusw1
 27592                           
 27593                           ;stkvar	_temp @ sp[(-13)+8]
 27594  013316  0EFB               	movlw	-5
 27595  013318  006F FF8C  F00B    	movff	plusw1,btemp+10
 27596  01331E  0EFC               	movlw	-4
 27597  013320  006F FF8C  F00C    	movff	plusw1,btemp+11
 27598                           
 27599                           ;stkvar	_grs @ sp[(-13)+4]
 27600  013326  50E1               	movf	fsr1l,w,c
 27601  013328  0FF7               	addlw	-9
 27602  01332A  6ED9               	movwf	fsr2l,c
 27603  01332C  50E2               	movf	fsr1h,w,c
 27604  01332E  6EDA               	movwf	fsr2h,c
 27605  013330  0EFF               	movlw	255
 27606  013332  22DA               	addwfc	fsr2h,f,c
 27607  013334  500B               	movf	(btemp+10)^0,w,c
 27608  013336  26DE               	addwf	postinc2,f,c
 27609  013338  500C               	movf	(btemp+11)^0,w,c
 27610  01333A  22DE               	addwfc	postinc2,f,c
 27611  01333C  0E00               	movlw	0
 27612  01333E  22DE               	addwfc	postinc2,f,c
 27613  013340  22DE               	addwfc	postinc2,f,c
 27614                           
 27615                           ;stkvar	_b @ sp[(-13)+-4]
 27616  013342  0EF0               	movlw	240
 27617  013344  24E1               	addwf	fsr1l,w,c
 27618  013346  6ED9               	movwf	fsr2l,c
 27619  013348  0EFF               	movlw	255
 27620  01334A  20E2               	addwfc	fsr1h,w,c
 27621  01334C  6EDA               	movwf	fsr2h,c
 27622  01334E  50DF               	movf	indf2,w,c
 27623  013350  6E0C               	movwf	(btemp+11)^0,c
 27624                           
 27625                           ;stkvar	_a @ sp[(-13)+-8]
 27626  013352  0EED               	movlw	237
 27627  013354  24E1               	addwf	fsr1l,w,c
 27628  013356  6ED9               	movwf	fsr2l,c
 27629  013358  0EFF               	movlw	255
 27630  01335A  20E2               	addwfc	fsr1h,w,c
 27631  01335C  6EDA               	movwf	fsr2h,c
 27632  01335E  50DF               	movf	indf2,w,c
 27633  013360  020C               	mulwf	(btemp+11)^0,c
 27634                           
 27635                           ;stkvar	_temp @ sp[(-13)+8]
 27636  013362  0EFB               	movlw	-5
 27637  013364  006F FFCF FFE3     	movff	prodl,plusw1
 27638  01336A  0EFC               	movlw	-4
 27639  01336C  006F FFD3 FFE3     	movff	prodh,plusw1
 27640                           
 27641                           ;stkvar	_temp @ sp[(-13)+8]
 27642  013372  0EFB               	movlw	-5
 27643  013374  006F FF8C  F00B    	movff	plusw1,btemp+10
 27644  01337A  0EFC               	movlw	-4
 27645  01337C  006F FF8C  F00C    	movff	plusw1,btemp+11
 27646                           
 27647                           ;stkvar	_prod @ sp[(-13)+0]
 27648  013382  50E1               	movf	fsr1l,w,c
 27649  013384  0FF3               	addlw	-13
 27650  013386  6ED9               	movwf	fsr2l,c
 27651  013388  50E2               	movf	fsr1h,w,c
 27652  01338A  6EDA               	movwf	fsr2h,c
 27653  01338C  0EFF               	movlw	255
 27654  01338E  22DA               	addwfc	fsr2h,f,c
 27655  013390  500B               	movf	(btemp+10)^0,w,c
 27656  013392  26DE               	addwf	postinc2,f,c
 27657  013394  500C               	movf	(btemp+11)^0,w,c
 27658  013396  22DE               	addwfc	postinc2,f,c
 27659  013398  0E00               	movlw	0
 27660  01339A  22DE               	addwfc	postinc2,f,c
 27661  01339C  22DE               	addwfc	postinc2,f,c
 27662                           
 27663                           ;stkvar	_b @ sp[(-13)+-4]
 27664  01339E  0EF1               	movlw	241
 27665  0133A0  24E1               	addwf	fsr1l,w,c
 27666  0133A2  6ED9               	movwf	fsr2l,c
 27667  0133A4  0EFF               	movlw	255
 27668  0133A6  20E2               	addwfc	fsr1h,w,c
 27669  0133A8  6EDA               	movwf	fsr2h,c
 27670  0133AA  50DF               	movf	indf2,w,c
 27671  0133AC  6E0C               	movwf	(btemp+11)^0,c
 27672                           
 27673                           ;stkvar	_a @ sp[(-13)+-8]
 27674  0133AE  0EEC               	movlw	236
 27675  0133B0  24E1               	addwf	fsr1l,w,c
 27676  0133B2  6ED9               	movwf	fsr2l,c
 27677  0133B4  0EFF               	movlw	255
 27678  0133B6  20E2               	addwfc	fsr1h,w,c
 27679  0133B8  6EDA               	movwf	fsr2h,c
 27680  0133BA  50DF               	movf	indf2,w,c
 27681  0133BC  020C               	mulwf	(btemp+11)^0,c
 27682                           
 27683                           ;stkvar	_temp @ sp[(-13)+8]
 27684  0133BE  0EFB               	movlw	-5
 27685  0133C0  006F FFCF FFE3     	movff	prodl,plusw1
 27686  0133C6  0EFC               	movlw	-4
 27687  0133C8  006F FFD3 FFE3     	movff	prodh,plusw1
 27688                           
 27689                           ;stkvar	_temp @ sp[(-13)+8]
 27690  0133CE  0EFB               	movlw	-5
 27691  0133D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 27692  0133D6  0EFC               	movlw	-4
 27693  0133D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 27694                           
 27695                           ;stkvar	_prod @ sp[(-13)+0]
 27696  0133DE  50E1               	movf	fsr1l,w,c
 27697  0133E0  0FF3               	addlw	-13
 27698  0133E2  6ED9               	movwf	fsr2l,c
 27699  0133E4  50E2               	movf	fsr1h,w,c
 27700  0133E6  6EDA               	movwf	fsr2h,c
 27701  0133E8  0EFF               	movlw	255
 27702  0133EA  22DA               	addwfc	fsr2h,f,c
 27703  0133EC  500B               	movf	(btemp+10)^0,w,c
 27704  0133EE  26DE               	addwf	postinc2,f,c
 27705  0133F0  500C               	movf	(btemp+11)^0,w,c
 27706  0133F2  22DE               	addwfc	postinc2,f,c
 27707  0133F4  0E00               	movlw	0
 27708  0133F6  22DE               	addwfc	postinc2,f,c
 27709  0133F8  22DE               	addwfc	postinc2,f,c
 27710                           
 27711                           ;stkvar	_b @ sp[(-13)+-4]
 27712  0133FA  0EF1               	movlw	241
 27713  0133FC  24E1               	addwf	fsr1l,w,c
 27714  0133FE  6ED9               	movwf	fsr2l,c
 27715  013400  0EFF               	movlw	255
 27716  013402  20E2               	addwfc	fsr1h,w,c
 27717  013404  6EDA               	movwf	fsr2h,c
 27718  013406  50DF               	movf	indf2,w,c
 27719  013408  6E0C               	movwf	(btemp+11)^0,c
 27720                           
 27721                           ;stkvar	_a @ sp[(-13)+-8]
 27722  01340A  0EED               	movlw	237
 27723  01340C  24E1               	addwf	fsr1l,w,c
 27724  01340E  6ED9               	movwf	fsr2l,c
 27725  013410  0EFF               	movlw	255
 27726  013412  20E2               	addwfc	fsr1h,w,c
 27727  013414  6EDA               	movwf	fsr2h,c
 27728  013416  50DF               	movf	indf2,w,c
 27729  013418  020C               	mulwf	(btemp+11)^0,c
 27730                           
 27731                           ;stkvar	_temp @ sp[(-13)+8]
 27732  01341A  0EFB               	movlw	-5
 27733  01341C  006F FFCF FFE3     	movff	prodl,plusw1
 27734  013422  0EFC               	movlw	-4
 27735  013424  006F FFD3 FFE3     	movff	prodh,plusw1
 27736                           
 27737                           ;stkvar	_temp @ sp[(-13)+8]
 27738  01342A  0EFB               	movlw	-5
 27739  01342C  006F FF8C  F00B    	movff	plusw1,btemp+10
 27740  013432  0EFC               	movlw	-4
 27741  013434  006F FF8C  F00C    	movff	plusw1,btemp+11
 27742  01343A  500B               	movf	(btemp+10)^0,w,c
 27743  01343C  6E05               	movwf	(btemp+4)^0,c
 27744  01343E  500C               	movf	(btemp+11)^0,w,c
 27745  013440  6E06               	movwf	(btemp+5)^0,c
 27746  013442  6A07               	clrf	(btemp+6)^0,c
 27747  013444  6A08               	clrf	(btemp+7)^0,c
 27748  013446  0060  F01C  F008   	movff	btemp+6,btemp+7
 27749  01344C  0060  F018  F007   	movff	btemp+5,btemp+6
 27750  013452  0060  F014  F006   	movff	btemp+4,btemp+5
 27751  013458  6A05               	clrf	(btemp+4)^0,c
 27752                           
 27753                           ;stkvar	_prod @ sp[(-13)+0]
 27754  01345A  50E1               	movf	fsr1l,w,c
 27755  01345C  0FF3               	addlw	-13
 27756  01345E  6ED9               	movwf	fsr2l,c
 27757  013460  50E2               	movf	fsr1h,w,c
 27758  013462  6EDA               	movwf	fsr2h,c
 27759  013464  0EFF               	movlw	255
 27760  013466  22DA               	addwfc	fsr2h,f,c
 27761  013468  5005               	movf	(btemp+4)^0,w,c
 27762  01346A  26DE               	addwf	postinc2,f,c
 27763  01346C  5006               	movf	(btemp+5)^0,w,c
 27764  01346E  22DE               	addwfc	postinc2,f,c
 27765  013470  5007               	movf	(btemp+6)^0,w,c
 27766  013472  22DE               	addwfc	postinc2,f,c
 27767  013474  5008               	movf	(btemp+7)^0,w,c
 27768  013476  22DE               	addwfc	postinc2,f,c
 27769                           
 27770                           ;stkvar	_prod @ sp[(-13)+0]
 27771  013478  50E1               	movf	fsr1l,w,c
 27772  01347A  0FF3               	addlw	-13
 27773  01347C  6ED9               	movwf	fsr2l,c
 27774  01347E  50E2               	movf	fsr1h,w,c
 27775  013480  6EDA               	movwf	fsr2h,c
 27776  013482  0EFF               	movlw	255
 27777  013484  22DA               	addwfc	fsr2h,f,c
 27778                           
 27779                           ;stkvar	_grs @ sp[(-13)+4]
 27780  013486  0EFA               	movlw	250
 27781  013488  24E1               	addwf	fsr1l,w,c
 27782  01348A  6EE9               	movwf	fsr0l,c
 27783  01348C  0EFF               	movlw	255
 27784  01348E  20E2               	addwfc	fsr1h,w,c
 27785  013490  6EEA               	movwf	fsr0h,c
 27786  013492  50EF               	movf	indf0,w,c
 27787  013494  26DE               	addwf	postinc2,f,c
 27788  013496  0E00               	movlw	0
 27789  013498  22DE               	addwfc	postinc2,f,c
 27790  01349A  22DE               	addwfc	postinc2,f,c
 27791  01349C  22DE               	addwfc	postinc2,f,c
 27792                           
 27793                           ;stkvar	_grs @ sp[(-13)+4]
 27794  01349E  50E1               	movf	fsr1l,w,c
 27795  0134A0  0FF7               	addlw	-9
 27796  0134A2  6ED9               	movwf	fsr2l,c
 27797  0134A4  50E2               	movf	fsr1h,w,c
 27798  0134A6  6EDA               	movwf	fsr2h,c
 27799  0134A8  0EFF               	movlw	255
 27800  0134AA  22DA               	addwfc	fsr2h,f,c
 27801  0134AC  0E08               	movlw	8
 27802  0134AE                     u6575:
 27803  0134AE  90D8               	bcf	status,0,c
 27804  0134B0  36DE               	rlcf	postinc2,f,c
 27805  0134B2  36DE               	rlcf	postinc2,f,c
 27806  0134B4  36DE               	rlcf	postinc2,f,c
 27807  0134B6  36DD               	rlcf	postdec2,f,c
 27808  0134B8  52DD               	movf	postdec2,f,c
 27809  0134BA  52DD               	movf	postdec2,f,c
 27810  0134BC  2EE8               	decfsz	wreg,f,c
 27811  0134BE  D7F7               	goto	u6575
 27812  0134C0  0E82               	movlw	130
 27813  0134C2  6E0B               	movwf	(btemp+10)^0,c
 27814  0134C4  0EFF               	movlw	255
 27815  0134C6  6E0C               	movwf	(btemp+11)^0,c
 27816                           
 27817                           ;stkvar	_bexp @ sp[(-13)+10]
 27818  0134C8  0EFD               	movlw	-3
 27819  0134CA  50E3               	movf	plusw1,w,c
 27820  0134CC  6E09               	movwf	(btemp+8)^0,c
 27821  0134CE  6A0A               	clrf	(btemp+9)^0,c
 27822                           
 27823                           ;stkvar	_aexp @ sp[(-13)+11]
 27824  0134D0  0EFE               	movlw	-2
 27825  0134D2  50E3               	movf	plusw1,w,c
 27826  0134D4  2609               	addwf	(btemp+8)^0,f,c
 27827  0134D6  0E00               	movlw	0
 27828  0134D8  220A               	addwfc	(btemp+9)^0,f,c
 27829  0134DA  500B               	movf	(btemp+10)^0,w,c
 27830  0134DC  2609               	addwf	(btemp+8)^0,f,c
 27831  0134DE  500C               	movf	(btemp+11)^0,w,c
 27832  0134E0  220A               	addwfc	(btemp+9)^0,f,c
 27833                           
 27834                           ;stkvar	_temp @ sp[(-13)+8]
 27835  0134E2  0EFB               	movlw	-5
 27836  0134E4  0060  F027  FFE3   	movff	btemp+8,plusw1
 27837  0134EA  0EFC               	movlw	-4
 27838  0134EC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27839  0134F2  D021               	goto	l8184
 27840  0134F4                     l8174:
 27841                           
 27842                           ;stkvar	_prod @ sp[(-13)+0]
 27843  0134F4  90D8               	bcf	status,0,c
 27844  0134F6  0EF3               	movlw	-13
 27845  0134F8  36E3               	rlcf	plusw1,f,c
 27846  0134FA  0EF4               	movlw	-12
 27847  0134FC  36E3               	rlcf	plusw1,f,c
 27848  0134FE  0EF5               	movlw	-11
 27849  013500  36E3               	rlcf	plusw1,f,c
 27850  013502  0EF6               	movlw	-10
 27851  013504  36E3               	rlcf	plusw1,f,c
 27852                           
 27853                           ;stkvar	_grs @ sp[(-13)+4]
 27854  013506  0EFA               	movlw	-6
 27855  013508  AEE3               	btfss	plusw1,7,c
 27856  01350A  D002               	goto	l8180
 27857                           
 27858                           ;stkvar	_prod @ sp[(-13)+0]
 27859  01350C  0EF3               	movlw	-13
 27860  01350E  80E3               	bsf	plusw1,0,c
 27861  013510                     l8180:
 27862                           
 27863                           ;stkvar	_grs @ sp[(-13)+4]
 27864  013510  90D8               	bcf	status,0,c
 27865  013512  0EF7               	movlw	-9
 27866  013514  36E3               	rlcf	plusw1,f,c
 27867  013516  0EF8               	movlw	-8
 27868  013518  36E3               	rlcf	plusw1,f,c
 27869  01351A  0EF9               	movlw	-7
 27870  01351C  36E3               	rlcf	plusw1,f,c
 27871  01351E  0EFA               	movlw	-6
 27872  013520  36E3               	rlcf	plusw1,f,c
 27873                           
 27874                           ;stkvar	_temp @ sp[(-13)+8]
 27875  013522  50E1               	movf	fsr1l,w,c
 27876  013524  0FFB               	addlw	-5
 27877  013526  6ED9               	movwf	fsr2l,c
 27878  013528  50E2               	movf	fsr1h,w,c
 27879  01352A  6EDA               	movwf	fsr2h,c
 27880  01352C  0EFF               	movlw	255
 27881  01352E  22DA               	addwfc	fsr2h,f,c
 27882  013530  06DE               	decf	postinc2,f,c
 27883  013532  0E00               	movlw	0
 27884  013534  5ADD               	subwfb	postdec2,f,c
 27885  013536                     l8184:
 27886                           
 27887                           ;stkvar	_prod @ sp[(-13)+0]
 27888  013536  0EF5               	movlw	-11
 27889  013538  AEE3               	btfss	plusw1,7,c
 27890  01353A  D7DC               	goto	l8174
 27891                           
 27892                           ;stkvar	_aexp @ sp[(-13)+11]
 27893  01353C  0EFE               	movlw	-2
 27894  01353E  6AE3               	clrf	plusw1,c
 27895                           
 27896                           ;stkvar	_grs @ sp[(-13)+4]
 27897  013540  0EFA               	movlw	-6
 27898  013542  AEE3               	btfss	plusw1,7,c
 27899  013544  D020               	goto	l8198
 27900                           
 27901                           ;stkvar	_grs @ sp[(-13)+4]
 27902  013546  50E1               	movf	fsr1l,w,c
 27903  013548  0FF7               	addlw	-9
 27904  01354A  6ED9               	movwf	fsr2l,c
 27905  01354C  50E2               	movf	fsr1h,w,c
 27906  01354E  6EDA               	movwf	fsr2h,c
 27907  013550  0EFF               	movlw	255
 27908  013552  22DA               	addwfc	fsr2h,f,c
 27909  013554  0EFF               	movlw	255
 27910  013556  14DE               	andwf	postinc2,w,c
 27911  013558  6E09               	movwf	(btemp+8)^0,c
 27912  01355A  0EFF               	movlw	255
 27913  01355C  14DE               	andwf	postinc2,w,c
 27914  01355E  6E0A               	movwf	(btemp+9)^0,c
 27915  013560  0EFF               	movlw	255
 27916  013562  14DE               	andwf	postinc2,w,c
 27917  013564  6E0B               	movwf	(btemp+10)^0,c
 27918  013566  0E7F               	movlw	127
 27919  013568  14DE               	andwf	postinc2,w,c
 27920  01356A  6E0C               	movwf	(btemp+11)^0,c
 27921  01356C  5009               	movf	(btemp+8)^0,w,c
 27922  01356E  100A               	iorwf	(btemp+9)^0,w,c
 27923  013570  100B               	iorwf	(btemp+10)^0,w,c
 27924  013572  100C               	iorwf	(btemp+11)^0,w,c
 27925  013574  B4D8               	btfsc	status,2,c
 27926  013576  D004               	goto	l8194
 27927  013578                     u6610:
 27928                           
 27929                           ;stkvar	_aexp @ sp[(-13)+11]
 27930  013578  0EFE               	movlw	-2
 27931  01357A  6AE3               	clrf	plusw1,c
 27932  01357C  2AE3               	incf	plusw1,f,c
 27933  01357E  D003               	goto	l8198
 27934  013580                     l8194:
 27935                           
 27936                           ;stkvar	_prod @ sp[(-13)+0]
 27937  013580  0EF3               	movlw	-13
 27938  013582  B0E3               	btfsc	plusw1,0,c
 27939  013584  D7F9               	goto	u6610
 27940  013586                     l8198:
 27941                           
 27942                           ;stkvar	_aexp @ sp[(-13)+11]
 27943  013586  0EFE               	movlw	-2
 27944  013588  50E3               	movf	plusw1,w,c
 27945  01358A  B4D8               	btfsc	status,2,c
 27946  01358C  D036               	goto	l8208
 27947                           
 27948                           ;stkvar	_prod @ sp[(-13)+0]
 27949  01358E  50E1               	movf	fsr1l,w,c
 27950  013590  0FF3               	addlw	-13
 27951  013592  6ED9               	movwf	fsr2l,c
 27952  013594  50E2               	movf	fsr1h,w,c
 27953  013596  6EDA               	movwf	fsr2h,c
 27954  013598  0EFF               	movlw	255
 27955  01359A  22DA               	addwfc	fsr2h,f,c
 27956  01359C  2ADE               	incf	postinc2,f,c
 27957  01359E  0E00               	movlw	0
 27958  0135A0  22DE               	addwfc	postinc2,f,c
 27959  0135A2  22DE               	addwfc	postinc2,f,c
 27960  0135A4  22DE               	addwfc	postinc2,f,c
 27961                           
 27962                           ;stkvar	_prod @ sp[(-13)+0]
 27963  0135A6  0EF6               	movlw	-10
 27964  0135A8  A0E3               	btfss	plusw1,0,c
 27965  0135AA  D027               	goto	l8208
 27966  0135AC  0E01               	movlw	1
 27967  0135AE  6E0C               	movwf	(btemp+11)^0,c
 27968                           
 27969                           ;stkvar	_prod @ sp[(-13)+0]
 27970  0135B0  50E1               	movf	fsr1l,w,c
 27971  0135B2  0FF3               	addlw	-13
 27972  0135B4  6ED9               	movwf	fsr2l,c
 27973  0135B6  50E2               	movf	fsr1h,w,c
 27974  0135B8  6EDA               	movwf	fsr2h,c
 27975  0135BA  0EFF               	movlw	255
 27976  0135BC  22DA               	addwfc	fsr2h,f,c
 27977  0135BE  280C               	incf	(btemp+11)^0,w,c
 27978  0135C0  52DE               	movf	postinc2,f,c
 27979  0135C2  D008               	goto	u6650
 27980  0135C4                     u6655:
 27981  0135C4  52DE               	movf	postinc2,f,c
 27982  0135C6  90D8               	bcf	status,0,c
 27983  0135C8  BEDC               	btfsc	preinc2,7,c
 27984  0135CA  80D8               	bsf	status,0,c
 27985  0135CC  32DD               	rrcf	postdec2,f,c
 27986  0135CE  32DD               	rrcf	postdec2,f,c
 27987  0135D0  32DD               	rrcf	postdec2,f,c
 27988  0135D2  32DE               	rrcf	postinc2,f,c
 27989  0135D4                     u6650:
 27990  0135D4  2EE8               	decfsz	wreg,f,c
 27991  0135D6  D7F6               	goto	u6655
 27992                           
 27993                           ;stkvar	_temp @ sp[(-13)+8]
 27994  0135D8  0EFB               	movlw	-5
 27995  0135DA  50E3               	movf	plusw1,w,c
 27996  0135DC  0F01               	addlw	1
 27997  0135DE  6E01               	movwf	btemp^0,c
 27998  0135E0  0EFB               	movlw	-5
 27999  0135E2  0060  F007  FFE3   	movff	btemp,plusw1
 28000  0135E8  6A01               	clrf	btemp^0,c
 28001  0135EA  0EFC               	movlw	-4
 28002  0135EC  50E3               	movf	plusw1,w,c
 28003  0135EE  2001               	addwfc	btemp^0,w,c
 28004  0135F0  6E01               	movwf	btemp^0,c
 28005  0135F2  0EFC               	movlw	-4
 28006  0135F4  0060  F007  FFE3   	movff	btemp,plusw1
 28007  0135FA                     l8208:
 28008                           
 28009                           ;stkvar	_temp @ sp[(-13)+8]
 28010  0135FA  0EFC               	movlw	-4
 28011  0135FC  BEE3               	btfsc	plusw1,7,c
 28012  0135FE  D020               	goto	l8212
 28013  013600  0EFC               	movlw	-4
 28014  013602  50E3               	movf	plusw1,w,c
 28015  013604  E104               	bnz	u6660
 28016  013606  0EFB               	movlw	-5
 28017  013608  28E3               	incf	plusw1,w,c
 28018  01360A  A0D8               	btfss	status,0,c
 28019  01360C  D019               	goto	l8212
 28020  01360E                     u6660:
 28021  01360E  0E00               	movlw	0
 28022  013610  6E09               	movwf	(btemp+8)^0,c
 28023  013612  0E00               	movlw	0
 28024  013614  6E0A               	movwf	(btemp+9)^0,c
 28025  013616  0E80               	movlw	128
 28026  013618  6E0B               	movwf	(btemp+10)^0,c
 28027  01361A  0E7F               	movlw	127
 28028  01361C  6E0C               	movwf	(btemp+11)^0,c
 28029                           
 28030                           ;stkvar	_prod @ sp[(-13)+0]
 28031  01361E  0EF3               	movlw	-13
 28032  013620  0060  F027  FFE3   	movff	btemp+8,plusw1
 28033  013626  0EF4               	movlw	-12
 28034  013628  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28035  01362E  0EF5               	movlw	-11
 28036  013630  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28037  013636  0EF6               	movlw	-10
 28038  013638  0060  F033  FFE3   	movff	btemp+11,plusw1
 28039  01363E  D044               	goto	l8228
 28040  013640                     l8212:
 28041                           
 28042                           ;stkvar	_temp @ sp[(-13)+8]
 28043  013640  0EFC               	movlw	-4
 28044  013642  BEE3               	btfsc	plusw1,7,c
 28045  013644  D007               	goto	u6670
 28046  013646  0EFC               	movlw	-4
 28047  013648  50E3               	movf	plusw1,w,c
 28048  01364A  E10F               	bnz	l8218
 28049  01364C  0EFB               	movlw	-5
 28050  01364E  04E3               	decf	plusw1,w,c
 28051  013650  B0D8               	btfsc	status,0,c
 28052  013652  D00B               	goto	l8218
 28053  013654                     u6670:
 28054                           
 28055                           ;stkvar	_prod @ sp[(-13)+0]
 28056  013654  0EF3               	movlw	-13
 28057  013656  6AE3               	clrf	plusw1,c
 28058  013658  0EF4               	movlw	-12
 28059  01365A  6AE3               	clrf	plusw1,c
 28060  01365C  0EF5               	movlw	-11
 28061  01365E  6AE3               	clrf	plusw1,c
 28062  013660  0EF6               	movlw	-10
 28063  013662  6AE3               	clrf	plusw1,c
 28064                           
 28065                           ;stkvar	_sign @ sp[(-13)+12]
 28066  013664  0EFF               	movlw	-1
 28067  013666  6AE3               	clrf	plusw1,c
 28068  013668  D02F               	goto	l8228
 28069  01366A                     l8218:
 28070                           
 28071                           ;stkvar	_temp @ sp[(-13)+8]
 28072                           ;stkvar	_bexp @ sp[(-13)+10]
 28073  01366A  0EFB               	movlw	-5
 28074  01366C  006F FF8C  F001    	movff	plusw1,btemp
 28075  013672  0EFD               	movlw	-3
 28076  013674  0060  F007  FFE3   	movff	btemp,plusw1
 28077                           
 28078                           ;stkvar	_prod @ sp[(-13)+0]
 28079  01367A  50E1               	movf	fsr1l,w,c
 28080  01367C  0FF3               	addlw	-13
 28081  01367E  6ED9               	movwf	fsr2l,c
 28082  013680  50E2               	movf	fsr1h,w,c
 28083  013682  6EDA               	movwf	fsr2h,c
 28084  013684  0EFF               	movlw	255
 28085  013686  22DA               	addwfc	fsr2h,f,c
 28086  013688  0EFF               	movlw	255
 28087  01368A  16DE               	andwf	postinc2,f,c
 28088  01368C  0EFF               	movlw	255
 28089  01368E  16DE               	andwf	postinc2,f,c
 28090  013690  0E7F               	movlw	127
 28091  013692  16DE               	andwf	postinc2,f,c
 28092  013694  0E00               	movlw	0
 28093  013696  16DE               	andwf	postinc2,f,c
 28094                           
 28095                           ;stkvar	_bexp @ sp[(-13)+10]
 28096  013698  0EFD               	movlw	-3
 28097  01369A  A0E3               	btfss	plusw1,0,c
 28098  01369C  D008               	goto	l8226
 28099                           
 28100                           ;stkvar	_prod @ sp[(-13)+0]
 28101  01369E  0EF5               	movlw	245
 28102  0136A0  24E1               	addwf	fsr1l,w,c
 28103  0136A2  6ED9               	movwf	fsr2l,c
 28104  0136A4  0EFF               	movlw	255
 28105  0136A6  20E2               	addwfc	fsr1h,w,c
 28106  0136A8  6EDA               	movwf	fsr2h,c
 28107  0136AA  0E00               	movlw	0
 28108  0136AC  8EDB               	bsf	plusw2,7,c
 28109  0136AE                     l8226:
 28110                           
 28111                           ;stkvar	_prod @ sp[(-13)+0]
 28112  0136AE  0EF6               	movlw	246
 28113  0136B0  24E1               	addwf	fsr1l,w,c
 28114  0136B2  6ED9               	movwf	fsr2l,c
 28115  0136B4  0EFF               	movlw	255
 28116  0136B6  20E2               	addwfc	fsr1h,w,c
 28117  0136B8  6EDA               	movwf	fsr2h,c
 28118                           
 28119                           ;stkvar	_bexp @ sp[(-13)+10]
 28120  0136BA  0EFD               	movlw	-3
 28121  0136BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 28122  0136C2  90D8               	bcf	status,0,c
 28123  0136C4  300C               	rrcf	(btemp+11)^0,w,c
 28124  0136C6  6EDF               	movwf	indf2,c
 28125  0136C8                     l8228:
 28126                           
 28127                           ;stkvar	_sign @ sp[(-13)+12]
 28128  0136C8  0EFF               	movlw	-1
 28129  0136CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 28130                           
 28131                           ;stkvar	_prod @ sp[(-13)+0]
 28132  0136D0  0EF6               	movlw	246
 28133  0136D2  24E1               	addwf	fsr1l,w,c
 28134  0136D4  6ED9               	movwf	fsr2l,c
 28135  0136D6  0EFF               	movlw	255
 28136  0136D8  20E2               	addwfc	fsr1h,w,c
 28137  0136DA  6EDA               	movwf	fsr2h,c
 28138  0136DC  500C               	movf	(btemp+11)^0,w,c
 28139  0136DE  12DF               	iorwf	indf2,f,c
 28140                           
 28141                           ;stkvar	_prod @ sp[(-13)+0]
 28142  0136E0  0EF3               	movlw	-13
 28143  0136E2  006F FF8C  F001    	movff	plusw1,btemp
 28144  0136E8  0EF4               	movlw	-12
 28145  0136EA  006F FF8C  F002    	movff	plusw1,btemp+1
 28146  0136F0  0EF5               	movlw	-11
 28147  0136F2  006F FF8C  F003    	movff	plusw1,btemp+2
 28148  0136F8  0EF6               	movlw	-10
 28149  0136FA  006F FF8C  F004    	movff	plusw1,btemp+3
 28150  013700                     l2979:
 28151                           
 28152                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 28153  013700  0EEB               	movlw	235
 28154  013702  26E1               	addwf	fsr1l,f,c
 28155  013704  0EFF               	movlw	255
 28156  013706  22E2               	addwfc	fsr1h,f,c
 28157  013708  0012               	return		;funcret
 28158  01370A                     __end_of___flmul:
 28159                           	opt callstack 0
 28160                           
 28161 ;; *************** function _SYSTEM_Initialize *****************
 28162 ;; Defined at:
 28163 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28164 ;; Parameters:    Size  Location     Type
 28165 ;;		None
 28166 ;; Auto vars:     Size  Location     Type
 28167 ;;		None
 28168 ;; Return value:  Size  Location     Type
 28169 ;;                  1  [STACK] void 
 28170 ;; Registers used:
 28171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 28172 ;; Tracked objects:
 28173 ;;		On entry : 0/0
 28174 ;;		On exit  : 3F/3C
 28175 ;;		Unchanged: 0/0
 28176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28181 ;;Total ram usage:        0 bytes
 28182 ;; Hardware stack levels used:    1
 28183 ;; Hardware stack levels required when called:   17
 28184 ;; This function calls:
 28185 ;;		_ADCC_Initialize
 28186 ;;		_CLKREF_Initialize
 28187 ;;		_DMA1_Initialize
 28188 ;;		_DMA2_Initialize
 28189 ;;		_EXT_INT_Initialize
 28190 ;;		_FVR_Initialize
 28191 ;;		_INTERRUPT_Initialize
 28192 ;;		_OSCILLATOR_Initialize
 28193 ;;		_PIN_MANAGER_Initialize
 28194 ;;		_PMD_Initialize
 28195 ;;		_PWM8_Initialize
 28196 ;;		_SPI1_Initialize
 28197 ;;		_TMR2_Initialize
 28198 ;;		_TMR3_Initialize
 28199 ;;		_TMR5_Initialize
 28200 ;;		_TMR6_Initialize
 28201 ;;		_UART1_Initialize
 28202 ;;		_UART2_Initialize
 28203 ;; This function is called by:
 28204 ;;		_main
 28205 ;; This function uses a reentrant model
 28206 ;;
 28207                           
 28208                           	psect	text107
 28209  01A6D6                     __ptext107:
 28210                           	opt callstack 0
 28211  01A6D6                     _SYSTEM_Initialize:
 28212                           	opt callstack 13
 28213                           
 28214                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 28215                           
 28216                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28217                           ;incstack = 0
 28218  01A6D6  EC4B  F0D1         	call	_INTERRUPT_Initialize	;wreg free
 28219                           
 28220                           ; BSR set to: 57
 28221                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 28222  01A6DA  EC9A  F0D9         	call	_PMD_Initialize	;wreg free
 28223                           
 28224                           ; BSR set to: 57
 28225                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 28226  01A6DE  EC14  F0CF         	call	_PIN_MANAGER_Initialize	;wreg free
 28227                           
 28228                           ; BSR set to: 58
 28229                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 28230  01A6E2  EC8F  F0D9         	call	_OSCILLATOR_Initialize	;wreg free
 28231                           
 28232                           ; BSR set to: 57
 28233                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 28234  01A6E6  EC0F  F0DA         	call	_FVR_Initialize	;wreg free
 28235                           
 28236                           ; BSR set to: 62
 28237                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 28238  01A6EA  ECE1  F0D0         	call	_ADCC_Initialize	;wreg free
 28239                           
 28240                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 28241  01A6EE  EC84  F0D9         	call	_PWM8_Initialize	;wreg free
 28242                           
 28243                           ; BSR set to: 63
 28244                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 28245  01A6F2  EC6D  F0D9         	call	_TMR2_Initialize	;wreg free
 28246                           
 28247                           ; BSR set to: 57
 28248                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 28249  01A6F6  ECE9  F0D5         	call	_EXT_INT_Initialize	;wreg free
 28250                           
 28251                           ; BSR set to: 57
 28252                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 28253  01A6FA  ECD6  F0D6         	call	_TMR6_Initialize	;wreg free
 28254                           
 28255                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 28256  01A6FE  EC40  F0D4         	call	_TMR3_Initialize	;wreg free
 28257                           
 28258                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 28259  01A702  EC1D  F0D4         	call	_TMR5_Initialize	;wreg free
 28260                           
 28261                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 28262  01A706  ECFA  F0D3         	call	_UART1_Initialize	;wreg free
 28263                           
 28264                           ; BSR set to: 57
 28265                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 28266  01A70A  EC12  F0D2         	call	_UART2_Initialize	;wreg free
 28267                           
 28268                           ; BSR set to: 57
 28269                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 28270  01A70E  EC79  F0D9         	call	_SPI1_Initialize	;wreg free
 28271                           
 28272                           ; BSR set to: 61
 28273                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 28274  01A712  EC6E  F0D2         	call	_DMA2_Initialize	;wreg free
 28275                           
 28276                           ; BSR set to: 59
 28277                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 28278  01A716  ECAC  F0D0         	call	_DMA1_Initialize	;wreg free
 28279                           
 28280                           ; BSR set to: 59
 28281                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 28282  01A71A  ECE3  F0D9         	call	_CLKREF_Initialize	;wreg free
 28283                           
 28284                           ; BSR set to: 60
 28285                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28286  01A71E  0012               	return		;funcret
 28287  01A720                     __end_of_SYSTEM_Initialize:
 28288                           	opt callstack 0
 28289                           
 28290 ;; *************** function _UART2_Initialize *****************
 28291 ;; Defined at:
 28292 ;;		line 78 in file "mcc_generated_files/uart2.c"
 28293 ;; Parameters:    Size  Location     Type
 28294 ;;		None
 28295 ;; Auto vars:     Size  Location     Type
 28296 ;;		None
 28297 ;; Return value:  Size  Location     Type
 28298 ;;                  1  [STACK] void 
 28299 ;; Registers used:
 28300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28301 ;; Tracked objects:
 28302 ;;		On entry : 3F/39
 28303 ;;		On exit  : 3F/39
 28304 ;;		Unchanged: 0/0
 28305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28310 ;;Total ram usage:        0 bytes
 28311 ;; Hardware stack levels used:    1
 28312 ;; Hardware stack levels required when called:   16
 28313 ;; This function calls:
 28314 ;;		_UART2_SetRxInterruptHandler
 28315 ;;		_UART2_SetTxInterruptHandler
 28316 ;; This function is called by:
 28317 ;;		_SYSTEM_Initialize
 28318 ;; This function uses a reentrant model
 28319 ;;
 28320                           
 28321                           	psect	text108
 28322  01A424                     __ptext108:
 28323                           	opt callstack 0
 28324  01A424                     _UART2_Initialize:
 28325                           	opt callstack 13
 28326                           
 28327                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 28328                           
 28329                           ; BSR set to: 60
 28330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28331                           ;incstack = 0
 28332  01A424  0139               	movlb	57	; () banked
 28333  01A426  9596               	bcf	150,2,b	;volatile
 28334                           
 28335                           ; BSR set to: 57
 28336                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 28337  01A428  0E36               	movlw	low _UART2_Receive_ISR
 28338  01A42A  6EE6               	movwf	postinc1,c
 28339  01A42C  0EB2               	movlw	high _UART2_Receive_ISR
 28340  01A42E  6EE6               	movwf	postinc1,c
 28341  01A430  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 28342  01A432  6EE6               	movwf	postinc1,c
 28343  01A434  EC4F  F0D7         	call	_UART2_SetRxInterruptHandler	;wreg free
 28344                           
 28345                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 28346  01A438  0139               	movlb	57	; () banked
 28347  01A43A  9796               	bcf	150,3,b	;volatile
 28348                           
 28349                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 28350  01A43C  0E80               	movlw	low _UART2_Transmit_ISR
 28351  01A43E  6EE6               	movwf	postinc1,c
 28352  01A440  0EAD               	movlw	high _UART2_Transmit_ISR
 28353  01A442  6EE6               	movwf	postinc1,c
 28354  01A444  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 28355  01A446  6EE6               	movwf	postinc1,c
 28356  01A448  EC3B  F0D7         	call	_UART2_SetTxInterruptHandler	;wreg free
 28357                           
 28358                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 28359  01A44C  013D               	movlb	61	; () banked
 28360  01A44E  6BD4               	clrf	212,b	;volatile
 28361                           
 28362                           ; BSR set to: 61
 28363                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 28364  01A450  6BD6               	clrf	214,b	;volatile
 28365                           
 28366                           ; BSR set to: 61
 28367                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 28368  01A452  6BD8               	clrf	216,b	;volatile
 28369                           
 28370                           ; BSR set to: 61
 28371                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 28372  01A454  0EB0               	movlw	176
 28373  01A456  6FDA               	movwf	218,b	;volatile
 28374                           
 28375                           ; BSR set to: 61
 28376                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 28377  01A458  0E80               	movlw	128
 28378  01A45A  6FDB               	movwf	219,b	;volatile
 28379                           
 28380                           ; BSR set to: 61
 28381                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 28382  01A45C  6BDC               	clrf	220,b	;volatile
 28383                           
 28384                           ; BSR set to: 61
 28385                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 28386  01A45E  0E82               	movlw	130
 28387  01A460  6FDD               	movwf	221,b	;volatile
 28388                           
 28389                           ; BSR set to: 61
 28390                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 28391  01A462  0E06               	movlw	6
 28392  01A464  6FDE               	movwf	222,b	;volatile
 28393                           
 28394                           ; BSR set to: 61
 28395                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 28396  01A466  6BDF               	clrf	223,b	;volatile
 28397                           
 28398                           ; BSR set to: 61
 28399                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 28400  01A468  6BE0               	clrf	224,b	;volatile
 28401                           
 28402                           ; BSR set to: 61
 28403                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 28404  01A46A  6BE1               	clrf	225,b	;volatile
 28405                           
 28406                           ; BSR set to: 61
 28407                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 28408  01A46C  6BE2               	clrf	226,b	;volatile
 28409                           
 28410                           ; BSR set to: 61
 28411                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 28412  01A46E  6A35               	clrf	_uart2TxHead^0,c	;volatile
 28413                           
 28414                           ; BSR set to: 61
 28415                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 28416  01A470  6A34               	clrf	_uart2TxTail^0,c	;volatile
 28417                           
 28418                           ; BSR set to: 61
 28419                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 28420  01A472  0E40               	movlw	64
 28421  01A474  6E33               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 28422                           
 28423                           ; BSR set to: 61
 28424                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 28425  01A476  6A32               	clrf	_uart2RxHead^0,c	;volatile
 28426                           
 28427                           ; BSR set to: 61
 28428                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 28429  01A478  6A31               	clrf	_uart2RxTail^0,c	;volatile
 28430                           
 28431                           ; BSR set to: 61
 28432                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 28433  01A47A  6A30               	clrf	_uart2RxCount^0,c	;volatile
 28434                           
 28435                           ; BSR set to: 61
 28436                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 28437  01A47C  0139               	movlb	57	; () banked
 28438  01A47E  8596               	bsf	150,2,b	;volatile
 28439                           
 28440                           ; BSR set to: 57
 28441                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 28442  01A480  0012               	return		;funcret
 28443  01A482                     __end_of_UART2_Initialize:
 28444                           	opt callstack 0
 28445                           
 28446 ;; *************** function _UART2_SetTxInterruptHandler *****************
 28447 ;; Defined at:
 28448 ;;		line 252 in file "mcc_generated_files/uart2.c"
 28449 ;; Parameters:    Size  Location     Type
 28450 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28451 ;;		 -> UART2_Transmit_ISR(1), 
 28452 ;; Auto vars:     Size  Location     Type
 28453 ;;		None
 28454 ;; Return value:  Size  Location     Type
 28455 ;;                  1  [STACK] void 
 28456 ;; Registers used:
 28457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28458 ;; Tracked objects:
 28459 ;;		On entry : 3F/39
 28460 ;;		On exit  : 0/0
 28461 ;;		Unchanged: 0/0
 28462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28467 ;;Total ram usage:        0 bytes
 28468 ;; Hardware stack levels used:    1
 28469 ;; Hardware stack levels required when called:   15
 28470 ;; This function calls:
 28471 ;;		Nothing
 28472 ;; This function is called by:
 28473 ;;		_UART2_Initialize
 28474 ;; This function uses a reentrant model
 28475 ;;
 28476                           
 28477                           	psect	text109
 28478  01AE76                     __ptext109:
 28479                           	opt callstack 0
 28480  01AE76                     _UART2_SetTxInterruptHandler:
 28481                           	opt callstack 13
 28482                           
 28483                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 28484                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28485                           
 28486                           ; BSR set to: 57
 28487                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28488                           ;incstack = 0
 28489  01AE76  50E1               	movf	fsr1l,w,c
 28490  01AE78  0FFD               	addlw	-3
 28491  01AE7A  6ED9               	movwf	fsr2l,c
 28492  01AE7C  50E2               	movf	fsr1h,w,c
 28493  01AE7E  6EDA               	movwf	fsr2h,c
 28494  01AE80  0EFF               	movlw	255
 28495  01AE82  22DA               	addwfc	fsr2h,f,c
 28496  01AE84  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 28497  01AE8A  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 28498  01AE90  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 28499                           
 28500                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28501  01AE96  52E5               	movf	postdec1,f,c
 28502  01AE98  52E5               	movf	postdec1,f,c
 28503  01AE9A  52E5               	movf	postdec1,f,c
 28504  01AE9C  0012               	return		;funcret
 28505  01AE9E                     __end_of_UART2_SetTxInterruptHandler:
 28506                           	opt callstack 0
 28507                           
 28508 ;; *************** function _UART2_SetRxInterruptHandler *****************
 28509 ;; Defined at:
 28510 ;;		line 248 in file "mcc_generated_files/uart2.c"
 28511 ;; Parameters:    Size  Location     Type
 28512 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28513 ;;		 -> UART2_Receive_ISR(1), 
 28514 ;; Auto vars:     Size  Location     Type
 28515 ;;		None
 28516 ;; Return value:  Size  Location     Type
 28517 ;;                  1  [STACK] void 
 28518 ;; Registers used:
 28519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28520 ;; Tracked objects:
 28521 ;;		On entry : 3F/39
 28522 ;;		On exit  : 0/0
 28523 ;;		Unchanged: 0/0
 28524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28529 ;;Total ram usage:        0 bytes
 28530 ;; Hardware stack levels used:    1
 28531 ;; Hardware stack levels required when called:   15
 28532 ;; This function calls:
 28533 ;;		Nothing
 28534 ;; This function is called by:
 28535 ;;		_UART2_Initialize
 28536 ;; This function uses a reentrant model
 28537 ;;
 28538                           
 28539                           	psect	text110
 28540  01AE9E                     __ptext110:
 28541                           	opt callstack 0
 28542  01AE9E                     _UART2_SetRxInterruptHandler:
 28543                           	opt callstack 13
 28544                           
 28545                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 28546                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28547                           
 28548                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28549                           ;incstack = 0
 28550  01AE9E  50E1               	movf	fsr1l,w,c
 28551  01AEA0  0FFD               	addlw	-3
 28552  01AEA2  6ED9               	movwf	fsr2l,c
 28553  01AEA4  50E2               	movf	fsr1h,w,c
 28554  01AEA6  6EDA               	movwf	fsr2h,c
 28555  01AEA8  0EFF               	movlw	255
 28556  01AEAA  22DA               	addwfc	fsr2h,f,c
 28557  01AEAC  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 28558  01AEB2  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 28559  01AEB8  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 28560                           
 28561                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28562  01AEBE  52E5               	movf	postdec1,f,c
 28563  01AEC0  52E5               	movf	postdec1,f,c
 28564  01AEC2  52E5               	movf	postdec1,f,c
 28565  01AEC4  0012               	return		;funcret
 28566  01AEC6                     __end_of_UART2_SetRxInterruptHandler:
 28567                           	opt callstack 0
 28568                           
 28569 ;; *************** function _UART1_Initialize *****************
 28570 ;; Defined at:
 28571 ;;		line 75 in file "mcc_generated_files/uart1.c"
 28572 ;; Parameters:    Size  Location     Type
 28573 ;;		None
 28574 ;; Auto vars:     Size  Location     Type
 28575 ;;		None
 28576 ;; Return value:  Size  Location     Type
 28577 ;;                  1  [STACK] void 
 28578 ;; Registers used:
 28579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28580 ;; Tracked objects:
 28581 ;;		On entry : 0/39
 28582 ;;		On exit  : 3F/39
 28583 ;;		Unchanged: 0/0
 28584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28589 ;;Total ram usage:        0 bytes
 28590 ;; Hardware stack levels used:    1
 28591 ;; Hardware stack levels required when called:   16
 28592 ;; This function calls:
 28593 ;;		_UART1_SetRxInterruptHandler
 28594 ;; This function is called by:
 28595 ;;		_SYSTEM_Initialize
 28596 ;; This function uses a reentrant model
 28597 ;;
 28598                           
 28599                           	psect	text111
 28600  01A7F4                     __ptext111:
 28601                           	opt callstack 0
 28602  01A7F4                     _UART1_Initialize:
 28603                           	opt callstack 13
 28604                           
 28605                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 28606                           
 28607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28608                           ;incstack = 0
 28609  01A7F4  0139               	movlb	57	; () banked
 28610  01A7F6  9793               	bcf	147,3,b	;volatile
 28611                           
 28612                           ; BSR set to: 57
 28613                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 28614  01A7F8  0E70               	movlw	low _UART1_Receive_ISR
 28615  01A7FA  6EE6               	movwf	postinc1,c
 28616  01A7FC  0EB2               	movlw	high _UART1_Receive_ISR
 28617  01A7FE  6EE6               	movwf	postinc1,c
 28618  01A800  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 28619  01A802  6EE6               	movwf	postinc1,c
 28620  01A804  EC63  F0D7         	call	_UART1_SetRxInterruptHandler	;wreg free
 28621                           
 28622                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 28623  01A808  013D               	movlb	61	; () banked
 28624  01A80A  6BEC               	clrf	236,b	;volatile
 28625                           
 28626                           ; BSR set to: 61
 28627                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 28628  01A80C  6BED               	clrf	237,b	;volatile
 28629                           
 28630                           ; BSR set to: 61
 28631                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 28632  01A80E  6BEE               	clrf	238,b	;volatile
 28633                           
 28634                           ; BSR set to: 61
 28635                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 28636  01A810  6BEF               	clrf	239,b	;volatile
 28637                           
 28638                           ; BSR set to: 61
 28639                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 28640  01A812  6BF0               	clrf	240,b	;volatile
 28641                           
 28642                           ; BSR set to: 61
 28643                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 28644  01A814  6BF1               	clrf	241,b	;volatile
 28645                           
 28646                           ; BSR set to: 61
 28647                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 28648  01A816  0EB0               	movlw	176
 28649  01A818  6FF2               	movwf	242,b	;volatile
 28650                           
 28651                           ; BSR set to: 61
 28652                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 28653  01A81A  0E80               	movlw	128
 28654  01A81C  6FF3               	movwf	243,b	;volatile
 28655                           
 28656                           ; BSR set to: 61
 28657                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 28658  01A81E  6BF4               	clrf	244,b	;volatile
 28659                           
 28660                           ; BSR set to: 61
 28661                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 28662  01A820  0E8A               	movlw	138
 28663  01A822  6FF5               	movwf	245,b	;volatile
 28664                           
 28665                           ; BSR set to: 61
 28666                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 28667  01A824  6BF6               	clrf	246,b	;volatile
 28668                           
 28669                           ; BSR set to: 61
 28670                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 28671  01A826  6BF7               	clrf	247,b	;volatile
 28672                           
 28673                           ; BSR set to: 61
 28674                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 28675  01A828  6BF8               	clrf	248,b	;volatile
 28676                           
 28677                           ; BSR set to: 61
 28678                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 28679  01A82A  6BF9               	clrf	249,b	;volatile
 28680                           
 28681                           ; BSR set to: 61
 28682                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 28683  01A82C  6BFA               	clrf	250,b	;volatile
 28684                           
 28685                           ; BSR set to: 61
 28686                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 28687  01A82E  6A38               	clrf	_uart1RxHead^0,c	;volatile
 28688                           
 28689                           ; BSR set to: 61
 28690                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 28691  01A830  6A37               	clrf	_uart1RxTail^0,c	;volatile
 28692                           
 28693                           ; BSR set to: 61
 28694                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 28695  01A832  6A36               	clrf	_uart1RxCount^0,c	;volatile
 28696                           
 28697                           ; BSR set to: 61
 28698                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 28699  01A834  0139               	movlb	57	; () banked
 28700  01A836  8793               	bsf	147,3,b	;volatile
 28701                           
 28702                           ; BSR set to: 57
 28703                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 28704  01A838  0012               	return		;funcret
 28705  01A83A                     __end_of_UART1_Initialize:
 28706                           	opt callstack 0
 28707                           
 28708 ;; *************** function _UART1_SetRxInterruptHandler *****************
 28709 ;; Defined at:
 28710 ;;		line 207 in file "mcc_generated_files/uart1.c"
 28711 ;; Parameters:    Size  Location     Type
 28712 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28713 ;;		 -> UART1_Receive_ISR(1), 
 28714 ;; Auto vars:     Size  Location     Type
 28715 ;;		None
 28716 ;; Return value:  Size  Location     Type
 28717 ;;                  1  [STACK] void 
 28718 ;; Registers used:
 28719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28720 ;; Tracked objects:
 28721 ;;		On entry : 3F/39
 28722 ;;		On exit  : 0/0
 28723 ;;		Unchanged: 0/0
 28724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28729 ;;Total ram usage:        0 bytes
 28730 ;; Hardware stack levels used:    1
 28731 ;; Hardware stack levels required when called:   15
 28732 ;; This function calls:
 28733 ;;		Nothing
 28734 ;; This function is called by:
 28735 ;;		_UART1_Initialize
 28736 ;; This function uses a reentrant model
 28737 ;;
 28738                           
 28739                           	psect	text112
 28740  01AEC6                     __ptext112:
 28741                           	opt callstack 0
 28742  01AEC6                     _UART1_SetRxInterruptHandler:
 28743                           	opt callstack 13
 28744                           
 28745                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 28746                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28747                           
 28748                           ; BSR set to: 57
 28749                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28750                           ;incstack = 0
 28751  01AEC6  50E1               	movf	fsr1l,w,c
 28752  01AEC8  0FFD               	addlw	-3
 28753  01AECA  6ED9               	movwf	fsr2l,c
 28754  01AECC  50E2               	movf	fsr1h,w,c
 28755  01AECE  6EDA               	movwf	fsr2h,c
 28756  01AED0  0EFF               	movlw	255
 28757  01AED2  22DA               	addwfc	fsr2h,f,c
 28758  01AED4  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 28759  01AEDA  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 28760  01AEE0  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 28761                           
 28762                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28763  01AEE6  52E5               	movf	postdec1,f,c
 28764  01AEE8  52E5               	movf	postdec1,f,c
 28765  01AEEA  52E5               	movf	postdec1,f,c
 28766  01AEEC  0012               	return		;funcret
 28767  01AEEE                     __end_of_UART1_SetRxInterruptHandler:
 28768                           	opt callstack 0
 28769                           
 28770 ;; *************** function _TMR6_Initialize *****************
 28771 ;; Defined at:
 28772 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 28773 ;; Parameters:    Size  Location     Type
 28774 ;;		None
 28775 ;; Auto vars:     Size  Location     Type
 28776 ;;		None
 28777 ;; Return value:  Size  Location     Type
 28778 ;;                  1  [STACK] void 
 28779 ;; Registers used:
 28780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28781 ;; Tracked objects:
 28782 ;;		On entry : 3F/39
 28783 ;;		On exit  : 0/0
 28784 ;;		Unchanged: 0/0
 28785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28790 ;;Total ram usage:        0 bytes
 28791 ;; Hardware stack levels used:    1
 28792 ;; Hardware stack levels required when called:   16
 28793 ;; This function calls:
 28794 ;;		_TMR6_SetInterruptHandler
 28795 ;; This function is called by:
 28796 ;;		_SYSTEM_Initialize
 28797 ;; This function uses a reentrant model
 28798 ;;
 28799                           
 28800                           	psect	text113
 28801  01ADAC                     __ptext113:
 28802                           	opt callstack 0
 28803  01ADAC                     _TMR6_Initialize:
 28804                           	opt callstack 13
 28805                           
 28806                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 28807                           
 28808                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28809                           ;incstack = 0
 28810  01ADAC  0E01               	movlw	1
 28811  01ADAE  6E96               	movwf	150,c	;volatile
 28812                           
 28813                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 28814  01ADB0  6A95               	clrf	149,c	;volatile
 28815                           
 28816                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 28817  01ADB2  6A97               	clrf	151,c	;volatile
 28818                           
 28819                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 28820  01ADB4  0E7C               	movlw	124
 28821  01ADB6  6E93               	movwf	147,c	;volatile
 28822                           
 28823                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 28824  01ADB8  6A92               	clrf	146,c	;volatile
 28825                           
 28826                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 28827  01ADBA  0139               	movlb	57	; () banked
 28828  01ADBC  91A9               	bcf	169,0,b	;volatile
 28829                           
 28830                           ; BSR set to: 57
 28831                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 28832  01ADBE  8199               	bsf	153,0,b	;volatile
 28833                           
 28834                           ; BSR set to: 57
 28835                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 28836  01ADC0  0E88               	movlw	low _TMR6_DefaultInterruptHandler
 28837  01ADC2  6EE6               	movwf	postinc1,c
 28838  01ADC4  0EA6               	movlw	high _TMR6_DefaultInterruptHandler
 28839  01ADC6  6EE6               	movwf	postinc1,c
 28840  01ADC8  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 28841  01ADCA  6EE6               	movwf	postinc1,c
 28842  01ADCC  EC77  F0D7         	call	_TMR6_SetInterruptHandler	;wreg free
 28843                           
 28844                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 28845  01ADD0  0EE0               	movlw	224
 28846  01ADD2  6E94               	movwf	148,c	;volatile
 28847                           
 28848                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28849  01ADD4  0012               	return		;funcret
 28850  01ADD6                     __end_of_TMR6_Initialize:
 28851                           	opt callstack 0
 28852                           
 28853 ;; *************** function _TMR6_SetInterruptHandler *****************
 28854 ;; Defined at:
 28855 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 28856 ;; Parameters:    Size  Location     Type
 28857 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28858 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 28859 ;; Auto vars:     Size  Location     Type
 28860 ;;		None
 28861 ;; Return value:  Size  Location     Type
 28862 ;;                  1  [STACK] void 
 28863 ;; Registers used:
 28864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28865 ;; Tracked objects:
 28866 ;;		On entry : 3F/39
 28867 ;;		On exit  : 0/0
 28868 ;;		Unchanged: 0/0
 28869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28874 ;;Total ram usage:        0 bytes
 28875 ;; Hardware stack levels used:    1
 28876 ;; Hardware stack levels required when called:   15
 28877 ;; This function calls:
 28878 ;;		Nothing
 28879 ;; This function is called by:
 28880 ;;		_TMR6_Initialize
 28881 ;; This function uses a reentrant model
 28882 ;;
 28883                           
 28884                           	psect	text114
 28885  01AEEE                     __ptext114:
 28886                           	opt callstack 0
 28887  01AEEE                     _TMR6_SetInterruptHandler:
 28888                           	opt callstack 13
 28889                           
 28890                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 28891                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28892                           
 28893                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28894                           ;incstack = 0
 28895  01AEEE  50E1               	movf	fsr1l,w,c
 28896  01AEF0  0FFD               	addlw	-3
 28897  01AEF2  6ED9               	movwf	fsr2l,c
 28898  01AEF4  50E2               	movf	fsr1h,w,c
 28899  01AEF6  6EDA               	movwf	fsr2h,c
 28900  01AEF8  0EFF               	movlw	255
 28901  01AEFA  22DA               	addwfc	fsr2h,f,c
 28902  01AEFC  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 28903  01AF02  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 28904  01AF08  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 28905                           
 28906                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28907  01AF0E  52E5               	movf	postdec1,f,c
 28908  01AF10  52E5               	movf	postdec1,f,c
 28909  01AF12  52E5               	movf	postdec1,f,c
 28910  01AF14  0012               	return		;funcret
 28911  01AF16                     __end_of_TMR6_SetInterruptHandler:
 28912                           	opt callstack 0
 28913                           
 28914 ;; *************** function _TMR5_Initialize *****************
 28915 ;; Defined at:
 28916 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 28917 ;; Parameters:    Size  Location     Type
 28918 ;;		None
 28919 ;; Auto vars:     Size  Location     Type
 28920 ;;		None
 28921 ;; Return value:  Size  Location     Type
 28922 ;;                  1  [STACK] void 
 28923 ;; Registers used:
 28924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 28925 ;; Tracked objects:
 28926 ;;		On entry : 0/39
 28927 ;;		On exit  : 0/0
 28928 ;;		Unchanged: 0/0
 28929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28934 ;;Total ram usage:        0 bytes
 28935 ;; Hardware stack levels used:    1
 28936 ;; Hardware stack levels required when called:   16
 28937 ;; This function calls:
 28938 ;;		_TMR5_SetInterruptHandler
 28939 ;; This function is called by:
 28940 ;;		_SYSTEM_Initialize
 28941 ;; This function uses a reentrant model
 28942 ;;
 28943                           
 28944                           	psect	text115
 28945  01A83A                     __ptext115:
 28946                           	opt callstack 0
 28947  01A83A                     _TMR5_Initialize:
 28948                           	opt callstack 13
 28949                           
 28950                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 28951                           
 28952                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28953                           ;incstack = 0
 28954  01A83A  6A9B               	clrf	155,c	;volatile
 28955                           
 28956                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 28957  01A83C  6A9C               	clrf	156,c	;volatile
 28958                           
 28959                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 28960  01A83E  0E01               	movlw	1
 28961  01A840  6E9D               	movwf	157,c	;volatile
 28962                           
 28963                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 28964  01A842  0E63               	movlw	99
 28965  01A844  6E99               	movwf	153,c	;volatile
 28966                           
 28967                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 28968  01A846  0EC0               	movlw	192
 28969  01A848  6E98               	movwf	152,c	;volatile
 28970                           
 28971                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 28972  01A84A  5098               	movf	152,w,c	;volatile
 28973  01A84C  006F FE64  F001    	movff	16281,btemp	;volatile
 28974  01A852  6A02               	clrf	(btemp+1)^0,c
 28975  01A854  0060  F004  F002   	movff	btemp,btemp+1
 28976  01A85A  6A01               	clrf	btemp^0,c
 28977  01A85C  1001               	iorwf	btemp^0,w,c
 28978  01A85E  6E2B               	movwf	_timer5ReloadVal^0,c	;volatile
 28979  01A860  5002               	movf	(btemp+1)^0,w,c
 28980  01A862  6E2C               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 28981                           
 28982                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 28983  01A864  0139               	movlb	57	; () banked
 28984  01A866  9DA8               	bcf	168,6,b	;volatile
 28985                           
 28986                           ; BSR set to: 57
 28987                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 28988  01A868  8D98               	bsf	152,6,b	;volatile
 28989                           
 28990                           ; BSR set to: 57
 28991                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 28992  01A86A  0E06               	movlw	low _TMR5_DefaultInterruptHandler
 28993  01A86C  6EE6               	movwf	postinc1,c
 28994  01A86E  0EAC               	movlw	high _TMR5_DefaultInterruptHandler
 28995  01A870  6EE6               	movwf	postinc1,c
 28996  01A872  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 28997  01A874  6EE6               	movwf	postinc1,c
 28998  01A876  EC8B  F0D7         	call	_TMR5_SetInterruptHandler	;wreg free
 28999                           
 29000                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 29001  01A87A  0E31               	movlw	49
 29002  01A87C  6E9A               	movwf	154,c	;volatile
 29003                           
 29004                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29005  01A87E  0012               	return		;funcret
 29006  01A880                     __end_of_TMR5_Initialize:
 29007                           	opt callstack 0
 29008                           
 29009 ;; *************** function _TMR5_SetInterruptHandler *****************
 29010 ;; Defined at:
 29011 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 29012 ;; Parameters:    Size  Location     Type
 29013 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29014 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 29015 ;; Auto vars:     Size  Location     Type
 29016 ;;		None
 29017 ;; Return value:  Size  Location     Type
 29018 ;;                  1  [STACK] void 
 29019 ;; Registers used:
 29020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29021 ;; Tracked objects:
 29022 ;;		On entry : 3F/39
 29023 ;;		On exit  : 0/0
 29024 ;;		Unchanged: 0/0
 29025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29030 ;;Total ram usage:        0 bytes
 29031 ;; Hardware stack levels used:    1
 29032 ;; Hardware stack levels required when called:   15
 29033 ;; This function calls:
 29034 ;;		Nothing
 29035 ;; This function is called by:
 29036 ;;		_TMR5_Initialize
 29037 ;; This function uses a reentrant model
 29038 ;;
 29039                           
 29040                           	psect	text116
 29041  01AF16                     __ptext116:
 29042                           	opt callstack 0
 29043  01AF16                     _TMR5_SetInterruptHandler:
 29044                           	opt callstack 13
 29045                           
 29046                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 29047                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29048                           
 29049                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29050                           ;incstack = 0
 29051  01AF16  50E1               	movf	fsr1l,w,c
 29052  01AF18  0FFD               	addlw	-3
 29053  01AF1A  6ED9               	movwf	fsr2l,c
 29054  01AF1C  50E2               	movf	fsr1h,w,c
 29055  01AF1E  6EDA               	movwf	fsr2h,c
 29056  01AF20  0EFF               	movlw	255
 29057  01AF22  22DA               	addwfc	fsr2h,f,c
 29058  01AF24  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 29059  01AF2A  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 29060  01AF30  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 29061                           
 29062                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29063  01AF36  52E5               	movf	postdec1,f,c
 29064  01AF38  52E5               	movf	postdec1,f,c
 29065  01AF3A  52E5               	movf	postdec1,f,c
 29066  01AF3C  0012               	return		;funcret
 29067  01AF3E                     __end_of_TMR5_SetInterruptHandler:
 29068                           	opt callstack 0
 29069                           
 29070 ;; *************** function _TMR3_Initialize *****************
 29071 ;; Defined at:
 29072 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 29073 ;; Parameters:    Size  Location     Type
 29074 ;;		None
 29075 ;; Auto vars:     Size  Location     Type
 29076 ;;		None
 29077 ;; Return value:  Size  Location     Type
 29078 ;;                  1  [STACK] void 
 29079 ;; Registers used:
 29080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29081 ;; Tracked objects:
 29082 ;;		On entry : 0/39
 29083 ;;		On exit  : 0/0
 29084 ;;		Unchanged: 0/0
 29085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29090 ;;Total ram usage:        0 bytes
 29091 ;; Hardware stack levels used:    1
 29092 ;; Hardware stack levels required when called:   16
 29093 ;; This function calls:
 29094 ;;		_TMR3_SetInterruptHandler
 29095 ;; This function is called by:
 29096 ;;		_SYSTEM_Initialize
 29097 ;; This function uses a reentrant model
 29098 ;;
 29099                           
 29100                           	psect	text117
 29101  01A880                     __ptext117:
 29102                           	opt callstack 0
 29103  01A880                     _TMR3_Initialize:
 29104                           	opt callstack 13
 29105                           
 29106                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 29107                           
 29108                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29109                           ;incstack = 0
 29110  01A880  6AA7               	clrf	167,c	;volatile
 29111                           
 29112                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 29113  01A882  6AA8               	clrf	168,c	;volatile
 29114                           
 29115                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 29116  01A884  0E01               	movlw	1
 29117  01A886  6EA9               	movwf	169,c	;volatile
 29118                           
 29119                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 29120  01A888  0E3C               	movlw	60
 29121  01A88A  6EA5               	movwf	165,c	;volatile
 29122                           
 29123                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 29124  01A88C  0EB0               	movlw	176
 29125  01A88E  6EA4               	movwf	164,c	;volatile
 29126                           
 29127                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 29128  01A890  50A4               	movf	164,w,c	;volatile
 29129  01A892  006F FE94  F001    	movff	16293,btemp	;volatile
 29130  01A898  6A02               	clrf	(btemp+1)^0,c
 29131  01A89A  0060  F004  F002   	movff	btemp,btemp+1
 29132  01A8A0  6A01               	clrf	btemp^0,c
 29133  01A8A2  1001               	iorwf	btemp^0,w,c
 29134  01A8A4  6E27               	movwf	_timer3ReloadVal^0,c	;volatile
 29135  01A8A6  5002               	movf	(btemp+1)^0,w,c
 29136  01A8A8  6E28               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 29137                           
 29138                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 29139  01A8AA  0139               	movlb	57	; () banked
 29140  01A8AC  9DA6               	bcf	166,6,b	;volatile
 29141                           
 29142                           ; BSR set to: 57
 29143                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 29144  01A8AE  8D96               	bsf	150,6,b	;volatile
 29145                           
 29146                           ; BSR set to: 57
 29147                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 29148  01A8B0  0E48               	movlw	low _TMR3_DefaultInterruptHandler
 29149  01A8B2  6EE6               	movwf	postinc1,c
 29150  01A8B4  0EB4               	movlw	high _TMR3_DefaultInterruptHandler
 29151  01A8B6  6EE6               	movwf	postinc1,c
 29152  01A8B8  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 29153  01A8BA  6EE6               	movwf	postinc1,c
 29154  01A8BC  EC9F  F0D7         	call	_TMR3_SetInterruptHandler	;wreg free
 29155                           
 29156                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 29157  01A8C0  0E31               	movlw	49
 29158  01A8C2  6EA6               	movwf	166,c	;volatile
 29159                           
 29160                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29161  01A8C4  0012               	return		;funcret
 29162  01A8C6                     __end_of_TMR3_Initialize:
 29163                           	opt callstack 0
 29164                           
 29165 ;; *************** function _TMR3_SetInterruptHandler *****************
 29166 ;; Defined at:
 29167 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 29168 ;; Parameters:    Size  Location     Type
 29169 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29170 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 29171 ;; Auto vars:     Size  Location     Type
 29172 ;;		None
 29173 ;; Return value:  Size  Location     Type
 29174 ;;                  1  [STACK] void 
 29175 ;; Registers used:
 29176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29177 ;; Tracked objects:
 29178 ;;		On entry : 0/1
 29179 ;;		On exit  : 0/0
 29180 ;;		Unchanged: 0/0
 29181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29186 ;;Total ram usage:        0 bytes
 29187 ;; Hardware stack levels used:    1
 29188 ;; Hardware stack levels required when called:   15
 29189 ;; This function calls:
 29190 ;;		Nothing
 29191 ;; This function is called by:
 29192 ;;		_TMR3_Initialize
 29193 ;;		_init_bsoc
 29194 ;; This function uses a reentrant model
 29195 ;;
 29196                           
 29197                           	psect	text118
 29198  01AF3E                     __ptext118:
 29199                           	opt callstack 0
 29200  01AF3E                     _TMR3_SetInterruptHandler:
 29201                           	opt callstack 14
 29202                           
 29203                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 29204                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29205                           
 29206                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29207                           ;incstack = 0
 29208  01AF3E  50E1               	movf	fsr1l,w,c
 29209  01AF40  0FFD               	addlw	-3
 29210  01AF42  6ED9               	movwf	fsr2l,c
 29211  01AF44  50E2               	movf	fsr1h,w,c
 29212  01AF46  6EDA               	movwf	fsr2h,c
 29213  01AF48  0EFF               	movlw	255
 29214  01AF4A  22DA               	addwfc	fsr2h,f,c
 29215  01AF4C  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 29216  01AF52  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 29217  01AF58  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 29218                           
 29219                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29220  01AF5E  52E5               	movf	postdec1,f,c
 29221  01AF60  52E5               	movf	postdec1,f,c
 29222  01AF62  52E5               	movf	postdec1,f,c
 29223  01AF64  0012               	return		;funcret
 29224  01AF66                     __end_of_TMR3_SetInterruptHandler:
 29225                           	opt callstack 0
 29226                           
 29227 ;; *************** function _TMR2_Initialize *****************
 29228 ;; Defined at:
 29229 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 29230 ;; Parameters:    Size  Location     Type
 29231 ;;		None
 29232 ;; Auto vars:     Size  Location     Type
 29233 ;;		None
 29234 ;; Return value:  Size  Location     Type
 29235 ;;                  1  [STACK] void 
 29236 ;; Registers used:
 29237 ;;		wreg, status,2
 29238 ;; Tracked objects:
 29239 ;;		On entry : 3F/3F
 29240 ;;		On exit  : 3F/39
 29241 ;;		Unchanged: 0/0
 29242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29247 ;;Total ram usage:        0 bytes
 29248 ;; Hardware stack levels used:    1
 29249 ;; Hardware stack levels required when called:   15
 29250 ;; This function calls:
 29251 ;;		Nothing
 29252 ;; This function is called by:
 29253 ;;		_SYSTEM_Initialize
 29254 ;; This function uses a reentrant model
 29255 ;;
 29256                           
 29257                           	psect	text119
 29258  01B2DA                     __ptext119:
 29259                           	opt callstack 0
 29260  01B2DA                     _TMR2_Initialize:
 29261                           	opt callstack 14
 29262                           
 29263                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 29264                           
 29265                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29266                           ;incstack = 0
 29267  01B2DA  0E01               	movlw	1
 29268  01B2DC  6EAE               	movwf	174,c	;volatile
 29269                           
 29270                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 29271  01B2DE  6AAD               	clrf	173,c	;volatile
 29272                           
 29273                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 29274  01B2E0  6AAF               	clrf	175,c	;volatile
 29275                           
 29276                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 29277  01B2E2  0E63               	movlw	99
 29278  01B2E4  6EAB               	movwf	171,c	;volatile
 29279                           
 29280                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 29281  01B2E6  6AAA               	clrf	170,c	;volatile
 29282                           
 29283                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 29284  01B2E8  0139               	movlb	57	; () banked
 29285  01B2EA  95A4               	bcf	164,2,b	;volatile
 29286                           
 29287                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 29288  01B2EC  0EC0               	movlw	192
 29289  01B2EE  6EAC               	movwf	172,c	;volatile
 29290                           
 29291                           ; BSR set to: 57
 29292                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29293  01B2F0  0012               	return		;funcret
 29294  01B2F2                     __end_of_TMR2_Initialize:
 29295                           	opt callstack 0
 29296                           
 29297 ;; *************** function _SPI1_Initialize *****************
 29298 ;; Defined at:
 29299 ;;		line 64 in file "mcc_generated_files/spi1.c"
 29300 ;; Parameters:    Size  Location     Type
 29301 ;;		None
 29302 ;; Auto vars:     Size  Location     Type
 29303 ;;		None
 29304 ;; Return value:  Size  Location     Type
 29305 ;;                  1  [STACK] void 
 29306 ;; Registers used:
 29307 ;;		wreg, status,2
 29308 ;; Tracked objects:
 29309 ;;		On entry : 3F/39
 29310 ;;		On exit  : 3F/3D
 29311 ;;		Unchanged: 0/0
 29312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29317 ;;Total ram usage:        0 bytes
 29318 ;; Hardware stack levels used:    1
 29319 ;; Hardware stack levels required when called:   15
 29320 ;; This function calls:
 29321 ;;		Nothing
 29322 ;; This function is called by:
 29323 ;;		_SYSTEM_Initialize
 29324 ;; This function uses a reentrant model
 29325 ;;
 29326                           
 29327                           	psect	text120
 29328  01B2F2                     __ptext120:
 29329                           	opt callstack 0
 29330  01B2F2                     _SPI1_Initialize:
 29331                           	opt callstack 14
 29332                           
 29333                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 29334                           
 29335                           ; BSR set to: 57
 29336                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29337                           ;incstack = 0
 29338  01B2F2  0E40               	movlw	64
 29339  01B2F4  013D               	movlb	61	; () banked
 29340  01B2F6  6F15               	movwf	21,b	;volatile
 29341                           
 29342                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 29343  01B2F8  0E03               	movlw	3
 29344  01B2FA  6F16               	movwf	22,b	;volatile
 29345                           
 29346                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 29347  01B2FC  0E4F               	movlw	79
 29348  01B2FE  6F19               	movwf	25,b	;volatile
 29349                           
 29350                           ; BSR set to: 61
 29351                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 29352  01B300  6B1C               	clrf	28,b	;volatile
 29353                           
 29354                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 29355  01B302  0E83               	movlw	131
 29356  01B304  6F14               	movwf	20,b	;volatile
 29357                           
 29358                           ; BSR set to: 61
 29359                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29360  01B306  0012               	return		;funcret
 29361  01B308                     __end_of_SPI1_Initialize:
 29362                           	opt callstack 0
 29363                           
 29364 ;; *************** function _PWM8_Initialize *****************
 29365 ;; Defined at:
 29366 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 29367 ;; Parameters:    Size  Location     Type
 29368 ;;		None
 29369 ;; Auto vars:     Size  Location     Type
 29370 ;;		None
 29371 ;; Return value:  Size  Location     Type
 29372 ;;                  1  [STACK] void 
 29373 ;; Registers used:
 29374 ;;		wreg, status,2
 29375 ;; Tracked objects:
 29376 ;;		On entry : 0/3E
 29377 ;;		On exit  : 3F/3F
 29378 ;;		Unchanged: 0/0
 29379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29384 ;;Total ram usage:        0 bytes
 29385 ;; Hardware stack levels used:    1
 29386 ;; Hardware stack levels required when called:   15
 29387 ;; This function calls:
 29388 ;;		Nothing
 29389 ;; This function is called by:
 29390 ;;		_SYSTEM_Initialize
 29391 ;; This function uses a reentrant model
 29392 ;;
 29393                           
 29394                           	psect	text121
 29395  01B308                     __ptext121:
 29396                           	opt callstack 0
 29397  01B308                     _PWM8_Initialize:
 29398                           	opt callstack 14
 29399                           
 29400                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 29401                           
 29402                           ; BSR set to: 61
 29403                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29404                           ;incstack = 0
 29405  01B308  0E80               	movlw	128
 29406  01B30A  6E62               	movwf	98,c	;volatile
 29407                           
 29408                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 29409  01B30C  6A61               	clrf	97,c	;volatile
 29410                           
 29411                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 29412  01B30E  0E40               	movlw	64
 29413  01B310  6E60               	movwf	96,c	;volatile
 29414                           
 29415                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 29416  01B312  013F               	movlb	63	; () banked
 29417  01B314  515F               	movf	95,w,b	;volatile
 29418  01B316  0B3F               	andlw	-193
 29419  01B318  0940               	iorlw	64
 29420  01B31A  6F5F               	movwf	95,b	;volatile
 29421                           
 29422                           ; BSR set to: 63
 29423                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29424  01B31C  0012               	return		;funcret
 29425  01B31E                     __end_of_PWM8_Initialize:
 29426                           	opt callstack 0
 29427                           
 29428 ;; *************** function _PMD_Initialize *****************
 29429 ;; Defined at:
 29430 ;;		line 90 in file "mcc_generated_files/mcc.c"
 29431 ;; Parameters:    Size  Location     Type
 29432 ;;		None
 29433 ;; Auto vars:     Size  Location     Type
 29434 ;;		None
 29435 ;; Return value:  Size  Location     Type
 29436 ;;                  1  [STACK] void 
 29437 ;; Registers used:
 29438 ;;		None
 29439 ;; Tracked objects:
 29440 ;;		On entry : 3F/39
 29441 ;;		On exit  : 3F/39
 29442 ;;		Unchanged: 0/0
 29443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29448 ;;Total ram usage:        0 bytes
 29449 ;; Hardware stack levels used:    1
 29450 ;; Hardware stack levels required when called:   15
 29451 ;; This function calls:
 29452 ;;		Nothing
 29453 ;; This function is called by:
 29454 ;;		_SYSTEM_Initialize
 29455 ;; This function uses a reentrant model
 29456 ;;
 29457                           
 29458                           	psect	text122
 29459  01B334                     __ptext122:
 29460                           	opt callstack 0
 29461  01B334                     _PMD_Initialize:
 29462                           	opt callstack 14
 29463                           
 29464                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 29465                           
 29466                           ; BSR set to: 63
 29467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29468                           ;incstack = 0
 29469  01B334  0139               	movlb	57	; () banked
 29470  01B336  6BC0               	clrf	192,b	;volatile
 29471                           
 29472                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 29473  01B338  6BC1               	clrf	193,b	;volatile
 29474                           
 29475                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 29476  01B33A  6BC2               	clrf	194,b	;volatile
 29477                           
 29478                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 29479  01B33C  6BC3               	clrf	195,b	;volatile
 29480                           
 29481                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 29482  01B33E  6BC4               	clrf	196,b	;volatile
 29483                           
 29484                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 29485  01B340  6BC5               	clrf	197,b	;volatile
 29486                           
 29487                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 29488  01B342  6BC6               	clrf	198,b	;volatile
 29489                           
 29490                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 29491  01B344  6BC7               	clrf	199,b	;volatile
 29492                           
 29493                           ; BSR set to: 57
 29494                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29495  01B346  0012               	return		;funcret
 29496  01B348                     __end_of_PMD_Initialize:
 29497                           	opt callstack 0
 29498                           
 29499 ;; *************** function _PIN_MANAGER_Initialize *****************
 29500 ;; Defined at:
 29501 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 29502 ;; Parameters:    Size  Location     Type
 29503 ;;		None
 29504 ;; Auto vars:     Size  Location     Type
 29505 ;;		None
 29506 ;; Return value:  Size  Location     Type
 29507 ;;                  1  [STACK] void 
 29508 ;; Registers used:
 29509 ;;		wreg, status,2
 29510 ;; Tracked objects:
 29511 ;;		On entry : 3F/39
 29512 ;;		On exit  : 3F/3A
 29513 ;;		Unchanged: 0/0
 29514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29519 ;;Total ram usage:        0 bytes
 29520 ;; Hardware stack levels used:    1
 29521 ;; Hardware stack levels required when called:   15
 29522 ;; This function calls:
 29523 ;;		Nothing
 29524 ;; This function is called by:
 29525 ;;		_SYSTEM_Initialize
 29526 ;; This function uses a reentrant model
 29527 ;;
 29528                           
 29529                           	psect	text123
 29530  019E28                     __ptext123:
 29531                           	opt callstack 0
 29532  019E28                     _PIN_MANAGER_Initialize:
 29533                           	opt callstack 14
 29534                           
 29535                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 29536                           
 29537                           ; BSR set to: 57
 29538                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29539                           ;incstack = 0
 29540  019E28  0E07               	movlw	7
 29541  019E2A  6EBE               	movwf	190,c	;volatile
 29542                           
 29543                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 29544  019E2C  0E80               	movlw	128
 29545  019E2E  6EBD               	movwf	189,c	;volatile
 29546                           
 29547                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 29548  019E30  6ABA               	clrf	186,c	;volatile
 29549                           
 29550                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 29551  019E32  6ABF               	clrf	191,c	;volatile
 29552                           
 29553                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 29554  019E34  6ABB               	clrf	187,c	;volatile
 29555                           
 29556                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 29557  019E36  0E07               	movlw	7
 29558  019E38  6EBC               	movwf	188,c	;volatile
 29559                           
 29560                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 29561  019E3A  6AC6               	clrf	198,c	;volatile
 29562                           
 29563                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 29564  019E3C  0E0F               	movlw	15
 29565  019E3E  6EC7               	movwf	199,c	;volatile
 29566                           
 29567                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 29568  019E40  68C2               	setf	194,c	;volatile
 29569                           
 29570                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 29571  019E42  0EBF               	movlw	191
 29572  019E44  6EC3               	movwf	195,c	;volatile
 29573                           
 29574                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 29575  019E46  0E90               	movlw	144
 29576  019E48  6EC4               	movwf	196,c	;volatile
 29577                           
 29578                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 29579  019E4A  0E0C               	movlw	12
 29580  019E4C  6EC5               	movwf	197,c	;volatile
 29581                           
 29582                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 29583  019E4E  013A               	movlb	58	; () banked
 29584  019E50  6B70               	clrf	112,b	;volatile
 29585                           
 29586                           ; BSR set to: 58
 29587                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 29588  019E52  6B60               	clrf	96,b	;volatile
 29589                           
 29590                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 29591  019E54  0E3C               	movlw	60
 29592  019E56  6F50               	movwf	80,b	;volatile
 29593                           
 29594                           ; BSR set to: 58
 29595                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 29596  019E58  6B80               	clrf	128,b	;volatile
 29597                           
 29598                           ; BSR set to: 58
 29599                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 29600  019E5A  6B90               	clrf	144,b	;volatile
 29601                           
 29602                           ; BSR set to: 58
 29603                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 29604  019E5C  6940               	setf	64,b	;volatile
 29605                           
 29606                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 29607  019E5E  0E0C               	movlw	12
 29608  019E60  6F71               	movwf	113,b	;volatile
 29609                           
 29610                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 29611  019E62  0E0F               	movlw	15
 29612  019E64  6F91               	movwf	145,b	;volatile
 29613                           
 29614                           ; BSR set to: 58
 29615                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 29616  019E66  6B81               	clrf	129,b	;volatile
 29617                           
 29618                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 29619  019E68  0E83               	movlw	131
 29620  019E6A  6F51               	movwf	81,b	;volatile
 29621                           
 29622                           ; BSR set to: 58
 29623                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 29624  019E6C  6B41               	clrf	65,b	;volatile
 29625                           
 29626                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 29627  019E6E  0E97               	movlw	151
 29628  019E70  6F61               	movwf	97,b	;volatile
 29629                           
 29630                           ; BSR set to: 58
 29631                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 29632  019E72  6B82               	clrf	130,b	;volatile
 29633                           
 29634                           ; BSR set to: 58
 29635                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 29636  019E74  6B92               	clrf	146,b	;volatile
 29637                           
 29638                           ; BSR set to: 58
 29639                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 29640  019E76  6B42               	clrf	66,b	;volatile
 29641                           
 29642                           ; BSR set to: 58
 29643                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 29644  019E78  6B52               	clrf	82,b	;volatile
 29645                           
 29646                           ; BSR set to: 58
 29647                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 29648  019E7A  6B62               	clrf	98,b	;volatile
 29649                           
 29650                           ; BSR set to: 58
 29651                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 29652  019E7C  6B72               	clrf	114,b	;volatile
 29653                           
 29654                           ; BSR set to: 58
 29655                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 29656  019E7E  6943               	setf	67,b	;volatile
 29657                           
 29658                           ; BSR set to: 58
 29659                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 29660  019E80  6953               	setf	83,b	;volatile
 29661                           
 29662                           ; BSR set to: 58
 29663                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 29664  019E82  6963               	setf	99,b	;volatile
 29665                           
 29666                           ; BSR set to: 58
 29667                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 29668  019E84  6973               	setf	115,b	;volatile
 29669                           
 29670                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 29671  019E86  0E07               	movlw	7
 29672  019E88  6F83               	movwf	131,b	;volatile
 29673                           
 29674                           ; BSR set to: 58
 29675                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 29676  019E8A  6993               	setf	147,b	;volatile
 29677                           
 29678                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 29679  019E8C  0E0F               	movlw	15
 29680  019E8E  6FE8               	movwf	232,b	;volatile
 29681                           
 29682                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 29683  019E90  0E13               	movlw	19
 29684  019E92  6FDE               	movwf	222,b	;volatile
 29685                           
 29686                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 29687  019E94  0E16               	movlw	22
 29688  019E96  6F0E               	movwf	14,b	;volatile
 29689                           
 29690                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 29691  019E98  0E1E               	movlw	30
 29692  019E9A  6F13               	movwf	19,b	;volatile
 29693                           
 29694                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 29695  019E9C  0E08               	movlw	8
 29696  019E9E  6FC0               	movwf	192,b	;volatile
 29697                           
 29698                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 29699  019EA0  0E10               	movlw	16
 29700  019EA2  6F19               	movwf	25,b	;volatile
 29701                           
 29702                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 29703  019EA4  0E09               	movlw	9
 29704  019EA6  6FC1               	movwf	193,b	;volatile
 29705                           
 29706                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 29707  019EA8  0E1F               	movlw	31
 29708  019EAA  6F15               	movwf	21,b	;volatile
 29709                           
 29710                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 29711  019EAC  0E13               	movlw	19
 29712  019EAE  6F16               	movwf	22,b	;volatile
 29713                           
 29714                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 29715  019EB0  0E17               	movlw	23
 29716  019EB2  6FE5               	movwf	229,b	;volatile
 29717                           
 29718                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 29719  019EB4  0E14               	movlw	20
 29720  019EB6  6FDF               	movwf	223,b	;volatile
 29721                           
 29722                           ; BSR set to: 58
 29723                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 29724  019EB8  0012               	return		;funcret
 29725  019EBA                     __end_of_PIN_MANAGER_Initialize:
 29726                           	opt callstack 0
 29727                           
 29728 ;; *************** function _OSCILLATOR_Initialize *****************
 29729 ;; Defined at:
 29730 ;;		line 72 in file "mcc_generated_files/mcc.c"
 29731 ;; Parameters:    Size  Location     Type
 29732 ;;		None
 29733 ;; Auto vars:     Size  Location     Type
 29734 ;;		None
 29735 ;; Return value:  Size  Location     Type
 29736 ;;                  1  [STACK] void 
 29737 ;; Registers used:
 29738 ;;		wreg, status,2
 29739 ;; Tracked objects:
 29740 ;;		On entry : 3F/3A
 29741 ;;		On exit  : 3F/39
 29742 ;;		Unchanged: 0/0
 29743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29748 ;;Total ram usage:        0 bytes
 29749 ;; Hardware stack levels used:    1
 29750 ;; Hardware stack levels required when called:   15
 29751 ;; This function calls:
 29752 ;;		Nothing
 29753 ;; This function is called by:
 29754 ;;		_SYSTEM_Initialize
 29755 ;; This function uses a reentrant model
 29756 ;;
 29757                           
 29758                           	psect	text124
 29759  01B31E                     __ptext124:
 29760                           	opt callstack 0
 29761  01B31E                     _OSCILLATOR_Initialize:
 29762                           	opt callstack 14
 29763                           
 29764                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 29765                           
 29766                           ; BSR set to: 58
 29767                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29768                           ;incstack = 0
 29769  01B31E  0E20               	movlw	32
 29770  01B320  0139               	movlb	57	; () banked
 29771  01B322  6FD9               	movwf	217,b	;volatile
 29772                           
 29773                           ; BSR set to: 57
 29774                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 29775  01B324  6BDB               	clrf	219,b	;volatile
 29776                           
 29777                           ; BSR set to: 57
 29778                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 29779  01B326  6BDD               	clrf	221,b	;volatile
 29780                           
 29781                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 29782  01B328  0E02               	movlw	2
 29783  01B32A  6FDF               	movwf	223,b	;volatile
 29784                           
 29785                           ; BSR set to: 57
 29786                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 29787  01B32C  6BDE               	clrf	222,b	;volatile
 29788  01B32E                     l169:
 29789                           
 29790                           ; BSR set to: 57
 29791                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 29792  01B32E  B1DC               	btfsc	220,0,b	;volatile
 29793  01B330  0012               	return	
 29794  01B332  D7FD               	goto	l169
 29795  01B334                     __end_of_OSCILLATOR_Initialize:
 29796                           	opt callstack 0
 29797                           
 29798 ;; *************** function _INTERRUPT_Initialize *****************
 29799 ;; Defined at:
 29800 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 29801 ;; Parameters:    Size  Location     Type
 29802 ;;		None
 29803 ;; Auto vars:     Size  Location     Type
 29804 ;;  state           1  [STACK] _Bool 
 29805 ;; Return value:  Size  Location     Type
 29806 ;;                  1  [STACK] void 
 29807 ;; Registers used:
 29808 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 29809 ;; Tracked objects:
 29810 ;;		On entry : 0/0
 29811 ;;		On exit  : 3F/39
 29812 ;;		Unchanged: 0/0
 29813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29818 ;;Total ram usage:        0 bytes
 29819 ;; Hardware stack levels used:    1
 29820 ;; Hardware stack levels required when called:   15
 29821 ;; This function calls:
 29822 ;;		Nothing
 29823 ;; This function is called by:
 29824 ;;		_SYSTEM_Initialize
 29825 ;; This function uses a reentrant model
 29826 ;;
 29827                           
 29828                           	psect	text125
 29829  01A296                     __ptext125:
 29830                           	opt callstack 0
 29831  01A296                     _INTERRUPT_Initialize:
 29832                           	opt callstack 0
 29833                           
 29834                           ; BSR set to: 57
 29835                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29836  01A296  52E6               	movf	postinc1,f,c
 29837                           
 29838                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 29839                           
 29840                           ;incstack = 0
 29841  01A298  8AD2               	bsf	210,5,c	;volatile
 29842                           
 29843                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 29844  01A29A  AED2               	btfss	16338,7,c	;volatile
 29845  01A29C  D003               	goto	u8930
 29846  01A29E  6A0C               	clrf	(btemp+11)^0,c
 29847  01A2A0  2A0C               	incf	(btemp+11)^0,f,c
 29848  01A2A2  D001               	goto	u8948
 29849  01A2A4                     u8930:
 29850  01A2A4  6A0C               	clrf	(btemp+11)^0,c
 29851  01A2A6                     u8948:
 29852                           
 29853                           ;stkvar	_state @ sp[(-1)+0]
 29854  01A2A6  0EFF               	movlw	-1
 29855  01A2A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 29856                           
 29857                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 29858  01A2AE  9ED2               	bcf	16338,7,c	;volatile
 29859                           
 29860                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 29861  01A2B0  0E55               	movlw	85
 29862  01A2B2  6ED4               	movwf	212,c	;volatile
 29863                           
 29864                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 29865  01A2B4  0EAA               	movlw	170
 29866  01A2B6  6ED4               	movwf	212,c	;volatile
 29867                           
 29868                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 29869  01A2B8  90D4               	bcf	212,0,c	;volatile
 29870                           
 29871                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 29872  01A2BA  0138               	movlb	56	; () banked
 29873  01A2BC  6B9F               	clrf	159,b	;volatile
 29874                           
 29875                           ; BSR set to: 56
 29876                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 29877  01A2BE  6B9E               	clrf	158,b	;volatile
 29878                           
 29879                           ; BSR set to: 56
 29880                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 29881  01A2C0  0E08               	movlw	8
 29882  01A2C2  6F9D               	movwf	157,b	;volatile
 29883                           
 29884                           ; BSR set to: 56
 29885                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 29886  01A2C4  0E55               	movlw	85
 29887  01A2C6  6ED4               	movwf	212,c	;volatile
 29888                           
 29889                           ; BSR set to: 56
 29890                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 29891  01A2C8  0EAA               	movlw	170
 29892  01A2CA  6ED4               	movwf	212,c	;volatile
 29893                           
 29894                           ; BSR set to: 56
 29895                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 29896  01A2CC  80D4               	bsf	212,0,c	;volatile
 29897                           
 29898                           ; BSR set to: 56
 29899                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 29900                           ;stkvar	_state @ sp[(-1)+0]
 29901  01A2CE  0EFF               	movlw	-1
 29902  01A2D0  B0E3               	btfsc	plusw1,0,c
 29903  01A2D2  D002               	bra	u8955
 29904  01A2D4  9ED2               	bcf	16338,7,c	;volatile
 29905  01A2D6  D001               	bra	u8956
 29906  01A2D8                     u8955:
 29907  01A2D8  8ED2               	bsf	16338,7,c	;volatile
 29908  01A2DA                     u8956:
 29909                           
 29910                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 29911  01A2DA  0139               	movlb	57	; () banked
 29912  01A2DC  8782               	bsf	130,3,b	;volatile
 29913                           
 29914                           ; BSR set to: 57
 29915                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 29916  01A2DE  8382               	bsf	130,1,b	;volatile
 29917                           
 29918                           ; BSR set to: 57
 29919                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 29920  01A2E0  8182               	bsf	130,0,b	;volatile
 29921                           
 29922                           ; BSR set to: 57
 29923                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 29924  01A2E2  8582               	bsf	130,2,b	;volatile
 29925                           
 29926                           ; BSR set to: 57
 29927                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 29928  01A2E4  8786               	bsf	134,3,b	;volatile
 29929                           
 29930                           ; BSR set to: 57
 29931                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 29932  01A2E6  8586               	bsf	134,2,b	;volatile
 29933                           
 29934                           ; BSR set to: 57
 29935                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 29936  01A2E8  8783               	bsf	131,3,b	;volatile
 29937                           
 29938                           ; BSR set to: 57
 29939                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 29940  01A2EA  8181               	bsf	129,0,b	;volatile
 29941                           
 29942                           ; BSR set to: 57
 29943                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 29944  01A2EC  9185               	bcf	133,0,b	;volatile
 29945                           
 29946                           ; BSR set to: 57
 29947                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 29948  01A2EE  8189               	bsf	137,0,b	;volatile
 29949                           
 29950                           ; BSR set to: 57
 29951                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 29952  01A2F0  9D88               	bcf	136,6,b	;volatile
 29953                           
 29954                           ; BSR set to: 57
 29955                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 29956  01A2F2  9D86               	bcf	134,6,b	;volatile
 29957                           
 29958                           ; BSR set to: 57
 29959                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 29960  01A2F4  8581               	bsf	129,2,b	;volatile
 29961                           
 29962                           ; BSR set to: 57
 29963                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 29964  01A2F6  8781               	bsf	129,3,b	;volatile
 29965                           
 29966                           ; BSR set to: 57
 29967                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 29968  01A2F8  52E5               	movf	postdec1,f,c
 29969  01A2FA  0012               	return		;funcret
 29970  01A2FC                     __end_of_INTERRUPT_Initialize:
 29971                           	opt callstack 0
 29972                           
 29973 ;; *************** function _FVR_Initialize *****************
 29974 ;; Defined at:
 29975 ;;		line 58 in file "mcc_generated_files/fvr.c"
 29976 ;; Parameters:    Size  Location     Type
 29977 ;;		None
 29978 ;; Auto vars:     Size  Location     Type
 29979 ;;		None
 29980 ;; Return value:  Size  Location     Type
 29981 ;;                  1  [STACK] void 
 29982 ;; Registers used:
 29983 ;;		wreg, status,2
 29984 ;; Tracked objects:
 29985 ;;		On entry : 3F/39
 29986 ;;		On exit  : 3F/3E
 29987 ;;		Unchanged: 0/0
 29988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29993 ;;Total ram usage:        0 bytes
 29994 ;; Hardware stack levels used:    1
 29995 ;; Hardware stack levels required when called:   15
 29996 ;; This function calls:
 29997 ;;		Nothing
 29998 ;; This function is called by:
 29999 ;;		_SYSTEM_Initialize
 30000 ;; This function uses a reentrant model
 30001 ;;
 30002                           
 30003                           	psect	text126
 30004  01B41E                     __ptext126:
 30005                           	opt callstack 0
 30006  01B41E                     _FVR_Initialize:
 30007                           	opt callstack 14
 30008                           
 30009                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 30010                           
 30011                           ; BSR set to: 57
 30012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30013                           ;incstack = 0
 30014  01B41E  0EAF               	movlw	175
 30015  01B420  013E               	movlb	62	; () banked
 30016  01B422  6FC1               	movwf	193,b	;volatile
 30017                           
 30018                           ; BSR set to: 62
 30019                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30020  01B424  0012               	return		;funcret
 30021  01B426                     __end_of_FVR_Initialize:
 30022                           	opt callstack 0
 30023                           
 30024 ;; *************** function _EXT_INT_Initialize *****************
 30025 ;; Defined at:
 30026 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 30027 ;; Parameters:    Size  Location     Type
 30028 ;;		None
 30029 ;; Auto vars:     Size  Location     Type
 30030 ;;		None
 30031 ;; Return value:  Size  Location     Type
 30032 ;;                  1  [STACK] void 
 30033 ;; Registers used:
 30034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30035 ;; Tracked objects:
 30036 ;;		On entry : 3F/39
 30037 ;;		On exit  : 3F/39
 30038 ;;		Unchanged: 0/0
 30039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30044 ;;Total ram usage:        0 bytes
 30045 ;; Hardware stack levels used:    1
 30046 ;; Hardware stack levels required when called:   16
 30047 ;; This function calls:
 30048 ;;		_INT0_SetInterruptHandler
 30049 ;;		_INT1_SetInterruptHandler
 30050 ;; This function is called by:
 30051 ;;		_SYSTEM_Initialize
 30052 ;; This function uses a reentrant model
 30053 ;;
 30054                           
 30055                           	psect	text127
 30056  01ABD2                     __ptext127:
 30057                           	opt callstack 0
 30058  01ABD2                     _EXT_INT_Initialize:
 30059                           	opt callstack 13
 30060                           
 30061                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 30062                           
 30063                           ; BSR set to: 62
 30064                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30065                           ;incstack = 0
 30066  01ABD2  0139               	movlb	57	; () banked
 30067  01ABD4  91A1               	bcf	161,0,b	;volatile
 30068                           
 30069                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 30070  01ABD6  90D2               	bcf	210,0,c	;volatile
 30071                           
 30072                           ; BSR set to: 57
 30073                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 30074  01ABD8  0E4A               	movlw	low _INT0_DefaultInterruptHandler
 30075  01ABDA  6EE6               	movwf	postinc1,c
 30076  01ABDC  0EB4               	movlw	high _INT0_DefaultInterruptHandler
 30077  01ABDE  6EE6               	movwf	postinc1,c
 30078  01ABE0  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 30079  01ABE2  6EE6               	movwf	postinc1,c
 30080  01ABE4  ECC7  F0D7         	call	_INT0_SetInterruptHandler	;wreg free
 30081                           
 30082                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 30083  01ABE8  0139               	movlb	57	; () banked
 30084  01ABEA  8191               	bsf	145,0,b	;volatile
 30085                           
 30086                           ; BSR set to: 57
 30087                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 30088  01ABEC  91A5               	bcf	165,0,b	;volatile
 30089                           
 30090                           ; BSR set to: 57
 30091                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 30092  01ABEE  92D2               	bcf	210,1,c	;volatile
 30093                           
 30094                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 30095  01ABF0  0E46               	movlw	low _INT1_DefaultInterruptHandler
 30096  01ABF2  6EE6               	movwf	postinc1,c
 30097  01ABF4  0EB4               	movlw	high _INT1_DefaultInterruptHandler
 30098  01ABF6  6EE6               	movwf	postinc1,c
 30099  01ABF8  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 30100  01ABFA  6EE6               	movwf	postinc1,c
 30101  01ABFC  ECB3  F0D7         	call	_INT1_SetInterruptHandler	;wreg free
 30102                           
 30103                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 30104  01AC00  0139               	movlb	57	; () banked
 30105  01AC02  8195               	bsf	149,0,b	;volatile
 30106                           
 30107                           ; BSR set to: 57
 30108                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30109  01AC04  0012               	return		;funcret
 30110  01AC06                     __end_of_EXT_INT_Initialize:
 30111                           	opt callstack 0
 30112                           
 30113 ;; *************** function _INT1_SetInterruptHandler *****************
 30114 ;; Defined at:
 30115 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 30116 ;; Parameters:    Size  Location     Type
 30117 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30118 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 30119 ;; Auto vars:     Size  Location     Type
 30120 ;;		None
 30121 ;; Return value:  Size  Location     Type
 30122 ;;                  1  [STACK] void 
 30123 ;; Registers used:
 30124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30125 ;; Tracked objects:
 30126 ;;		On entry : 3F/39
 30127 ;;		On exit  : 0/0
 30128 ;;		Unchanged: 0/0
 30129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30134 ;;Total ram usage:        0 bytes
 30135 ;; Hardware stack levels used:    1
 30136 ;; Hardware stack levels required when called:   15
 30137 ;; This function calls:
 30138 ;;		Nothing
 30139 ;; This function is called by:
 30140 ;;		_EXT_INT_Initialize
 30141 ;;		_start_switch_handler
 30142 ;; This function uses a reentrant model
 30143 ;;
 30144                           
 30145                           	psect	text128
 30146  01AF66                     __ptext128:
 30147                           	opt callstack 0
 30148  01AF66                     _INT1_SetInterruptHandler:
 30149                           	opt callstack 14
 30150                           
 30151                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 30152                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30153                           
 30154                           ; BSR set to: 57
 30155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30156                           ;incstack = 0
 30157  01AF66  50E1               	movf	fsr1l,w,c
 30158  01AF68  0FFD               	addlw	-3
 30159  01AF6A  6ED9               	movwf	fsr2l,c
 30160  01AF6C  50E2               	movf	fsr1h,w,c
 30161  01AF6E  6EDA               	movwf	fsr2h,c
 30162  01AF70  0EFF               	movlw	255
 30163  01AF72  22DA               	addwfc	fsr2h,f,c
 30164  01AF74  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 30165  01AF7A  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 30166  01AF80  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 30167                           
 30168                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30169  01AF86  52E5               	movf	postdec1,f,c
 30170  01AF88  52E5               	movf	postdec1,f,c
 30171  01AF8A  52E5               	movf	postdec1,f,c
 30172  01AF8C  0012               	return		;funcret
 30173  01AF8E                     __end_of_INT1_SetInterruptHandler:
 30174                           	opt callstack 0
 30175                           
 30176 ;; *************** function _INT0_SetInterruptHandler *****************
 30177 ;; Defined at:
 30178 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 30179 ;; Parameters:    Size  Location     Type
 30180 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30181 ;;		 -> INT0_DefaultInterruptHandler(1), 
 30182 ;; Auto vars:     Size  Location     Type
 30183 ;;		None
 30184 ;; Return value:  Size  Location     Type
 30185 ;;                  1  [STACK] void 
 30186 ;; Registers used:
 30187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30188 ;; Tracked objects:
 30189 ;;		On entry : 3F/39
 30190 ;;		On exit  : 0/0
 30191 ;;		Unchanged: 0/0
 30192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30197 ;;Total ram usage:        0 bytes
 30198 ;; Hardware stack levels used:    1
 30199 ;; Hardware stack levels required when called:   15
 30200 ;; This function calls:
 30201 ;;		Nothing
 30202 ;; This function is called by:
 30203 ;;		_EXT_INT_Initialize
 30204 ;; This function uses a reentrant model
 30205 ;;
 30206                           
 30207                           	psect	text129
 30208  01AF8E                     __ptext129:
 30209                           	opt callstack 0
 30210  01AF8E                     _INT0_SetInterruptHandler:
 30211                           	opt callstack 13
 30212                           
 30213                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 30214                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30215                           
 30216                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30217                           ;incstack = 0
 30218  01AF8E  50E1               	movf	fsr1l,w,c
 30219  01AF90  0FFD               	addlw	-3
 30220  01AF92  6ED9               	movwf	fsr2l,c
 30221  01AF94  50E2               	movf	fsr1h,w,c
 30222  01AF96  6EDA               	movwf	fsr2h,c
 30223  01AF98  0EFF               	movlw	255
 30224  01AF9A  22DA               	addwfc	fsr2h,f,c
 30225  01AF9C  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 30226  01AFA2  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 30227  01AFA8  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 30228                           
 30229                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30230  01AFAE  52E5               	movf	postdec1,f,c
 30231  01AFB0  52E5               	movf	postdec1,f,c
 30232  01AFB2  52E5               	movf	postdec1,f,c
 30233  01AFB4  0012               	return		;funcret
 30234  01AFB6                     __end_of_INT0_SetInterruptHandler:
 30235                           	opt callstack 0
 30236                           
 30237 ;; *************** function _DMA2_Initialize *****************
 30238 ;; Defined at:
 30239 ;;		line 61 in file "mcc_generated_files/dma2.c"
 30240 ;; Parameters:    Size  Location     Type
 30241 ;;		None
 30242 ;; Auto vars:     Size  Location     Type
 30243 ;;		None
 30244 ;; Return value:  Size  Location     Type
 30245 ;;                  1  [STACK] void 
 30246 ;; Registers used:
 30247 ;;		wreg, status,2
 30248 ;; Tracked objects:
 30249 ;;		On entry : 3F/3D
 30250 ;;		On exit  : 3F/3B
 30251 ;;		Unchanged: 0/0
 30252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30257 ;;Total ram usage:        0 bytes
 30258 ;; Hardware stack levels used:    1
 30259 ;; Hardware stack levels required when called:   15
 30260 ;; This function calls:
 30261 ;;		Nothing
 30262 ;; This function is called by:
 30263 ;;		_SYSTEM_Initialize
 30264 ;; This function uses a reentrant model
 30265 ;;
 30266                           
 30267                           	psect	text130
 30268  01A4DC                     __ptext130:
 30269                           	opt callstack 0
 30270  01A4DC                     _DMA2_Initialize:
 30271                           	opt callstack 14
 30272                           
 30273                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 30274                           
 30275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30276                           ;incstack = 0
 30277  01A4DC  0E00               	movlw	0
 30278  01A4DE  013B               	movlb	59	; () banked
 30279  01A4E0  6FD9               	movwf	217,b	;volatile
 30280  01A4E2  0E10               	movlw	16
 30281  01A4E4  6FDA               	movwf	218,b	;volatile
 30282  01A4E6  0E00               	movlw	0
 30283  01A4E8  6FDB               	movwf	219,b	;volatile
 30284                           
 30285                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 30286  01A4EA  0E3F               	movlw	63
 30287  01A4EC  6FD1               	movwf	209,b	;volatile
 30288  01A4EE  0EBB               	movlw	187
 30289  01A4F0  6FD0               	movwf	208,b	;volatile
 30290                           
 30291                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 30292  01A4F2  0E03               	movlw	3
 30293  01A4F4  6FDD               	movwf	221,b	;volatile
 30294                           
 30295                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 30296  01A4F6  0E00               	movlw	0
 30297  01A4F8  6FD8               	movwf	216,b	;volatile
 30298  01A4FA  0E01               	movlw	1
 30299  01A4FC  6FD7               	movwf	215,b	;volatile
 30300                           
 30301                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 30302  01A4FE  0E00               	movlw	0
 30303  01A500  6FCF               	movwf	207,b	;volatile
 30304  01A502  0E01               	movlw	1
 30305  01A504  6FCE               	movwf	206,b	;volatile
 30306                           
 30307                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 30308  01A506  0E1C               	movlw	28
 30309  01A508  6FDF               	movwf	223,b	;volatile
 30310                           
 30311                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 30312  01A50A  0E3D               	movlw	61
 30313  01A50C  6FDE               	movwf	222,b	;volatile
 30314                           
 30315                           ; BSR set to: 59
 30316                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 30317  01A50E  0139               	movlb	57	; () banked
 30318  01A510  97A5               	bcf	165,3,b	;volatile
 30319                           
 30320                           ; BSR set to: 57
 30321                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 30322  01A512  95A5               	bcf	165,2,b	;volatile
 30323                           
 30324                           ; BSR set to: 57
 30325                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 30326  01A514  9BA5               	bcf	165,5,b	;volatile
 30327                           
 30328                           ; BSR set to: 57
 30329                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 30330  01A516  99A5               	bcf	165,4,b	;volatile
 30331                           
 30332                           ; BSR set to: 57
 30333                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 30334  01A518  9795               	bcf	149,3,b	;volatile
 30335                           
 30336                           ; BSR set to: 57
 30337                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 30338  01A51A  9595               	bcf	149,2,b	;volatile
 30339                           
 30340                           ; BSR set to: 57
 30341                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 30342  01A51C  9B95               	bcf	149,5,b	;volatile
 30343                           
 30344                           ; BSR set to: 57
 30345                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 30346  01A51E  9995               	bcf	149,4,b	;volatile
 30347  01A520  9ED2               	bcf	16338,7,c	;# 
 30348  01A522  0139               	banksel	14831	;# 
 30349  01A524  0E55               	movlw	85	;# 
 30350  01A526  6FEF               	movwf	14831,b	;# 
 30351  01A528  0EAA               	movlw	170	;# 
 30352  01A52A  6FEF               	movwf	14831,b	;# 
 30353  01A52C  81EF               	bsf	14831,0,b	;# 
 30354  01A52E  8ED2               	bsf	16338,7,c	;# 
 30355                           
 30356                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 30357  01A530  013B               	movlb	59	; () banked
 30358  01A532  6BDC               	clrf	220,b	;volatile
 30359                           
 30360                           ; BSR set to: 59
 30361                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30362  01A534  0012               	return		;funcret
 30363  01A536                     __end_of_DMA2_Initialize:
 30364                           	opt callstack 0
 30365                           
 30366 ;; *************** function _DMA1_Initialize *****************
 30367 ;; Defined at:
 30368 ;;		line 86 in file "mcc_generated_files/dma1.c"
 30369 ;; Parameters:    Size  Location     Type
 30370 ;;		None
 30371 ;; Auto vars:     Size  Location     Type
 30372 ;;		None
 30373 ;; Return value:  Size  Location     Type
 30374 ;;                  1  [STACK] void 
 30375 ;; Registers used:
 30376 ;;		wreg, status,2
 30377 ;; Tracked objects:
 30378 ;;		On entry : 3F/3B
 30379 ;;		On exit  : 3F/3B
 30380 ;;		Unchanged: 0/0
 30381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30386 ;;Total ram usage:        0 bytes
 30387 ;; Hardware stack levels used:    1
 30388 ;; Hardware stack levels required when called:   15
 30389 ;; This function calls:
 30390 ;;		Nothing
 30391 ;; This function is called by:
 30392 ;;		_SYSTEM_Initialize
 30393 ;; This function uses a reentrant model
 30394 ;;
 30395                           
 30396                           	psect	text131
 30397  01A158                     __ptext131:
 30398                           	opt callstack 0
 30399  01A158                     _DMA1_Initialize:
 30400                           	opt callstack 14
 30401                           
 30402                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 30403                           
 30404                           ; BSR set to: 59
 30405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30406                           ;incstack = 0
 30407  01A158  0E00               	movlw	0
 30408  01A15A  013B               	movlb	59	; () banked
 30409  01A15C  6FF9               	movwf	249,b	;volatile
 30410  01A15E  0E10               	movlw	16
 30411  01A160  6FFA               	movwf	250,b	;volatile
 30412  01A162  0E00               	movlw	0
 30413  01A164  6FFB               	movwf	251,b	;volatile
 30414                           
 30415                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 30416  01A166  0E3D               	movlw	61
 30417  01A168  6FF1               	movwf	241,b	;volatile
 30418  01A16A  0E11               	movlw	17
 30419  01A16C  6FF0               	movwf	240,b	;volatile
 30420                           
 30421                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 30422  01A16E  0E03               	movlw	3
 30423  01A170  6FFD               	movwf	253,b	;volatile
 30424                           
 30425                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 30426  01A172  0E00               	movlw	0
 30427  01A174  6FF8               	movwf	248,b	;volatile
 30428  01A176  0E01               	movlw	1
 30429  01A178  6FF7               	movwf	247,b	;volatile
 30430                           
 30431                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 30432  01A17A  0E00               	movlw	0
 30433  01A17C  6FEF               	movwf	239,b	;volatile
 30434  01A17E  0E01               	movlw	1
 30435  01A180  6FEE               	movwf	238,b	;volatile
 30436                           
 30437                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 30438  01A182  0E15               	movlw	21
 30439  01A184  6FFF               	movwf	255,b	;volatile
 30440                           
 30441                           ; BSR set to: 59
 30442                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 30443  01A186  6BFE               	clrf	254,b	;volatile
 30444                           
 30445                           ; BSR set to: 59
 30446                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 30447  01A188  0139               	movlb	57	; () banked
 30448  01A18A  93A2               	bcf	162,1,b	;volatile
 30449                           
 30450                           ; BSR set to: 57
 30451                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 30452  01A18C  91A2               	bcf	162,0,b	;volatile
 30453                           
 30454                           ; BSR set to: 57
 30455                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 30456  01A18E  97A2               	bcf	162,3,b	;volatile
 30457                           
 30458                           ; BSR set to: 57
 30459                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 30460  01A190  95A2               	bcf	162,2,b	;volatile
 30461                           
 30462                           ; BSR set to: 57
 30463                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 30464  01A192  8392               	bsf	146,1,b	;volatile
 30465                           
 30466                           ; BSR set to: 57
 30467                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 30468  01A194  8192               	bsf	146,0,b	;volatile
 30469                           
 30470                           ; BSR set to: 57
 30471                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 30472  01A196  8792               	bsf	146,3,b	;volatile
 30473                           
 30474                           ; BSR set to: 57
 30475                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 30476  01A198  8592               	bsf	146,2,b	;volatile
 30477                           
 30478                           ; BSR set to: 57
 30479                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 30480  01A19A  6BF1               	clrf	241,b	;volatile
 30481                           
 30482                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 30483  01A19C  0E01               	movlw	1
 30484  01A19E  6FF2               	movwf	242,b	;volatile
 30485                           
 30486                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 30487  01A1A0  0E04               	movlw	4
 30488  01A1A2  6FF3               	movwf	243,b	;volatile
 30489                           
 30490                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 30491  01A1A4  0E02               	movlw	2
 30492  01A1A6  6FF4               	movwf	244,b	;volatile
 30493                           
 30494                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 30495  01A1A8  0E03               	movlw	3
 30496  01A1AA  6FF7               	movwf	247,b	;volatile
 30497  01A1AC  9ED2               	bcf	16338,7,c	;# 
 30498  01A1AE  0139               	banksel	14831	;# 
 30499  01A1B0  0E55               	movlw	85	;# 
 30500  01A1B2  6FEF               	movwf	14831,b	;# 
 30501  01A1B4  0EAA               	movlw	170	;# 
 30502  01A1B6  6FEF               	movwf	14831,b	;# 
 30503  01A1B8  81EF               	bsf	14831,0,b	;# 
 30504  01A1BA  8ED2               	bsf	16338,7,c	;# 
 30505                           
 30506                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 30507  01A1BC  013B               	movlb	59	; () banked
 30508  01A1BE  6BFC               	clrf	252,b	;volatile
 30509                           
 30510                           ; BSR set to: 59
 30511                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30512  01A1C0  0012               	return		;funcret
 30513  01A1C2                     __end_of_DMA1_Initialize:
 30514                           	opt callstack 0
 30515                           
 30516 ;; *************** function _CLKREF_Initialize *****************
 30517 ;; Defined at:
 30518 ;;		line 58 in file "mcc_generated_files/clkref.c"
 30519 ;; Parameters:    Size  Location     Type
 30520 ;;		None
 30521 ;; Auto vars:     Size  Location     Type
 30522 ;;		None
 30523 ;; Return value:  Size  Location     Type
 30524 ;;                  1  [STACK] void 
 30525 ;; Registers used:
 30526 ;;		wreg, status,2
 30527 ;; Tracked objects:
 30528 ;;		On entry : 3F/3B
 30529 ;;		On exit  : 3F/3C
 30530 ;;		Unchanged: 0/0
 30531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30536 ;;Total ram usage:        0 bytes
 30537 ;; Hardware stack levels used:    1
 30538 ;; Hardware stack levels required when called:   15
 30539 ;; This function calls:
 30540 ;;		Nothing
 30541 ;; This function is called by:
 30542 ;;		_SYSTEM_Initialize
 30543 ;; This function uses a reentrant model
 30544 ;;
 30545                           
 30546                           	psect	text132
 30547  01B3C6                     __ptext132:
 30548                           	opt callstack 0
 30549  01B3C6                     _CLKREF_Initialize:
 30550                           	opt callstack 14
 30551                           
 30552                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 30553                           
 30554                           ; BSR set to: 59
 30555                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30556                           ;incstack = 0
 30557  01B3C6  013C               	movlb	60	; () banked
 30558  01B3C8  6BE6               	clrf	230,b	;volatile
 30559                           
 30560                           ; BSR set to: 60
 30561                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 30562  01B3CA  0E94               	movlw	148
 30563  01B3CC  6FE5               	movwf	229,b	;volatile
 30564                           
 30565                           ; BSR set to: 60
 30566                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30567  01B3CE  0012               	return		;funcret
 30568  01B3D0                     __end_of_CLKREF_Initialize:
 30569                           	opt callstack 0
 30570                           
 30571 ;; *************** function _ADCC_Initialize *****************
 30572 ;; Defined at:
 30573 ;;		line 65 in file "mcc_generated_files/adcc.c"
 30574 ;; Parameters:    Size  Location     Type
 30575 ;;		None
 30576 ;; Auto vars:     Size  Location     Type
 30577 ;;		None
 30578 ;; Return value:  Size  Location     Type
 30579 ;;                  1  [STACK] void 
 30580 ;; Registers used:
 30581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30582 ;; Tracked objects:
 30583 ;;		On entry : 3F/3E
 30584 ;;		On exit  : 0/0
 30585 ;;		Unchanged: 0/0
 30586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30591 ;;Total ram usage:        0 bytes
 30592 ;; Hardware stack levels used:    1
 30593 ;; Hardware stack levels required when called:   16
 30594 ;; This function calls:
 30595 ;;		_ADCC_SetADIInterruptHandler
 30596 ;;		_ADCC_SetADTIInterruptHandler
 30597 ;; This function is called by:
 30598 ;;		_SYSTEM_Initialize
 30599 ;; This function uses a reentrant model
 30600 ;;
 30601                           
 30602                           	psect	text133
 30603  01A1C2                     __ptext133:
 30604                           	opt callstack 0
 30605  01A1C2                     _ADCC_Initialize:
 30606                           	opt callstack 13
 30607                           
 30608                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 30609                           
 30610                           ; BSR set to: 60
 30611                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30612                           ;incstack = 0
 30613  01A1C2  013E               	movlb	62	; () banked
 30614  01A1C4  6BDE               	clrf	222,b	;volatile
 30615                           
 30616                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 30617  01A1C6  6BDF               	clrf	223,b	;volatile
 30618                           
 30619                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 30620  01A1C8  6BE0               	clrf	224,b	;volatile
 30621                           
 30622                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 30623  01A1CA  6BE1               	clrf	225,b	;volatile
 30624                           
 30625                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 30626  01A1CC  6BE4               	clrf	228,b	;volatile
 30627                           
 30628                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 30629  01A1CE  6BE5               	clrf	229,b	;volatile
 30630                           
 30631                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 30632  01A1D0  6BEA               	clrf	234,b	;volatile
 30633                           
 30634                           ; BSR set to: 62
 30635                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 30636  01A1D2  0E40               	movlw	64
 30637  01A1D4  6FEC               	movwf	236,b	;volatile
 30638                           
 30639                           ; BSR set to: 62
 30640                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 30641  01A1D6  6BF1               	clrf	241,b	;volatile
 30642                           
 30643                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 30644  01A1D8  0E20               	movlw	32
 30645  01A1DA  6FF3               	movwf	243,b	;volatile
 30646                           
 30647                           ; BSR set to: 62
 30648                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 30649  01A1DC  6BF4               	clrf	244,b	;volatile
 30650                           
 30651                           ; BSR set to: 62
 30652                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 30653  01A1DE  6BF5               	clrf	245,b	;volatile
 30654                           
 30655                           ; BSR set to: 62
 30656                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 30657  01A1E0  6BF6               	clrf	246,b	;volatile
 30658                           
 30659                           ; BSR set to: 62
 30660                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 30661  01A1E2  6BF7               	clrf	247,b	;volatile
 30662                           
 30663                           ; BSR set to: 62
 30664                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 30665  01A1E4  6BF9               	clrf	249,b	;volatile
 30666                           
 30667                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 30668  01A1E6  0E5B               	movlw	91
 30669  01A1E8  6FFA               	movwf	250,b	;volatile
 30670                           
 30671                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 30672  01A1EA  0E27               	movlw	39
 30673  01A1EC  6FFB               	movwf	251,b	;volatile
 30674                           
 30675                           ; BSR set to: 62
 30676                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 30677  01A1EE  6BFC               	clrf	252,b	;volatile
 30678                           
 30679                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 30680  01A1F0  0E02               	movlw	2
 30681  01A1F2  6FFD               	movwf	253,b	;volatile
 30682                           
 30683                           ; BSR set to: 62
 30684                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 30685  01A1F4  6BFE               	clrf	254,b	;volatile
 30686                           
 30687                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 30688  01A1F6  0E07               	movlw	7
 30689  01A1F8  6FFF               	movwf	255,b	;volatile
 30690                           
 30691                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 30692  01A1FA  0E84               	movlw	132
 30693  01A1FC  6FF8               	movwf	248,b	;volatile
 30694                           
 30695                           ; BSR set to: 62
 30696                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 30697  01A1FE  0139               	movlb	57	; () banked
 30698  01A200  95A1               	bcf	161,2,b	;volatile
 30699                           
 30700                           ; BSR set to: 57
 30701                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 30702  01A202  8591               	bsf	145,2,b	;volatile
 30703                           
 30704                           ; BSR set to: 57
 30705                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 30706  01A204  0E4C               	movlw	low _ADCC_DefaultInterruptHandler
 30707  01A206  6EE6               	movwf	postinc1,c
 30708  01A208  0EB4               	movlw	high _ADCC_DefaultInterruptHandler
 30709  01A20A  6EE6               	movwf	postinc1,c
 30710  01A20C  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 30711  01A20E  6EE6               	movwf	postinc1,c
 30712  01A210  ECEF  F0D7         	call	_ADCC_SetADIInterruptHandler	;wreg free
 30713                           
 30714                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 30715  01A214  0139               	movlb	57	; () banked
 30716  01A216  97A1               	bcf	161,3,b	;volatile
 30717                           
 30718                           ; BSR set to: 57
 30719                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 30720  01A218  8791               	bsf	145,3,b	;volatile
 30721                           
 30722                           ; BSR set to: 57
 30723                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 30724  01A21A  0E4C               	movlw	low _ADCC_DefaultInterruptHandler
 30725  01A21C  6EE6               	movwf	postinc1,c
 30726  01A21E  0EB4               	movlw	high _ADCC_DefaultInterruptHandler
 30727  01A220  6EE6               	movwf	postinc1,c
 30728  01A222  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 30729  01A224  6EE6               	movwf	postinc1,c
 30730  01A226  ECDB  F0D7         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 30731                           
 30732                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30733  01A22A  0012               	return		;funcret
 30734  01A22C                     __end_of_ADCC_Initialize:
 30735                           	opt callstack 0
 30736                           
 30737 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 30738 ;; Defined at:
 30739 ;;		line 336 in file "mcc_generated_files/adcc.c"
 30740 ;; Parameters:    Size  Location     Type
 30741 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30742 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 30743 ;; Auto vars:     Size  Location     Type
 30744 ;;		None
 30745 ;; Return value:  Size  Location     Type
 30746 ;;                  1  [STACK] void 
 30747 ;; Registers used:
 30748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30749 ;; Tracked objects:
 30750 ;;		On entry : 0/0
 30751 ;;		On exit  : 0/0
 30752 ;;		Unchanged: 0/0
 30753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30758 ;;Total ram usage:        0 bytes
 30759 ;; Hardware stack levels used:    1
 30760 ;; Hardware stack levels required when called:   15
 30761 ;; This function calls:
 30762 ;;		Nothing
 30763 ;; This function is called by:
 30764 ;;		_ADCC_Initialize
 30765 ;;		_start_adc_scan
 30766 ;; This function uses a reentrant model
 30767 ;;
 30768                           
 30769                           	psect	text134
 30770  01AFB6                     __ptext134:
 30771                           	opt callstack 0
 30772  01AFB6                     _ADCC_SetADTIInterruptHandler:
 30773                           	opt callstack 14
 30774                           
 30775                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 30776                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30777                           
 30778                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30779                           ;incstack = 0
 30780  01AFB6  50E1               	movf	fsr1l,w,c
 30781  01AFB8  0FFD               	addlw	-3
 30782  01AFBA  6ED9               	movwf	fsr2l,c
 30783  01AFBC  50E2               	movf	fsr1h,w,c
 30784  01AFBE  6EDA               	movwf	fsr2h,c
 30785  01AFC0  0EFF               	movlw	255
 30786  01AFC2  22DA               	addwfc	fsr2h,f,c
 30787  01AFC4  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 30788  01AFCA  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 30789  01AFD0  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 30790                           
 30791                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 30792  01AFD6  52E5               	movf	postdec1,f,c
 30793  01AFD8  52E5               	movf	postdec1,f,c
 30794  01AFDA  52E5               	movf	postdec1,f,c
 30795  01AFDC  0012               	return		;funcret
 30796  01AFDE                     __end_of_ADCC_SetADTIInterruptHandler:
 30797                           	opt callstack 0
 30798                           
 30799 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 30800 ;; Defined at:
 30801 ;;		line 323 in file "mcc_generated_files/adcc.c"
 30802 ;; Parameters:    Size  Location     Type
 30803 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30804 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 30805 ;; Auto vars:     Size  Location     Type
 30806 ;;		None
 30807 ;; Return value:  Size  Location     Type
 30808 ;;                  1  [STACK] void 
 30809 ;; Registers used:
 30810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30811 ;; Tracked objects:
 30812 ;;		On entry : 6/0
 30813 ;;		On exit  : 0/0
 30814 ;;		Unchanged: 0/0
 30815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30820 ;;Total ram usage:        0 bytes
 30821 ;; Hardware stack levels used:    1
 30822 ;; Hardware stack levels required when called:   15
 30823 ;; This function calls:
 30824 ;;		Nothing
 30825 ;; This function is called by:
 30826 ;;		_ADCC_Initialize
 30827 ;;		_start_adc_scan
 30828 ;; This function uses a reentrant model
 30829 ;;
 30830                           
 30831                           	psect	text135
 30832  01AFDE                     __ptext135:
 30833                           	opt callstack 0
 30834  01AFDE                     _ADCC_SetADIInterruptHandler:
 30835                           	opt callstack 14
 30836                           
 30837                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 30838                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30839                           
 30840                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30841                           ;incstack = 0
 30842  01AFDE  50E1               	movf	fsr1l,w,c
 30843  01AFE0  0FFD               	addlw	-3
 30844  01AFE2  6ED9               	movwf	fsr2l,c
 30845  01AFE4  50E2               	movf	fsr1h,w,c
 30846  01AFE6  6EDA               	movwf	fsr2h,c
 30847  01AFE8  0EFF               	movlw	255
 30848  01AFEA  22DA               	addwfc	fsr2h,f,c
 30849  01AFEC  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 30850  01AFF2  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 30851  01AFF8  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 30852                           
 30853                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30854  01AFFE  52E5               	movf	postdec1,f,c
 30855  01B000  52E5               	movf	postdec1,f,c
 30856  01B002  52E5               	movf	postdec1,f,c
 30857  01B004  0012               	return		;funcret
 30858  01B006                     __end_of_ADCC_SetADIInterruptHandler:
 30859                           	opt callstack 0
 30860                           
 30861 ;; *************** function _INT1_ISR *****************
 30862 ;; Defined at:
 30863 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 30864 ;; Parameters:    Size  Location     Type
 30865 ;;		None
 30866 ;; Auto vars:     Size  Location     Type
 30867 ;;		None
 30868 ;; Return value:  Size  Location     Type
 30869 ;;                  1    wreg      void 
 30870 ;; Registers used:
 30871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 30872 ;; Tracked objects:
 30873 ;;		On entry : 0/0
 30874 ;;		On exit  : 0/0
 30875 ;;		Unchanged: 0/0
 30876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30879 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30880 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30881 ;;Total ram usage:        4 bytes
 30882 ;; Hardware stack levels used:    1
 30883 ;; Hardware stack levels required when called:    5
 30884 ;; This function calls:
 30885 ;;		_INT1_CallBack
 30886 ;; This function is called by:
 30887 ;;		Interrupt level 1
 30888 ;; This function uses a non-reentrant model
 30889 ;;
 30890                           
 30891                           	psect	text136
 30892  01AA4C                     __ptext136:
 30893                           	opt callstack 0
 30894  01AA4C                     _INT1_ISR:
 30895                           	opt callstack 12
 30896                           
 30897                           ;incstack = 0
 30898  01AA4C  006F FF60  F03F    	movff	status,??_INT1_ISR
 30899  01AA52  0060  F004  F040   	movff	btemp,??_INT1_ISR+1
 30900  01AA58  0060  F02C  F041   	movff	btemp+10,??_INT1_ISR+2
 30901  01AA5E  0060  F030  F042   	movff	btemp+11,??_INT1_ISR+3
 30902  01AA64  EE16  F061         	lfsr	1,___intlo_sp
 30903                           
 30904                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 30905  01AA68  0139               	movlb	57	; () banked
 30906  01AA6A  91A5               	bcf	165,0,b	;volatile
 30907                           
 30908                           ; BSR set to: 57
 30909                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 30910  01AA6C  EC64  F0D8         	call	_INT1_CallBack	;wreg free
 30911  01AA70  0060  F108  F00C   	movff	??_INT1_ISR+3,btemp+11
 30912  01AA76  0060  F104  F00B   	movff	??_INT1_ISR+2,btemp+10
 30913  01AA7C  0060  F100  F001   	movff	??_INT1_ISR+1,btemp
 30914  01AA82  0060  F0FF  FFD8   	movff	??_INT1_ISR,status
 30915  01AA88  0011               	retfie		f
 30916  01AA8A                     __end_of_INT1_ISR:
 30917                           	opt callstack 0
 30918                           
 30919 ;; *************** function _INT1_CallBack *****************
 30920 ;; Defined at:
 30921 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 30922 ;; Parameters:    Size  Location     Type
 30923 ;;		None
 30924 ;; Auto vars:     Size  Location     Type
 30925 ;;		None
 30926 ;; Return value:  Size  Location     Type
 30927 ;;                  1  [STACK] void 
 30928 ;; Registers used:
 30929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 30930 ;; Tracked objects:
 30931 ;;		On entry : 3F/39
 30932 ;;		On exit  : 0/0
 30933 ;;		Unchanged: 0/0
 30934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30939 ;;Total ram usage:        0 bytes
 30940 ;; Hardware stack levels used:    1
 30941 ;; Hardware stack levels required when called:    4
 30942 ;; This function calls:
 30943 ;;		Absolute function
 30944 ;;		_INT1_DefaultInterruptHandler
 30945 ;;		_switch_handler
 30946 ;; This function is called by:
 30947 ;;		_INT1_ISR
 30948 ;; This function uses a reentrant model
 30949 ;;
 30950                           
 30951                           	psect	text137
 30952  01B0C8                     __ptext137:
 30953                           	opt callstack 0
 30954  01B0C8                     _INT1_CallBack:
 30955                           	opt callstack 12
 30956                           
 30957                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 30958                           
 30959                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30960                           ;incstack = 0
 30961  01B0C8  0100               	movlb	0	; () banked
 30962  01B0CA  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 30963  01B0CC  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 30964  01B0CE  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 30965  01B0D0  B4D8               	btfsc	status,2,c
 30966  01B0D2  0012               	return	
 30967                           
 30968                           ; BSR set to: 0
 30969                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 30970  01B0D4  D801               	call	u954_28
 30971  01B0D6  0012               	return	
 30972  01B0D8                     u954_28:
 30973  01B0D8  0005               	push	
 30974  01B0DA  6EFA               	movwf	pclath,c
 30975  01B0DC  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 30976  01B0DE  6EFD               	movwf	tosl,c
 30977  01B0E0  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 30978  01B0E2  6EFE               	movwf	tosh,c
 30979  01B0E4  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 30980  01B0E6  6EFF               	movwf	tosu,c
 30981  01B0E8  50FA               	movf	pclath,w,c
 30982  01B0EA  0012               	return		;indir
 30983  01B0EC                     __end_of_INT1_CallBack:
 30984                           	opt callstack 0
 30985                           
 30986 ;; *************** function _INT1_DefaultInterruptHandler *****************
 30987 ;; Defined at:
 30988 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 30989 ;; Parameters:    Size  Location     Type
 30990 ;;		None
 30991 ;; Auto vars:     Size  Location     Type
 30992 ;;		None
 30993 ;; Return value:  Size  Location     Type
 30994 ;;                  1  [STACK] void 
 30995 ;; Registers used:
 30996 ;;		None
 30997 ;; Tracked objects:
 30998 ;;		On entry : 3F/0
 30999 ;;		On exit  : 0/0
 31000 ;;		Unchanged: 0/0
 31001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31006 ;;Total ram usage:        0 bytes
 31007 ;; Hardware stack levels used:    1
 31008 ;; Hardware stack levels required when called:    3
 31009 ;; This function calls:
 31010 ;;		Nothing
 31011 ;; This function is called by:
 31012 ;;		_EXT_INT_Initialize
 31013 ;;		_INT1_CallBack
 31014 ;; This function uses a reentrant model
 31015 ;;
 31016                           
 31017                           	psect	text138
 31018  01B446                     __ptext138:
 31019                           	opt callstack 0
 31020  01B446                     _INT1_DefaultInterruptHandler:
 31021                           	opt callstack 12
 31022                           
 31023                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31024                           
 31025                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31026                           ;incstack = 0
 31027  01B446  0012               	return		;funcret
 31028  01B448                     __end_of_INT1_DefaultInterruptHandler:
 31029                           	opt callstack 0
 31030                           
 31031 ;; *************** function _switch_handler *****************
 31032 ;; Defined at:
 31033 ;;		line 58 in file "dio.c"
 31034 ;; Parameters:    Size  Location     Type
 31035 ;;		None
 31036 ;; Auto vars:     Size  Location     Type
 31037 ;;  i               1  [STACK] unsigned char 
 31038 ;;  sw_value        1  [STACK] unsigned char 
 31039 ;; Return value:  Size  Location     Type
 31040 ;;                  1  [STACK] void 
 31041 ;; Registers used:
 31042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 31043 ;; Tracked objects:
 31044 ;;		On entry : 3F/0
 31045 ;;		On exit  : 0/0
 31046 ;;		Unchanged: 0/0
 31047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31052 ;;Total ram usage:        0 bytes
 31053 ;; Hardware stack levels used:    1
 31054 ;; Hardware stack levels required when called:    3
 31055 ;; This function calls:
 31056 ;;		Nothing
 31057 ;; This function is called by:
 31058 ;;		_start_switch_handler
 31059 ;;		_INT1_CallBack
 31060 ;; This function uses a reentrant model
 31061 ;;
 31062                           
 31063                           	psect	text139
 31064  01896C                     __ptext139:
 31065                           	opt callstack 0
 31066  01896C                     _switch_handler:
 31067                           	opt callstack 0
 31068                           
 31069                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31070  01896C  52E6               	movf	postinc1,f,c
 31071  01896E  52E6               	movf	postinc1,f,c
 31072                           
 31073                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 31074                           ;stkvar	_i @ sp[(-2)+0]
 31075                           
 31076                           ;incstack = 0
 31077  018970  0EFE               	movlw	-2
 31078  018972  6AE3               	clrf	plusw1,c
 31079  018974  9EBD               	bcf	189,7,c	;volatile
 31080                           
 31081                           ;dio.c: 72:  __nop();
 31082  018976  F000               	nop	
 31083                           
 31084                           ;dio.c: 73:  __nop();
 31085  018978  F000               	nop	
 31086                           
 31087                           ;dio.c: 74:  __nop();
 31088  01897A  F000               	nop	
 31089  01897C  D019               	goto	l10230
 31090  01897E                     l10218:
 31091                           
 31092                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 31093  01897E  A6CF               	btfss	207,3,c	;volatile
 31094  018980  D011               	goto	u930_20
 31095  018982  D00D               	goto	u930_21
 31096  018984                     u927_28:
 31097                           
 31098                           ;stkvar	_sw_value @ sp[(-2)+1]
 31099  018984  0EFF               	movlw	-1
 31100  018986  0060  F033  FFE3   	movff	btemp+11,plusw1
 31101                           
 31102                           ;dio.c: 80:    break;
 31103  01898C  D027               	goto	l10232
 31104  01898E                     l10220:
 31105                           
 31106                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 31107  01898E  A4CF               	btfss	207,2,c	;volatile
 31108  018990  D009               	goto	u930_20
 31109  018992  D005               	goto	u930_21
 31110  018994                     l10222:
 31111                           
 31112                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 31113  018994  A2CF               	btfss	207,1,c	;volatile
 31114  018996  D006               	goto	u930_20
 31115  018998  D002               	goto	u930_21
 31116  01899A                     l10224:
 31117                           
 31118                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 31119  01899A  A0CF               	btfss	207,0,c	;volatile
 31120  01899C  D003               	goto	u930_20
 31121  01899E                     u930_21:
 31122  01899E  6A0C               	clrf	(btemp+11)^0,c
 31123  0189A0  2A0C               	incf	(btemp+11)^0,f,c
 31124  0189A2  D7F0               	goto	u927_28
 31125  0189A4                     u930_20:
 31126  0189A4  6A0C               	clrf	(btemp+11)^0,c
 31127  0189A6  D7EE               	goto	u927_28
 31128  0189A8                     l10226:
 31129                           
 31130                           ;dio.c: 91:    sw_value = 1;
 31131                           ;stkvar	_sw_value @ sp[(-2)+1]
 31132  0189A8  0EFF               	movlw	-1
 31133  0189AA  6AE3               	clrf	plusw1,c
 31134  0189AC  2AE3               	incf	plusw1,f,c
 31135                           
 31136                           ;dio.c: 92:    break;
 31137  0189AE  D016               	goto	l10232
 31138  0189B0                     l10230:
 31139                           
 31140                           ;stkvar	_i @ sp[(-2)+0]
 31141  0189B0  0EFE               	movlw	-2
 31142  0189B2  50E3               	movf	plusw1,w,c
 31143  0189B4  6E0B               	movwf	(btemp+10)^0,c
 31144  0189B6  6A0C               	clrf	(btemp+11)^0,c
 31145                           
 31146                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31147                           ; Switch size 1, requested type "simple"
 31148                           ; Number of cases is 1, Range of values is 0 to 0
 31149                           ; switch strategies available:
 31150                           ; Name         Instructions Cycles
 31151                           ; simple_byte            4     3 (average)
 31152                           ;	Chosen strategy is simple_byte
 31153  0189B8  500C               	movf	(btemp+11)^0,w,c
 31154  0189BA  0A00               	xorlw	0	; case 0
 31155  0189BC  A4D8               	btfss	status,2,c
 31156  0189BE  D7F4               	goto	l10226
 31157                           
 31158                           ; Switch size 1, requested type "simple"
 31159                           ; Number of cases is 4, Range of values is 0 to 3
 31160                           ; switch strategies available:
 31161                           ; Name         Instructions Cycles
 31162                           ; simple_byte           13     7 (average)
 31163                           ;	Chosen strategy is simple_byte
 31164  0189C0  500B               	movf	(btemp+10)^0,w,c
 31165  0189C2  0A00               	xorlw	0	; case 0
 31166  0189C4  B4D8               	btfsc	status,2,c
 31167  0189C6  D7E9               	goto	l10224
 31168  0189C8  0A01               	xorlw	1	; case 1
 31169  0189CA  B4D8               	btfsc	status,2,c
 31170  0189CC  D7E3               	goto	l10222
 31171  0189CE  0A03               	xorlw	3	; case 2
 31172  0189D0  B4D8               	btfsc	status,2,c
 31173  0189D2  D7DD               	goto	l10220
 31174  0189D4  0A01               	xorlw	1	; case 3
 31175  0189D6  B4D8               	btfsc	status,2,c
 31176  0189D8  D7D2               	goto	l10218
 31177  0189DA  D7E6               	goto	l10226
 31178  0189DC                     l10232:
 31179                           
 31180                           ;dio.c: 96:   if (sw_value) {
 31181                           ;stkvar	_sw_value @ sp[(-2)+1]
 31182  0189DC  0EFF               	movlw	-1
 31183  0189DE  50E3               	movf	plusw1,w,c
 31184  0189E0  B4D8               	btfsc	status,2,c
 31185  0189E2  D018               	goto	l10238
 31186                           
 31187                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 31188                           ;stkvar	_i @ sp[(-2)+0]
 31189  0189E4  0EFE               	movlw	-2
 31190  0189E6  50E3               	movf	plusw1,w,c
 31191  0189E8  0D05               	mullw	5
 31192  0189EA  0EBC               	movlw	low _S
 31193  0189EC  24F3               	addwf	243,w,c
 31194  0189EE  6ED9               	movwf	fsr2l,c
 31195  0189F0  0E02               	movlw	high _S
 31196  0189F2  20F4               	addwfc	prodh,w,c
 31197  0189F4  6EDA               	movwf	fsr2h,c
 31198  0189F6  04DE               	decf	postinc2,w,c
 31199  0189F8  A4D8               	btfss	status,2,c
 31200  0189FA  D049               	goto	l10246
 31201                           
 31202                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 31203                           ;stkvar	_i @ sp[(-2)+0]
 31204  0189FC  0EFE               	movlw	-2
 31205  0189FE  50E3               	movf	plusw1,w,c
 31206  018A00  0D05               	mullw	5
 31207  018A02  0EBC               	movlw	low _S
 31208  018A04  24F3               	addwf	243,w,c
 31209  018A06  6ED9               	movwf	fsr2l,c
 31210  018A08  0E02               	movlw	high _S
 31211  018A0A  20F4               	addwfc	prodh,w,c
 31212  018A0C  6EDA               	movwf	fsr2h,c
 31213  018A0E  0E00               	movlw	0
 31214  018A10  6EDF               	movwf	indf2,c
 31215  018A12  D03D               	goto	l10246
 31216  018A14                     l10238:
 31217                           
 31218                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 31219                           ;stkvar	_i @ sp[(-2)+0]
 31220  018A14  0EFE               	movlw	-2
 31221  018A16  50E3               	movf	plusw1,w,c
 31222  018A18  0D05               	mullw	5
 31223  018A1A  0EBC               	movlw	low _S
 31224  018A1C  24F3               	addwf	243,w,c
 31225  018A1E  6ED9               	movwf	fsr2l,c
 31226  018A20  0E02               	movlw	high _S
 31227  018A22  20F4               	addwfc	prodh,w,c
 31228  018A24  6EDA               	movwf	fsr2h,c
 31229  018A26  50DF               	movf	indf2,w,c
 31230  018A28  A4D8               	btfss	status,2,c
 31231  018A2A  D031               	goto	l10246
 31232                           
 31233                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 31234                           ;stkvar	_i @ sp[(-2)+0]
 31235  018A2C  0EFE               	movlw	-2
 31236  018A2E  50E3               	movf	plusw1,w,c
 31237  018A30  0D05               	mullw	5
 31238  018A32  0EBC               	movlw	low _S
 31239  018A34  24F3               	addwf	243,w,c
 31240  018A36  6ED9               	movwf	fsr2l,c
 31241  018A38  0E02               	movlw	high _S
 31242  018A3A  20F4               	addwfc	prodh,w,c
 31243  018A3C  6EDA               	movwf	fsr2h,c
 31244  018A3E  0E01               	movlw	1
 31245  018A40  6EDF               	movwf	indf2,c
 31246                           
 31247                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 31248  018A42  EE20  F2B8         	lfsr	2,_V+184	;volatile
 31249                           
 31250                           ;stkvar	_i @ sp[(-2)+0]
 31251  018A46  0EFE               	movlw	-2
 31252  018A48  50E3               	movf	plusw1,w,c
 31253  018A4A  0D05               	mullw	5
 31254  018A4C  0EBD               	movlw	low (_S+1)
 31255  018A4E  24F3               	addwf	243,w,c
 31256  018A50  6EE9               	movwf	fsr0l,c
 31257  018A52  0E02               	movlw	high (_S+1)
 31258  018A54  20F4               	addwfc	prodh,w,c
 31259  018A56  6EEA               	movwf	fsr0h,c
 31260  018A58  006F FF7B FFEE     	movff	postinc2,postinc0
 31261  018A5E  006F FF7B FFEE     	movff	postinc2,postinc0
 31262  018A64  006F FF7B FFEE     	movff	postinc2,postinc0
 31263  018A6A  006F FF7B FFEE     	movff	postinc2,postinc0
 31264                           
 31265                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 31266                           ;stkvar	_i @ sp[(-2)+0]
 31267  018A70  0EFE               	movlw	-2
 31268  018A72  006F FF8C  F00C    	movff	plusw1,btemp+11
 31269  018A78  0E01               	movlw	1
 31270  018A7A  6E0B               	movwf	(btemp+10)^0,c
 31271  018A7C  2A0C               	incf	(btemp+11)^0,f,c
 31272  018A7E  D002               	goto	u934_24
 31273  018A80                     u934_25:
 31274  018A80  90D8               	bcf	status,0,c
 31275  018A82  360B               	rlcf	(btemp+10)^0,f,c
 31276  018A84                     u934_24:
 31277  018A84  2E0C               	decfsz	(btemp+11)^0,f,c
 31278  018A86  D7FC               	goto	u934_25
 31279  018A88  500B               	movf	(btemp+10)^0,w,c
 31280  018A8A  0102               	movlb	2	; () banked
 31281  018A8C  13E4               	iorwf	(_S+40)& (0+255),f,b	;volatile
 31282  018A8E                     l10246:
 31283                           
 31284                           ;dio.c: 107:  } while (++i < 4);
 31285                           ;stkvar	_i @ sp[(-2)+0]
 31286  018A8E  0EFE               	movlw	-2
 31287  018A90  2AE3               	incf	plusw1,f,c
 31288  018A92  0EFE               	movlw	-2
 31289  018A94  006F FF8C  F001    	movff	plusw1,btemp
 31290  018A9A  0E03               	movlw	3
 31291  018A9C  6401               	cpfsgt	btemp^0,c
 31292  018A9E  D788               	goto	l10230
 31293                           
 31294                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 31295  018AA0  8EBD               	bsf	189,7,c	;volatile
 31296                           
 31297                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31298  018AA2  52E5               	movf	postdec1,f,c
 31299  018AA4  52E5               	movf	postdec1,f,c
 31300  018AA6  0012               	return		;funcret
 31301  018AA8                     __end_of_switch_handler:
 31302                           	opt callstack 0
 31303                           
 31304 ;; *************** function _TMR5_ISR *****************
 31305 ;; Defined at:
 31306 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 31307 ;; Parameters:    Size  Location     Type
 31308 ;;		None
 31309 ;; Auto vars:     Size  Location     Type
 31310 ;;		None
 31311 ;; Return value:  Size  Location     Type
 31312 ;;                  1    wreg      void 
 31313 ;; Registers used:
 31314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 31315 ;; Tracked objects:
 31316 ;;		On entry : 0/0
 31317 ;;		On exit  : 0/0
 31318 ;;		Unchanged: 0/0
 31319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31322 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31323 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31324 ;;Total ram usage:        4 bytes
 31325 ;; Hardware stack levels used:    1
 31326 ;; Hardware stack levels required when called:    5
 31327 ;; This function calls:
 31328 ;;		_TMR5_CallBack
 31329 ;;		_TMR5_WriteTimer
 31330 ;; This function is called by:
 31331 ;;		Interrupt level 1
 31332 ;; This function uses a non-reentrant model
 31333 ;;
 31334                           
 31335                           	psect	text140
 31336  01A538                     __ptext140:
 31337                           	opt callstack 0
 31338  01A538                     _TMR5_ISR:
 31339                           	opt callstack 12
 31340                           
 31341                           ;incstack = 0
 31342  01A538  006F FF60  F045    	movff	status,??_TMR5_ISR+2
 31343  01A53E  0060  F030  F046   	movff	btemp+11,??_TMR5_ISR+3
 31344  01A544  EE16  F061         	lfsr	1,___intlo_sp
 31345                           
 31346                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 31347  01A548  0139               	movlb	57	; () banked
 31348  01A54A  9DA8               	bcf	168,6,b	;volatile
 31349                           
 31350                           ; BSR set to: 57
 31351                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 31352  01A54C  0060  F0AF  FFE6   	movff	_timer5ReloadVal,postinc1
 31353  01A552  0060  F0B3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 31354  01A558  ECE6  F0D4         	call	_TMR5_WriteTimer	;wreg free
 31355                           
 31356                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 31357  01A55C  0102               	movlb	2	; () banked
 31358  01A55E  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 31359  01A560  6E43               	movwf	??_TMR5_ISR^0,c
 31360  01A562  6A44               	clrf	(??_TMR5_ISR+1)^0,c
 31361  01A564  0E05               	movlw	5
 31362  01A566  2643               	addwf	??_TMR5_ISR^0,f,c
 31363  01A568  0E00               	movlw	0
 31364  01A56A  2244               	addwfc	(??_TMR5_ISR+1)^0,f,c
 31365  01A56C  4A29               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 31366  01A56E  2A2A               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 31367  01A570  5043               	movf	??_TMR5_ISR^0,w,c
 31368  01A572  5C29               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 31369  01A574  5044               	movf	(??_TMR5_ISR+1)^0,w,c
 31370  01A576  582A               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 31371  01A578  A0D8               	btfss	status,0,c
 31372  01A57A  D004               	goto	i1l1017
 31373                           
 31374                           ; BSR set to: 2
 31375                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 31376  01A57C  EC76  F0D8         	call	_TMR5_CallBack	;wreg free
 31377                           
 31378                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 31379  01A580  6A29               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 31380  01A582  6A2A               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 31381  01A584                     i1l1017:
 31382  01A584  0060  F118  F00C   	movff	??_TMR5_ISR+3,btemp+11
 31383  01A58A  0060  F117  FFD8   	movff	??_TMR5_ISR+2,status
 31384  01A590  0011               	retfie		f
 31385  01A592                     __end_of_TMR5_ISR:
 31386                           	opt callstack 0
 31387                           
 31388 ;; *************** function _TMR5_WriteTimer *****************
 31389 ;; Defined at:
 31390 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 31391 ;; Parameters:    Size  Location     Type
 31392 ;;  timerVal        2  [STACK] unsigned short 
 31393 ;; Auto vars:     Size  Location     Type
 31394 ;;		None
 31395 ;; Return value:  Size  Location     Type
 31396 ;;                  1  [STACK] void 
 31397 ;; Registers used:
 31398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31399 ;; Tracked objects:
 31400 ;;		On entry : 3F/39
 31401 ;;		On exit  : 0/0
 31402 ;;		Unchanged: 0/0
 31403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31408 ;;Total ram usage:        0 bytes
 31409 ;; Hardware stack levels used:    1
 31410 ;; Hardware stack levels required when called:    3
 31411 ;; This function calls:
 31412 ;;		Nothing
 31413 ;; This function is called by:
 31414 ;;		_TMR5_ISR
 31415 ;; This function uses a reentrant model
 31416 ;;
 31417                           
 31418                           	psect	text141
 31419  01A9CC                     __ptext141:
 31420                           	opt callstack 0
 31421  01A9CC                     _TMR5_WriteTimer:
 31422                           	opt callstack 13
 31423                           
 31424                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 31425                           
 31426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31427                           ;incstack = 0
 31428  01A9CC  A49A               	btfss	154,2,c	;volatile
 31429  01A9CE  D00F               	goto	l10428
 31430                           
 31431                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 31432  01A9D0  909A               	bcf	154,0,c	;volatile
 31433                           
 31434                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 31435                           ;stkvar	_timerVal @ sp[(0)+-2]
 31436  01A9D2  0EFF               	movlw	255
 31437  01A9D4  24E1               	addwf	fsr1l,w,c
 31438  01A9D6  6ED9               	movwf	fsr2l,c
 31439  01A9D8  0EFF               	movlw	255
 31440  01A9DA  20E2               	addwfc	fsr1h,w,c
 31441  01A9DC  6EDA               	movwf	fsr2h,c
 31442  01A9DE  50DF               	movf	indf2,w,c
 31443  01A9E0  6E99               	movwf	153,c	;volatile
 31444                           
 31445                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 31446                           ;stkvar	_timerVal @ sp[(0)+-2]
 31447  01A9E2  0EFE               	movlw	-2
 31448  01A9E4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31449                           
 31450                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 31451  01A9EA  809A               	bsf	154,0,c	;volatile
 31452                           
 31453                           ;mcc_generated_files/tmr5.c: 142:  } else {
 31454  01A9EC  D00C               	goto	l1000
 31455  01A9EE                     l10428:
 31456                           
 31457                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 31458                           ;stkvar	_timerVal @ sp[(0)+-2]
 31459  01A9EE  0EFF               	movlw	255
 31460  01A9F0  24E1               	addwf	fsr1l,w,c
 31461  01A9F2  6ED9               	movwf	fsr2l,c
 31462  01A9F4  0EFF               	movlw	255
 31463  01A9F6  20E2               	addwfc	fsr1h,w,c
 31464  01A9F8  6EDA               	movwf	fsr2h,c
 31465  01A9FA  50DF               	movf	indf2,w,c
 31466  01A9FC  6E99               	movwf	153,c	;volatile
 31467                           
 31468                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 31469                           ;stkvar	_timerVal @ sp[(0)+-2]
 31470  01A9FE  0EFE               	movlw	-2
 31471  01AA00  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31472  01AA06                     l1000:
 31473                           
 31474                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 31475  01AA06  52E5               	movf	postdec1,f,c
 31476  01AA08  52E5               	movf	postdec1,f,c
 31477  01AA0A  0012               	return		;funcret
 31478  01AA0C                     __end_of_TMR5_WriteTimer:
 31479                           	opt callstack 0
 31480                           
 31481 ;; *************** function _TMR5_CallBack *****************
 31482 ;; Defined at:
 31483 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 31484 ;; Parameters:    Size  Location     Type
 31485 ;;		None
 31486 ;; Auto vars:     Size  Location     Type
 31487 ;;		None
 31488 ;; Return value:  Size  Location     Type
 31489 ;;                  1  [STACK] void 
 31490 ;; Registers used:
 31491 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 31492 ;; Tracked objects:
 31493 ;;		On entry : 3F/2
 31494 ;;		On exit  : 0/0
 31495 ;;		Unchanged: 0/0
 31496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31501 ;;Total ram usage:        0 bytes
 31502 ;; Hardware stack levels used:    1
 31503 ;; Hardware stack levels required when called:    4
 31504 ;; This function calls:
 31505 ;;		Absolute function
 31506 ;;		_TMR5_DefaultInterruptHandler
 31507 ;; This function is called by:
 31508 ;;		_TMR5_ISR
 31509 ;; This function uses a reentrant model
 31510 ;;
 31511                           
 31512                           	psect	text142
 31513  01B0EC                     __ptext142:
 31514                           	opt callstack 0
 31515  01B0EC                     _TMR5_CallBack:
 31516                           	opt callstack 12
 31517                           
 31518                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 31519                           
 31520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31521                           ;incstack = 0
 31522  01B0EC  0100               	movlb	0	; () banked
 31523  01B0EE  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31524  01B0F0  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31525  01B0F2  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31526  01B0F4  B4D8               	btfsc	status,2,c
 31527  01B0F6  0012               	return	
 31528                           
 31529                           ; BSR set to: 0
 31530                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 31531  01B0F8  D801               	call	u963_28
 31532  01B0FA  0012               	return	
 31533  01B0FC                     u963_28:
 31534  01B0FC  0005               	push	
 31535  01B0FE  6EFA               	movwf	pclath,c
 31536  01B100  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31537  01B102  6EFD               	movwf	tosl,c
 31538  01B104  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31539  01B106  6EFE               	movwf	tosh,c
 31540  01B108  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31541  01B10A  6EFF               	movwf	tosu,c
 31542  01B10C  50FA               	movf	pclath,w,c
 31543  01B10E  0012               	return		;indir
 31544  01B110                     __end_of_TMR5_CallBack:
 31545                           	opt callstack 0
 31546                           
 31547 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 31548 ;; Defined at:
 31549 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 31550 ;; Parameters:    Size  Location     Type
 31551 ;;		None
 31552 ;; Auto vars:     Size  Location     Type
 31553 ;;		None
 31554 ;; Return value:  Size  Location     Type
 31555 ;;                  1  [STACK] void 
 31556 ;; Registers used:
 31557 ;;		wreg, status,2, status,0, btemp+11
 31558 ;; Tracked objects:
 31559 ;;		On entry : 3F/0
 31560 ;;		On exit  : 3F/2
 31561 ;;		Unchanged: 0/0
 31562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31567 ;;Total ram usage:        0 bytes
 31568 ;; Hardware stack levels used:    1
 31569 ;; Hardware stack levels required when called:    3
 31570 ;; This function calls:
 31571 ;;		Nothing
 31572 ;; This function is called by:
 31573 ;;		_TMR5_Initialize
 31574 ;;		_TMR5_CallBack
 31575 ;; This function uses a reentrant model
 31576 ;;
 31577                           
 31578                           	psect	text143
 31579  01AC06                     __ptext143:
 31580                           	opt callstack 0
 31581  01AC06                     _TMR5_DefaultInterruptHandler:
 31582                           	opt callstack 12
 31583                           
 31584                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 31585                           
 31586                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31587                           ;incstack = 0
 31588  01AC06  A0BE               	btfss	190,0,c	;volatile
 31589  01AC08  D002               	goto	u899_20
 31590  01AC0A  0E01               	movlw	1
 31591  01AC0C  D001               	goto	u899_26
 31592  01AC0E                     u899_20:
 31593  01AC0E  0E00               	movlw	0
 31594  01AC10                     u899_26:
 31595  01AC10  0AFF               	xorlw	255
 31596  01AC12  6E0C               	movwf	(btemp+11)^0,c
 31597  01AC14  50BE               	movf	190,w,c	;volatile
 31598  01AC16  180C               	xorwf	(btemp+11)^0,w,c
 31599  01AC18  0BFE               	andlw	-2
 31600  01AC1A  180C               	xorwf	(btemp+11)^0,w,c
 31601  01AC1C  6EBE               	movwf	190,c	;volatile
 31602                           
 31603                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 31604  01AC1E  0E01               	movlw	1
 31605  01AC20  0102               	movlb	2	; () banked
 31606  01AC22  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 31607  01AC24  0E00               	movlw	0
 31608  01AC26  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 31609  01AC28  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 31610  01AC2A  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 31611                           
 31612                           ; BSR set to: 2
 31613                           ;mcc_generated_files/tmr5.c: 201:  V.ticks++;
 31614  01AC2C  0E01               	movlw	1
 31615  01AC2E  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 31616  01AC30  0E00               	movlw	0
 31617  01AC32  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 31618  01AC34  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 31619  01AC36  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 31620                           
 31621                           ; BSR set to: 2
 31622                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31623  01AC38  0012               	return		;funcret
 31624  01AC3A                     __end_of_TMR5_DefaultInterruptHandler:
 31625                           	opt callstack 0
 31626                           
 31627 ;; *************** function _TMR3_ISR *****************
 31628 ;; Defined at:
 31629 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 31630 ;; Parameters:    Size  Location     Type
 31631 ;;		None
 31632 ;; Auto vars:     Size  Location     Type
 31633 ;;		None
 31634 ;; Return value:  Size  Location     Type
 31635 ;;                  1    wreg      void 
 31636 ;; Registers used:
 31637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 31638 ;; Tracked objects:
 31639 ;;		On entry : 0/0
 31640 ;;		On exit  : 3F/0
 31641 ;;		Unchanged: 0/0
 31642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31645 ;;      Temps:          0       0       0       0      25       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31646 ;;      Totals:         0       0       0       0      25       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31647 ;;Total ram usage:       25 bytes
 31648 ;; Hardware stack levels used:    1
 31649 ;; Hardware stack levels required when called:   14
 31650 ;; This function calls:
 31651 ;;		_TMR3_CallBack
 31652 ;;		_TMR3_WriteTimer
 31653 ;; This function is called by:
 31654 ;;		Interrupt level 1
 31655 ;; This function uses a non-reentrant model
 31656 ;;
 31657                           
 31658                           	psect	text144
 31659  01857C                     __ptext144:
 31660                           	opt callstack 0
 31661  01857C                     _TMR3_ISR:
 31662                           	opt callstack 3
 31663                           
 31664                           ; BSR set to: 2
 31665                           ;incstack = 0
 31666  01857C  006F FF60  F3E4    	movff	status,??_TMR3_ISR
 31667  018582  006F FFD8  F3E5    	movff	tblptrl,??_TMR3_ISR+1
 31668  018588  006F FFDC  F3E6    	movff	tblptrh,??_TMR3_ISR+2
 31669  01858E  006F FFE0  F3E7    	movff	tblptru,??_TMR3_ISR+3
 31670  018594  006F FFD4  F3E8    	movff	tablat,??_TMR3_ISR+4
 31671  01859A  0060  F004  F3E9   	movff	btemp,??_TMR3_ISR+5
 31672  0185A0  0060  F008  F3EA   	movff	btemp+1,??_TMR3_ISR+6
 31673  0185A6  0060  F00C  F3EB   	movff	btemp+2,??_TMR3_ISR+7
 31674  0185AC  0060  F010  F3EC   	movff	btemp+3,??_TMR3_ISR+8
 31675  0185B2  0060  F014  F3ED   	movff	btemp+4,??_TMR3_ISR+9
 31676  0185B8  0060  F018  F3EE   	movff	btemp+5,??_TMR3_ISR+10
 31677  0185BE  0060  F01C  F3EF   	movff	btemp+6,??_TMR3_ISR+11
 31678  0185C4  0060  F020  F3F0   	movff	btemp+7,??_TMR3_ISR+12
 31679  0185CA  0060  F024  F3F1   	movff	btemp+8,??_TMR3_ISR+13
 31680  0185D0  0060  F028  F3F2   	movff	btemp+9,??_TMR3_ISR+14
 31681  0185D6  0060  F02C  F3F3   	movff	btemp+10,??_TMR3_ISR+15
 31682  0185DC  0060  F030  F3F4   	movff	btemp+11,??_TMR3_ISR+16
 31683  0185E2  0060  F044  F3F5   	movff	btemp+16,??_TMR3_ISR+17
 31684  0185E8  0060  F048  F3F6   	movff	btemp+17,??_TMR3_ISR+18
 31685  0185EE  0060  F04C  F3F7   	movff	btemp+18,??_TMR3_ISR+19
 31686  0185F4  0060  F050  F3F8   	movff	btemp+19,??_TMR3_ISR+20
 31687  0185FA  0060  F054  F3F9   	movff	btemp+20,??_TMR3_ISR+21
 31688  018600  0060  F058  F3FA   	movff	btemp+21,??_TMR3_ISR+22
 31689  018606  0060  F05C  F3FB   	movff	btemp+22,??_TMR3_ISR+23
 31690  01860C  0060  F060  F3FC   	movff	btemp+23,??_TMR3_ISR+24
 31691  018612  EE16  F061         	lfsr	1,___intlo_sp
 31692                           
 31693                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 31694  018616  0139               	movlb	57	; () banked
 31695  018618  9DA6               	bcf	166,6,b	;volatile
 31696                           
 31697                           ; BSR set to: 57
 31698                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 31699  01861A  0060  F09F  FFE6   	movff	_timer3ReloadVal,postinc1
 31700  018620  0060  F0A3  FFE6   	movff	_timer3ReloadVal+1,postinc1
 31701  018626  EC06  F0D5         	call	_TMR3_WriteTimer	;wreg free
 31702                           
 31703                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 31704  01862A  0100               	movlb	0	; () banked
 31705  01862C  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 31706  01862E  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 31707  018630  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 31708  018632  E104               	bnz	i1u1199_20
 31709  018634  0E28               	movlw	40
 31710  018636  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 31711  018638  A0D8               	btfss	status,0,c
 31712  01863A  D005               	goto	i1l1205
 31713  01863C                     i1u1199_20:
 31714                           
 31715                           ; BSR set to: 0
 31716                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 31717  01863C  EC88  F0D8         	call	_TMR3_CallBack	;wreg free
 31718                           
 31719                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 31720  018640  0100               	movlb	0	; () banked
 31721  018642  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 31722  018644  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 31723  018646                     i1l1205:
 31724                           
 31725                           ; BSR set to: 0
 31726  018646  0060  FFF0  F018   	movff	??_TMR3_ISR+24,btemp+23
 31727  01864C  0060  FFEC  F017   	movff	??_TMR3_ISR+23,btemp+22
 31728  018652  0060  FFE8  F016   	movff	??_TMR3_ISR+22,btemp+21
 31729  018658  0060  FFE4  F015   	movff	??_TMR3_ISR+21,btemp+20
 31730  01865E  0060  FFE0  F014   	movff	??_TMR3_ISR+20,btemp+19
 31731  018664  0060  FFDC  F013   	movff	??_TMR3_ISR+19,btemp+18
 31732  01866A  0060  FFD8  F012   	movff	??_TMR3_ISR+18,btemp+17
 31733  018670  0060  FFD4  F011   	movff	??_TMR3_ISR+17,btemp+16
 31734  018676  0060  FFD0  F00C   	movff	??_TMR3_ISR+16,btemp+11
 31735  01867C  0060  FFCC  F00B   	movff	??_TMR3_ISR+15,btemp+10
 31736  018682  0060  FFC8  F00A   	movff	??_TMR3_ISR+14,btemp+9
 31737  018688  0060  FFC4  F009   	movff	??_TMR3_ISR+13,btemp+8
 31738  01868E  0060  FFC0  F008   	movff	??_TMR3_ISR+12,btemp+7
 31739  018694  0060  FFBC  F007   	movff	??_TMR3_ISR+11,btemp+6
 31740  01869A  0060  FFB8  F006   	movff	??_TMR3_ISR+10,btemp+5
 31741  0186A0  0060  FFB4  F005   	movff	??_TMR3_ISR+9,btemp+4
 31742  0186A6  0060  FFB0  F004   	movff	??_TMR3_ISR+8,btemp+3
 31743  0186AC  0060  FFAC  F003   	movff	??_TMR3_ISR+7,btemp+2
 31744  0186B2  0060  FFA8  F002   	movff	??_TMR3_ISR+6,btemp+1
 31745  0186B8  0060  FFA4  F001   	movff	??_TMR3_ISR+5,btemp
 31746  0186BE  0060  FFA3  FFF5   	movff	??_TMR3_ISR+4,tablat
 31747  0186C4  0060  FF9F  FFF8   	movff	??_TMR3_ISR+3,tblptru
 31748  0186CA  0060  FF9B  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 31749  0186D0  0060  FF97  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 31750  0186D6  0060  FF93  FFD8   	movff	??_TMR3_ISR,status
 31751  0186DC  0011               	retfie		f
 31752  0186DE                     __end_of_TMR3_ISR:
 31753                           	opt callstack 0
 31754                           
 31755 ;; *************** function _TMR3_WriteTimer *****************
 31756 ;; Defined at:
 31757 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 31758 ;; Parameters:    Size  Location     Type
 31759 ;;  timerVal        2  [STACK] unsigned short 
 31760 ;; Auto vars:     Size  Location     Type
 31761 ;;		None
 31762 ;; Return value:  Size  Location     Type
 31763 ;;                  1  [STACK] void 
 31764 ;; Registers used:
 31765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31766 ;; Tracked objects:
 31767 ;;		On entry : 3F/39
 31768 ;;		On exit  : 0/0
 31769 ;;		Unchanged: 0/0
 31770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31775 ;;Total ram usage:        0 bytes
 31776 ;; Hardware stack levels used:    1
 31777 ;; Hardware stack levels required when called:    3
 31778 ;; This function calls:
 31779 ;;		Nothing
 31780 ;; This function is called by:
 31781 ;;		_TMR3_ISR
 31782 ;; This function uses a reentrant model
 31783 ;;
 31784                           
 31785                           	psect	text145
 31786  01AA0C                     __ptext145:
 31787                           	opt callstack 0
 31788  01AA0C                     _TMR3_WriteTimer:
 31789                           	opt callstack 13
 31790                           
 31791                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 31792                           
 31793                           ; BSR set to: 0
 31794                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31795                           ;incstack = 0
 31796  01AA0C  A4A6               	btfss	166,2,c	;volatile
 31797  01AA0E  D00F               	goto	l10446
 31798                           
 31799                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 31800  01AA10  90A6               	bcf	166,0,c	;volatile
 31801                           
 31802                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 31803                           ;stkvar	_timerVal @ sp[(0)+-2]
 31804  01AA12  0EFF               	movlw	255
 31805  01AA14  24E1               	addwf	fsr1l,w,c
 31806  01AA16  6ED9               	movwf	fsr2l,c
 31807  01AA18  0EFF               	movlw	255
 31808  01AA1A  20E2               	addwfc	fsr1h,w,c
 31809  01AA1C  6EDA               	movwf	fsr2h,c
 31810  01AA1E  50DF               	movf	indf2,w,c
 31811  01AA20  6EA5               	movwf	165,c	;volatile
 31812                           
 31813                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 31814                           ;stkvar	_timerVal @ sp[(0)+-2]
 31815  01AA22  0EFE               	movlw	-2
 31816  01AA24  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 31817                           
 31818                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 31819  01AA2A  80A6               	bsf	166,0,c	;volatile
 31820                           
 31821                           ;mcc_generated_files/tmr3.c: 141:     }
 31822  01AA2C  D00C               	goto	l1188
 31823  01AA2E                     l10446:
 31824                           
 31825                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 31826                           ;stkvar	_timerVal @ sp[(0)+-2]
 31827  01AA2E  0EFF               	movlw	255
 31828  01AA30  24E1               	addwf	fsr1l,w,c
 31829  01AA32  6ED9               	movwf	fsr2l,c
 31830  01AA34  0EFF               	movlw	255
 31831  01AA36  20E2               	addwfc	fsr1h,w,c
 31832  01AA38  6EDA               	movwf	fsr2h,c
 31833  01AA3A  50DF               	movf	indf2,w,c
 31834  01AA3C  6EA5               	movwf	165,c	;volatile
 31835                           
 31836                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 31837                           ;stkvar	_timerVal @ sp[(0)+-2]
 31838  01AA3E  0EFE               	movlw	-2
 31839  01AA40  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 31840  01AA46                     l1188:
 31841                           
 31842                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 31843  01AA46  52E5               	movf	postdec1,f,c
 31844  01AA48  52E5               	movf	postdec1,f,c
 31845  01AA4A  0012               	return		;funcret
 31846  01AA4C                     __end_of_TMR3_WriteTimer:
 31847                           	opt callstack 0
 31848                           
 31849 ;; *************** function _TMR3_CallBack *****************
 31850 ;; Defined at:
 31851 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 31852 ;; Parameters:    Size  Location     Type
 31853 ;;		None
 31854 ;; Auto vars:     Size  Location     Type
 31855 ;;		None
 31856 ;; Return value:  Size  Location     Type
 31857 ;;                  1  [STACK] void 
 31858 ;; Registers used:
 31859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 31860 ;; Tracked objects:
 31861 ;;		On entry : 3F/0
 31862 ;;		On exit  : 0/0
 31863 ;;		Unchanged: 0/0
 31864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31869 ;;Total ram usage:        0 bytes
 31870 ;; Hardware stack levels used:    1
 31871 ;; Hardware stack levels required when called:   13
 31872 ;; This function calls:
 31873 ;;		Absolute function
 31874 ;;		_TMR3_DefaultInterruptHandler
 31875 ;;		_calc_bsoc
 31876 ;; This function is called by:
 31877 ;;		_TMR3_ISR
 31878 ;; This function uses a reentrant model
 31879 ;;
 31880                           
 31881                           	psect	text146
 31882  01B110                     __ptext146:
 31883                           	opt callstack 0
 31884  01B110                     _TMR3_CallBack:
 31885                           	opt callstack 3
 31886                           
 31887                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 31888                           
 31889                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31890                           ;incstack = 0
 31891  01B110  0100               	movlb	0	; () banked
 31892  01B112  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 31893  01B114  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 31894  01B116  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 31895  01B118  B4D8               	btfsc	status,2,c
 31896  01B11A  0012               	return	
 31897                           
 31898                           ; BSR set to: 0
 31899                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 31900  01B11C  D801               	call	u1190_28
 31901  01B11E  0012               	return	
 31902  01B120                     u1190_28:
 31903  01B120  0005               	push	
 31904  01B122  6EFA               	movwf	pclath,c
 31905  01B124  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 31906  01B126  6EFD               	movwf	tosl,c
 31907  01B128  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 31908  01B12A  6EFE               	movwf	tosh,c
 31909  01B12C  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 31910  01B12E  6EFF               	movwf	tosu,c
 31911  01B130  50FA               	movf	pclath,w,c
 31912  01B132  0012               	return		;indir
 31913  01B134                     __end_of_TMR3_CallBack:
 31914                           	opt callstack 0
 31915                           
 31916 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 31917 ;; Defined at:
 31918 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 31919 ;; Parameters:    Size  Location     Type
 31920 ;;		None
 31921 ;; Auto vars:     Size  Location     Type
 31922 ;;		None
 31923 ;; Return value:  Size  Location     Type
 31924 ;;                  1  [STACK] void 
 31925 ;; Registers used:
 31926 ;;		None
 31927 ;; Tracked objects:
 31928 ;;		On entry : 3F/0
 31929 ;;		On exit  : 0/0
 31930 ;;		Unchanged: 0/0
 31931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31936 ;;Total ram usage:        0 bytes
 31937 ;; Hardware stack levels used:    1
 31938 ;; Hardware stack levels required when called:    3
 31939 ;; This function calls:
 31940 ;;		Nothing
 31941 ;; This function is called by:
 31942 ;;		_TMR3_Initialize
 31943 ;;		_TMR3_CallBack
 31944 ;; This function uses a reentrant model
 31945 ;;
 31946                           
 31947                           	psect	text147
 31948  01B448                     __ptext147:
 31949                           	opt callstack 0
 31950  01B448                     _TMR3_DefaultInterruptHandler:
 31951                           	opt callstack 12
 31952                           
 31953                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31954                           
 31955                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31956                           ;incstack = 0
 31957  01B448  0012               	return		;funcret
 31958  01B44A                     __end_of_TMR3_DefaultInterruptHandler:
 31959                           	opt callstack 0
 31960                           
 31961 ;; *************** function _calc_bsoc *****************
 31962 ;; Defined at:
 31963 ;;		line 39 in file "bsoc.c"
 31964 ;; Parameters:    Size  Location     Type
 31965 ;;		None
 31966 ;; Auto vars:     Size  Location     Type
 31967 ;;  log_ptr         2  [STACK] PTR unsigned char 
 31968 ;;		 -> port_data(512), 
 31969 ;; Return value:  Size  Location     Type
 31970 ;;                  1  [STACK] void 
 31971 ;; Registers used:
 31972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 31973 ;; Tracked objects:
 31974 ;;		On entry : 3F/0
 31975 ;;		On exit  : 3F/1
 31976 ;;		Unchanged: 0/0
 31977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31982 ;;Total ram usage:        0 bytes
 31983 ;; Hardware stack levels used:    1
 31984 ;; Hardware stack levels required when called:   12
 31985 ;; This function calls:
 31986 ;;		_StartTimer
 31987 ;;		___fladd
 31988 ;;		___fldiv
 31989 ;;		___flge
 31990 ;;		___flmul
 31991 ;;		___flneg
 31992 ;;		___fltol
 31993 ;;		_port_data_dma_ptr
 31994 ;;		_send_port_data_dma
 31995 ;;		_sprintf
 31996 ;;		_strlen
 31997 ;; This function is called by:
 31998 ;;		_init_bsoc
 31999 ;;		_TMR3_CallBack
 32000 ;; This function uses a reentrant model
 32001 ;;
 32002                           
 32003                           	psect	text148
 32004  013EC6                     __ptext148:
 32005                           	opt callstack 0
 32006  013EC6                     _calc_bsoc:
 32007                           	opt callstack 0
 32008                           
 32009                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32010  013EC6  52E6               	movf	postinc1,f,c
 32011  013EC8  52E6               	movf	postinc1,f,c
 32012                           
 32013                           ;incstack = 0
 32014                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 43:  do { LATEbits.LATE1 = 1; } while(0);
 32015  013ECA  82BE               	bsf	190,1,c	;volatile
 32016                           
 32017                           ;bsoc.c: 45:  C.dynamic_ah += (C.c_bat / 3600.0);
 32018  013ECC  0E00               	movlw	0
 32019  013ECE  6EE6               	movwf	postinc1,c
 32020  013ED0  0E00               	movlw	0
 32021  013ED2  6EE6               	movwf	postinc1,c
 32022  013ED4  0E61               	movlw	97
 32023  013ED6  6EE6               	movwf	postinc1,c
 32024  013ED8  0E45               	movlw	69
 32025  013EDA  6EE6               	movwf	postinc1,c
 32026  013EDC  0060  F513  FFE6   	movff	_C+68,postinc1
 32027  013EE2  0060  F517  FFE6   	movff	_C+69,postinc1
 32028  013EE8  0060  F51B  FFE6   	movff	_C+70,postinc1
 32029  013EEE  0060  F51F  FFE6   	movff	_C+71,postinc1
 32030  013EF4  ECB2  F0A2         	call	___fldiv	;wreg free
 32031  013EF8  0060  F007  FFE6   	movff	btemp,postinc1
 32032  013EFE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32033  013F04  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32034  013F0A  0060  F013  FFE6   	movff	btemp+3,postinc1
 32035  013F10  0060  F633  FFE6   	movff	_C+140,postinc1
 32036  013F16  0060  F637  FFE6   	movff	_C+141,postinc1
 32037  013F1C  0060  F63B  FFE6   	movff	_C+142,postinc1
 32038  013F22  0060  F63F  FFE6   	movff	_C+143,postinc1
 32039  013F28  EC85  F09B         	call	___fladd	;wreg free
 32040  013F2C  0060  F004  F18C   	movff	btemp,_C+140	;volatile
 32041  013F32  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
 32042  013F38  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
 32043  013F3E  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
 32044                           
 32045                           ;bsoc.c: 46:  if (C.dynamic_ah > (C.bank_ah))
 32046  013F44  0060  F633  FFE6   	movff	_C+140,postinc1
 32047  013F4A  0060  F637  FFE6   	movff	_C+141,postinc1
 32048  013F50  0060  F63B  FFE6   	movff	_C+142,postinc1
 32049  013F56  0060  F63F  FFE6   	movff	_C+143,postinc1
 32050  013F5C  0060  F623  FFE6   	movff	_C+136,postinc1
 32051  013F62  0060  F627  FFE6   	movff	_C+137,postinc1
 32052  013F68  0060  F62B  FFE6   	movff	_C+138,postinc1
 32053  013F6E  0060  F62F  FFE6   	movff	_C+139,postinc1
 32054  013F74  EC0D  F0C2         	call	___flge	;wreg free
 32055  013F78  B001               	btfsc	btemp& (0+255),0,c
 32056  013F7A  D008               	goto	l12356
 32057                           
 32058                           ;bsoc.c: 47:   C.dynamic_ah = C.bank_ah;
 32059  013F7C  C188  F18C         	movff	_C+136,_C+140	;volatile
 32060  013F80  C189  F18D         	movff	_C+137,_C+141	;volatile
 32061  013F84  C18A  F18E         	movff	_C+138,_C+142	;volatile
 32062  013F88  C18B  F18F         	movff	_C+139,_C+143	;volatile
 32063  013F8C                     l12356:
 32064                           
 32065                           ;bsoc.c: 48:  if (C.dynamic_ah < 0.1)
 32066  013F8C  0ECD               	movlw	205
 32067  013F8E  6EE6               	movwf	postinc1,c
 32068  013F90  0ECC               	movlw	204
 32069  013F92  6EE6               	movwf	postinc1,c
 32070  013F94  0ECC               	movlw	204
 32071  013F96  6EE6               	movwf	postinc1,c
 32072  013F98  0E3D               	movlw	61
 32073  013F9A  6EE6               	movwf	postinc1,c
 32074  013F9C  0060  F633  FFE6   	movff	_C+140,postinc1
 32075  013FA2  0060  F637  FFE6   	movff	_C+141,postinc1
 32076  013FA8  0060  F63B  FFE6   	movff	_C+142,postinc1
 32077  013FAE  0060  F63F  FFE6   	movff	_C+143,postinc1
 32078  013FB4  EC0D  F0C2         	call	___flge	;wreg free
 32079  013FB8  B001               	btfsc	btemp& (0+255),0,c
 32080  013FBA  D009               	goto	l12360
 32081                           
 32082                           ;bsoc.c: 49:   C.dynamic_ah = 0.1;
 32083  013FBC  0ECD               	movlw	205
 32084  013FBE  0101               	movlb	1	; () banked
 32085  013FC0  6F8C               	movwf	(_C+140)& (0+255),b	;volatile
 32086  013FC2  0ECC               	movlw	204
 32087  013FC4  6F8D               	movwf	(_C+141)& (0+255),b	;volatile
 32088  013FC6  0ECC               	movlw	204
 32089  013FC8  6F8E               	movwf	(_C+142)& (0+255),b	;volatile
 32090  013FCA  0E3D               	movlw	61
 32091  013FCC  6F8F               	movwf	(_C+143)& (0+255),b	;volatile
 32092  013FCE                     l12360:
 32093                           
 32094                           ;bsoc.c: 51:  C.pv_ah += (C.c_pv / 3600.0);
 32095  013FCE  0E00               	movlw	0
 32096  013FD0  6EE6               	movwf	postinc1,c
 32097  013FD2  0E00               	movlw	0
 32098  013FD4  6EE6               	movwf	postinc1,c
 32099  013FD6  0E61               	movlw	97
 32100  013FD8  6EE6               	movwf	postinc1,c
 32101  013FDA  0E45               	movlw	69
 32102  013FDC  6EE6               	movwf	postinc1,c
 32103  013FDE  0060  F523  FFE6   	movff	_C+72,postinc1
 32104  013FE4  0060  F527  FFE6   	movff	_C+73,postinc1
 32105  013FEA  0060  F52B  FFE6   	movff	_C+74,postinc1
 32106  013FF0  0060  F52F  FFE6   	movff	_C+75,postinc1
 32107  013FF6  ECB2  F0A2         	call	___fldiv	;wreg free
 32108  013FFA  0060  F007  FFE6   	movff	btemp,postinc1
 32109  014000  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32110  014006  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32111  01400C  0060  F013  FFE6   	movff	btemp+3,postinc1
 32112  014012  0060  F643  FFE6   	movff	_C+144,postinc1
 32113  014018  0060  F647  FFE6   	movff	_C+145,postinc1
 32114  01401E  0060  F64B  FFE6   	movff	_C+146,postinc1
 32115  014024  0060  F64F  FFE6   	movff	_C+147,postinc1
 32116  01402A  EC85  F09B         	call	___fladd	;wreg free
 32117  01402E  0060  F004  F190   	movff	btemp,_C+144	;volatile
 32118  014034  0060  F008  F191   	movff	btemp+1,_C+145	;volatile
 32119  01403A  0060  F00C  F192   	movff	btemp+2,_C+146	;volatile
 32120  014040  0060  F010  F193   	movff	btemp+3,_C+147	;volatile
 32121                           
 32122                           ;bsoc.c: 52:  C.pvkw += (C.p_pv / 3600.0);
 32123  014046  0E00               	movlw	0
 32124  014048  6EE6               	movwf	postinc1,c
 32125  01404A  0E00               	movlw	0
 32126  01404C  6EE6               	movwf	postinc1,c
 32127  01404E  0E61               	movlw	97
 32128  014050  6EE6               	movwf	postinc1,c
 32129  014052  0E45               	movlw	69
 32130  014054  6EE6               	movwf	postinc1,c
 32131  014056  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32132  01405C  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32133  014062  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32134  014068  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32135  01406E  ECB2  F0A2         	call	___fldiv	;wreg free
 32136  014072  0060  F007  FFE6   	movff	btemp,postinc1
 32137  014078  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32138  01407E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32139  014084  0060  F013  FFE6   	movff	btemp+3,postinc1
 32140  01408A  0060  F683  FFE6   	movff	_C+160,postinc1
 32141  014090  0060  F687  FFE6   	movff	_C+161,postinc1
 32142  014096  0060  F68B  FFE6   	movff	_C+162,postinc1
 32143  01409C  0060  F68F  FFE6   	movff	_C+163,postinc1
 32144  0140A2  EC85  F09B         	call	___fladd	;wreg free
 32145  0140A6  0060  F004  F1A0   	movff	btemp,_C+160	;volatile
 32146  0140AC  0060  F008  F1A1   	movff	btemp+1,_C+161	;volatile
 32147  0140B2  0060  F00C  F1A2   	movff	btemp+2,_C+162	;volatile
 32148  0140B8  0060  F010  F1A3   	movff	btemp+3,_C+163	;volatile
 32149                           
 32150                           ;bsoc.c: 53:  C.invkw += (C.p_inverter / 3600.0);
 32151  0140BE  0E00               	movlw	0
 32152  0140C0  6EE6               	movwf	postinc1,c
 32153  0140C2  0E00               	movlw	0
 32154  0140C4  6EE6               	movwf	postinc1,c
 32155  0140C6  0E61               	movlw	97
 32156  0140C8  6EE6               	movwf	postinc1,c
 32157  0140CA  0E45               	movlw	69
 32158  0140CC  6EE6               	movwf	postinc1,c
 32159  0140CE  0060  F5D3  FFE6   	movff	_C+116,postinc1
 32160  0140D4  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32161  0140DA  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32162  0140E0  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32163  0140E6  ECB2  F0A2         	call	___fldiv	;wreg free
 32164  0140EA  0060  F007  FFE6   	movff	btemp,postinc1
 32165  0140F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32166  0140F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32167  0140FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 32168  014102  0060  F693  FFE6   	movff	_C+164,postinc1
 32169  014108  0060  F697  FFE6   	movff	_C+165,postinc1
 32170  01410E  0060  F69B  FFE6   	movff	_C+166,postinc1
 32171  014114  0060  F69F  FFE6   	movff	_C+167,postinc1
 32172  01411A  EC85  F09B         	call	___fladd	;wreg free
 32173  01411E  0060  F004  F1A4   	movff	btemp,_C+164	;volatile
 32174  014124  0060  F008  F1A5   	movff	btemp+1,_C+165	;volatile
 32175  01412A  0060  F00C  F1A6   	movff	btemp+2,_C+166	;volatile
 32176  014130  0060  F010  F1A7   	movff	btemp+3,_C+167	;volatile
 32177                           
 32178                           ;bsoc.c: 54:  if (C.p_bat > 0.0)
 32179  014136  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32180  01413C  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32181  014142  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32182  014148  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32183  01414E  0E00               	movlw	0
 32184  014150  6EE6               	movwf	postinc1,c
 32185  014152  0E00               	movlw	0
 32186  014154  6EE6               	movwf	postinc1,c
 32187  014156  0E00               	movlw	0
 32188  014158  6EE6               	movwf	postinc1,c
 32189  01415A  0E00               	movlw	0
 32190  01415C  6EE6               	movwf	postinc1,c
 32191  01415E  EC0D  F0C2         	call	___flge	;wreg free
 32192  014162  B001               	btfsc	btemp& (0+255),0,c
 32193  014164  D03C               	goto	l12370
 32194                           
 32195                           ;bsoc.c: 55:   C.bkwi += (C.p_bat / 3600.0);
 32196  014166  0E00               	movlw	0
 32197  014168  6EE6               	movwf	postinc1,c
 32198  01416A  0E00               	movlw	0
 32199  01416C  6EE6               	movwf	postinc1,c
 32200  01416E  0E61               	movlw	97
 32201  014170  6EE6               	movwf	postinc1,c
 32202  014172  0E45               	movlw	69
 32203  014174  6EE6               	movwf	postinc1,c
 32204  014176  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32205  01417C  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32206  014182  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32207  014188  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32208  01418E  ECB2  F0A2         	call	___fldiv	;wreg free
 32209  014192  0060  F007  FFE6   	movff	btemp,postinc1
 32210  014198  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32211  01419E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32212  0141A4  0060  F013  FFE6   	movff	btemp+3,postinc1
 32213  0141AA  0060  F663  FFE6   	movff	_C+152,postinc1
 32214  0141B0  0060  F667  FFE6   	movff	_C+153,postinc1
 32215  0141B6  0060  F66B  FFE6   	movff	_C+154,postinc1
 32216  0141BC  0060  F66F  FFE6   	movff	_C+155,postinc1
 32217  0141C2  EC85  F09B         	call	___fladd	;wreg free
 32218  0141C6  0060  F004  F198   	movff	btemp,_C+152	;volatile
 32219  0141CC  0060  F008  F199   	movff	btemp+1,_C+153	;volatile
 32220  0141D2  0060  F00C  F19A   	movff	btemp+2,_C+154	;volatile
 32221  0141D8  0060  F010  F19B   	movff	btemp+3,_C+155	;volatile
 32222  0141DE                     l12370:
 32223                           
 32224                           ;bsoc.c: 56:  if (C.p_bat < 0.0)
 32225  0141DE  0101               	movlb	1	; () banked
 32226  0141E0  AF7F               	btfss	(_C+127)& (0+255),7,b	;volatile
 32227  0141E2  D03C               	goto	l12374
 32228                           
 32229                           ; BSR set to: 1
 32230                           ;bsoc.c: 57:   C.bkwo += (C.p_bat / 3600.0);
 32231  0141E4  0E00               	movlw	0
 32232  0141E6  6EE6               	movwf	postinc1,c
 32233  0141E8  0E00               	movlw	0
 32234  0141EA  6EE6               	movwf	postinc1,c
 32235  0141EC  0E61               	movlw	97
 32236  0141EE  6EE6               	movwf	postinc1,c
 32237  0141F0  0E45               	movlw	69
 32238  0141F2  6EE6               	movwf	postinc1,c
 32239  0141F4  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32240  0141FA  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32241  014200  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32242  014206  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32243  01420C  ECB2  F0A2         	call	___fldiv	;wreg free
 32244  014210  0060  F007  FFE6   	movff	btemp,postinc1
 32245  014216  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32246  01421C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32247  014222  0060  F013  FFE6   	movff	btemp+3,postinc1
 32248  014228  0060  F673  FFE6   	movff	_C+156,postinc1
 32249  01422E  0060  F677  FFE6   	movff	_C+157,postinc1
 32250  014234  0060  F67B  FFE6   	movff	_C+158,postinc1
 32251  01423A  0060  F67F  FFE6   	movff	_C+159,postinc1
 32252  014240  EC85  F09B         	call	___fladd	;wreg free
 32253  014244  0060  F004  F19C   	movff	btemp,_C+156	;volatile
 32254  01424A  0060  F008  F19D   	movff	btemp+1,_C+157	;volatile
 32255  014250  0060  F00C  F19E   	movff	btemp+2,_C+158	;volatile
 32256  014256  0060  F010  F19F   	movff	btemp+3,_C+159	;volatile
 32257  01425C                     l12374:
 32258                           
 32259                           ;bsoc.c: 59:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 32260  01425C  0E00               	movlw	0
 32261  01425E  6EE6               	movwf	postinc1,c
 32262  014260  0E00               	movlw	0
 32263  014262  6EE6               	movwf	postinc1,c
 32264  014264  0EC8               	movlw	200
 32265  014266  6EE6               	movwf	postinc1,c
 32266  014268  0E42               	movlw	66
 32267  01426A  6EE6               	movwf	postinc1,c
 32268  01426C  0060  F623  FFE6   	movff	_C+136,postinc1
 32269  014272  0060  F627  FFE6   	movff	_C+137,postinc1
 32270  014278  0060  F62B  FFE6   	movff	_C+138,postinc1
 32271  01427E  0060  F62F  FFE6   	movff	_C+139,postinc1
 32272  014284  0060  F633  FFE6   	movff	_C+140,postinc1
 32273  01428A  0060  F637  FFE6   	movff	_C+141,postinc1
 32274  014290  0060  F63B  FFE6   	movff	_C+142,postinc1
 32275  014296  0060  F63F  FFE6   	movff	_C+143,postinc1
 32276  01429C  ECB2  F0A2         	call	___fldiv	;wreg free
 32277  0142A0  0060  F007  FFE6   	movff	btemp,postinc1
 32278  0142A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32279  0142AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32280  0142B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 32281  0142B8  EC70  F097         	call	___flmul	;wreg free
 32282  0142BC  0060  F007  FFE6   	movff	btemp,postinc1
 32283  0142C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32284  0142C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32285  0142CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 32286  0142D4  EC9C  F0C0         	call	___fltol	;wreg free
 32287  0142D8  0060  F004  F00B   	movff	btemp,btemp+10
 32288  0142DE  0060  F008  F00C   	movff	btemp+1,btemp+11
 32289  0142E4  0E01               	movlw	1
 32290  0142E6  240B               	addwf	(btemp+10)^0,w,c
 32291  0142E8  0101               	movlb	1	; () banked
 32292  0142EA  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
 32293  0142EC  0E00               	movlw	0
 32294  0142EE  200C               	addwfc	(btemp+11)^0,w,c
 32295  0142F0  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
 32296                           
 32297                           ; BSR set to: 1
 32298                           ;bsoc.c: 60:  if (C.soc > 100)
 32299  0142F2  51AB               	movf	(_C+171)& (0+255),w,b	;volatile
 32300  0142F4  E104               	bnz	u1186_20
 32301  0142F6  0E65               	movlw	101
 32302  0142F8  5DAA               	subwf	(_C+170)& (0+255),w,b	;volatile
 32303  0142FA  A0D8               	btfss	status,0,c
 32304  0142FC  D004               	goto	l12380
 32305  0142FE                     u1186_20:
 32306                           
 32307                           ; BSR set to: 1
 32308                           ;bsoc.c: 61:   C.soc = 100;
 32309  0142FE  0E00               	movlw	0
 32310  014300  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
 32311  014302  0E64               	movlw	100
 32312  014304  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
 32313  014306                     l12380:
 32314                           
 32315                           ; BSR set to: 1
 32316                           ;bsoc.c: 63:  if (C.c_bat < 0.0) {
 32317  014306  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 32318  014308  D043               	goto	l12384
 32319                           
 32320                           ; BSR set to: 1
 32321                           ;bsoc.c: 64:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 32322  01430A  0060  F513  FFE6   	movff	_C+68,postinc1
 32323  014310  0060  F517  FFE6   	movff	_C+69,postinc1
 32324  014316  0060  F51B  FFE6   	movff	_C+70,postinc1
 32325  01431C  0060  F51F  FFE6   	movff	_C+71,postinc1
 32326  014322  0060  F633  FFE6   	movff	_C+140,postinc1
 32327  014328  0060  F637  FFE6   	movff	_C+141,postinc1
 32328  01432E  0060  F63B  FFE6   	movff	_C+142,postinc1
 32329  014334  0060  F63F  FFE6   	movff	_C+143,postinc1
 32330  01433A  ECB2  F0A2         	call	___fldiv	;wreg free
 32331  01433E  0060  F007  FFE6   	movff	btemp,postinc1
 32332  014344  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32333  01434A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32334  014350  0060  F013  FFE6   	movff	btemp+3,postinc1
 32335  014356  EC90  F0D3         	call	___flneg	;wreg free
 32336  01435A  0060  F007  FFE6   	movff	btemp,postinc1
 32337  014360  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32338  014366  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32339  01436C  0060  F013  FFE6   	movff	btemp+3,postinc1
 32340  014372  EC9C  F0C0         	call	___fltol	;wreg free
 32341  014376  0060  F004  F00B   	movff	btemp,btemp+10
 32342  01437C  0060  F008  F00C   	movff	btemp+1,btemp+11
 32343  014382  0060  F02C  F1A8   	movff	btemp+10,_C+168	;volatile
 32344  014388  0060  F030  F1A9   	movff	btemp+11,_C+169	;volatile
 32345                           
 32346                           ;bsoc.c: 65:  } else {
 32347  01438E  D004               	goto	l12386
 32348  014390                     l12384:
 32349                           
 32350                           ; BSR set to: 1
 32351                           ;bsoc.c: 66:   C.runtime = 120;
 32352  014390  0E00               	movlw	0
 32353  014392  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
 32354  014394  0E78               	movlw	120
 32355  014396  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
 32356  014398                     l12386:
 32357                           
 32358                           ;bsoc.c: 68:  if (C.runtime > 120)
 32359  014398  0101               	movlb	1	; () banked
 32360  01439A  51A9               	movf	(_C+169)& (0+255),w,b	;volatile
 32361  01439C  E104               	bnz	u1188_20
 32362  01439E  0E79               	movlw	121
 32363  0143A0  5DA8               	subwf	(_C+168)& (0+255),w,b	;volatile
 32364  0143A2  A0D8               	btfss	status,0,c
 32365  0143A4  D004               	goto	l12390
 32366  0143A6                     u1188_20:
 32367                           
 32368                           ; BSR set to: 1
 32369                           ;bsoc.c: 69:   C.runtime = 120;
 32370  0143A6  0E00               	movlw	0
 32371  0143A8  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
 32372  0143AA  0E78               	movlw	120
 32373  0143AC  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
 32374  0143AE                     l12390:
 32375                           
 32376                           ; BSR set to: 1
 32377                           ;bsoc.c: 71:  V.lowint_count++;
 32378  0143AE  0E01               	movlw	1
 32379  0143B0  0102               	movlb	2	; () banked
 32380  0143B2  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 32381  0143B4  0E00               	movlw	0
 32382  0143B6  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 32383  0143B8  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 32384  0143BA  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 32385                           
 32386                           ; BSR set to: 2
 32387                           ;bsoc.c: 73:  log_ptr = port_data_dma_ptr();
 32388  0143BC  ECE8  F0D9         	call	_port_data_dma_ptr	;wreg free
 32389                           
 32390                           ;stkvar	_log_ptr @ sp[(-2)+0]
 32391  0143C0  0EFF               	movlw	-1
 32392  0143C2  0060  F00B  FFE3   	movff	btemp+1,plusw1
 32393  0143C8  0EFE               	movlw	-2
 32394  0143CA  0060  F007  FFE3   	movff	btemp,plusw1
 32395                           
 32396                           ;bsoc.c: 74:  sprintf((char*) log_ptr, " %lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4.3f,%
      +                          4.3f,%4.3f,%4.3f,%4.3d,%4.3d,%2.6f\r\n",
 32397  0143D0  0060  F613  FFE6   	movff	_C+132,postinc1
 32398  0143D6  0060  F617  FFE6   	movff	_C+133,postinc1
 32399  0143DC  0060  F61B  FFE6   	movff	_C+134,postinc1
 32400  0143E2  0060  F61F  FFE6   	movff	_C+135,postinc1
 32401  0143E8  0060  F6A3  FFE6   	movff	_C+168,postinc1
 32402  0143EE  0060  F6A7  FFE6   	movff	_C+169,postinc1
 32403  0143F4  0060  F6AB  FFE6   	movff	_C+170,postinc1
 32404  0143FA  0060  F6AF  FFE6   	movff	_C+171,postinc1
 32405  014400  0060  F643  FFE6   	movff	_C+144,postinc1
 32406  014406  0060  F647  FFE6   	movff	_C+145,postinc1
 32407  01440C  0060  F64B  FFE6   	movff	_C+146,postinc1
 32408  014412  0060  F64F  FFE6   	movff	_C+147,postinc1
 32409  014418  0060  F633  FFE6   	movff	_C+140,postinc1
 32410  01441E  0060  F637  FFE6   	movff	_C+141,postinc1
 32411  014424  0060  F63B  FFE6   	movff	_C+142,postinc1
 32412  01442A  0060  F63F  FFE6   	movff	_C+143,postinc1
 32413  014430  0060  F5D3  FFE6   	movff	_C+116,postinc1
 32414  014436  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32415  01443C  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32416  014442  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32417  014448  0060  F5C3  FFE6   	movff	_C+112,postinc1
 32418  01444E  0060  F5C7  FFE6   	movff	_C+113,postinc1
 32419  014454  0060  F5CB  FFE6   	movff	_C+114,postinc1
 32420  01445A  0060  F5CF  FFE6   	movff	_C+115,postinc1
 32421  014460  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32422  014466  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32423  01446C  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32424  014472  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32425  014478  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32426  01447E  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32427  014484  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32428  01448A  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32429  014490  0060  F593  FFE6   	movff	_C+100,postinc1
 32430  014496  0060  F597  FFE6   	movff	_C+101,postinc1
 32431  01449C  0060  F59B  FFE6   	movff	_C+102,postinc1
 32432  0144A2  0060  F59F  FFE6   	movff	_C+103,postinc1
 32433  0144A8  0060  F533  FFE6   	movff	_C+76,postinc1
 32434  0144AE  0060  F537  FFE6   	movff	_C+77,postinc1
 32435  0144B4  0060  F53B  FFE6   	movff	_C+78,postinc1
 32436  0144BA  0060  F53F  FFE6   	movff	_C+79,postinc1
 32437  0144C0  0060  F543  FFE6   	movff	_C+80,postinc1
 32438  0144C6  0060  F547  FFE6   	movff	_C+81,postinc1
 32439  0144CC  0060  F54B  FFE6   	movff	_C+82,postinc1
 32440  0144D2  0060  F54F  FFE6   	movff	_C+83,postinc1
 32441  0144D8  0060  F553  FFE6   	movff	_C+84,postinc1
 32442  0144DE  0060  F557  FFE6   	movff	_C+85,postinc1
 32443  0144E4  0060  F55B  FFE6   	movff	_C+86,postinc1
 32444  0144EA  0060  F55F  FFE6   	movff	_C+87,postinc1
 32445  0144F0  0060  FA07  FFE6   	movff	_V+129,postinc1
 32446  0144F6  0060  FA0B  FFE6   	movff	_V+130,postinc1
 32447  0144FC  0060  FA0F  FFE6   	movff	_V+131,postinc1
 32448  014502  0060  FA13  FFE6   	movff	_V+132,postinc1
 32449  014508  0E15               	movlw	low STR_56
 32450  01450A  6EE6               	movwf	postinc1,c
 32451  01450C  0EFD               	movlw	high STR_56
 32452  01450E  6EE6               	movwf	postinc1,c
 32453                           
 32454                           ;stkvar	_log_ptr @ sp[(-56)+0]
 32455  014510  0EC8               	movlw	-56
 32456  014512  006F FF8F FFE6     	movff	plusw1,postinc1
 32457  014518  006F FF8F FFE6     	movff	plusw1,postinc1
 32458  01451E  0E38               	movlw	56
 32459  014520  6EE6               	movwf	postinc1,c
 32460  014522  ECA2  F0C8         	call	_sprintf	;wreg free
 32461                           
 32462                           ; BSR set to: 0
 32463                           ;bsoc.c: 80:  StartTimer(TMR_DISPLAY, 125);
 32464  014526  0E7D               	movlw	125
 32465  014528  6EE6               	movwf	postinc1,c
 32466  01452A  0E00               	movlw	0
 32467  01452C  6EE6               	movwf	postinc1,c
 32468  01452E  0E0A               	movlw	10
 32469  014530  6EE6               	movwf	postinc1,c
 32470  014532  ECA6  F0D4         	call	_StartTimer	;wreg free
 32471                           
 32472                           ;bsoc.c: 81:  send_port_data_dma(strlen((char*) log_ptr));
 32473                           ;stkvar	_log_ptr @ sp[(-2)+0]
 32474  014536  0EFE               	movlw	-2
 32475  014538  006F FF8F FFE6     	movff	plusw1,postinc1
 32476  01453E  006F FF8F FFE6     	movff	plusw1,postinc1
 32477  014544  ECE5  F0CD         	call	_strlen	;wreg free
 32478  014548  0060  F007  FFE6   	movff	btemp,postinc1
 32479  01454E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32480  014554  EC1B  F0D3         	call	_send_port_data_dma	;wreg free
 32481                           
 32482                           ; BSR set to: 59
 32483                           ;bsoc.c: 82:  C.update = 0;
 32484  014558  0101               	movlb	1	; () banked
 32485  01455A  6BAC               	clrf	(_C+172)& (0+255),b	;volatile
 32486                           
 32487                           ; BSR set to: 1
 32488  01455C  92BE               	bcf	190,1,c	;volatile
 32489                           
 32490                           ; BSR set to: 1
 32491                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 32492  01455E  52E5               	movf	postdec1,f,c
 32493  014560  52E5               	movf	postdec1,f,c
 32494  014562  0012               	return		;funcret
 32495  014564                     __end_of_calc_bsoc:
 32496                           	opt callstack 0
 32497                           
 32498 ;; *************** function _send_port_data_dma *****************
 32499 ;; Defined at:
 32500 ;;		line 258 in file "eadog.c"
 32501 ;; Parameters:    Size  Location     Type
 32502 ;;  dsize           2  [STACK] unsigned short 
 32503 ;; Auto vars:     Size  Location     Type
 32504 ;;		None
 32505 ;; Return value:  Size  Location     Type
 32506 ;;                  1  [STACK] void 
 32507 ;; Registers used:
 32508 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 32509 ;; Tracked objects:
 32510 ;;		On entry : 0/0
 32511 ;;		On exit  : 3F/3B
 32512 ;;		Unchanged: 0/0
 32513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32518 ;;Total ram usage:        0 bytes
 32519 ;; Hardware stack levels used:    1
 32520 ;; Hardware stack levels required when called:    3
 32521 ;; This function calls:
 32522 ;;		Nothing
 32523 ;; This function is called by:
 32524 ;;		_calc_bsoc
 32525 ;; This function uses a reentrant model
 32526 ;;
 32527                           
 32528                           	psect	text149
 32529  01A636                     __ptext149:
 32530                           	opt callstack 0
 32531  01A636                     _send_port_data_dma:
 32532                           	opt callstack 11
 32533                           
 32534                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 32535                           ;stkvar	_dsize @ sp[(0)+-2]
 32536                           
 32537                           ; BSR set to: 1
 32538                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32539                           ;incstack = 0
 32540  01A636  0EFE               	movlw	-2
 32541  01A638  04E3               	decf	plusw1,w,c
 32542  01A63A  0EFF               	movlw	-1
 32543  01A63C  006F FF8C  F001    	movff	plusw1,btemp
 32544  01A642  0E02               	movlw	2
 32545  01A644  5A01               	subwfb	btemp^0,f,c
 32546  01A646  A0D8               	btfss	status,0,c
 32547  01A648  D00C               	goto	l9530
 32548                           
 32549                           ;eadog.c: 261:   dsize = 512;
 32550  01A64A  0E00               	movlw	0
 32551  01A64C  6E0B               	movwf	(btemp+10)^0,c
 32552  01A64E  0E02               	movlw	2
 32553  01A650  6E0C               	movwf	(btemp+11)^0,c
 32554                           
 32555                           ;stkvar	_dsize @ sp[(0)+-2]
 32556  01A652  0EFE               	movlw	-2
 32557  01A654  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32558  01A65A  0EFF               	movlw	-1
 32559  01A65C  0060  F033  FFE3   	movff	btemp+11,plusw1
 32560  01A662                     l9530:
 32561                           
 32562                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 32563  01A662  013B               	movlb	59	; () banked
 32564  01A664  9FDC               	bcf	220,7,b	;volatile
 32565                           
 32566                           ; BSR set to: 59
 32567                           ;eadog.c: 264:  DMA2SSZ = dsize;
 32568                           ;stkvar	_dsize @ sp[(0)+-2]
 32569  01A666  0EFE               	movlw	-2
 32570  01A668  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 32571  01A66E  0EFF               	movlw	-1
 32572  01A670  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 32573                           
 32574                           ; BSR set to: 59
 32575                           ;eadog.c: 265:  DMA2DSZ = 1;
 32576  01A676  0E00               	movlw	0
 32577  01A678  6FCF               	movwf	207,b	;volatile
 32578  01A67A  0E01               	movlw	1
 32579  01A67C  6FCE               	movwf	206,b	;volatile
 32580                           
 32581                           ; BSR set to: 59
 32582                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 32583  01A67E  8FDC               	bsf	220,7,b	;volatile
 32584                           
 32585                           ; BSR set to: 59
 32586                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 32587  01A680  8DDC               	bsf	220,6,b	;volatile
 32588                           
 32589                           ; BSR set to: 59
 32590                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 32591  01A682  52E5               	movf	postdec1,f,c
 32592  01A684  52E5               	movf	postdec1,f,c
 32593  01A686  0012               	return		;funcret
 32594  01A688                     __end_of_send_port_data_dma:
 32595                           	opt callstack 0
 32596                           
 32597 ;; *************** function _port_data_dma_ptr *****************
 32598 ;; Defined at:
 32599 ;;		line 273 in file "eadog.c"
 32600 ;; Parameters:    Size  Location     Type
 32601 ;;		None
 32602 ;; Auto vars:     Size  Location     Type
 32603 ;;		None
 32604 ;; Return value:  Size  Location     Type
 32605 ;;                  2  [STACK] PTR unsigned char 
 32606 ;; Registers used:
 32607 ;;		wreg, status,2, status,0, btemp, btemp+1
 32608 ;; Tracked objects:
 32609 ;;		On entry : 3F/2
 32610 ;;		On exit  : 0/0
 32611 ;;		Unchanged: 0/0
 32612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32617 ;;Total ram usage:        0 bytes
 32618 ;; Hardware stack levels used:    1
 32619 ;; Hardware stack levels required when called:    3
 32620 ;; This function calls:
 32621 ;;		Nothing
 32622 ;; This function is called by:
 32623 ;;		_calc_bsoc
 32624 ;; This function uses a reentrant model
 32625 ;;
 32626                           
 32627                           	psect	text150
 32628  01B3D0                     __ptext150:
 32629                           	opt callstack 0
 32630  01B3D0                     _port_data_dma_ptr:
 32631                           	opt callstack 11
 32632                           
 32633                           ;eadog.c: 275:  return port_data;
 32634                           
 32635                           ; BSR set to: 59
 32636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32637                           ;incstack = 0
 32638  01B3D0  0EFF               	movlw	low _port_data
 32639  01B3D2  6E01               	movwf	btemp^0,c
 32640  01B3D4  0E05               	movlw	high _port_data
 32641  01B3D6  6E02               	movwf	(btemp+1)^0,c
 32642                           
 32643                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32644  01B3D8  0012               	return		;funcret
 32645  01B3DA                     __end_of_port_data_dma_ptr:
 32646                           	opt callstack 0
 32647                           
 32648 ;; *************** function _INT0_ISR *****************
 32649 ;; Defined at:
 32650 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 32651 ;; Parameters:    Size  Location     Type
 32652 ;;		None
 32653 ;; Auto vars:     Size  Location     Type
 32654 ;;		None
 32655 ;; Return value:  Size  Location     Type
 32656 ;;                  1    wreg      void 
 32657 ;; Registers used:
 32658 ;;		wreg, status,2, status,0, pclath, tosl
 32659 ;; Tracked objects:
 32660 ;;		On entry : 0/0
 32661 ;;		On exit  : 0/0
 32662 ;;		Unchanged: 0/0
 32663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32668 ;;Total ram usage:        0 bytes
 32669 ;; Hardware stack levels used:    1
 32670 ;; Hardware stack levels required when called:    2
 32671 ;; This function calls:
 32672 ;;		_INT0_CallBack
 32673 ;; This function is called by:
 32674 ;;		Interrupt level 2
 32675 ;; This function uses a non-reentrant model
 32676 ;;
 32677                           
 32678                           	psect	text151
 32679  01B3A8                     __ptext151:
 32680                           	opt callstack 0
 32681  01B3A8                     _INT0_ISR:
 32682                           	opt callstack 3
 32683                           
 32684                           ;incstack = 0
 32685  01B3A8  EE14  F0C2         	lfsr	1,___inthi_sp
 32686                           
 32687                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 32688  01B3AC  0139               	movlb	57	; () banked
 32689  01B3AE  91A1               	bcf	161,0,b	;volatile
 32690                           
 32691                           ; BSR set to: 57
 32692                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 32693  01B3B0  EC9A  F0D8         	call	_INT0_CallBack	;wreg free
 32694  01B3B4  0011               	retfie		f
 32695  01B3B6                     __end_of_INT0_ISR:
 32696                           	opt callstack 0
 32697                           
 32698 ;; *************** function _INT0_CallBack *****************
 32699 ;; Defined at:
 32700 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 32701 ;; Parameters:    Size  Location     Type
 32702 ;;		None
 32703 ;; Auto vars:     Size  Location     Type
 32704 ;;		None
 32705 ;; Return value:  Size  Location     Type
 32706 ;;                  1  [STACK] void 
 32707 ;; Registers used:
 32708 ;;		wreg, status,2, status,0, pclath, tosl
 32709 ;; Tracked objects:
 32710 ;;		On entry : 3F/39
 32711 ;;		On exit  : 0/0
 32712 ;;		Unchanged: 0/0
 32713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32718 ;;Total ram usage:        0 bytes
 32719 ;; Hardware stack levels used:    1
 32720 ;; Hardware stack levels required when called:    1
 32721 ;; This function calls:
 32722 ;;		Absolute function
 32723 ;;		_INT0_DefaultInterruptHandler
 32724 ;; This function is called by:
 32725 ;;		_INT0_ISR
 32726 ;; This function uses a reentrant model
 32727 ;;
 32728                           
 32729                           	psect	text152
 32730  01B134                     __ptext152:
 32731                           	opt callstack 0
 32732  01B134                     _INT0_CallBack:
 32733                           	opt callstack 3
 32734                           
 32735                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 32736                           
 32737                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32738                           ;incstack = 0
 32739  01B134  0100               	movlb	0	; () banked
 32740  01B136  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 32741  01B138  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 32742  01B13A  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 32743  01B13C  B4D8               	btfsc	status,2,c
 32744  01B13E  0012               	return	
 32745                           
 32746                           ; BSR set to: 0
 32747                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 32748  01B140  D801               	call	u952_48
 32749  01B142  0012               	return	
 32750  01B144                     u952_48:
 32751  01B144  0005               	push	
 32752  01B146  6EFA               	movwf	pclath,c
 32753  01B148  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 32754  01B14A  6EFD               	movwf	tosl,c
 32755  01B14C  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 32756  01B14E  6EFE               	movwf	tosh,c
 32757  01B150  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 32758  01B152  6EFF               	movwf	tosu,c
 32759  01B154  50FA               	movf	pclath,w,c
 32760  01B156  0012               	return		;indir
 32761  01B158                     __end_of_INT0_CallBack:
 32762                           	opt callstack 0
 32763                           
 32764 ;; *************** function _INT0_DefaultInterruptHandler *****************
 32765 ;; Defined at:
 32766 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 32767 ;; Parameters:    Size  Location     Type
 32768 ;;		None
 32769 ;; Auto vars:     Size  Location     Type
 32770 ;;		None
 32771 ;; Return value:  Size  Location     Type
 32772 ;;                  1  [STACK] void 
 32773 ;; Registers used:
 32774 ;;		None
 32775 ;; Tracked objects:
 32776 ;;		On entry : 3F/0
 32777 ;;		On exit  : 0/0
 32778 ;;		Unchanged: 0/0
 32779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32784 ;;Total ram usage:        0 bytes
 32785 ;; Hardware stack levels used:    1
 32786 ;; This function calls:
 32787 ;;		Nothing
 32788 ;; This function is called by:
 32789 ;;		_EXT_INT_Initialize
 32790 ;;		_INT0_CallBack
 32791 ;; This function uses a reentrant model
 32792 ;;
 32793                           
 32794                           	psect	text153
 32795  01B44A                     __ptext153:
 32796                           	opt callstack 0
 32797  01B44A                     _INT0_DefaultInterruptHandler:
 32798                           	opt callstack 3
 32799                           
 32800                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32801                           
 32802                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32803                           ;incstack = 0
 32804  01B44A  0012               	return		;funcret
 32805  01B44C                     __end_of_INT0_DefaultInterruptHandler:
 32806                           	opt callstack 0
 32807                           
 32808 ;; *************** function _Default_ISR *****************
 32809 ;; Defined at:
 32810 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 32811 ;; Parameters:    Size  Location     Type
 32812 ;;		None
 32813 ;; Auto vars:     Size  Location     Type
 32814 ;;		None
 32815 ;; Return value:  Size  Location     Type
 32816 ;;                  1    wreg      void 
 32817 ;; Registers used:
 32818 ;;		None
 32819 ;; Tracked objects:
 32820 ;;		On entry : 0/0
 32821 ;;		On exit  : 0/0
 32822 ;;		Unchanged: 0/0
 32823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32828 ;;Total ram usage:        0 bytes
 32829 ;; Hardware stack levels used:    1
 32830 ;; This function calls:
 32831 ;;		Nothing
 32832 ;; This function is called by:
 32833 ;;		Interrupt level 2
 32834 ;; This function uses a non-reentrant model
 32835 ;;
 32836                           
 32837                           	psect	text154
 32838  01B440                     __ptext154:
 32839                           	opt callstack 0
 32840  01B440                     _Default_ISR:
 32841                           	opt callstack 5
 32842                           
 32843                           ;incstack = 0
 32844  01B440  EE14  F0C2         	lfsr	1,___inthi_sp
 32845  01B444  0011               	retfie		f
 32846  01B446                     __end_of_Default_ISR:
 32847                           	opt callstack 0
 32848                           
 32849 ;; *************** function _ADCC_ISR *****************
 32850 ;; Defined at:
 32851 ;;		line 314 in file "mcc_generated_files/adcc.c"
 32852 ;; Parameters:    Size  Location     Type
 32853 ;;		None
 32854 ;; Auto vars:     Size  Location     Type
 32855 ;;		None
 32856 ;; Return value:  Size  Location     Type
 32857 ;;                  1    wreg      void 
 32858 ;; Registers used:
 32859 ;;		wreg, status,2, status,0, pclath, tosl
 32860 ;; Tracked objects:
 32861 ;;		On entry : 0/0
 32862 ;;		On exit  : 0/0
 32863 ;;		Unchanged: 0/0
 32864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32869 ;;Total ram usage:        0 bytes
 32870 ;; Hardware stack levels used:    1
 32871 ;; Hardware stack levels required when called:    1
 32872 ;; This function calls:
 32873 ;;		Absolute function
 32874 ;;		_ADCC_DefaultInterruptHandler
 32875 ;;		_adc_int_handler
 32876 ;; This function is called by:
 32877 ;;		Interrupt level 2
 32878 ;; This function uses a non-reentrant model
 32879 ;;
 32880                           
 32881                           	psect	text155
 32882  01AD54                     __ptext155:
 32883                           	opt callstack 0
 32884  01AD54                     _ADCC_ISR:
 32885                           	opt callstack 4
 32886                           
 32887                           ;incstack = 0
 32888  01AD54  EE14  F0C2         	lfsr	1,___inthi_sp
 32889                           
 32890                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 32891  01AD58  0139               	movlb	57	; () banked
 32892  01AD5A  95A1               	bcf	161,2,b	;volatile
 32893                           
 32894                           ; BSR set to: 57
 32895                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 32896  01AD5C  0100               	movlb	0	; () banked
 32897  01AD5E  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 32898  01AD60  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 32899  01AD62  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 32900  01AD64  B4D8               	btfsc	status,2,c
 32901  01AD66  0011               	retfie		f
 32902                           
 32903                           ; BSR set to: 0
 32904                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 32905  01AD68  D801               	call	i2u997_48
 32906  01AD6A  0011               	retfie		f
 32907  01AD6C                     i2u997_48:
 32908  01AD6C  0005               	push	
 32909  01AD6E  6EFA               	movwf	pclath,c
 32910  01AD70  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 32911  01AD72  6EFD               	movwf	tosl,c
 32912  01AD74  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 32913  01AD76  6EFE               	movwf	tosh,c
 32914  01AD78  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 32915  01AD7A  6EFF               	movwf	tosu,c
 32916  01AD7C  50FA               	movf	pclath,w,c
 32917  01AD7E  0012               	return		;indir
 32918  01AD80                     __end_of_ADCC_ISR:
 32919                           	opt callstack 0
 32920                           
 32921 ;; *************** function _adc_int_t_handler *****************
 32922 ;; Defined at:
 32923 ;;		line 143 in file "daq.c"
 32924 ;; Parameters:    Size  Location     Type
 32925 ;;		None
 32926 ;; Auto vars:     Size  Location     Type
 32927 ;;		None
 32928 ;; Return value:  Size  Location     Type
 32929 ;;                  1  [STACK] void 
 32930 ;; Registers used:
 32931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 32932 ;; Tracked objects:
 32933 ;;		On entry : 3F/0
 32934 ;;		On exit  : 1/0
 32935 ;;		Unchanged: 0/0
 32936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32941 ;;Total ram usage:        0 bytes
 32942 ;; Hardware stack levels used:    1
 32943 ;; Hardware stack levels required when called:    1
 32944 ;; This function calls:
 32945 ;;		_ADCC_DischargeSampleCapacitor
 32946 ;;		_ADCC_StartConversion
 32947 ;; This function is called by:
 32948 ;;		_start_adc_scan
 32949 ;;		_ADCC_ThresholdISR
 32950 ;; This function uses a reentrant model
 32951 ;;
 32952                           
 32953                           	psect	text156
 32954  01A0DA                     __ptext156:
 32955                           	opt callstack 0
 32956  01A0DA                     _adc_int_t_handler:
 32957                           	opt callstack 3
 32958                           
 32959                           ;daq.c: 148:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 32960                           
 32961                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32962                           ;incstack = 0
 32963  01A0DA  013E               	movlb	62	; () banked
 32964  01A0DC  51E6               	movf	230,w,b	;volatile
 32965  01A0DE  006F FB9C  F001    	movff	16103,btemp	;volatile
 32966  01A0E4  6A02               	clrf	(btemp+1)^0,c
 32967  01A0E6  0060  F004  F002   	movff	btemp,btemp+1
 32968  01A0EC  6A01               	clrf	btemp^0,c
 32969  01A0EE  2601               	addwf	btemp^0,f,c
 32970  01A0F0  0E00               	movlw	0
 32971  01A0F2  2202               	addwfc	(btemp+1)^0,f,c
 32972  01A0F4  0100               	movlb	0	; () banked
 32973  01A0F6  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
 32974  01A0F8  0D02               	mullw	2
 32975  01A0FA  50F3               	movf	243,w,c
 32976  01A0FC  0FC4               	addlw	low _R
 32977  01A0FE  6ED9               	movwf	fsr2l,c
 32978  01A100  6ADA               	clrf	fsr2h,c
 32979  01A102  0060  F007  FFDE   	movff	btemp,postinc2
 32980  01A108  0060  F00B  FFDD   	movff	btemp+1,postdec2
 32981  01A10E                     l10820:
 32982                           
 32983                           ;daq.c: 150:   if (++R.scan_index > 0XD) {
 32984  01A10E  0100               	movlb	0	; () banked
 32985  01A110  2BE8               	incf	(_R+36)& (0+255),f,b	;volatile
 32986  01A112  0E0D               	movlw	13
 32987  01A114  65E8               	cpfsgt	(_R+36)& (0+255),b	;volatile
 32988  01A116  D003               	goto	l10826
 32989                           
 32990                           ; BSR set to: 0
 32991                           ;daq.c: 151:    R.done = 1;
 32992  01A118  0E01               	movlw	1
 32993  01A11A  6FEB               	movwf	(_R+39)& (0+255),b	;volatile
 32994  01A11C  0012               	return	
 32995  01A11E                     l10826:
 32996                           
 32997                           ; BSR set to: 0
 32998                           ;daq.c: 157:  } while (!((R.scan_select >> R.scan_index) &0x1));
 32999  01A11E  0060  F3A0  F00C   	movff	_R+36,btemp+11	;volatile
 33000  01A124  EE20  F0E9         	lfsr	2,_R+37	;volatile
 33001  01A128  006F FF78  F009    	movff	postinc2,btemp+8
 33002  01A12E  006F FF74  F00A    	movff	postdec2,btemp+9
 33003  01A134  2A0C               	incf	(btemp+11)^0,f,c
 33004  01A136  D003               	goto	u994_44
 33005  01A138                     u994_45:
 33006  01A138  90D8               	bcf	status,0,c
 33007  01A13A  320A               	rrcf	(btemp+9)^0,f,c
 33008  01A13C  3209               	rrcf	(btemp+8)^0,f,c
 33009  01A13E                     u994_44:
 33010  01A13E  2E0C               	decfsz	(btemp+11)^0,f,c
 33011  01A140  D7FB               	goto	u994_45
 33012  01A142  A009               	btfss	(btemp+8)^0,0,c
 33013  01A144  D7E4               	goto	l10820
 33014                           
 33015                           ;daq.c: 158:  ADCC_DischargeSampleCapacitor();
 33016  01A146  ECFF  F0D9         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 33017                           
 33018                           ; BSR set to: 62
 33019                           ;daq.c: 159:  ADCC_StartConversion(R.scan_index & 0xf);
 33020  01A14A  0100               	movlb	0	; () banked
 33021  01A14C  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
 33022  01A14E  0B0F               	andlw	15
 33023  01A150  6EE6               	movwf	postinc1,c
 33024  01A152  ECA4  F0D9         	call	_ADCC_StartConversion	;wreg free
 33025                           
 33026                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33027  01A156  0012               	return		;funcret
 33028  01A158                     __end_of_adc_int_t_handler:
 33029                           	opt callstack 0
 33030                           
 33031 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 33032 ;; Defined at:
 33033 ;;		line 339 in file "mcc_generated_files/adcc.c"
 33034 ;; Parameters:    Size  Location     Type
 33035 ;;		None
 33036 ;; Auto vars:     Size  Location     Type
 33037 ;;		None
 33038 ;; Return value:  Size  Location     Type
 33039 ;;                  1  [STACK] void 
 33040 ;; Registers used:
 33041 ;;		None
 33042 ;; Tracked objects:
 33043 ;;		On entry : 3F/0
 33044 ;;		On exit  : 0/0
 33045 ;;		Unchanged: 0/0
 33046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33051 ;;Total ram usage:        0 bytes
 33052 ;; Hardware stack levels used:    1
 33053 ;; This function calls:
 33054 ;;		Nothing
 33055 ;; This function is called by:
 33056 ;;		_ADCC_Initialize
 33057 ;;		_ADCC_ISR
 33058 ;;		_ADCC_ThresholdISR
 33059 ;; This function uses a reentrant model
 33060 ;;
 33061                           
 33062                           	psect	text157
 33063  01B44C                     __ptext157:
 33064                           	opt callstack 0
 33065  01B44C                     _ADCC_DefaultInterruptHandler:
 33066                           	opt callstack 4
 33067                           
 33068                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33069                           
 33070                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33071                           ;incstack = 0
 33072  01B44C  0012               	return		;funcret
 33073  01B44E                     __end_of_ADCC_DefaultInterruptHandler:
 33074                           	opt callstack 0
 33075                           
 33076 ;; *************** function _adc_int_handler *****************
 33077 ;; Defined at:
 33078 ;;		line 133 in file "daq.c"
 33079 ;; Parameters:    Size  Location     Type
 33080 ;;		None
 33081 ;; Auto vars:     Size  Location     Type
 33082 ;;		None
 33083 ;; Return value:  Size  Location     Type
 33084 ;;                  1  [STACK] void 
 33085 ;; Registers used:
 33086 ;;		None
 33087 ;; Tracked objects:
 33088 ;;		On entry : 3F/0
 33089 ;;		On exit  : 0/0
 33090 ;;		Unchanged: 0/0
 33091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33096 ;;Total ram usage:        0 bytes
 33097 ;; Hardware stack levels used:    1
 33098 ;; This function calls:
 33099 ;;		Nothing
 33100 ;; This function is called by:
 33101 ;;		_start_adc_scan
 33102 ;;		_ADCC_ISR
 33103 ;; This function uses a reentrant model
 33104 ;;
 33105                           
 33106                           	psect	text158
 33107  01B44E                     __ptext158:
 33108                           	opt callstack 0
 33109  01B44E                     _adc_int_handler:
 33110                           	opt callstack 4
 33111                           
 33112                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33113                           
 33114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33115                           ;incstack = 0
 33116  01B44E  0012               	return		;funcret
 33117  01B450                     __end_of_adc_int_handler:
 33118                           	opt callstack 0
 33119                           
 33120 ;; *************** function _ADCC_ThresholdISR *****************
 33121 ;; Defined at:
 33122 ;;		line 327 in file "mcc_generated_files/adcc.c"
 33123 ;; Parameters:    Size  Location     Type
 33124 ;;		None
 33125 ;; Auto vars:     Size  Location     Type
 33126 ;;		None
 33127 ;; Return value:  Size  Location     Type
 33128 ;;                  1    wreg      void 
 33129 ;; Registers used:
 33130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 33131 ;; Tracked objects:
 33132 ;;		On entry : 0/0
 33133 ;;		On exit  : 0/0
 33134 ;;		Unchanged: 0/0
 33135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33138 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33139 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33140 ;;Total ram usage:        5 bytes
 33141 ;; Hardware stack levels used:    1
 33142 ;; Hardware stack levels required when called:    2
 33143 ;; This function calls:
 33144 ;;		Absolute function
 33145 ;;		_ADCC_DefaultInterruptHandler
 33146 ;;		_adc_int_t_handler
 33147 ;; This function is called by:
 33148 ;;		Interrupt level 2
 33149 ;; This function uses a non-reentrant model
 33150 ;;
 33151                           
 33152                           	psect	text159
 33153  01A22C                     __ptext159:
 33154                           	opt callstack 0
 33155  01A22C                     _ADCC_ThresholdISR:
 33156                           	opt callstack 3
 33157                           
 33158                           ;incstack = 0
 33159  01A22C  0060  F004  F039   	movff	btemp,??_ADCC_ThresholdISR
 33160  01A232  0060  F008  F03A   	movff	btemp+1,??_ADCC_ThresholdISR+1
 33161  01A238  0060  F024  F03B   	movff	btemp+8,??_ADCC_ThresholdISR+2
 33162  01A23E  0060  F028  F03C   	movff	btemp+9,??_ADCC_ThresholdISR+3
 33163  01A244  0060  F030  F03D   	movff	btemp+11,??_ADCC_ThresholdISR+4
 33164  01A24A  EE14  F0C2         	lfsr	1,___inthi_sp
 33165                           
 33166                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 33167  01A24E  0139               	movlb	57	; () banked
 33168  01A250  97A1               	bcf	161,3,b	;volatile
 33169                           
 33170                           ; BSR set to: 57
 33171                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 33172  01A252  0100               	movlb	0	; () banked
 33173  01A254  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33174  01A256  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33175  01A258  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33176  01A25A  B4D8               	btfsc	status,2,c
 33177  01A25C  D00C               	goto	i2u999_49
 33178                           
 33179                           ; BSR set to: 0
 33180                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 33181  01A25E  D801               	call	i2u999_48
 33182  01A260  D00A               	goto	i2u999_49
 33183  01A262                     i2u999_48:
 33184  01A262  0005               	push	
 33185  01A264  6EFA               	movwf	pclath,c
 33186  01A266  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33187  01A268  6EFD               	movwf	tosl,c
 33188  01A26A  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33189  01A26C  6EFE               	movwf	tosh,c
 33190  01A26E  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33191  01A270  6EFF               	movwf	tosu,c
 33192  01A272  50FA               	movf	pclath,w,c
 33193  01A274  0012               	return		;indir
 33194  01A276                     i2u999_49:
 33195  01A276  0060  F0F4  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 33196  01A27C  0060  F0F0  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 33197  01A282  0060  F0EC  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 33198  01A288  0060  F0E8  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 33199  01A28E  0060  F0E4  F001   	movff	??_ADCC_ThresholdISR,btemp
 33200  01A294  0011               	retfie		f
 33201  01A296                     __end_of_ADCC_ThresholdISR:
 33202                           	opt callstack 0
 33203                           
 33204 ;; *************** function _UART1_rx_vect_isr *****************
 33205 ;; Defined at:
 33206 ;;		line 181 in file "mcc_generated_files/uart1.c"
 33207 ;; Parameters:    Size  Location     Type
 33208 ;;		None
 33209 ;; Auto vars:     Size  Location     Type
 33210 ;;		None
 33211 ;; Return value:  Size  Location     Type
 33212 ;;                  1    wreg      void 
 33213 ;; Registers used:
 33214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33215 ;; Tracked objects:
 33216 ;;		On entry : 0/0
 33217 ;;		On exit  : 0/0
 33218 ;;		Unchanged: 0/0
 33219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33224 ;;Total ram usage:        0 bytes
 33225 ;; Hardware stack levels used:    1
 33226 ;; Hardware stack levels required when called:    1
 33227 ;; This function calls:
 33228 ;;		Absolute function
 33229 ;;		_UART1_Receive_ISR
 33230 ;; This function is called by:
 33231 ;;		Interrupt level 2
 33232 ;; This function uses a non-reentrant model
 33233 ;;
 33234                           
 33235                           	psect	text160
 33236  01B008                     __ptext160:
 33237                           	opt callstack 0
 33238  01B008                     _UART1_rx_vect_isr:
 33239                           	opt callstack 4
 33240                           
 33241                           ;incstack = 0
 33242  01B008  EE14  F0C2         	lfsr	1,___inthi_sp
 33243                           
 33244                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 33245  01B00C  0100               	movlb	0	; () banked
 33246  01B00E  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33247  01B010  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33248  01B012  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33249  01B014  B4D8               	btfsc	status,2,c
 33250  01B016  0011               	retfie		f
 33251                           
 33252                           ; BSR set to: 0
 33253                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 33254  01B018  D801               	call	i2u1001_48
 33255  01B01A  0011               	retfie		f
 33256  01B01C                     i2u1001_48:
 33257  01B01C  0005               	push	
 33258  01B01E  6EFA               	movwf	pclath,c
 33259  01B020  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33260  01B022  6EFD               	movwf	tosl,c
 33261  01B024  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33262  01B026  6EFE               	movwf	tosh,c
 33263  01B028  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33264  01B02A  6EFF               	movwf	tosu,c
 33265  01B02C  50FA               	movf	pclath,w,c
 33266  01B02E  0012               	return		;indir
 33267  01B030                     __end_of_UART1_rx_vect_isr:
 33268                           	opt callstack 0
 33269                           
 33270 ;; *************** function _UART1_Receive_ISR *****************
 33271 ;; Defined at:
 33272 ;;		line 192 in file "mcc_generated_files/uart1.c"
 33273 ;; Parameters:    Size  Location     Type
 33274 ;;		None
 33275 ;; Auto vars:     Size  Location     Type
 33276 ;;		None
 33277 ;; Return value:  Size  Location     Type
 33278 ;;                  1  [STACK] void 
 33279 ;; Registers used:
 33280 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33281 ;; Tracked objects:
 33282 ;;		On entry : 3F/0
 33283 ;;		On exit  : 0/0
 33284 ;;		Unchanged: 0/0
 33285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33290 ;;Total ram usage:        0 bytes
 33291 ;; Hardware stack levels used:    1
 33292 ;; This function calls:
 33293 ;;		Nothing
 33294 ;; This function is called by:
 33295 ;;		_UART1_Initialize
 33296 ;;		_UART1_rx_vect_isr
 33297 ;; This function uses a reentrant model
 33298 ;;
 33299                           
 33300                           	psect	text161
 33301  01B270                     __ptext161:
 33302                           	opt callstack 0
 33303  01B270                     _UART1_Receive_ISR:
 33304                           	opt callstack 4
 33305                           
 33306                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 33307                           
 33308                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33309                           ;incstack = 0
 33310  01B270  5038               	movf	_uart1RxHead^0,w,c
 33311  01B272  0F6C               	addlw	low _uart1RxBuffer
 33312  01B274  6ED9               	movwf	fsr2l,c
 33313  01B276  6ADA               	clrf	fsr2h,c
 33314  01B278  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 33315  01B27E  2A38               	incf	_uart1RxHead^0,f,c	;volatile
 33316                           
 33317                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 33318  01B280  0E07               	movlw	7
 33319  01B282  6438               	cpfsgt	_uart1RxHead^0,c
 33320  01B284  D001               	goto	l10390
 33321                           
 33322                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 33323  01B286  6A38               	clrf	_uart1RxHead^0,c	;volatile
 33324  01B288                     l10390:
 33325                           
 33326                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 33327  01B288  2A36               	incf	_uart1RxCount^0,f,c	;volatile
 33328                           
 33329                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33330  01B28A  0012               	return		;funcret
 33331  01B28C                     __end_of_UART1_Receive_ISR:
 33332                           	opt callstack 0
 33333                           
 33334 ;; *************** function _UART2_tx_vect_isr *****************
 33335 ;; Defined at:
 33336 ;;		line 195 in file "mcc_generated_files/uart2.c"
 33337 ;; Parameters:    Size  Location     Type
 33338 ;;		None
 33339 ;; Auto vars:     Size  Location     Type
 33340 ;;		None
 33341 ;; Return value:  Size  Location     Type
 33342 ;;                  1    wreg      void 
 33343 ;; Registers used:
 33344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33345 ;; Tracked objects:
 33346 ;;		On entry : 0/0
 33347 ;;		On exit  : 0/0
 33348 ;;		Unchanged: 0/0
 33349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33354 ;;Total ram usage:        0 bytes
 33355 ;; Hardware stack levels used:    1
 33356 ;; Hardware stack levels required when called:    1
 33357 ;; This function calls:
 33358 ;;		Absolute function
 33359 ;;		_UART2_Transmit_ISR
 33360 ;; This function is called by:
 33361 ;;		Interrupt level 2
 33362 ;; This function uses a non-reentrant model
 33363 ;;
 33364                           
 33365                           	psect	text162
 33366  01B030                     __ptext162:
 33367                           	opt callstack 0
 33368  01B030                     _UART2_tx_vect_isr:
 33369                           	opt callstack 4
 33370                           
 33371                           ;incstack = 0
 33372  01B030  EE14  F0C2         	lfsr	1,___inthi_sp
 33373                           
 33374                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 33375  01B034  0100               	movlb	0	; () banked
 33376  01B036  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 33377  01B038  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 33378  01B03A  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 33379  01B03C  B4D8               	btfsc	status,2,c
 33380  01B03E  0011               	retfie		f
 33381                           
 33382                           ; BSR set to: 0
 33383                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 33384  01B040  D801               	call	i2u1003_48
 33385  01B042  0011               	retfie		f
 33386  01B044                     i2u1003_48:
 33387  01B044  0005               	push	
 33388  01B046  6EFA               	movwf	pclath,c
 33389  01B048  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 33390  01B04A  6EFD               	movwf	tosl,c
 33391  01B04C  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 33392  01B04E  6EFE               	movwf	tosh,c
 33393  01B050  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 33394  01B052  6EFF               	movwf	tosu,c
 33395  01B054  50FA               	movf	pclath,w,c
 33396  01B056  0012               	return		;indir
 33397  01B058                     __end_of_UART2_tx_vect_isr:
 33398                           	opt callstack 0
 33399                           
 33400 ;; *************** function _UART2_Transmit_ISR *****************
 33401 ;; Defined at:
 33402 ;;		line 213 in file "mcc_generated_files/uart2.c"
 33403 ;; Parameters:    Size  Location     Type
 33404 ;;		None
 33405 ;; Auto vars:     Size  Location     Type
 33406 ;;		None
 33407 ;; Return value:  Size  Location     Type
 33408 ;;                  1  [STACK] void 
 33409 ;; Registers used:
 33410 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33411 ;; Tracked objects:
 33412 ;;		On entry : 3F/0
 33413 ;;		On exit  : 3B/39
 33414 ;;		Unchanged: 0/0
 33415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33420 ;;Total ram usage:        0 bytes
 33421 ;; Hardware stack levels used:    1
 33422 ;; This function calls:
 33423 ;;		Nothing
 33424 ;; This function is called by:
 33425 ;;		_UART2_Initialize
 33426 ;;		_UART2_tx_vect_isr
 33427 ;; This function uses a reentrant model
 33428 ;;
 33429                           
 33430                           	psect	text163
 33431  01AD80                     __ptext163:
 33432                           	opt callstack 0
 33433  01AD80                     _UART2_Transmit_ISR:
 33434                           	opt callstack 4
 33435                           
 33436                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 33437                           
 33438                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33439                           ;incstack = 0
 33440  01AD80  0E40               	movlw	64
 33441  01AD82  6033               	cpfslt	_uart2TxBufferRemaining^0,c
 33442  01AD84  D010               	goto	l673
 33443                           
 33444                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 33445  01AD86  0E54               	movlw	low _uart2TxBuffer
 33446  01AD88  2434               	addwf	_uart2TxTail^0,w,c	;volatile
 33447  01AD8A  6ED9               	movwf	fsr2l,c
 33448  01AD8C  6ADA               	clrf	fsr2h,c
 33449  01AD8E  0E03               	movlw	high _uart2TxBuffer
 33450  01AD90  22DA               	addwfc	fsr2h,f,c
 33451  01AD92  50DF               	movf	indf2,w,c
 33452  01AD94  013D               	movlb	61	; () banked
 33453  01AD96  6FD2               	movwf	210,b	;volatile
 33454                           
 33455                           ; BSR set to: 61
 33456  01AD98  2A34               	incf	_uart2TxTail^0,f,c	;volatile
 33457                           
 33458                           ; BSR set to: 61
 33459                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 33460  01AD9A  0E3F               	movlw	63
 33461  01AD9C  6434               	cpfsgt	_uart2TxTail^0,c
 33462  01AD9E  D001               	goto	l10402
 33463                           
 33464                           ; BSR set to: 61
 33465                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 33466  01ADA0  6A34               	clrf	_uart2TxTail^0,c	;volatile
 33467  01ADA2                     l10402:
 33468                           
 33469                           ; BSR set to: 61
 33470                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 33471  01ADA2  2A33               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 33472                           
 33473                           ;mcc_generated_files/uart2.c: 224:     }
 33474  01ADA4  0012               	return	
 33475  01ADA6                     l673:
 33476                           
 33477                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 33478  01ADA6  0139               	movlb	57	; () banked
 33479  01ADA8  9796               	bcf	150,3,b	;volatile
 33480                           
 33481                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 33482  01ADAA  0012               	return		;funcret
 33483  01ADAC                     __end_of_UART2_Transmit_ISR:
 33484                           	opt callstack 0
 33485                           
 33486 ;; *************** function _UART2_rx_vect_isr *****************
 33487 ;; Defined at:
 33488 ;;		line 203 in file "mcc_generated_files/uart2.c"
 33489 ;; Parameters:    Size  Location     Type
 33490 ;;		None
 33491 ;; Auto vars:     Size  Location     Type
 33492 ;;		None
 33493 ;; Return value:  Size  Location     Type
 33494 ;;                  1    wreg      void 
 33495 ;; Registers used:
 33496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33497 ;; Tracked objects:
 33498 ;;		On entry : 0/0
 33499 ;;		On exit  : 0/0
 33500 ;;		Unchanged: 0/0
 33501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33506 ;;Total ram usage:        0 bytes
 33507 ;; Hardware stack levels used:    1
 33508 ;; Hardware stack levels required when called:    1
 33509 ;; This function calls:
 33510 ;;		Absolute function
 33511 ;;		_UART2_Receive_ISR
 33512 ;; This function is called by:
 33513 ;;		Interrupt level 2
 33514 ;; This function uses a non-reentrant model
 33515 ;;
 33516                           
 33517                           	psect	text164
 33518  01B058                     __ptext164:
 33519                           	opt callstack 0
 33520  01B058                     _UART2_rx_vect_isr:
 33521                           	opt callstack 4
 33522                           
 33523                           ;incstack = 0
 33524  01B058  EE14  F0C2         	lfsr	1,___inthi_sp
 33525                           
 33526                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 33527  01B05C  0100               	movlb	0	; () banked
 33528  01B05E  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33529  01B060  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33530  01B062  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33531  01B064  B4D8               	btfsc	status,2,c
 33532  01B066  0011               	retfie		f
 33533                           
 33534                           ; BSR set to: 0
 33535                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 33536  01B068  D801               	call	i2u1005_48
 33537  01B06A  0011               	retfie		f
 33538  01B06C                     i2u1005_48:
 33539  01B06C  0005               	push	
 33540  01B06E  6EFA               	movwf	pclath,c
 33541  01B070  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33542  01B072  6EFD               	movwf	tosl,c
 33543  01B074  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33544  01B076  6EFE               	movwf	tosh,c
 33545  01B078  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33546  01B07A  6EFF               	movwf	tosu,c
 33547  01B07C  50FA               	movf	pclath,w,c
 33548  01B07E  0012               	return		;indir
 33549  01B080                     __end_of_UART2_rx_vect_isr:
 33550                           	opt callstack 0
 33551                           
 33552 ;; *************** function _UART2_Receive_ISR *****************
 33553 ;; Defined at:
 33554 ;;		line 233 in file "mcc_generated_files/uart2.c"
 33555 ;; Parameters:    Size  Location     Type
 33556 ;;		None
 33557 ;; Auto vars:     Size  Location     Type
 33558 ;;		None
 33559 ;; Return value:  Size  Location     Type
 33560 ;;                  1  [STACK] void 
 33561 ;; Registers used:
 33562 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33563 ;; Tracked objects:
 33564 ;;		On entry : 3F/0
 33565 ;;		On exit  : 0/0
 33566 ;;		Unchanged: 0/0
 33567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33572 ;;Total ram usage:        0 bytes
 33573 ;; Hardware stack levels used:    1
 33574 ;; This function calls:
 33575 ;;		Nothing
 33576 ;; This function is called by:
 33577 ;;		_UART2_Initialize
 33578 ;;		_UART2_rx_vect_isr
 33579 ;; This function uses a reentrant model
 33580 ;;
 33581                           
 33582                           	psect	text165
 33583  01B236                     __ptext165:
 33584                           	opt callstack 0
 33585  01B236                     _UART2_Receive_ISR:
 33586                           	opt callstack 4
 33587                           
 33588                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 33589                           
 33590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33591                           ;incstack = 0
 33592  01B236  0E00               	movlw	low _uart2RxBuffer
 33593  01B238  2432               	addwf	_uart2RxHead^0,w,c	;volatile
 33594  01B23A  6ED9               	movwf	fsr2l,c
 33595  01B23C  6ADA               	clrf	fsr2h,c
 33596  01B23E  0E05               	movlw	high _uart2RxBuffer
 33597  01B240  22DA               	addwfc	fsr2h,f,c
 33598  01B242  006F F743 FFDF     	movff	15824,indf2	;volatile
 33599  01B248  2A32               	incf	_uart2RxHead^0,f,c	;volatile
 33600                           
 33601                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 33602  01B24A  2832               	incf	_uart2RxHead^0,w,c
 33603  01B24C  B4D8               	btfsc	status,2,c
 33604                           
 33605                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 33606  01B24E  6A32               	clrf	_uart2RxHead^0,c	;volatile
 33607                           
 33608                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 33609  01B250  2A30               	incf	_uart2RxCount^0,f,c	;volatile
 33610                           
 33611                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33612  01B252  0012               	return		;funcret
 33613  01B254                     __end_of_UART2_Receive_ISR:
 33614                           	opt callstack 0
 33615                           
 33616 ;; *************** function _TMR6_ISR *****************
 33617 ;; Defined at:
 33618 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 33619 ;; Parameters:    Size  Location     Type
 33620 ;;		None
 33621 ;; Auto vars:     Size  Location     Type
 33622 ;;		None
 33623 ;; Return value:  Size  Location     Type
 33624 ;;                  1    wreg      void 
 33625 ;; Registers used:
 33626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 33627 ;; Tracked objects:
 33628 ;;		On entry : 0/0
 33629 ;;		On exit  : 0/0
 33630 ;;		Unchanged: 0/0
 33631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33635 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33636 ;;Total ram usage:        1 bytes
 33637 ;; Hardware stack levels used:    1
 33638 ;; Hardware stack levels required when called:    2
 33639 ;; This function calls:
 33640 ;;		_TMR6_CallBack
 33641 ;; This function is called by:
 33642 ;;		Interrupt level 2
 33643 ;; This function uses a non-reentrant model
 33644 ;;
 33645                           
 33646                           	psect	text166
 33647  01B2A8                     __ptext166:
 33648                           	opt callstack 0
 33649  01B2A8                     _TMR6_ISR:
 33650                           	opt callstack 3
 33651                           
 33652                           ;incstack = 0
 33653  01B2A8  0060  F004  F03E   	movff	btemp,??_TMR6_ISR
 33654  01B2AE  EE14  F0C2         	lfsr	1,___inthi_sp
 33655                           
 33656                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 33657  01B2B2  0139               	movlb	57	; () banked
 33658  01B2B4  91A9               	bcf	169,0,b	;volatile
 33659                           
 33660                           ; BSR set to: 57
 33661                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 33662  01B2B6  ECAC  F0D8         	call	_TMR6_CallBack	;wreg free
 33663  01B2BA  0060  F0F8  F001   	movff	??_TMR6_ISR,btemp
 33664  01B2C0  0011               	retfie		f
 33665  01B2C2                     __end_of_TMR6_ISR:
 33666                           	opt callstack 0
 33667                           
 33668 ;; *************** function _TMR6_CallBack *****************
 33669 ;; Defined at:
 33670 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 33671 ;; Parameters:    Size  Location     Type
 33672 ;;		None
 33673 ;; Auto vars:     Size  Location     Type
 33674 ;;		None
 33675 ;; Return value:  Size  Location     Type
 33676 ;;                  1  [STACK] void 
 33677 ;; Registers used:
 33678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 33679 ;; Tracked objects:
 33680 ;;		On entry : 3F/39
 33681 ;;		On exit  : 0/0
 33682 ;;		Unchanged: 0/0
 33683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33688 ;;Total ram usage:        0 bytes
 33689 ;; Hardware stack levels used:    1
 33690 ;; Hardware stack levels required when called:    1
 33691 ;; This function calls:
 33692 ;;		Absolute function
 33693 ;;		_TMR6_DefaultInterruptHandler
 33694 ;; This function is called by:
 33695 ;;		_TMR6_ISR
 33696 ;; This function uses a reentrant model
 33697 ;;
 33698                           
 33699                           	psect	text167
 33700  01B158                     __ptext167:
 33701                           	opt callstack 0
 33702  01B158                     _TMR6_CallBack:
 33703                           	opt callstack 3
 33704                           
 33705                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 33706                           
 33707                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33708                           ;incstack = 0
 33709  01B158  0100               	movlb	0	; () banked
 33710  01B15A  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 33711  01B15C  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 33712  01B15E  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 33713  01B160  B4D8               	btfsc	status,2,c
 33714  01B162  0012               	return	
 33715                           
 33716                           ; BSR set to: 0
 33717                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 33718  01B164  D801               	call	u960_48
 33719  01B166  0012               	return	
 33720  01B168                     u960_48:
 33721  01B168  0005               	push	
 33722  01B16A  6EFA               	movwf	pclath,c
 33723  01B16C  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 33724  01B16E  6EFD               	movwf	tosl,c
 33725  01B170  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 33726  01B172  6EFE               	movwf	tosh,c
 33727  01B174  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 33728  01B176  6EFF               	movwf	tosu,c
 33729  01B178  50FA               	movf	pclath,w,c
 33730  01B17A  0012               	return		;indir
 33731  01B17C                     __end_of_TMR6_CallBack:
 33732                           	opt callstack 0
 33733                           
 33734 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 33735 ;; Defined at:
 33736 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 33737 ;; Parameters:    Size  Location     Type
 33738 ;;		None
 33739 ;; Auto vars:     Size  Location     Type
 33740 ;;  i               1  [STACK] unsigned char 
 33741 ;; Return value:  Size  Location     Type
 33742 ;;                  1  [STACK] void 
 33743 ;; Registers used:
 33744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 33745 ;; Tracked objects:
 33746 ;;		On entry : 3F/0
 33747 ;;		On exit  : 0/0
 33748 ;;		Unchanged: 0/0
 33749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33754 ;;Total ram usage:        0 bytes
 33755 ;; Hardware stack levels used:    1
 33756 ;; This function calls:
 33757 ;;		Nothing
 33758 ;; This function is called by:
 33759 ;;		_TMR6_Initialize
 33760 ;;		_TMR6_CallBack
 33761 ;; This function uses a reentrant model
 33762 ;;
 33763                           
 33764                           	psect	text168
 33765  01A688                     __ptext168:
 33766                           	opt callstack 0
 33767  01A688                     _TMR6_DefaultInterruptHandler:
 33768                           	opt callstack 0
 33769                           
 33770                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33771  01A688  52E6               	movf	postinc1,f,c
 33772                           
 33773                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 33774                           ;stkvar	_i @ sp[(-1)+0]
 33775                           
 33776                           ;incstack = 0
 33777  01A68A  0EFF               	movlw	-1
 33778  01A68C  6AE3               	clrf	plusw1,c
 33779  01A68E                     l9972:
 33780                           
 33781                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 33782                           ;stkvar	_i @ sp[(-1)+0]
 33783  01A68E  0EFF               	movlw	-1
 33784  01A690  50E3               	movf	plusw1,w,c
 33785  01A692  0D02               	mullw	2
 33786  01A694  0EE5               	movlw	low _tickCount
 33787  01A696  24F3               	addwf	243,w,c
 33788  01A698  6ED9               	movwf	fsr2l,c
 33789  01A69A  0E02               	movlw	high _tickCount
 33790  01A69C  20F4               	addwfc	prodh,w,c
 33791  01A69E  6EDA               	movwf	fsr2h,c
 33792  01A6A0  50DE               	movf	postinc2,w,c
 33793  01A6A2  10DE               	iorwf	postinc2,w,c
 33794  01A6A4  B4D8               	btfsc	status,2,c
 33795  01A6A6  D00C               	goto	l9976
 33796                           
 33797                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 33798                           ;stkvar	_i @ sp[(-1)+0]
 33799  01A6A8  0EFF               	movlw	-1
 33800  01A6AA  50E3               	movf	plusw1,w,c
 33801  01A6AC  0D02               	mullw	2
 33802  01A6AE  0EE5               	movlw	low _tickCount
 33803  01A6B0  24F3               	addwf	243,w,c
 33804  01A6B2  6ED9               	movwf	fsr2l,c
 33805  01A6B4  0E02               	movlw	high _tickCount
 33806  01A6B6  20F4               	addwfc	prodh,w,c
 33807  01A6B8  6EDA               	movwf	fsr2h,c
 33808  01A6BA  06DE               	decf	postinc2,f,c
 33809  01A6BC  0E00               	movlw	0
 33810  01A6BE  5ADD               	subwfb	postdec2,f,c
 33811  01A6C0                     l9976:
 33812                           
 33813                           ;mcc_generated_files/tmr6.c: 207:  }
 33814                           ;stkvar	_i @ sp[(-1)+0]
 33815  01A6C0  0EFF               	movlw	-1
 33816  01A6C2  2AE3               	incf	plusw1,f,c
 33817                           
 33818                           ;stkvar	_i @ sp[(-1)+0]
 33819  01A6C4  0EFF               	movlw	-1
 33820  01A6C6  006F FF8C  F001    	movff	plusw1,btemp
 33821  01A6CC  0E0C               	movlw	12
 33822  01A6CE  6401               	cpfsgt	btemp^0,c
 33823  01A6D0  D7DE               	goto	l9972
 33824                           
 33825                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33826  01A6D2  52E5               	movf	postdec1,f,c
 33827  01A6D4  0012               	return		;funcret
 33828  01A6D6                     __end_of_TMR6_DefaultInterruptHandler:
 33829                           	opt callstack 0
 33830                           
 33831 ;; *************** function _DMA1_DMASCNT_ISR *****************
 33832 ;; Defined at:
 33833 ;;		line 126 in file "mcc_generated_files/dma1.c"
 33834 ;; Parameters:    Size  Location     Type
 33835 ;;		None
 33836 ;; Auto vars:     Size  Location     Type
 33837 ;;		None
 33838 ;; Return value:  Size  Location     Type
 33839 ;;                  1    wreg      void 
 33840 ;; Registers used:
 33841 ;;		None
 33842 ;; Tracked objects:
 33843 ;;		On entry : 0/0
 33844 ;;		On exit  : 3F/0
 33845 ;;		Unchanged: 0/0
 33846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33851 ;;Total ram usage:        0 bytes
 33852 ;; Hardware stack levels used:    1
 33853 ;; This function calls:
 33854 ;;		Nothing
 33855 ;; This function is called by:
 33856 ;;		Interrupt level 2
 33857 ;; This function uses a non-reentrant model
 33858 ;;
 33859                           
 33860                           	psect	text169
 33861  01B3B8                     __ptext169:
 33862                           	opt callstack 0
 33863  01B3B8                     _DMA1_DMASCNT_ISR:
 33864                           	opt callstack 5
 33865                           
 33866                           ;incstack = 0
 33867  01B3B8  EE14  F0C2         	lfsr	1,___inthi_sp
 33868                           
 33869                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 33870  01B3BC  0139               	movlb	57	; () banked
 33871  01B3BE  91A2               	bcf	162,0,b	;volatile
 33872                           
 33873                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 33874  01B3C0  0100               	movlb	0	; () banked
 33875  01B3C2  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 33876                           
 33877                           ; BSR set to: 0
 33878  01B3C4  0011               	retfie		f
 33879  01B3C6                     __end_of_DMA1_DMASCNT_ISR:
 33880                           	opt callstack 0
 33881                           
 33882 ;; *************** function _DMA1_DMADCNT_ISR *****************
 33883 ;; Defined at:
 33884 ;;		line 134 in file "mcc_generated_files/dma1.c"
 33885 ;; Parameters:    Size  Location     Type
 33886 ;;		None
 33887 ;; Auto vars:     Size  Location     Type
 33888 ;;		None
 33889 ;; Return value:  Size  Location     Type
 33890 ;;                  1    wreg      void 
 33891 ;; Registers used:
 33892 ;;		None
 33893 ;; Tracked objects:
 33894 ;;		On entry : 0/0
 33895 ;;		On exit  : 3F/39
 33896 ;;		Unchanged: 0/0
 33897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33902 ;;Total ram usage:        0 bytes
 33903 ;; Hardware stack levels used:    1
 33904 ;; This function calls:
 33905 ;;		Nothing
 33906 ;; This function is called by:
 33907 ;;		Interrupt level 2
 33908 ;; This function uses a non-reentrant model
 33909 ;;
 33910                           
 33911                           	psect	text170
 33912  01B3DC                     __ptext170:
 33913                           	opt callstack 0
 33914  01B3DC                     _DMA1_DMADCNT_ISR:
 33915                           	opt callstack 5
 33916                           
 33917                           ; BSR set to: 0
 33918                           ;incstack = 0
 33919  01B3DC  EE14  F0C2         	lfsr	1,___inthi_sp
 33920                           
 33921                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 33922  01B3E0  0139               	movlb	57	; () banked
 33923  01B3E2  93A2               	bcf	162,1,b	;volatile
 33924                           
 33925                           ; BSR set to: 57
 33926  01B3E4  0011               	retfie		f
 33927  01B3E6                     __end_of_DMA1_DMADCNT_ISR:
 33928                           	opt callstack 0
 33929                           
 33930 ;; *************** function _DMA1_DMAA_ISR *****************
 33931 ;; Defined at:
 33932 ;;		line 144 in file "mcc_generated_files/dma1.c"
 33933 ;; Parameters:    Size  Location     Type
 33934 ;;		None
 33935 ;; Auto vars:     Size  Location     Type
 33936 ;;		None
 33937 ;; Return value:  Size  Location     Type
 33938 ;;                  1    wreg      void 
 33939 ;; Registers used:
 33940 ;;		None
 33941 ;; Tracked objects:
 33942 ;;		On entry : 0/0
 33943 ;;		On exit  : 3F/39
 33944 ;;		Unchanged: 0/0
 33945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33950 ;;Total ram usage:        0 bytes
 33951 ;; Hardware stack levels used:    1
 33952 ;; This function calls:
 33953 ;;		Nothing
 33954 ;; This function is called by:
 33955 ;;		Interrupt level 2
 33956 ;; This function uses a non-reentrant model
 33957 ;;
 33958                           
 33959                           	psect	text171
 33960  01B3E8                     __ptext171:
 33961                           	opt callstack 0
 33962  01B3E8                     _DMA1_DMAA_ISR:
 33963                           	opt callstack 5
 33964                           
 33965                           ; BSR set to: 57
 33966                           ;incstack = 0
 33967  01B3E8  EE14  F0C2         	lfsr	1,___inthi_sp
 33968                           
 33969                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 33970  01B3EC  0139               	movlb	57	; () banked
 33971  01B3EE  97A2               	bcf	162,3,b	;volatile
 33972                           
 33973                           ; BSR set to: 57
 33974  01B3F0  0011               	retfie		f
 33975  01B3F2                     __end_of_DMA1_DMAA_ISR:
 33976                           	opt callstack 0
 33977                           
 33978 ;; *************** function _DMA1_DMAOR_ISR *****************
 33979 ;; Defined at:
 33980 ;;		line 155 in file "mcc_generated_files/dma1.c"
 33981 ;; Parameters:    Size  Location     Type
 33982 ;;		None
 33983 ;; Auto vars:     Size  Location     Type
 33984 ;;		None
 33985 ;; Return value:  Size  Location     Type
 33986 ;;                  1    wreg      void 
 33987 ;; Registers used:
 33988 ;;		None
 33989 ;; Tracked objects:
 33990 ;;		On entry : 0/0
 33991 ;;		On exit  : 3F/39
 33992 ;;		Unchanged: 0/0
 33993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33998 ;;Total ram usage:        0 bytes
 33999 ;; Hardware stack levels used:    1
 34000 ;; This function calls:
 34001 ;;		Nothing
 34002 ;; This function is called by:
 34003 ;;		Interrupt level 2
 34004 ;; This function uses a non-reentrant model
 34005 ;;
 34006                           
 34007                           	psect	text172
 34008  01B3F4                     __ptext172:
 34009                           	opt callstack 0
 34010  01B3F4                     _DMA1_DMAOR_ISR:
 34011                           	opt callstack 5
 34012                           
 34013                           ; BSR set to: 57
 34014                           ;incstack = 0
 34015  01B3F4  EE14  F0C2         	lfsr	1,___inthi_sp
 34016                           
 34017                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 34018  01B3F8  0139               	movlb	57	; () banked
 34019  01B3FA  95A2               	bcf	162,2,b	;volatile
 34020                           
 34021                           ; BSR set to: 57
 34022  01B3FC  0011               	retfie		f
 34023  01B3FE                     __end_of_DMA1_DMAOR_ISR:
 34024                           	opt callstack 0
 34025                           
 34026                           ;
 34027                           ; Interrupt Vector Table @ 0x8
 34028                           ;
 34029                           
 34030                           	psect	ivt0x8
 34031  000008                     __pivt0x8:
 34032                           	opt callstack 0
 34033  000008                     ivt0x8_base:
 34034                           	opt callstack 0
 34035                           
 34036                           ; Vector 0 : SWINT
 34037  000008  6D10               	dw	_Default_ISR shr (0+2)
 34038                           
 34039                           ; Vector 1 : HLVD
 34040  00000A  6D10               	dw	_Default_ISR shr (0+2)
 34041                           
 34042                           ; Vector 2 : OSF
 34043  00000C  6D10               	dw	_Default_ISR shr (0+2)
 34044                           
 34045                           ; Vector 3 : CSW
 34046  00000E  6D10               	dw	_Default_ISR shr (0+2)
 34047                           
 34048                           ; Vector 4 : NVM
 34049  000010  6D10               	dw	_Default_ISR shr (0+2)
 34050                           
 34051                           ; Vector 5 : SCAN
 34052  000012  6D10               	dw	_Default_ISR shr (0+2)
 34053                           
 34054                           ; Vector 6 : CRC
 34055  000014  6D10               	dw	_Default_ISR shr (0+2)
 34056                           
 34057                           ; Vector 7 : IOC
 34058  000016  6D10               	dw	_Default_ISR shr (0+2)
 34059                           
 34060                           ; Vector 8 : INT0
 34061  000018  6CEA               	dw	_INT0_ISR shr (0+2)
 34062                           
 34063                           ; Vector 9 : ZCD
 34064  00001A  6D10               	dw	_Default_ISR shr (0+2)
 34065                           
 34066                           ; Vector 10 : AD
 34067  00001C  6B55               	dw	_ADCC_ISR shr (0+2)
 34068                           
 34069                           ; Vector 11 : ADT
 34070  00001E  688B               	dw	_ADCC_ThresholdISR shr (0+2)
 34071                           
 34072                           ; Vector 12 : CMP1
 34073  000020  6D10               	dw	_Default_ISR shr (0+2)
 34074                           
 34075                           ; Vector 13 : SMT1
 34076  000022  6D10               	dw	_Default_ISR shr (0+2)
 34077                           
 34078                           ; Vector 14 : SMT1PRA
 34079  000024  6D10               	dw	_Default_ISR shr (0+2)
 34080                           
 34081                           ; Vector 15 : SMT1PRW
 34082  000026  6D10               	dw	_Default_ISR shr (0+2)
 34083                           
 34084                           ; Vector 16 : DMA1SCNT
 34085  000028  6CEE               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 34086                           
 34087                           ; Vector 17 : DMA1DCNT
 34088  00002A  6CF7               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 34089                           
 34090                           ; Vector 18 : DMA1OR
 34091  00002C  6CFD               	dw	_DMA1_DMAOR_ISR shr (0+2)
 34092                           
 34093                           ; Vector 19 : DMA1A
 34094  00002E  6CFA               	dw	_DMA1_DMAA_ISR shr (0+2)
 34095                           
 34096                           ; Vector 20 : SPI1RX
 34097  000030  6D10               	dw	_Default_ISR shr (0+2)
 34098                           
 34099                           ; Vector 21 : SPI1TX
 34100  000032  6D10               	dw	_Default_ISR shr (0+2)
 34101                           
 34102                           ; Vector 22 : SPI1
 34103  000034  6D10               	dw	_Default_ISR shr (0+2)
 34104                           
 34105                           ; Vector 23 : I2C1RX
 34106  000036  6D10               	dw	_Default_ISR shr (0+2)
 34107                           
 34108                           ; Vector 24 : I2C1TX
 34109  000038  6D10               	dw	_Default_ISR shr (0+2)
 34110                           
 34111                           ; Vector 25 : I2C1
 34112  00003A  6D10               	dw	_Default_ISR shr (0+2)
 34113                           
 34114                           ; Vector 26 : I2C1E
 34115  00003C  6D10               	dw	_Default_ISR shr (0+2)
 34116                           
 34117                           ; Vector 27 : U1RX
 34118  00003E  6C02               	dw	_UART1_rx_vect_isr shr (0+2)
 34119                           
 34120                           ; Vector 28 : U1TX
 34121  000040  6D10               	dw	_Default_ISR shr (0+2)
 34122                           
 34123                           ; Vector 29 : U1E
 34124  000042  6D10               	dw	_Default_ISR shr (0+2)
 34125                           
 34126                           ; Vector 30 : U1
 34127  000044  6D10               	dw	_Default_ISR shr (0+2)
 34128                           
 34129                           ; Vector 31 : TMR0
 34130  000046  6D10               	dw	_Default_ISR shr (0+2)
 34131                           
 34132                           ; Vector 32 : TMR1
 34133  000048  6D10               	dw	_Default_ISR shr (0+2)
 34134                           
 34135                           ; Vector 33 : TMR1G
 34136  00004A  6D10               	dw	_Default_ISR shr (0+2)
 34137                           
 34138                           ; Vector 34 : TMR2
 34139  00004C  6D10               	dw	_Default_ISR shr (0+2)
 34140                           
 34141                           ; Vector 35 : CCP1
 34142  00004E  6D10               	dw	_Default_ISR shr (0+2)
 34143                           
 34144                           ; Vector 36 : Undefined
 34145  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 34146                           
 34147                           ; Vector 37 : NCO1
 34148  000052  6D10               	dw	_Default_ISR shr (0+2)
 34149                           
 34150                           ; Vector 38 : CWG1
 34151  000054  6D10               	dw	_Default_ISR shr (0+2)
 34152                           
 34153                           ; Vector 39 : CLC1
 34154  000056  6D10               	dw	_Default_ISR shr (0+2)
 34155                           
 34156                           ; Vector 40 : INT1
 34157  000058  6A93               	dw	_INT1_ISR shr (0+2)
 34158                           
 34159                           ; Vector 41 : CMP2
 34160  00005A  6D10               	dw	_Default_ISR shr (0+2)
 34161                           
 34162                           ; Vector 42 : DMA2SCNT
 34163  00005C  6D10               	dw	_Default_ISR shr (0+2)
 34164                           
 34165                           ; Vector 43 : DMA2DCNT
 34166  00005E  6D10               	dw	_Default_ISR shr (0+2)
 34167                           
 34168                           ; Vector 44 : DMA2OR
 34169  000060  6D10               	dw	_Default_ISR shr (0+2)
 34170                           
 34171                           ; Vector 45 : DMA2A
 34172  000062  6D10               	dw	_Default_ISR shr (0+2)
 34173                           
 34174                           ; Vector 46 : I2C2RX
 34175  000064  6D10               	dw	_Default_ISR shr (0+2)
 34176                           
 34177                           ; Vector 47 : I2C2TX
 34178  000066  6D10               	dw	_Default_ISR shr (0+2)
 34179                           
 34180                           ; Vector 48 : I2C2
 34181  000068  6D10               	dw	_Default_ISR shr (0+2)
 34182                           
 34183                           ; Vector 49 : I2C2E
 34184  00006A  6D10               	dw	_Default_ISR shr (0+2)
 34185                           
 34186                           ; Vector 50 : U2RX
 34187  00006C  6C16               	dw	_UART2_rx_vect_isr shr (0+2)
 34188                           
 34189                           ; Vector 51 : U2TX
 34190  00006E  6C0C               	dw	_UART2_tx_vect_isr shr (0+2)
 34191                           
 34192                           ; Vector 52 : U2E
 34193  000070  6D10               	dw	_Default_ISR shr (0+2)
 34194                           
 34195                           ; Vector 53 : U2
 34196  000072  6D10               	dw	_Default_ISR shr (0+2)
 34197                           
 34198                           ; Vector 54 : TMR3
 34199  000074  615F               	dw	_TMR3_ISR shr (0+2)
 34200                           
 34201                           ; Vector 55 : TMR3G
 34202  000076  6D10               	dw	_Default_ISR shr (0+2)
 34203                           
 34204                           ; Vector 56 : TMR4
 34205  000078  6D10               	dw	_Default_ISR shr (0+2)
 34206                           
 34207                           ; Vector 57 : CCP2
 34208  00007A  6D10               	dw	_Default_ISR shr (0+2)
 34209                           
 34210                           ; Vector 58 : Undefined
 34211  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 34212                           
 34213                           ; Vector 59 : CWG2
 34214  00007E  6D10               	dw	_Default_ISR shr (0+2)
 34215                           
 34216                           ; Vector 60 : CLC2
 34217  000080  6D10               	dw	_Default_ISR shr (0+2)
 34218                           
 34219                           ; Vector 61 : INT2
 34220  000082  6D10               	dw	_Default_ISR shr (0+2)
 34221                           
 34222                           ; Vector 62 : Undefined
 34223  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 34224                           
 34225                           ; Vector 63 : Undefined
 34226  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 34227                           
 34228                           ; Vector 64 : Undefined
 34229  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 34230                           
 34231                           ; Vector 65 : Undefined
 34232  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 34233                           
 34234                           ; Vector 66 : Undefined
 34235  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 34236                           
 34237                           ; Vector 67 : Undefined
 34238  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 34239                           
 34240                           ; Vector 68 : Undefined
 34241  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 34242                           
 34243                           ; Vector 69 : Undefined
 34244  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 34245                           
 34246                           ; Vector 70 : TMR5
 34247  000094  694E               	dw	_TMR5_ISR shr (0+2)
 34248                           
 34249                           ; Vector 71 : TMR5G
 34250  000096  6D10               	dw	_Default_ISR shr (0+2)
 34251                           
 34252                           ; Vector 72 : TMR6
 34253  000098  6CAA               	dw	_TMR6_ISR shr (0+2)
 34254                           
 34255                           ; Vector 73 : CCP3
 34256  00009A  6D10               	dw	_Default_ISR shr (0+2)
 34257                           
 34258                           ; Vector 74 : CWG3
 34259  00009C  6D10               	dw	_Default_ISR shr (0+2)
 34260                           
 34261                           ; Vector 75 : CLC3
 34262  00009E  6D10               	dw	_Default_ISR shr (0+2)
 34263                           
 34264                           ; Vector 76 : Undefined
 34265  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 34266                           
 34267                           ; Vector 77 : Undefined
 34268  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 34269                           
 34270                           ; Vector 78 : Undefined
 34271  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 34272                           
 34273                           ; Vector 79 : Undefined
 34274  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 34275                           
 34276                           ; Vector 80 : CCP4
 34277  0000A8  6D10               	dw	_Default_ISR shr (0+2)
 34278                           
 34279                           ; Vector 81 : CLC4
 34280  0000AA  6D10               	dw	_Default_ISR shr (0+2)
 34281  0000AC                     ivt0x8_undefint:
 34282                           	opt callstack 0
 34283  0000AC  00FF               	reset	
 34284                           
 34285                           	psect	text173
 34286  000000                     __ptext173:
 34287                           	opt callstack 0
 34288                           
 34289                           	psect	rparam
 34290  0000                     
 34291                           	psect	temp
 34292  000001                     btemp:
 34293                           	opt callstack 0
 34294  000001                     	ds	32
 34295  0000                     wtemp0	set	btemp
 34296  0000                     wtemp1	set	btemp+2
 34297  0000                     wtemp2	set	btemp+4
 34298  0000                     wtemp3	set	btemp+6
 34299  0000                     wtemp4	set	btemp+8
 34300  0000                     wtemp5	set	btemp+10
 34301  0000                     wtemp8	set	btemp+1
 34302  0000                     ttemp0	set	btemp
 34303  0000                     ttemp1	set	btemp+3
 34304  0000                     ttemp2	set	btemp+6
 34305  0000                     ttemp3	set	btemp+9
 34306  0000                     ttemp5	set	btemp+1
 34307  0000                     ttemp6	set	btemp+4
 34308  0000                     ttemp7	set	btemp+8
 34309  0000                     ltemp0	set	btemp
 34310  0000                     ltemp1	set	btemp+4
 34311  0000                     ltemp2	set	btemp+8
 34312  0000                     lltemp0	set	btemp
 34313  0000                     lltemp1	set	btemp+8
 34314  0000                     lltemp2	set	btemp+16
 34315  0000                     lltemp3	set	btemp+24
 34316                           tosu	equ	0x3FFF
 34317                           tosh	equ	0x3FFE
 34318                           tosl	equ	0x3FFD
 34319                           stkptr	equ	0x3FFC
 34320                           pclatu	equ	0x3FFB
 34321                           pclath	equ	0x3FFA
 34322                           pcl	equ	0x3FF9
 34323                           tblptru	equ	0x3FF8
 34324                           tblptrh	equ	0x3FF7
 34325                           tblptrl	equ	0x3FF6
 34326                           tablat	equ	0x3FF5
 34327                           prodh	equ	0x3FF4
 34328                           prodl	equ	0x3FF3
 34329                           indf0	equ	0x3FEF
 34330                           postinc0	equ	0x3FEE
 34331                           postdec0	equ	0x3FED
 34332                           preinc0	equ	0x3FEC
 34333                           plusw0	equ	0x3FEB
 34334                           fsr0h	equ	0x3FEA
 34335                           fsr0l	equ	0x3FE9
 34336                           wreg	equ	0x3FE8
 34337                           indf1	equ	0x3FE7
 34338                           postinc1	equ	0x3FE6
 34339                           postdec1	equ	0x3FE5
 34340                           preinc1	equ	0x3FE4
 34341                           plusw1	equ	0x3FE3
 34342                           fsr1h	equ	0x3FE2
 34343                           fsr1l	equ	0x3FE1
 34344                           bsr	equ	0x3FE0
 34345                           indf2	equ	0x3FDF
 34346                           postinc2	equ	0x3FDE
 34347                           postdec2	equ	0x3FDD
 34348                           preinc2	equ	0x3FDC
 34349                           plusw2	equ	0x3FDB
 34350                           fsr2h	equ	0x3FDA
 34351                           fsr2l	equ	0x3FD9
 34352                           status	equ	0x3FD8


Data Sizes:
    Strings     745
    Constant    492
    Data        997
    BSS         1106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      38
    BANK0           160      0     154
    BANK1           256      0     251
    BANK2           256      0     255
    BANK3           256     25     253
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_93(CODE[1]), STR_55(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_90(CODE[3]), STR_86(CODE[3]), STR_81(CODE[3]), STR_76(CODE[3]), 
		 -> STR_71(CODE[3]), STR_67(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_90(CODE[3]), STR_86(CODE[3]), STR_81(CODE[3]), STR_76(CODE[3]), 
		 -> STR_71(CODE[3]), STR_67(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_56(CODE[85]), STR_54(CODE[3]), STR_53(CODE[3]), 
		 -> STR_52(CODE[19]), STR_51(CODE[19]), STR_50(CODE[19]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_46(CODE[24]), STR_45(CODE[15]), 
		 -> STR_44(CODE[15]), STR_43(CODE[15]), STR_42(CODE[10]), STR_41(CODE[10]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_36(CODE[3]), STR_35(CODE[3]), 
		 -> STR_34(CODE[3]), STR_33(CODE[17]), STR_32(CODE[16]), STR_31(CODE[16]), 
		 -> STR_30(CODE[20]), STR_29(CODE[20]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[22]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_56(CODE[85]), STR_54(CODE[3]), STR_53(CODE[3]), 
		 -> STR_52(CODE[19]), STR_51(CODE[19]), STR_50(CODE[19]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_46(CODE[24]), STR_45(CODE[15]), 
		 -> STR_44(CODE[15]), STR_43(CODE[15]), STR_42(CODE[10]), STR_41(CODE[10]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_36(CODE[3]), STR_35(CODE[3]), 
		 -> STR_34(CODE[3]), STR_33(CODE[17]), STR_32(CODE[16]), STR_31(CODE[16]), 
		 -> STR_30(CODE[20]), STR_29(CODE[20]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[22]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_38(CODE[9]), STR_37(CODE[12]), D.lcd(BIGRAM[288]), 
		 -> D(BIGRAM[290]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_38(CODE[9]), STR_37(CODE[12]), D.lcd(BIGRAM[288]), 
		 -> D(BIGRAM[290]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_62(CODE[4]), STR_61(CODE[4]), STR_58(CODE[4]), STR_57(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_62(CODE[4]), STR_61(CODE[4]), STR_58(CODE[4]), STR_57(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_36(CODE[3]), STR_35(CODE[3]), STR_34(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_56(CODE[85]), STR_54(CODE[3]), STR_53(CODE[3]), STR_52(CODE[19]), 
		 -> STR_51(CODE[19]), STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_46(CODE[24]), STR_45(CODE[15]), STR_44(CODE[15]), 
		 -> STR_43(CODE[15]), STR_42(CODE[10]), STR_41(CODE[10]), STR_40(CODE[19]), 
		 -> STR_39(CODE[19]), STR_33(CODE[17]), STR_32(CODE[16]), STR_31(CODE[16]), 
		 -> STR_30(CODE[20]), STR_29(CODE[20]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[22]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5951_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_56(CODE[85]), STR_54(CODE[3]), STR_53(CODE[3]), STR_52(CODE[19]), 
		 -> STR_51(CODE[19]), STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_46(CODE[24]), STR_45(CODE[15]), STR_44(CODE[15]), 
		 -> STR_43(CODE[15]), STR_42(CODE[10]), STR_41(CODE[10]), STR_40(CODE[19]), 
		 -> STR_39(CODE[19]), STR_36(CODE[3]), STR_35(CODE[3]), STR_34(CODE[3]), 
		 -> STR_33(CODE[17]), STR_32(CODE[16]), STR_31(CODE[16]), STR_30(CODE[20]), 
		 -> STR_29(CODE[20]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_56(CODE[85]), STR_54(CODE[3]), STR_53(CODE[3]), STR_52(CODE[19]), 
		 -> STR_51(CODE[19]), STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_46(CODE[24]), STR_45(CODE[15]), STR_44(CODE[15]), 
		 -> STR_43(CODE[15]), STR_42(CODE[10]), STR_41(CODE[10]), STR_40(CODE[19]), 
		 -> STR_39(CODE[19]), STR_36(CODE[3]), STR_35(CODE[3]), STR_34(CODE[3]), 
		 -> STR_33(CODE[17]), STR_32(CODE[16]), STR_31(CODE[16]), STR_30(CODE[20]), 
		 -> STR_29(CODE[20]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 85
		 -> STR_56(CODE[85]), STR_54(CODE[3]), STR_53(CODE[3]), STR_52(CODE[19]), 
		 -> STR_51(CODE[19]), STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_46(CODE[24]), STR_45(CODE[15]), STR_44(CODE[15]), 
		 -> STR_43(CODE[15]), STR_42(CODE[10]), STR_41(CODE[10]), STR_40(CODE[19]), 
		 -> STR_39(CODE[19]), STR_36(CODE[3]), STR_35(CODE[3]), STR_34(CODE[3]), 
		 -> STR_33(CODE[17]), STR_32(CODE[16]), STR_31(CODE[16]), STR_30(CODE[20]), 
		 -> STR_29(CODE[20]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_38(CODE[9]), STR_37(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_38(CODE[9]), STR_37(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_38(CODE[9]), 
		 -> STR_37(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4466tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_38(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_37(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0  371746
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                             ___flge
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            5     4      1    8757
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (2) _fabsf                                                8     4      4      47
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35433
                                              0 BANK3     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35343
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35343
                         _StartTimer
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___flge
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _StartTimer
     _TimerDone
     _WaitMs
       _StartTimer
       _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     322      69        9.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100     19      FD      11       98.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FF       9       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      26       1       60.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     53C      58        0.0%
DATA                 0      0     85E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec 13 18:24:42 2019

                     _SPI1_Exchange8bit B1BE                __end_of_set_display_info B218  
                                     _C 0100                                       _D 07FF  
                                     _H 00F3                                       _P 009E  
                                     _R 00C4                                       _S 02BC  
                                     _T FBF9                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler AF3E            __end_of_start_switch_handler B1BE  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FD01                  __end_of_FVR_Initialize B426  
                           __CFG_LVP$ON 000000                                     l169 B32E  
                                   l807 B1CC                                     l673 ADA6  
                                   _GIE 01FE97                                     _abs A768  
                                   _pad 8E12                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize B2DA                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack B134                       _update_adc_result AA8A  
                         __CFG_BBEN$OFF 000000                   __size_of_Volts_to_SOC 0092  
                         _INT1_CallBack B0C8                            __CFG_ZCD$OFF 000000  
                                  l1000 AA06                                    l2104 8E6E  
                                  l1320 224E                                    l2124 5068  
                                  l2204 0B1A                                    l2047 57CC  
                                  l2160 123A                                    l1336 283C  
                                  l1353 2EA4                                    l3050 A7A8  
                                  l3042 7E3A                                    l2242 69B4  
                                  l1434 A48C                                    l1346 28DA  
                                  l1338 2842                                    l3019 78E8  
                       _timer3ReloadVal 0027                                    l1188 AA46  
                                  l1348 29A0                                    l1349 2AAE  
                                  l3150 8CF0                                    l2263 62E2  
                                  l2328 21E6                                    l3081 7072  
                                  l1652 AAE0                                    l2620 97A2  
                                  l1709 B214                                    l2189 066A  
                                  l1661 758E                                    l1822 7CA4  
                                  l1574 9B1C                                    l2278 581A  
                                  l1662 76EA                                    l2631 8572  
                                  l2624 849E                                    l3432 A0D0  
                                  l3417 74D2                                    l1593 AB4A  
                                  l1578 9E20                                    l1771 4F84  
                                  l3445 A04C                                    l1669 9032  
                                  l1925 9F46                                    l2910 3D4C  
                                  l1934 934C                    _ADCC_StartConversion B348  
                                  l1863 9542                                    l2658 82A0  
                                  l2943 4AD4                                    l8000 4876  
                                  l8002 4888                                    l8010 48E0  
                                  l8110 3044                                    l8022 492A  
                                  l8112 304A                                    l8104 3004  
                                  l8040 49A0                                    l8016 490E  
                                  l8008 48DC                                    l8122 309C  
                                  l8114 307A                                    l2898 3EBC  
                                  l8050 4A14                                    l8026 4950  
                                  l2979 3700                                    l8212 3640  
                                  l7500 37A0                                    l8036 499A  
                                  l9100 6FC6                                    l8070 4AB8  
                                  l8062 4A80                                    l9110 7062  
                                  l8302 8D44                                    l8208 35FA  
                                  l7512 381E                                    l7504 37B6  
                                  l8056 4A50                                    l8320 8DF8  
                                  l8312 8DC4                                    l8226 36AE  
                                  l8218 366A                                    l7610 3BC2  
                                  l7530 38D6                                    l7506 37E6  
                                  l8228 36C8                                    l8180 3510  
                                  l8092 2F76                                    l7524 3890  
                                  l8068 4AA8                                    l8260 8738  
                                  l8332 976C                                    l8404 8238  
                                  l8420 7E92                                    l8174 34F4  
                                  l8094 2F7C                                    l8086 2F36  
                                  l7702 3E9C                                    l7630 3CD6  
                                  l7614 3BCC                                    l7518 3850  
                                  l8350 84EC                                    l8254 8718  
                                  l8406 824E                                    l9126 7344  
                                  l8184 3536                                    l8096 2FAC  
                                  l7640 3D30                                    l7632 3CFC  
                                  l7608 3BB0                                    l7536 38F8  
                                  l7528 38A6                                    l8344 845C  
                                  l8248 8702                                    l8336 97A0  
                                  l8328 972A                                    l9128 73B0  
                                  l8432 7F64                                    l8194 3580  
                                  l7650 3D80                                    l7618 3BFE  
                                  l8362 8570                                    l8354 853A  
                                  l9090 6EE4                                    l9074 6E22  
                                  l7466 9BF0                                    l8282 8812  
                                  l8274 87DE                                    l8370 A73E  
                                  l7580 3AC8                                    l9092 6EFC  
                                  l9084 6EB8                                    l9076 6E44  
                                  l7468 9C12                                    l8380 818A  
                                  l7812 6206                                    l8452 8912  
                                  l8444 8866                                    l8198 3586  
                                  l7654 3D8C                                    l7582 3ADA  
                                  l7590 3B14                                    l7566 3A36  
                                  l7494 3760                                    l9094 6F20  
                                  l7910 720E                                    l7902 7162  
                                  l8294 8D1A                                    l7750 7DD8  
                                  l7806 616E                                    l7680 3E18  
                                  l7664 3DB4                                    l7648 3D6E  
                                  l7576 3AA8                                    l9600 78C8  
                                  l9096 6F5E                                    l7736 A798  
                                  l7760 7E32                                    l7816 6274  
                                  l7808 61BE                                    l9530 A662  
                                  l7690 3E44                                    l7586 3AE4  
                                  l7930 45BA                                    l7850 6BEA  
                                  l8298 8D2C                                    l7754 7DDC  
                                  l7834 A03C                                    l9522 AD3A  
                                  l7668 3DBA                                    l7940 4610  
                                  l9380 AE6E                                    l8468 A626  
                                  l8396 820C                                    l7694 3E5C  
                                  l7950 4698                                    l7942 4640  
                                  l7862 6C84                                    l8398 8228  
                                  l7696 3E6C                                    l7960 46EE  
                                  l7936 45FA                                    l7856 6C3E  
                                  l7792 6050                                    l7962 471E  
                                  l9570 77C8                                    l7874 6D56  
                                  l7778 A0C0                                    l7956 46D8  
                                  l9580 7832                                    l9572 77E6  
                                  l9468 AB54                                    l7982 47B0  
                                  l7974 4796                                    l9590 7866  
                                  l9582 7848                                    l9566 77A4  
                                  l9558 7738                                    l7894 70DA  
                                  l7992 4840                                    l7968 475C  
                                  l9568 77B2                                    l9578 7814  
                                  STR_1 FF50                                    STR_2 FFA2  
                                  STR_3 FFD0                                    STR_4 FF1D  
                                  STR_5 FE4F                                    l9972 A68E  
                                  STR_6 FE4F                                    STR_7 FE4F  
                                  STR_8 FF0B                                    STR_9 FDB6  
                                  l9976 A6C0                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u5200 ACBE                                    u6010 6BE4  
                                  u5210 ACC0                                    u6100 6DE0  
                                  u5310 3A5C                                    u6030 6C3A  
                                  u5320 3A7C                                    u5321 3A76  
                                  u6041 6C44                                    u5170 9C40  
                                  u6050 6C7E                                    u6210 7298  
                                  u6130 70D4                                    u7010 8280  
                                  _T6PR 003F93                                    u6060 6CB0  
                                  _PMD0 0039C0                                    u7021 7E52  
                                  _PMD1 0039C1                                    u5510 3D92  
                                  u5430 3BF4                                    u6150 712A  
                                  u7030 7E8C                                    u7110 894A  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u5600 3E28                                    u5360 3B0C  
                                  u6080 6D8E                                    u6160 715C  
                                  u7040 7EBE                                    _PMD4 0039C4  
                                  u5177 9C32                                    _PMD5 0039C5  
                                  u5530 3DAC                                    u5370 3B2C  
                                  u5338 3A7E                                    u7130 A602  
                                  u6170 718E                                    _PMD6 0039C6  
                                  u5435 3BE4                                    _PMD7 0039C7  
                                  u7140 A622                                    u5700 A77C  
                                  u7060 7F9C                                    u5365 3AFC  
                                  u5470 3D1E                                    u6430 49EE  
                                  u6350 4908                                    u6190 7246  
                                  u5710 7D5C                                    u6440 4A28  
                                  u5800 A07E                                    u7080 8860  
                                  u5640 AC8E                                    u6610 3578  
                                  u5570 3E08                                    u6450 4A64  
                                  u5810 A080                                    u7090 8892  
                                  u5650 AC90                                    u6435 49DE  
                                  u5715 7D52                                    u6540 308A  
                                  u8300 700C                                    u5900 61EC  
                                  u9005 B374                                    u6390 4992  
                                  u8310 700E                                    u5830 5FE8  
                                  u9006 B376                                    u5575 3DF8  
                                  u9015 B364                                    u9104 4D22  
                                  u6720 8764                                    u5760 7E2A  
                                  u5840 6034                                    u8400 74A6  
                                  u9016 B366                                    u9105 4D1C  
                                  u5905 61E2                                    u6650 35D4  
                                  u6810 8DE4                                    u5770 7E2C  
                                  u5930 A8FE                                    u6555 321E  
                                  u5755 7E0C                                    u5835 5FDE  
                                  u6660 360E                                    u9124 4DF0  
                                  u9044 4AFA                                    u6740 87FE  
                                  u5940 A900                                    u6565 32E6  
                                  u9125 4DEA                                    u9045 4AF4  
                                  u6670 3654                                    u9150 4E1A  
                                  u6910 A73A                                    u8350 73DE  
                                  u5950 9FFA                                    u6655 35C4  
                                  u6575 34AE                                    u8407 7498  
                                  u9144 4E12                                    u9064 4B2A  
                                  u8280 6EB4                                    u6920 816A  
                                  u5880 6114                                    u5960 9FFC  
                                  u9400 9F32                                    u9145 4E0C  
                                  u9065 4B24                                    u5865 606E  
                                  u9170 7B08                                    u6850 979C  
                                  u6930 817E                                    u5866 6074  
                                  u5867 6082                                    u9260 B188  
                                  u9084 4B4C                                    u5980 ACEE  
                                  u6940 81B8                                    u9085 4B46  
                                  u6925 8160                                    u5885 610A  
                                  u8357 73D0                                    u5990 ACF0  
                                  u6790 8D70                                    u8390 7478  
                                  u6945 81AE                                    u9266 B18A  
                                  u9418 9F34                                    u9370 9EEC  
                                  u8395 7472                                    u8397 7464  
                                  u6990 8256                                    u8930 A2A4  
                                  _PLLR 01CEE0                                    u9388 9EEE  
                                  u8785 A93A                                    u8890 785C  
                                  u8955 A2D8                                    u8956 A2DA  
                                  u8948 A2A6                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR AD80  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0394  
                                  _cp_h FD11                                    _cp_l FD0D  
                                  _atoi 6E08                                    _ctoa 9F4A  
                                  _main 21F0                                    _dtoa 4F8A  
                                  _nanf A3C2                                    _seed 01F3  
                                  _prec 0023                                    _nout 00C0  
                                  _spin FC89                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 68CA                                    btemp 0001  
                                  _utoa 629E                                    _xtoa 57D6  
                __end_of_check_adc_scan B40E                           ___fpclassifyf 7CAE  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 002B  
             __end_of_SPI1_Exchange8bit B1DC               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize A880             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr B008                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0039                        __end_of_INT0_ISR B3B6  
                      __end_of_INT1_ISR AA8A          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 9B24           __end_of_OSCILLATOR_Initialize B334  
                                 l10100 7B2A                                   l10022 4AE0  
                                 l10112 7B6A                                   l10050 4D3A  
                                 l10042 4D08                                   l10220 898E  
                                 l10108 7B56                                   l10028 4B10  
                                 l10222 8994                                   l10230 89B0  
                                 l10062 4EB6                                   l10054 4DD6  
                                 l10038 4C2E                                   l10224 899A  
                                 l10232 89DC                                   l10402 ADA2  
                                 l10226 89A8                                   l10218 897E  
                                 l10146 AAF6                                   l10330 9D74  
                                 l10068 4F52                                   l10076 4F64  
                                 l12100 16F4                                   l10246 8A8E  
                                 l10238 8A14                                   l12014 5B46  
                                 l10326 9D0C                                   l11400 9CBA  
                                 l12200 1FDC                                   l12112 1834  
                                 l10600 5536                                   l11410 8E66  
                                 l12050 1360                                   l10258 9F00  
                                 l10428 A9EE                                   l11420 8EFE  
                                 l11412 8E78                                   l11500 5058  
                                 l12220 216E                                   l12132 1A46  
                                 l12124 198E                                   l12108 17E0  
                                 l12052 1376                                   l10188 AAAA  
                                 l10612 55A4                                   l10390 B288  
                                 l10446 AA2E                                   l10542 8112  
                                 l11406 8E3E                                   l12214 2114  
                                 l12070 14A8                                   l12230 2192  
                                 l10630 561C                                   l10550 955E  
                                 l11416 8EB4                                   l11512 50C0  
                                 l12224 2172                                   l12136 1A7A  
                                 l12072 14E2                                   l12048 1326  
                                 l10624 55FE                                   l10616 55B0  
                                 l10608 5584                                   l10720 925A  
                                 l10714 5F26                                   l11522 52D2  
                                 l11426 965C                                   l12090 165C  
                                 l12074 14F8                                   l11442 6676  
                                 l10820 A10E                                   l11508 50A2  
                                 l12156 1BDA                                   l12316 8F4A  
                                 l12500 755E                                   l10636 563C  
                                 l10660 57AC                                   l10572 5444  
                                 l10732 92B6                                   l10556 9604  
                                 l10814 A9C4                                   l11542 5384  
                                 l11630 0470                                   l12166 1C88  
                                 l11462 684C                                   l11454 679E  
                                 l12270 9B7C                                   l10670 986E  
                                 l10590 54FE                                   l10742 9326  
                                 l12360 3FCE                                   l11384 8C06  
                                 l11704 0926                                   l11624 0396  
                                 l11608 02FC                                   l11616 032A  
                                 l11560 00AC                                   l12176 1DAA  
                                 l11448 6734                                   l10826 A11E  
                                 l12370 41DE                                   l11474 9F68  
                                 l11546 53C0                                   l11650 057C  
                                 l11634 04D2                                   l12186 1E60  
                                 l12514 7686                                   l10674 98AC  
                                 l10594 550A                                   l10586 54DE  
                                 l10578 5488                                   l10658 5784  
                                 l12380 4306                                   l12356 3F8C  
                                 l11396 9C7C                                   l11476 9F94  
                                 l11804 0FD6                                   l11652 058E  
                                 l11628 0406                                   l11572 00F0  
                                 l11580 0146                                   l11900 6B48  
                                 l12284 99FA                                   l12620 241A  
                                 PRLOCK 0039EF                                   l12390 43AE  
                                 l12374 425C                                   l11806 0FF0  
                                 l11742 0C32                                   l11726 0B12  
                                 l11718 0A48                                   l11646 0554  
                                 l11590 01EA                                   l12286 9A3C  
                                 l10598 5532                                   l12384 4390  
                                 l11816 1092                                   l11728 0B34  
                                 l11592 0216                                   l12386 4398  
                                 l11842 119A                                   l11826 10E2  
                                 l11754 0CBA                                   l11762 0D24  
                                 l11770 0D90                                   l11666 05F6  
                                 l11658 0594                                   l11594 022C  
                                 l11922 632E                                   l11914 62D2  
                                 l12722 2C02                                   l12706 28CC  
                                 l12570 2268                                   l12562 2230  
                                 l11684 06B8                                   l11668 0602  
                                 l11932 6524                                   l12732 2D7E  
                                 l12740 2DC8                                   l12564 2238  
                                 l11790 0F3A                                   l11694 077A  
                                 l11598 0258                                   l11862 6936  
                                 l12750 2E0C                                   l12718 2BA0  
                                 l12734 2DA8                                   l11688 06F0  
                                 l11960 5844                                   l12568 2256  
                                 l11778 0EA2                                   l11882 6A26  
                                 l11954 580A                                   l12666 2672  
                                 l11892 6AE0                                   l12764 2E54  
                                 l12756 2E1E                                   l12676 2708  
                                 l12684 2846                                   l11886 6A56  
                                 l11878 69EA                                   l11990 59D6  
                                 l11974 58E0                                   l11966 5880  
                                 l12758 2E36                                   l12686 2874  
                                 l11896 6B0C                                   l12768 2E7A  
                                 l12778 2ECE                                   l12698 28A8  
                                 l11998 5A5C                         __end_of___aodiv 6E08  
                          _Volts_to_SOC 9D04                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 3EC6  
                                 _ADCLK 003EFF                         __end_of___aomod 72BC  
                                 _ADPCH 003EF1                         __end_of___fldiv 4ADE  
                                 _ADREF 003EFD                         __end_of___awdiv 882C  
                       __end_of___flneg A768                                   STR_10 FDE3  
                                 STR_11 FDF9                                   STR_12 FF2E  
                                 STR_21 FF61                                   STR_13 FF3F  
                                 STR_14 FF72                                   STR_22 FE86  
                                 STR_30 FE25                                   STR_31 FF83  
                                 STR_23 FEAC                                   STR_15 FE0F  
                                 STR_40 FE60                                   STR_32 FF83  
                                 STR_24 FE99                                   STR_16 FDCD  
                                 STR_33 FF61                                   STR_41 FFBD  
                                 STR_25 FEF8                                   STR_17 FD6A  
                         __CFG_WDTE$OFF 000000                                   STR_42 FFBD  
                                 STR_34 FFFB                                   STR_26 FED2  
                                 STR_18 FD84                                   STR_35 FFF8  
                                 STR_43 FF93                                   STR_19 FF83  
                                 STR_27 FEE5                                   STR_44 FF93  
                                 STR_28 FEBF                         __end_of___awmod 8E12  
                                 STR_45 FF93                                   STR_61 FFDA  
                                 STR_37 FFB1                                   STR_29 FE39  
                                 STR_62 FFE2                                   STR_38 FFC7  
                                 STR_46 FD9E                                   STR_55 FD69  
                                 STR_71 FFEF                                   STR_39 FE60  
                                 STR_48 FE73                                   STR_56 FD15  
                                 _ADRPT 003EEC                                   STR_81 FFF2  
                                 STR_65 FFE9                                   STR_57 FFD6  
                                 STR_49 FE4D                                   STR_90 FFE6  
                                 STR_74 FFEC                                   STR_58 FFDE  
                                 STR_67 FFE9                                   STR_76 FFEC  
                                 STR_84 FFF5                                   STR_69 FFEF  
                                 STR_86 FFF5                                   STR_79 FFF2  
                                 STR_88 FFE6                         __end_of___flmul 370A  
                       __end_of___flsub A7F4                         __end_of___fltol 82AA  
                                 u10250 8BFA                                   u10330 96D6  
                                 u11050 10B8                                   u11210 62B8  
                                 u10500 52E6                                   u10420 4FBA  
                                 u10270 8C76                                   u10430 4FBC  
                                 u11070 116E                                   u11150 6A4C  
                                 u12030 2538                                   u10511 5316  
                                 u10520 532C                                   u11080 1170  
                                 u10600 00DA                                   u11160 6A92  
                                 u11400 5A78                                   u11320 58D8  
                                 u10521 532A                                   u10337 96C8  
                                 u11241 6566                                   u10530 5340  
                                 u10450 502C                                   u11250 657C  
                                 u11330 592C                                   u12050 2736  
                       __end_of___lodiv 7FC4                                   u11251 657A  
                                 u11411 5AA8                                   u10540 5344  
                                 u11260 6590                                   u11420 5ABE  
                                 u11340 592E                                   u11500 13BE  
                                 u11421 5ABC                                   u10470 503E  
                                 u10630 0194                                   u11190 6B6E  
                                 u11270 6594                                   u11430 5AD2  
                                 u11510 13C0                                   u10390 68C0  
                                 u11167 6A84                                   u10560 535A  
                                 u10720 050E                                   u10640 0196  
                                 u11440 5AD6                                   u11360 598C  
                                 u11520 13E6                                   u10490 508E  
                                 u11370 598E                                   u11290 57F0  
                                 _U1P1H 003DED                                   u10820 0648  
                                 u11620 1748                                   _U1P2H 003DEF  
                                 u10750 0562                                   u10670 02A6  
                                 u11390 5A58                                   u11550 1540  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u10680 02A8  
                                 u11640 18BC                                   u11560 1542  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u11570 1568                                   _U1P3L 003DF0  
                                 u11395 5A3A                                   u10780 05C6  
                                 u11740 1EB4                                   u11670 1B34  
                                 _U2P1L 003DD4                                   u11760 2064  
                                 u11680 1B36                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u10890 0A18  
                                 _U2P3L 003DD8                                   u11780 9B5C  
                                 u10990 0EE4                                   _T5CLK 003F9D  
                       __end_of___lomod 896C                                   u11970 76D6  
                                 u11980 76D8                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00AB                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 003E                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result AAC4  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR B440                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 86DE  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR A592                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR B2C2                            _DMA1CON1bits 003BFD  
                                 _fabsf 9920                                   _flags 0025  
              __size_of_calc_model_data 03A2                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD                                   _fputc 8BD6  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha A90A  
                                 _fputs 9C6C                         __end_of_isdigit ACFA  
                       __end_of_ivln2_h FD0D                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand AB9E                                   _width 0021  
                                 _putch B28C                         __end_of_islower AC9A  
                       __end_of_isspace A636                _INT1_SetInterruptHandler AF66  
                       __end_of_isupper ACCA                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler AEEE  
           _UART1_SetRxInterruptHandler AEC6                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf 924E                         __end_of_tolower A0DA  
                       __end_of_strncmp 74DC                         __end_of_toupper A056  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr B030  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize A83A  
                 __end_of_ringBufS_init AE4E                         __initialization 9036  
                     _UART2_rx_vect_isr B058                            __end_of_cp_h FD15  
                          __end_of_cp_l FD11                            __end_of_atoi 707C  
                          __end_of_ctoa 9FD2                            __end_of_main 2EE0  
                          __end_of_dtoa 540A                            __end_of_nanf A424  
                          __end_of_spin FD01                            __end_of_stoa 6B88  
                          __end_of_utoa 65DE                            __end_of_xtoa 5B90  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0039  
               __end_of_TMR2_Initialize B2F2                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button A9CC                _TMR5_SetInterruptHandler AF16  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 00A2                       _port_data_dma_ptr B3D0  
                    esr_check@esr_state 002D                     ??_UART2_rx_vect_isr 003E  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize ADAC  
                       _PWM8_Initialize B308                        _UART1_Initialize A7F4  
                     _UART2_tx_vect_isr B030                      _UART2_Transmit_ISR AD80  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan A2FC  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue A90A  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0039                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1017 A584                                  _RB6PPS 003A0E  
                                i1l1205 8646                    _start_switch_handler B19E  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize A8C6                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright B398  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u930_20 89A4                                  u930_21 899E  
                                u934_24 8A84                                  u934_25 8A80  
                                u927_28 8984                                  u960_48 B168  
                                u952_48 B144                                  u954_28 B0D8  
                                u963_28 B0FC                    __size_of_hid_display 0102  
                                u994_44 A13E                                  u899_20 AC0E  
                                u994_45 A138                                  u899_26 AC10  
                      __end_of___xxtofl 78F2   __end_of_ADCC_DischargeSampleCapacitor B406  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor B3FE  
              __end_of_send_lcd_cmd_dma A5E4                         _TMR3_WriteTimer AA0C  
                   ??_UART2_tx_vect_isr 003E               __end_of_UART2_rx_vect_isr B080  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize B3C6  
                      _UART2_Initialize A424                                  _WaitMs AB32  
                       _conv_raw_result 4ADE                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 841A  
                                ___fleq 96E8                       _ADCC_ThresholdISR A22C  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 9D96  
                                _efgtoa 0000                                  _floorf 5F32  
                    ?_ADCC_ThresholdISR 0039                                  _memset 65DE  
                  __size_of_help_button 0038                                  clear_0 90CA  
                                clear_1 90DE                                  clear_2 90F0  
                                clear_3 90FC                                  clear_4 9108  
                                clear_5 9114                                  clear_6 9120  
                                clear_7 912C               __end_of_port_data_dma_ptr B3DA  
                                _printf A360                      _eaDogM_WriteString 9B24  
                                _strcpy 9614                               ?_ADCC_ISR 0039  
                                _strlen 9BCA                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 05FF                         _ADCC_Initialize A1C2  
                        _PMD_Initialize B334              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr B058                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0039  
                __end_of_start_adc_scan A360                            __mediumconst FB28  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay A4DC  
                      __end_of_spinners 9614                        __end_of_vfprintf 9A7A  
                            _StartTimer A94C           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize A880                       _SYSTEM_Initialize A6D6  
                            __accesstop 0060                 __end_of__initialization 913E  
                             ?_INT0_ISR 0039                               ?_INT1_ISR 0039  
                  __end_of_display_help B41E                    __end_of_display_info B416  
             __end_of_CLKREF_Initialize B3D0                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer A9CC  
                 _set_temp_display_help B37A                        _clear_hid_pflags B0A4  
                 __end_of_TMR3_CallBack B134               __end_of_ADCC_ThresholdISR A296  
                    __size_of_calc_bsoc 069E                  __end_of_ringBufS_flush 9E28  
                        __pcstackCOMRAM 0039                              ___inthi_sp 10C2  
                            ___intlo_sp 1861                            __pidataBANK0 AAFC  
                          __pidataBANK1 9350                            __pidataBANK2 97AC  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf 99CE  
                             ?_TMR3_ISR 0039                               ?_TMR5_ISR 0039  
                             ?_TMR6_ISR 0039                          ivt0x8_undefint 00AC  
                         __end_of_fputc 8CFA                           __end_of_fputs 9D04  
                         __end_of_srand ABD2                   __end_of_TMR5_CallBack B110  
                         __end_of_putch B2A6                 __end_of_PWM8_Initialize B31E  
               __end_of_TMR6_Initialize ADD6                       _adc_int_t_handler A0DA  
                __end_of_PMD_Initialize B348                              __end_of_bp FD09  
                            ??_ADCC_ISR 0039                   __end_of_TMR6_CallBack B17C  
           __size_of_EXT_INT_Initialize 0034                  __size_of_calc_ror_data 0174  
                         _DMA1_DMAA_ISR B3E8                   TMR3_ISR@CountCallBack 00C2  
                        _clear_adc_scan B426                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 00B7  
             __end_of_SYSTEM_Initialize A720                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer AA4C  
                            __pbssBANK0 0060                              __pbssBANK1 01F3  
                            __pbssBANK2 02BC                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            _check_help 74DC                 __end_of_conv_raw_result 4F8A  
                    __size_of_esr_check 03CC                   _INT0_InterruptHandler 00BD  
                            ??_INT0_ISR 0039                              ??_INT1_ISR 003F  
                     __end_of_TimerDone AE76                        _DMA1_DMADCNT_ISR B3DC  
                    __size_of_init_bsoc 0170              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma AC3A                   __end_of_wait_lcd_done B270  
      __end_of_TMR3_SetInterruptHandler AF66                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler AF16                              ??_TMR3_ISR 03E4  
               __end_of_ADCC_Initialize A22C                              ??_TMR5_ISR 0043  
             __end_of_adc_int_t_handler A158                              ??_TMR6_ISR 003E  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler AFDE   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler AFB6                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR B270                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan B42C  
                        ?_DMA1_DMAA_ISR 0039                        _DMA1_DMASCNT_ISR B3B8  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               u1190_28 B120                                 _U2ERRIR 003DE1  
                               u1186_20 42FE                                 u1188_20 43A6  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0039  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 4564  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch AD28  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer AA0C  
               __size_of_switch_handler 013C                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one B37A              __end_of_set_load_relay_two B36A  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 7FC4                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim B2C2                                 __Lparam 0000  
              __end_of_UART1_Initialize A83A                       __end_of_hid_input 9F4A  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 6B88  
                               ___fladd 370A                                 ___aomod 707C  
                               ___fldiv 4564                                 ___awdiv 86DE  
                               ___flneg A720                                 ___awmod 8CFA  
                               ___flmul 2EE0                                 ___flsub A7AE  
                               ___fltol 8138                                 ___lodiv 7E44  
                               ___lomod 882C               __end_of_UART1_Receive_ISR B28C  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 952E                                 __pcinit 9036  
              __end_of_mode_lamp_bright B3A6                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand B38A  
                               __ramtop 2000                                 __ptext0 21F0  
                               __ptext1 B080                                 __ptext2 B19E  
                               __ptext3 AB9E                                 __ptext4 952E  
                               __ptext5 AC3A                                 __ptext6 9444  
                               __ptext7 ADD6                                 __ptext8 ADFE  
                               __ptext9 B1BE                       __end_of_esr_check 57D6  
                     _UART2_Receive_ISR B236                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                                 us611999 6DF2  
                 _OSCILLATOR_Initialize B31E                                 us622999 72AA  
                          __size_of_abs 0046                                 us712999 895C  
                               us707999 7FAE                            __size_of_pad 0114  
                     __end_of_init_bsoc 841A                                 _isalpha A8C6  
                               _isdigit ACCA                                 _ivln2_h FD09  
                             _T3CONbits 003FA6                                 _mode_sw 002F  
                     __end_of_lp_filter 7CAE                                 _islower AC6A  
                               _isspace A5E4                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize A482  
                               _isupper AC9A              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 9144                                 _tolower A056  
                 __size_of_display_help 0008                                 _utctime 0096  
                 __size_of_display_info 0008                                 _strncmp 72BC  
                               _toupper 9FD2                    end_of_initialization 913E  
             __size_of_convert_adc_data 00B8                      _check_enter_button A98C  
                             i1u1199_20 863C                               i2u1001_48 B01C  
   __end_of_UART2_SetRxInterruptHandler AEC6             _UART2_SetRxInterruptHandler AE9E  
                             i2u1003_48 B044                               i2u1005_48 B06C  
                     __end_of_set_vterm B1FA                       __end_of_vfpfcnvrt 21F0  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd B438  
             __end_of_UART2_Receive_ISR B254                          wdtdelay@dcount 009A  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 003F  
                 _INT1_InterruptHandler 00BA                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc B43E                _TMR3_SetInterruptHandler AF3E  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler AEEE  
                          _display_help B416                   _TMR5_InterruptHandler 00A5  
                          _display_info B40E    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags B0C8                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler B006             _ADCC_SetADIInterruptHandler AFDE  
                            _update_lcd 8F26                         _calc_model_data 5B90  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc B080                         _DMA1_Initialize A158  
                            _start_bsoc B17C                         _SPI1_Initialize B2F2  
                 __end_of_get_vterm_ptr AD28                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs AB68  
          __end_of_INTERRUPT_Initialize A2FC                              _vterm_dump 8AA8  
                        __end_of___flge 857C                          __end_of___fleq 97AC  
  __end_of_INT0_DefaultInterruptHandler B44C   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler B44A              __size_of_UART1_Receive_ISR 001C  
                       _DMA2_Initialize A4DC                           __pidataBIGRAM 78F2  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 0162  
                     __size_of_TMR5_ISR 005A                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 629E  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 007A  
                        __end_of_memset 68CA                          __end_of_printf A3C2  
              __end_of_DMA1_DMADCNT_ISR B3E6             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack B158                          __end_of_strcpy 96E8  
                        __end_of_strlen 9C6C                     start_initialization 9036  
  __end_of_TMR5_DefaultInterruptHandler AC3A   __size_of_TMR5_DefaultInterruptHandler 0034  
          _TMR5_DefaultInterruptHandler AC06         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs A7AE                   __end_of_INT1_CallBack B0EC  
             __size_of_set_display_info 001E                             __end_of_pad 8F26  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd AE26  
                        _switch_handler 896C           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 006C  
                 __end_of___fpclassifyf 7E44                           _uart2RxBuffer 0500  
              __end_of_DMA1_DMASCNT_ISR B3C6                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR B3F4                     __end_of_hid_display 9350  
            __end_of_send_port_data_dma A688                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone AE4E                           _ringBufS_init AE26  
                           __pdataBANK0 00C4                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize AC06  
               __end_of_calc_model_data 5F32                     __end_of_help_button AAFC  
       __end_of_eaDogM_WriteStringAtPos AB9E                     __end_of_BVSOC_TABLE FBF9  
                  calc_model_data@bcror 008E                             __pbssBIGRAM 07FF  
               __end_of_DMA1_Initialize A1C2                    calc_model_data@bvror 0092  
                           __pbssCOMRAM 0021        __end_of_INT0_SetInterruptHandler AFB6  
                         __pcstackBANK3 03E4                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 8AA8  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize B308  
              _UART1_RxInterruptHandler 00B1                _UART2_TxInterruptHandler 00B4  
                             __end_of_T FC89                        _convert_adc_data 9868  
                             _calc_bsoc 3EC6               __size_of_ringBufS_put_dma 00AA  
                          _init_display 9444                  __end_of_DMA1_DMAOR_ISR B3FE  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A8  
                    calc_ror_data@bcror 0086                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize A536                      calc_ror_data@bvror 008A  
                _PIN_MANAGER_Initialize 9E28                __size_of_TMR3_Initialize 0046  
                  __end_of_wait_lcd_set B432                           __pmediumconst FB28  
                             __ptext100 5B90                               __ptext101 B438  
                             __ptext110 AE9E                               __ptext102 B17C  
                             __ptext111 A7F4                               __ptext103 7AF2  
                             __ptext120 B2F2                               __ptext112 AEC6  
                             __ptext104 A7AE                               __ptext121 B308  
                             __ptext113 ADAC                               __ptext105 370A  
                             __ptext130 A4DC                               __ptext122 B334  
                             __ptext114 AEEE                               __ptext106 2EE0  
                             __ptext131 A158                               __ptext123 9E28  
                             __ptext115 A83A                               __ptext107 A6D6  
                             __ptext140 A538                               __ptext132 B3C6  
                             __ptext124 B31E                               __ptext116 AF16  
                             __ptext108 A424                               __ptext141 A9CC  
                             __ptext133 A1C2                               __ptext125 A296  
                             __ptext117 A880                               __ptext109 AE76  
                             __ptext150 B3D0                               __ptext142 B0EC  
                             __ptext134 AFB6                               __ptext126 B41E  
                             __ptext118 AF3E                               __ptext151 B3A8  
                             __ptext143 AC06                               __ptext135 AFDE  
                             __ptext127 ABD2                               __ptext119 B2DA  
                             __ptext160 B008                               __ptext152 B134  
                             __ptext144 857C                               __ptext136 AA4C  
                             __ptext128 AF66                               __ptext161 B270  
                             __ptext153 B44A                               __ptext145 AA0C  
                             __ptext137 B0C8                               __ptext129 AF8E  
                             __ptext170 B3DC                               __ptext162 B030  
                             __ptext154 B440                               __ptext146 B110  
                             __ptext138 B446                               __ptext171 B3E8  
                             __ptext163 AD80                               __ptext155 AD54  
                             __ptext147 B448                               __ptext139 896C  
                             __ptext172 B3F4                               __ptext164 B058  
                             __ptext156 A0DA                               __ptext148 3EC6  
                             __ptext173 0000                               __ptext165 B236  
                             __ptext157 B44C                               __ptext149 A636  
                             __ptext166 B2A8                               __ptext158 B44E  
                             __ptext167 B158                               __ptext159 A22C  
                             __ptext168 A688                               __ptext169 B3B8  
                             _hid_input 9EBA                      __end_of_StartTimer A98C  
                    _set_load_relay_one B36A                      _set_load_relay_two B35A  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00E6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR AD54  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 007E  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 540A                 __size_of_get_raw_result 001E  
                        __size_of_fabsf 00AE                               _init_bsoc 82AA  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 7AF2                             _hid_display 924E  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize A296                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0039  
                              _INT0_ISR B3A8                                _INT1_ISR AA4C  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 02E5  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack B110  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0046                                i2u997_48 AD6C  
                              i2u999_48 A262                                i2u999_49 A276  
                             _set_vterm B1DC                     __size_of_update_lcd 0110  
                           _help_button AAC4                                _TMR3_ISR 857C  
                           _BVSOC_TABLE FB29                                _TMR5_ISR A538  
                              _TMR6_ISR B2A8                               _port_data 05FF  
                   __size_of_static_soc 0024                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack B0EC                              _ADCON0bits 003EF8  
                    __end_of_check_help 76EE                               _start_lcd B432  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack B158                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc B438  
                      _set_display_info B1FA                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 904A                               copy_data1 9070  
                             copy_data2 9092                               copy_data3 90B4  
              _INT0_SetInterruptHandler AF8E                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler AE9E             _UART2_SetTxInterruptHandler AE76  
                          _uart1RxCount 0036                            _uart2RxCount 0030  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done B254                            _send_lcd_cmd ADFE  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler B44E  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140                      __end_of_get_switch AD54  
                 __end_of_DMA1_DMAA_ISR B3F2                      ___fpclassifyf@F463 0082  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 76EE                       ?_DMA1_DMADCNT_ISR 0039  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand B398                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 003F                                __ptext10 AE26  
                              __ptext11 82AA                                __ptext20 B3FE  
                              __ptext12 9D04                                __ptext21 B426  
                              __ptext13 924E                                __ptext30 9144  
                              __ptext22 B406                                __ptext14 9EBA  
                              __ptext31 ACFA                                __ptext23 B35A  
                              __ptext15 AD28                                __ptext40 B432  
                              __ptext32 AB32                                __ptext24 B36A  
                              __ptext16 540A                                __ptext41 9D96  
                              __ptext33 8F26                                __ptext25 B38A  
                              __ptext17 AA8A                                __ptext50 629E  
                              __ptext42 65DE                                __ptext34 AB68  
                              __ptext26 9868                                __ptext18 A2FC  
                              __ptext51 882C                                __ptext43 A360  
                              __ptext35 A592                                __ptext27 B0A4  
                              __ptext19 B348                                __ptext60 7CAE  
                              __ptext52 7E44                                __ptext44 99CE  
                              __ptext36 B254                                __ptext28 74DC  
                              __ptext61 8138                                __ptext53 72BC  
                              __ptext45 1244                                __ptext37 A482  
                              __ptext29 8AA8                                __ptext70 9F4A  
                              __ptext62 A720                                __ptext54 68CA  
                              __ptext46 57D6                                __ptext38 9B24  
                              __ptext71 8E12                                __ptext63 96E8  
                              __ptext55 0000                                __ptext47 9FD2  
                              __ptext39 B42C                                __ptext80 B1DC  
                              __ptext72 9BCA                                __ptext64 8CFA  
                              __ptext56 A056                                __ptext48 AC6A  
                              __ptext81 B37A                                __ptext73 9C6C  
                              __ptext65 86DE                                __ptext57 AC9A  
                              __ptext49 A8C6                                __ptext90 B416  
                              __ptext82 B1FA                                __ptext74 8BD6  
                              __ptext66 4F8A                                __ptext58 9614  
                              __ptext91 A98C                                __ptext83 B2C2  
                              __ptext75 B28C                                __ptext67 A768  
                              __ptext59 5F32                                __ptext92 7FC4  
                              __ptext84 B398                                __ptext76 9A7A  
                              __ptext68 707C                                __ptext93 9920  
                              __ptext85 A90A                                __ptext77 6E08  
                              __ptext69 6B88                                __ptext94 4ADE  
                              __ptext86 AAC4                                __ptext78 A5E4  
                              __ptext95 A3C2                                __ptext87 AE4E  
                              __ptext79 ACCA                                __ptext96 B218  
                              __ptext88 A94C                                __ptext97 76EE  
                              __ptext89 B40E                                __ptext98 4564  
                              __ptext99 841A                        __size_of_isupper 0030  
                              us1110999 68DC                                us1041999 4FA4  
                              us1122999 6304                                us1131999 5856  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma 9A7A                    __end_of_Volts_to_SOC 9D96  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 0CF0                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0039                   __end_of_init_port_dma AC6A  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 00AE                               stoa@F1166 00EC  
                    ??_DMA1_DMASCNT_ISR 003F            __end_of_ADCC_StartConversion B35A  
                              _spi_link 0060                                _wdtdelay A482  
            __end_of_UART2_Transmit_ISR ADAC                                _spinners 952E  
                              _vfprintf 99CE                __end_of_convert_adc_data 9920  
            __end_of_PWM8_LoadDutyValue A94C    __end_of_TMR3_DefaultInterruptHandler B44A  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler B448  
  __end_of_INT1_DefaultInterruptHandler B448   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler B446                      _send_port_data_dma A636  
                         ??_Default_ISR 0039                             _uart1RxHead 0038  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0032  
                           _uart1RxTail 0037                          _get_raw_result B218  
                           _uart2TxHead 0035                             _uart2RxTail 0031  
                             spinners@s 0074                             _uart2TxTail 0034  
                          _wait_lcd_set B42C                        Volts_to_SOC@slot 002E  
                    _EXT_INT_Initialize ABD2    __end_of_TMR6_DefaultInterruptHandler A6D6  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler A688  
  __end_of_ADCC_DefaultInterruptHandler B44E   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler B44C                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long ADD6  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help B38A  
                 __end_of_calc_ror_data 8138                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 9BCA                   __end_of_mode_lamp_dim B2DA  
               __end_of_adc_int_handler B450                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd 9036  
                _uart2TxBufferRemaining 0033                      __end_of_static_soc B0A4  
                    __end_of_start_bsoc B19E                          _FVR_Initialize B41E  
                __end_of_get_raw_result B236                        _send_lcd_cmd_dma A592  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0029  
      __end_of_INT1_SetInterruptHandler AF8E               __size_of_UART1_Initialize 0046  
                      ??_DMA1_DMAOR_ISR 003F               __end_of_send_lcd_cmd_long ADFE  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR B446  
        __end_of_PIN_MANAGER_Initialize 9EBA               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 8BD6                 _eaDogM_WriteStringAtPos AB68  
                         _get_vterm_ptr ACFA                          _check_adc_scan B406  
             __size_of_UART2_Initialize 005E  
