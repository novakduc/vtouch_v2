

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Mar  8 18:39:27 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=4,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=4,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=4,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=4,class=CODE,delta=1
   110                           	psect	text91,global,reloc=4,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=4,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=4,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=4,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=4,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=4,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=4,class=CODE,delta=1
   124                           	psect	text105,global,reloc=4,class=CODE,delta=1
   125                           	psect	text106,global,reloc=4,class=CODE,delta=1
   126                           	psect	text107,global,reloc=4,class=CODE,delta=1
   127                           	psect	text108,global,reloc=4,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   132                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   135                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   136  0000                     
   137                           ; Version 2.05
   138                           ; Generated 20/12/2018 GMT
   139                           ; 
   140                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   141                           ; All rights reserved.
   142                           ; 
   143                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   144                           ; 
   145                           ; Redistribution and use in source and binary forms, with or without modification, are
   146                           ; permitted provided that the following conditions are met:
   147                           ; 
   148                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   149                           ;        conditions and the following disclaimer.
   150                           ; 
   151                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   152                           ;        of conditions and the following disclaimer in the documentation and/or other
   153                           ;        materials provided with the distribution.
   154                           ; 
   155                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   156                           ;        software without specific prior written permission.
   157                           ; 
   158                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   159                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   160                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   161                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   162                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   163                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   164                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   165                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   166                           ; 
   167                           ; 
   168                           ; Code-generator required, PIC18F57K42 Definitions
   169                           ; 
   170                           ; SFR Addresses
   171  0000                     
   172 ;;_sum	offset	0
   173 ;;_mode	offset	2
   174 ;;_block	offset	0
   175 ;;_rxData	offset	3
   176 ;;_t_link	offset=-1 (param)
   177 ;;_stream	offset=-1 (param)
   178 ;;_function	offset=-2 (param)
   179 ;;_f	offset	0
   180 ;;_ap	offset	5
   181 ;;_s	offset=-2 (param)
   182 ;;_fmt	offset=-3 (param)
   183 ;;_rxData	offset	0
   184 ;;_r_link	offset=-1 (param)
   185 ;;_k	offset	0
   186 ;;_checksum	offset	2
   187 ;;_i	offset	4
   188 ;;_byte_block	offset=-2 (param)
   189 ;;_length	offset=-3 (param)
   190 ;;_fake	offset=-4 (param)
   191 ;;_i	offset	0
   192 ;;_sum	offset	2
   193 ;;_byte_block	offset=-2 (param)
   194 ;;_byte_count	offset=-4 (param)
   195 ;;_bufData	offset=-1 (param)
   196 ;;_txData	offset=-1 (param)
   197 ;;_byte_block	offset=-1 (param)
   198 ;;_clear	offset=-2 (param)
   199 ;;_numMilliseconds	offset=-2 (param)
   200 ;;_timer	offset=-1 (param)
   201 ;;_timer	offset=-1 (param)
   202 ;;_count	offset=-3 (param)
   203 ;;_readValue	offset	0
   204 ;;_cmd	offset=-1 (param)
   205 ;;_cmd	offset=-1 (param)
   206 ;;_data	offset=-1 (param)
   207 ;;__this	offset=-2 (param)
   208 ;;_r	offset=-1 (param)
   209 ;;_c	offset=-2 (param)
   210 ;;_strPtr	offset=-3 (param)
   211 ;;_strPtr	offset=-1 (param)
   212 ;;_cmd	offset=-1 (param)
   213 ;;_strPtr	offset=-1 (param)
   214 ;;_delay	offset=-4 (param)
   215 ;;__this	offset=-2 (param)
   216 ;;_clearBuffer	offset=-3 (param)
   217 ;;_s	offset	0
   218 ;;_k	offset	2
   219 ;;_dest	offset=-2 (param)
   220 ;;_c	offset=-4 (param)
   221 ;;_n	offset=-6 (param)
   222 ;;_ap	offset	0
   223 ;;_fmt	offset=-2 (param)
   224 ;;_cfmt	offset	0
   225 ;;_fp	offset=-2 (param)
   226 ;;_fmt	offset=-3 (param)
   227 ;;_ap	offset=-5 (param)
   228 ;;_vfpfcnvrt$3757	offset	0
   229 ;;_llu	offset	2
   230 ;;_ll	offset	10
   231 ;;_done	offset	18
   232 ;;_cp	offset	20
   233 ;;_c	offset	22
   234 ;;_fp	offset=-2 (param)
   235 ;;_fmt	offset=-4 (param)
   236 ;;_ap	offset=-6 (param)
   237 ;;_xtoa$3743	offset	0
   238 ;;_xtoa$3742	offset	2
   239 ;;_n	offset	4
   240 ;;_c	offset	12
   241 ;;_i	offset	14
   242 ;;_w	offset	16
   243 ;;_p	offset	18
   244 ;;_fp	offset=-2 (param)
   245 ;;_d	offset=-10 (param)
   246 ;;_x	offset=-11 (param)
   247 ;;_toupper$4332	offset	0
   248 ;;_c	offset=-2 (param)
   249 ;;_c	offset=-2 (param)
   250 ;;_c	offset=-2 (param)
   251 ;;_c	offset=-2 (param)
   252 ;;_nuls	offset	0
   253 ;;_l	offset	7
   254 ;;_p	offset	9
   255 ;;_cp	offset	11
   256 ;;_w	offset	13
   257 ;;_i	offset	15
   258 ;;_fp	offset=-2 (param)
   259 ;;_s	offset=-4 (param)
   260 ;;_dtoa$3722	offset	0
   261 ;;_n	offset	2
   262 ;;_i	offset	10
   263 ;;_s	offset	12
   264 ;;_w	offset	14
   265 ;;_p	offset	16
   266 ;;_fp	offset=-2 (param)
   267 ;;_d	offset=-10 (param)
   268 ;;_a	offset=-2 (param)
   269 ;;_sign	offset	0
   270 ;;_counter	offset	1
   271 ;;_dividend	offset=-8 (param)
   272 ;;_divisor	offset=-16 (param)
   273 ;;_quotient	offset	0
   274 ;;_sign	offset	8
   275 ;;_counter	offset	9
   276 ;;_dividend	offset=-8 (param)
   277 ;;_divisor	offset=-16 (param)
   278 ;;_w	offset	0
   279 ;;_fp	offset=-2 (param)
   280 ;;_c	offset=-3 (param)
   281 ;;_w	offset	0
   282 ;;_i	offset	2
   283 ;;_fp	offset=-2 (param)
   284 ;;_buf	offset=-3 (param)
   285 ;;_p	offset=-5 (param)
   286 ;;_a	offset	0
   287 ;;_s	offset=-2 (param)
   288 ;;_i	offset	0
   289 ;;_c	offset	2
   290 ;;_s	offset=-1 (param)
   291 ;;_fp	offset=-3 (param)
   292 ;;_c	offset=-2 (param)
   293 ;;_fp	offset=-4 (param)
   294 ;;_c	offset=-1 (param)
   295 ;;__this	offset=-2 (param)
   296 ;;_c	offset=-3 (param)
   297 ;;_atoi$4219	offset	0
   298 ;;_atoi$4217	offset	2
   299 ;;_atoi$4218	offset	4
   300 ;;_n	offset	5
   301 ;;_neg	offset	7
   302 ;;_s	offset=-1 (param)
   303 ;;_isspace$4244	offset	0
   304 ;;_c	offset=-2 (param)
   305 ;;_c	offset=-2 (param)
   306 ;;_InterruptHandler	offset=-3 (param)
   307 ;;_InterruptHandler	offset=-3 (param)
   308 ;;_InterruptHandler	offset=-3 (param)
   309 ;;_InterruptHandler	offset=-3 (param)
   310 ;;_InterruptHandler	offset=-3 (param)
   311 ;;_InterruptHandler	offset=-3 (param)
   312 ;;_state	offset	0
   313 ;;_InterruptHandler	offset=-3 (param)
   314 ;;_InterruptHandler	offset=-3 (param)
   315 ;;_InterruptHandler	offset=-3 (param)
   316 ;;_InterruptHandler	offset=-3 (param)
   317 ;;_i	offset	0
   318 ;;_timerVal	offset=-2 (param)
   319                           
   320                           	psect	idataBANK0
   321  005E8A                     __pidataBANK0:
   322                           	opt callstack 0
   323                           
   324                           ;initializer for stoa@F1144
   325  005E8A  28                 	db	40
   326  005E8B  6E                 	db	110
   327  005E8C  75                 	db	117
   328  005E8D  6C                 	db	108
   329  005E8E  6C                 	db	108
   330  005E8F  29                 	db	41
   331  005E90  00                 	db	0
   332                           
   333                           	psect	idataBANK1
   334  004C50                     __pidataBANK1:
   335                           	opt callstack 0
   336                           
   337                           ;initializer for _H10
   338  004C50  0000               	dw	0
   339  004C52  9F75               	dw	40821
   340  004C54  000C               	dw	12
   341  004C56  01                 	db	1
   342  004C57  80                 	db	128
   343  004C58  01                 	db	1
   344  004C59  81                 	db	129
   345  004C5A  00                 	db	0
   346  004C5B  00                 	db	0
   347  004C5C  0A                 	db	10
   348  004C5D  0000               	dw	0
   349  004C5F  00                 	db	0
   350  004C60  00                 	db	0
   351  004C61  00                 	db	0
   352  004C62  00                 	db	0
   353  004C63  00                 	db	0
   354  004C64  00                 	db	0
   355  004C65  00                 	db	0
   356  004C66  00                 	db	0
   357  004C67  00                 	db	0
   358  004C68  00                 	db	0
   359  004C69  0A                 	db	10
   360  004C6A  0000               	dw	0
   361  004C6C  0001               	dw	1
   362  004C6E  0000               	dw	0
   363  004C70  01                 	db	1
   364  004C71  80                 	db	128
   365  004C72  00                 	db	0
   366  004C73  01                 	db	1
   367  004C74  00                 	db	0
   368  004C75  00                 	db	0
   369  004C76  0A                 	db	10
   370  004C77  0000               	dw	0
   371  004C79  0D89               	dw	3465
   372  004C7B  0000               	dw	0
   373  004C7D  01                 	db	1
   374  004C7E  80                 	db	128
   375  004C7F  01                 	db	1
   376  004C80  81                 	db	129
   377  004C81  00                 	db	0
   378  004C82  80                 	db	128
   379  004C83  0A                 	db	10
   380  004C84  0000               	dw	0
   381  004C86  0D89               	dw	3465
   382  004C88  0000               	dw	0
   383  004C8A  01                 	db	1
   384  004C8B  80                 	db	128
   385  004C8C  11                 	db	17
   386  004C8D  82                 	db	130
   387  004C8E  00                 	db	0
   388  004C8F  00                 	db	0
   389  004C90  0A                 	db	10
   390                           
   391                           ;initializer for _H24
   392  004C91  0000               	dw	0
   393  004C93  30                 	db	48
   394  004C94  31                 	db	49
   395  004C95  30                 	db	48
   396  004C96  39                 	db	57
   397  004C97  31                 	db	49
   398  004C98  31                 	db	49
   399  004C99  30                 	db	48
   400  004C9A  38                 	db	56
   401  004C9B  34                 	db	52
   402  004C9C  36                 	db	54
   403  004C9D  30                 	db	48
   404  004C9E  30                 	db	48
   405  004C9F  00                 	db	0
   406  004CA0  00                 	db	0
   407  004CA1  0001               	dw	1
   408  004CA3  0000               	dw	0
   409  004CA5  01                 	db	1
   410  004CA6  80                 	db	128
   411  004CA7  12                 	db	18
   412  004CA8  82                 	db	130
   413  004CA9  00                 	db	0
   414  004CAA  00                 	db	0
   415  004CAB  18                 	db	24
   416                           
   417                           ;initializer for _H18
   418  004CAC  0000               	dw	0
   419  004CAE  00                 	db	0
   420  004CAF  00                 	db	0
   421  004CB0  00                 	db	0
   422  004CB1  00                 	db	0
   423  004CB2  00                 	db	0
   424  004CB3  00                 	db	0
   425  004CB4  00                 	db	0
   426  004CB5  00                 	db	0
   427  004CB6  0001               	dw	1
   428  004CB8  0000               	dw	0
   429  004CBA  01                 	db	1
   430  004CBB  80                 	db	128
   431  004CBC  03                 	db	3
   432  004CBD  81                 	db	129
   433  004CBE  00                 	db	0
   434  004CBF  00                 	db	0
   435  004CC0  12                 	db	18
   436                           
   437                           ;initializer for _H14
   438  004CC1  0000               	dw	0
   439  004CC3  00                 	db	0
   440  004CC4  41                 	db	65
   441  004CC5  11                 	db	17
   442  004CC6  01                 	db	1
   443  004CC7  0001               	dw	1
   444  004CC9  0000               	dw	0
   445  004CCB  01                 	db	1
   446  004CCC  80                 	db	128
   447  004CCD  04                 	db	4
   448  004CCE  81                 	db	129
   449  004CCF  00                 	db	0
   450  004CD0  00                 	db	0
   451  004CD1  0E                 	db	14
   452                           
   453                           ;initializer for _H13
   454  004CD2  0000               	dw	0
   455  004CD4  00                 	db	0
   456  004CD5  01                 	db	1
   457  004CD6  21                 	db	33
   458  004CD7  0001               	dw	1
   459  004CD9  0000               	dw	0
   460  004CDB  01                 	db	1
   461  004CDC  80                 	db	128
   462  004CDD  0C                 	db	12
   463  004CDE  86                 	db	134
   464  004CDF  00                 	db	0
   465  004CE0  00                 	db	0
   466  004CE1  0D                 	db	13
   467                           
   468                           ;initializer for _H12
   469  004CE2  0000               	dw	0
   470  004CE4  00                 	db	0
   471  004CE5  01                 	db	1
   472  004CE6  0001               	dw	1
   473  004CE8  0000               	dw	0
   474  004CEA  01                 	db	1
   475  004CEB  80                 	db	128
   476  004CEC  02                 	db	2
   477  004CED  81                 	db	129
   478  004CEE  00                 	db	0
   479  004CEF  00                 	db	0
   480  004CF0  0C                 	db	12
   481                           
   482                           	psect	idataBANK3
   483  0050BC                     __pidataBANK3:
   484                           	opt callstack 0
   485                           
   486                           ;initializer for _H53
   487  0050BC  0000               	dw	0
   488  0050BE  00                 	db	0
   489  0050BF  00                 	db	0
   490  0050C0  00                 	db	0
   491  0050C1  00                 	db	0
   492  0050C2  00                 	db	0
   493  0050C3  00                 	db	0
   494  0050C4  00                 	db	0
   495  0050C5  00                 	db	0
   496  0050C6  00                 	db	0
   497  0050C7  00                 	db	0
   498  0050C8  00                 	db	0
   499  0050C9  00                 	db	0
   500  0050CA  00                 	db	0
   501  0050CB  00                 	db	0
   502  0050CC  00                 	db	0
   503  0050CD  00                 	db	0
   504  0050CE  00                 	db	0
   505  0050CF  00                 	db	0
   506  0050D0  00                 	db	0
   507  0050D1  00                 	db	0
   508  0050D2  00                 	db	0
   509  0050D3  00                 	db	0
   510  0050D4  00                 	db	0
   511  0050D5  00                 	db	0
   512  0050D6  00                 	db	0
   513  0050D7  00                 	db	0
   514  0050D8  00                 	db	0
   515  0050D9  00                 	db	0
   516  0050DA  00                 	db	0
   517  0050DB  00                 	db	0
   518  0050DC  00                 	db	0
   519  0050DD  00                 	db	0
   520  0050DE  00                 	db	0
   521  0050DF  00                 	db	0
   522  0050E0  00                 	db	0
   523  0050E1  00                 	db	0
   524  0050E2  00                 	db	0
   525  0050E3  00                 	db	0
   526  0050E4  00                 	db	0
   527  0050E5  00                 	db	0
   528  0050E6  00                 	db	0
   529  0050E7  00                 	db	0
   530  0050E8  00                 	db	0
   531  0050E9  0001               	dw	1
   532  0050EB  0000               	dw	0
   533  0050ED  01                 	db	1
   534  0050EE  80                 	db	128
   535  0050EF  0B                 	db	11
   536  0050F0  81                 	db	129
   537  0050F1  00                 	db	0
   538  0050F2  00                 	db	0
   539  0050F3  35                 	db	53
   540  0050F4  0000               	dw	0
   541  0050F6  00                 	db	0
   542  0050F7  16                 	db	22
   543  0050F8  20                 	db	32
   544  0050F9  4E                 	db	78
   545  0050FA  6F                 	db	111
   546  0050FB  77                 	db	119
   547  0050FC  20                 	db	32
   548  0050FD  57                 	db	87
   549  0050FE  65                 	db	101
   550  0050FF  20                 	db	32
   551  005100  41                 	db	65
   552  005101  72                 	db	114
   553  005102  65                 	db	101
   554  005103  20                 	db	32
   555  005104  54                 	db	84
   556  005105  61                 	db	97
   557  005106  6C                 	db	108
   558  005107  6B                 	db	107
   559  005108  69                 	db	105
   560  005109  6E                 	db	110
   561  00510A  67                 	db	103
   562  00510B  2E                 	db	46
   563  00510C  2E                 	db	46
   564  00510D  2E                 	db	46
   565  00510E  00                 	db	0
   566  00510F  00                 	db	0
   567  005110  00                 	db	0
   568  005111  00                 	db	0
   569  005112  00                 	db	0
   570  005113  00                 	db	0
   571  005114  00                 	db	0
   572  005115  00                 	db	0
   573  005116  00                 	db	0
   574  005117  00                 	db	0
   575  005118  00                 	db	0
   576  005119  00                 	db	0
   577  00511A  00                 	db	0
   578  00511B  00                 	db	0
   579  00511C  00                 	db	0
   580  00511D  00                 	db	0
   581  00511E  00                 	db	0
   582  00511F  00                 	db	0
   583  005120  00                 	db	0
   584  005121  0001               	dw	1
   585  005123  0000               	dw	0
   586  005125  01                 	db	1
   587  005126  80                 	db	128
   588  005127  03                 	db	3
   589  005128  8A                 	db	138
   590  005129  00                 	db	0
   591  00512A  00                 	db	0
   592  00512B  35                 	db	53
   593  0000                     _IVTADL	set	14493
   594  0000                     _IVTADH	set	14494
   595  0000                     _IVTADU	set	14495
   596  0000                     _PIE8bits	set	14744
   597  0000                     _PIR8bits	set	14760
   598  0000                     _SCANPR	set	14839
   599  0000                     _DMA2PR	set	14836
   600  0000                     _DMA1PR	set	14835
   601  0000                     _MAINPR	set	14834
   602  0000                     _ISRPR	set	14833
   603  0000                     _PIE2bits	set	14738
   604  0000                     _PIR2bits	set	14754
   605  0000                     _PIE9bits	set	14745
   606  0000                     _PIR9bits	set	14761
   607  0000                     _PIE6bits	set	14742
   608  0000                     _PIE3bits	set	14739
   609  0000                     _PMD7	set	14791
   610  0000                     _PMD6	set	14790
   611  0000                     _PMD5	set	14789
   612  0000                     _PMD4	set	14788
   613  0000                     _PMD3	set	14787
   614  0000                     _PMD2	set	14786
   615  0000                     _PMD1	set	14785
   616  0000                     _PMD0	set	14784
   617  0000                     _OSCTUNE	set	14814
   618  0000                     _OSCFRQ	set	14815
   619  0000                     _OSCEN	set	14813
   620  0000                     _OSCCON3	set	14811
   621  0000                     _OSCCON1	set	14809
   622  0000                     _IPR8bits	set	14728
   623  0000                     _IPR9bits	set	14729
   624  0000                     _IPR7bits	set	14727
   625  0000                     _IPR5bits	set	14725
   626  0000                     _IPR1bits	set	14721
   627  0000                     _IPR3bits	set	14723
   628  0000                     _IPR6bits	set	14726
   629  0000                     _IPR2bits	set	14722
   630  0000                     _PIE7bits	set	14743
   631  0000                     _PIE5bits	set	14741
   632  0000                     _PIE1bits	set	14737
   633  0000                     _PIR7bits	set	14759
   634  0000                     _PIR5bits	set	14757
   635  0000                     _PIR1bits	set	14753
   636  0000                     _PLLR	set	118496
   637  0000                     _SPI1SDIPPS	set	15071
   638  0000                     _RC6PPS	set	14870
   639  0000                     _RC5PPS	set	14869
   640  0000                     _RA6PPS	set	14854
   641  0000                     _RA5PPS	set	14853
   642  0000                     _RA4PPS	set	14852
   643  0000                     _SPI1SCKPPS	set	15070
   644  0000                     _U1RXPPS	set	15077
   645  0000                     _INT1PPS	set	15041
   646  0000                     _INT2PPS	set	15042
   647  0000                     _INT0PPS	set	15040
   648  0000                     _RC3PPS	set	14867
   649  0000                     _RB6PPS	set	14862
   650  0000                     _U2RXPPS	set	15080
   651  0000                     _SLRCONF	set	14995
   652  0000                     _SLRCONE	set	14979
   653  0000                     _SLRCOND	set	14963
   654  0000                     _SLRCONC	set	14947
   655  0000                     _SLRCONB	set	14931
   656  0000                     _SLRCONA	set	14915
   657  0000                     _ODCOND	set	14962
   658  0000                     _ODCONC	set	14946
   659  0000                     _ODCONB	set	14930
   660  0000                     _ODCONA	set	14914
   661  0000                     _ODCONF	set	14994
   662  0000                     _ODCONE	set	14978
   663  0000                     _WPUC	set	14945
   664  0000                     _WPUA	set	14913
   665  0000                     _WPUB	set	14929
   666  0000                     _WPUE	set	14977
   667  0000                     _WPUF	set	14993
   668  0000                     _WPUD	set	14961
   669  0000                     _ANSELA	set	14912
   670  0000                     _ANSELF	set	14992
   671  0000                     _ANSELE	set	14976
   672  0000                     _ANSELB	set	14928
   673  0000                     _ANSELC	set	14944
   674  0000                     _ANSELD	set	14960
   675  0000                     _DMA1SSA	set	15353
   676  0000                     _DMA1DSZ	set	15342
   677  0000                     _DMA1SSZ	set	15351
   678  0000                     _DMA1DSA	set	15344
   679  0000                     _DMA1CON0bits	set	15356
   680  0000                     _DMA1CON1bits	set	15357
   681  0000                     _DMA1CON0	set	15356
   682  0000                     _DMA1AIRQ	set	15358
   683  0000                     _DMA1SIRQ	set	15359
   684  0000                     _DMA1CON1	set	15357
   685  0000                     _CLC1CON	set	15476
   686  0000                     _CLC1GLS3	set	15485
   687  0000                     _CLC1GLS2	set	15484
   688  0000                     _CLC1GLS1	set	15483
   689  0000                     _CLC1GLS0	set	15482
   690  0000                     _CLC1SEL3	set	15481
   691  0000                     _CLC1SEL2	set	15480
   692  0000                     _CLC1SEL1	set	15479
   693  0000                     _CLC1SEL0	set	15478
   694  0000                     _CLC1POL	set	15477
   695  0000                     _CLKRCON	set	15589
   696  0000                     _CLKRCLK	set	15590
   697  0000                     _MD1CARL	set	15613
   698  0000                     _MD1CARH	set	15614
   699  0000                     _MD1SRC	set	15612
   700  0000                     _MD1CON1bits	set	15611
   701  0000                     _MD1CON0bits	set	15610
   702  0000                     _SPI1INTFbits	set	15642
   703  0000                     _SPI1RXB	set	15632
   704  0000                     _SPI1TXB	set	15633
   705  0000                     _SPI1TCNTL	set	15634
   706  0000                     _SPI1CON0	set	15636
   707  0000                     _SPI1CLK	set	15644
   708  0000                     _SPI1BAUD	set	15641
   709  0000                     _SPI1CON2	set	15638
   710  0000                     _SPI1CON1	set	15637
   711  0000                     _U2RXB	set	15824
   712  0000                     _U2TXB	set	15826
   713  0000                     _U2ERRIE	set	15842
   714  0000                     _U2ERRIR	set	15841
   715  0000                     _U2UIR	set	15840
   716  0000                     _U2FIFO	set	15839
   717  0000                     _U2BRGH	set	15838
   718  0000                     _U2BRGL	set	15837
   719  0000                     _U2CON2	set	15836
   720  0000                     _U2CON1	set	15835
   721  0000                     _U2CON0	set	15834
   722  0000                     _U2P3L	set	15832
   723  0000                     _U2P2L	set	15830
   724  0000                     _U2P1L	set	15828
   725  0000                     _U1RXB	set	15848
   726  0000                     _U1TXB	set	15850
   727  0000                     _U1ERRIE	set	15866
   728  0000                     _U1ERRIR	set	15865
   729  0000                     _U1UIR	set	15864
   730  0000                     _U1FIFO	set	15863
   731  0000                     _U1BRGH	set	15862
   732  0000                     _U1BRGL	set	15861
   733  0000                     _U1CON2	set	15860
   734  0000                     _U1CON1	set	15859
   735  0000                     _U1CON0	set	15858
   736  0000                     _U1P3H	set	15857
   737  0000                     _U1P3L	set	15856
   738  0000                     _U1P2H	set	15855
   739  0000                     _U1P2L	set	15854
   740  0000                     _U1P1H	set	15853
   741  0000                     _U1P1L	set	15852
   742  0000                     _ADCON0	set	16120
   743  0000                     _ADCLK	set	16127
   744  0000                     _ADACT	set	16126
   745  0000                     _ADREF	set	16125
   746  0000                     _ADSTAT	set	16124
   747  0000                     _ADCON3	set	16123
   748  0000                     _ADCON2	set	16122
   749  0000                     _ADCON1	set	16121
   750  0000                     _ADPREH	set	16119
   751  0000                     _ADPREL	set	16118
   752  0000                     _ADCAP	set	16117
   753  0000                     _ADACQH	set	16116
   754  0000                     _ADACQL	set	16115
   755  0000                     _ADPCH	set	16113
   756  0000                     _ADRPT	set	16108
   757  0000                     _ADACCU	set	16106
   758  0000                     _ADSTPTH	set	16101
   759  0000                     _ADSTPTL	set	16100
   760  0000                     _ADUTHH	set	16097
   761  0000                     _ADUTHL	set	16096
   762  0000                     _ADLTHH	set	16095
   763  0000                     _ADLTHL	set	16094
   764  0000                     _NCO1CONbits	set	16190
   765  0000                     _NCO1INCL	set	16187
   766  0000                     _NCO1INCH	set	16188
   767  0000                     _NCO1INCU	set	16189
   768  0000                     _NCO1ACCL	set	16184
   769  0000                     _NCO1ACCH	set	16185
   770  0000                     _NCO1ACCU	set	16186
   771  0000                     _NCO1CLK	set	16191
   772  0000                     _NCO1CON	set	16190
   773  0000                     _LATCbits	set	16316
   774  0000                     _T5CONbits	set	16282
   775  0000                     _T5CON	set	16282
   776  0000                     _TMR5L	set	16280
   777  0000                     _TMR5H	set	16281
   778  0000                     _T5CLK	set	16285
   779  0000                     _T5GATE	set	16284
   780  0000                     _T5GCON	set	16283
   781  0000                     _LATEbits	set	16318
   782  0000                     _T6CON	set	16276
   783  0000                     _T6TMR	set	16274
   784  0000                     _T6PR	set	16275
   785  0000                     _T6RST	set	16279
   786  0000                     _T6HLT	set	16277
   787  0000                     _T6CLKCON	set	16278
   788  0000                     _TRISD	set	16325
   789  0000                     _TRISC	set	16324
   790  0000                     _TRISB	set	16323
   791  0000                     _TRISA	set	16322
   792  0000                     _TRISF	set	16327
   793  0000                     _TRISE	set	16326
   794  0000                     _LATC	set	16316
   795  0000                     _LATB	set	16315
   796  0000                     _LATF	set	16319
   797  0000                     _LATA	set	16314
   798  0000                     _LATD	set	16317
   799  0000                     _LATE	set	16318
   800  0000                     _IVTLOCKbits	set	16340
   801  0000                     _IVTLOCK	set	16340
   802  0000                     _INTCON0bits	set	16338
   803  0000                     _GIE	set	130711
   804                           
   805                           	psect	smallconst
   806  002000                     __psmallconst:
   807                           	opt callstack 0
   808  002000  00                 	db	0
   809  002001                     STR_1:
   810  002001  4D                 	db	77	;'M'
   811  002002  20                 	db	32
   812  002003  25                 	db	37
   813  002004  64                 	db	100	;'d'
   814  002005  2C                 	db	44
   815  002006  20                 	db	32
   816  002007  48                 	db	72	;'H'
   817  002008  20                 	db	32
   818  002009  25                 	db	37
   819  00200A  30                 	db	48	;'0'
   820  00200B  32                 	db	50	;'2'
   821  00200C  78                 	db	120	;'x'
   822  00200D  25                 	db	37
   823  00200E  30                 	db	48	;'0'
   824  00200F  32                 	db	50	;'2'
   825  002010  78                 	db	120	;'x'
   826  002011  25                 	db	37
   827  002012  30                 	db	48	;'0'
   828  002013  32                 	db	50	;'2'
   829  002014  78                 	db	120	;'x'
   830  002015  25                 	db	37
   831  002016  30                 	db	48	;'0'
   832  002017  32                 	db	50	;'2'
   833  002018  78                 	db	120	;'x'
   834  002019  25                 	db	37
   835  00201A  30                 	db	48	;'0'
   836  00201B  32                 	db	50	;'2'
   837  00201C  78                 	db	120	;'x'
   838  00201D  25                 	db	37
   839  00201E  30                 	db	48	;'0'
   840  00201F  32                 	db	50	;'2'
   841  002020  78                 	db	120	;'x'
   842  002021  25                 	db	37
   843  002022  30                 	db	48	;'0'
   844  002023  32                 	db	50	;'2'
   845  002024  78                 	db	120	;'x'
   846  002025  25                 	db	37
   847  002026  30                 	db	48	;'0'
   848  002027  32                 	db	50	;'2'
   849  002028  78                 	db	120	;'x'
   850  002029  25                 	db	37
   851  00202A  30                 	db	48	;'0'
   852  00202B  32                 	db	50	;'2'
   853  00202C  78                 	db	120	;'x'
   854  00202D  25                 	db	37
   855  00202E  30                 	db	48	;'0'
   856  00202F  32                 	db	50	;'2'
   857  002030  78                 	db	120	;'x'
   858  002031  2C                 	db	44
   859  002032  20                 	db	32
   860  002033  43                 	db	67	;'C'
   861  002034  20                 	db	32
   862  002035  30                 	db	48	;'0'
   863  002036  78                 	db	120	;'x'
   864  002037  25                 	db	37
   865  002038  30                 	db	48	;'0'
   866  002039  34                 	db	52	;'4'
   867  00203A  78                 	db	120	;'x'
   868  00203B  20                 	db	32
   869  00203C  23                 	db	35
   870  00203D  00                 	db	0
   871  00203E                     STR_5:
   872  00203E  20                 	db	32
   873  00203F  45                 	db	69	;'E'
   874  002040  52                 	db	82	;'R'
   875  002041  52                 	db	82	;'R'
   876  002042  20                 	db	32
   877  002043  52                 	db	82	;'R'
   878  002044  25                 	db	37
   879  002045  64                 	db	100	;'d'
   880  002046  20                 	db	32
   881  002047  54                 	db	84	;'T'
   882  002048  25                 	db	37
   883  002049  64                 	db	100	;'d'
   884  00204A  20                 	db	32
   885  00204B  45                 	db	69	;'E'
   886  00204C  25                 	db	37
   887  00204D  64                 	db	100	;'d'
   888  00204E  20                 	db	32
   889  00204F  41                 	db	65	;'A'
   890  002050  25                 	db	37
   891  002051  64                 	db	100	;'d'
   892  002052  20                 	db	32
   893  002053  23                 	db	35
   894  002054  00                 	db	0
   895  002055                     STR_3:
   896  002055  20                 	db	32
   897  002056  53                 	db	83	;'S'
   898  002057  25                 	db	37
   899  002058  64                 	db	100	;'d'
   900  002059  46                 	db	70	;'F'
   901  00205A  25                 	db	37
   902  00205B  64                 	db	100	;'d'
   903  00205C  20                 	db	32
   904  00205D  23                 	db	35
   905  00205E  20                 	db	32
   906  00205F  20                 	db	32
   907  002060  20                 	db	32
   908  002061  20                 	db	32
   909  002062  00                 	db	0
   910  002063                     STR_4:
   911  002063  20                 	db	32
   912  002064  4F                 	db	79	;'O'
   913  002065  4B                 	db	75	;'K'
   914  002066  20                 	db	32
   915  002067  23                 	db	35
   916  002068  00                 	db	0
   917  002069                     STR_7:
   918  002069  25                 	db	37
   919  00206A  63                 	db	99	;'c'
   920  00206B  00                 	db	0
   921  00206C                     STR_6:
   922  00206C  25                 	db	37
   923  00206D  73                 	db	115	;'s'
   924  00206E  00                 	db	0
   925  0000                     
   926                           ; #config settings
   927  00206F  00                 	db	0	; dummy byte at the end
   928  0000                     
   929                           	psect	cinit
   930  004A46                     __pcinit:
   931                           	opt callstack 0
   932  004A46                     start_initialization:
   933                           	opt callstack 0
   934  004A46                     __initialization:
   935                           	opt callstack 0
   936                           
   937                           ; Initialize objects allocated to BANK3 (112 bytes)
   938                           ; load TBLPTR registers with __pidataBANK3
   939  004A46  0EBC               	movlw	low __pidataBANK3
   940  004A48  6EF6               	movwf	tblptrl,c
   941  004A4A  0E50               	movlw	high __pidataBANK3
   942  004A4C  6EF7               	movwf	tblptrh,c
   943  004A4E  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   944  004A50  6EF8               	movwf	tblptru,c
   945  004A52  EE00  F386         	lfsr	0,__pdataBANK3
   946  004A56  EE20 F070          	lfsr	2,112
   947  004A5A                     copy_data0:
   948  004A5A  0009               	tblrd		*+
   949  004A5C  006F FFD7 FFEE     	movff	tablat,postinc0
   950  004A62  50DD               	movf	postdec2,w,c
   951  004A64  50D9               	movf	fsr2l,w,c
   952  004A66  E1F9               	bnz	copy_data0
   953                           
   954                           ; Initialize objects allocated to BANK1 (161 bytes)
   955                           ; load TBLPTR registers with __pidataBANK1
   956  004A68  0E50               	movlw	low __pidataBANK1
   957  004A6A  6EF6               	movwf	tblptrl,c
   958  004A6C  0E4C               	movlw	high __pidataBANK1
   959  004A6E  6EF7               	movwf	tblptrh,c
   960  004A70  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   961  004A72  6EF8               	movwf	tblptru,c
   962  004A74  EE00  F100         	lfsr	0,__pdataBANK1
   963  004A78  EE20 F0A1          	lfsr	2,161
   964  004A7C                     copy_data1:
   965  004A7C  0009               	tblrd		*+
   966  004A7E  006F FFD7 FFEE     	movff	tablat,postinc0
   967  004A84  50DD               	movf	postdec2,w,c
   968  004A86  50D9               	movf	fsr2l,w,c
   969  004A88  E1F9               	bnz	copy_data1
   970                           
   971                           ; Initialize objects allocated to BANK0 (7 bytes)
   972                           ; load TBLPTR registers with __pidataBANK0
   973  004A8A  0E8A               	movlw	low __pidataBANK0
   974  004A8C  6EF6               	movwf	tblptrl,c
   975  004A8E  0E5E               	movlw	high __pidataBANK0
   976  004A90  6EF7               	movwf	tblptrh,c
   977  004A92  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   978  004A94  6EF8               	movwf	tblptru,c
   979  004A96  EE00  F0F9         	lfsr	0,__pdataBANK0
   980  004A9A  EE20 F007          	lfsr	2,7
   981  004A9E                     copy_data2:
   982  004A9E  0009               	tblrd		*+
   983  004AA0  006F FFD7 FFEE     	movff	tablat,postinc0
   984  004AA6  50DD               	movf	postdec2,w,c
   985  004AA8  50D9               	movf	fsr2l,w,c
   986  004AAA  E1F9               	bnz	copy_data2
   987                           
   988                           ; Clear objects allocated to BANK3 (134 bytes)
   989  004AAC  EE00  F300         	lfsr	0,__pbssBANK3
   990  004AB0  0E86               	movlw	134
   991  004AB2                     clear_0:
   992  004AB2  6AEE               	clrf	postinc0,c
   993  004AB4  06E8               	decf	wreg,f,c
   994  004AB6  E1FD               	bnz	clear_0
   995                           
   996                           ; Clear objects allocated to BANK2 (192 bytes)
   997  004AB8  EE00  F200         	lfsr	0,__pbssBANK2
   998  004ABC  0EC0               	movlw	192
   999  004ABE                     clear_1:
  1000  004ABE  6AEE               	clrf	postinc0,c
  1001  004AC0  06E8               	decf	wreg,f,c
  1002  004AC2  E1FD               	bnz	clear_1
  1003                           
  1004                           ; Clear objects allocated to BANK1 (64 bytes)
  1005  004AC4  EE00  F1A1         	lfsr	0,__pbssBANK1
  1006  004AC8  0E40               	movlw	64
  1007  004ACA                     clear_2:
  1008  004ACA  6AEE               	clrf	postinc0,c
  1009  004ACC  06E8               	decf	wreg,f,c
  1010  004ACE  E1FD               	bnz	clear_2
  1011                           
  1012                           ; Clear objects allocated to BANK0 (153 bytes)
  1013  004AD0  EE00  F060         	lfsr	0,__pbssBANK0
  1014  004AD4  0E99               	movlw	153
  1015  004AD6                     clear_3:
  1016  004AD6  6AEE               	clrf	postinc0,c
  1017  004AD8  06E8               	decf	wreg,f,c
  1018  004ADA  E1FD               	bnz	clear_3
  1019                           
  1020                           ; Clear objects allocated to COMRAM (60 bytes)
  1021  004ADC  EE00  F001         	lfsr	0,__pbssCOMRAM
  1022  004AE0  0E3C               	movlw	60
  1023  004AE2                     clear_4:
  1024  004AE2  6AEE               	clrf	postinc0,c
  1025  004AE4  06E8               	decf	wreg,f,c
  1026  004AE6  E1FD               	bnz	clear_4
  1027                           
  1028                           ;
  1029                           ; Setup IVTBASE
  1030                           ;
  1031  004AE8  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1032  004AEA  6ED5               	movwf	213,c
  1033  004AEC  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1034  004AEE  6ED6               	movwf	214,c
  1035  004AF0  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1036  004AF2  6ED7               	movwf	215,c
  1037  004AF4                     end_of_initialization:
  1038                           	opt callstack 0
  1039  004AF4                     __end_of__initialization:
  1040                           	opt callstack 0
  1041  004AF4  0100               	movlb	0
  1042  004AF6  EF06  F019         	goto	_main	;jump to C main() function
  1043                           
  1044                           	psect	bssCOMRAM
  1045  000001                     __pbssCOMRAM:
  1046                           	opt callstack 0
  1047  000001                     secs_II_message@block:
  1048                           	opt callstack 0
  1049  000001                     	ds	3
  1050  000004                     _TMR5_InterruptHandler:
  1051                           	opt callstack 0
  1052  000004                     	ds	3
  1053  000007                     _TMR6_InterruptHandler:
  1054                           	opt callstack 0
  1055  000007                     	ds	3
  1056  00000A                     _ADCC_ADI_InterruptHandler:
  1057                           	opt callstack 0
  1058  00000A                     	ds	3
  1059  00000D                     _UART1_TxInterruptHandler:
  1060                           	opt callstack 0
  1061  00000D                     	ds	3
  1062  000010                     _UART1_RxInterruptHandler:
  1063                           	opt callstack 0
  1064  000010                     	ds	3
  1065  000013                     _UART2_TxInterruptHandler:
  1066                           	opt callstack 0
  1067  000013                     	ds	3
  1068  000016                     _UART2_RxInterruptHandler:
  1069                           	opt callstack 0
  1070  000016                     	ds	3
  1071  000019                     _INT2_InterruptHandler:
  1072                           	opt callstack 0
  1073  000019                     	ds	3
  1074  00001C                     _INT1_InterruptHandler:
  1075                           	opt callstack 0
  1076  00001C                     	ds	3
  1077  00001F                     _INT0_InterruptHandler:
  1078                           	opt callstack 0
  1079  00001F                     	ds	3
  1080  000022                     _nout:
  1081                           	opt callstack 0
  1082  000022                     	ds	2
  1083  000024                     _width:
  1084                           	opt callstack 0
  1085  000024                     	ds	2
  1086  000026                     _prec:
  1087                           	opt callstack 0
  1088  000026                     	ds	2
  1089  000028                     _flags:
  1090                           	opt callstack 0
  1091  000028                     	ds	2
  1092  00002A                     run_checksum@sum:
  1093                           	opt callstack 0
  1094  00002A                     	ds	2
  1095  00002C                     TMR5_ISR@CountCallBack:
  1096                           	opt callstack 0
  1097  00002C                     	ds	2
  1098  00002E                     _timer5ReloadVal:
  1099                           	opt callstack 0
  1100  00002E                     	ds	2
  1101  000030                     r_protocol@rxData_l:
  1102                           	opt callstack 0
  1103  000030                     	ds	1
  1104  000031                     _uart2RxCount:
  1105                           	opt callstack 0
  1106  000031                     	ds	1
  1107  000032                     _uart2RxTail:
  1108                           	opt callstack 0
  1109  000032                     	ds	1
  1110  000033                     _uart2RxHead:
  1111                           	opt callstack 0
  1112  000033                     	ds	1
  1113  000034                     _uart2TxBufferRemaining:
  1114                           	opt callstack 0
  1115  000034                     	ds	1
  1116  000035                     _uart2TxTail:
  1117                           	opt callstack 0
  1118  000035                     	ds	1
  1119  000036                     _uart2TxHead:
  1120                           	opt callstack 0
  1121  000036                     	ds	1
  1122  000037                     _uart1RxCount:
  1123                           	opt callstack 0
  1124  000037                     	ds	1
  1125  000038                     _uart1RxTail:
  1126                           	opt callstack 0
  1127  000038                     	ds	1
  1128  000039                     _uart1RxHead:
  1129                           	opt callstack 0
  1130  000039                     	ds	1
  1131  00003A                     _uart1TxBufferRemaining:
  1132                           	opt callstack 0
  1133  00003A                     	ds	1
  1134  00003B                     _uart1TxTail:
  1135                           	opt callstack 0
  1136  00003B                     	ds	1
  1137  00003C                     _uart1TxHead:
  1138                           	opt callstack 0
  1139  00003C                     	ds	1
  1140                           
  1141                           	psect	bssBANK0
  1142  000060                     __pbssBANK0:
  1143                           	opt callstack 0
  1144  000060                     _r_block:
  1145                           	opt callstack 0
  1146  000060                     	ds	13
  1147  00006D                     _spi_link:
  1148                           	opt callstack 0
  1149  00006D                     	ds	12
  1150  000079                     _tickCount:
  1151                           	opt callstack 0
  1152  000079                     	ds	12
  1153  000085                     wdtdelay@dcount:
  1154                           	opt callstack 0
  1155  000085                     	ds	4
  1156  000089                     _V:
  1157                           	opt callstack 0
  1158  000089                     	ds	80
  1159  0000D9                     _dbuf:
  1160                           	opt callstack 0
  1161  0000D9                     	ds	32
  1162                           
  1163                           	psect	dataBANK0
  1164  0000F9                     __pdataBANK0:
  1165                           	opt callstack 0
  1166  0000F9                     stoa@F1144:
  1167                           	opt callstack 0
  1168  0000F9                     	ds	7
  1169                           
  1170                           	psect	bssBANK1
  1171  0001A1                     __pbssBANK1:
  1172                           	opt callstack 0
  1173  0001A1                     _uart1RxBuffer:
  1174                           	opt callstack 0
  1175  0001A1                     	ds	64
  1176                           
  1177                           	psect	dataBANK1
  1178  000100                     __pdataBANK1:
  1179                           	opt callstack 0
  1180  000100                     _H10:
  1181                           	opt callstack 0
  1182  000100                     	ds	65
  1183  000141                     _H24:
  1184                           	opt callstack 0
  1185  000141                     	ds	27
  1186  00015C                     _H18:
  1187                           	opt callstack 0
  1188  00015C                     	ds	21
  1189  000171                     _H14:
  1190                           	opt callstack 0
  1191  000171                     	ds	17
  1192  000182                     _H13:
  1193                           	opt callstack 0
  1194  000182                     	ds	16
  1195  000192                     _H12:
  1196                           	opt callstack 0
  1197  000192                     	ds	15
  1198                           
  1199                           	psect	bssBANK2
  1200  000200                     __pbssBANK2:
  1201                           	opt callstack 0
  1202  000200                     _uart2RxBuffer:
  1203                           	opt callstack 0
  1204  000200                     	ds	64
  1205  000240                     _uart2TxBuffer:
  1206                           	opt callstack 0
  1207  000240                     	ds	64
  1208  000280                     _uart1TxBuffer:
  1209                           	opt callstack 0
  1210  000280                     	ds	64
  1211                           
  1212                           	psect	bssBANK3
  1213  000300                     __pbssBANK3:
  1214                           	opt callstack 0
  1215  000300                     _ring_buf2:
  1216                           	opt callstack 0
  1217  000300                     	ds	67
  1218  000343                     _ring_buf1:
  1219                           	opt callstack 0
  1220  000343                     	ds	67
  1221                           
  1222                           	psect	dataBANK3
  1223  000386                     __pdataBANK3:
  1224                           	opt callstack 0
  1225  000386                     _H53:
  1226                           	opt callstack 0
  1227  000386                     	ds	112
  1228                           
  1229                           	psect	cstackCOMRAM
  1230  00005D                     __pcstackCOMRAM:
  1231                           	opt callstack 0
  1232  00005D                     ??_TMR6_ISR:
  1233  00005D                     
  1234                           ; 1 bytes @ 0x0
  1235  00005D                     	ds	1
  1236  00005E                     ??_TMR5_ISR:
  1237                           
  1238                           ; 1 bytes @ 0x1
  1239  00005E                     	ds	1
  1240                           
  1241 ;;
  1242 ;;Main: autosize = 3, tempsize = 0, incstack = 0, save=0
  1243 ;;
  1244 ;; *************** function _main *****************
  1245 ;; Defined at:
  1246 ;;		line 246 in file "main.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;		None
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;  j               1    0        unsigned char 
  1251 ;;  sum             2  [STACK] unsigned short 
  1252 ;;  mode            1  [STACK] enum E16894
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  1  [STACK] void 
  1255 ;; Registers used:
  1256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp
      ++8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl
      +, tblptrh, tblptru, prodl, prodh
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 3F/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1266 ;;Total ram usage:        0 bytes
  1267 ;; Hardware stack levels required when called:   14
  1268 ;; This function calls:
  1269 ;;		_SYSTEM_Initialize
  1270 ;;		_UART1_Write
  1271 ;;		_UART1_put_buffer
  1272 ;;		_WaitMs
  1273 ;;		_block_checksum
  1274 ;;		_eaDogM_WriteCommand
  1275 ;;		_eaDogM_WriteString
  1276 ;;		_eaDogM_WriteStringAtPos
  1277 ;;		_init_display
  1278 ;;		_r_protocol
  1279 ;;		_secs_send
  1280 ;;		_sprintf
  1281 ;;		_t_protocol
  1282 ;;		_wait_lcd_done
  1283 ;; This function is called by:
  1284 ;;		Startup code after reset
  1285 ;; This function uses a reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text0
  1289  00320C                     __ptext0:
  1290                           	opt callstack 0
  1291  00320C                     _main:
  1292                           	opt callstack 0
  1293                           
  1294                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1295  00320C  52E6               	movf	postinc1,f,c
  1296  00320E  52E6               	movf	postinc1,f,c
  1297  003210  52E6               	movf	postinc1,f,c
  1298                           
  1299                           ;main.c: 248:  uint16_t sum;;main.c: 249:  UI_STATES mode = UI_STATE_HOST;
  1300                           ;stkvar	_mode @ sp[(-3)+2]
  1301                           
  1302                           ;incstack = 0
  1303  003212  0EFF               	movlw	-1
  1304  003214  6AE3               	clrf	plusw1,c
  1305  003216  2AE3               	incf	plusw1,f,c
  1306                           
  1307                           ;main.c: 252:  SYSTEM_Initialize();
  1308  003218  ECE5  F02A         	call	_SYSTEM_Initialize	;wreg free
  1309                           
  1310                           ; BSR set to: 60
  1311                           ;main.c: 255:  (INTCON0bits.GIEH = 1);
  1312  00321C  8ED2               	bsf	16338,7,c	;volatile
  1313                           
  1314                           ; BSR set to: 60
  1315                           ;main.c: 258:  (INTCON0bits.GIEL = 1);
  1316  00321E  8CD2               	bsf	16338,6,c	;volatile
  1317  003220                     l7771:
  1318                           
  1319                           ;main.c: 260:  V.ui_state = UI_STATE_INIT;
  1320  003220  0100               	movlb	0	; () banked
  1321  003222  6B8A               	clrf	(_V+1)& (0+255),b	;volatile
  1322  003224  D138               	goto	l1213
  1323  003226                     l7773:
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;main.c: 265:    init_display();
  1327  003226  ECE1  F023         	call	_init_display	;wreg free
  1328                           
  1329                           ; BSR set to: 61
  1330                           ;main.c: 266:    eaDogM_WriteCommand(0b00001100);
  1331  00322A  0E0C               	movlw	12
  1332  00322C  6EE6               	movwf	postinc1,c
  1333  00322E  ECFE  F02E         	call	_eaDogM_WriteCommand	;wreg free
  1334                           
  1335                           ; BSR set to: 0
  1336                           ;main.c: 267:    V.ui_state = mode;
  1337                           ;stkvar	_mode @ sp[(-3)+2]
  1338  003232  0EFF               	movlw	-1
  1339  003234  006F FF8C  F08A    	movff	plusw1,_V+1	;volatile
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;main.c: 268:    V.s_state = SEQ_STATE_INIT;
  1343  00323A  6B89               	clrf	_V& (0+255),b	;volatile
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;main.c: 273:    sum = block_checksum((uint8_t*) & H10[j].block.block, sizeof(block10));
  1347                           
  1348                           ; BSR set to: 0
  1349  00323C  0E0A               	movlw	10
  1350  00323E  6EE6               	movwf	postinc1,c
  1351  003240  0E00               	movlw	0
  1352  003242  6EE6               	movwf	postinc1,c
  1353  003244  0E29               	movlw	low (_H10+41)
  1354  003246  6EE6               	movwf	postinc1,c
  1355  003248  0E01               	movlw	high (_H10+41)
  1356  00324A  6EE6               	movwf	postinc1,c
  1357  00324C  EC56  F024         	call	_block_checksum	;wreg free
  1358                           
  1359                           ;stkvar	_sum @ sp[(-3)+0]
  1360  003250  0EFD               	movlw	-3
  1361  003252  0060  F0F7  FFE3   	movff	btemp,plusw1
  1362  003258  0EFE               	movlw	-2
  1363  00325A  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  1364                           
  1365                           ;main.c: 274:    H10[j].checksum = sum;
  1366                           ;stkvar	_sum @ sp[(-3)+0]
  1367  003260  0EFD               	movlw	-3
  1368  003262  006F FF8C  F127    	movff	plusw1,_H10+39
  1369  003268  0EFE               	movlw	-2
  1370  00326A  006F FF8C  F128    	movff	plusw1,_H10+40
  1371                           
  1372                           ;main.c: 275:    sprintf(V.buf, "M %d, H %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x, C 0x%
      +                          04x #",
  1373                           ;stkvar	_sum @ sp[(-3)+0]
  1374  003270  0EFD               	movlw	-3
  1375  003272  006F FF8F FFE6     	movff	plusw1,postinc1
  1376  003278  006F FF8F FFE6     	movff	plusw1,postinc1
  1377  00327E  0101               	movlb	1	; () banked
  1378  003280  5129               	movf	(_H10+41)& (0+255),w,b
  1379  003282  6EE6               	movwf	postinc1,c
  1380  003284  0E00               	movlw	0
  1381  003286  6EE6               	movwf	postinc1,c
  1382  003288  512A               	movf	(_H10+42)& (0+255),w,b
  1383  00328A  6EE6               	movwf	postinc1,c
  1384  00328C  0E00               	movlw	0
  1385  00328E  6EE6               	movwf	postinc1,c
  1386  003290  512B               	movf	(_H10+43)& (0+255),w,b
  1387  003292  6EE6               	movwf	postinc1,c
  1388  003294  0E00               	movlw	0
  1389  003296  6EE6               	movwf	postinc1,c
  1390  003298  512C               	movf	(_H10+44)& (0+255),w,b
  1391  00329A  6EE6               	movwf	postinc1,c
  1392  00329C  0E00               	movlw	0
  1393  00329E  6EE6               	movwf	postinc1,c
  1394  0032A0  512D               	movf	(_H10+45)& (0+255),w,b
  1395  0032A2  6EE6               	movwf	postinc1,c
  1396  0032A4  0E00               	movlw	0
  1397  0032A6  6EE6               	movwf	postinc1,c
  1398  0032A8  512E               	movf	(_H10+46)& (0+255),w,b
  1399  0032AA  6EE6               	movwf	postinc1,c
  1400  0032AC  0E00               	movlw	0
  1401  0032AE  6EE6               	movwf	postinc1,c
  1402  0032B0  512F               	movf	(_H10+47)& (0+255),w,b
  1403  0032B2  6EE6               	movwf	postinc1,c
  1404  0032B4  0E00               	movlw	0
  1405  0032B6  6EE6               	movwf	postinc1,c
  1406  0032B8  5130               	movf	(_H10+48)& (0+255),w,b
  1407  0032BA  6EE6               	movwf	postinc1,c
  1408  0032BC  0E00               	movlw	0
  1409  0032BE  6EE6               	movwf	postinc1,c
  1410  0032C0  5131               	movf	(_H10+49)& (0+255),w,b
  1411  0032C2  6EE6               	movwf	postinc1,c
  1412  0032C4  0E00               	movlw	0
  1413  0032C6  6EE6               	movwf	postinc1,c
  1414  0032C8  5132               	movf	(_H10+50)& (0+255),w,b
  1415  0032CA  6EE6               	movwf	postinc1,c
  1416  0032CC  0E00               	movlw	0
  1417  0032CE  6EE6               	movwf	postinc1,c
  1418                           
  1419                           ;stkvar	_mode @ sp[(-25)+2]
  1420  0032D0  0EE9               	movlw	-23
  1421  0032D2  50E3               	movf	plusw1,w,c
  1422  0032D4  6EE6               	movwf	postinc1,c
  1423  0032D6  0E00               	movlw	0
  1424  0032D8  6EE6               	movwf	postinc1,c
  1425  0032DA  0E01               	movlw	STR_1& (0+255)
  1426  0032DC  6EE6               	movwf	postinc1,c
  1427  0032DE  0E89               	movlw	_V& (0+255)
  1428  0032E0  0F04               	addlw	4
  1429  0032E2  6EE6               	movwf	postinc1,c
  1430  0032E4  0E1A               	movlw	26
  1431  0032E6  6EE6               	movwf	postinc1,c
  1432  0032E8  ECBF  F024         	call	_sprintf	;wreg free
  1433                           
  1434                           ;main.c: 288:    wait_lcd_done();
  1435  0032EC  EC8D  F02E         	call	_wait_lcd_done	;wreg free
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;main.c: 289:    eaDogM_WriteString(V.buf);
  1439  0032F0  0E89               	movlw	_V& (0+255)
  1440  0032F2  0F04               	addlw	4
  1441  0032F4  6EE6               	movwf	postinc1,c
  1442  0032F6  EC7D  F025         	call	_eaDogM_WriteString	;wreg free
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;main.c: 291:    secs_send((uint8_t*) & H10[j], sizeof(header10), 0);
  1446  0032FA  0E00               	movlw	0
  1447  0032FC  6EE6               	movwf	postinc1,c
  1448  0032FE  0E0D               	movlw	13
  1449  003300  6EE6               	movwf	postinc1,c
  1450  003302  0E27               	movlw	low (_H10+39)
  1451  003304  6EE6               	movwf	postinc1,c
  1452  003306  0E01               	movlw	high (_H10+39)
  1453  003308  6EE6               	movwf	postinc1,c
  1454  00330A  EC72  F021         	call	_secs_send	;wreg free
  1455                           
  1456                           ;main.c: 292:    sprintf(V.buf, " C 0x%04x #", V.t_checksum);
  1457  00330E  0060  F35F  FFE6   	movff	_V+78,postinc1
  1458  003314  0060  F363  FFE6   	movff	_V+79,postinc1
  1459  00331A  0E32               	movlw	(STR_1+49)& (0+255)
  1460  00331C  6EE6               	movwf	postinc1,c
  1461  00331E  0E89               	movlw	_V& (0+255)
  1462  003320  0F04               	addlw	4
  1463  003322  6EE6               	movwf	postinc1,c
  1464  003324  0E04               	movlw	4
  1465  003326  6EE6               	movwf	postinc1,c
  1466  003328  ECBF  F024         	call	_sprintf	;wreg free
  1467                           
  1468                           ;main.c: 293:    wait_lcd_done();
  1469  00332C  EC8D  F02E         	call	_wait_lcd_done	;wreg free
  1470                           
  1471                           ; BSR set to: 0
  1472                           ;main.c: 294:    eaDogM_WriteString(V.buf);
  1473  003330  0E89               	movlw	_V& (0+255)
  1474  003332  0F04               	addlw	4
  1475  003334  6EE6               	movwf	postinc1,c
  1476  003336  EC7D  F025         	call	_eaDogM_WriteString	;wreg free
  1477                           
  1478                           ;main.c: 297:    break;
  1479  00333A  D0AD               	goto	l1213
  1480  00333C                     l1218:
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;main.c: 301:     V.r_l_state = LINK_STATE_IDLE;
  1484  00333C  6B8B               	clrf	(_V+2)& (0+255),b	;volatile
  1485                           
  1486                           ;main.c: 302:     V.t_l_state = LINK_STATE_IDLE;
  1487  00333E  6B8C               	clrf	(_V+3)& (0+255),b	;volatile
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;main.c: 303:     V.s_state = SEQ_STATE_RX;
  1491  003340  0E01               	movlw	1
  1492  003342  6F89               	movwf	_V& (0+255),b	;volatile
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;main.c: 305:     WaitMs(75);
  1496  003344  0E4B               	movlw	75
  1497  003346  6EE6               	movwf	postinc1,c
  1498  003348  0E00               	movlw	0
  1499  00334A  6EE6               	movwf	postinc1,c
  1500  00334C  EC40  F02C         	call	_WaitMs	;wreg free
  1501                           
  1502                           ;main.c: 306:     UART1_put_buffer(0x05);
  1503  003350  0E05               	movlw	5
  1504  003352  6EE6               	movwf	postinc1,c
  1505  003354  EC2B  F02C         	call	_UART1_put_buffer	;wreg free
  1506                           
  1507                           ;main.c: 308:     break;
  1508  003358  D09E               	goto	l1213
  1509  00335A                     l7807:
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;main.c: 313:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1513  00335A  0E89               	movlw	_V& (0+255)
  1514  00335C  0F02               	addlw	2
  1515  00335E  6EE6               	movwf	postinc1,c
  1516  003360  ECED  F01C         	call	_r_protocol	;wreg free
  1517  003364  0E04               	movlw	4
  1518  003366  183D               	xorwf	btemp,w,c
  1519  003368  A4D8               	btfss	status,2,c
  1520  00336A  D028               	goto	l7821
  1521                           
  1522                           ;main.c: 314:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1523  00336C  0100               	movlb	0	; () banked
  1524  00336E  51D2               	movf	(_V+73)& (0+255),w,b	;volatile
  1525  003370  6EE6               	movwf	postinc1,c
  1526  003372  0E00               	movlw	0
  1527  003374  6EE6               	movwf	postinc1,c
  1528  003376  51D1               	movf	(_V+72)& (0+255),w,b	;volatile
  1529  003378  6EE6               	movwf	postinc1,c
  1530  00337A  0E00               	movlw	0
  1531  00337C  6EE6               	movwf	postinc1,c
  1532  00337E  0E55               	movlw	STR_3& (0+255)
  1533  003380  6EE6               	movwf	postinc1,c
  1534  003382  0E89               	movlw	_V& (0+255)
  1535  003384  0F04               	addlw	4
  1536  003386  6EE6               	movwf	postinc1,c
  1537  003388  0E06               	movlw	6
  1538  00338A  6EE6               	movwf	postinc1,c
  1539  00338C  ECBF  F024         	call	_sprintf	;wreg free
  1540                           
  1541                           ;main.c: 315:      V.buf[11]=0;
  1542  003390  0100               	movlb	0	; () banked
  1543  003392  6B98               	clrf	(_V+15)& (0+255),b	;volatile
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;main.c: 316:      wait_lcd_done();
  1547  003394  EC8D  F02E         	call	_wait_lcd_done	;wreg free
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;main.c: 317:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1551  003398  0E89               	movlw	_V& (0+255)
  1552  00339A  0F04               	addlw	4
  1553  00339C  6EE6               	movwf	postinc1,c
  1554  00339E  0E00               	movlw	0
  1555  0033A0  6EE6               	movwf	postinc1,c
  1556  0033A2  0E00               	movlw	0
  1557  0033A4  6EE6               	movwf	postinc1,c
  1558  0033A6  ECE9  F02B         	call	_eaDogM_WriteStringAtPos	;wreg free
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;main.c: 319:      WaitMs(5);
  1562  0033AA  0E05               	movlw	5
  1563  0033AC  6EE6               	movwf	postinc1,c
  1564  0033AE  0E00               	movlw	0
  1565  0033B0  6EE6               	movwf	postinc1,c
  1566  0033B2  EC40  F02C         	call	_WaitMs	;wreg free
  1567                           
  1568                           ;main.c: 321:      V.s_state = SEQ_STATE_TX;
  1569  0033B6  0E02               	movlw	2
  1570  0033B8  0100               	movlb	0	; () banked
  1571  0033BA  6F89               	movwf	_V& (0+255),b	;volatile
  1572  0033BC                     l7821:
  1573                           
  1574                           ;main.c: 323:     if (V.r_l_state == LINK_STATE_ERROR)
  1575  0033BC  0E06               	movlw	6
  1576  0033BE  0100               	movlb	0	; () banked
  1577  0033C0  198B               	xorwf	(_V+2)& (0+255),w,b	;volatile
  1578  0033C2  D00F               	goto	L24
  1579  0033C4                     l7825:
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;main.c: 330:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1583  0033C4  0E89               	movlw	_V& (0+255)
  1584  0033C6  0F03               	addlw	3
  1585  0033C8  6EE6               	movwf	postinc1,c
  1586  0033CA  EC63  F020         	call	_t_protocol	;wreg free
  1587  0033CE  0E04               	movlw	4
  1588  0033D0  183D               	xorwf	btemp,w,c
  1589  0033D2  A4D8               	btfss	status,2,c
  1590  0033D4  D003               	goto	l7829
  1591                           
  1592                           ;main.c: 331:      V.s_state = SEQ_STATE_TRIGGER;
  1593  0033D6  0E03               	movlw	3
  1594  0033D8  0100               	movlb	0	; () banked
  1595  0033DA  6F89               	movwf	_V& (0+255),b	;volatile
  1596  0033DC                     l7829:
  1597                           
  1598                           ;main.c: 333:     if (V.t_l_state == LINK_STATE_ERROR)
  1599  0033DC  0E06               	movlw	6
  1600  0033DE  0100               	movlb	0	; () banked
  1601  0033E0  198C               	xorwf	(_V+3)& (0+255),w,b	;volatile
  1602  0033E2                     L24:
  1603  0033E2  A4D8               	btfss	status,2,c
  1604  0033E4  D058               	goto	l1213
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;main.c: 334:      V.s_state = SEQ_STATE_ERROR;
  1608  0033E6  0E05               	movlw	5
  1609  0033E8  6F89               	movwf	_V& (0+255),b	;volatile
  1610  0033EA  D055               	goto	l1213
  1611  0033EC                     l1227:
  1612                           
  1613                           ; BSR set to: 0
  1614  0033EC  82BE               	bsf	16318,1,c	;volatile
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;main.c: 338:     sprintf(V.buf, " OK #");
  1618  0033EE  0E63               	movlw	STR_4& (0+255)
  1619  0033F0  6EE6               	movwf	postinc1,c
  1620  0033F2  0E89               	movlw	_V& (0+255)
  1621  0033F4  0F04               	addlw	4
  1622  0033F6  6EE6               	movwf	postinc1,c
  1623  0033F8  0E02               	movlw	2
  1624  0033FA  6EE6               	movwf	postinc1,c
  1625  0033FC  ECBF  F024         	call	_sprintf	;wreg free
  1626                           
  1627                           ;main.c: 339:     wait_lcd_done();
  1628  003400  EC8D  F02E         	call	_wait_lcd_done	;wreg free
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;main.c: 340:     eaDogM_WriteString(V.buf);
  1632  003404  0E89               	movlw	_V& (0+255)
  1633  003406  0F04               	addlw	4
  1634  003408  6EE6               	movwf	postinc1,c
  1635  00340A  EC7D  F025         	call	_eaDogM_WriteString	;wreg free
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;main.c: 341:     V.s_state = SEQ_STATE_DONE;
  1639  00340E  0E04               	movlw	4
  1640  003410  6F89               	movwf	_V& (0+255),b	;volatile
  1641                           
  1642                           ; BSR set to: 0
  1643  003412  92BE               	bcf	16318,1,c	;volatile
  1644  003414  D040               	goto	l1213
  1645  003416                     l7843:
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;main.c: 349:     UART1_Write(0x15);
  1649  003416  0E15               	movlw	21
  1650  003418  6EE6               	movwf	postinc1,c
  1651  00341A  EC26  F02B         	call	_UART1_Write	;wreg free
  1652                           
  1653                           ; BSR set to: 57
  1654                           ;main.c: 350:     sprintf(V.buf, " ERR R%d T%d E%d A%d #", V.r_l_state, V.t_l_state, V.e
      +                          rror, V.abort);
  1655  00341E  0100               	movlb	0	; () banked
  1656  003420  51D4               	movf	(_V+75)& (0+255),w,b	;volatile
  1657  003422  6EE6               	movwf	postinc1,c
  1658  003424  0E00               	movlw	0
  1659  003426  6EE6               	movwf	postinc1,c
  1660  003428  51D3               	movf	(_V+74)& (0+255),w,b	;volatile
  1661  00342A  6EE6               	movwf	postinc1,c
  1662  00342C  0E00               	movlw	0
  1663  00342E  6EE6               	movwf	postinc1,c
  1664  003430  518C               	movf	(_V+3)& (0+255),w,b	;volatile
  1665  003432  6EE6               	movwf	postinc1,c
  1666  003434  0E00               	movlw	0
  1667  003436  6EE6               	movwf	postinc1,c
  1668  003438  518B               	movf	(_V+2)& (0+255),w,b	;volatile
  1669  00343A  6EE6               	movwf	postinc1,c
  1670  00343C  0E00               	movlw	0
  1671  00343E  6EE6               	movwf	postinc1,c
  1672  003440  0E3E               	movlw	STR_5& (0+255)
  1673  003442  6EE6               	movwf	postinc1,c
  1674  003444  0E89               	movlw	_V& (0+255)
  1675  003446  0F04               	addlw	4
  1676  003448  6EE6               	movwf	postinc1,c
  1677  00344A  0E0A               	movlw	10
  1678  00344C  6EE6               	movwf	postinc1,c
  1679  00344E  ECBF  F024         	call	_sprintf	;wreg free
  1680                           
  1681                           ;main.c: 351:     wait_lcd_done();
  1682  003452  EC8D  F02E         	call	_wait_lcd_done	;wreg free
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;main.c: 352:     eaDogM_WriteString(V.buf);
  1686  003456  0E89               	movlw	_V& (0+255)
  1687  003458  0F04               	addlw	4
  1688  00345A  6EE6               	movwf	postinc1,c
  1689  00345C  EC7D  F025         	call	_eaDogM_WriteString	;wreg free
  1690  003460                     l7851:
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;main.c: 353:     V.s_state = SEQ_STATE_INIT;
  1694  003460  6B89               	clrf	_V& (0+255),b	;volatile
  1695                           
  1696                           ;main.c: 354:     break;
  1697  003462  D019               	goto	l1213
  1698  003464                     l7855:
  1699                           
  1700                           ; BSR set to: 0
  1701  003464  5189               	movf	_V& (0+255),w,b	;volatile
  1702  003466  6E47               	movwf	btemp+10,c
  1703  003468  6A48               	clrf	btemp+11,c
  1704                           
  1705                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1706                           ; Switch size 1, requested type "simple"
  1707                           ; Number of cases is 1, Range of values is 0 to 0
  1708                           ; switch strategies available:
  1709                           ; Name         Instructions Cycles
  1710                           ; simple_byte            4     3 (average)
  1711                           ;	Chosen strategy is simple_byte
  1712  00346A  5048               	movf	btemp+11,w,c
  1713  00346C  0A00               	xorlw	0	; case 0
  1714  00346E  A4D8               	btfss	status,2,c
  1715  003470  D7D2               	goto	l7843
  1716                           
  1717                           ; BSR set to: 0
  1718                           ; Switch size 1, requested type "simple"
  1719                           ; Number of cases is 6, Range of values is 0 to 5
  1720                           ; switch strategies available:
  1721                           ; Name         Instructions Cycles
  1722                           ; simple_byte           19    10 (average)
  1723                           ;	Chosen strategy is simple_byte
  1724  003472  5047               	movf	btemp+10,w,c
  1725  003474  0A00               	xorlw	0	; case 0
  1726  003476  B4D8               	btfsc	status,2,c
  1727  003478  D761               	goto	l1218
  1728  00347A  0A01               	xorlw	1	; case 1
  1729  00347C  B4D8               	btfsc	status,2,c
  1730  00347E  D76D               	goto	l7807
  1731  003480  0A03               	xorlw	3	; case 2
  1732  003482  B4D8               	btfsc	status,2,c
  1733  003484  D79F               	goto	l7825
  1734  003486  0A01               	xorlw	1	; case 3
  1735  003488  B4D8               	btfsc	status,2,c
  1736  00348A  D7B0               	goto	l1227
  1737  00348C  0A07               	xorlw	7	; case 4
  1738  00348E  B4D8               	btfsc	status,2,c
  1739  003490  D7E7               	goto	l7851
  1740  003492  0A01               	xorlw	1	; case 5
  1741  003494  D7C0               	goto	l7843
  1742  003496                     l1213:
  1743                           
  1744                           ; BSR set to: 0
  1745  003496  0100               	movlb	0	; () banked
  1746  003498  518A               	movf	(_V+1)& (0+255),w,b	;volatile
  1747  00349A  6E47               	movwf	btemp+10,c
  1748  00349C  6A48               	clrf	btemp+11,c
  1749                           
  1750                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1751                           ; Switch size 1, requested type "simple"
  1752                           ; Number of cases is 1, Range of values is 0 to 0
  1753                           ; switch strategies available:
  1754                           ; Name         Instructions Cycles
  1755                           ; simple_byte            4     3 (average)
  1756                           ;	Chosen strategy is simple_byte
  1757  00349E  5048               	movf	btemp+11,w,c
  1758  0034A0  0A00               	xorlw	0	; case 0
  1759  0034A2  A4D8               	btfss	status,2,c
  1760  0034A4  D6BD               	goto	l7771
  1761                           
  1762                           ; BSR set to: 0
  1763                           ; Switch size 1, requested type "simple"
  1764                           ; Number of cases is 3, Range of values is 0 to 5
  1765                           ; switch strategies available:
  1766                           ; Name         Instructions Cycles
  1767                           ; simple_byte           10     6 (average)
  1768                           ;	Chosen strategy is simple_byte
  1769  0034A6  5047               	movf	btemp+10,w,c
  1770  0034A8  0A00               	xorlw	0	; case 0
  1771  0034AA  B4D8               	btfsc	status,2,c
  1772  0034AC  D6BC               	goto	l7773
  1773  0034AE  0A01               	xorlw	1	; case 1
  1774  0034B0  B4D8               	btfsc	status,2,c
  1775  0034B2  D7D8               	goto	l7855
  1776  0034B4  0A04               	xorlw	4	; case 5
  1777  0034B6  D6B4               	goto	l7771
  1778  0034B8                     __end_of_main:
  1779                           	opt callstack 0
  1780                           
  1781 ;; *************** function _t_protocol *****************
  1782 ;; Defined at:
  1783 ;;		line 126 in file "gemsecs.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  t_link          1  [STACK] PTR enum E16164
  1786 ;;		 -> V(80), 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  block           3  [STACK] struct response_type
  1789 ;;  rxData          1  [STACK] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1  [STACK] enum E16902
  1792 ;; Registers used:
  1793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp
      ++8, btemp+9, btemp+10, btemp+11, prodl, prodh
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1803 ;;Total ram usage:        0 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    5
  1806 ;; This function calls:
  1807 ;;		_StartTimer
  1808 ;;		_TimerDone
  1809 ;;		_UART1_Read
  1810 ;;		_UART1_Write
  1811 ;;		_UART1_is_rx_ready
  1812 ;;		_UART1_put_buffer
  1813 ;;		_WaitMs
  1814 ;;		_secs_II_message
  1815 ;;		_secs_send
  1816 ;; This function is called by:
  1817 ;;		_main
  1818 ;; This function uses a reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text1
  1822  0040C6                     __ptext1:
  1823                           	opt callstack 0
  1824  0040C6                     _t_protocol:
  1825                           	opt callstack 0
  1826                           
  1827                           ; BSR set to: 0
  1828                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1829  0040C6  52E6               	movf	postinc1,f,c
  1830  0040C8  52E6               	movf	postinc1,f,c
  1831  0040CA  52E6               	movf	postinc1,f,c
  1832  0040CC  52E6               	movf	postinc1,f,c
  1833                           
  1834                           ;gemsecs.c: 126: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 127: {;gemsecs.
      +                          c: 128:  uint8_t rxData;;gemsecs.c: 129:  response_type block;;gemsecs.c: 131:  switch (
      +                          *t_link) {
  1835                           
  1836                           ;incstack = 0
  1837  0040CE  D0DE               	goto	l7751
  1838  0040D0                     l1530:
  1839                           
  1840                           ;gemsecs.c: 133:   V.error = LINK_ERROR_NONE;
  1841  0040D0  0100               	movlb	0	; () banked
  1842  0040D2  6BD3               	clrf	(_V+74)& (0+255),b	;volatile
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;gemsecs.c: 134:   UART1_Write(0x05);
  1846  0040D4  0E05               	movlw	5
  1847  0040D6  6EE6               	movwf	postinc1,c
  1848  0040D8  EC26  F02B         	call	_UART1_Write	;wreg free
  1849                           
  1850                           ; BSR set to: 57
  1851                           ;gemsecs.c: 135:   StartTimer(TMR_T2, 2000);
  1852  0040DC  0ED0               	movlw	208
  1853  0040DE  6EE6               	movwf	postinc1,c
  1854  0040E0  0E07               	movlw	7
  1855  0040E2  6EE6               	movwf	postinc1,c
  1856  0040E4  0E02               	movlw	2
  1857  0040E6  6EE6               	movwf	postinc1,c
  1858  0040E8  EC83  F02B         	call	_StartTimer	;wreg free
  1859                           
  1860                           ;gemsecs.c: 136:   *t_link = LINK_STATE_ENQ;
  1861                           ;stkvar	_t_link @ sp[(-4)+-1]
  1862  0040EC  0EFB               	movlw	-5
  1863  0040EE  50E3               	movf	plusw1,w,c
  1864  0040F0  6ED9               	movwf	fsr2l,c
  1865  0040F2  6ADA               	clrf	fsr2h,c
  1866  0040F4  0E01               	movlw	1
  1867  0040F6  6EDF               	movwf	indf2,c
  1868                           
  1869                           ;gemsecs.c: 138:   WaitMs(5);
  1870  0040F8  0E05               	movlw	5
  1871  0040FA  6EE6               	movwf	postinc1,c
  1872  0040FC  0E00               	movlw	0
  1873  0040FE  6EE6               	movwf	postinc1,c
  1874  004100  EC40  F02C         	call	_WaitMs	;wreg free
  1875                           
  1876                           ;gemsecs.c: 139:   UART1_put_buffer(0x04);
  1877  004104  0E04               	movlw	4
  1878  004106  6EE6               	movwf	postinc1,c
  1879  004108  EC2B  F02C         	call	_UART1_put_buffer	;wreg free
  1880                           
  1881                           ;gemsecs.c: 141:   break;
  1882  00410C  D0E0               	goto	l7753
  1883  00410E                     l7691:
  1884                           
  1885                           ;gemsecs.c: 143:   if (TimerDone(TMR_T2)) {
  1886  00410E  0E02               	movlw	2
  1887  004110  6EE6               	movwf	postinc1,c
  1888  004112  ECE7  F02D         	call	_TimerDone	;wreg free
  1889  004116  503D               	movf	btemp,w,c
  1890  004118  B4D8               	btfsc	status,2,c
  1891  00411A  D009               	goto	l7697
  1892                           
  1893                           ;gemsecs.c: 144:    V.error = LINK_ERROR_T2;
  1894  00411C  0E02               	movlw	2
  1895  00411E  0100               	movlb	0	; () banked
  1896  004120  6FD3               	movwf	(_V+74)& (0+255),b	;volatile
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;gemsecs.c: 145:    *t_link = LINK_STATE_NAK;
  1900                           ;stkvar	_t_link @ sp[(-4)+-1]
  1901  004122  0EFB               	movlw	-5
  1902  004124  50E3               	movf	plusw1,w,c
  1903  004126  6ED9               	movwf	fsr2l,c
  1904  004128  6ADA               	clrf	fsr2h,c
  1905  00412A  0E05               	movlw	5
  1906  00412C  D0AD               	goto	L5
  1907  00412E                     l7697:
  1908                           
  1909                           ;gemsecs.c: 147:    if (UART1_is_rx_ready()) {
  1910  00412E  EC41  F02F         	call	_UART1_is_rx_ready	;wreg free
  1911  004132  503D               	movf	btemp,w,c
  1912  004134  B4D8               	btfsc	status,2,c
  1913  004136  D0CB               	goto	l7753
  1914                           
  1915                           ;gemsecs.c: 148:     rxData = UART1_Read();
  1916  004138  EC45  F02B         	call	_UART1_Read	;wreg free
  1917                           
  1918                           ;stkvar	_rxData @ sp[(-4)+3]
  1919  00413C  0EFF               	movlw	-1
  1920  00413E  0060  F0F7  FFE3   	movff	btemp,plusw1
  1921                           
  1922                           ; BSR set to: 57
  1923                           ;gemsecs.c: 149:     if (rxData == 0x04) {
  1924                           ;stkvar	_rxData @ sp[(-4)+3]
  1925  004144  0EFF               	movlw	-1
  1926  004146  006F FF8C  F03D    	movff	plusw1,btemp
  1927  00414C  0E04               	movlw	4
  1928  00414E  183D               	xorwf	btemp,w,c
  1929  004150  A4D8               	btfss	status,2,c
  1930  004152  D0BD               	goto	l7753
  1931                           
  1932                           ; BSR set to: 57
  1933                           ;gemsecs.c: 150:      StartTimer(TMR_T3, 5000);
  1934  004154  0E88               	movlw	136
  1935  004156  6EE6               	movwf	postinc1,c
  1936  004158  0E13               	movlw	19
  1937  00415A  6EE6               	movwf	postinc1,c
  1938  00415C  0E03               	movlw	3
  1939  00415E  6EE6               	movwf	postinc1,c
  1940  004160  EC83  F02B         	call	_StartTimer	;wreg free
  1941                           
  1942                           ;gemsecs.c: 151:      *t_link = LINK_STATE_EOT;
  1943                           ;stkvar	_t_link @ sp[(-4)+-1]
  1944  004164  0EFB               	movlw	-5
  1945  004166  50E3               	movf	plusw1,w,c
  1946  004168  6ED9               	movwf	fsr2l,c
  1947  00416A  6ADA               	clrf	fsr2h,c
  1948  00416C  0E02               	movlw	2
  1949  00416E  D08C               	goto	L5
  1950  004170                     l7707:
  1951                           
  1952                           ;gemsecs.c: 157:   block = secs_II_message(V.stream, V.function);
  1953  004170  0100               	movlb	0	; () banked
  1954  004172  51D2               	movf	(_V+73)& (0+255),w,b	;volatile
  1955  004174  6EE6               	movwf	postinc1,c
  1956  004176  51D1               	movf	(_V+72)& (0+255),w,b	;volatile
  1957  004178  6EE6               	movwf	postinc1,c
  1958  00417A  EC4E  F022         	call	_secs_II_message	;wreg free
  1959                           
  1960                           ;stkvar	_block @ sp[(-4)+0]
  1961  00417E  0EFC               	movlw	-4
  1962  004180  0060  F0F7  FFE3   	movff	btemp,plusw1
  1963  004186  0EFD               	movlw	-3
  1964  004188  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  1965  00418E  0EFE               	movlw	-2
  1966  004190  0060  F0FF  FFE3   	movff	btemp+2,plusw1
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;gemsecs.c: 158:   if (V.abort == LINK_ERROR_ABORT) {
  1970  004196  0E07               	movlw	7
  1971  004198  19D4               	xorwf	(_V+75)& (0+255),w,b	;volatile
  1972  00419A  A4D8               	btfss	status,2,c
  1973  00419C  D019               	goto	l7715
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;gemsecs.c: 159:    secs_send((uint8_t*) block.header, block.length, 0);
  1977  00419E  0E00               	movlw	0
  1978  0041A0  6EE6               	movwf	postinc1,c
  1979                           
  1980                           ;stkvar	_block @ sp[(-5)+0]
  1981  0041A2  0EFD               	movlw	253
  1982  0041A4  24E1               	addwf	fsr1l,w,c
  1983  0041A6  6ED9               	movwf	fsr2l,c
  1984  0041A8  0EFF               	movlw	255
  1985  0041AA  20E2               	addwfc	fsr1h,w,c
  1986  0041AC  6EDA               	movwf	fsr2h,c
  1987  0041AE  50DF               	movf	indf2,w,c
  1988  0041B0  6EE6               	movwf	postinc1,c
  1989                           
  1990                           ;stkvar	_block @ sp[(-6)+0]
  1991  0041B2  0EFA               	movlw	-6
  1992  0041B4  006F FF8F FFE6     	movff	plusw1,postinc1
  1993  0041BA  006F FF8F FFE6     	movff	plusw1,postinc1
  1994  0041C0  EC72  F021         	call	_secs_send	;wreg free
  1995  0041C4                     l7713:
  1996                           
  1997                           ;gemsecs.c: 160:    *t_link = LINK_STATE_ERROR;
  1998                           ;stkvar	_t_link @ sp[(-4)+-1]
  1999  0041C4  0EFB               	movlw	-5
  2000  0041C6  50E3               	movf	plusw1,w,c
  2001  0041C8  6ED9               	movwf	fsr2l,c
  2002  0041CA  6ADA               	clrf	fsr2h,c
  2003  0041CC  0E06               	movlw	6
  2004  0041CE  D01C               	goto	L3
  2005  0041D0                     l7715:
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;gemsecs.c: 162:    secs_send((uint8_t*) block.header, block.length, 0);
  2009  0041D0  0E00               	movlw	0
  2010  0041D2  6EE6               	movwf	postinc1,c
  2011                           
  2012                           ;stkvar	_block @ sp[(-5)+0]
  2013  0041D4  0EFD               	movlw	253
  2014  0041D6  24E1               	addwf	fsr1l,w,c
  2015  0041D8  6ED9               	movwf	fsr2l,c
  2016  0041DA  0EFF               	movlw	255
  2017  0041DC  20E2               	addwfc	fsr1h,w,c
  2018  0041DE  6EDA               	movwf	fsr2h,c
  2019  0041E0  50DF               	movf	indf2,w,c
  2020  0041E2  6EE6               	movwf	postinc1,c
  2021                           
  2022                           ;stkvar	_block @ sp[(-6)+0]
  2023  0041E4  0EFA               	movlw	-6
  2024  0041E6  006F FF8F FFE6     	movff	plusw1,postinc1
  2025  0041EC  006F FF8F FFE6     	movff	plusw1,postinc1
  2026  0041F2  EC72  F021         	call	_secs_send	;wreg free
  2027                           
  2028                           ;gemsecs.c: 163:    if (V.error == LINK_ERROR_NONE) {
  2029  0041F6  0100               	movlb	0	; () banked
  2030  0041F8  51D3               	movf	(_V+74)& (0+255),w,b	;volatile
  2031  0041FA  A4D8               	btfss	status,2,c
  2032  0041FC  D7E3               	goto	l7713
  2033                           
  2034                           ; BSR set to: 0
  2035                           ;gemsecs.c: 164:     *t_link = LINK_STATE_ACK;
  2036                           ;stkvar	_t_link @ sp[(-4)+-1]
  2037  0041FE  0EFB               	movlw	-5
  2038  004200  50E3               	movf	plusw1,w,c
  2039  004202  6ED9               	movwf	fsr2l,c
  2040  004204  6ADA               	clrf	fsr2h,c
  2041  004206  0E03               	movlw	3
  2042  004208                     L3:
  2043  004208  6EDF               	movwf	indf2,c
  2044                           
  2045                           ;gemsecs.c: 170:   WaitMs(5);
  2046                           
  2047                           ;gemsecs.c: 165:    } else {
  2048  00420A  0E05               	movlw	5
  2049  00420C  6EE6               	movwf	postinc1,c
  2050  00420E  0E00               	movlw	0
  2051  004210  6EE6               	movwf	postinc1,c
  2052  004212  EC40  F02C         	call	_WaitMs	;wreg free
  2053                           
  2054                           ;gemsecs.c: 171:   UART1_put_buffer(0x06);
  2055  004216  0E06               	movlw	6
  2056  004218  6EE6               	movwf	postinc1,c
  2057  00421A  EC2B  F02C         	call	_UART1_put_buffer	;wreg free
  2058                           
  2059                           ;gemsecs.c: 173:   break;
  2060  00421E  D057               	goto	l7753
  2061  004220                     l7727:
  2062                           
  2063                           ;gemsecs.c: 175:   if (TimerDone(TMR_T3)) {
  2064  004220  0E03               	movlw	3
  2065  004222  6EE6               	movwf	postinc1,c
  2066  004224  ECE7  F02D         	call	_TimerDone	;wreg free
  2067  004228  503D               	movf	btemp,w,c
  2068  00422A  B4D8               	btfsc	status,2,c
  2069  00422C  D002               	goto	l7733
  2070                           
  2071                           ;gemsecs.c: 176:    V.error = LINK_ERROR_T3;
  2072  00422E  0E03               	movlw	3
  2073  004230  D776               	goto	L4
  2074  004232                     l7733:
  2075                           
  2076                           ;gemsecs.c: 179:    if (UART1_is_rx_ready()) {
  2077  004232  EC41  F02F         	call	_UART1_is_rx_ready	;wreg free
  2078  004236  503D               	movf	btemp,w,c
  2079  004238  B4D8               	btfsc	status,2,c
  2080  00423A  D049               	goto	l7753
  2081                           
  2082                           ;gemsecs.c: 180:     rxData = UART1_Read();
  2083  00423C  EC45  F02B         	call	_UART1_Read	;wreg free
  2084                           
  2085                           ;stkvar	_rxData @ sp[(-4)+3]
  2086  004240  0EFF               	movlw	-1
  2087  004242  0060  F0F7  FFE3   	movff	btemp,plusw1
  2088                           
  2089                           ; BSR set to: 57
  2090                           ;gemsecs.c: 181:     if (rxData == 0x06) {
  2091                           ;stkvar	_rxData @ sp[(-4)+3]
  2092  004248  0EFF               	movlw	-1
  2093  00424A  006F FF8C  F03D    	movff	plusw1,btemp
  2094  004250  0E06               	movlw	6
  2095  004252  183D               	xorwf	btemp,w,c
  2096  004254  A4D8               	btfss	status,2,c
  2097  004256  D03B               	goto	l7753
  2098                           
  2099                           ; BSR set to: 57
  2100                           ;gemsecs.c: 182:      *t_link = LINK_STATE_DONE;
  2101                           ;stkvar	_t_link @ sp[(-4)+-1]
  2102  004258  0EFB               	movlw	-5
  2103  00425A  50E3               	movf	plusw1,w,c
  2104  00425C  6ED9               	movwf	fsr2l,c
  2105  00425E  6ADA               	clrf	fsr2h,c
  2106  004260  0E04               	movlw	4
  2107  004262  D012               	goto	L5
  2108  004264                     l7741:
  2109                           
  2110                           ;gemsecs.c: 188:   *t_link = LINK_STATE_ERROR;
  2111                           ;stkvar	_t_link @ sp[(-4)+-1]
  2112  004264  0EFB               	movlw	-5
  2113  004266  50E3               	movf	plusw1,w,c
  2114  004268  6ED9               	movwf	fsr2l,c
  2115  00426A  6ADA               	clrf	fsr2h,c
  2116  00426C  0E06               	movlw	6
  2117  00426E  6EDF               	movwf	indf2,c
  2118                           
  2119                           ;gemsecs.c: 189:   while ((uart1RxCount)) {
  2120  004270  D002               	goto	l7745
  2121  004272                     l7743:
  2122                           
  2123                           ;gemsecs.c: 190:    UART1_Read();
  2124  004272  EC45  F02B         	call	_UART1_Read	;wreg free
  2125  004276                     l7745:
  2126                           
  2127                           ;gemsecs.c: 189:   while ((uart1RxCount)) {
  2128  004276  5037               	movf	_uart1RxCount,w,c	;volatile
  2129  004278  B4D8               	btfsc	status,2,c
  2130  00427A  D029               	goto	l7753
  2131  00427C  D7FA               	goto	l7743
  2132  00427E                     l7747:
  2133                           
  2134                           ;gemsecs.c: 198:   *t_link = LINK_STATE_IDLE;
  2135                           ;stkvar	_t_link @ sp[(-4)+-1]
  2136  00427E  0EFB               	movlw	-5
  2137  004280  50E3               	movf	plusw1,w,c
  2138  004282  6ED9               	movwf	fsr2l,c
  2139  004284  6ADA               	clrf	fsr2h,c
  2140  004286  0E00               	movlw	0
  2141  004288                     L5:
  2142  004288  6EDF               	movwf	indf2,c
  2143                           
  2144                           ;gemsecs.c: 199:   break;
  2145  00428A  D021               	goto	l7753
  2146  00428C                     l7751:
  2147                           
  2148                           ;stkvar	_t_link @ sp[(-4)+-1]
  2149  00428C  0EFB               	movlw	-5
  2150  00428E  50E3               	movf	plusw1,w,c
  2151  004290  6ED9               	movwf	fsr2l,c
  2152  004292  6ADA               	clrf	fsr2h,c
  2153  004294  50DF               	movf	indf2,w,c
  2154  004296  6E47               	movwf	btemp+10,c
  2155  004298  6A48               	clrf	btemp+11,c
  2156                           
  2157                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2158                           ; Switch size 1, requested type "simple"
  2159                           ; Number of cases is 1, Range of values is 0 to 0
  2160                           ; switch strategies available:
  2161                           ; Name         Instructions Cycles
  2162                           ; simple_byte            4     3 (average)
  2163                           ;	Chosen strategy is simple_byte
  2164  00429A  5048               	movf	btemp+11,w,c
  2165  00429C  0A00               	xorlw	0	; case 0
  2166  00429E  A4D8               	btfss	status,2,c
  2167  0042A0  D7EE               	goto	l7747
  2168                           
  2169                           ; Switch size 1, requested type "simple"
  2170                           ; Number of cases is 7, Range of values is 0 to 6
  2171                           ; switch strategies available:
  2172                           ; Name         Instructions Cycles
  2173                           ; simple_byte           22    12 (average)
  2174                           ;	Chosen strategy is simple_byte
  2175  0042A2  5047               	movf	btemp+10,w,c
  2176  0042A4  0A00               	xorlw	0	; case 0
  2177  0042A6  B4D8               	btfsc	status,2,c
  2178  0042A8  D713               	goto	l1530
  2179  0042AA  0A01               	xorlw	1	; case 1
  2180  0042AC  B4D8               	btfsc	status,2,c
  2181  0042AE  D72F               	goto	l7691
  2182  0042B0  0A03               	xorlw	3	; case 2
  2183  0042B2  B4D8               	btfsc	status,2,c
  2184  0042B4  D75D               	goto	l7707
  2185  0042B6  0A01               	xorlw	1	; case 3
  2186  0042B8  B4D8               	btfsc	status,2,c
  2187  0042BA  D7B2               	goto	l7727
  2188  0042BC  0A07               	xorlw	7	; case 4
  2189  0042BE  B4D8               	btfsc	status,2,c
  2190  0042C0  D006               	goto	l7753
  2191  0042C2  0A01               	xorlw	1	; case 5
  2192  0042C4  B4D8               	btfsc	status,2,c
  2193  0042C6  D7CE               	goto	l7741
  2194  0042C8  0A03               	xorlw	3	; case 6
  2195  0042CA  A4D8               	btfss	status,2,c
  2196  0042CC  D7D8               	goto	l7747
  2197  0042CE                     l7753:
  2198                           
  2199                           ;gemsecs.c: 202:  return *t_link;
  2200                           ;stkvar	_t_link @ sp[(-4)+-1]
  2201  0042CE  0EFB               	movlw	-5
  2202  0042D0  50E3               	movf	plusw1,w,c
  2203  0042D2  6ED9               	movwf	fsr2l,c
  2204  0042D4  6ADA               	clrf	fsr2h,c
  2205  0042D6  50DF               	movf	indf2,w,c
  2206  0042D8  6E3D               	movwf	btemp,c
  2207                           
  2208                           ; _t_protocol: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2209  0042DA  0EFB               	movlw	251
  2210  0042DC  26E1               	addwf	fsr1l,f,c
  2211  0042DE  0EFF               	movlw	255
  2212  0042E0  22E2               	addwfc	fsr1h,f,c
  2213  0042E2  0012               	return		;funcret
  2214  0042E4                     __end_of_t_protocol:
  2215                           	opt callstack 0
  2216                           
  2217 ;; *************** function _secs_II_message *****************
  2218 ;; Defined at:
  2219 ;;		line 244 in file "gemsecs.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  stream          1  [STACK] unsigned char 
  2222 ;;  function        1  [STACK] unsigned char 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;		None
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  3  [STACK] struct response_type
  2227 ;; Registers used:
  2228 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11
  2229 ;; Tracked objects:
  2230 ;;		On entry : 3F/0
  2231 ;;		On exit  : 3F/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2238 ;;Total ram usage:        0 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    3
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_t_protocol
  2245 ;; This function uses a reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text2
  2249  00449C                     __ptext2:
  2250                           	opt callstack 0
  2251  00449C                     _secs_II_message:
  2252                           	opt callstack 26
  2253                           
  2254                           ;gemsecs.c: 244: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 245: {;gemsecs.c: 246:  static response_type block;;gemsecs.c: 248:  V.abort = LINK_
      +                          ERROR_NONE;
  2255                           
  2256                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2257                           ;incstack = 0
  2258  00449C  0100               	movlb	0	; () banked
  2259  00449E  6BD4               	clrf	(_V+75)& (0+255),b	;volatile
  2260                           
  2261                           ;gemsecs.c: 250:  switch (stream) {
  2262  0044A0  D067               	goto	l6117
  2263  0044A2                     l6051:
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;gemsecs.c: 254:    block.header = (uint8_t*) & H12[0];
  2267  0044A2  0E92               	movlw	low _H12
  2268  0044A4  6E01               	movwf	secs_II_message@block,c
  2269  0044A6  0E01               	movlw	high _H12
  2270  0044A8  6E02               	movwf	secs_II_message@block+1,c
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;gemsecs.c: 255:    block.length = sizeof(header12);
  2274  0044AA  0E0F               	movlw	15
  2275  0044AC  D04F               	goto	L11
  2276  0044AE                     l6055:
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;gemsecs.c: 258:    block.header = (uint8_t*) & H10[0];
  2280  0044AE  0E00               	movlw	low _H10
  2281  0044B0  6E01               	movwf	secs_II_message@block,c
  2282  0044B2  0E01               	movlw	high _H10
  2283  0044B4  6E02               	movwf	secs_II_message@block+1,c
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;gemsecs.c: 259:    block.length = sizeof(header10);
  2287  0044B6  0E0D               	movlw	13
  2288  0044B8  D049               	goto	L11
  2289  0044BA                     l6059:
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;gemsecs.c: 262:    block.header = (uint8_t*) & H14[0];
  2293  0044BA  0E71               	movlw	low _H14
  2294  0044BC  6E01               	movwf	secs_II_message@block,c
  2295  0044BE  0E01               	movlw	high _H14
  2296  0044C0  6E02               	movwf	secs_II_message@block+1,c
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;gemsecs.c: 263:    block.length = sizeof(header14);
  2300  0044C2  0E11               	movlw	17
  2301  0044C4  D043               	goto	L11
  2302  0044C6                     l6063:
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;gemsecs.c: 266:    block.header = (uint8_t*) & H18[0];
  2306  0044C6  0E5C               	movlw	low _H18
  2307  0044C8  6E01               	movwf	secs_II_message@block,c
  2308  0044CA  0E01               	movlw	high _H18
  2309  0044CC  6E02               	movwf	secs_II_message@block+1,c
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;gemsecs.c: 267:    block.length = sizeof(header18);
  2313  0044CE  0E15               	movlw	21
  2314  0044D0  D03D               	goto	L11
  2315  0044D2                     l6067:
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;gemsecs.c: 270:    block.header = (uint8_t*) & H10[2];
  2319  0044D2  0E1A               	movlw	low (_H10+26)
  2320  0044D4  6E01               	movwf	secs_II_message@block,c
  2321  0044D6  0E01               	movlw	high (_H10+26)
  2322  0044D8  6E02               	movwf	secs_II_message@block+1,c
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;gemsecs.c: 271:    block.length = sizeof(header10);
  2326  0044DA  0E0D               	movlw	13
  2327  0044DC  6E03               	movwf	secs_II_message@block+2,c
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;gemsecs.c: 272:    V.abort = LINK_ERROR_ABORT;
  2331  0044DE  0E07               	movlw	7
  2332  0044E0  6FD4               	movwf	(_V+75)& (0+255),b	;volatile
  2333                           
  2334                           ;gemsecs.c: 273:    break;
  2335  0044E2  D059               	goto	l6119
  2336  0044E4                     l6075:
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;stkvar	_function @ sp[(0)+-2]
  2340  0044E4  0EFE               	movlw	-2
  2341  0044E6  50E3               	movf	plusw1,w,c
  2342  0044E8  6E47               	movwf	btemp+10,c
  2343  0044EA  6A48               	clrf	btemp+11,c
  2344                           
  2345                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2346                           ; Switch size 1, requested type "simple"
  2347                           ; Number of cases is 1, Range of values is 0 to 0
  2348                           ; switch strategies available:
  2349                           ; Name         Instructions Cycles
  2350                           ; simple_byte            4     3 (average)
  2351                           ;	Chosen strategy is simple_byte
  2352  0044EC  5048               	movf	btemp+11,w,c
  2353  0044EE  0A00               	xorlw	0	; case 0
  2354  0044F0  A4D8               	btfss	status,2,c
  2355  0044F2  D7EF               	goto	l6067
  2356                           
  2357                           ; BSR set to: 0
  2358                           ; Switch size 1, requested type "simple"
  2359                           ; Number of cases is 4, Range of values is 1 to 4
  2360                           ; switch strategies available:
  2361                           ; Name         Instructions Cycles
  2362                           ; simple_byte           13     7 (average)
  2363                           ;	Chosen strategy is simple_byte
  2364  0044F4  5047               	movf	btemp+10,w,c
  2365  0044F6  0A01               	xorlw	1	; case 1
  2366  0044F8  B4D8               	btfsc	status,2,c
  2367  0044FA  D7D3               	goto	l6051
  2368  0044FC  0A03               	xorlw	3	; case 2
  2369  0044FE  B4D8               	btfsc	status,2,c
  2370  004500  D7D6               	goto	l6055
  2371  004502  0A01               	xorlw	1	; case 3
  2372  004504  B4D8               	btfsc	status,2,c
  2373  004506  D7D9               	goto	l6059
  2374  004508  0A07               	xorlw	7	; case 4
  2375  00450A  B4D8               	btfsc	status,2,c
  2376  00450C  D7DC               	goto	l6063
  2377  00450E  D7E1               	goto	l6067
  2378  004510                     l6077:
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;gemsecs.c: 279:    block.header = (uint8_t*) & H24[0];
  2382  004510  0E41               	movlw	low _H24
  2383  004512  6E01               	movwf	secs_II_message@block,c
  2384  004514  0E01               	movlw	high _H24
  2385  004516  6E02               	movwf	secs_II_message@block+1,c
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;gemsecs.c: 280:    block.length = sizeof(header24);
  2389  004518  0E1B               	movlw	27
  2390  00451A  D018               	goto	L11
  2391  00451C                     l6089:
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;stkvar	_function @ sp[(0)+-2]
  2395  00451C  0EFE               	movlw	-2
  2396  00451E  50E3               	movf	plusw1,w,c
  2397  004520  6E47               	movwf	btemp+10,c
  2398  004522  6A48               	clrf	btemp+11,c
  2399                           
  2400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2401                           ; Switch size 1, requested type "simple"
  2402                           ; Number of cases is 1, Range of values is 0 to 0
  2403                           ; switch strategies available:
  2404                           ; Name         Instructions Cycles
  2405                           ; simple_byte            4     3 (average)
  2406                           ;	Chosen strategy is simple_byte
  2407  004524  5048               	movf	btemp+11,w,c
  2408  004526  0A00               	xorlw	0	; case 0
  2409  004528  A4D8               	btfss	status,2,c
  2410  00452A  D7D3               	goto	l6067
  2411                           
  2412                           ; BSR set to: 0
  2413                           ; Switch size 1, requested type "simple"
  2414                           ; Number of cases is 1, Range of values is 17 to 17
  2415                           ; switch strategies available:
  2416                           ; Name         Instructions Cycles
  2417                           ; simple_byte            4     3 (average)
  2418                           ;	Chosen strategy is simple_byte
  2419  00452C  5047               	movf	btemp+10,w,c
  2420  00452E  0A11               	xorlw	17	; case 17
  2421  004530  B4D8               	btfsc	status,2,c
  2422  004532  D7EE               	goto	l6077
  2423  004534  D7CE               	goto	l6067
  2424  004536                     l6091:
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;gemsecs.c: 292:    block.header = (uint8_t*) & H13[0];
  2428  004536  0E82               	movlw	low _H13
  2429  004538  6E01               	movwf	secs_II_message@block,c
  2430  00453A  0E01               	movlw	high _H13
  2431  00453C  6E02               	movwf	secs_II_message@block+1,c
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;gemsecs.c: 293:    block.length = sizeof(header13);
  2435  00453E  0E10               	movlw	16
  2436  004540  D005               	goto	L11
  2437  004542                     l6095:
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;gemsecs.c: 296:    block.header = (uint8_t*) & H53[0];
  2441  004542  0E86               	movlw	low _H53
  2442  004544  6E01               	movwf	secs_II_message@block,c
  2443  004546  0E03               	movlw	high _H53
  2444  004548  6E02               	movwf	secs_II_message@block+1,c
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;gemsecs.c: 297:    block.length = sizeof(header53);
  2448  00454A  0E38               	movlw	56
  2449  00454C                     L11:
  2450  00454C  6E03               	movwf	secs_II_message@block+2,c
  2451                           
  2452                           ;gemsecs.c: 298:    break;
  2453  00454E  D023               	goto	l6119
  2454  004550                     l6107:
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;stkvar	_function @ sp[(0)+-2]
  2458  004550  0EFE               	movlw	-2
  2459  004552  50E3               	movf	plusw1,w,c
  2460  004554  6E47               	movwf	btemp+10,c
  2461  004556  6A48               	clrf	btemp+11,c
  2462                           
  2463                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2464                           ; Switch size 1, requested type "simple"
  2465                           ; Number of cases is 1, Range of values is 0 to 0
  2466                           ; switch strategies available:
  2467                           ; Name         Instructions Cycles
  2468                           ; simple_byte            4     3 (average)
  2469                           ;	Chosen strategy is simple_byte
  2470  004558  5048               	movf	btemp+11,w,c
  2471  00455A  0A00               	xorlw	0	; case 0
  2472  00455C  A4D8               	btfss	status,2,c
  2473  00455E  D7B9               	goto	l6067
  2474                           
  2475                           ; BSR set to: 0
  2476                           ; Switch size 1, requested type "simple"
  2477                           ; Number of cases is 2, Range of values is 11 to 12
  2478                           ; switch strategies available:
  2479                           ; Name         Instructions Cycles
  2480                           ; simple_byte            7     4 (average)
  2481                           ;	Chosen strategy is simple_byte
  2482  004560  5047               	movf	btemp+10,w,c
  2483  004562  0A0B               	xorlw	11	; case 11
  2484  004564  B4D8               	btfsc	status,2,c
  2485  004566  D7E7               	goto	l6091
  2486  004568  0A07               	xorlw	7	; case 12
  2487  00456A  B4D8               	btfsc	status,2,c
  2488  00456C  D7EA               	goto	l6095
  2489  00456E  D7B1               	goto	l6067
  2490  004570                     l6117:
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;stkvar	_stream @ sp[(0)+-1]
  2494  004570  0EFF               	movlw	-1
  2495  004572  50E3               	movf	plusw1,w,c
  2496  004574  6E47               	movwf	btemp+10,c
  2497  004576  6A48               	clrf	btemp+11,c
  2498                           
  2499                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2500                           ; Switch size 1, requested type "simple"
  2501                           ; Number of cases is 1, Range of values is 0 to 0
  2502                           ; switch strategies available:
  2503                           ; Name         Instructions Cycles
  2504                           ; simple_byte            4     3 (average)
  2505                           ;	Chosen strategy is simple_byte
  2506  004578  5048               	movf	btemp+11,w,c
  2507  00457A  0A00               	xorlw	0	; case 0
  2508  00457C  A4D8               	btfss	status,2,c
  2509  00457E  D7A9               	goto	l6067
  2510                           
  2511                           ; BSR set to: 0
  2512                           ; Switch size 1, requested type "simple"
  2513                           ; Number of cases is 3, Range of values is 1 to 6
  2514                           ; switch strategies available:
  2515                           ; Name         Instructions Cycles
  2516                           ; simple_byte           10     6 (average)
  2517                           ;	Chosen strategy is simple_byte
  2518  004580  5047               	movf	btemp+10,w,c
  2519  004582  0A01               	xorlw	1	; case 1
  2520  004584  B4D8               	btfsc	status,2,c
  2521  004586  D7AE               	goto	l6075
  2522  004588  0A03               	xorlw	3	; case 2
  2523  00458A  B4D8               	btfsc	status,2,c
  2524  00458C  D7C7               	goto	l6089
  2525  00458E  0A04               	xorlw	4	; case 6
  2526  004590  B4D8               	btfsc	status,2,c
  2527  004592  D7DE               	goto	l6107
  2528  004594  D79E               	goto	l6067
  2529  004596                     l6119:
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;gemsecs.c: 313:  return(block);
  2533  004596  0060  F004  F03D   	movff	secs_II_message@block,btemp
  2534  00459C  0060  F008  F03E   	movff	secs_II_message@block+1,btemp+1
  2535  0045A2  0060  F00C  F03F   	movff	secs_II_message@block+2,btemp+2
  2536                           
  2537                           ; BSR set to: 0
  2538                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  2539  0045A8  52E5               	movf	postdec1,f,c
  2540  0045AA  52E5               	movf	postdec1,f,c
  2541  0045AC  0012               	return		;funcret
  2542  0045AE                     __end_of_secs_II_message:
  2543                           	opt callstack 0
  2544                           
  2545 ;; *************** function _sprintf *****************
  2546 ;; Defined at:
  2547 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  s               1  [STACK] PTR unsigned char 
  2550 ;;		 -> V(80), 
  2551 ;;  fmt             1  [STACK] PTR const unsigned char 
  2552 ;;		 -> STR_5(23), STR_4(6), STR_3(14), STR_2(12), 
  2553 ;;		 -> STR_1(61), 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  f               5  [STACK] struct _IO_FILE
  2556 ;;  ap              2  [STACK] PTR void [1]
  2557 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2558 ;;  ret             2    0        int 
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  2  [STACK] int 
  2561 ;; Registers used:
  2562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/1
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2572 ;;Total ram usage:        0 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; Hardware stack levels required when called:   11
  2575 ;; This function calls:
  2576 ;;		_vfprintf
  2577 ;; This function is called by:
  2578 ;;		_main
  2579 ;; This function uses a reentrant model
  2580 ;;
  2581                           
  2582                           	psect	text3
  2583  00497E                     __ptext3:
  2584                           	opt callstack 0
  2585  00497E                     _sprintf:
  2586                           	opt callstack 0
  2587                           
  2588                           ; BSR set to: 0
  2589                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 26, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  2590  00497E  0E07               	movlw	7
  2591  004980  26E1               	addwf	fsr1l,f,c
  2592  004982  0E00               	movlw	0
  2593  004984  22E2               	addwfc	fsr1h,f,c
  2594                           
  2595                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  2596                           
  2597                           ;incstack = 0
  2598  004986  0EF6               	movlw	246
  2599  004988  24E1               	addwf	fsr1l,w,c
  2600  00498A  6E47               	movwf	btemp+10,c
  2601  00498C  0EFF               	movlw	255
  2602  00498E  20E2               	addwfc	fsr1h,w,c
  2603  004990  6E48               	movwf	btemp+11,c
  2604                           
  2605                           ;stkvar	_ap @ sp[(-7)+5]
  2606  004992  0EFF               	movlw	-1
  2607  004994  0060  F123  FFE3   	movff	btemp+11,plusw1
  2608  00499A  0EFE               	movlw	-2
  2609  00499C  0060  F11F  FFE3   	movff	btemp+10,plusw1
  2610                           
  2611                           ;stkvar	_s @ sp[(-7)+-2]
  2612  0049A2  0EF7               	movlw	-9
  2613  0049A4  006F FF8C  F048    	movff	plusw1,btemp+11
  2614                           
  2615                           ;stkvar	_f @ sp[(-7)+0]
  2616  0049AA  0EF9               	movlw	-7
  2617  0049AC  0060  F123  FFE3   	movff	btemp+11,plusw1
  2618                           
  2619                           ;stkvar	_f @ sp[(-7)+0]
  2620  0049B2  0EFA               	movlw	250
  2621  0049B4  24E1               	addwf	fsr1l,w,c
  2622  0049B6  6ED9               	movwf	fsr2l,c
  2623  0049B8  0EFF               	movlw	255
  2624  0049BA  20E2               	addwfc	fsr1h,w,c
  2625  0049BC  6EDA               	movwf	fsr2h,c
  2626  0049BE  0E00               	movlw	0
  2627  0049C0  6EDE               	movwf	postinc2,c
  2628  0049C2  0E00               	movlw	0
  2629  0049C4  6EDD               	movwf	postdec2,c
  2630                           
  2631                           ;stkvar	_f @ sp[(-7)+0]
  2632  0049C6  0EFC               	movlw	252
  2633  0049C8  24E1               	addwf	fsr1l,w,c
  2634  0049CA  6ED9               	movwf	fsr2l,c
  2635  0049CC  0EFF               	movlw	255
  2636  0049CE  20E2               	addwfc	fsr1h,w,c
  2637  0049D0  6EDA               	movwf	fsr2h,c
  2638  0049D2  0E00               	movlw	0
  2639  0049D4  6EDE               	movwf	postinc2,c
  2640  0049D6  0E00               	movlw	0
  2641  0049D8  6EDD               	movwf	postdec2,c
  2642                           
  2643                           ;stkvar	_ap @ sp[(-7)+5]
  2644  0049DA  0EFE               	movlw	254
  2645  0049DC  24E1               	addwf	fsr1l,w,c
  2646  0049DE  6E3D               	movwf	btemp,c
  2647  0049E0  0EFF               	movlw	255
  2648  0049E2  20E2               	addwfc	fsr1h,w,c
  2649  0049E4  6E3E               	movwf	btemp+1,c
  2650  0049E6  0060  F0F7  FFE6   	movff	btemp,postinc1
  2651  0049EC  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  2652                           
  2653                           ;stkvar	_fmt @ sp[(-9)+-3]
  2654  0049F2  0EF4               	movlw	-12
  2655  0049F4  50E3               	movf	plusw1,w,c
  2656  0049F6  6EE6               	movwf	postinc1,c
  2657                           
  2658                           ;stkvar	_f @ sp[(-10)+0]
  2659  0049F8  0EF6               	movlw	246
  2660  0049FA  24E1               	addwf	fsr1l,w,c
  2661  0049FC  6E3D               	movwf	btemp,c
  2662  0049FE  0EFF               	movlw	255
  2663  004A00  20E2               	addwfc	fsr1h,w,c
  2664  004A02  6E3E               	movwf	btemp+1,c
  2665  004A04  0060  F0F7  FFE6   	movff	btemp,postinc1
  2666  004A0A  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  2667  004A10  ECC6  F026         	call	_vfprintf	;wreg free
  2668                           
  2669                           ;stkvar	_f @ sp[(-7)+0]
  2670  004A14  0EFA               	movlw	250
  2671  004A16  24E1               	addwf	fsr1l,w,c
  2672  004A18  6ED9               	movwf	fsr2l,c
  2673  004A1A  0EFF               	movlw	255
  2674  004A1C  20E2               	addwfc	fsr1h,w,c
  2675  004A1E  6EDA               	movwf	fsr2h,c
  2676  004A20  50DF               	movf	indf2,w,c
  2677  004A22  6E48               	movwf	btemp+11,c
  2678                           
  2679                           ;stkvar	_s @ sp[(-7)+-2]
  2680  004A24  0EF7               	movlw	-9
  2681  004A26  50E3               	movf	plusw1,w,c
  2682  004A28  2448               	addwf	btemp+11,w,c
  2683  004A2A  6ED9               	movwf	fsr2l,c
  2684  004A2C  6ADA               	clrf	fsr2h,c
  2685  004A2E  0E00               	movlw	0
  2686  004A30  6EDF               	movwf	indf2,c
  2687                           
  2688                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 26, args
      +                          ize = 2, vargsize = 0
  2689  004A32  0EF9               	movlw	249
  2690  004A34  26E1               	addwf	fsr1l,f,c
  2691  004A36  0EFF               	movlw	255
  2692  004A38  22E2               	addwfc	fsr1h,f,c
  2693  004A3A  52E5               	movf	postdec1,f,c
  2694  004A3C  50E7               	movf	indf1,w,c
  2695  004A3E  5EE1               	subwf	fsr1l,f,c
  2696  004A40  0E00               	movlw	0
  2697  004A42  5AE2               	subwfb	fsr1h,f,c
  2698  004A44  0012               	return		;funcret
  2699  004A46                     __end_of_sprintf:
  2700                           	opt callstack 0
  2701                           
  2702 ;; *************** function _r_protocol *****************
  2703 ;; Defined at:
  2704 ;;		line 40 in file "gemsecs.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  r_link          1  [STACK] PTR enum E16164
  2707 ;;		 -> V(80), 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;  rxData          1  [STACK] unsigned char 
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  1  [STACK] enum E16902
  2712 ;; Registers used:
  2713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2723 ;;Total ram usage:        0 bytes
  2724 ;; Hardware stack levels used:    1
  2725 ;; Hardware stack levels required when called:    5
  2726 ;; This function calls:
  2727 ;;		_StartTimer
  2728 ;;		_TimerDone
  2729 ;;		_UART1_Read
  2730 ;;		_UART1_Write
  2731 ;;		_UART1_is_rx_ready
  2732 ;;		_WaitMs
  2733 ;;		_run_checksum
  2734 ;;		_secs_send
  2735 ;; This function is called by:
  2736 ;;		_main
  2737 ;; This function uses a reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text4
  2741  0039DA                     __ptext4:
  2742                           	opt callstack 0
  2743  0039DA                     _r_protocol:
  2744                           	opt callstack 0
  2745                           
  2746                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2747  0039DA  52E6               	movf	postinc1,f,c
  2748                           
  2749                           ;gemsecs.c: 40: LINK_STATES r_protocol(LINK_STATES *r_link);gemsecs.c: 41: {;gemsecs.c: 
      +                          42:  uint8_t rxData;;gemsecs.c: 43:  static uint8_t rxData_l = 0;;gemsecs.c: 45:  switch
      +                           (*r_link) {
  2750                           
  2751                           ;incstack = 0
  2752  0039DC  D113               	goto	l7665
  2753  0039DE                     l7581:
  2754                           
  2755                           ;gemsecs.c: 47:   if (UART1_is_rx_ready()) {
  2756  0039DE  EC41  F02F         	call	_UART1_is_rx_ready	;wreg free
  2757  0039E2  503D               	movf	btemp,w,c
  2758  0039E4  B4D8               	btfsc	status,2,c
  2759  0039E6  D12F               	goto	l7667
  2760                           
  2761                           ;gemsecs.c: 48:    rxData = UART1_Read();
  2762  0039E8  EC45  F02B         	call	_UART1_Read	;wreg free
  2763                           
  2764                           ;stkvar	_rxData @ sp[(-1)+0]
  2765  0039EC  0EFF               	movlw	-1
  2766  0039EE  0060  F0F7  FFE3   	movff	btemp,plusw1
  2767                           
  2768                           ; BSR set to: 57
  2769                           ;gemsecs.c: 49:    if (rxData == 0x05) {
  2770                           ;stkvar	_rxData @ sp[(-1)+0]
  2771  0039F4  0EFF               	movlw	-1
  2772  0039F6  006F FF8C  F03D    	movff	plusw1,btemp
  2773  0039FC  0E05               	movlw	5
  2774  0039FE  183D               	xorwf	btemp,w,c
  2775  003A00  A4D8               	btfss	status,2,c
  2776  003A02  D121               	goto	l7667
  2777                           
  2778                           ; BSR set to: 57
  2779                           ;gemsecs.c: 50:     V.error = LINK_ERROR_NONE;
  2780  003A04  0100               	movlb	0	; () banked
  2781  003A06  6BD3               	clrf	(_V+74)& (0+255),b	;volatile
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;gemsecs.c: 51:     *r_link = LINK_STATE_ENQ;
  2785                           ;stkvar	_r_link @ sp[(-1)+-1]
  2786  003A08  0EFE               	movlw	-2
  2787  003A0A  50E3               	movf	plusw1,w,c
  2788  003A0C  6ED9               	movwf	fsr2l,c
  2789  003A0E  6ADA               	clrf	fsr2h,c
  2790  003A10  0E01               	movlw	1
  2791  003A12  D0F6               	goto	L16
  2792  003A14                     l1504:
  2793                           
  2794                           ;gemsecs.c: 56:   rxData_l = 0;
  2795  003A14  6A30               	clrf	r_protocol@rxData_l,c
  2796                           
  2797                           ;gemsecs.c: 57:   UART1_Write(0x04);
  2798  003A16  0E04               	movlw	4
  2799  003A18  6EE6               	movwf	postinc1,c
  2800  003A1A  EC26  F02B         	call	_UART1_Write	;wreg free
  2801                           
  2802                           ; BSR set to: 57
  2803                           ;gemsecs.c: 58:   StartTimer(TMR_T2, 2000);
  2804  003A1E  0ED0               	movlw	208
  2805  003A20  6EE6               	movwf	postinc1,c
  2806  003A22  0E07               	movlw	7
  2807  003A24  6EE6               	movwf	postinc1,c
  2808  003A26  0E02               	movlw	2
  2809  003A28  6EE6               	movwf	postinc1,c
  2810  003A2A  EC83  F02B         	call	_StartTimer	;wreg free
  2811                           
  2812                           ;gemsecs.c: 59:   *r_link = LINK_STATE_EOT;
  2813                           ;stkvar	_r_link @ sp[(-1)+-1]
  2814  003A2E  0EFE               	movlw	-2
  2815  003A30  50E3               	movf	plusw1,w,c
  2816  003A32  6ED9               	movwf	fsr2l,c
  2817  003A34  6ADA               	clrf	fsr2h,c
  2818  003A36  0E02               	movlw	2
  2819  003A38  6EDF               	movwf	indf2,c
  2820                           
  2821                           ;gemsecs.c: 61:   WaitMs(5);
  2822  003A3A  0E05               	movlw	5
  2823  003A3C  6EE6               	movwf	postinc1,c
  2824  003A3E  0E00               	movlw	0
  2825  003A40  6EE6               	movwf	postinc1,c
  2826  003A42  EC40  F02C         	call	_WaitMs	;wreg free
  2827                           
  2828                           ;gemsecs.c: 62:   secs_send((uint8_t*) & H10[3], sizeof(header10), 1);
  2829  003A46  0E01               	movlw	1
  2830  003A48  6EE6               	movwf	postinc1,c
  2831  003A4A  0E0D               	movlw	13
  2832  003A4C  6EE6               	movwf	postinc1,c
  2833  003A4E  0E27               	movlw	low (_H10+39)
  2834  003A50  6EE6               	movwf	postinc1,c
  2835  003A52  0E01               	movlw	high (_H10+39)
  2836  003A54  6EE6               	movwf	postinc1,c
  2837  003A56  EC72  F021         	call	_secs_send	;wreg free
  2838                           
  2839                           ;gemsecs.c: 64:   break;
  2840  003A5A  D0F5               	goto	l7667
  2841  003A5C                     l7601:
  2842                           
  2843                           ;gemsecs.c: 66:   if (TimerDone(TMR_T2)) {
  2844  003A5C  0E02               	movlw	2
  2845  003A5E  6EE6               	movwf	postinc1,c
  2846  003A60  ECE7  F02D         	call	_TimerDone	;wreg free
  2847  003A64  503D               	movf	btemp,w,c
  2848  003A66  B4D8               	btfsc	status,2,c
  2849  003A68  D009               	goto	l7607
  2850                           
  2851                           ;gemsecs.c: 67:    V.error = LINK_ERROR_T2;
  2852  003A6A  0E02               	movlw	2
  2853  003A6C  0100               	movlb	0	; () banked
  2854  003A6E  6FD3               	movwf	(_V+74)& (0+255),b	;volatile
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;gemsecs.c: 68:    *r_link = LINK_STATE_NAK;
  2858                           ;stkvar	_r_link @ sp[(-1)+-1]
  2859  003A70  0EFE               	movlw	-2
  2860  003A72  50E3               	movf	plusw1,w,c
  2861  003A74  6ED9               	movwf	fsr2l,c
  2862  003A76  6ADA               	clrf	fsr2h,c
  2863  003A78  0E05               	movlw	5
  2864  003A7A  D0C2               	goto	L16
  2865  003A7C                     l7607:
  2866                           
  2867                           ;gemsecs.c: 70:    if (UART1_is_rx_ready()) {
  2868  003A7C  EC41  F02F         	call	_UART1_is_rx_ready	;wreg free
  2869  003A80  503D               	movf	btemp,w,c
  2870  003A82  B4D8               	btfsc	status,2,c
  2871  003A84  D0E0               	goto	l7667
  2872                           
  2873                           ;gemsecs.c: 71:     rxData = UART1_Read();
  2874  003A86  EC45  F02B         	call	_UART1_Read	;wreg free
  2875                           
  2876                           ;stkvar	_rxData @ sp[(-1)+0]
  2877  003A8A  0EFF               	movlw	-1
  2878  003A8C  0060  F0F7  FFE3   	movff	btemp,plusw1
  2879                           
  2880                           ; BSR set to: 57
  2881                           ;gemsecs.c: 72:     if (rxData_l == 0) {
  2882  003A92  5030               	movf	r_protocol@rxData_l,w,c
  2883  003A94  A4D8               	btfss	status,2,c
  2884  003A96  D00C               	goto	l7619
  2885                           
  2886                           ; BSR set to: 57
  2887                           ;gemsecs.c: 73:      r_block.length = rxData;
  2888                           ;stkvar	_rxData @ sp[(-1)+0]
  2889  003A98  0EFF               	movlw	-1
  2890  003A9A  006F FF8C  F06C    	movff	plusw1,_r_block+12
  2891                           
  2892                           ; BSR set to: 57
  2893                           ;gemsecs.c: 74:      run_checksum(0, 1);
  2894  003AA0  0E01               	movlw	1
  2895  003AA2  6EE6               	movwf	postinc1,c
  2896  003AA4  0E00               	movlw	0
  2897  003AA6  6EE6               	movwf	postinc1,c
  2898  003AA8  EC6B  F02C         	call	_run_checksum	;wreg free
  2899                           
  2900                           ;gemsecs.c: 75:      rxData_l++;
  2901  003AAC  2A30               	incf	r_protocol@rxData_l,f,c
  2902                           
  2903                           ;gemsecs.c: 76:     } else {
  2904  003AAE  D0CB               	goto	l7667
  2905  003AB0                     l7619:
  2906                           
  2907                           ; BSR set to: 57
  2908                           ;gemsecs.c: 80:      if (rxData_l <= 10)
  2909  003AB0  0E0B               	movlw	11
  2910  003AB2  6030               	cpfslt	r_protocol@rxData_l,c
  2911  003AB4  D018               	goto	l7623
  2912                           
  2913                           ; BSR set to: 57
  2914                           ;gemsecs.c: 81:       H10[1].block.b[r_block.length - rxData_l] = rxData;
  2915                           ;stkvar	_rxData @ sp[(-1)+0]
  2916  003AB6  0E00               	movlw	low _H10
  2917  003AB8  6E47               	movwf	btemp+10,c
  2918  003ABA  0E01               	movlw	high _H10
  2919  003ABC  6E48               	movwf	btemp+11,c
  2920  003ABE  0E0F               	movlw	15
  2921  003AC0  2647               	addwf	btemp+10,f,c
  2922  003AC2  0E00               	movlw	0
  2923  003AC4  2248               	addwfc	btemp+11,f,c
  2924  003AC6  0100               	movlb	0	; () banked
  2925  003AC8  516C               	movf	(_r_block+12)& (0+255),w,b
  2926  003ACA  2647               	addwf	btemp+10,f,c
  2927  003ACC  0E00               	movlw	0
  2928  003ACE  2248               	addwfc	btemp+11,f,c
  2929  003AD0  5030               	movf	r_protocol@rxData_l,w,c
  2930  003AD2  5C47               	subwf	btemp+10,w,c
  2931  003AD4  6ED9               	movwf	fsr2l,c
  2932  003AD6  5048               	movf	btemp+11,w,c
  2933  003AD8  A0D8               	btfss	status,0,c
  2934  003ADA  0448               	decf	btemp+11,w,c
  2935  003ADC  6EDA               	movwf	fsr2h,c
  2936  003ADE  0EFF               	movlw	-1
  2937  003AE0  006F FF8F FFDF     	movff	plusw1,indf2
  2938  003AE6                     l7623:
  2939                           
  2940                           ;gemsecs.c: 82:      if (rxData_l <= r_block.length)
  2941  003AE6  5030               	movf	r_protocol@rxData_l,w,c
  2942  003AE8  0100               	movlb	0	; () banked
  2943  003AEA  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  2944  003AEC  A0D8               	btfss	status,0,c
  2945  003AEE  D00D               	goto	l7627
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;gemsecs.c: 83:       V.r_checksum = run_checksum(rxData, 0);
  2949  003AF0  0E00               	movlw	0
  2950  003AF2  6EE6               	movwf	postinc1,c
  2951                           
  2952                           ;stkvar	_rxData @ sp[(-2)+0]
  2953  003AF4  0EFE               	movlw	-2
  2954  003AF6  50E3               	movf	plusw1,w,c
  2955  003AF8  6EE6               	movwf	postinc1,c
  2956  003AFA  EC6B  F02C         	call	_run_checksum	;wreg free
  2957  003AFE  0060  F0F4  F0D5   	movff	btemp,_V+76	;volatile
  2958  003B04  0060  F0F8  F0D6   	movff	btemp+1,_V+77	;volatile
  2959  003B0A                     l7627:
  2960                           
  2961                           ;gemsecs.c: 85:      if (rxData_l == r_block.length + 1)
  2962  003B0A  5030               	movf	r_protocol@rxData_l,w,c
  2963  003B0C  6E47               	movwf	btemp+10,c
  2964  003B0E  6A48               	clrf	btemp+11,c
  2965  003B10  0100               	movlb	0	; () banked
  2966  003B12  516C               	movf	(_r_block+12)& (0+255),w,b
  2967  003B14  6E45               	movwf	btemp+8,c
  2968  003B16  6A46               	clrf	btemp+9,c
  2969  003B18  0E01               	movlw	1
  2970  003B1A  2645               	addwf	btemp+8,f,c
  2971  003B1C  0E00               	movlw	0
  2972  003B1E  2246               	addwfc	btemp+9,f,c
  2973  003B20  5047               	movf	btemp+10,w,c
  2974  003B22  1845               	xorwf	btemp+8,w,c
  2975  003B24  E109               	bnz	l7631
  2976  003B26  5048               	movf	btemp+11,w,c
  2977  003B28  1846               	xorwf	btemp+9,w,c
  2978  003B2A  A4D8               	btfss	status,2,c
  2979  003B2C  D005               	goto	l7631
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;gemsecs.c: 86:       H10[1].checksum = (uint16_t) rxData << 8;
  2983                           ;stkvar	_rxData @ sp[(-1)+0]
  2984  003B2E  0EFF               	movlw	-1
  2985  003B30  50E3               	movf	plusw1,w,c
  2986  003B32  0101               	movlb	1	; () banked
  2987  003B34  6F0E               	movwf	(_H10+14)& (0+255),b
  2988  003B36  6B0D               	clrf	(_H10+13)& (0+255),b
  2989  003B38                     l7631:
  2990                           
  2991                           ;gemsecs.c: 87:      if (rxData_l == r_block.length + 2)
  2992  003B38  5030               	movf	r_protocol@rxData_l,w,c
  2993  003B3A  6E47               	movwf	btemp+10,c
  2994  003B3C  6A48               	clrf	btemp+11,c
  2995  003B3E  0100               	movlb	0	; () banked
  2996  003B40  516C               	movf	(_r_block+12)& (0+255),w,b
  2997  003B42  6E45               	movwf	btemp+8,c
  2998  003B44  6A46               	clrf	btemp+9,c
  2999  003B46  0E02               	movlw	2
  3000  003B48  2645               	addwf	btemp+8,f,c
  3001  003B4A  0E00               	movlw	0
  3002  003B4C  2246               	addwfc	btemp+9,f,c
  3003  003B4E  5047               	movf	btemp+10,w,c
  3004  003B50  1845               	xorwf	btemp+8,w,c
  3005  003B52  E10A               	bnz	l7635
  3006  003B54  5048               	movf	btemp+11,w,c
  3007  003B56  1846               	xorwf	btemp+9,w,c
  3008  003B58  A4D8               	btfss	status,2,c
  3009  003B5A  D006               	goto	l7635
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;gemsecs.c: 88:       H10[1].checksum += rxData;
  3013                           ;stkvar	_rxData @ sp[(-1)+0]
  3014  003B5C  0EFF               	movlw	-1
  3015  003B5E  50E3               	movf	plusw1,w,c
  3016  003B60  0101               	movlb	1	; () banked
  3017  003B62  270D               	addwf	(_H10+13)& (0+255),f,b
  3018  003B64  0E00               	movlw	0
  3019  003B66  230E               	addwfc	(_H10+14)& (0+255),f,b
  3020  003B68                     l7635:
  3021                           
  3022                           ;gemsecs.c: 90:      rxData_l++;
  3023  003B68  2A30               	incf	r_protocol@rxData_l,f,c
  3024                           
  3025                           ;gemsecs.c: 91:      if (rxData_l > (r_block.length + 2)) {
  3026  003B6A  5030               	movf	r_protocol@rxData_l,w,c
  3027  003B6C  6E47               	movwf	btemp+10,c
  3028  003B6E  6A48               	clrf	btemp+11,c
  3029  003B70  0100               	movlb	0	; () banked
  3030  003B72  516C               	movf	(_r_block+12)& (0+255),w,b
  3031  003B74  6E45               	movwf	btemp+8,c
  3032  003B76  6A46               	clrf	btemp+9,c
  3033  003B78  0E02               	movlw	2
  3034  003B7A  2645               	addwf	btemp+8,f,c
  3035  003B7C  0E00               	movlw	0
  3036  003B7E  2246               	addwfc	btemp+9,f,c
  3037  003B80  5047               	movf	btemp+10,w,c
  3038  003B82  5C45               	subwf	btemp+8,w,c
  3039  003B84  5046               	movf	btemp+9,w,c
  3040  003B86  0A80               	xorlw	128
  3041  003B88  6E3D               	movwf	btemp,c
  3042  003B8A  5048               	movf	btemp+11,w,c
  3043  003B8C  0A80               	xorlw	128
  3044  003B8E  583D               	subwfb	btemp,w,c
  3045  003B90  B0D8               	btfsc	status,0,c
  3046  003B92  D059               	goto	l7667
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;gemsecs.c: 92:       if (V.r_checksum == H10[1].checksum) {
  3050  003B94  0101               	movlb	1	; () banked
  3051  003B96  510D               	movf	(_H10+13)& (0+255),w,b
  3052  003B98  0100               	movlb	0	; () banked
  3053  003B9A  19D5               	xorwf	(_V+76)& (0+255),w,b	;volatile
  3054  003B9C  E10C               	bnz	l7643
  3055  003B9E  0101               	movlb	1	; () banked
  3056  003BA0  510E               	movf	(_H10+14)& (0+255),w,b
  3057  003BA2  0100               	movlb	0	; () banked
  3058  003BA4  19D6               	xorwf	(_V+77)& (0+255),w,b	;volatile
  3059  003BA6  A4D8               	btfss	status,2,c
  3060  003BA8  D006               	goto	l7643
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;gemsecs.c: 93:        *r_link = LINK_STATE_ACK;
  3064                           ;stkvar	_r_link @ sp[(-1)+-1]
  3065  003BAA  0EFE               	movlw	-2
  3066  003BAC  50E3               	movf	plusw1,w,c
  3067  003BAE  6ED9               	movwf	fsr2l,c
  3068  003BB0  6ADA               	clrf	fsr2h,c
  3069  003BB2  0E03               	movlw	3
  3070  003BB4  D025               	goto	L16
  3071  003BB6                     l7643:
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;gemsecs.c: 95:        V.error = LINK_ERROR_CHECKSUM;
  3075  003BB6  0E05               	movlw	5
  3076  003BB8  D75A               	goto	L15
  3077  003BBA                     l7647:
  3078                           
  3079                           ;gemsecs.c: 104:   V.stream = H10[1].block.block.stream;
  3080  003BBA  0101               	movlb	1	; () banked
  3081  003BBC  5116               	movf	(_H10+22)& (0+255),w,b
  3082  003BBE  0B7F               	andlw	127
  3083  003BC0  0100               	movlb	0	; () banked
  3084  003BC2  6FD1               	movwf	(_V+72)& (0+255),b	;volatile
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;gemsecs.c: 105:   V.function = H10[1].block.block.function;
  3088  003BC4  C115  F0D2         	movff	_H10+21,_V+73	;volatile
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;gemsecs.c: 106:   UART1_Write(0x06);
  3092  003BC8  0E06               	movlw	6
  3093  003BCA  6EE6               	movwf	postinc1,c
  3094  003BCC  EC26  F02B         	call	_UART1_Write	;wreg free
  3095                           
  3096                           ; BSR set to: 57
  3097                           ;gemsecs.c: 107:   *r_link = LINK_STATE_DONE;
  3098                           ;stkvar	_r_link @ sp[(-1)+-1]
  3099  003BD0  0EFE               	movlw	-2
  3100  003BD2  50E3               	movf	plusw1,w,c
  3101  003BD4  6ED9               	movwf	fsr2l,c
  3102  003BD6  6ADA               	clrf	fsr2h,c
  3103  003BD8  0E04               	movlw	4
  3104  003BDA  D012               	goto	L16
  3105  003BDC                     l7655:
  3106                           
  3107                           ;gemsecs.c: 110:   *r_link = LINK_STATE_ERROR;
  3108                           ;stkvar	_r_link @ sp[(-1)+-1]
  3109  003BDC  0EFE               	movlw	-2
  3110  003BDE  50E3               	movf	plusw1,w,c
  3111  003BE0  6ED9               	movwf	fsr2l,c
  3112  003BE2  6ADA               	clrf	fsr2h,c
  3113  003BE4  0E06               	movlw	6
  3114  003BE6  6EDF               	movwf	indf2,c
  3115                           
  3116                           ;gemsecs.c: 111:   while ((uart1RxCount)) {
  3117  003BE8  D002               	goto	l7659
  3118  003BEA                     l7657:
  3119                           
  3120                           ;gemsecs.c: 112:    UART1_Read();
  3121  003BEA  EC45  F02B         	call	_UART1_Read	;wreg free
  3122  003BEE                     l7659:
  3123                           
  3124                           ;gemsecs.c: 111:   while ((uart1RxCount)) {
  3125  003BEE  5037               	movf	_uart1RxCount,w,c	;volatile
  3126  003BF0  B4D8               	btfsc	status,2,c
  3127  003BF2  D029               	goto	l7667
  3128  003BF4  D7FA               	goto	l7657
  3129  003BF6                     l7661:
  3130                           
  3131                           ;gemsecs.c: 119:   *r_link = LINK_STATE_IDLE;
  3132                           ;stkvar	_r_link @ sp[(-1)+-1]
  3133  003BF6  0EFE               	movlw	-2
  3134  003BF8  50E3               	movf	plusw1,w,c
  3135  003BFA  6ED9               	movwf	fsr2l,c
  3136  003BFC  6ADA               	clrf	fsr2h,c
  3137  003BFE  0E00               	movlw	0
  3138  003C00                     L16:
  3139  003C00  6EDF               	movwf	indf2,c
  3140                           
  3141                           ;gemsecs.c: 120:   break;
  3142  003C02  D021               	goto	l7667
  3143  003C04                     l7665:
  3144                           
  3145                           ;stkvar	_r_link @ sp[(-1)+-1]
  3146  003C04  0EFE               	movlw	-2
  3147  003C06  50E3               	movf	plusw1,w,c
  3148  003C08  6ED9               	movwf	fsr2l,c
  3149  003C0A  6ADA               	clrf	fsr2h,c
  3150  003C0C  50DF               	movf	indf2,w,c
  3151  003C0E  6E47               	movwf	btemp+10,c
  3152  003C10  6A48               	clrf	btemp+11,c
  3153                           
  3154                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3155                           ; Switch size 1, requested type "simple"
  3156                           ; Number of cases is 1, Range of values is 0 to 0
  3157                           ; switch strategies available:
  3158                           ; Name         Instructions Cycles
  3159                           ; simple_byte            4     3 (average)
  3160                           ;	Chosen strategy is simple_byte
  3161  003C12  5048               	movf	btemp+11,w,c
  3162  003C14  0A00               	xorlw	0	; case 0
  3163  003C16  A4D8               	btfss	status,2,c
  3164  003C18  D7EE               	goto	l7661
  3165                           
  3166                           ; Switch size 1, requested type "simple"
  3167                           ; Number of cases is 7, Range of values is 0 to 6
  3168                           ; switch strategies available:
  3169                           ; Name         Instructions Cycles
  3170                           ; simple_byte           22    12 (average)
  3171                           ;	Chosen strategy is simple_byte
  3172  003C1A  5047               	movf	btemp+10,w,c
  3173  003C1C  0A00               	xorlw	0	; case 0
  3174  003C1E  B4D8               	btfsc	status,2,c
  3175  003C20  D6DE               	goto	l7581
  3176  003C22  0A01               	xorlw	1	; case 1
  3177  003C24  B4D8               	btfsc	status,2,c
  3178  003C26  D6F6               	goto	l1504
  3179  003C28  0A03               	xorlw	3	; case 2
  3180  003C2A  B4D8               	btfsc	status,2,c
  3181  003C2C  D717               	goto	l7601
  3182  003C2E  0A01               	xorlw	1	; case 3
  3183  003C30  B4D8               	btfsc	status,2,c
  3184  003C32  D7C3               	goto	l7647
  3185  003C34  0A07               	xorlw	7	; case 4
  3186  003C36  B4D8               	btfsc	status,2,c
  3187  003C38  D7DE               	goto	l7661
  3188  003C3A  0A01               	xorlw	1	; case 5
  3189  003C3C  B4D8               	btfsc	status,2,c
  3190  003C3E  D7CE               	goto	l7655
  3191  003C40  0A03               	xorlw	3	; case 6
  3192  003C42  A4D8               	btfss	status,2,c
  3193  003C44  D7D8               	goto	l7661
  3194  003C46                     l7667:
  3195                           
  3196                           ;gemsecs.c: 123:  return *r_link;
  3197                           ;stkvar	_r_link @ sp[(-1)+-1]
  3198  003C46  0EFE               	movlw	-2
  3199  003C48  50E3               	movf	plusw1,w,c
  3200  003C4A  6ED9               	movwf	fsr2l,c
  3201  003C4C  6ADA               	clrf	fsr2h,c
  3202  003C4E  50DF               	movf	indf2,w,c
  3203  003C50  6E3D               	movwf	btemp,c
  3204                           
  3205                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3206  003C52  52E5               	movf	postdec1,f,c
  3207  003C54  52E5               	movf	postdec1,f,c
  3208  003C56  0012               	return		;funcret
  3209  003C58                     __end_of_r_protocol:
  3210                           	opt callstack 0
  3211                           
  3212 ;; *************** function _secs_send *****************
  3213 ;; Defined at:
  3214 ;;		line 206 in file "gemsecs.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  byte_block      2  [STACK] PTR unsigned char 
  3217 ;;		 -> H53(112), H24(27), H18(21), H14(17), 
  3218 ;;		 -> H13(16), H12(15), H10(65), 
  3219 ;;  length          1  [STACK] unsigned char 
  3220 ;;  fake            1  [STACK] _Bool 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  k               2  [STACK] PTR unsigned char 
  3223 ;;		 -> H53(112), H24(27), H18(21), H14(17), 
  3224 ;;		 -> H13(16), H12(15), H10(65), 
  3225 ;;  checksum        2  [STACK] unsigned short 
  3226 ;;  i               1  [STACK] unsigned char 
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1  [STACK] _Bool 
  3229 ;; Registers used:
  3230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3240 ;;Total ram usage:        0 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:    4
  3243 ;; This function calls:
  3244 ;;		_UART1_Write
  3245 ;;		_UART1_is_tx_ready
  3246 ;;		_UART1_put_buffer
  3247 ;;		_block_checksum
  3248 ;; This function is called by:
  3249 ;;		_main
  3250 ;;		_r_protocol
  3251 ;;		_t_protocol
  3252 ;; This function uses a reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text5
  3256  0042E4                     __ptext5:
  3257                           	opt callstack 0
  3258  0042E4                     _secs_send:
  3259                           	opt callstack 0
  3260                           
  3261                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3262  0042E4  0E05               	movlw	5
  3263  0042E6  26E1               	addwf	fsr1l,f,c
  3264  0042E8  0E00               	movlw	0
  3265  0042EA  22E2               	addwfc	fsr1h,f,c
  3266                           
  3267                           ;gemsecs.c: 206: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake);gemsec
      +                          s.c: 207: {;gemsecs.c: 208:  uint8_t i, *k;;gemsecs.c: 209:  uint16_t checksum;;gemsecs.
      +                          c: 211:  k = (uint8_t *) byte_block;
  3268                           ;stkvar	_byte_block @ sp[(-5)+-2]
  3269                           
  3270                           ;incstack = 0
  3271  0042EC  0EF9               	movlw	-7
  3272  0042EE  006F FF8C  F047    	movff	plusw1,btemp+10
  3273  0042F4  0EFA               	movlw	-6
  3274  0042F6  006F FF8C  F048    	movff	plusw1,btemp+11
  3275                           
  3276                           ;stkvar	_k @ sp[(-5)+0]
  3277  0042FC  0EFC               	movlw	-4
  3278  0042FE  0060  F123  FFE3   	movff	btemp+11,plusw1
  3279  004304  0EFB               	movlw	-5
  3280  004306  0060  F11F  FFE3   	movff	btemp+10,plusw1
  3281                           
  3282                           ;gemsecs.c: 213:  V.error = LINK_ERROR_NONE;
  3283  00430C  0100               	movlb	0	; () banked
  3284  00430E  6BD3               	clrf	(_V+74)& (0+255),b	;volatile
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;gemsecs.c: 214:  if ((length - 3) != k[length - 1]) {
  3288                           ;stkvar	_length @ sp[(-5)+-3]
  3289  004310  0EF8               	movlw	-8
  3290  004312  50E3               	movf	plusw1,w,c
  3291  004314  6E47               	movwf	btemp+10,c
  3292  004316  6A48               	clrf	btemp+11,c
  3293                           
  3294                           ;stkvar	_k @ sp[(-5)+0]
  3295  004318  0EFB               	movlw	-5
  3296  00431A  50E3               	movf	plusw1,w,c
  3297  00431C  2647               	addwf	btemp+10,f,c
  3298  00431E  0EFC               	movlw	-4
  3299  004320  50E3               	movf	plusw1,w,c
  3300  004322  2248               	addwfc	btemp+11,f,c
  3301  004324  0EFF               	movlw	255
  3302  004326  2447               	addwf	btemp+10,w,c
  3303  004328  6ED9               	movwf	fsr2l,c
  3304  00432A  0EFF               	movlw	255
  3305  00432C  2048               	addwfc	btemp+11,w,c
  3306  00432E  6EDA               	movwf	fsr2h,c
  3307  004330  50DF               	movf	indf2,w,c
  3308  004332  6E47               	movwf	btemp+10,c
  3309  004334  6A48               	clrf	btemp+11,c
  3310  004336  0EFD               	movlw	253
  3311  004338  6E45               	movwf	btemp+8,c
  3312  00433A  0EFF               	movlw	255
  3313  00433C  6E46               	movwf	btemp+9,c
  3314                           
  3315                           ;stkvar	_length @ sp[(-5)+-3]
  3316  00433E  0EF8               	movlw	-8
  3317  004340  50E3               	movf	plusw1,w,c
  3318  004342  6E43               	movwf	btemp+6,c
  3319  004344  6A44               	clrf	btemp+7,c
  3320  004346  5045               	movf	btemp+8,w,c
  3321  004348  2643               	addwf	btemp+6,f,c
  3322  00434A  5046               	movf	btemp+9,w,c
  3323  00434C  2244               	addwfc	btemp+7,f,c
  3324  00434E  5047               	movf	btemp+10,w,c
  3325  004350  1843               	xorwf	btemp+6,w,c
  3326  004352  E104               	bnz	u4670
  3327  004354  5048               	movf	btemp+11,w,c
  3328  004356  1844               	xorwf	btemp+7,w,c
  3329  004358  B4D8               	btfsc	status,2,c
  3330  00435A  D003               	goto	l7451
  3331  00435C                     u4670:
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;gemsecs.c: 215:   V.error = LINK_ERROR_SEND;
  3335  00435C  0E08               	movlw	8
  3336  00435E  6FD3               	movwf	(_V+74)& (0+255),b	;volatile
  3337  004360  D098               	goto	l1558
  3338  004362                     l7451:
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;gemsecs.c: 224:  checksum = block_checksum(&k[2], length - 3);
  3342  004362  0EFD               	movlw	253
  3343  004364  6E47               	movwf	btemp+10,c
  3344  004366  0EFF               	movlw	255
  3345  004368  6E48               	movwf	btemp+11,c
  3346                           
  3347                           ;stkvar	_length @ sp[(-5)+-3]
  3348  00436A  0EF8               	movlw	-8
  3349  00436C  50E3               	movf	plusw1,w,c
  3350  00436E  6E45               	movwf	btemp+8,c
  3351  004370  6A46               	clrf	btemp+9,c
  3352  004372  5047               	movf	btemp+10,w,c
  3353  004374  2645               	addwf	btemp+8,f,c
  3354  004376  5048               	movf	btemp+11,w,c
  3355  004378  2246               	addwfc	btemp+9,f,c
  3356  00437A  0060  F117  FFE6   	movff	btemp+8,postinc1
  3357  004380  0060  F11B  FFE6   	movff	btemp+9,postinc1
  3358                           
  3359                           ;stkvar	_k @ sp[(-7)+0]
  3360  004386  0EF9               	movlw	-7
  3361  004388  50E3               	movf	plusw1,w,c
  3362  00438A  0F02               	addlw	2
  3363  00438C  6E47               	movwf	btemp+10,c
  3364  00438E  0EFA               	movlw	-6
  3365  004390  006F FF8C  F048    	movff	plusw1,btemp+11
  3366  004396  0E00               	movlw	0
  3367  004398  2248               	addwfc	btemp+11,f,c
  3368  00439A  0060  F11F  FFE6   	movff	btemp+10,postinc1
  3369  0043A0  0060  F123  FFE6   	movff	btemp+11,postinc1
  3370  0043A6  EC56  F024         	call	_block_checksum	;wreg free
  3371                           
  3372                           ;stkvar	_checksum @ sp[(-5)+2]
  3373  0043AA  0EFD               	movlw	-3
  3374  0043AC  0060  F0F7  FFE3   	movff	btemp,plusw1
  3375  0043B2  0EFE               	movlw	-2
  3376  0043B4  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  3377                           
  3378                           ;gemsecs.c: 225:  k[0] = checksum & 0xff;
  3379                           ;stkvar	_checksum @ sp[(-5)+2]
  3380                           ;stkvar	_k @ sp[(-5)+0]
  3381  0043BA  0EFB               	movlw	-5
  3382  0043BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  3383  0043C2  0EFC               	movlw	-4
  3384  0043C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  3385  0043CA  0EFD               	movlw	-3
  3386  0043CC  006F FF8F FFDF     	movff	plusw1,indf2
  3387                           
  3388                           ;gemsecs.c: 226:  k[1] = (checksum >> 8)&0xff;
  3389                           ;stkvar	_checksum @ sp[(-5)+2]
  3390  0043D2  0EFE               	movlw	254
  3391  0043D4  24E1               	addwf	fsr1l,w,c
  3392  0043D6  6ED9               	movwf	fsr2l,c
  3393  0043D8  0EFF               	movlw	255
  3394  0043DA  20E2               	addwfc	fsr1h,w,c
  3395  0043DC  6EDA               	movwf	fsr2h,c
  3396                           
  3397                           ;stkvar	_k @ sp[(-5)+0]
  3398  0043DE  0EFB               	movlw	-5
  3399  0043E0  006F FF8C  F047    	movff	plusw1,btemp+10
  3400  0043E6  0EFC               	movlw	-4
  3401  0043E8  006F FF8C  F048    	movff	plusw1,btemp+11
  3402  0043EE  0E01               	movlw	1
  3403  0043F0  2447               	addwf	btemp+10,w,c
  3404  0043F2  6EE9               	movwf	fsr0l,c
  3405  0043F4  0E00               	movlw	0
  3406  0043F6  2048               	addwfc	btemp+11,w,c
  3407  0043F8  6EEA               	movwf	fsr0h,c
  3408  0043FA  006F FF7F FFEF     	movff	indf2,indf0
  3409                           
  3410                           ;gemsecs.c: 227:  V.t_checksum = checksum;
  3411                           ;stkvar	_checksum @ sp[(-5)+2]
  3412  004400  0EFD               	movlw	-3
  3413  004402  006F FF8C  F0D7    	movff	plusw1,_V+78	;volatile
  3414  004408  0EFE               	movlw	-2
  3415  00440A  006F FF8C  F0D8    	movff	plusw1,_V+79	;volatile
  3416  004410                     l7459:
  3417  004410  EC3D  F02F         	call	_UART1_is_tx_ready	;wreg free
  3418  004414  0E3F               	movlw	63
  3419  004416  643D               	cpfsgt	btemp,c
  3420  004418  D7FB               	goto	l7459
  3421                           
  3422                           ;gemsecs.c: 230:  for (i = length; i > 0; i--) {
  3423                           ;stkvar	_length @ sp[(-5)+-3]
  3424                           ;stkvar	_i @ sp[(-5)+4]
  3425  00441A  0EF8               	movlw	-8
  3426  00441C  006F FF8C  F03D    	movff	plusw1,btemp
  3427  004422  0EFF               	movlw	-1
  3428  004424  0060  F0F7  FFE3   	movff	btemp,plusw1
  3429  00442A                     l7463:
  3430                           
  3431                           ;stkvar	_i @ sp[(-5)+4]
  3432  00442A  0EFF               	movlw	-1
  3433  00442C  50E3               	movf	plusw1,w,c
  3434  00442E  B4D8               	btfsc	status,2,c
  3435  004430  D030               	goto	l1558
  3436                           
  3437                           ;gemsecs.c: 231:   if (fake) {
  3438                           ;stkvar	_fake @ sp[(-5)+-4]
  3439  004432  0EF7               	movlw	-9
  3440  004434  50E3               	movf	plusw1,w,c
  3441  004436  B4D8               	btfsc	status,2,c
  3442  004438  D015               	goto	l7471
  3443                           
  3444                           ;gemsecs.c: 232:    UART1_put_buffer(k[i - 1]);
  3445                           ;stkvar	_i @ sp[(-5)+4]
  3446  00443A  0EFF               	movlw	-1
  3447  00443C  50E3               	movf	plusw1,w,c
  3448  00443E  6E47               	movwf	btemp+10,c
  3449  004440  6A48               	clrf	btemp+11,c
  3450                           
  3451                           ;stkvar	_k @ sp[(-5)+0]
  3452  004442  0EFB               	movlw	-5
  3453  004444  50E3               	movf	plusw1,w,c
  3454  004446  2647               	addwf	btemp+10,f,c
  3455  004448  0EFC               	movlw	-4
  3456  00444A  50E3               	movf	plusw1,w,c
  3457  00444C  2248               	addwfc	btemp+11,f,c
  3458  00444E  0EFF               	movlw	255
  3459  004450  2447               	addwf	btemp+10,w,c
  3460  004452  6ED9               	movwf	fsr2l,c
  3461  004454  0EFF               	movlw	255
  3462  004456  2048               	addwfc	btemp+11,w,c
  3463  004458  6EDA               	movwf	fsr2h,c
  3464  00445A  50DF               	movf	indf2,w,c
  3465  00445C  6EE6               	movwf	postinc1,c
  3466  00445E  EC2B  F02C         	call	_UART1_put_buffer	;wreg free
  3467                           
  3468                           ;gemsecs.c: 233:   } else {
  3469  004462  D014               	goto	l7473
  3470  004464                     l7471:
  3471                           
  3472                           ;gemsecs.c: 234:    UART1_Write(k[i - 1]);
  3473                           ;stkvar	_i @ sp[(-5)+4]
  3474  004464  0EFF               	movlw	-1
  3475  004466  50E3               	movf	plusw1,w,c
  3476  004468  6E47               	movwf	btemp+10,c
  3477  00446A  6A48               	clrf	btemp+11,c
  3478                           
  3479                           ;stkvar	_k @ sp[(-5)+0]
  3480  00446C  0EFB               	movlw	-5
  3481  00446E  50E3               	movf	plusw1,w,c
  3482  004470  2647               	addwf	btemp+10,f,c
  3483  004472  0EFC               	movlw	-4
  3484  004474  50E3               	movf	plusw1,w,c
  3485  004476  2248               	addwfc	btemp+11,f,c
  3486  004478  0EFF               	movlw	255
  3487  00447A  2447               	addwf	btemp+10,w,c
  3488  00447C  6ED9               	movwf	fsr2l,c
  3489  00447E  0EFF               	movlw	255
  3490  004480  2048               	addwfc	btemp+11,w,c
  3491  004482  6EDA               	movwf	fsr2h,c
  3492  004484  50DF               	movf	indf2,w,c
  3493  004486  6EE6               	movwf	postinc1,c
  3494  004488  EC26  F02B         	call	_UART1_Write	;wreg free
  3495  00448C                     l7473:
  3496                           
  3497                           ; BSR set to: 57
  3498                           ;gemsecs.c: 236:  }
  3499                           ;stkvar	_i @ sp[(-5)+4]
  3500  00448C  0EFF               	movlw	-1
  3501  00448E  06E3               	decf	plusw1,f,c
  3502  004490  D7CC               	goto	l7463
  3503  004492                     l1558:
  3504                           
  3505                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  3506  004492  0EF7               	movlw	247
  3507  004494  26E1               	addwf	fsr1l,f,c
  3508  004496  0EFF               	movlw	255
  3509  004498  22E2               	addwfc	fsr1h,f,c
  3510  00449A  0012               	return		;funcret
  3511  00449C                     __end_of_secs_send:
  3512                           	opt callstack 0
  3513                           
  3514 ;; *************** function _block_checksum *****************
  3515 ;; Defined at:
  3516 ;;		line 16 in file "gemsecs.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;  byte_block      2  [STACK] PTR unsigned char 
  3519 ;;		 -> H53(112), H24(27), H18(21), H14(17), 
  3520 ;;		 -> H13(16), H12(15), H10.block(10), H10(65), 
  3521 ;;  byte_count      2  [STACK] unsigned short 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  i               2  [STACK] unsigned short 
  3524 ;;  sum             2  [STACK] unsigned short 
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  2  [STACK] unsigned short 
  3527 ;; Registers used:
  3528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  3529 ;; Tracked objects:
  3530 ;;		On entry : 3F/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3538 ;;Total ram usage:        0 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:    3
  3541 ;; This function calls:
  3542 ;;		Nothing
  3543 ;; This function is called by:
  3544 ;;		_main
  3545 ;;		_secs_send
  3546 ;; This function uses a reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text6
  3550  0048AC                     __ptext6:
  3551                           	opt callstack 0
  3552  0048AC                     _block_checksum:
  3553                           	opt callstack 0
  3554                           
  3555                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3556  0048AC  52E6               	movf	postinc1,f,c
  3557  0048AE  52E6               	movf	postinc1,f,c
  3558  0048B0  52E6               	movf	postinc1,f,c
  3559  0048B2  52E6               	movf	postinc1,f,c
  3560                           
  3561                           ;gemsecs.c: 16: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 17: {;gemsecs.c: 18:  uint16_t sum = 0, i;
  3562                           ;stkvar	_sum @ sp[(-4)+2]
  3563                           
  3564                           ;incstack = 0
  3565  0048B4  0EFE               	movlw	-2
  3566  0048B6  6AE3               	clrf	plusw1,c
  3567  0048B8  0EFF               	movlw	-1
  3568  0048BA  6AE3               	clrf	plusw1,c
  3569                           
  3570                           ;gemsecs.c: 20:  for (i = 0; i < byte_count; i++) {
  3571                           ;stkvar	_i @ sp[(-4)+0]
  3572  0048BC  0EFC               	movlw	-4
  3573  0048BE  6AE3               	clrf	plusw1,c
  3574  0048C0  0EFD               	movlw	-3
  3575  0048C2  6AE3               	clrf	plusw1,c
  3576  0048C4  D039               	goto	l7399
  3577  0048C6                     l7395:
  3578                           
  3579                           ;gemsecs.c: 21:   sum += byte_block[i];
  3580                           ;stkvar	_i @ sp[(-4)+0]
  3581  0048C6  0EFC               	movlw	-4
  3582  0048C8  006F FF8C  F047    	movff	plusw1,btemp+10
  3583  0048CE  0EFD               	movlw	-3
  3584  0048D0  006F FF8C  F048    	movff	plusw1,btemp+11
  3585                           
  3586                           ;stkvar	_byte_block @ sp[(-4)+-2]
  3587  0048D6  0EFA               	movlw	-6
  3588  0048D8  006F FF8C  F045    	movff	plusw1,btemp+8
  3589  0048DE  0EFB               	movlw	-5
  3590  0048E0  006F FF8C  F046    	movff	plusw1,btemp+9
  3591  0048E6  5047               	movf	btemp+10,w,c
  3592  0048E8  2445               	addwf	btemp+8,w,c
  3593  0048EA  6ED9               	movwf	fsr2l,c
  3594  0048EC  5048               	movf	btemp+11,w,c
  3595  0048EE  2046               	addwfc	btemp+9,w,c
  3596  0048F0  6EDA               	movwf	fsr2h,c
  3597  0048F2  50DF               	movf	indf2,w,c
  3598  0048F4  6E48               	movwf	btemp+11,c
  3599                           
  3600                           ;stkvar	_sum @ sp[(-4)+2]
  3601  0048F6  0EFE               	movlw	-2
  3602  0048F8  50E3               	movf	plusw1,w,c
  3603  0048FA  2448               	addwf	btemp+11,w,c
  3604  0048FC  6E3D               	movwf	btemp,c
  3605  0048FE  0EFE               	movlw	-2
  3606  004900  0060  F0F7  FFE3   	movff	btemp,plusw1
  3607  004906  6A3D               	clrf	btemp,c
  3608  004908  0EFF               	movlw	-1
  3609  00490A  50E3               	movf	plusw1,w,c
  3610  00490C  223D               	addwfc	btemp,f,c
  3611  00490E  0EFF               	movlw	-1
  3612  004910  0060  F0F7  FFE3   	movff	btemp,plusw1
  3613                           
  3614                           ;gemsecs.c: 22:  }
  3615                           ;stkvar	_i @ sp[(-4)+0]
  3616  004916  0EFC               	movlw	-4
  3617  004918  50E3               	movf	plusw1,w,c
  3618  00491A  0F01               	addlw	1
  3619  00491C  6E3D               	movwf	btemp,c
  3620  00491E  0EFC               	movlw	-4
  3621  004920  0060  F0F7  FFE3   	movff	btemp,plusw1
  3622  004926  6A3D               	clrf	btemp,c
  3623  004928  0EFD               	movlw	-3
  3624  00492A  50E3               	movf	plusw1,w,c
  3625  00492C  203D               	addwfc	btemp,w,c
  3626  00492E  6E3D               	movwf	btemp,c
  3627  004930  0EFD               	movlw	-3
  3628  004932  0060  F0F7  FFE3   	movff	btemp,plusw1
  3629  004938                     l7399:
  3630                           
  3631                           ;stkvar	_byte_count @ sp[(-4)+-4]
  3632  004938  0EF8               	movlw	-8
  3633  00493A  006F FF8C  F047    	movff	plusw1,btemp+10
  3634  004940  0EF9               	movlw	-7
  3635  004942  006F FF8C  F048    	movff	plusw1,btemp+11
  3636                           
  3637                           ;stkvar	_i @ sp[(-4)+0]
  3638  004948  0EFC               	movlw	-4
  3639  00494A  006F FF8C  F045    	movff	plusw1,btemp+8
  3640  004950  0EFD               	movlw	-3
  3641  004952  006F FF8C  F046    	movff	plusw1,btemp+9
  3642  004958  5047               	movf	btemp+10,w,c
  3643  00495A  5C45               	subwf	btemp+8,w,c
  3644  00495C  5048               	movf	btemp+11,w,c
  3645  00495E  5846               	subwfb	btemp+9,w,c
  3646  004960  A0D8               	btfss	status,0,c
  3647  004962  D7B1               	goto	l7395
  3648                           
  3649                           ;gemsecs.c: 23:  return sum;
  3650                           ;stkvar	_sum @ sp[(-4)+2]
  3651  004964  0EFE               	movlw	-2
  3652  004966  006F FF8C  F03D    	movff	plusw1,btemp
  3653  00496C  0EFF               	movlw	-1
  3654  00496E  006F FF8C  F03E    	movff	plusw1,btemp+1
  3655                           
  3656                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  3657  004974  0EF8               	movlw	248
  3658  004976  26E1               	addwf	fsr1l,f,c
  3659  004978  0EFF               	movlw	255
  3660  00497A  22E2               	addwfc	fsr1h,f,c
  3661  00497C  0012               	return		;funcret
  3662  00497E                     __end_of_block_checksum:
  3663                           	opt callstack 0
  3664                           
  3665 ;; *************** function _UART1_put_buffer *****************
  3666 ;; Defined at:
  3667 ;;		line 250 in file "mcc_generated_files/uart1.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;  bufData         1  [STACK] unsigned char 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1  [STACK] void 
  3674 ;; Registers used:
  3675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 3F/39
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3685 ;;Total ram usage:        0 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; Hardware stack levels required when called:    3
  3688 ;; This function calls:
  3689 ;;		Nothing
  3690 ;; This function is called by:
  3691 ;;		_main
  3692 ;;		_t_protocol
  3693 ;;		_secs_send
  3694 ;; This function uses a reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text7
  3698  005856                     __ptext7:
  3699                           	opt callstack 0
  3700  005856                     _UART1_put_buffer:
  3701                           	opt callstack 25
  3702                           
  3703                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  3704                           
  3705                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3706                           ;incstack = 0
  3707  005856  0139               	movlb	57	; () banked
  3708  005858  9793               	bcf	147,3,b	;volatile
  3709                           
  3710                           ; BSR set to: 57
  3711                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  3712                           ;stkvar	_bufData @ sp[(0)+-1]
  3713  00585A  0EA1               	movlw	low _uart1RxBuffer
  3714  00585C  2439               	addwf	_uart1RxHead,w,c	;volatile
  3715  00585E  6ED9               	movwf	fsr2l,c
  3716  005860  6ADA               	clrf	fsr2h,c
  3717  005862  0E01               	movlw	high _uart1RxBuffer
  3718  005864  22DA               	addwfc	fsr2h,f,c
  3719  005866  0EFF               	movlw	-1
  3720  005868  006F FF8F FFDF     	movff	plusw1,indf2
  3721                           
  3722                           ; BSR set to: 57
  3723  00586E  2A39               	incf	_uart1RxHead,f,c	;volatile
  3724                           
  3725                           ; BSR set to: 57
  3726                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  3727  005870  0E3F               	movlw	63
  3728  005872  6439               	cpfsgt	_uart1RxHead,c
  3729  005874  D001               	goto	l5507
  3730                           
  3731                           ; BSR set to: 57
  3732                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  3733  005876  6A39               	clrf	_uart1RxHead,c	;volatile
  3734  005878                     l5507:
  3735                           
  3736                           ; BSR set to: 57
  3737                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  3738  005878  2A37               	incf	_uart1RxCount,f,c	;volatile
  3739                           
  3740                           ; BSR set to: 57
  3741                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  3742  00587A  8793               	bsf	147,3,b	;volatile
  3743                           
  3744                           ; BSR set to: 57
  3745                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  3746  00587C  52E5               	movf	postdec1,f,c
  3747  00587E  0012               	return		;funcret
  3748  005880                     __end_of_UART1_put_buffer:
  3749                           	opt callstack 0
  3750                           
  3751 ;; *************** function _UART1_is_tx_ready *****************
  3752 ;; Defined at:
  3753 ;;		line 151 in file "mcc_generated_files/uart1.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;		None
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;		None
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1  [STACK] unsigned char 
  3760 ;; Registers used:
  3761 ;;		btemp
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3771 ;;Total ram usage:        0 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; Hardware stack levels required when called:    3
  3774 ;; This function calls:
  3775 ;;		Nothing
  3776 ;; This function is called by:
  3777 ;;		_secs_send
  3778 ;; This function uses a reentrant model
  3779 ;;
  3780                           
  3781                           	psect	text8
  3782  005E7A                     __ptext8:
  3783                           	opt callstack 0
  3784  005E7A                     _UART1_is_tx_ready:
  3785                           	opt callstack 25
  3786                           
  3787                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  3788                           
  3789                           ; BSR set to: 57
  3790                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3791                           ;incstack = 0
  3792  005E7A  0060  F0E8  F03D   	movff	_uart1TxBufferRemaining,btemp	;volatile
  3793                           
  3794                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  3795  005E80  0012               	return		;funcret
  3796  005E82                     __end_of_UART1_is_tx_ready:
  3797                           	opt callstack 0
  3798                           
  3799 ;; *************** function _UART1_Write *****************
  3800 ;; Defined at:
  3801 ;;		line 179 in file "mcc_generated_files/uart1.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  txData          1  [STACK] unsigned char 
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;		None
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  1  [STACK] void 
  3808 ;; Registers used:
  3809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 3F/39
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3819 ;;Total ram usage:        0 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; Hardware stack levels required when called:    3
  3822 ;; This function calls:
  3823 ;;		Nothing
  3824 ;; This function is called by:
  3825 ;;		_main
  3826 ;;		_r_protocol
  3827 ;;		_t_protocol
  3828 ;;		_secs_send
  3829 ;; This function uses a reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text9
  3833  00564C                     __ptext9:
  3834                           	opt callstack 0
  3835  00564C                     _UART1_Write:
  3836                           	opt callstack 25
  3837                           
  3838                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  3839                           
  3840                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  3841                           
  3842                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3843                           ;incstack = 0
  3844  00564C  503A               	movf	_uart1TxBufferRemaining,w,c	;volatile
  3845  00564E  B4D8               	btfsc	status,2,c
  3846  005650  D7FD               	goto	_UART1_Write
  3847                           
  3848                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  3849  005652  0139               	movlb	57	; () banked
  3850  005654  B993               	btfsc	147,4,b	;volatile
  3851  005656  D005               	goto	l579
  3852                           
  3853                           ; BSR set to: 57
  3854                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  3855                           ;stkvar	_txData @ sp[(0)+-1]
  3856  005658  0EFF               	movlw	-1
  3857  00565A  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  3858                           
  3859                           ;mcc_generated_files/uart1.c: 186:  } else {
  3860  005660  D011               	goto	l5495
  3861  005662                     l579:
  3862                           
  3863                           ; BSR set to: 57
  3864                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  3865  005662  9993               	bcf	147,4,b	;volatile
  3866                           
  3867                           ; BSR set to: 57
  3868                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  3869                           ;stkvar	_txData @ sp[(0)+-1]
  3870  005664  0E80               	movlw	low _uart1TxBuffer
  3871  005666  243C               	addwf	_uart1TxHead,w,c	;volatile
  3872  005668  6ED9               	movwf	fsr2l,c
  3873  00566A  6ADA               	clrf	fsr2h,c
  3874  00566C  0E02               	movlw	high _uart1TxBuffer
  3875  00566E  22DA               	addwfc	fsr2h,f,c
  3876  005670  0EFF               	movlw	-1
  3877  005672  006F FF8F FFDF     	movff	plusw1,indf2
  3878                           
  3879                           ; BSR set to: 57
  3880  005678  2A3C               	incf	_uart1TxHead,f,c	;volatile
  3881                           
  3882                           ; BSR set to: 57
  3883                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  3884  00567A  0E3F               	movlw	63
  3885  00567C  643C               	cpfsgt	_uart1TxHead,c
  3886  00567E  D001               	goto	l5493
  3887                           
  3888                           ; BSR set to: 57
  3889                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  3890  005680  6A3C               	clrf	_uart1TxHead,c	;volatile
  3891  005682                     l5493:
  3892                           
  3893                           ; BSR set to: 57
  3894                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  3895  005682  063A               	decf	_uart1TxBufferRemaining,f,c	;volatile
  3896  005684                     l5495:
  3897                           
  3898                           ; BSR set to: 57
  3899                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  3900  005684  8993               	bsf	147,4,b	;volatile
  3901                           
  3902                           ; BSR set to: 57
  3903                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  3904  005686  52E5               	movf	postdec1,f,c
  3905  005688  0012               	return		;funcret
  3906  00568A                     __end_of_UART1_Write:
  3907                           	opt callstack 0
  3908                           
  3909 ;; *************** function _run_checksum *****************
  3910 ;; Defined at:
  3911 ;;		line 29 in file "gemsecs.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  byte_block      1  [STACK] unsigned char 
  3914 ;;  clear           1  [STACK] _Bool 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;		None
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  2  [STACK] unsigned short 
  3919 ;; Registers used:
  3920 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  3921 ;; Tracked objects:
  3922 ;;		On entry : 6/39
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3930 ;;Total ram usage:        0 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; Hardware stack levels required when called:    3
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		_r_protocol
  3937 ;; This function uses a reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text10
  3941  0058D6                     __ptext10:
  3942                           	opt callstack 0
  3943  0058D6                     _run_checksum:
  3944                           	opt callstack 26
  3945                           
  3946                           ;gemsecs.c: 29: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 30: {;
      +                          gemsecs.c: 31:  static uint16_t sum = 0;;gemsecs.c: 33:  if (clear)
  3947                           ;stkvar	_clear @ sp[(0)+-2]
  3948                           
  3949                           ; BSR set to: 57
  3950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3951                           ;incstack = 0
  3952  0058D6  0EFE               	movlw	-2
  3953  0058D8  50E3               	movf	plusw1,w,c
  3954  0058DA  B4D8               	btfsc	status,2,c
  3955  0058DC  D002               	goto	l6043
  3956                           
  3957                           ;gemsecs.c: 34:   sum = 0;
  3958  0058DE  6A2A               	clrf	run_checksum@sum,c
  3959  0058E0  6A2B               	clrf	run_checksum@sum+1,c
  3960  0058E2                     l6043:
  3961                           
  3962                           ;gemsecs.c: 36:  sum += byte_block;
  3963                           ;stkvar	_byte_block @ sp[(0)+-1]
  3964  0058E2  0EFF               	movlw	-1
  3965  0058E4  50E3               	movf	plusw1,w,c
  3966  0058E6  262A               	addwf	run_checksum@sum,f,c
  3967  0058E8  0E00               	movlw	0
  3968  0058EA  222B               	addwfc	run_checksum@sum+1,f,c
  3969                           
  3970                           ;gemsecs.c: 37:  return sum;
  3971  0058EC  0060  F0A8  F03D   	movff	run_checksum@sum,btemp
  3972  0058F2  0060  F0AC  F03E   	movff	run_checksum@sum+1,btemp+1
  3973                           
  3974                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  3975  0058F8  52E5               	movf	postdec1,f,c
  3976  0058FA  52E5               	movf	postdec1,f,c
  3977  0058FC  0012               	return		;funcret
  3978  0058FE                     __end_of_run_checksum:
  3979                           	opt callstack 0
  3980                           
  3981 ;; *************** function _WaitMs *****************
  3982 ;; Defined at:
  3983 ;;		line 31 in file "timers.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  numMilliseco    2  [STACK] unsigned short 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;		None
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1  [STACK] void 
  3990 ;; Registers used:
  3991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4001 ;;Total ram usage:        0 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:    4
  4004 ;; This function calls:
  4005 ;;		_StartTimer
  4006 ;;		_TimerDone
  4007 ;; This function is called by:
  4008 ;;		_main
  4009 ;;		_r_protocol
  4010 ;;		_t_protocol
  4011 ;; This function uses a reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text11
  4015  005880                     __ptext11:
  4016                           	opt callstack 0
  4017  005880                     _WaitMs:
  4018                           	opt callstack 25
  4019                           
  4020                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  4021                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  4022                           
  4023                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4024                           ;incstack = 0
  4025  005880  0EFE               	movlw	-2
  4026  005882  006F FF8F FFE6     	movff	plusw1,postinc1
  4027  005888  006F FF8F FFE6     	movff	plusw1,postinc1
  4028  00588E  0E00               	movlw	0
  4029  005890  6EE6               	movwf	postinc1,c
  4030  005892  EC83  F02B         	call	_StartTimer	;wreg free
  4031  005896                     l5999:
  4032                           
  4033                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  4034  005896  0E00               	movlw	0
  4035  005898  6EE6               	movwf	postinc1,c
  4036  00589A  ECE7  F02D         	call	_TimerDone	;wreg free
  4037  00589E  503D               	movf	btemp,w,c
  4038  0058A0  B4D8               	btfsc	status,2,c
  4039  0058A2  D7F9               	goto	l5999
  4040                           
  4041                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  4042  0058A4  52E5               	movf	postdec1,f,c
  4043  0058A6  52E5               	movf	postdec1,f,c
  4044  0058A8  0012               	return		;funcret
  4045  0058AA                     __end_of_WaitMs:
  4046                           	opt callstack 0
  4047                           
  4048 ;; *************** function _TimerDone *****************
  4049 ;; Defined at:
  4050 ;;		line 20 in file "timers.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  timer           1  [STACK] unsigned char 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;		None
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  1  [STACK] _Bool 
  4057 ;; Registers used:
  4058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4068 ;;Total ram usage:        0 bytes
  4069 ;; Hardware stack levels used:    1
  4070 ;; Hardware stack levels required when called:    3
  4071 ;; This function calls:
  4072 ;;		Nothing
  4073 ;; This function is called by:
  4074 ;;		_r_protocol
  4075 ;;		_t_protocol
  4076 ;;		_WaitMs
  4077 ;; This function uses a reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text12
  4081  005BCE                     __ptext12:
  4082                           	opt callstack 0
  4083  005BCE                     _TimerDone:
  4084                           	opt callstack 25
  4085                           
  4086                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  4087                           ;stkvar	_timer @ sp[(0)+-1]
  4088                           
  4089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4090                           ;incstack = 0
  4091  005BCE  0EFF               	movlw	-1
  4092  005BD0  50E3               	movf	plusw1,w,c
  4093  005BD2  0D02               	mullw	2
  4094  005BD4  50F3               	movf	prodl,w,c
  4095  005BD6  0F79               	addlw	low _tickCount
  4096  005BD8  6ED9               	movwf	fsr2l,c
  4097  005BDA  6ADA               	clrf	fsr2h,c
  4098  005BDC  50DE               	movf	postinc2,w,c
  4099  005BDE  10DE               	iorwf	postinc2,w,c
  4100  005BE0  A4D8               	btfss	status,2,c
  4101  005BE2  D002               	goto	l5567
  4102                           
  4103                           ;timers.c: 23:   return 1;
  4104  005BE4  0E01               	movlw	1
  4105  005BE6  D001               	goto	L17
  4106  005BE8                     l5567:
  4107                           
  4108                           ;timers.c: 25:  return 0;
  4109  005BE8  0E00               	movlw	0
  4110  005BEA                     L17:
  4111  005BEA  6E3D               	movwf	btemp,c
  4112                           
  4113                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4114  005BEC  52E5               	movf	postdec1,f,c
  4115  005BEE  0012               	return		;funcret
  4116  005BF0                     __end_of_TimerDone:
  4117                           	opt callstack 0
  4118                           
  4119 ;; *************** function _StartTimer *****************
  4120 ;; Defined at:
  4121 ;;		line 12 in file "timers.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;  timer           1  [STACK] unsigned char 
  4124 ;;  count           2  [STACK] unsigned short 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;		None
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1  [STACK] void 
  4129 ;; Registers used:
  4130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/39
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4140 ;;Total ram usage:        0 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:    3
  4143 ;; This function calls:
  4144 ;;		Nothing
  4145 ;; This function is called by:
  4146 ;;		_r_protocol
  4147 ;;		_t_protocol
  4148 ;;		_WaitMs
  4149 ;; This function uses a reentrant model
  4150 ;;
  4151                           
  4152                           	psect	text13
  4153  005706                     __ptext13:
  4154                           	opt callstack 0
  4155  005706                     _StartTimer:
  4156                           	opt callstack 25
  4157                           
  4158                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  4159                           ;stkvar	_count @ sp[(0)+-3]
  4160                           
  4161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4162                           ;incstack = 0
  4163  005706  0EFD               	movlw	-3
  4164  005708  006F FF8C  F047    	movff	plusw1,btemp+10
  4165  00570E  0EFE               	movlw	-2
  4166  005710  006F FF8C  F048    	movff	plusw1,btemp+11
  4167  005716  90D8               	bcf	status,0,c
  4168  005718  3447               	rlcf	btemp+10,w,c
  4169  00571A  6E45               	movwf	btemp+8,c
  4170  00571C  3448               	rlcf	btemp+11,w,c
  4171  00571E  6E46               	movwf	btemp+9,c
  4172                           
  4173                           ;stkvar	_timer @ sp[(0)+-1]
  4174  005720  0EFF               	movlw	-1
  4175  005722  50E3               	movf	plusw1,w,c
  4176  005724  0D02               	mullw	2
  4177  005726  50F3               	movf	prodl,w,c
  4178  005728  0F79               	addlw	low _tickCount
  4179  00572A  6ED9               	movwf	fsr2l,c
  4180  00572C  6ADA               	clrf	fsr2h,c
  4181  00572E  0060  F117  FFDE   	movff	btemp+8,postinc2
  4182  005734  0060  F11B  FFDD   	movff	btemp+9,postdec2
  4183                           
  4184                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  4185  00573A  52E5               	movf	postdec1,f,c
  4186  00573C  52E5               	movf	postdec1,f,c
  4187  00573E  52E5               	movf	postdec1,f,c
  4188  005740  0012               	return		;funcret
  4189  005742                     __end_of_StartTimer:
  4190                           	opt callstack 0
  4191                           
  4192 ;; *************** function _UART1_is_rx_ready *****************
  4193 ;; Defined at:
  4194 ;;		line 146 in file "mcc_generated_files/uart1.c"
  4195 ;; Parameters:    Size  Location     Type
  4196 ;;		None
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;		None
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  1  [STACK] unsigned char 
  4201 ;; Registers used:
  4202 ;;		btemp
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4212 ;;Total ram usage:        0 bytes
  4213 ;; Hardware stack levels used:    1
  4214 ;; Hardware stack levels required when called:    3
  4215 ;; This function calls:
  4216 ;;		Nothing
  4217 ;; This function is called by:
  4218 ;;		_r_protocol
  4219 ;;		_t_protocol
  4220 ;; This function uses a reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text14
  4224  005E82                     __ptext14:
  4225                           	opt callstack 0
  4226  005E82                     _UART1_is_rx_ready:
  4227                           	opt callstack 26
  4228                           
  4229                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  4230                           
  4231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4232                           ;incstack = 0
  4233  005E82  0060  F0DC  F03D   	movff	_uart1RxCount,btemp	;volatile
  4234                           
  4235                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4236  005E88  0012               	return		;funcret
  4237  005E8A                     __end_of_UART1_is_rx_ready:
  4238                           	opt callstack 0
  4239                           
  4240 ;; *************** function _UART1_Read *****************
  4241 ;; Defined at:
  4242 ;;		line 161 in file "mcc_generated_files/uart1.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;		None
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;  readValue       1  [STACK] unsigned char 
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1  [STACK] unsigned char 
  4249 ;; Registers used:
  4250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 3F/39
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4260 ;;Total ram usage:        0 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    3
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_r_protocol
  4267 ;;		_t_protocol
  4268 ;; This function uses a reentrant model
  4269 ;;
  4270                           
  4271                           	psect	text15
  4272  00568A                     __ptext15:
  4273                           	opt callstack 0
  4274  00568A                     _UART1_Read:
  4275                           	opt callstack 0
  4276                           
  4277                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4278  00568A  52E6               	movf	postinc1,f,c
  4279  00568C                     
  4280                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4281                           
  4282                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4283  00568C  5037               	movf	_uart1RxCount,w,c	;volatile
  4284  00568E  B4D8               	btfsc	status,2,c
  4285  005690  D7FD               	goto	l5903
  4286                           
  4287                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  4288  005692  0EA1               	movlw	low _uart1RxBuffer
  4289  005694  2438               	addwf	_uart1RxTail,w,c	;volatile
  4290  005696  6ED9               	movwf	fsr2l,c
  4291  005698  6ADA               	clrf	fsr2h,c
  4292  00569A  0E01               	movlw	high _uart1RxBuffer
  4293  00569C  22DA               	addwfc	fsr2h,f,c
  4294  00569E  50DF               	movf	indf2,w,c
  4295  0056A0  6E48               	movwf	btemp+11,c
  4296                           
  4297                           ;stkvar	_readValue @ sp[(-1)+0]
  4298  0056A2  0EFF               	movlw	-1
  4299  0056A4  0060  F123  FFE3   	movff	btemp+11,plusw1
  4300  0056AA  2A38               	incf	_uart1RxTail,f,c	;volatile
  4301                           
  4302                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  4303  0056AC  0E3F               	movlw	63
  4304  0056AE  6438               	cpfsgt	_uart1RxTail,c
  4305  0056B0  D001               	goto	l572
  4306                           
  4307                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  4308  0056B2  6A38               	clrf	_uart1RxTail,c	;volatile
  4309  0056B4                     l572:
  4310                           
  4311                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  4312  0056B4  0139               	movlb	57	; () banked
  4313  0056B6  9793               	bcf	147,3,b	;volatile
  4314                           
  4315                           ; BSR set to: 57
  4316                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  4317  0056B8  0637               	decf	_uart1RxCount,f,c	;volatile
  4318                           
  4319                           ; BSR set to: 57
  4320                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  4321  0056BA  8793               	bsf	147,3,b	;volatile
  4322                           
  4323                           ; BSR set to: 57
  4324                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  4325                           ;stkvar	_readValue @ sp[(-1)+0]
  4326  0056BC  0EFF               	movlw	-1
  4327  0056BE  006F FF8C  F03D    	movff	plusw1,btemp
  4328                           
  4329                           ; BSR set to: 57
  4330                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4331  0056C4  52E5               	movf	postdec1,f,c
  4332  0056C6  0012               	return		;funcret
  4333  0056C8                     __end_of_UART1_Read:
  4334                           	opt callstack 0
  4335                           
  4336 ;; *************** function _init_display *****************
  4337 ;; Defined at:
  4338 ;;		line 35 in file "eadog.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;		None
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;		None
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  1  [STACK] void 
  4345 ;; Registers used:
  4346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 3F/3D
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4356 ;;Total ram usage:        0 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; Hardware stack levels required when called:    5
  4359 ;; This function calls:
  4360 ;;		_ringBufS_init
  4361 ;;		_send_lcd_cmd
  4362 ;;		_send_lcd_cmd_long
  4363 ;;		_wdtdelay
  4364 ;; This function is called by:
  4365 ;;		_main
  4366 ;; This function uses a reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text16
  4370  0047C2                     __ptext16:
  4371                           	opt callstack 0
  4372  0047C2                     _init_display:
  4373                           	opt callstack 25
  4374                           
  4375                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  4376                           
  4377                           ; BSR set to: 57
  4378                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4379                           ;incstack = 0
  4380  0047C2  0E43               	movlw	low _ring_buf1
  4381  0047C4  0100               	movlb	0	; () banked
  4382  0047C6  6F73               	movwf	(_spi_link+6)& (0+255),b	;volatile
  4383  0047C8  0E03               	movlw	high _ring_buf1
  4384  0047CA  6F74               	movwf	(_spi_link+7)& (0+255),b	;volatile
  4385                           
  4386                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  4387  0047CC  0E00               	movlw	low _ring_buf2
  4388  0047CE  6F71               	movwf	(_spi_link+4)& (0+255),b	;volatile
  4389  0047D0  0E03               	movlw	high _ring_buf2
  4390  0047D2  6F72               	movwf	(_spi_link+5)& (0+255),b	;volatile
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  4394  0047D4  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  4395  0047DA  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  4396  0047E0  ECA7  F02C         	call	_ringBufS_init	;wreg free
  4397                           
  4398                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  4399  0047E4  0060  F1C7  FFE6   	movff	_spi_link+4,postinc1
  4400  0047EA  0060  F1CB  FFE6   	movff	_spi_link+5,postinc1
  4401  0047F0  ECA7  F02C         	call	_ringBufS_init	;wreg free
  4402                           
  4403                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  4404  0047F4  80BE               	bsf	16318,0,c	;volatile
  4405  0047F6  84BC               	bsf	16316,2,c	;volatile
  4406                           
  4407                           ;eadog.c: 44:  wdtdelay(350000);
  4408  0047F8  0E30               	movlw	48
  4409  0047FA  6EE6               	movwf	postinc1,c
  4410  0047FC  0E57               	movlw	87
  4411  0047FE  6EE6               	movwf	postinc1,c
  4412  004800  0E05               	movlw	5
  4413  004802  6EE6               	movwf	postinc1,c
  4414  004804  0E00               	movlw	0
  4415  004806  6EE6               	movwf	postinc1,c
  4416  004808  EC90  F029         	call	_wdtdelay	;wreg free
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  4420  00480C  0E39               	movlw	57
  4421  00480E  6EE6               	movwf	postinc1,c
  4422  004810  EC93  F02C         	call	_send_lcd_cmd	;wreg free
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  4426  004814  0E1D               	movlw	29
  4427  004816  6EE6               	movwf	postinc1,c
  4428  004818  EC93  F02C         	call	_send_lcd_cmd	;wreg free
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  4432  00481C  0E50               	movlw	80
  4433  00481E  6EE6               	movwf	postinc1,c
  4434  004820  EC93  F02C         	call	_send_lcd_cmd	;wreg free
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  4438  004824  0E6C               	movlw	108
  4439  004826  6EE6               	movwf	postinc1,c
  4440  004828  EC93  F02C         	call	_send_lcd_cmd	;wreg free
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  4444  00482C  0E76               	movlw	118
  4445  00482E  6EE6               	movwf	postinc1,c
  4446  004830  EC93  F02C         	call	_send_lcd_cmd	;wreg free
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  4450  004834  0E38               	movlw	56
  4451  004836  6EE6               	movwf	postinc1,c
  4452  004838  EC7F  F02C         	call	_send_lcd_cmd_long	;wreg free
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  4456  00483C  0E0F               	movlw	15
  4457  00483E  6EE6               	movwf	postinc1,c
  4458  004840  EC93  F02C         	call	_send_lcd_cmd	;wreg free
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  4462  004844  0E01               	movlw	1
  4463  004846  6EE6               	movwf	postinc1,c
  4464  004848  EC7F  F02C         	call	_send_lcd_cmd_long	;wreg free
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  4468  00484C  0E02               	movlw	2
  4469  00484E  6EE6               	movwf	postinc1,c
  4470  004850  EC93  F02C         	call	_send_lcd_cmd	;wreg free
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  4474  004854  0E06               	movlw	6
  4475  004856  6EE6               	movwf	postinc1,c
  4476  004858  EC93  F02C         	call	_send_lcd_cmd	;wreg free
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;eadog.c: 55:  wdtdelay(30);
  4480  00485C  0E1E               	movlw	30
  4481  00485E  6EE6               	movwf	postinc1,c
  4482  004860  0E00               	movlw	0
  4483  004862  6EE6               	movwf	postinc1,c
  4484  004864  0E00               	movlw	0
  4485  004866  6EE6               	movwf	postinc1,c
  4486  004868  0E00               	movlw	0
  4487  00486A  6EE6               	movwf	postinc1,c
  4488  00486C  EC90  F029         	call	_wdtdelay	;wreg free
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  4492  004870  0E02               	movlw	2
  4493  004872  013D               	movlb	61	; () banked
  4494  004874  6F16               	movwf	22,b	;volatile
  4495                           
  4496                           ; BSR set to: 61
  4497                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  4498  004876  0E40               	movlw	64
  4499  004878  6F15               	movwf	21,b	;volatile
  4500                           
  4501                           ; BSR set to: 61
  4502                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  4503  00487A  0E83               	movlw	131
  4504  00487C  6F14               	movwf	20,b	;volatile
  4505                           
  4506                           ; BSR set to: 61
  4507                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  4508  00487E  931A               	bcf	26,1,b	;volatile
  4509                           
  4510                           ; BSR set to: 61
  4511                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  4512  004880  0E3F               	movlw	-193
  4513  004882  013B               	movlb	59	; () banked
  4514  004884  17FD               	andwf	253,f,b	;volatile
  4515                           
  4516                           ; BSR set to: 59
  4517                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  4518  004886  9BFD               	bcf	253,5,b	;volatile
  4519                           
  4520                           ; BSR set to: 59
  4521                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  4522  004888  51FD               	movf	253,w,b	;volatile
  4523  00488A  0BF9               	andlw	-7
  4524  00488C  0902               	iorlw	2
  4525  00488E  6FFD               	movwf	253,b	;volatile
  4526                           
  4527                           ; BSR set to: 59
  4528                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  4529  004890  0EE7               	movlw	-25
  4530  004892  17FD               	andwf	253,f,b	;volatile
  4531                           
  4532                           ; BSR set to: 59
  4533                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  4534  004894  81FD               	bsf	253,0,b	;volatile
  4535                           
  4536                           ; BSR set to: 59
  4537                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  4538  004896  0E43               	movlw	low _ring_buf1
  4539  004898  6FF9               	movwf	249,b	;volatile
  4540  00489A  0E03               	movlw	high _ring_buf1
  4541  00489C  6FFA               	movwf	250,b	;volatile
  4542  00489E  0E00               	movlw	low (_ring_buf1 shr (0+16))
  4543  0048A0  6FFB               	movwf	251,b	;volatile
  4544                           
  4545                           ; BSR set to: 59
  4546                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  4547  0048A2  9BFC               	bcf	252,5,b	;volatile
  4548                           
  4549                           ; BSR set to: 59
  4550                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  4551  0048A4  013D               	movlb	61	; () banked
  4552  0048A6  831A               	bsf	26,1,b	;volatile
  4553                           
  4554                           ; BSR set to: 61
  4555                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  4556  0048A8  90BE               	bcf	16318,0,c	;volatile
  4557                           
  4558                           ; BSR set to: 61
  4559                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4560  0048AA  0012               	return		;funcret
  4561  0048AC                     __end_of_init_display:
  4562                           	opt callstack 0
  4563                           
  4564 ;; *************** function _send_lcd_cmd_long *****************
  4565 ;; Defined at:
  4566 ;;		line 97 in file "eadog.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  cmd             1  [STACK] unsigned char 
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;		None
  4571 ;; Return value:  Size  Location     Type
  4572 ;;                  1  [STACK] void 
  4573 ;; Registers used:
  4574 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4575 ;; Tracked objects:
  4576 ;;		On entry : 3F/0
  4577 ;;		On exit  : 3F/0
  4578 ;;		Unchanged: 0/0
  4579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4584 ;;Total ram usage:        0 bytes
  4585 ;; Hardware stack levels used:    1
  4586 ;; Hardware stack levels required when called:    4
  4587 ;; This function calls:
  4588 ;;		_SPI1_Exchange8bit
  4589 ;;		_wdtdelay
  4590 ;; This function is called by:
  4591 ;;		_init_display
  4592 ;; This function uses a reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text17
  4596  0058FE                     __ptext17:
  4597                           	opt callstack 0
  4598  0058FE                     _send_lcd_cmd_long:
  4599                           	opt callstack 25
  4600                           
  4601                           ; BSR set to: 61
  4602                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4603                           ;incstack = 0
  4604                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  4605  0058FE  92BC               	bcf	16316,1,c	;volatile
  4606                           
  4607                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  4608  005900  94BC               	bcf	16316,2,c	;volatile
  4609                           
  4610                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  4611                           ;stkvar	_cmd @ sp[(0)+-1]
  4612  005902  0EFF               	movlw	-1
  4613  005904  50E3               	movf	plusw1,w,c
  4614  005906  6EE6               	movwf	postinc1,c
  4615  005908  EC7E  F02E         	call	_SPI1_Exchange8bit	;wreg free
  4616                           
  4617                           ; BSR set to: 57
  4618                           ;eadog.c: 102:  wdtdelay(800);
  4619  00590C  0E20               	movlw	32
  4620  00590E  6EE6               	movwf	postinc1,c
  4621  005910  0E03               	movlw	3
  4622  005912  6EE6               	movwf	postinc1,c
  4623  005914  0E00               	movlw	0
  4624  005916  6EE6               	movwf	postinc1,c
  4625  005918  0E00               	movlw	0
  4626  00591A  6EE6               	movwf	postinc1,c
  4627  00591C  EC90  F029         	call	_wdtdelay	;wreg free
  4628                           
  4629                           ; BSR set to: 0
  4630  005920  82BC               	bsf	16316,1,c	;volatile
  4631                           
  4632                           ; BSR set to: 0
  4633                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4634  005922  52E5               	movf	postdec1,f,c
  4635  005924  0012               	return		;funcret
  4636  005926                     __end_of_send_lcd_cmd_long:
  4637                           	opt callstack 0
  4638                           
  4639 ;; *************** function _send_lcd_cmd *****************
  4640 ;; Defined at:
  4641 ;;		line 85 in file "eadog.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;  cmd             1  [STACK] unsigned char 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;		None
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1  [STACK] void 
  4648 ;; Registers used:
  4649 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4650 ;; Tracked objects:
  4651 ;;		On entry : 3F/0
  4652 ;;		On exit  : 3F/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4659 ;;Total ram usage:        0 bytes
  4660 ;; Hardware stack levels used:    1
  4661 ;; Hardware stack levels required when called:    4
  4662 ;; This function calls:
  4663 ;;		_SPI1_Exchange8bit
  4664 ;;		_wdtdelay
  4665 ;; This function is called by:
  4666 ;;		_init_display
  4667 ;; This function uses a reentrant model
  4668 ;;
  4669                           
  4670                           	psect	text18
  4671  005926                     __ptext18:
  4672                           	opt callstack 0
  4673  005926                     _send_lcd_cmd:
  4674                           	opt callstack 25
  4675                           
  4676                           ; BSR set to: 0
  4677                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4678                           ;incstack = 0
  4679                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  4680  005926  92BC               	bcf	16316,1,c	;volatile
  4681                           
  4682                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  4683  005928  94BC               	bcf	16316,2,c	;volatile
  4684                           
  4685                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  4686                           ;stkvar	_cmd @ sp[(0)+-1]
  4687  00592A  0EFF               	movlw	-1
  4688  00592C  50E3               	movf	plusw1,w,c
  4689  00592E  6EE6               	movwf	postinc1,c
  4690  005930  EC7E  F02E         	call	_SPI1_Exchange8bit	;wreg free
  4691                           
  4692                           ; BSR set to: 57
  4693                           ;eadog.c: 90:  wdtdelay(30);
  4694  005934  0E1E               	movlw	30
  4695  005936  6EE6               	movwf	postinc1,c
  4696  005938  0E00               	movlw	0
  4697  00593A  6EE6               	movwf	postinc1,c
  4698  00593C  0E00               	movlw	0
  4699  00593E  6EE6               	movwf	postinc1,c
  4700  005940  0E00               	movlw	0
  4701  005942  6EE6               	movwf	postinc1,c
  4702  005944  EC90  F029         	call	_wdtdelay	;wreg free
  4703                           
  4704                           ; BSR set to: 0
  4705  005948  82BC               	bsf	16316,1,c	;volatile
  4706                           
  4707                           ; BSR set to: 0
  4708                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  4709  00594A  52E5               	movf	postdec1,f,c
  4710  00594C  0012               	return		;funcret
  4711  00594E                     __end_of_send_lcd_cmd:
  4712                           	opt callstack 0
  4713                           
  4714 ;; *************** function _SPI1_Exchange8bit *****************
  4715 ;; Defined at:
  4716 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;  data            1  [STACK] unsigned char 
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1  [STACK] unsigned char 
  4723 ;; Registers used:
  4724 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 3F/39
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4734 ;;Total ram usage:        0 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; Hardware stack levels required when called:    3
  4737 ;; This function calls:
  4738 ;;		Nothing
  4739 ;; This function is called by:
  4740 ;;		_send_lcd_cmd
  4741 ;;		_send_lcd_cmd_long
  4742 ;; This function uses a reentrant model
  4743 ;;
  4744                           
  4745                           	psect	text19
  4746  005CFC                     __ptext19:
  4747                           	opt callstack 0
  4748  005CFC                     _SPI1_Exchange8bit:
  4749                           	opt callstack 25
  4750                           
  4751                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4752                           
  4753                           ; BSR set to: 0
  4754                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4755                           ;incstack = 0
  4756  005CFC  0E01               	movlw	1
  4757  005CFE  013D               	movlb	61	; () banked
  4758  005D00  6F12               	movwf	18,b	;volatile
  4759                           
  4760                           ; BSR set to: 61
  4761                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4762                           ;stkvar	_data @ sp[(0)+-1]
  4763  005D02  0EFF               	movlw	-1
  4764  005D04  006F FF8F FD11     	movff	plusw1,15633	;volatile
  4765  005D0A                     l847:
  4766                           
  4767                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4768  005D0A  0139               	movlb	57	; () banked
  4769  005D0C  A9A2               	btfss	162,4,b	;volatile
  4770  005D0E  D7FD               	goto	l847
  4771                           
  4772                           ; BSR set to: 57
  4773                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4774  005D10  006F F440  F03D    	movff	15632,btemp	;volatile
  4775                           
  4776                           ; BSR set to: 57
  4777                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4778  005D16  52E5               	movf	postdec1,f,c
  4779  005D18  0012               	return		;funcret
  4780  005D1A                     __end_of_SPI1_Exchange8bit:
  4781                           	opt callstack 0
  4782                           
  4783 ;; *************** function _ringBufS_init *****************
  4784 ;; Defined at:
  4785 ;;		line 22 in file "ringbufs.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  _this           2  [STACK] PTR volatile struct ring
  4788 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;		None
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  1  [STACK] void 
  4793 ;; Registers used:
  4794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4804 ;;Total ram usage:        0 bytes
  4805 ;; Hardware stack levels used:    1
  4806 ;; Hardware stack levels required when called:    4
  4807 ;; This function calls:
  4808 ;;		_memset
  4809 ;; This function is called by:
  4810 ;;		_init_display
  4811 ;; This function uses a reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text20
  4815  00594E                     __ptext20:
  4816                           	opt callstack 0
  4817  00594E                     _ringBufS_init:
  4818                           	opt callstack 25
  4819                           
  4820                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  4821                           
  4822                           ; BSR set to: 57
  4823                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4824                           ;incstack = 0
  4825  00594E  0E43               	movlw	67
  4826  005950  6EE6               	movwf	postinc1,c
  4827  005952  0E00               	movlw	0
  4828  005954  6EE6               	movwf	postinc1,c
  4829  005956  0E00               	movlw	0
  4830  005958  6EE6               	movwf	postinc1,c
  4831  00595A  0E00               	movlw	0
  4832  00595C  6EE6               	movwf	postinc1,c
  4833                           
  4834                           ;stkvar	__this @ sp[(-4)+-2]
  4835  00595E  0EFA               	movlw	-6
  4836  005960  006F FF8F FFE6     	movff	plusw1,postinc1
  4837  005966  006F FF8F FFE6     	movff	plusw1,postinc1
  4838  00596C  EC90  F017         	call	_memset	;wreg free
  4839                           
  4840                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4841  005970  52E5               	movf	postdec1,f,c
  4842  005972  52E5               	movf	postdec1,f,c
  4843  005974  0012               	return		;funcret
  4844  005976                     __end_of_ringBufS_init:
  4845                           	opt callstack 0
  4846                           
  4847 ;; *************** function _eaDogM_WriteStringAtPos *****************
  4848 ;; Defined at:
  4849 ;;		line 222 in file "eadog.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;  r               1  [STACK] unsigned char 
  4852 ;;  c               1  [STACK] unsigned char 
  4853 ;;  strPtr          1  [STACK] PTR unsigned char 
  4854 ;;		 -> V(80), 
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;		None
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1  [STACK] void 
  4859 ;; Registers used:
  4860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  4861 ;; Tracked objects:
  4862 ;;		On entry : 3F/0
  4863 ;;		On exit  : 3F/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4870 ;;Total ram usage:        0 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; Hardware stack levels required when called:   13
  4873 ;; This function calls:
  4874 ;;		_eaDogM_WriteString
  4875 ;;		_send_lcd_cmd_dma
  4876 ;; This function is called by:
  4877 ;;		_main
  4878 ;; This function uses a reentrant model
  4879 ;;
  4880                           
  4881                           	psect	text21
  4882  0057D2                     __ptext21:
  4883                           	opt callstack 0
  4884  0057D2                     _eaDogM_WriteStringAtPos:
  4885                           	opt callstack 17
  4886                           
  4887                           ;eadog.c: 222: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           223: {;eadog.c: 224:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  4888                           ;stkvar	_c @ sp[(0)+-2]
  4889                           
  4890                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4891                           ;incstack = 0
  4892  0057D2  0EFE               	movlw	-2
  4893  0057D4  006F FF8C  F048    	movff	plusw1,btemp+11
  4894                           
  4895                           ;stkvar	_r @ sp[(0)+-1]
  4896  0057DA  0EFF               	movlw	-1
  4897  0057DC  50E3               	movf	plusw1,w,c
  4898  0057DE  0D10               	mullw	16
  4899  0057E0  50F3               	movf	prodl,w,c
  4900  0057E2  2448               	addwf	btemp+11,w,c
  4901  0057E4  0F80               	addlw	128
  4902  0057E6  6EE6               	movwf	postinc1,c
  4903  0057E8  ECE7  F029         	call	_send_lcd_cmd_dma	;wreg free
  4904                           
  4905                           ;eadog.c: 225:  eaDogM_WriteString(strPtr);
  4906                           ;stkvar	_strPtr @ sp[(0)+-3]
  4907  0057EC  0EFD               	movlw	-3
  4908  0057EE  50E3               	movf	plusw1,w,c
  4909  0057F0  6EE6               	movwf	postinc1,c
  4910  0057F2  EC7D  F025         	call	_eaDogM_WriteString	;wreg free
  4911                           
  4912                           ; BSR set to: 0
  4913                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  4914  0057F6  52E5               	movf	postdec1,f,c
  4915  0057F8  52E5               	movf	postdec1,f,c
  4916  0057FA  52E5               	movf	postdec1,f,c
  4917  0057FC  0012               	return		;funcret
  4918  0057FE                     __end_of_eaDogM_WriteStringAtPos:
  4919                           	opt callstack 0
  4920                           
  4921 ;; *************** function _eaDogM_WriteString *****************
  4922 ;; Defined at:
  4923 ;;		line 167 in file "eadog.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;  strPtr          1  [STACK] PTR unsigned char 
  4926 ;;		 -> V(80), 
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;		None
  4929 ;; Return value:  Size  Location     Type
  4930 ;;                  1  [STACK] void 
  4931 ;; Registers used:
  4932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  4933 ;; Tracked objects:
  4934 ;;		On entry : 3F/0
  4935 ;;		On exit  : 3F/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4942 ;;Total ram usage:        0 bytes
  4943 ;; Hardware stack levels used:    1
  4944 ;; Hardware stack levels required when called:   12
  4945 ;; This function calls:
  4946 ;;		_printf
  4947 ;;		_ringBufS_flush
  4948 ;;		_start_lcd
  4949 ;;		_strlen
  4950 ;;		_wait_lcd_set
  4951 ;; This function is called by:
  4952 ;;		_main
  4953 ;;		_eaDogM_WriteStringAtPos
  4954 ;; This function uses a reentrant model
  4955 ;;
  4956                           
  4957                           	psect	text22
  4958  004AFA                     __ptext22:
  4959                           	opt callstack 0
  4960  004AFA                     _eaDogM_WriteString:
  4961                           	opt callstack 17
  4962                           
  4963                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  4964                           
  4965                           ; BSR set to: 0
  4966                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4967                           ;incstack = 0
  4968  004AFA  EC49  F02F         	call	_wait_lcd_set	;wreg free
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  4972  004AFE  0E00               	movlw	0
  4973  004B00  6EE6               	movwf	postinc1,c
  4974  004B02  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  4975  004B08  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  4976  004B0E  EC10  F027         	call	_ringBufS_flush	;wreg free
  4977  004B12  94BC               	bcf	16316,2,c	;volatile
  4978                           
  4979                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  4980                           ;stkvar	_strPtr @ sp[(0)+-1]
  4981  004B14  0EFF               	movlw	-1
  4982  004B16  006F FF8C  F048    	movff	plusw1,btemp+11
  4983  004B1C  0060  F123  FFE6   	movff	btemp+11,postinc1
  4984  004B22  0E00               	movlw	0
  4985  004B24  6EE6               	movwf	postinc1,c
  4986  004B26  ECDD  F027         	call	_strlen	;wreg free
  4987  004B2A  503E               	movf	btemp+1,w,c
  4988  004B2C  E104               	bnz	u4660
  4989  004B2E  0E41               	movlw	65
  4990  004B30  5C3D               	subwf	btemp,w,c
  4991  004B32  A0D8               	btfss	status,0,c
  4992  004B34  D008               	goto	l7427
  4993  004B36                     u4660:
  4994                           
  4995                           ;stkvar	_strPtr @ sp[(0)+-1]
  4996  004B36  0EFF               	movlw	-1
  4997  004B38  50E3               	movf	plusw1,w,c
  4998  004B3A  6ED9               	movwf	fsr2l,c
  4999  004B3C  6ADA               	clrf	fsr2h,c
  5000  004B3E  0E40               	movlw	64
  5001  004B40  26D9               	addwf	fsr2l,f,c
  5002  004B42  0E00               	movlw	0
  5003  004B44  6EDF               	movwf	indf2,c
  5004  004B46                     l7427:
  5005                           
  5006                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  5007  004B46  013B               	movlb	59	; () banked
  5008  004B48  9FFC               	bcf	252,7,b	;volatile
  5009                           
  5010                           ; BSR set to: 59
  5011                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  5012                           ;stkvar	_strPtr @ sp[(0)+-1]
  5013  004B4A  0EFF               	movlw	-1
  5014  004B4C  006F FF8C  F048    	movff	plusw1,btemp+11
  5015  004B52  0060  F123  FFE6   	movff	btemp+11,postinc1
  5016  004B58  0E00               	movlw	0
  5017  004B5A  6EE6               	movwf	postinc1,c
  5018  004B5C  ECDD  F027         	call	_strlen	;wreg free
  5019  004B60  0060  F0F7  FBF7   	movff	btemp,15351	;volatile
  5020  004B66  0060  F0FB  FBF8   	movff	btemp+1,15352	;volatile
  5021                           
  5022                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  5023  004B6C  013B               	movlb	59	; () banked
  5024  004B6E  8FFC               	bsf	252,7,b	;volatile
  5025                           
  5026                           ; BSR set to: 59
  5027                           ;eadog.c: 177:  printf("%s", strPtr);
  5028                           ;stkvar	_strPtr @ sp[(0)+-1]
  5029  004B70  0EFF               	movlw	-1
  5030  004B72  006F FF8C  F048    	movff	plusw1,btemp+11
  5031  004B78  0060  F123  FFE6   	movff	btemp+11,postinc1
  5032  004B7E  0E00               	movlw	0
  5033  004B80  6EE6               	movwf	postinc1,c
  5034  004B82  0E6C               	movlw	STR_6& (0+255)
  5035  004B84  6EE6               	movwf	postinc1,c
  5036  004B86  0E03               	movlw	3
  5037  004B88  6EE6               	movwf	postinc1,c
  5038  004B8A  EC30  F029         	call	_printf	;wreg free
  5039  004B8E  94BE               	bcf	16318,2,c	;volatile
  5040                           
  5041                           ;eadog.c: 179:  start_lcd();
  5042  004B90  EC4C  F02F         	call	_start_lcd	;wreg free
  5043                           
  5044                           ; BSR set to: 59
  5045                           ;eadog.c: 180:  ++V.ticks;
  5046  004B94  0E01               	movlw	1
  5047  004B96  0100               	movlb	0	; () banked
  5048  004B98  27CD               	addwf	(_V+68)& (0+255),f,b	;volatile
  5049  004B9A  0E00               	movlw	0
  5050  004B9C  23CE               	addwfc	(_V+69)& (0+255),f,b	;volatile
  5051  004B9E  23CF               	addwfc	(_V+70)& (0+255),f,b	;volatile
  5052  004BA0  23D0               	addwfc	(_V+71)& (0+255),f,b	;volatile
  5053                           
  5054                           ; BSR set to: 0
  5055                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5056  004BA2  52E5               	movf	postdec1,f,c
  5057  004BA4  0012               	return		;funcret
  5058  004BA6                     __end_of_eaDogM_WriteString:
  5059                           	opt callstack 0
  5060                           
  5061 ;; *************** function _eaDogM_WriteCommand *****************
  5062 ;; Defined at:
  5063 ;;		line 143 in file "eadog.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  cmd             1  [STACK] unsigned char 
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;		None
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  1  [STACK] void 
  5070 ;; Registers used:
  5071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5072 ;; Tracked objects:
  5073 ;;		On entry : 3F/3D
  5074 ;;		On exit  : 3F/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5081 ;;Total ram usage:        0 bytes
  5082 ;; Hardware stack levels used:    1
  5083 ;; Hardware stack levels required when called:   13
  5084 ;; This function calls:
  5085 ;;		_send_lcd_cmd_dma
  5086 ;; This function is called by:
  5087 ;;		_main
  5088 ;; This function uses a reentrant model
  5089 ;;
  5090                           
  5091                           	psect	text23
  5092  005DFC                     __ptext23:
  5093                           	opt callstack 0
  5094  005DFC                     _eaDogM_WriteCommand:
  5095                           	opt callstack 17
  5096                           
  5097                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  5098                           ;stkvar	_cmd @ sp[(0)+-1]
  5099                           
  5100                           ; BSR set to: 0
  5101                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5102                           ;incstack = 0
  5103  005DFC  0EFF               	movlw	-1
  5104  005DFE  50E3               	movf	plusw1,w,c
  5105  005E00  6EE6               	movwf	postinc1,c
  5106  005E02  ECE7  F029         	call	_send_lcd_cmd_dma	;wreg free
  5107                           
  5108                           ; BSR set to: 0
  5109                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  5110  005E06  52E5               	movf	postdec1,f,c
  5111  005E08  0012               	return		;funcret
  5112  005E0A                     __end_of_eaDogM_WriteCommand:
  5113                           	opt callstack 0
  5114                           
  5115 ;; *************** function _send_lcd_cmd_dma *****************
  5116 ;; Defined at:
  5117 ;;		line 186 in file "eadog.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  strPtr          1  [STACK] unsigned char 
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;		None
  5122 ;; Return value:  Size  Location     Type
  5123 ;;                  1  [STACK] void 
  5124 ;; Registers used:
  5125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5126 ;; Tracked objects:
  5127 ;;		On entry : 0/0
  5128 ;;		On exit  : 3F/0
  5129 ;;		Unchanged: 0/0
  5130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5135 ;;Total ram usage:        0 bytes
  5136 ;; Hardware stack levels used:    1
  5137 ;; Hardware stack levels required when called:   12
  5138 ;; This function calls:
  5139 ;;		_printf
  5140 ;;		_ringBufS_flush
  5141 ;;		_start_lcd
  5142 ;;		_wait_lcd_done
  5143 ;;		_wait_lcd_set
  5144 ;; This function is called by:
  5145 ;;		_eaDogM_WriteCommand
  5146 ;;		_eaDogM_WriteStringAtPos
  5147 ;; This function uses a reentrant model
  5148 ;;
  5149                           
  5150                           	psect	text24
  5151  0053CE                     __ptext24:
  5152                           	opt callstack 0
  5153  0053CE                     _send_lcd_cmd_dma:
  5154                           	opt callstack 17
  5155                           
  5156                           ;eadog.c: 186: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 187: {;eadog.c: 188:  wait
      +                          _lcd_set();
  5157                           
  5158                           ; BSR set to: 0
  5159                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5160                           ;incstack = 0
  5161  0053CE  EC49  F02F         	call	_wait_lcd_set	;wreg free
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;eadog.c: 190:  ringBufS_flush(spi_link.tx1a, 0);
  5165  0053D2  0E00               	movlw	0
  5166  0053D4  6EE6               	movwf	postinc1,c
  5167  0053D6  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  5168  0053DC  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  5169  0053E2  EC10  F027         	call	_ringBufS_flush	;wreg free
  5170  0053E6  92BC               	bcf	16316,1,c	;volatile
  5171  0053E8  94BC               	bcf	16316,2,c	;volatile
  5172                           
  5173                           ;eadog.c: 193:  DMA1CON0bits.EN = 0;
  5174  0053EA  013B               	movlb	59	; () banked
  5175  0053EC  9FFC               	bcf	252,7,b	;volatile
  5176                           
  5177                           ; BSR set to: 59
  5178                           ;eadog.c: 194:  DMA1SSZ = 1;
  5179  0053EE  0E00               	movlw	0
  5180  0053F0  6FF8               	movwf	248,b	;volatile
  5181  0053F2  0E01               	movlw	1
  5182  0053F4  6FF7               	movwf	247,b	;volatile
  5183                           
  5184                           ; BSR set to: 59
  5185                           ;eadog.c: 195:  DMA1CON0bits.EN = 1;
  5186  0053F6  8FFC               	bsf	252,7,b	;volatile
  5187                           
  5188                           ; BSR set to: 59
  5189                           ;eadog.c: 196:  printf("%c", strPtr);
  5190                           ;stkvar	_strPtr @ sp[(0)+-1]
  5191  0053F8  0EFF               	movlw	-1
  5192  0053FA  50E3               	movf	plusw1,w,c
  5193  0053FC  6EE6               	movwf	postinc1,c
  5194  0053FE  0E00               	movlw	0
  5195  005400  6EE6               	movwf	postinc1,c
  5196  005402  0E69               	movlw	STR_7& (0+255)
  5197  005404  6EE6               	movwf	postinc1,c
  5198  005406  0E03               	movlw	3
  5199  005408  6EE6               	movwf	postinc1,c
  5200  00540A  EC30  F029         	call	_printf	;wreg free
  5201  00540E  94BE               	bcf	16318,2,c	;volatile
  5202                           
  5203                           ;eadog.c: 198:  start_lcd();
  5204  005410  EC4C  F02F         	call	_start_lcd	;wreg free
  5205                           
  5206                           ; BSR set to: 59
  5207                           ;eadog.c: 199:  wait_lcd_done();
  5208  005414  EC8D  F02E         	call	_wait_lcd_done	;wreg free
  5209                           
  5210                           ; BSR set to: 0
  5211  005418  82BC               	bsf	16316,1,c	;volatile
  5212                           
  5213                           ; BSR set to: 0
  5214                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5215  00541A  52E5               	movf	postdec1,f,c
  5216  00541C  0012               	return		;funcret
  5217  00541E                     __end_of_send_lcd_cmd_dma:
  5218                           	opt callstack 0
  5219                           
  5220 ;; *************** function _wait_lcd_set *****************
  5221 ;; Defined at:
  5222 ;;		line 114 in file "eadog.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;		None
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;		None
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  1  [STACK] void 
  5229 ;; Registers used:
  5230 ;;		None
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/0
  5233 ;;		On exit  : 3F/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5240 ;;Total ram usage:        0 bytes
  5241 ;; Hardware stack levels used:    1
  5242 ;; Hardware stack levels required when called:    3
  5243 ;; This function calls:
  5244 ;;		Nothing
  5245 ;; This function is called by:
  5246 ;;		_eaDogM_WriteString
  5247 ;;		_send_lcd_cmd_dma
  5248 ;; This function uses a reentrant model
  5249 ;;
  5250                           
  5251                           	psect	text25
  5252  005E92                     __ptext25:
  5253                           	opt callstack 0
  5254  005E92                     _wait_lcd_set:
  5255                           	opt callstack 25
  5256                           
  5257                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  5258                           
  5259                           ; BSR set to: 0
  5260                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5261                           ;incstack = 0
  5262  005E92  0100               	movlb	0	; () banked
  5263  005E94  876D               	bsf	_spi_link& (0+255),3,b	;volatile
  5264                           
  5265                           ; BSR set to: 0
  5266                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5267  005E96  0012               	return		;funcret
  5268  005E98                     __end_of_wait_lcd_set:
  5269                           	opt callstack 0
  5270                           
  5271 ;; *************** function _wait_lcd_done *****************
  5272 ;; Defined at:
  5273 ;;		line 124 in file "eadog.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;		None
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1  [STACK] void 
  5280 ;; Registers used:
  5281 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 3F/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5291 ;;Total ram usage:        0 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; Hardware stack levels required when called:    4
  5294 ;; This function calls:
  5295 ;;		_wdtdelay
  5296 ;; This function is called by:
  5297 ;;		_main
  5298 ;;		_send_lcd_cmd_dma
  5299 ;; This function uses a reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text26
  5303  005D1A                     __ptext26:
  5304                           	opt callstack 0
  5305  005D1A                     _wait_lcd_done:
  5306                           	opt callstack 26
  5307                           
  5308                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  5309                           
  5310                           ; BSR set to: 0
  5311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5312                           ;incstack = 0
  5313  005D1A  0100               	movlb	0	; () banked
  5314  005D1C  B76D               	btfsc	_spi_link& (0+255),3,b	;volatile
  5315  005D1E  D7FD               	goto	_wait_lcd_done
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;eadog.c: 127:  wdtdelay(50);
  5319  005D20  0E32               	movlw	50
  5320  005D22  6EE6               	movwf	postinc1,c
  5321  005D24  0E00               	movlw	0
  5322  005D26  6EE6               	movwf	postinc1,c
  5323  005D28  0E00               	movlw	0
  5324  005D2A  6EE6               	movwf	postinc1,c
  5325  005D2C  0E00               	movlw	0
  5326  005D2E  6EE6               	movwf	postinc1,c
  5327  005D30  EC90  F029         	call	_wdtdelay	;wreg free
  5328                           
  5329                           ; BSR set to: 0
  5330                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5331  005D34  0012               	return		;funcret
  5332  005D36                     __end_of_wait_lcd_done:
  5333                           	opt callstack 0
  5334                           
  5335 ;; *************** function _wdtdelay *****************
  5336 ;; Defined at:
  5337 ;;		line 21 in file "eadog.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;  delay           4  [STACK] unsigned long 
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;		None
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  1  [STACK] void 
  5344 ;; Registers used:
  5345 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 3F/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5355 ;;Total ram usage:        0 bytes
  5356 ;; Hardware stack levels used:    1
  5357 ;; Hardware stack levels required when called:    3
  5358 ;; This function calls:
  5359 ;;		Nothing
  5360 ;; This function is called by:
  5361 ;;		_init_display
  5362 ;;		_send_lcd_cmd
  5363 ;;		_send_lcd_cmd_long
  5364 ;;		_wait_lcd_done
  5365 ;; This function uses a reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text27
  5369  005320                     __ptext27:
  5370                           	opt callstack 0
  5371  005320                     _wdtdelay:
  5372                           	opt callstack 26
  5373                           
  5374                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  5375                           
  5376                           ; BSR set to: 0
  5377                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5378                           ;incstack = 0
  5379  005320  0100               	movlb	0	; () banked
  5380  005322  6B85               	clrf	wdtdelay@dcount& (0+255),b
  5381  005324  6B86               	clrf	(wdtdelay@dcount+1)& (0+255),b
  5382  005326  6B87               	clrf	(wdtdelay@dcount+2)& (0+255),b
  5383  005328  6B88               	clrf	(wdtdelay@dcount+3)& (0+255),b
  5384  00532A  D009               	goto	l5407
  5385  00532C                     l1294:
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;eadog.c: 26:   __nop();
  5389  00532C  F000               	nop	
  5390  00532E  0004               	clrwdt		;# 
  5391                           
  5392                           ;eadog.c: 28:  };
  5393  005330  0E01               	movlw	1
  5394  005332  0100               	movlb	0	; () banked
  5395  005334  2785               	addwf	wdtdelay@dcount& (0+255),f,b
  5396  005336  0E00               	movlw	0
  5397  005338  2386               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  5398  00533A  2387               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  5399  00533C  2388               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  5400  00533E                     l5407:
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;stkvar	_delay @ sp[(0)+-4]
  5404  00533E  0EFC               	movlw	-4
  5405  005340  006F FF8C  F03D    	movff	plusw1,btemp
  5406  005346  5185               	movf	wdtdelay@dcount& (0+255),w,b
  5407  005348  5C3D               	subwf	btemp,w,c
  5408  00534A  0EFD               	movlw	-3
  5409  00534C  006F FF8C  F03D    	movff	plusw1,btemp
  5410  005352  5186               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  5411  005354  583D               	subwfb	btemp,w,c
  5412  005356  0EFE               	movlw	-2
  5413  005358  006F FF8C  F03D    	movff	plusw1,btemp
  5414  00535E  5187               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  5415  005360  583D               	subwfb	btemp,w,c
  5416  005362  0EFF               	movlw	-1
  5417  005364  006F FF8C  F03D    	movff	plusw1,btemp
  5418  00536A  5188               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  5419  00536C  583D               	subwfb	btemp,w,c
  5420  00536E  B0D8               	btfsc	status,0,c
  5421  005370  D7DD               	goto	l1294
  5422                           
  5423                           ; BSR set to: 0
  5424                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  5425  005372  52E5               	movf	postdec1,f,c
  5426  005374  52E5               	movf	postdec1,f,c
  5427  005376  52E5               	movf	postdec1,f,c
  5428  005378  52E5               	movf	postdec1,f,c
  5429  00537A  0012               	return		;funcret
  5430  00537C                     __end_of_wdtdelay:
  5431                           	opt callstack 0
  5432                           
  5433 ;; *************** function _start_lcd *****************
  5434 ;; Defined at:
  5435 ;;		line 109 in file "eadog.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;		None
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;		None
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  1  [STACK] void 
  5442 ;; Registers used:
  5443 ;;		None
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/3B
  5446 ;;		On exit  : 3F/3B
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5453 ;;Total ram usage:        0 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; Hardware stack levels required when called:    3
  5456 ;; This function calls:
  5457 ;;		Nothing
  5458 ;; This function is called by:
  5459 ;;		_eaDogM_WriteString
  5460 ;;		_send_lcd_cmd_dma
  5461 ;; This function uses a reentrant model
  5462 ;;
  5463                           
  5464                           	psect	text28
  5465  005E98                     __ptext28:
  5466                           	opt callstack 0
  5467  005E98                     _start_lcd:
  5468                           	opt callstack 25
  5469                           
  5470                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  5471                           
  5472                           ; BSR set to: 0
  5473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5474                           ;incstack = 0
  5475  005E98  013B               	movlb	59	; () banked
  5476  005E9A  8DFC               	bsf	252,6,b	;volatile
  5477                           
  5478                           ; BSR set to: 59
  5479                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5480  005E9C  0012               	return		;funcret
  5481  005E9E                     __end_of_start_lcd:
  5482                           	opt callstack 0
  5483                           
  5484 ;; *************** function _ringBufS_flush *****************
  5485 ;; Defined at:
  5486 ;;		line 76 in file "ringbufs.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;  _this           2  [STACK] PTR struct ringBufS_t
  5489 ;;		 -> ring_buf1(67), 
  5490 ;;  clearBuffer     1  [STACK] const char 
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;		None
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  1  [STACK] void 
  5495 ;; Registers used:
  5496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5497 ;; Tracked objects:
  5498 ;;		On entry : 3F/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5506 ;;Total ram usage:        0 bytes
  5507 ;; Hardware stack levels used:    1
  5508 ;; Hardware stack levels required when called:    4
  5509 ;; This function calls:
  5510 ;;		_memset
  5511 ;; This function is called by:
  5512 ;;		_eaDogM_WriteString
  5513 ;;		_send_lcd_cmd_dma
  5514 ;; This function uses a reentrant model
  5515 ;;
  5516                           
  5517                           	psect	text29
  5518  004E20                     __ptext29:
  5519                           	opt callstack 0
  5520  004E20                     _ringBufS_flush:
  5521                           	opt callstack 24
  5522                           
  5523                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  5524                           ;stkvar	__this @ sp[(0)+-2]
  5525                           
  5526                           ; BSR set to: 59
  5527                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5528                           ;incstack = 0
  5529  004E20  0EFE               	movlw	-2
  5530  004E22  006F FF8C  F047    	movff	plusw1,btemp+10
  5531  004E28  0EFF               	movlw	-1
  5532  004E2A  006F FF8C  F048    	movff	plusw1,btemp+11
  5533  004E30  0E42               	movlw	66
  5534  004E32  2447               	addwf	btemp+10,w,c
  5535  004E34  6ED9               	movwf	fsr2l,c
  5536  004E36  0E00               	movlw	0
  5537  004E38  2048               	addwfc	btemp+11,w,c
  5538  004E3A  6EDA               	movwf	fsr2h,c
  5539  004E3C  0E00               	movlw	0
  5540  004E3E  6EDF               	movwf	indf2,c
  5541                           
  5542                           ;ringbufs.c: 79:  _this->head = 0;
  5543                           ;stkvar	__this @ sp[(0)+-2]
  5544  004E40  0EFE               	movlw	-2
  5545  004E42  006F FF8C  F047    	movff	plusw1,btemp+10
  5546  004E48  0EFF               	movlw	-1
  5547  004E4A  006F FF8C  F048    	movff	plusw1,btemp+11
  5548  004E50  0E40               	movlw	64
  5549  004E52  2447               	addwf	btemp+10,w,c
  5550  004E54  6ED9               	movwf	fsr2l,c
  5551  004E56  0E00               	movlw	0
  5552  004E58  2048               	addwfc	btemp+11,w,c
  5553  004E5A  6EDA               	movwf	fsr2h,c
  5554  004E5C  0E00               	movlw	0
  5555  004E5E  6EDF               	movwf	indf2,c
  5556                           
  5557                           ;ringbufs.c: 80:  _this->tail = 0;
  5558                           ;stkvar	__this @ sp[(0)+-2]
  5559  004E60  0EFE               	movlw	-2
  5560  004E62  006F FF8C  F047    	movff	plusw1,btemp+10
  5561  004E68  0EFF               	movlw	-1
  5562  004E6A  006F FF8C  F048    	movff	plusw1,btemp+11
  5563  004E70  0E41               	movlw	65
  5564  004E72  2447               	addwf	btemp+10,w,c
  5565  004E74  6ED9               	movwf	fsr2l,c
  5566  004E76  0E00               	movlw	0
  5567  004E78  2048               	addwfc	btemp+11,w,c
  5568  004E7A  6EDA               	movwf	fsr2h,c
  5569  004E7C  0E00               	movlw	0
  5570  004E7E  6EDF               	movwf	indf2,c
  5571                           
  5572                           ;ringbufs.c: 81:  if (clearBuffer) {
  5573                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  5574  004E80  0EFD               	movlw	-3
  5575  004E82  50E3               	movf	plusw1,w,c
  5576  004E84  B4D8               	btfsc	status,2,c
  5577  004E86  D011               	goto	l1434
  5578                           
  5579                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  5580  004E88  0E40               	movlw	64
  5581  004E8A  6EE6               	movwf	postinc1,c
  5582  004E8C  0E00               	movlw	0
  5583  004E8E  6EE6               	movwf	postinc1,c
  5584  004E90  0E00               	movlw	0
  5585  004E92  6EE6               	movwf	postinc1,c
  5586  004E94  0E00               	movlw	0
  5587  004E96  6EE6               	movwf	postinc1,c
  5588                           
  5589                           ;stkvar	__this @ sp[(-4)+-2]
  5590  004E98  0EFA               	movlw	-6
  5591  004E9A  006F FF8F FFE6     	movff	plusw1,postinc1
  5592  004EA0  006F FF8F FFE6     	movff	plusw1,postinc1
  5593  004EA6  EC90  F017         	call	_memset	;wreg free
  5594  004EAA                     l1434:
  5595                           
  5596                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  5597  004EAA  52E5               	movf	postdec1,f,c
  5598  004EAC  52E5               	movf	postdec1,f,c
  5599  004EAE  52E5               	movf	postdec1,f,c
  5600  004EB0  0012               	return		;funcret
  5601  004EB2                     __end_of_ringBufS_flush:
  5602                           	opt callstack 0
  5603                           
  5604 ;; *************** function _memset *****************
  5605 ;; Defined at:
  5606 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  dest            2  [STACK] PTR void 
  5609 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5610 ;;  c               2  [STACK] int 
  5611 ;;  n               2  [STACK] unsigned int 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  s               2  [STACK] PTR unsigned char 
  5614 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5615 ;;  k               2  [STACK] unsigned int 
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  2  [STACK] PTR void 
  5618 ;; Registers used:
  5619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5629 ;;Total ram usage:        0 bytes
  5630 ;; Hardware stack levels used:    1
  5631 ;; Hardware stack levels required when called:    3
  5632 ;; This function calls:
  5633 ;;		Nothing
  5634 ;; This function is called by:
  5635 ;;		_ringBufS_init
  5636 ;;		_ringBufS_flush
  5637 ;; This function uses a reentrant model
  5638 ;;
  5639                           
  5640                           	psect	text30
  5641  002F20                     __ptext30:
  5642                           	opt callstack 0
  5643  002F20                     _memset:
  5644                           	opt callstack 0
  5645                           
  5646                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5647  002F20  52E6               	movf	postinc1,f,c
  5648  002F22  52E6               	movf	postinc1,f,c
  5649  002F24  52E6               	movf	postinc1,f,c
  5650  002F26  52E6               	movf	postinc1,f,c
  5651                           
  5652                           ;stkvar	_dest @ sp[(-4)+-2]
  5653                           
  5654                           ;incstack = 0
  5655  002F28  0EFA               	movlw	-6
  5656  002F2A  006F FF8C  F047    	movff	plusw1,btemp+10
  5657  002F30  0EFB               	movlw	-5
  5658  002F32  006F FF8C  F048    	movff	plusw1,btemp+11
  5659                           
  5660                           ;stkvar	_s @ sp[(-4)+0]
  5661  002F38  0EFD               	movlw	-3
  5662  002F3A  0060  F123  FFE3   	movff	btemp+11,plusw1
  5663  002F40  0EFC               	movlw	-4
  5664  002F42  0060  F11F  FFE3   	movff	btemp+10,plusw1
  5665                           
  5666                           ;stkvar	_n @ sp[(-4)+-6]
  5667  002F48  0EF6               	movlw	-10
  5668  002F4A  006F FF8C  F03D    	movff	plusw1,btemp
  5669  002F50  0EF7               	movlw	-9
  5670  002F52  50E3               	movf	plusw1,w,c
  5671  002F54  103D               	iorwf	btemp,w,c
  5672  002F56  B4D8               	btfsc	status,2,c
  5673  002F58  D154               	goto	u4620
  5674                           
  5675                           ;stkvar	_c @ sp[(-4)+-4]
  5676                           ;stkvar	_s @ sp[(-4)+0]
  5677  002F5A  0EFC               	movlw	-4
  5678  002F5C  006F FF8F FFD9     	movff	plusw1,fsr2l
  5679  002F62  0EFD               	movlw	-3
  5680  002F64  006F FF8F FFDA     	movff	plusw1,fsr2h
  5681  002F6A  0EF8               	movlw	-8
  5682  002F6C  006F FF8F FFDF     	movff	plusw1,indf2
  5683                           
  5684                           ;stkvar	_c @ sp[(-4)+-4]
  5685                           ;stkvar	_n @ sp[(-4)+-6]
  5686                           ;stkvar	_s @ sp[(-4)+0]
  5687  002F72  0EFC               	movlw	-4
  5688  002F74  006F FF8C  F047    	movff	plusw1,btemp+10
  5689  002F7A  0EFD               	movlw	-3
  5690  002F7C  006F FF8C  F048    	movff	plusw1,btemp+11
  5691  002F82  0EF6               	movlw	-10
  5692  002F84  50E3               	movf	plusw1,w,c
  5693  002F86  2647               	addwf	btemp+10,f,c
  5694  002F88  0EF7               	movlw	-9
  5695  002F8A  50E3               	movf	plusw1,w,c
  5696  002F8C  2248               	addwfc	btemp+11,f,c
  5697  002F8E  0EFF               	movlw	255
  5698  002F90  2447               	addwf	btemp+10,w,c
  5699  002F92  6ED9               	movwf	fsr2l,c
  5700  002F94  0EFF               	movlw	255
  5701  002F96  2048               	addwfc	btemp+11,w,c
  5702  002F98  6EDA               	movwf	fsr2h,c
  5703  002F9A  0EF8               	movlw	-8
  5704  002F9C  006F FF8F FFDF     	movff	plusw1,indf2
  5705                           
  5706                           ;stkvar	_n @ sp[(-4)+-6]
  5707  002FA2  0EF7               	movlw	-9
  5708  002FA4  50E3               	movf	plusw1,w,c
  5709  002FA6  E108               	bnz	l7353
  5710  002FA8  0EF6               	movlw	-10
  5711  002FAA  006F FF8C  F03D    	movff	plusw1,btemp
  5712  002FB0  0E03               	movlw	3
  5713  002FB2  5E3D               	subwf	btemp,f,c
  5714  002FB4  A0D8               	btfss	status,0,c
  5715  002FB6  D125               	goto	u4620
  5716  002FB8                     l7353:
  5717                           
  5718                           ;stkvar	_c @ sp[(-4)+-4]
  5719                           ;stkvar	_s @ sp[(-4)+0]
  5720  002FB8  0EFC               	movlw	-4
  5721  002FBA  006F FF8C  F047    	movff	plusw1,btemp+10
  5722  002FC0  0EFD               	movlw	-3
  5723  002FC2  006F FF8C  F048    	movff	plusw1,btemp+11
  5724  002FC8  0E01               	movlw	1
  5725  002FCA  2447               	addwf	btemp+10,w,c
  5726  002FCC  6ED9               	movwf	fsr2l,c
  5727  002FCE  0E00               	movlw	0
  5728  002FD0  2048               	addwfc	btemp+11,w,c
  5729  002FD2  6EDA               	movwf	fsr2h,c
  5730  002FD4  0EF8               	movlw	-8
  5731  002FD6  006F FF8F FFDF     	movff	plusw1,indf2
  5732                           
  5733                           ;stkvar	_c @ sp[(-4)+-4]
  5734                           ;stkvar	_s @ sp[(-4)+0]
  5735  002FDC  0EFC               	movlw	-4
  5736  002FDE  006F FF8C  F047    	movff	plusw1,btemp+10
  5737  002FE4  0EFD               	movlw	-3
  5738  002FE6  006F FF8C  F048    	movff	plusw1,btemp+11
  5739  002FEC  0E02               	movlw	2
  5740  002FEE  2447               	addwf	btemp+10,w,c
  5741  002FF0  6ED9               	movwf	fsr2l,c
  5742  002FF2  0E00               	movlw	0
  5743  002FF4  2048               	addwfc	btemp+11,w,c
  5744  002FF6  6EDA               	movwf	fsr2h,c
  5745  002FF8  0EF8               	movlw	-8
  5746  002FFA  006F FF8F FFDF     	movff	plusw1,indf2
  5747                           
  5748                           ;stkvar	_c @ sp[(-4)+-4]
  5749                           ;stkvar	_n @ sp[(-4)+-6]
  5750                           ;stkvar	_s @ sp[(-4)+0]
  5751  003000  0EFC               	movlw	-4
  5752  003002  006F FF8C  F047    	movff	plusw1,btemp+10
  5753  003008  0EFD               	movlw	-3
  5754  00300A  006F FF8C  F048    	movff	plusw1,btemp+11
  5755  003010  0EF6               	movlw	-10
  5756  003012  50E3               	movf	plusw1,w,c
  5757  003014  2647               	addwf	btemp+10,f,c
  5758  003016  0EF7               	movlw	-9
  5759  003018  50E3               	movf	plusw1,w,c
  5760  00301A  2248               	addwfc	btemp+11,f,c
  5761  00301C  0EFE               	movlw	254
  5762  00301E  2447               	addwf	btemp+10,w,c
  5763  003020  6ED9               	movwf	fsr2l,c
  5764  003022  0EFF               	movlw	255
  5765  003024  2048               	addwfc	btemp+11,w,c
  5766  003026  6EDA               	movwf	fsr2h,c
  5767  003028  0EF8               	movlw	-8
  5768  00302A  006F FF8F FFDF     	movff	plusw1,indf2
  5769                           
  5770                           ;stkvar	_c @ sp[(-4)+-4]
  5771                           ;stkvar	_n @ sp[(-4)+-6]
  5772                           ;stkvar	_s @ sp[(-4)+0]
  5773  003030  0EFC               	movlw	-4
  5774  003032  006F FF8C  F047    	movff	plusw1,btemp+10
  5775  003038  0EFD               	movlw	-3
  5776  00303A  006F FF8C  F048    	movff	plusw1,btemp+11
  5777  003040  0EF6               	movlw	-10
  5778  003042  50E3               	movf	plusw1,w,c
  5779  003044  2647               	addwf	btemp+10,f,c
  5780  003046  0EF7               	movlw	-9
  5781  003048  50E3               	movf	plusw1,w,c
  5782  00304A  2248               	addwfc	btemp+11,f,c
  5783  00304C  0EFD               	movlw	253
  5784  00304E  2447               	addwf	btemp+10,w,c
  5785  003050  6ED9               	movwf	fsr2l,c
  5786  003052  0EFF               	movlw	255
  5787  003054  2048               	addwfc	btemp+11,w,c
  5788  003056  6EDA               	movwf	fsr2h,c
  5789  003058  0EF8               	movlw	-8
  5790  00305A  006F FF8F FFDF     	movff	plusw1,indf2
  5791                           
  5792                           ;stkvar	_n @ sp[(-4)+-6]
  5793  003060  0EF7               	movlw	-9
  5794  003062  50E3               	movf	plusw1,w,c
  5795  003064  E108               	bnz	l7359
  5796  003066  0EF6               	movlw	-10
  5797  003068  006F FF8C  F03D    	movff	plusw1,btemp
  5798  00306E  0E07               	movlw	7
  5799  003070  5E3D               	subwf	btemp,f,c
  5800  003072  A0D8               	btfss	status,0,c
  5801  003074  D0C6               	goto	u4620
  5802  003076                     l7359:
  5803                           
  5804                           ;stkvar	_c @ sp[(-4)+-4]
  5805                           ;stkvar	_s @ sp[(-4)+0]
  5806  003076  0EFC               	movlw	-4
  5807  003078  006F FF8C  F047    	movff	plusw1,btemp+10
  5808  00307E  0EFD               	movlw	-3
  5809  003080  006F FF8C  F048    	movff	plusw1,btemp+11
  5810  003086  0E03               	movlw	3
  5811  003088  2447               	addwf	btemp+10,w,c
  5812  00308A  6ED9               	movwf	fsr2l,c
  5813  00308C  0E00               	movlw	0
  5814  00308E  2048               	addwfc	btemp+11,w,c
  5815  003090  6EDA               	movwf	fsr2h,c
  5816  003092  0EF8               	movlw	-8
  5817  003094  006F FF8F FFDF     	movff	plusw1,indf2
  5818                           
  5819                           ;stkvar	_c @ sp[(-4)+-4]
  5820                           ;stkvar	_n @ sp[(-4)+-6]
  5821                           ;stkvar	_s @ sp[(-4)+0]
  5822  00309A  0EFC               	movlw	-4
  5823  00309C  006F FF8C  F047    	movff	plusw1,btemp+10
  5824  0030A2  0EFD               	movlw	-3
  5825  0030A4  006F FF8C  F048    	movff	plusw1,btemp+11
  5826  0030AA  0EF6               	movlw	-10
  5827  0030AC  50E3               	movf	plusw1,w,c
  5828  0030AE  2647               	addwf	btemp+10,f,c
  5829  0030B0  0EF7               	movlw	-9
  5830  0030B2  50E3               	movf	plusw1,w,c
  5831  0030B4  2248               	addwfc	btemp+11,f,c
  5832  0030B6  0EFC               	movlw	252
  5833  0030B8  2447               	addwf	btemp+10,w,c
  5834  0030BA  6ED9               	movwf	fsr2l,c
  5835  0030BC  0EFF               	movlw	255
  5836  0030BE  2048               	addwfc	btemp+11,w,c
  5837  0030C0  6EDA               	movwf	fsr2h,c
  5838  0030C2  0EF8               	movlw	-8
  5839  0030C4  006F FF8F FFDF     	movff	plusw1,indf2
  5840                           
  5841                           ;stkvar	_n @ sp[(-4)+-6]
  5842  0030CA  0EF7               	movlw	-9
  5843  0030CC  50E3               	movf	plusw1,w,c
  5844  0030CE  E108               	bnz	l7365
  5845  0030D0  0EF6               	movlw	-10
  5846  0030D2  006F FF8C  F03D    	movff	plusw1,btemp
  5847  0030D8  0E09               	movlw	9
  5848  0030DA  5E3D               	subwf	btemp,f,c
  5849  0030DC  A0D8               	btfss	status,0,c
  5850  0030DE  D091               	goto	u4620
  5851  0030E0                     l7365:
  5852                           
  5853                           ;stkvar	_s @ sp[(-4)+0]
  5854  0030E0  0EFC               	movlw	-4
  5855  0030E2  006F FF8C  F047    	movff	plusw1,btemp+10
  5856  0030E8  1E47               	comf	btemp+10,f,c
  5857  0030EA  0EFD               	movlw	-3
  5858  0030EC  006F FF8C  F048    	movff	plusw1,btemp+11
  5859  0030F2  1E48               	comf	btemp+11,f,c
  5860  0030F4  2A47               	incf	btemp+10,f,c
  5861  0030F6  B4D8               	btfsc	status,2,c
  5862  0030F8  2A48               	incf	btemp+11,f,c
  5863  0030FA  0E03               	movlw	3
  5864  0030FC  1647               	andwf	btemp+10,f,c
  5865  0030FE  0E00               	movlw	0
  5866  003100  1648               	andwf	btemp+11,f,c
  5867                           
  5868                           ;stkvar	_k @ sp[(-4)+2]
  5869  003102  0EFE               	movlw	-2
  5870  003104  0060  F11F  FFE3   	movff	btemp+10,plusw1
  5871  00310A  0EFF               	movlw	-1
  5872  00310C  0060  F123  FFE3   	movff	btemp+11,plusw1
  5873                           
  5874                           ;stkvar	_k @ sp[(-4)+2]
  5875                           ;stkvar	_s @ sp[(-4)+0]
  5876  003112  0EFC               	movlw	-4
  5877  003114  50E3               	movf	plusw1,w,c
  5878  003116  6E3D               	movwf	btemp,c
  5879  003118  0EFE               	movlw	-2
  5880  00311A  50E3               	movf	plusw1,w,c
  5881  00311C  263D               	addwf	btemp,f,c
  5882  00311E  0EFC               	movlw	-4
  5883  003120  0060  F0F7  FFE3   	movff	btemp,plusw1
  5884  003126  0EFD               	movlw	-3
  5885  003128  50E3               	movf	plusw1,w,c
  5886  00312A  6E3D               	movwf	btemp,c
  5887  00312C  0EFF               	movlw	-1
  5888  00312E  50E3               	movf	plusw1,w,c
  5889  003130  223D               	addwfc	btemp,f,c
  5890  003132  0EFD               	movlw	-3
  5891  003134  0060  F0F7  FFE3   	movff	btemp,plusw1
  5892                           
  5893                           ;stkvar	_k @ sp[(-4)+2]
  5894                           ;stkvar	_n @ sp[(-4)+-6]
  5895  00313A  0EF6               	movlw	-10
  5896  00313C  50E3               	movf	plusw1,w,c
  5897  00313E  6E3D               	movwf	btemp,c
  5898  003140  0EFE               	movlw	-2
  5899  003142  50E3               	movf	plusw1,w,c
  5900  003144  5E3D               	subwf	btemp,f,c
  5901  003146  0EF6               	movlw	-10
  5902  003148  0060  F0F7  FFE3   	movff	btemp,plusw1
  5903  00314E  0EF7               	movlw	-9
  5904  003150  50E3               	movf	plusw1,w,c
  5905  003152  6E3D               	movwf	btemp,c
  5906  003154  0EFF               	movlw	-1
  5907  003156  50E3               	movf	plusw1,w,c
  5908  003158  5A3D               	subwfb	btemp,f,c
  5909  00315A  0EF7               	movlw	-9
  5910  00315C  0060  F0F7  FFE3   	movff	btemp,plusw1
  5911  003162  0EFC               	movlw	252
  5912  003164  6E47               	movwf	btemp+10,c
  5913  003166  0EFF               	movlw	255
  5914  003168  6E48               	movwf	btemp+11,c
  5915                           
  5916                           ;stkvar	_n @ sp[(-4)+-6]
  5917  00316A  0EF6               	movlw	-10
  5918  00316C  006F FF8C  F03D    	movff	plusw1,btemp
  5919  003172  5047               	movf	btemp+10,w,c
  5920  003174  163D               	andwf	btemp,f,c
  5921  003176  0EF6               	movlw	-10
  5922  003178  0060  F0F7  FFE3   	movff	btemp,plusw1
  5923  00317E  0EF7               	movlw	-9
  5924  003180  006F FF8C  F03D    	movff	plusw1,btemp
  5925  003186  5048               	movf	btemp+11,w,c
  5926  003188  163D               	andwf	btemp,f,c
  5927  00318A  0EF7               	movlw	-9
  5928  00318C  D02E               	goto	L18
  5929  00318E                     l7373:
  5930                           
  5931                           ;stkvar	_c @ sp[(-4)+-4]
  5932                           ;stkvar	_s @ sp[(-4)+0]
  5933  00318E  0EFC               	movlw	-4
  5934  003190  006F FF8F FFD9     	movff	plusw1,fsr2l
  5935  003196  0EFD               	movlw	-3
  5936  003198  006F FF8F FFDA     	movff	plusw1,fsr2h
  5937  00319E  0EF8               	movlw	-8
  5938  0031A0  006F FF8F FFDF     	movff	plusw1,indf2
  5939                           
  5940                           ;stkvar	_n @ sp[(-4)+-6]
  5941  0031A6  0EF6               	movlw	-10
  5942  0031A8  006F FF8C  F03D    	movff	plusw1,btemp
  5943  0031AE  0E01               	movlw	1
  5944  0031B0  5E3D               	subwf	btemp,f,c
  5945  0031B2  0EF6               	movlw	-10
  5946  0031B4  0060  F0F7  FFE3   	movff	btemp,plusw1
  5947  0031BA  0EF7               	movlw	-9
  5948  0031BC  006F FF8C  F03D    	movff	plusw1,btemp
  5949  0031C2  0E00               	movlw	0
  5950  0031C4  5A3D               	subwfb	btemp,f,c
  5951  0031C6  0EF7               	movlw	-9
  5952  0031C8  0060  F0F7  FFE3   	movff	btemp,plusw1
  5953                           
  5954                           ;stkvar	_s @ sp[(-4)+0]
  5955  0031CE  0EFC               	movlw	-4
  5956  0031D0  50E3               	movf	plusw1,w,c
  5957  0031D2  0F01               	addlw	1
  5958  0031D4  6E3D               	movwf	btemp,c
  5959  0031D6  0EFC               	movlw	-4
  5960  0031D8  0060  F0F7  FFE3   	movff	btemp,plusw1
  5961  0031DE  6A3D               	clrf	btemp,c
  5962  0031E0  0EFD               	movlw	-3
  5963  0031E2  50E3               	movf	plusw1,w,c
  5964  0031E4  203D               	addwfc	btemp,w,c
  5965  0031E6  6E3D               	movwf	btemp,c
  5966  0031E8  0EFD               	movlw	-3
  5967  0031EA                     L18:
  5968  0031EA  0060  F0F7  FFE3   	movff	btemp,plusw1
  5969                           
  5970                           ;stkvar	_n @ sp[(-4)+-6]
  5971  0031F0  0EF6               	movlw	-10
  5972  0031F2  006F FF8C  F03D    	movff	plusw1,btemp
  5973  0031F8  0EF7               	movlw	-9
  5974  0031FA  50E3               	movf	plusw1,w,c
  5975  0031FC  103D               	iorwf	btemp,w,c
  5976  0031FE  A4D8               	btfss	status,2,c
  5977  003200  D7C6               	goto	l7373
  5978  003202                     u4620:
  5979                           
  5980                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  5981  003202  0EF6               	movlw	246
  5982  003204  26E1               	addwf	fsr1l,f,c
  5983  003206  0EFF               	movlw	255
  5984  003208  22E2               	addwfc	fsr1h,f,c
  5985  00320A  0012               	return		;funcret
  5986  00320C                     __end_of_memset:
  5987                           	opt callstack 0
  5988                           
  5989 ;; *************** function _printf *****************
  5990 ;; Defined at:
  5991 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;  fmt             1  [STACK] PTR const unsigned char 
  5994 ;;		 -> STR_8(3), STR_7(3), STR_6(3), 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;  ap              2  [STACK] PTR void [1]
  5997 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5998 ;;  ret             2    0        int 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  2  [STACK] int 
  6001 ;; Registers used:
  6002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  6003 ;; Tracked objects:
  6004 ;;		On entry : 3F/3B
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6012 ;;Total ram usage:        0 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; Hardware stack levels required when called:   11
  6015 ;; This function calls:
  6016 ;;		_vfprintf
  6017 ;; This function is called by:
  6018 ;;		_eaDogM_WriteString
  6019 ;;		_send_lcd_cmd_dma
  6020 ;; This function uses a reentrant model
  6021 ;;
  6022                           
  6023                           	psect	text31
  6024  005260                     __ptext31:
  6025                           	opt callstack 0
  6026  005260                     _printf:
  6027                           	opt callstack 0
  6028                           
  6029                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6030  005260  52E6               	movf	postinc1,f,c
  6031  005262  52E6               	movf	postinc1,f,c
  6032                           
  6033                           ;stkvar	?_printf @ sp[(-2)+-3]
  6034                           
  6035                           ;incstack = 0
  6036  005264  0EFB               	movlw	251
  6037  005266  24E1               	addwf	fsr1l,w,c
  6038  005268  6E47               	movwf	btemp+10,c
  6039  00526A  0EFF               	movlw	255
  6040  00526C  20E2               	addwfc	fsr1h,w,c
  6041  00526E  6E48               	movwf	btemp+11,c
  6042  005270  0E01               	movlw	1
  6043  005272  2647               	addwf	btemp+10,f,c
  6044  005274  0E00               	movlw	0
  6045  005276  2248               	addwfc	btemp+11,f,c
  6046                           
  6047                           ;stkvar	_ap @ sp[(-2)+0]
  6048  005278  0EFF               	movlw	-1
  6049  00527A  0060  F123  FFE3   	movff	btemp+11,plusw1
  6050  005280  0EFE               	movlw	-2
  6051  005282  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6052                           
  6053                           ;stkvar	_ap @ sp[(-2)+0]
  6054  005288  0EFE               	movlw	254
  6055  00528A  24E1               	addwf	fsr1l,w,c
  6056  00528C  6E3D               	movwf	btemp,c
  6057  00528E  0EFF               	movlw	255
  6058  005290  20E2               	addwfc	fsr1h,w,c
  6059  005292  6E3E               	movwf	btemp+1,c
  6060  005294  0060  F0F7  FFE6   	movff	btemp,postinc1
  6061  00529A  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  6062                           
  6063                           ;stkvar	_fmt @ sp[(-4)+-2]
  6064  0052A0  0EFA               	movlw	-6
  6065  0052A2  50E3               	movf	plusw1,w,c
  6066  0052A4  6EE6               	movwf	postinc1,c
  6067  0052A6  0E00               	movlw	0
  6068  0052A8  6EE6               	movwf	postinc1,c
  6069  0052AA  0E00               	movlw	0
  6070  0052AC  6EE6               	movwf	postinc1,c
  6071  0052AE  ECC6  F026         	call	_vfprintf	;wreg free
  6072                           
  6073                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  6074  0052B2  52E5               	movf	postdec1,f,c
  6075  0052B4  52E5               	movf	postdec1,f,c
  6076  0052B6  52E5               	movf	postdec1,f,c
  6077  0052B8  50E7               	movf	indf1,w,c
  6078  0052BA  5EE1               	subwf	fsr1l,f,c
  6079  0052BC  0E00               	movlw	0
  6080  0052BE  5AE2               	subwfb	fsr1h,f,c
  6081  0052C0  0012               	return		;funcret
  6082  0052C2                     __end_of_printf:
  6083                           	opt callstack 0
  6084                           
  6085 ;; *************** function _vfprintf *****************
  6086 ;; Defined at:
  6087 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6090 ;;		 -> f(5), NULL(0), 
  6091 ;;  fmt             1  [STACK] PTR const unsigned char 
  6092 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(23), 
  6093 ;;		 -> STR_4(6), STR_3(14), STR_2(12), STR_1(61), 
  6094 ;;  ap              2  [STACK] PTR PTR void 
  6095 ;;		 -> ap(2), ap(2), 
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;  cfmt            1  [STACK] PTR unsigned char 
  6098 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(23), 
  6099 ;;		 -> STR_4(6), STR_3(14), STR_2(12), STR_1(61), 
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  2  [STACK] int 
  6102 ;; Registers used:
  6103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/1
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6113 ;;Total ram usage:        0 bytes
  6114 ;; Hardware stack levels used:    1
  6115 ;; Hardware stack levels required when called:   10
  6116 ;; This function calls:
  6117 ;;		_vfpfcnvrt
  6118 ;; This function is called by:
  6119 ;;		_sprintf
  6120 ;;		_printf
  6121 ;; This function uses a reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text32
  6125  004D8C                     __ptext32:
  6126                           	opt callstack 0
  6127  004D8C                     _vfprintf:
  6128                           	opt callstack 0
  6129                           
  6130                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6131  004D8C  52E6               	movf	postinc1,f,c
  6132                           
  6133                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6134                           ;stkvar	_fmt @ sp[(-1)+-3]
  6135                           
  6136                           ;incstack = 0
  6137  004D8E  0EFC               	movlw	-4
  6138  004D90  006F FF8C  F048    	movff	plusw1,btemp+11
  6139                           
  6140                           ;stkvar	_cfmt @ sp[(-1)+0]
  6141  004D96  0EFF               	movlw	-1
  6142  004D98  0060  F123  FFE3   	movff	btemp+11,plusw1
  6143                           
  6144                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6145  004D9E  6A22               	clrf	_nout,c
  6146  004DA0  6A23               	clrf	_nout+1,c
  6147                           
  6148                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6149  004DA2  D020               	goto	l7387
  6150  004DA4                     l7385:
  6151                           
  6152                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6153                           ;stkvar	_ap @ sp[(-1)+-5]
  6154  004DA4  0EFA               	movlw	-6
  6155  004DA6  006F FF8F FFE6     	movff	plusw1,postinc1
  6156  004DAC  006F FF8F FFE6     	movff	plusw1,postinc1
  6157                           
  6158                           ;stkvar	_cfmt @ sp[(-3)+0]
  6159  004DB2  0EFD               	movlw	253
  6160  004DB4  24E1               	addwf	fsr1l,w,c
  6161  004DB6  6E3D               	movwf	btemp,c
  6162  004DB8  0EFF               	movlw	255
  6163  004DBA  20E2               	addwfc	fsr1h,w,c
  6164  004DBC  6E3E               	movwf	btemp+1,c
  6165  004DBE  0060  F0F7  FFE6   	movff	btemp,postinc1
  6166  004DC4  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  6167                           
  6168                           ;stkvar	_fp @ sp[(-5)+-2]
  6169  004DCA  0EF9               	movlw	-7
  6170  004DCC  006F FF8F FFE6     	movff	plusw1,postinc1
  6171  004DD2  006F FF8F FFE6     	movff	plusw1,postinc1
  6172  004DD8  EC38  F010         	call	_vfpfcnvrt	;wreg free
  6173  004DDC  503D               	movf	btemp,w,c
  6174  004DDE  2622               	addwf	_nout,f,c
  6175  004DE0  503E               	movf	btemp+1,w,c
  6176  004DE2  2223               	addwfc	_nout+1,f,c
  6177  004DE4                     l7387:
  6178                           
  6179                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6180                           ;stkvar	_cfmt @ sp[(-1)+0]
  6181  004DE4  50E1               	movf	fsr1l,w,c
  6182  004DE6  0FFF               	addlw	-1
  6183  004DE8  6ED9               	movwf	fsr2l,c
  6184  004DEA  50E2               	movf	fsr1h,w,c
  6185  004DEC  6EDA               	movwf	fsr2h,c
  6186  004DEE  0EFF               	movlw	255
  6187  004DF0  22DA               	addwfc	fsr2h,f,c
  6188  004DF2  006F FF7F FFF6     	movff	indf2,tblptrl
  6189  004DF8                     	if	1	;There is more than 1 active tblptr byte
  6190  004DF8  0E20               	movlw	high __smallconst
  6191  004DFA  6EF7               	movwf	tblptrh,c
  6192  004DFC                     	endif
  6193  004DFC                     	if	0	;tblptru may be non-zero
  6194  004DFC                     	endif
  6195  004DFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6196  004DFC  0E00               	movlw	low (__smallconst shr (0+16))
  6197  004DFE  6EF8               	movwf	tblptru,c
  6198  004E00                     	endif
  6199  004E00  0008               	tblrd		*
  6200  004E02  50F5               	movf	tablat,w,c
  6201  004E04  0900               	iorlw	0
  6202  004E06  A4D8               	btfss	status,2,c
  6203  004E08  D7CD               	goto	l7385
  6204                           
  6205                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6206  004E0A  0060  F088  F03D   	movff	_nout,btemp
  6207  004E10  0060  F08C  F03E   	movff	_nout+1,btemp+1
  6208                           
  6209                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  6210  004E16  0EFA               	movlw	250
  6211  004E18  26E1               	addwf	fsr1l,f,c
  6212  004E1A  0EFF               	movlw	255
  6213  004E1C  22E2               	addwfc	fsr1h,f,c
  6214  004E1E  0012               	return		;funcret
  6215  004E20                     __end_of_vfprintf:
  6216                           	opt callstack 0
  6217                           
  6218 ;; *************** function _vfpfcnvrt *****************
  6219 ;; Defined at:
  6220 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6223 ;;		 -> f(5), NULL(0), 
  6224 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  6225 ;;		 -> cfmt(1), 
  6226 ;;  ap              2  [STACK] PTR PTR void 
  6227 ;;		 -> ap(2), ap(2), 
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;  llu             8  [STACK] unsigned long long 
  6230 ;;  ll              8  [STACK] long long 
  6231 ;;  f               4    0        long long 
  6232 ;;  vp              3    0        PTR void 
  6233 ;;  ct              3    0        unsigned char [3]
  6234 ;;  done            2  [STACK] int 
  6235 ;;  cp              2  [STACK] PTR unsigned char 
  6236 ;;		 -> ?_printf(2), ?_sprintf(2), V(80), 
  6237 ;;  i               2    0        int 
  6238 ;;  c               1  [STACK] unsigned char 
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  2  [STACK] int 
  6241 ;; Registers used:
  6242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/1
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6252 ;;Total ram usage:        0 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; Hardware stack levels required when called:    9
  6255 ;; This function calls:
  6256 ;;		_atoi
  6257 ;;		_ctoa
  6258 ;;		_dtoa
  6259 ;;		_fputc
  6260 ;;		_isdigit
  6261 ;;		_stoa
  6262 ;;		_xtoa
  6263 ;; This function is called by:
  6264 ;;		_vfprintf
  6265 ;; This function uses a reentrant model
  6266 ;;
  6267                           
  6268                           	psect	text33
  6269  002070                     __ptext33:
  6270                           	opt callstack 0
  6271  002070                     _vfpfcnvrt:
  6272                           	opt callstack 0
  6273                           
  6274                           ; autosize = 23, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6275  002070  0E17               	movlw	23
  6276  002072  26E1               	addwf	fsr1l,f,c
  6277  002074  0E00               	movlw	0
  6278  002076  22E2               	addwfc	fsr1h,f,c
  6279                           
  6280                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6281                           ;stkvar	_fmt @ sp[(-23)+-4]
  6282                           
  6283                           ;incstack = 0
  6284  002078  0EE5               	movlw	-27
  6285  00207A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6286  002080  0EE6               	movlw	-26
  6287  002082  006F FF8F FFDA     	movff	plusw1,fsr2h
  6288  002088  006F FF7F FFF6     	movff	indf2,tblptrl
  6289  00208E                     	if	1	;There is more than 1 active tblptr byte
  6290  00208E  0E20               	movlw	high __smallconst
  6291  002090  6EF7               	movwf	tblptrh,c
  6292  002092                     	endif
  6293  002092                     	if	0	;tblptru may be non-zero
  6294  002092                     	endif
  6295  002092                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6296  002092  0E00               	movlw	low (__smallconst shr (0+16))
  6297  002094  6EF8               	movwf	tblptru,c
  6298  002096                     	endif
  6299  002096  0008               	tblrd		*
  6300  002098  50F5               	movf	tablat,w,c
  6301  00209A  0A25               	xorlw	37
  6302  00209C  A4D8               	btfss	status,2,c
  6303  00209E  D327               	goto	l7327
  6304                           
  6305                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6306                           ;stkvar	_fmt @ sp[(-23)+-4]
  6307  0020A0  0EE5               	movlw	-27
  6308  0020A2  006F FF8F FFD9     	movff	plusw1,fsr2l
  6309  0020A8  0EE6               	movlw	-26
  6310  0020AA  006F FF8F FFDA     	movff	plusw1,fsr2h
  6311  0020B0  2ADF               	incf	indf2,f,c
  6312                           
  6313                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6314  0020B2  6A24               	clrf	_width,c
  6315  0020B4  6A25               	clrf	_width+1,c
  6316  0020B6  6A28               	clrf	_flags,c
  6317  0020B8  6A29               	clrf	_flags+1,c
  6318                           
  6319                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6320  0020BA  6826               	setf	_prec,c
  6321  0020BC  6827               	setf	_prec+1,c
  6322                           
  6323                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  6324                           ;stkvar	_done @ sp[(-23)+18]
  6325  0020BE  0EFB               	movlw	-5
  6326  0020C0  6AE3               	clrf	plusw1,c
  6327  0020C2  0EFC               	movlw	-4
  6328  0020C4  6AE3               	clrf	plusw1,c
  6329                           
  6330                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  6331  0020C6  D048               	goto	l7241
  6332  0020C8                     l7215:
  6333                           
  6334                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  6335  0020C8  8028               	bsf	_flags,0,c
  6336  0020CA                     l7217:
  6337                           
  6338                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  6339                           ;stkvar	_fmt @ sp[(-23)+-4]
  6340  0020CA  0EE5               	movlw	-27
  6341  0020CC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6342  0020D2  0EE6               	movlw	-26
  6343  0020D4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6344  0020DA  2ADF               	incf	indf2,f,c
  6345                           
  6346                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  6347  0020DC  D03D               	goto	l7241
  6348  0020DE                     l7219:
  6349                           
  6350                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  6351  0020DE  8228               	bsf	_flags,1,c
  6352  0020E0  D7F4               	goto	l7217
  6353  0020E2                     l7223:
  6354                           
  6355                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  6356  0020E2  8428               	bsf	_flags,2,c
  6357  0020E4  D7F2               	goto	l7217
  6358  0020E6                     l7227:
  6359                           
  6360                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  6361  0020E6  8628               	bsf	_flags,3,c
  6362  0020E8  D7F0               	goto	l7217
  6363  0020EA                     l7231:
  6364                           
  6365                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  6366  0020EA  8828               	bsf	_flags,4,c
  6367  0020EC  D7EE               	goto	l7217
  6368  0020EE                     l7235:
  6369                           
  6370                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  6371  0020EE  0E01               	movlw	1
  6372  0020F0  6E47               	movwf	btemp+10,c
  6373  0020F2  0E00               	movlw	0
  6374  0020F4  6E48               	movwf	btemp+11,c
  6375                           
  6376                           ;stkvar	_done @ sp[(-23)+18]
  6377  0020F6  0EFB               	movlw	-5
  6378  0020F8  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6379  0020FE  0EFC               	movlw	-4
  6380  002100  0060  F123  FFE3   	movff	btemp+11,plusw1
  6381                           
  6382                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  6383  002106  D028               	goto	l7241
  6384  002108                     l7239:
  6385                           
  6386                           ;stkvar	_fmt @ sp[(-23)+-4]
  6387  002108  0EE5               	movlw	-27
  6388  00210A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6389  002110  0EE6               	movlw	-26
  6390  002112  006F FF8F FFDA     	movff	plusw1,fsr2h
  6391  002118  006F FF7F FFF6     	movff	indf2,tblptrl
  6392  00211E                     	if	1	;There is more than 1 active tblptr byte
  6393  00211E  0E20               	movlw	high __smallconst
  6394  002120  6EF7               	movwf	tblptrh,c
  6395  002122                     	endif
  6396  002122                     	if	0	;tblptru may be non-zero
  6397  002122                     	endif
  6398  002122                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6399  002122  0E00               	movlw	low (__smallconst shr (0+16))
  6400  002124  6EF8               	movwf	tblptru,c
  6401  002126                     	endif
  6402  002126  0008               	tblrd		*
  6403  002128  50F5               	movf	tablat,w,c
  6404  00212A  6E47               	movwf	btemp+10,c
  6405  00212C  6A48               	clrf	btemp+11,c
  6406                           
  6407                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6408                           ; Switch size 1, requested type "simple"
  6409                           ; Number of cases is 1, Range of values is 0 to 0
  6410                           ; switch strategies available:
  6411                           ; Name         Instructions Cycles
  6412                           ; simple_byte            4     3 (average)
  6413                           ;	Chosen strategy is simple_byte
  6414  00212E  5048               	movf	btemp+11,w,c
  6415  002130  0A00               	xorlw	0	; case 0
  6416  002132  A4D8               	btfss	status,2,c
  6417  002134  D7DC               	goto	l7235
  6418                           
  6419                           ; Switch size 1, requested type "simple"
  6420                           ; Number of cases is 5, Range of values is 32 to 48
  6421                           ; switch strategies available:
  6422                           ; Name         Instructions Cycles
  6423                           ; simple_byte           16     9 (average)
  6424                           ;	Chosen strategy is simple_byte
  6425  002136  5047               	movf	btemp+10,w,c
  6426  002138  0A20               	xorlw	32	; case 32
  6427  00213A  B4D8               	btfsc	status,2,c
  6428  00213C  D7D4               	goto	l7227
  6429  00213E  0A03               	xorlw	3	; case 35
  6430  002140  B4D8               	btfsc	status,2,c
  6431  002142  D7D3               	goto	l7231
  6432  002144  0A08               	xorlw	8	; case 43
  6433  002146  B4D8               	btfsc	status,2,c
  6434  002148  D7CC               	goto	l7223
  6435  00214A  0A06               	xorlw	6	; case 45
  6436  00214C  B4D8               	btfsc	status,2,c
  6437  00214E  D7BC               	goto	l7215
  6438  002150  0A1D               	xorlw	29	; case 48
  6439  002152  B4D8               	btfsc	status,2,c
  6440  002154  D7C4               	goto	l7219
  6441  002156  D7CB               	goto	l7235
  6442  002158                     l7241:
  6443                           
  6444                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  6445                           ;stkvar	_done @ sp[(-23)+18]
  6446  002158  0EFB               	movlw	-5
  6447  00215A  006F FF8C  F03D    	movff	plusw1,btemp
  6448  002160  0EFC               	movlw	-4
  6449  002162  50E3               	movf	plusw1,w,c
  6450  002164  103D               	iorwf	btemp,w,c
  6451  002166  B4D8               	btfsc	status,2,c
  6452  002168  D7CF               	goto	l7239
  6453                           
  6454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  6455  00216A  B028               	btfsc	_flags,0,c
  6456                           
  6457                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  6458  00216C  9228               	bcf	_flags,1,c
  6459                           
  6460                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  6461                           ;stkvar	_fmt @ sp[(-23)+-4]
  6462  00216E  0EE5               	movlw	-27
  6463  002170  006F FF8F FFD9     	movff	plusw1,fsr2l
  6464  002176  0EE6               	movlw	-26
  6465  002178  006F FF8F FFDA     	movff	plusw1,fsr2h
  6466  00217E  006F FF7F FFF6     	movff	indf2,tblptrl
  6467  002184                     	if	1	;There is more than 1 active tblptr byte
  6468  002184  0E20               	movlw	high __smallconst
  6469  002186  6EF7               	movwf	tblptrh,c
  6470  002188                     	endif
  6471  002188                     	if	0	;tblptru may be non-zero
  6472  002188                     	endif
  6473  002188                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6474  002188  0E00               	movlw	low (__smallconst shr (0+16))
  6475  00218A  6EF8               	movwf	tblptru,c
  6476  00218C                     	endif
  6477  00218C  0008               	tblrd		*
  6478  00218E  50F5               	movf	tablat,w,c
  6479  002190  0A2A               	xorlw	42
  6480  002192  A4D8               	btfss	status,2,c
  6481  002194  D02F               	goto	l7255
  6482                           
  6483                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  6484                           ;stkvar	_fmt @ sp[(-23)+-4]
  6485  002196  0EE5               	movlw	-27
  6486  002198  006F FF8F FFD9     	movff	plusw1,fsr2l
  6487  00219E  0EE6               	movlw	-26
  6488  0021A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6489  0021A6  2ADF               	incf	indf2,f,c
  6490                           
  6491                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  6492                           ;stkvar	_ap @ sp[(-23)+-6]
  6493  0021A8  0EE3               	movlw	-29
  6494  0021AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  6495  0021B0  0EE4               	movlw	-28
  6496  0021B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  6497  0021B8  0E02               	movlw	2
  6498  0021BA  5EDE               	subwf	postinc2,f,c
  6499  0021BC  0E00               	movlw	0
  6500  0021BE  5ADD               	subwfb	postdec2,f,c
  6501  0021C0  006F FF78  F047    	movff	postinc2,btemp+10
  6502  0021C6  006F FF74  F048    	movff	postdec2,btemp+11
  6503  0021CC  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  6504  0021D2  0060  F123  FFDA   	movff	btemp+11,fsr2h
  6505  0021D8  006F FF78  F024    	movff	postinc2,_width
  6506  0021DE  006F FF74  F025    	movff	postdec2,_width+1
  6507                           
  6508                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  6509  0021E4  AE25               	btfss	_width+1,7,c
  6510  0021E6  D059               	goto	u4500
  6511                           
  6512                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  6513  0021E8  8028               	bsf	_flags,0,c
  6514                           
  6515                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  6516  0021EA  6C24               	negf	_width,c
  6517  0021EC  1E25               	comf	_width+1,f,c
  6518  0021EE  B0D8               	btfsc	status,0,c
  6519  0021F0  2A25               	incf	_width+1,f,c
  6520  0021F2  D053               	goto	u4500
  6521  0021F4                     l7255:
  6522                           
  6523                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  6524                           ;stkvar	_fmt @ sp[(-23)+-4]
  6525  0021F4  0EE5               	movlw	-27
  6526  0021F6  006F FF8F FFD9     	movff	plusw1,fsr2l
  6527  0021FC  0EE6               	movlw	-26
  6528  0021FE  006F FF8F FFDA     	movff	plusw1,fsr2h
  6529  002204  50DF               	movf	indf2,w,c
  6530  002206  6EE6               	movwf	postinc1,c
  6531  002208  EC4C  F01F         	call	_atoi	;wreg free
  6532  00220C  0060  F0F4  F024   	movff	btemp,_width
  6533  002212  0060  F0F8  F025   	movff	btemp+1,_width+1
  6534                           
  6535                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6536  002218  D009               	goto	l7259
  6537  00221A                     l7257:
  6538                           
  6539                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  6540                           ;stkvar	_fmt @ sp[(-23)+-4]
  6541  00221A  0EE5               	movlw	-27
  6542  00221C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6543  002222  0EE6               	movlw	-26
  6544  002224  006F FF8F FFDA     	movff	plusw1,fsr2h
  6545  00222A  2ADF               	incf	indf2,f,c
  6546  00222C                     l7259:
  6547  00222C  0ED0               	movlw	208
  6548  00222E  6E47               	movwf	btemp+10,c
  6549  002230  0EFF               	movlw	255
  6550  002232  6E48               	movwf	btemp+11,c
  6551                           
  6552                           ;stkvar	_fmt @ sp[(-23)+-4]
  6553  002234  0EE5               	movlw	-27
  6554  002236  006F FF8F FFD9     	movff	plusw1,fsr2l
  6555  00223C  0EE6               	movlw	-26
  6556  00223E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6557  002244  006F FF7F FFF6     	movff	indf2,tblptrl
  6558  00224A                     	if	1	;There is more than 1 active tblptr byte
  6559  00224A  0E20               	movlw	high __smallconst
  6560  00224C  6EF7               	movwf	tblptrh,c
  6561  00224E                     	endif
  6562  00224E                     	if	0	;tblptru may be non-zero
  6563  00224E                     	endif
  6564  00224E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6565  00224E  0E00               	movlw	low (__smallconst shr (0+16))
  6566  002250  6EF8               	movwf	tblptru,c
  6567  002252                     	endif
  6568  002252  0008               	tblrd		*
  6569  002254  50F5               	movf	tablat,w,c
  6570  002256  6E45               	movwf	btemp+8,c
  6571  002258  6A46               	clrf	btemp+9,c
  6572  00225A  5047               	movf	btemp+10,w,c
  6573  00225C  2645               	addwf	btemp+8,f,c
  6574  00225E  5048               	movf	btemp+11,w,c
  6575  002260  2246               	addwfc	btemp+9,f,c
  6576  002262  5046               	movf	btemp+9,w,c
  6577  002264  E106               	bnz	u4480
  6578  002266  0E0A               	movlw	10
  6579  002268  5C45               	subwf	btemp+8,w,c
  6580  00226A  B0D8               	btfsc	status,0,c
  6581  00226C  D002               	goto	u4480
  6582  00226E  0E01               	movlw	1
  6583  002270  D001               	goto	u4490
  6584  002272                     u4480:
  6585  002272  0E00               	movlw	0
  6586  002274                     u4490:
  6587  002274  6E47               	movwf	btemp+10,c
  6588  002276  6A48               	clrf	btemp+11,c
  6589                           
  6590                           ;stkvar	_vfpfcnvrt$3757 @ sp[(-23)+0]
  6591  002278  0EE9               	movlw	-23
  6592  00227A  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6593  002280  0EEA               	movlw	-22
  6594  002282  0060  F123  FFE3   	movff	btemp+11,plusw1
  6595                           
  6596                           ;stkvar	_vfpfcnvrt$3757 @ sp[(-23)+0]
  6597  002288  0EE9               	movlw	-23
  6598  00228A  006F FF8C  F03D    	movff	plusw1,btemp
  6599  002290  0EEA               	movlw	-22
  6600  002292  50E3               	movf	plusw1,w,c
  6601  002294  103D               	iorwf	btemp,w,c
  6602  002296  A4D8               	btfss	status,2,c
  6603  002298  D7C0               	goto	l7257
  6604  00229A                     u4500:
  6605                           
  6606                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  6607                           ;stkvar	_fmt @ sp[(-23)+-4]
  6608  00229A  0EE5               	movlw	-27
  6609  00229C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6610  0022A2  0EE6               	movlw	-26
  6611  0022A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6612  0022AA  006F FF7F FFF6     	movff	indf2,tblptrl
  6613  0022B0                     	if	1	;There is more than 1 active tblptr byte
  6614  0022B0  0E20               	movlw	high __smallconst
  6615  0022B2  6EF7               	movwf	tblptrh,c
  6616  0022B4                     	endif
  6617  0022B4                     	if	0	;tblptru may be non-zero
  6618  0022B4                     	endif
  6619  0022B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6620  0022B4  0E00               	movlw	low (__smallconst shr (0+16))
  6621  0022B6  6EF8               	movwf	tblptru,c
  6622  0022B8                     	endif
  6623  0022B8  0008               	tblrd		*
  6624  0022BA  50F5               	movf	tablat,w,c
  6625  0022BC  0A63               	xorlw	99
  6626  0022BE  A4D8               	btfss	status,2,c
  6627  0022C0  D034               	goto	l7275
  6628                           
  6629                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  6630                           ;stkvar	_fmt @ sp[(-23)+-4]
  6631  0022C2  0EE5               	movlw	-27
  6632  0022C4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6633  0022CA  0EE6               	movlw	-26
  6634  0022CC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6635  0022D2  2ADF               	incf	indf2,f,c
  6636                           
  6637                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6638                           ;stkvar	_ap @ sp[(-23)+-6]
  6639  0022D4  0EE3               	movlw	-29
  6640  0022D6  006F FF8F FFD9     	movff	plusw1,fsr2l
  6641  0022DC  0EE4               	movlw	-28
  6642  0022DE  006F FF8F FFDA     	movff	plusw1,fsr2h
  6643  0022E4  0E02               	movlw	2
  6644  0022E6  5EDE               	subwf	postinc2,f,c
  6645  0022E8  0E00               	movlw	0
  6646  0022EA  5ADD               	subwfb	postdec2,f,c
  6647  0022EC  006F FF78  F047    	movff	postinc2,btemp+10
  6648  0022F2  006F FF74  F048    	movff	postdec2,btemp+11
  6649  0022F8  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  6650  0022FE  0060  F123  FFDA   	movff	btemp+11,fsr2h
  6651  002304  50DF               	movf	indf2,w,c
  6652  002306  6E48               	movwf	btemp+11,c
  6653                           
  6654                           ;stkvar	_c @ sp[(-23)+22]
  6655  002308  0EFF               	movlw	-1
  6656  00230A  0060  F123  FFE3   	movff	btemp+11,plusw1
  6657                           
  6658                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  6659                           ;stkvar	_c @ sp[(-23)+22]
  6660  002310  0EFF               	movlw	-1
  6661  002312  50E3               	movf	plusw1,w,c
  6662  002314  6EE6               	movwf	postinc1,c
  6663                           
  6664                           ;stkvar	_fp @ sp[(-24)+-2]
  6665  002316  0EE6               	movlw	-26
  6666  002318  006F FF8F FFE6     	movff	plusw1,postinc1
  6667  00231E  006F FF8F FFE6     	movff	plusw1,postinc1
  6668  002324  EC9B  F027         	call	_ctoa	;wreg free
  6669  002328  D209               	goto	l1762
  6670  00232A                     l7275:
  6671                           
  6672                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  6673                           ;stkvar	_fmt @ sp[(-23)+-4]
  6674  00232A  0EE5               	movlw	-27
  6675  00232C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6676  002332  0EE6               	movlw	-26
  6677  002334  006F FF8F FFDA     	movff	plusw1,fsr2h
  6678  00233A  006F FF7F FFF6     	movff	indf2,tblptrl
  6679  002340                     	if	1	;There is more than 1 active tblptr byte
  6680  002340  0E20               	movlw	high __smallconst
  6681  002342  6EF7               	movwf	tblptrh,c
  6682  002344                     	endif
  6683  002344                     	if	0	;tblptru may be non-zero
  6684  002344                     	endif
  6685  002344                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6686  002344  0E00               	movlw	low (__smallconst shr (0+16))
  6687  002346  6EF8               	movwf	tblptru,c
  6688  002348                     	endif
  6689  002348  0008               	tblrd		*
  6690  00234A  50F5               	movf	tablat,w,c
  6691  00234C  0A64               	xorlw	100
  6692  00234E  B4D8               	btfsc	status,2,c
  6693  002350  D014               	goto	u4530
  6694                           
  6695                           ;stkvar	_fmt @ sp[(-23)+-4]
  6696  002352  0EE5               	movlw	-27
  6697  002354  006F FF8F FFD9     	movff	plusw1,fsr2l
  6698  00235A  0EE6               	movlw	-26
  6699  00235C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6700  002362  006F FF7F FFF6     	movff	indf2,tblptrl
  6701  002368                     	if	1	;There is more than 1 active tblptr byte
  6702  002368  0E20               	movlw	high __smallconst
  6703  00236A  6EF7               	movwf	tblptrh,c
  6704  00236C                     	endif
  6705  00236C                     	if	0	;tblptru may be non-zero
  6706  00236C                     	endif
  6707  00236C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6708  00236C  0E00               	movlw	low (__smallconst shr (0+16))
  6709  00236E  6EF8               	movwf	tblptru,c
  6710  002370                     	endif
  6711  002370  0008               	tblrd		*
  6712  002372  50F5               	movf	tablat,w,c
  6713  002374  0A69               	xorlw	105
  6714  002376  A4D8               	btfss	status,2,c
  6715  002378  D073               	goto	l7287
  6716  00237A                     u4530:
  6717                           
  6718                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  6719                           ;stkvar	_fmt @ sp[(-23)+-4]
  6720  00237A  0EE5               	movlw	-27
  6721  00237C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6722  002382  0EE6               	movlw	-26
  6723  002384  006F FF8F FFDA     	movff	plusw1,fsr2h
  6724  00238A  2ADF               	incf	indf2,f,c
  6725                           
  6726                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  6727                           ;stkvar	_ap @ sp[(-23)+-6]
  6728  00238C  0EE3               	movlw	-29
  6729  00238E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6730  002394  0EE4               	movlw	-28
  6731  002396  006F FF8F FFDA     	movff	plusw1,fsr2h
  6732  00239C  0E02               	movlw	2
  6733  00239E  5EDE               	subwf	postinc2,f,c
  6734  0023A0  0E00               	movlw	0
  6735  0023A2  5ADD               	subwfb	postdec2,f,c
  6736  0023A4  006F FF78  F047    	movff	postinc2,btemp+10
  6737  0023AA  006F FF74  F048    	movff	postdec2,btemp+11
  6738  0023B0  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  6739  0023B6  0060  F123  FFDA   	movff	btemp+11,fsr2h
  6740  0023BC  006F FF78  F047    	movff	postinc2,btemp+10
  6741  0023C2  006F FF74  F048    	movff	postdec2,btemp+11
  6742                           
  6743                           ;stkvar	_ll @ sp[(-23)+10]
  6744  0023C8  0EF3               	movlw	-13
  6745  0023CA  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6746  0023D0  0EF4               	movlw	-12
  6747  0023D2  0060  F123  FFE3   	movff	btemp+11,plusw1
  6748  0023D8  6A3D               	clrf	btemp,c
  6749  0023DA  BEE3               	btfsc	plusw1,7,c
  6750  0023DC  683D               	setf	btemp,c
  6751  0023DE  0EF5               	movlw	-11
  6752  0023E0  0060  F0F7  FFE3   	movff	btemp,plusw1
  6753  0023E6  0EF6               	movlw	-10
  6754  0023E8  0060  F0F7  FFE3   	movff	btemp,plusw1
  6755  0023EE  0EF7               	movlw	-9
  6756  0023F0  0060  F0F7  FFE3   	movff	btemp,plusw1
  6757  0023F6  0EF8               	movlw	-8
  6758  0023F8  0060  F0F7  FFE3   	movff	btemp,plusw1
  6759  0023FE  0EF9               	movlw	-7
  6760  002400  0060  F0F7  FFE3   	movff	btemp,plusw1
  6761  002406  0EFA               	movlw	-6
  6762  002408  0060  F0F7  FFE3   	movff	btemp,plusw1
  6763                           
  6764                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  6765                           ;stkvar	_ll @ sp[(-23)+10]
  6766  00240E  50E1               	movf	fsr1l,w,c
  6767  002410  0FF3               	addlw	-13
  6768  002412  6ED9               	movwf	fsr2l,c
  6769  002414  50E2               	movf	fsr1h,w,c
  6770  002416  6EDA               	movwf	fsr2h,c
  6771  002418  0EFF               	movlw	255
  6772  00241A  22DA               	addwfc	fsr2h,f,c
  6773  00241C  006F FF7B FFE6     	movff	postinc2,postinc1
  6774  002422  006F FF7B FFE6     	movff	postinc2,postinc1
  6775  002428  006F FF7B FFE6     	movff	postinc2,postinc1
  6776  00242E  006F FF7B FFE6     	movff	postinc2,postinc1
  6777  002434  006F FF7B FFE6     	movff	postinc2,postinc1
  6778  00243A  006F FF7B FFE6     	movff	postinc2,postinc1
  6779  002440  006F FF7B FFE6     	movff	postinc2,postinc1
  6780  002446  006F FF7B FFE6     	movff	postinc2,postinc1
  6781                           
  6782                           ;stkvar	_fp @ sp[(-31)+-2]
  6783  00244C  0EDF               	movlw	-33
  6784  00244E  006F FF8F FFE6     	movff	plusw1,postinc1
  6785  002454  006F FF8F FFE6     	movff	plusw1,postinc1
  6786  00245A  ECA3  F013         	call	_dtoa	;wreg free
  6787  00245E  D16E               	goto	l1762
  6788  002460                     l7287:
  6789                           
  6790                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  6791                           ;stkvar	_fmt @ sp[(-23)+-4]
  6792  002460  0EE5               	movlw	-27
  6793  002462  006F FF8F FFD9     	movff	plusw1,fsr2l
  6794  002468  0EE6               	movlw	-26
  6795  00246A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6796  002470  006F FF7F FFF6     	movff	indf2,tblptrl
  6797  002476                     	if	1	;There is more than 1 active tblptr byte
  6798  002476  0E20               	movlw	high __smallconst
  6799  002478  6EF7               	movwf	tblptrh,c
  6800  00247A                     	endif
  6801  00247A                     	if	0	;tblptru may be non-zero
  6802  00247A                     	endif
  6803  00247A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6804  00247A  0E00               	movlw	low (__smallconst shr (0+16))
  6805  00247C  6EF8               	movwf	tblptru,c
  6806  00247E                     	endif
  6807  00247E  0008               	tblrd		*
  6808  002480  50F5               	movf	tablat,w,c
  6809  002482  0A73               	xorlw	115
  6810  002484  A4D8               	btfss	status,2,c
  6811  002486  D040               	goto	l7297
  6812                           
  6813                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  6814                           ;stkvar	_fmt @ sp[(-23)+-4]
  6815  002488  0EE5               	movlw	-27
  6816  00248A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6817  002490  0EE6               	movlw	-26
  6818  002492  006F FF8F FFDA     	movff	plusw1,fsr2h
  6819  002498  2ADF               	incf	indf2,f,c
  6820                           
  6821                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  6822                           ;stkvar	_ap @ sp[(-23)+-6]
  6823  00249A  0EE3               	movlw	-29
  6824  00249C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6825  0024A2  0EE4               	movlw	-28
  6826  0024A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6827  0024AA  0E02               	movlw	2
  6828  0024AC  5EDE               	subwf	postinc2,f,c
  6829  0024AE  0E00               	movlw	0
  6830  0024B0  5ADD               	subwfb	postdec2,f,c
  6831  0024B2  006F FF78  F047    	movff	postinc2,btemp+10
  6832  0024B8  006F FF74  F048    	movff	postdec2,btemp+11
  6833  0024BE  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  6834  0024C4  0060  F123  FFDA   	movff	btemp+11,fsr2h
  6835  0024CA  006F FF78  F047    	movff	postinc2,btemp+10
  6836  0024D0  006F FF74  F048    	movff	postdec2,btemp+11
  6837                           
  6838                           ;stkvar	_cp @ sp[(-23)+20]
  6839  0024D6  0EFE               	movlw	-2
  6840  0024D8  0060  F123  FFE3   	movff	btemp+11,plusw1
  6841  0024DE  0EFD               	movlw	-3
  6842  0024E0  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6843                           
  6844                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  6845                           ;stkvar	_cp @ sp[(-23)+20]
  6846  0024E6  0EFD               	movlw	-3
  6847  0024E8  006F FF8F FFE6     	movff	plusw1,postinc1
  6848  0024EE  006F FF8F FFE6     	movff	plusw1,postinc1
  6849                           
  6850                           ;stkvar	_fp @ sp[(-25)+-2]
  6851  0024F4  0EE5               	movlw	-27
  6852  0024F6  006F FF8F FFE6     	movff	plusw1,postinc1
  6853  0024FC  006F FF8F FFE6     	movff	plusw1,postinc1
  6854  002502  EC5C  F01A         	call	_stoa	;wreg free
  6855  002506  D11A               	goto	l1762
  6856  002508                     l7297:
  6857                           
  6858                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  6859                           ;stkvar	_fmt @ sp[(-23)+-4]
  6860  002508  0EE5               	movlw	-27
  6861  00250A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6862  002510  0EE6               	movlw	-26
  6863  002512  006F FF8F FFDA     	movff	plusw1,fsr2h
  6864  002518  006F FF7F FFF6     	movff	indf2,tblptrl
  6865  00251E                     	if	1	;There is more than 1 active tblptr byte
  6866  00251E  0E20               	movlw	high __smallconst
  6867  002520  6EF7               	movwf	tblptrh,c
  6868  002522                     	endif
  6869  002522                     	if	0	;tblptru may be non-zero
  6870  002522                     	endif
  6871  002522                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6872  002522  0E00               	movlw	low (__smallconst shr (0+16))
  6873  002524  6EF8               	movwf	tblptru,c
  6874  002526                     	endif
  6875  002526  0008               	tblrd		*
  6876  002528  50F5               	movf	tablat,w,c
  6877  00252A  0A78               	xorlw	120
  6878  00252C  B4D8               	btfsc	status,2,c
  6879  00252E  D014               	goto	u4560
  6880                           
  6881                           ;stkvar	_fmt @ sp[(-23)+-4]
  6882  002530  0EE5               	movlw	-27
  6883  002532  006F FF8F FFD9     	movff	plusw1,fsr2l
  6884  002538  0EE6               	movlw	-26
  6885  00253A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6886  002540  006F FF7F FFF6     	movff	indf2,tblptrl
  6887  002546                     	if	1	;There is more than 1 active tblptr byte
  6888  002546  0E20               	movlw	high __smallconst
  6889  002548  6EF7               	movwf	tblptrh,c
  6890  00254A                     	endif
  6891  00254A                     	if	0	;tblptru may be non-zero
  6892  00254A                     	endif
  6893  00254A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6894  00254A  0E00               	movlw	low (__smallconst shr (0+16))
  6895  00254C  6EF8               	movwf	tblptru,c
  6896  00254E                     	endif
  6897  00254E  0008               	tblrd		*
  6898  002550  50F5               	movf	tablat,w,c
  6899  002552  0A58               	xorlw	88
  6900  002554  A4D8               	btfss	status,2,c
  6901  002556  D091               	goto	l7311
  6902  002558                     u4560:
  6903                           
  6904                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  6905                           ;stkvar	_fmt @ sp[(-23)+-4]
  6906  002558  0EE5               	movlw	-27
  6907  00255A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6908  002560  0EE6               	movlw	-26
  6909  002562  006F FF8F FFDA     	movff	plusw1,fsr2h
  6910  002568  006F FF7F FFF6     	movff	indf2,tblptrl
  6911  00256E                     	if	1	;There is more than 1 active tblptr byte
  6912  00256E  0E20               	movlw	high __smallconst
  6913  002570  6EF7               	movwf	tblptrh,c
  6914  002572                     	endif
  6915  002572                     	if	0	;tblptru may be non-zero
  6916  002572                     	endif
  6917  002572                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6918  002572  0E00               	movlw	low (__smallconst shr (0+16))
  6919  002574  6EF8               	movwf	tblptru,c
  6920  002576                     	endif
  6921                           
  6922                           ;stkvar	_c @ sp[(-23)+22]
  6923  002576  0008               	tblrd		*
  6924  002578  0EFF               	movlw	-1
  6925  00257A  006F FFD7 FFE3     	movff	tablat,plusw1
  6926                           
  6927                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  6928                           ;stkvar	_fmt @ sp[(-23)+-4]
  6929  002580  0EE5               	movlw	-27
  6930  002582  006F FF8F FFD9     	movff	plusw1,fsr2l
  6931  002588  0EE6               	movlw	-26
  6932  00258A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6933  002590  2ADF               	incf	indf2,f,c
  6934                           
  6935                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  6936                           ;stkvar	_ap @ sp[(-23)+-6]
  6937  002592  0EE3               	movlw	-29
  6938  002594  006F FF8F FFD9     	movff	plusw1,fsr2l
  6939  00259A  0EE4               	movlw	-28
  6940  00259C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6941  0025A2  0E02               	movlw	2
  6942  0025A4  5EDE               	subwf	postinc2,f,c
  6943  0025A6  0E00               	movlw	0
  6944  0025A8  5ADD               	subwfb	postdec2,f,c
  6945  0025AA  006F FF78  F047    	movff	postinc2,btemp+10
  6946  0025B0  006F FF74  F048    	movff	postdec2,btemp+11
  6947  0025B6  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  6948  0025BC  0060  F123  FFDA   	movff	btemp+11,fsr2h
  6949  0025C2  006F FF78  F047    	movff	postinc2,btemp+10
  6950  0025C8  006F FF74  F048    	movff	postdec2,btemp+11
  6951  0025CE  5047               	movf	btemp+10,w,c
  6952  0025D0  6E4D               	movwf	btemp+16,c
  6953  0025D2  5048               	movf	btemp+11,w,c
  6954  0025D4  6E4E               	movwf	btemp+17,c
  6955  0025D6  6A4F               	clrf	btemp+18,c
  6956  0025D8  6A50               	clrf	btemp+19,c
  6957  0025DA  6A51               	clrf	btemp+20,c
  6958  0025DC  6A52               	clrf	btemp+21,c
  6959  0025DE  6A53               	clrf	btemp+22,c
  6960  0025E0  6A54               	clrf	btemp+23,c
  6961                           
  6962                           ;stkvar	_llu @ sp[(-23)+2]
  6963  0025E2  0EEB               	movlw	-21
  6964  0025E4  0060  F137  FFE3   	movff	btemp+16,plusw1
  6965  0025EA  0EEC               	movlw	-20
  6966  0025EC  0060  F13B  FFE3   	movff	btemp+17,plusw1
  6967  0025F2  0EED               	movlw	-19
  6968  0025F4  0060  F13F  FFE3   	movff	btemp+18,plusw1
  6969  0025FA  0EEE               	movlw	-18
  6970  0025FC  0060  F143  FFE3   	movff	btemp+19,plusw1
  6971  002602  0EEF               	movlw	-17
  6972  002604  0060  F147  FFE3   	movff	btemp+20,plusw1
  6973  00260A  0EF0               	movlw	-16
  6974  00260C  0060  F14B  FFE3   	movff	btemp+21,plusw1
  6975  002612  0EF1               	movlw	-15
  6976  002614  0060  F14F  FFE3   	movff	btemp+22,plusw1
  6977  00261A  0EF2               	movlw	-14
  6978  00261C  0060  F153  FFE3   	movff	btemp+23,plusw1
  6979                           
  6980                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  6981                           ;stkvar	_c @ sp[(-23)+22]
  6982  002622  0EFF               	movlw	-1
  6983  002624  50E3               	movf	plusw1,w,c
  6984  002626  6EE6               	movwf	postinc1,c
  6985                           
  6986                           ;stkvar	_llu @ sp[(-24)+2]
  6987  002628  50E1               	movf	fsr1l,w,c
  6988  00262A  0FEA               	addlw	-22
  6989  00262C  6ED9               	movwf	fsr2l,c
  6990  00262E  50E2               	movf	fsr1h,w,c
  6991  002630  6EDA               	movwf	fsr2h,c
  6992  002632  0EFF               	movlw	255
  6993  002634  22DA               	addwfc	fsr2h,f,c
  6994  002636  006F FF7B FFE6     	movff	postinc2,postinc1
  6995  00263C  006F FF7B FFE6     	movff	postinc2,postinc1
  6996  002642  006F FF7B FFE6     	movff	postinc2,postinc1
  6997  002648  006F FF7B FFE6     	movff	postinc2,postinc1
  6998  00264E  006F FF7B FFE6     	movff	postinc2,postinc1
  6999  002654  006F FF7B FFE6     	movff	postinc2,postinc1
  7000  00265A  006F FF7B FFE6     	movff	postinc2,postinc1
  7001  002660  006F FF7B FFE6     	movff	postinc2,postinc1
  7002                           
  7003                           ;stkvar	_fp @ sp[(-32)+-2]
  7004  002666  0EDE               	movlw	-34
  7005  002668  006F FF8F FFE6     	movff	plusw1,postinc1
  7006  00266E  006F FF8F FFE6     	movff	plusw1,postinc1
  7007  002674  ECCE  F015         	call	_xtoa	;wreg free
  7008  002678  D061               	goto	l1762
  7009  00267A                     l7311:
  7010                           
  7011                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7012                           ;stkvar	_fmt @ sp[(-23)+-4]
  7013  00267A  0EE5               	movlw	-27
  7014  00267C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7015  002682  0EE6               	movlw	-26
  7016  002684  006F FF8F FFDA     	movff	plusw1,fsr2h
  7017  00268A  006F FF7F FFF6     	movff	indf2,tblptrl
  7018  002690                     	if	1	;There is more than 1 active tblptr byte
  7019  002690  0E20               	movlw	high __smallconst
  7020  002692  6EF7               	movwf	tblptrh,c
  7021  002694                     	endif
  7022  002694                     	if	0	;tblptru may be non-zero
  7023  002694                     	endif
  7024  002694                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7025  002694  0E00               	movlw	low (__smallconst shr (0+16))
  7026  002696  6EF8               	movwf	tblptru,c
  7027  002698                     	endif
  7028  002698  0008               	tblrd		*
  7029  00269A  50F5               	movf	tablat,w,c
  7030  00269C  0A25               	xorlw	37
  7031  00269E  A4D8               	btfss	status,2,c
  7032  0026A0  D018               	goto	l7321
  7033                           
  7034                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7035                           ;stkvar	_fmt @ sp[(-23)+-4]
  7036  0026A2  0EE5               	movlw	-27
  7037  0026A4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7038  0026AA  0EE6               	movlw	-26
  7039  0026AC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7040  0026B2  2ADF               	incf	indf2,f,c
  7041                           
  7042                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7043                           ;stkvar	_fp @ sp[(-23)+-2]
  7044  0026B4  0EE7               	movlw	-25
  7045  0026B6  006F FF8F FFE6     	movff	plusw1,postinc1
  7046  0026BC  006F FF8F FFE6     	movff	plusw1,postinc1
  7047  0026C2  0E25               	movlw	37
  7048  0026C4  6EE6               	movwf	postinc1,c
  7049  0026C6  0E00               	movlw	0
  7050  0026C8  6EE6               	movwf	postinc1,c
  7051  0026CA  ECD7  F022         	call	_fputc	;wreg free
  7052  0026CE                     l7317:
  7053                           
  7054                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7055  0026CE  0E01               	movlw	1
  7056  0026D0  D00A               	goto	L19
  7057  0026D2                     l7321:
  7058                           
  7059                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7060                           ;stkvar	_fmt @ sp[(-23)+-4]
  7061  0026D2  0EE5               	movlw	-27
  7062  0026D4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7063  0026DA  0EE6               	movlw	-26
  7064  0026DC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7065  0026E2  2ADF               	incf	indf2,f,c
  7066                           
  7067                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7068  0026E4  0E00               	movlw	0
  7069  0026E6                     L19:
  7070  0026E6  6E3D               	movwf	btemp,c
  7071  0026E8  0E00               	movlw	0
  7072  0026EA  6E3E               	movwf	btemp+1,c
  7073  0026EC  D027               	goto	l1762
  7074  0026EE                     l7327:
  7075                           
  7076                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7077                           ;stkvar	_fp @ sp[(-23)+-2]
  7078  0026EE  0EE7               	movlw	-25
  7079  0026F0  006F FF8F FFE6     	movff	plusw1,postinc1
  7080  0026F6  006F FF8F FFE6     	movff	plusw1,postinc1
  7081                           
  7082                           ;stkvar	_fmt @ sp[(-25)+-4]
  7083  0026FC  0EE3               	movlw	-29
  7084  0026FE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7085  002704  0EE4               	movlw	-28
  7086  002706  006F FF8F FFDA     	movff	plusw1,fsr2h
  7087  00270C  006F FF7F FFF6     	movff	indf2,tblptrl
  7088  002712                     	if	1	;There is more than 1 active tblptr byte
  7089  002712  0E20               	movlw	high __smallconst
  7090  002714  6EF7               	movwf	tblptrh,c
  7091  002716                     	endif
  7092  002716                     	if	0	;tblptru may be non-zero
  7093  002716                     	endif
  7094  002716                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7095  002716  0E00               	movlw	low (__smallconst shr (0+16))
  7096  002718  6EF8               	movwf	tblptru,c
  7097  00271A                     	endif
  7098  00271A  0008               	tblrd		*
  7099  00271C  50F5               	movf	tablat,w,c
  7100  00271E  6EE6               	movwf	postinc1,c
  7101  002720  0E00               	movlw	0
  7102  002722  6EE6               	movwf	postinc1,c
  7103  002724  ECD7  F022         	call	_fputc	;wreg free
  7104                           
  7105                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7106                           ;stkvar	_fmt @ sp[(-23)+-4]
  7107  002728  0EE5               	movlw	-27
  7108  00272A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7109  002730  0EE6               	movlw	-26
  7110  002732  006F FF8F FFDA     	movff	plusw1,fsr2h
  7111  002738  2ADF               	incf	indf2,f,c
  7112  00273A  D7C9               	goto	l7317
  7113  00273C                     l1762:
  7114                           
  7115                           ; _vfpfcnvrt: autosize = 23, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  7116  00273C  0EE3               	movlw	227
  7117  00273E  26E1               	addwf	fsr1l,f,c
  7118  002740  0EFF               	movlw	255
  7119  002742  22E2               	addwfc	fsr1h,f,c
  7120  002744  0012               	return		;funcret
  7121  002746                     __end_of_vfpfcnvrt:
  7122                           	opt callstack 0
  7123                           
  7124 ;; *************** function _xtoa *****************
  7125 ;; Defined at:
  7126 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7129 ;;		 -> f(5), NULL(0), 
  7130 ;;  d               8  [STACK] unsigned long long 
  7131 ;;  x               1  [STACK] unsigned char 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  n               8  [STACK] unsigned long long 
  7134 ;;  c               2  [STACK] int 
  7135 ;;  i               2  [STACK] int 
  7136 ;;  w               2  [STACK] int 
  7137 ;;  p               2  [STACK] int 
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  2  [STACK] int 
  7140 ;; Registers used:
  7141 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/1
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7151 ;;Total ram usage:        0 bytes
  7152 ;; Hardware stack levels used:    1
  7153 ;; Hardware stack levels required when called:    8
  7154 ;; This function calls:
  7155 ;;		_isalpha
  7156 ;;		_isupper
  7157 ;;		_pad
  7158 ;;		_toupper
  7159 ;; This function is called by:
  7160 ;;		_vfpfcnvrt
  7161 ;; This function uses a reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text34
  7165  002B9C                     __ptext34:
  7166                           	opt callstack 0
  7167  002B9C                     _xtoa:
  7168                           	opt callstack 0
  7169                           
  7170                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  7171  002B9C  0E14               	movlw	20
  7172  002B9E  26E1               	addwf	fsr1l,f,c
  7173  002BA0  0E00               	movlw	0
  7174  002BA2  22E2               	addwfc	fsr1h,f,c
  7175                           
  7176                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  7177                           
  7178                           ;incstack = 0
  7179  002BA4  AE27               	btfss	_prec+1,7,c
  7180                           
  7181                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  7182  002BA6  9228               	bcf	_flags,1,c
  7183                           
  7184                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  7185  002BA8  BE27               	btfsc	_prec+1,7,c
  7186  002BAA  D005               	goto	u4260
  7187  002BAC  5027               	movf	_prec+1,w,c
  7188  002BAE  E110               	bnz	l7141
  7189  002BB0  0426               	decf	_prec,w,c
  7190  002BB2  B0D8               	btfsc	status,0,c
  7191  002BB4  D00D               	goto	l7141
  7192  002BB6                     u4260:
  7193  002BB6  0E01               	movlw	1
  7194  002BB8  6E47               	movwf	btemp+10,c
  7195  002BBA  0E00               	movlw	0
  7196  002BBC  6E48               	movwf	btemp+11,c
  7197                           
  7198                           ;stkvar	_p @ sp[(-20)+18]
  7199  002BBE  0EFE               	movlw	-2
  7200  002BC0  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7201  002BC6  0EFF               	movlw	-1
  7202  002BC8  0060  F123  FFE3   	movff	btemp+11,plusw1
  7203  002BCE  D008               	goto	l1712
  7204  002BD0                     l7141:
  7205                           
  7206                           ;stkvar	_p @ sp[(-20)+18]
  7207  002BD0  0EFE               	movlw	-2
  7208  002BD2  0060  F09B  FFE3   	movff	_prec,plusw1
  7209  002BD8  0EFF               	movlw	-1
  7210  002BDA  0060  F09F  FFE3   	movff	_prec+1,plusw1
  7211  002BE0                     l1712:
  7212                           
  7213                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  7214                           ;stkvar	_w @ sp[(-20)+16]
  7215  002BE0  0EFC               	movlw	-4
  7216  002BE2  0060  F093  FFE3   	movff	_width,plusw1
  7217  002BE8  0EFD               	movlw	-3
  7218  002BEA  0060  F097  FFE3   	movff	_width+1,plusw1
  7219                           
  7220                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  7221  002BF0  A828               	btfss	_flags,4,c
  7222  002BF2  D00B               	goto	l7147
  7223                           
  7224                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  7225                           ;stkvar	_w @ sp[(-20)+16]
  7226  002BF4  50E1               	movf	fsr1l,w,c
  7227  002BF6  0FFC               	addlw	-4
  7228  002BF8  6ED9               	movwf	fsr2l,c
  7229  002BFA  50E2               	movf	fsr1h,w,c
  7230  002BFC  6EDA               	movwf	fsr2h,c
  7231  002BFE  0EFF               	movlw	255
  7232  002C00  22DA               	addwfc	fsr2h,f,c
  7233  002C02  0EFE               	movlw	254
  7234  002C04  26DE               	addwf	postinc2,f,c
  7235  002C06  0EFF               	movlw	255
  7236  002C08  22DD               	addwfc	postdec2,f,c
  7237  002C0A                     l7147:
  7238                           
  7239                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  7240                           ;stkvar	_d @ sp[(-20)+-10]
  7241  002C0A  0EE2               	movlw	226
  7242  002C0C  24E1               	addwf	fsr1l,w,c
  7243  002C0E  6ED9               	movwf	fsr2l,c
  7244  002C10  0EFF               	movlw	255
  7245  002C12  20E2               	addwfc	fsr1h,w,c
  7246  002C14  6EDA               	movwf	fsr2h,c
  7247                           
  7248                           ;stkvar	_n @ sp[(-20)+4]
  7249  002C16  0E08               	movlw	8
  7250  002C18  6E3D               	movwf	btemp,c
  7251  002C1A  0EF0               	movlw	-16
  7252  002C1C                     us428999:
  7253  002C1C  006F FF7B FFE3     	movff	postinc2,plusw1
  7254  002C22  28E8               	incf	wreg,w,c
  7255  002C24  2E3D               	decfsz	btemp,f,c
  7256  002C26  D7FA               	bra	us428999
  7257                           
  7258                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  7259  002C28  0E1F               	movlw	31
  7260  002C2A  6E47               	movwf	btemp+10,c
  7261  002C2C  0E00               	movlw	0
  7262  002C2E  6E48               	movwf	btemp+11,c
  7263                           
  7264                           ;stkvar	_i @ sp[(-20)+14]
  7265  002C30  0EFA               	movlw	-6
  7266  002C32  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7267  002C38  0EFB               	movlw	-5
  7268  002C3A  0060  F123  FFE3   	movff	btemp+11,plusw1
  7269                           
  7270                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  7271  002C40  0100               	movlb	0	; () banked
  7272  002C42  6BF8               	clrf	(_dbuf+31)& (0+255),b
  7273                           
  7274                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7275  002C44  D0E8               	goto	l7185
  7276  002C46                     l7153:
  7277                           
  7278                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  7279                           ;stkvar	_i @ sp[(-20)+14]
  7280  002C46  50E1               	movf	fsr1l,w,c
  7281  002C48  0FFA               	addlw	-6
  7282  002C4A  6ED9               	movwf	fsr2l,c
  7283  002C4C  50E2               	movf	fsr1h,w,c
  7284  002C4E  6EDA               	movwf	fsr2h,c
  7285  002C50  0EFF               	movlw	255
  7286  002C52  22DA               	addwfc	fsr2h,f,c
  7287  002C54  06DE               	decf	postinc2,f,c
  7288  002C56  0E00               	movlw	0
  7289  002C58  5ADD               	subwfb	postdec2,f,c
  7290                           
  7291                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  7292                           ;stkvar	_n @ sp[(-20)+4]
  7293  002C5A  0EF0               	movlw	-16
  7294  002C5C  006F FF8C  F047    	movff	plusw1,btemp+10
  7295  002C62  0EF1               	movlw	-15
  7296  002C64  006F FF8C  F048    	movff	plusw1,btemp+11
  7297  002C6A  0E0F               	movlw	15
  7298  002C6C  1647               	andwf	btemp+10,f,c
  7299  002C6E  0E00               	movlw	0
  7300  002C70  1648               	andwf	btemp+11,f,c
  7301                           
  7302                           ;stkvar	_c @ sp[(-20)+12]
  7303  002C72  0EF8               	movlw	-8
  7304  002C74  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7305  002C7A  0EF9               	movlw	-7
  7306  002C7C  0060  F123  FFE3   	movff	btemp+11,plusw1
  7307                           
  7308                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  7309                           ;stkvar	_c @ sp[(-20)+12]
  7310  002C82  0EF9               	movlw	-7
  7311  002C84  BEE3               	btfsc	plusw1,7,c
  7312  002C86  D00F               	goto	l7161
  7313  002C88  0EF9               	movlw	-7
  7314  002C8A  50E3               	movf	plusw1,w,c
  7315  002C8C  E108               	bnz	u4290
  7316  002C8E  0EF8               	movlw	-8
  7317  002C90  006F FF8C  F03D    	movff	plusw1,btemp
  7318  002C96  0E0A               	movlw	10
  7319  002C98  5E3D               	subwf	btemp,f,c
  7320  002C9A  A0D8               	btfss	status,0,c
  7321  002C9C  D004               	goto	l7161
  7322  002C9E                     u4290:
  7323                           
  7324                           ;stkvar	_c @ sp[(-20)+12]
  7325  002C9E  0EF8               	movlw	-8
  7326  002CA0  50E3               	movf	plusw1,w,c
  7327  002CA2  0F57               	addlw	87
  7328  002CA4  D003               	goto	L20
  7329  002CA6                     l7161:
  7330                           
  7331                           ;stkvar	_c @ sp[(-20)+12]
  7332  002CA6  0EF8               	movlw	-8
  7333  002CA8  50E3               	movf	plusw1,w,c
  7334  002CAA  0F30               	addlw	48
  7335  002CAC                     L20:
  7336  002CAC  6E47               	movwf	btemp+10,c
  7337  002CAE  0EF9               	movlw	-7
  7338  002CB0  006F FF8C  F048    	movff	plusw1,btemp+11
  7339  002CB6  0E00               	movlw	0
  7340  002CB8  2248               	addwfc	btemp+11,f,c
  7341                           
  7342                           ;stkvar	_c @ sp[(-20)+12]
  7343  002CBA  0EF8               	movlw	-8
  7344  002CBC  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7345  002CC2  0EF9               	movlw	-7
  7346  002CC4  0060  F123  FFE3   	movff	btemp+11,plusw1
  7347  002CCA  0EBF               	movlw	191
  7348  002CCC  6E47               	movwf	btemp+10,c
  7349  002CCE  0EFF               	movlw	255
  7350  002CD0  6E48               	movwf	btemp+11,c
  7351                           
  7352                           ;stkvar	_x @ sp[(-20)+-11]
  7353  002CD2  0EE1               	movlw	-31
  7354  002CD4  50E3               	movf	plusw1,w,c
  7355  002CD6  6E45               	movwf	btemp+8,c
  7356  002CD8  6A46               	clrf	btemp+9,c
  7357  002CDA  5047               	movf	btemp+10,w,c
  7358  002CDC  2645               	addwf	btemp+8,f,c
  7359  002CDE  5048               	movf	btemp+11,w,c
  7360  002CE0  2246               	addwfc	btemp+9,f,c
  7361  002CE2  5046               	movf	btemp+9,w,c
  7362  002CE4  E106               	bnz	u4300
  7363  002CE6  0E1A               	movlw	26
  7364  002CE8  5C45               	subwf	btemp+8,w,c
  7365  002CEA  B0D8               	btfsc	status,0,c
  7366  002CEC  D002               	goto	u4300
  7367  002CEE  0E01               	movlw	1
  7368  002CF0  D001               	goto	u4310
  7369  002CF2                     u4300:
  7370  002CF2  0E00               	movlw	0
  7371  002CF4                     u4310:
  7372  002CF4  6E47               	movwf	btemp+10,c
  7373  002CF6  6A48               	clrf	btemp+11,c
  7374                           
  7375                           ;stkvar	_xtoa$3742 @ sp[(-20)+2]
  7376  002CF8  0EEE               	movlw	-18
  7377  002CFA  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7378  002D00  0EEF               	movlw	-17
  7379  002D02  0060  F123  FFE3   	movff	btemp+11,plusw1
  7380                           
  7381                           ;stkvar	_xtoa$3742 @ sp[(-20)+2]
  7382  002D08  0EEE               	movlw	-18
  7383  002D0A  006F FF8C  F03D    	movff	plusw1,btemp
  7384  002D10  0EEF               	movlw	-17
  7385  002D12  50E3               	movf	plusw1,w,c
  7386  002D14  103D               	iorwf	btemp,w,c
  7387  002D16  B4D8               	btfsc	status,2,c
  7388  002D18  D041               	goto	l7177
  7389  002D1A  0E9F               	movlw	159
  7390  002D1C  6E47               	movwf	btemp+10,c
  7391  002D1E  0EFF               	movlw	255
  7392  002D20  6E48               	movwf	btemp+11,c
  7393                           
  7394                           ;stkvar	_c @ sp[(-20)+12]
  7395  002D22  0EF8               	movlw	-8
  7396  002D24  006F FF8C  F045    	movff	plusw1,btemp+8
  7397  002D2A  0EF9               	movlw	-7
  7398  002D2C  006F FF8C  F046    	movff	plusw1,btemp+9
  7399  002D32  0E20               	movlw	32
  7400  002D34  1245               	iorwf	btemp+8,f,c
  7401  002D36  0E00               	movlw	0
  7402  002D38  1246               	iorwf	btemp+9,f,c
  7403  002D3A  5047               	movf	btemp+10,w,c
  7404  002D3C  2645               	addwf	btemp+8,f,c
  7405  002D3E  5048               	movf	btemp+11,w,c
  7406  002D40  2246               	addwfc	btemp+9,f,c
  7407  002D42  5046               	movf	btemp+9,w,c
  7408  002D44  E106               	bnz	u4330
  7409  002D46  0E1A               	movlw	26
  7410  002D48  5C45               	subwf	btemp+8,w,c
  7411  002D4A  B0D8               	btfsc	status,0,c
  7412  002D4C  D002               	goto	u4330
  7413  002D4E  0E01               	movlw	1
  7414  002D50  D001               	goto	u4340
  7415  002D52                     u4330:
  7416  002D52  0E00               	movlw	0
  7417  002D54                     u4340:
  7418  002D54  6E47               	movwf	btemp+10,c
  7419  002D56  6A48               	clrf	btemp+11,c
  7420                           
  7421                           ;stkvar	_xtoa$3743 @ sp[(-20)+0]
  7422  002D58  0EEC               	movlw	-20
  7423  002D5A  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7424  002D60  0EED               	movlw	-19
  7425  002D62  0060  F123  FFE3   	movff	btemp+11,plusw1
  7426                           
  7427                           ;stkvar	_xtoa$3743 @ sp[(-20)+0]
  7428  002D68  0EEC               	movlw	-20
  7429  002D6A  006F FF8C  F03D    	movff	plusw1,btemp
  7430  002D70  0EED               	movlw	-19
  7431  002D72  50E3               	movf	plusw1,w,c
  7432  002D74  103D               	iorwf	btemp,w,c
  7433  002D76  B4D8               	btfsc	status,2,c
  7434  002D78  D011               	goto	l7177
  7435                           
  7436                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  7437                           ;stkvar	_c @ sp[(-20)+12]
  7438  002D7A  0EF8               	movlw	-8
  7439  002D7C  006F FF8F FFE6     	movff	plusw1,postinc1
  7440  002D82  006F FF8F FFE6     	movff	plusw1,postinc1
  7441  002D88  EC59  F027         	call	_toupper	;wreg free
  7442                           
  7443                           ;stkvar	_c @ sp[(-20)+12]
  7444  002D8C  0EF8               	movlw	-8
  7445  002D8E  0060  F0F7  FFE3   	movff	btemp,plusw1
  7446  002D94  0EF9               	movlw	-7
  7447  002D96  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  7448  002D9C                     l7177:
  7449                           
  7450                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  7451                           ;stkvar	_c @ sp[(-20)+12]
  7452                           ;stkvar	_i @ sp[(-20)+14]
  7453  002D9C  0EFA               	movlw	-6
  7454  002D9E  006F FF8C  F048    	movff	plusw1,btemp+11
  7455  002DA4  5048               	movf	btemp+11,w,c
  7456  002DA6  0FD9               	addlw	low _dbuf
  7457  002DA8  6ED9               	movwf	fsr2l,c
  7458  002DAA  6ADA               	clrf	fsr2h,c
  7459  002DAC  0EF8               	movlw	-8
  7460  002DAE  006F FF8F FFDF     	movff	plusw1,indf2
  7461                           
  7462                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  7463                           ;stkvar	_p @ sp[(-20)+18]
  7464  002DB4  50E1               	movf	fsr1l,w,c
  7465  002DB6  0FFE               	addlw	-2
  7466  002DB8  6ED9               	movwf	fsr2l,c
  7467  002DBA  50E2               	movf	fsr1h,w,c
  7468  002DBC  6EDA               	movwf	fsr2h,c
  7469  002DBE  0EFF               	movlw	255
  7470  002DC0  22DA               	addwfc	fsr2h,f,c
  7471  002DC2  06DE               	decf	postinc2,f,c
  7472  002DC4  0E00               	movlw	0
  7473  002DC6  5ADD               	subwfb	postdec2,f,c
  7474                           
  7475                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  7476                           ;stkvar	_w @ sp[(-20)+16]
  7477  002DC8  50E1               	movf	fsr1l,w,c
  7478  002DCA  0FFC               	addlw	-4
  7479  002DCC  6ED9               	movwf	fsr2l,c
  7480  002DCE  50E2               	movf	fsr1h,w,c
  7481  002DD0  6EDA               	movwf	fsr2h,c
  7482  002DD2  0EFF               	movlw	255
  7483  002DD4  22DA               	addwfc	fsr2h,f,c
  7484  002DD6  06DE               	decf	postinc2,f,c
  7485  002DD8  0E00               	movlw	0
  7486  002DDA  5ADD               	subwfb	postdec2,f,c
  7487                           
  7488                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  7489  002DDC  0E04               	movlw	4
  7490  002DDE  6E48               	movwf	btemp+11,c
  7491                           
  7492                           ;stkvar	_n @ sp[(-20)+4]
  7493  002DE0  50E1               	movf	fsr1l,w,c
  7494  002DE2  0FF0               	addlw	-16
  7495  002DE4  6ED9               	movwf	fsr2l,c
  7496  002DE6  50E2               	movf	fsr1h,w,c
  7497  002DE8  6EDA               	movwf	fsr2h,c
  7498  002DEA  0EFF               	movlw	255
  7499  002DEC  22DA               	addwfc	fsr2h,f,c
  7500  002DEE  2848               	incf	btemp+11,w,c
  7501  002DF0  52DE               	movf	postinc2,f,c
  7502  002DF2  D00F               	goto	u4360
  7503  002DF4                     u4365:
  7504  002DF4  52DE               	movf	postinc2,f,c
  7505  002DF6  52DE               	movf	postinc2,f,c
  7506  002DF8  52DE               	movf	postinc2,f,c
  7507  002DFA  52DE               	movf	postinc2,f,c
  7508  002DFC  52DE               	movf	postinc2,f,c
  7509  002DFE  52DE               	movf	postinc2,f,c
  7510  002E00  90D8               	bcf	status,0,c
  7511  002E02  32DD               	rrcf	postdec2,f,c
  7512  002E04  32DD               	rrcf	postdec2,f,c
  7513  002E06  32DD               	rrcf	postdec2,f,c
  7514  002E08  32DD               	rrcf	postdec2,f,c
  7515  002E0A  32DD               	rrcf	postdec2,f,c
  7516  002E0C  32DD               	rrcf	postdec2,f,c
  7517  002E0E  32DD               	rrcf	postdec2,f,c
  7518  002E10  32DE               	rrcf	postinc2,f,c
  7519  002E12                     u4360:
  7520  002E12  2EE8               	decfsz	wreg,f,c
  7521  002E14  D7EF               	goto	u4365
  7522  002E16                     l7185:
  7523                           
  7524                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7525                           ;stkvar	_i @ sp[(-20)+14]
  7526  002E16  0EFB               	movlw	-5
  7527  002E18  BEE3               	btfsc	plusw1,7,c
  7528  002E1A  D03A               	goto	u4410
  7529  002E1C  0EFB               	movlw	-5
  7530  002E1E  50E3               	movf	plusw1,w,c
  7531  002E20  E108               	bnz	u4370
  7532  002E22  0EFA               	movlw	-6
  7533  002E24  006F FF8C  F03D    	movff	plusw1,btemp
  7534  002E2A  0E02               	movlw	2
  7535  002E2C  5E3D               	subwf	btemp,f,c
  7536  002E2E  A0D8               	btfss	status,0,c
  7537  002E30  D02F               	goto	u4410
  7538  002E32                     u4370:
  7539                           
  7540                           ;stkvar	_n @ sp[(-20)+4]
  7541  002E32  0EF0               	movlw	-16
  7542  002E34  50E3               	movf	plusw1,w,c
  7543  002E36  E115               	bnz	u4381
  7544  002E38  0EF1               	movlw	-15
  7545  002E3A  50E3               	movf	plusw1,w,c
  7546  002E3C  E112               	bnz	u4381
  7547  002E3E  0EF2               	movlw	-14
  7548  002E40  50E3               	movf	plusw1,w,c
  7549  002E42  E10F               	bnz	u4381
  7550  002E44  0EF3               	movlw	-13
  7551  002E46  50E3               	movf	plusw1,w,c
  7552  002E48  E10C               	bnz	u4381
  7553  002E4A  0EF4               	movlw	-12
  7554  002E4C  50E3               	movf	plusw1,w,c
  7555  002E4E  E109               	bnz	u4381
  7556  002E50  0EF5               	movlw	-11
  7557  002E52  50E3               	movf	plusw1,w,c
  7558  002E54  E106               	bnz	u4381
  7559  002E56  0EF6               	movlw	-10
  7560  002E58  50E3               	movf	plusw1,w,c
  7561  002E5A  E103               	bnz	u4381
  7562  002E5C  0EF7               	movlw	-9
  7563  002E5E  50E3               	movf	plusw1,w,c
  7564  002E60  A4D8               	btfss	status,2,c
  7565  002E62                     u4381:
  7566  002E62  D6F1               	goto	l7153
  7567                           
  7568                           ;stkvar	_p @ sp[(-20)+18]
  7569  002E64  0EFF               	movlw	-1
  7570  002E66  BEE3               	btfsc	plusw1,7,c
  7571  002E68  D007               	goto	u4390
  7572  002E6A  0EFF               	movlw	-1
  7573  002E6C  50E3               	movf	plusw1,w,c
  7574  002E6E  E103               	bnz	u4391
  7575  002E70  0EFE               	movlw	-2
  7576  002E72  04E3               	decf	plusw1,w,c
  7577  002E74  B0D8               	btfsc	status,0,c
  7578  002E76                     u4391:
  7579  002E76  D6E7               	goto	l7153
  7580  002E78                     u4390:
  7581                           
  7582                           ;stkvar	_w @ sp[(-20)+16]
  7583  002E78  0EFD               	movlw	-3
  7584  002E7A  BEE3               	btfsc	plusw1,7,c
  7585  002E7C  D009               	goto	u4410
  7586  002E7E  0EFD               	movlw	-3
  7587  002E80  50E3               	movf	plusw1,w,c
  7588  002E82  E104               	bnz	u4400
  7589  002E84  0EFC               	movlw	-4
  7590  002E86  04E3               	decf	plusw1,w,c
  7591  002E88  A0D8               	btfss	status,0,c
  7592  002E8A  D002               	goto	u4410
  7593  002E8C                     u4400:
  7594  002E8C  B228               	btfsc	_flags,1,c
  7595  002E8E  D6DB               	goto	l7153
  7596  002E90                     u4410:
  7597                           
  7598                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  7599  002E90  A828               	btfss	_flags,4,c
  7600  002E92  D02A               	goto	l7201
  7601                           
  7602                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  7603                           ;stkvar	_i @ sp[(-20)+14]
  7604  002E94  50E1               	movf	fsr1l,w,c
  7605  002E96  0FFA               	addlw	-6
  7606  002E98  6ED9               	movwf	fsr2l,c
  7607  002E9A  50E2               	movf	fsr1h,w,c
  7608  002E9C  6EDA               	movwf	fsr2h,c
  7609  002E9E  0EFF               	movlw	255
  7610  002EA0  22DA               	addwfc	fsr2h,f,c
  7611  002EA2  06DE               	decf	postinc2,f,c
  7612  002EA4  0E00               	movlw	0
  7613  002EA6  5ADD               	subwfb	postdec2,f,c
  7614                           
  7615                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  7616                           ;stkvar	_x @ sp[(-20)+-11]
  7617                           ;stkvar	_i @ sp[(-20)+14]
  7618  002EA8  0EFA               	movlw	-6
  7619  002EAA  006F FF8C  F048    	movff	plusw1,btemp+11
  7620  002EB0  5048               	movf	btemp+11,w,c
  7621  002EB2  0FD9               	addlw	low _dbuf
  7622  002EB4  6ED9               	movwf	fsr2l,c
  7623  002EB6  6ADA               	clrf	fsr2h,c
  7624  002EB8  0EE1               	movlw	-31
  7625  002EBA  006F FF8F FFDF     	movff	plusw1,indf2
  7626                           
  7627                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  7628                           ;stkvar	_i @ sp[(-20)+14]
  7629  002EC0  50E1               	movf	fsr1l,w,c
  7630  002EC2  0FFA               	addlw	-6
  7631  002EC4  6ED9               	movwf	fsr2l,c
  7632  002EC6  50E2               	movf	fsr1h,w,c
  7633  002EC8  6EDA               	movwf	fsr2h,c
  7634  002ECA  0EFF               	movlw	255
  7635  002ECC  22DA               	addwfc	fsr2h,f,c
  7636  002ECE  06DE               	decf	postinc2,f,c
  7637  002ED0  0E00               	movlw	0
  7638  002ED2  5ADD               	subwfb	postdec2,f,c
  7639                           
  7640                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  7641                           ;stkvar	_i @ sp[(-20)+14]
  7642  002ED4  0EFA               	movlw	-6
  7643  002ED6  006F FF8C  F048    	movff	plusw1,btemp+11
  7644  002EDC  5048               	movf	btemp+11,w,c
  7645  002EDE  0FD9               	addlw	low _dbuf
  7646  002EE0  6ED9               	movwf	fsr2l,c
  7647  002EE2  6ADA               	clrf	fsr2h,c
  7648  002EE4  0E30               	movlw	48
  7649  002EE6  6EDF               	movwf	indf2,c
  7650  002EE8                     l7201:
  7651                           
  7652                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  7653                           ;stkvar	_w @ sp[(-20)+16]
  7654  002EE8  0EFC               	movlw	-4
  7655  002EEA  006F FF8F FFE6     	movff	plusw1,postinc1
  7656  002EF0  006F FF8F FFE6     	movff	plusw1,postinc1
  7657                           
  7658                           ;stkvar	_i @ sp[(-22)+14]
  7659  002EF6  0EF8               	movlw	-8
  7660  002EF8  006F FF8C  F048    	movff	plusw1,btemp+11
  7661  002EFE  5048               	movf	btemp+11,w,c
  7662  002F00  0FD9               	addlw	low _dbuf
  7663  002F02  6EE6               	movwf	postinc1,c
  7664                           
  7665                           ;stkvar	_fp @ sp[(-23)+-2]
  7666  002F04  0EE7               	movlw	-25
  7667  002F06  006F FF8F FFE6     	movff	plusw1,postinc1
  7668  002F0C  006F FF8F FFE6     	movff	plusw1,postinc1
  7669  002F12  EC5D  F023         	call	_pad	;wreg free
  7670                           
  7671                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  7672  002F16  0EE1               	movlw	225
  7673  002F18  26E1               	addwf	fsr1l,f,c
  7674  002F1A  0EFF               	movlw	255
  7675  002F1C  22E2               	addwfc	fsr1h,f,c
  7676  002F1E  0012               	return		;funcret
  7677  002F20                     __end_of_xtoa:
  7678                           	opt callstack 0
  7679                           
  7680 ;; *************** function _toupper *****************
  7681 ;; Defined at:
  7682 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  7683 ;; Parameters:    Size  Location     Type
  7684 ;;  c               2  [STACK] int 
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;		None
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  2  [STACK] int 
  7689 ;; Registers used:
  7690 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7700 ;;Total ram usage:        0 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; Hardware stack levels required when called:    4
  7703 ;; This function calls:
  7704 ;;		_islower
  7705 ;; This function is called by:
  7706 ;;		_xtoa
  7707 ;; This function uses a reentrant model
  7708 ;;
  7709                           
  7710                           	psect	text35
  7711  004EB2                     __ptext35:
  7712                           	opt callstack 0
  7713  004EB2                     _toupper:
  7714                           	opt callstack 0
  7715                           
  7716                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7717  004EB2  52E6               	movf	postinc1,f,c
  7718  004EB4  52E6               	movf	postinc1,f,c
  7719                           
  7720                           ;stkvar	_c @ sp[(-2)+-2]
  7721                           
  7722                           ;incstack = 0
  7723  004EB6  0EFC               	movlw	-4
  7724  004EB8  50E3               	movf	plusw1,w,c
  7725  004EBA  0F9F               	addlw	159
  7726  004EBC  6E47               	movwf	btemp+10,c
  7727  004EBE  0EFD               	movlw	-3
  7728  004EC0  006F FF8C  F048    	movff	plusw1,btemp+11
  7729  004EC6  0EFF               	movlw	255
  7730  004EC8  2248               	addwfc	btemp+11,f,c
  7731  004ECA  5048               	movf	btemp+11,w,c
  7732  004ECC  E106               	bnz	u2190
  7733  004ECE  0E1A               	movlw	26
  7734  004ED0  5C47               	subwf	btemp+10,w,c
  7735  004ED2  B0D8               	btfsc	status,0,c
  7736  004ED4  D002               	goto	u2190
  7737  004ED6  0E01               	movlw	1
  7738  004ED8  D001               	goto	u2200
  7739  004EDA                     u2190:
  7740  004EDA  0E00               	movlw	0
  7741  004EDC                     u2200:
  7742  004EDC  6E47               	movwf	btemp+10,c
  7743  004EDE  6A48               	clrf	btemp+11,c
  7744                           
  7745                           ;stkvar	_toupper$4332 @ sp[(-2)+0]
  7746  004EE0  0EFE               	movlw	-2
  7747  004EE2  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7748  004EE8  0EFF               	movlw	-1
  7749  004EEA  0060  F123  FFE3   	movff	btemp+11,plusw1
  7750                           
  7751                           ;stkvar	_toupper$4332 @ sp[(-2)+0]
  7752  004EF0  0EFE               	movlw	-2
  7753  004EF2  006F FF8C  F03D    	movff	plusw1,btemp
  7754  004EF8  0EFF               	movlw	-1
  7755  004EFA  50E3               	movf	plusw1,w,c
  7756  004EFC  103D               	iorwf	btemp,w,c
  7757  004EFE  B4D8               	btfsc	status,2,c
  7758  004F00  D00D               	goto	l4921
  7759                           
  7760                           ;stkvar	_c @ sp[(-2)+-2]
  7761  004F02  0EFC               	movlw	-4
  7762  004F04  006F FF8C  F03D    	movff	plusw1,btemp
  7763  004F0A  0EFD               	movlw	-3
  7764  004F0C  006F FF8C  F03E    	movff	plusw1,btemp+1
  7765  004F12  0E5F               	movlw	95
  7766  004F14  163D               	andwf	btemp,f,c
  7767  004F16  0E00               	movlw	0
  7768  004F18  163E               	andwf	btemp+1,f,c
  7769  004F1A  D008               	goto	l2574
  7770  004F1C                     l4921:
  7771                           
  7772                           ;stkvar	_c @ sp[(-2)+-2]
  7773  004F1C  0EFC               	movlw	-4
  7774  004F1E  006F FF8C  F03D    	movff	plusw1,btemp
  7775  004F24  0EFD               	movlw	-3
  7776  004F26  006F FF8C  F03E    	movff	plusw1,btemp+1
  7777  004F2C                     l2574:
  7778                           
  7779                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  7780  004F2C  52E5               	movf	postdec1,f,c
  7781  004F2E  52E5               	movf	postdec1,f,c
  7782  004F30  52E5               	movf	postdec1,f,c
  7783  004F32  52E5               	movf	postdec1,f,c
  7784  004F34  0012               	return		;funcret
  7785  004F36                     __end_of_toupper:
  7786                           	opt callstack 0
  7787                           
  7788 ;; *************** function _islower *****************
  7789 ;; Defined at:
  7790 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;  c               2  [STACK] int 
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;		None
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  2  [STACK] int 
  7797 ;; Registers used:
  7798 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7808 ;;Total ram usage:        0 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; Hardware stack levels required when called:    3
  7811 ;; This function calls:
  7812 ;;		Nothing
  7813 ;; This function is called by:
  7814 ;;		_toupper
  7815 ;; This function uses a reentrant model
  7816 ;;
  7817                           
  7818                           	psect	text36
  7819  005742                     __ptext36:
  7820                           	opt callstack 0
  7821  005742                     _islower:
  7822                           	opt callstack 22
  7823                           
  7824                           ;stkvar	_c @ sp[(0)+-2]
  7825                           
  7826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7827                           ;incstack = 0
  7828  005742  0EFE               	movlw	-2
  7829  005744  50E3               	movf	plusw1,w,c
  7830  005746  0F9F               	addlw	159
  7831  005748  6E47               	movwf	btemp+10,c
  7832  00574A  0EFF               	movlw	-1
  7833  00574C  006F FF8C  F048    	movff	plusw1,btemp+11
  7834  005752  0EFF               	movlw	255
  7835  005754  2248               	addwfc	btemp+11,f,c
  7836  005756  5048               	movf	btemp+11,w,c
  7837  005758  E106               	bnz	u2080
  7838  00575A  0E1A               	movlw	26
  7839  00575C  5C47               	subwf	btemp+10,w,c
  7840  00575E  B0D8               	btfsc	status,0,c
  7841  005760  D002               	goto	u2080
  7842  005762  0E01               	movlw	1
  7843  005764  D001               	goto	u2090
  7844  005766                     u2080:
  7845  005766  0E00               	movlw	0
  7846  005768                     u2090:
  7847  005768  6E3D               	movwf	btemp,c
  7848  00576A  6A3E               	clrf	btemp+1,c
  7849                           
  7850                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  7851  00576C  52E5               	movf	postdec1,f,c
  7852  00576E  52E5               	movf	postdec1,f,c
  7853  005770  0012               	return		;funcret
  7854  005772                     __end_of_islower:
  7855                           	opt callstack 0
  7856                           
  7857 ;; *************** function _isupper *****************
  7858 ;; Defined at:
  7859 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;  c               2  [STACK] int 
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;		None
  7864 ;; Return value:  Size  Location     Type
  7865 ;;                  2  [STACK] int 
  7866 ;; Registers used:
  7867 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  7868 ;; Tracked objects:
  7869 ;;		On entry : 0/0
  7870 ;;		On exit  : 0/0
  7871 ;;		Unchanged: 0/0
  7872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7877 ;;Total ram usage:        0 bytes
  7878 ;; Hardware stack levels used:    1
  7879 ;; Hardware stack levels required when called:    3
  7880 ;; This function calls:
  7881 ;;		Nothing
  7882 ;; This function is called by:
  7883 ;;		_xtoa
  7884 ;; This function uses a reentrant model
  7885 ;;
  7886                           
  7887                           	psect	text37
  7888  005772                     __ptext37:
  7889                           	opt callstack 0
  7890  005772                     _isupper:
  7891                           	opt callstack 23
  7892                           
  7893                           ;stkvar	_c @ sp[(0)+-2]
  7894                           
  7895                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7896                           ;incstack = 0
  7897  005772  0EFE               	movlw	-2
  7898  005774  50E3               	movf	plusw1,w,c
  7899  005776  0FBF               	addlw	191
  7900  005778  6E47               	movwf	btemp+10,c
  7901  00577A  0EFF               	movlw	-1
  7902  00577C  006F FF8C  F048    	movff	plusw1,btemp+11
  7903  005782  0EFF               	movlw	255
  7904  005784  2248               	addwfc	btemp+11,f,c
  7905  005786  5048               	movf	btemp+11,w,c
  7906  005788  E106               	bnz	u2150
  7907  00578A  0E1A               	movlw	26
  7908  00578C  5C47               	subwf	btemp+10,w,c
  7909  00578E  B0D8               	btfsc	status,0,c
  7910  005790  D002               	goto	u2150
  7911  005792  0E01               	movlw	1
  7912  005794  D001               	goto	u2160
  7913  005796                     u2150:
  7914  005796  0E00               	movlw	0
  7915  005798                     u2160:
  7916  005798  6E3D               	movwf	btemp,c
  7917  00579A  6A3E               	clrf	btemp+1,c
  7918                           
  7919                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  7920  00579C  52E5               	movf	postdec1,f,c
  7921  00579E  52E5               	movf	postdec1,f,c
  7922  0057A0  0012               	return		;funcret
  7923  0057A2                     __end_of_isupper:
  7924                           	opt callstack 0
  7925                           
  7926 ;; *************** function _isalpha *****************
  7927 ;; Defined at:
  7928 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  7929 ;; Parameters:    Size  Location     Type
  7930 ;;  c               2  [STACK] int 
  7931 ;; Auto vars:     Size  Location     Type
  7932 ;;		None
  7933 ;; Return value:  Size  Location     Type
  7934 ;;                  2  [STACK] int 
  7935 ;; Registers used:
  7936 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  7937 ;; Tracked objects:
  7938 ;;		On entry : 0/0
  7939 ;;		On exit  : 0/0
  7940 ;;		Unchanged: 0/0
  7941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7946 ;;Total ram usage:        0 bytes
  7947 ;; Hardware stack levels used:    1
  7948 ;; Hardware stack levels required when called:    3
  7949 ;; This function calls:
  7950 ;;		Nothing
  7951 ;; This function is called by:
  7952 ;;		_xtoa
  7953 ;; This function uses a reentrant model
  7954 ;;
  7955                           
  7956                           	psect	text38
  7957  005586                     __ptext38:
  7958                           	opt callstack 0
  7959  005586                     _isalpha:
  7960                           	opt callstack 23
  7961                           
  7962                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7963                           ;incstack = 0
  7964  005586  0E9F               	movlw	159
  7965  005588  6E47               	movwf	btemp+10,c
  7966  00558A  0EFF               	movlw	255
  7967  00558C  6E48               	movwf	btemp+11,c
  7968                           
  7969                           ;stkvar	_c @ sp[(0)+-2]
  7970  00558E  0EFE               	movlw	-2
  7971  005590  006F FF8C  F045    	movff	plusw1,btemp+8
  7972  005596  0EFF               	movlw	-1
  7973  005598  006F FF8C  F046    	movff	plusw1,btemp+9
  7974  00559E  0E20               	movlw	32
  7975  0055A0  1245               	iorwf	btemp+8,f,c
  7976  0055A2  0E00               	movlw	0
  7977  0055A4  1246               	iorwf	btemp+9,f,c
  7978  0055A6  5047               	movf	btemp+10,w,c
  7979  0055A8  2645               	addwf	btemp+8,f,c
  7980  0055AA  5048               	movf	btemp+11,w,c
  7981  0055AC  2246               	addwfc	btemp+9,f,c
  7982  0055AE  5046               	movf	btemp+9,w,c
  7983  0055B0  E106               	bnz	u2170
  7984  0055B2  0E1A               	movlw	26
  7985  0055B4  5C45               	subwf	btemp+8,w,c
  7986  0055B6  B0D8               	btfsc	status,0,c
  7987  0055B8  D002               	goto	u2170
  7988  0055BA  0E01               	movlw	1
  7989  0055BC  D001               	goto	u2180
  7990  0055BE                     u2170:
  7991  0055BE  0E00               	movlw	0
  7992  0055C0                     u2180:
  7993  0055C0  6E3D               	movwf	btemp,c
  7994  0055C2  6A3E               	clrf	btemp+1,c
  7995                           
  7996                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  7997  0055C4  52E5               	movf	postdec1,f,c
  7998  0055C6  52E5               	movf	postdec1,f,c
  7999  0055C8  0012               	return		;funcret
  8000  0055CA                     __end_of_isalpha:
  8001                           	opt callstack 0
  8002                           
  8003 ;; *************** function _stoa *****************
  8004 ;; Defined at:
  8005 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8008 ;;		 -> f(5), NULL(0), 
  8009 ;;  s               2  [STACK] PTR unsigned char 
  8010 ;;		 -> ?_printf(2), ?_sprintf(2), V(80), 
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;  nuls            7  [STACK] unsigned char [7]
  8013 ;;  l               2  [STACK] int 
  8014 ;;  p               2  [STACK] int 
  8015 ;;  cp              2  [STACK] PTR unsigned char 
  8016 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), V(80), 
  8017 ;;  w               2  [STACK] int 
  8018 ;;  i               2  [STACK] int 
  8019 ;; Return value:  Size  Location     Type
  8020 ;;                  2  [STACK] int 
  8021 ;; Registers used:
  8022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
  8023 ;; Tracked objects:
  8024 ;;		On entry : 0/1
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8032 ;;Total ram usage:        0 bytes
  8033 ;; Hardware stack levels used:    1
  8034 ;; Hardware stack levels required when called:    6
  8035 ;; This function calls:
  8036 ;;		_fputc
  8037 ;;		_strlen
  8038 ;; This function is called by:
  8039 ;;		_vfpfcnvrt
  8040 ;; This function uses a reentrant model
  8041 ;;
  8042                           
  8043                           	psect	text39
  8044  0034B8                     __ptext39:
  8045                           	opt callstack 0
  8046  0034B8                     _stoa:
  8047                           	opt callstack 0
  8048                           
  8049                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8050  0034B8  0E11               	movlw	17
  8051  0034BA  26E1               	addwf	fsr1l,f,c
  8052  0034BC  0E00               	movlw	0
  8053  0034BE  22E2               	addwfc	fsr1h,f,c
  8054                           
  8055                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8056                           
  8057                           ;incstack = 0
  8058  0034C0  EE20  F0F9         	lfsr	2,stoa@F1144
  8059                           
  8060                           ;stkvar	_nuls @ sp[(-17)+0]
  8061  0034C4  0E07               	movlw	7
  8062  0034C6  6E3D               	movwf	btemp,c
  8063  0034C8  0EEF               	movlw	-17
  8064  0034CA                     us416999:
  8065  0034CA  006F FF7B FFE3     	movff	postinc2,plusw1
  8066  0034D0  28E8               	incf	wreg,w,c
  8067  0034D2  2E3D               	decfsz	btemp,f,c
  8068  0034D4  D7FA               	bra	us416999
  8069                           
  8070                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  8071                           ;stkvar	_s @ sp[(-17)+-4]
  8072  0034D6  0EEB               	movlw	-21
  8073  0034D8  006F FF8C  F047    	movff	plusw1,btemp+10
  8074  0034DE  0EEC               	movlw	-20
  8075  0034E0  006F FF8C  F048    	movff	plusw1,btemp+11
  8076                           
  8077                           ;stkvar	_cp @ sp[(-17)+11]
  8078  0034E6  0EFB               	movlw	-5
  8079  0034E8  0060  F123  FFE3   	movff	btemp+11,plusw1
  8080  0034EE  0EFA               	movlw	-6
  8081  0034F0  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8082                           
  8083                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  8084                           ;stkvar	_cp @ sp[(-17)+11]
  8085  0034F6  0EFA               	movlw	-6
  8086  0034F8  006F FF8C  F03D    	movff	plusw1,btemp
  8087  0034FE  0EFB               	movlw	-5
  8088  003500  50E3               	movf	plusw1,w,c
  8089  003502  103D               	iorwf	btemp,w,c
  8090  003504  A4D8               	btfss	status,2,c
  8091  003506  D00E               	goto	l7089
  8092                           
  8093                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  8094                           ;stkvar	_nuls @ sp[(-17)+0]
  8095  003508  0EEF               	movlw	239
  8096  00350A  24E1               	addwf	fsr1l,w,c
  8097  00350C  6E47               	movwf	btemp+10,c
  8098  00350E  0EFF               	movlw	255
  8099  003510  20E2               	addwfc	fsr1h,w,c
  8100  003512  6E48               	movwf	btemp+11,c
  8101                           
  8102                           ;stkvar	_cp @ sp[(-17)+11]
  8103  003514  0EFB               	movlw	-5
  8104  003516  0060  F123  FFE3   	movff	btemp+11,plusw1
  8105  00351C  0EFA               	movlw	-6
  8106  00351E  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8107  003524                     l7089:
  8108                           
  8109                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  8110                           ;stkvar	_cp @ sp[(-17)+11]
  8111  003524  0EFA               	movlw	-6
  8112  003526  006F FF8F FFE6     	movff	plusw1,postinc1
  8113  00352C  006F FF8F FFE6     	movff	plusw1,postinc1
  8114  003532  ECDD  F027         	call	_strlen	;wreg free
  8115                           
  8116                           ;stkvar	_l @ sp[(-17)+7]
  8117  003536  0EF6               	movlw	-10
  8118  003538  0060  F0F7  FFE3   	movff	btemp,plusw1
  8119  00353E  0EF7               	movlw	-9
  8120  003540  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  8121                           
  8122                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  8123                           ;stkvar	_p @ sp[(-17)+9]
  8124  003546  0EF8               	movlw	-8
  8125  003548  0060  F09B  FFE3   	movff	_prec,plusw1
  8126  00354E  0EF9               	movlw	-7
  8127  003550  0060  F09F  FFE3   	movff	_prec+1,plusw1
  8128                           
  8129                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  8130                           ;stkvar	_p @ sp[(-17)+9]
  8131  003556  0EF9               	movlw	-7
  8132  003558  BEE3               	btfsc	plusw1,7,c
  8133  00355A  D023               	goto	l1691
  8134                           
  8135                           ;stkvar	_l @ sp[(-17)+7]
  8136                           ;stkvar	_p @ sp[(-17)+9]
  8137  00355C  50E1               	movf	fsr1l,w,c
  8138  00355E  0FF8               	addlw	-8
  8139  003560  6ED9               	movwf	fsr2l,c
  8140  003562  50E2               	movf	fsr1h,w,c
  8141  003564  6EDA               	movwf	fsr2h,c
  8142  003566  0EFF               	movlw	255
  8143  003568  22DA               	addwfc	fsr2h,f,c
  8144  00356A  0EF6               	movlw	-10
  8145  00356C  50E3               	movf	plusw1,w,c
  8146  00356E  5CDE               	subwf	postinc2,w,c
  8147  003570  50DE               	movf	postinc2,w,c
  8148  003572  0A80               	xorlw	128
  8149  003574  6E3D               	movwf	btemp,c
  8150  003576  0EF7               	movlw	-9
  8151  003578  50E3               	movf	plusw1,w,c
  8152  00357A  0A80               	xorlw	128
  8153  00357C  583D               	subwfb	btemp,w,c
  8154  00357E  B0D8               	btfsc	status,0,c
  8155  003580  D010               	goto	l1691
  8156                           
  8157                           ;stkvar	_p @ sp[(-17)+9]
  8158                           ;stkvar	_l @ sp[(-17)+7]
  8159  003582  0EF8               	movlw	-8
  8160  003584  006F FF8C  F03D    	movff	plusw1,btemp
  8161  00358A  0EF6               	movlw	-10
  8162  00358C  0060  F0F7  FFE3   	movff	btemp,plusw1
  8163  003592  0EF9               	movlw	-7
  8164  003594  006F FF8C  F03D    	movff	plusw1,btemp
  8165  00359A  0EF7               	movlw	-9
  8166  00359C  0060  F0F7  FFE3   	movff	btemp,plusw1
  8167  0035A2                     l1691:
  8168                           
  8169                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  8170                           ;stkvar	_l @ sp[(-17)+7]
  8171                           ;stkvar	_p @ sp[(-17)+9]
  8172  0035A2  0EF6               	movlw	-10
  8173  0035A4  006F FF8C  F03D    	movff	plusw1,btemp
  8174  0035AA  0EF8               	movlw	-8
  8175  0035AC  0060  F0F7  FFE3   	movff	btemp,plusw1
  8176  0035B2  0EF7               	movlw	-9
  8177  0035B4  006F FF8C  F03D    	movff	plusw1,btemp
  8178  0035BA  0EF9               	movlw	-7
  8179  0035BC  0060  F0F7  FFE3   	movff	btemp,plusw1
  8180                           
  8181                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  8182                           ;stkvar	_w @ sp[(-17)+13]
  8183  0035C2  0EFC               	movlw	-4
  8184  0035C4  0060  F093  FFE3   	movff	_width,plusw1
  8185  0035CA  0EFD               	movlw	-3
  8186  0035CC  0060  F097  FFE3   	movff	_width+1,plusw1
  8187                           
  8188                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  8189  0035D2  A028               	btfss	_flags,0,c
  8190  0035D4  D01F               	goto	l7109
  8191  0035D6  D031               	goto	u4210
  8192  0035D8                     l7105:
  8193                           
  8194                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  8195                           ;stkvar	_fp @ sp[(-17)+-2]
  8196  0035D8  0EED               	movlw	-19
  8197  0035DA  006F FF8F FFE6     	movff	plusw1,postinc1
  8198  0035E0  006F FF8F FFE6     	movff	plusw1,postinc1
  8199  0035E6  0E20               	movlw	32
  8200  0035E8  6EE6               	movwf	postinc1,c
  8201  0035EA  0E00               	movlw	0
  8202  0035EC  6EE6               	movwf	postinc1,c
  8203  0035EE  ECD7  F022         	call	_fputc	;wreg free
  8204                           
  8205                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  8206                           ;stkvar	_l @ sp[(-17)+7]
  8207  0035F2  0EF6               	movlw	-10
  8208  0035F4  50E3               	movf	plusw1,w,c
  8209  0035F6  0F01               	addlw	1
  8210  0035F8  6E3D               	movwf	btemp,c
  8211  0035FA  0EF6               	movlw	-10
  8212  0035FC  0060  F0F7  FFE3   	movff	btemp,plusw1
  8213  003602  6A3D               	clrf	btemp,c
  8214  003604  0EF7               	movlw	-9
  8215  003606  50E3               	movf	plusw1,w,c
  8216  003608  203D               	addwfc	btemp,w,c
  8217  00360A  6E3D               	movwf	btemp,c
  8218  00360C  0EF7               	movlw	-9
  8219  00360E  0060  F0F7  FFE3   	movff	btemp,plusw1
  8220  003614                     l7109:
  8221                           
  8222                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  8223                           ;stkvar	_w @ sp[(-17)+13]
  8224                           ;stkvar	_l @ sp[(-17)+7]
  8225  003614  50E1               	movf	fsr1l,w,c
  8226  003616  0FF6               	addlw	-10
  8227  003618  6ED9               	movwf	fsr2l,c
  8228  00361A  50E2               	movf	fsr1h,w,c
  8229  00361C  6EDA               	movwf	fsr2h,c
  8230  00361E  0EFF               	movlw	255
  8231  003620  22DA               	addwfc	fsr2h,f,c
  8232  003622  0EFC               	movlw	-4
  8233  003624  50E3               	movf	plusw1,w,c
  8234  003626  5CDE               	subwf	postinc2,w,c
  8235  003628  50DE               	movf	postinc2,w,c
  8236  00362A  0A80               	xorlw	128
  8237  00362C  6E3D               	movwf	btemp,c
  8238  00362E  0EFD               	movlw	-3
  8239  003630  50E3               	movf	plusw1,w,c
  8240  003632  0A80               	xorlw	128
  8241  003634  583D               	subwfb	btemp,w,c
  8242  003636  A0D8               	btfss	status,0,c
  8243  003638  D7CF               	goto	l7105
  8244  00363A                     u4210:
  8245                           
  8246                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  8247                           ;stkvar	_i @ sp[(-17)+15]
  8248  00363A  0EFE               	movlw	-2
  8249  00363C  6AE3               	clrf	plusw1,c
  8250  00363E  0EFF               	movlw	-1
  8251  003640  6AE3               	clrf	plusw1,c
  8252                           
  8253                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8254  003642  D037               	goto	l7119
  8255  003644                     l7113:
  8256                           
  8257                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  8258                           ;stkvar	_fp @ sp[(-17)+-2]
  8259  003644  0EED               	movlw	-19
  8260  003646  006F FF8F FFE6     	movff	plusw1,postinc1
  8261  00364C  006F FF8F FFE6     	movff	plusw1,postinc1
  8262                           
  8263                           ;stkvar	_cp @ sp[(-19)+11]
  8264  003652  0EF8               	movlw	-8
  8265  003654  006F FF8F FFD9     	movff	plusw1,fsr2l
  8266  00365A  0EF9               	movlw	-7
  8267  00365C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8268  003662  50DF               	movf	indf2,w,c
  8269  003664  6EE6               	movwf	postinc1,c
  8270  003666  0E00               	movlw	0
  8271  003668  6EE6               	movwf	postinc1,c
  8272  00366A  ECD7  F022         	call	_fputc	;wreg free
  8273                           
  8274                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  8275                           ;stkvar	_cp @ sp[(-17)+11]
  8276  00366E  0EFA               	movlw	-6
  8277  003670  50E3               	movf	plusw1,w,c
  8278  003672  0F01               	addlw	1
  8279  003674  6E3D               	movwf	btemp,c
  8280  003676  0EFA               	movlw	-6
  8281  003678  0060  F0F7  FFE3   	movff	btemp,plusw1
  8282  00367E  6A3D               	clrf	btemp,c
  8283  003680  0EFB               	movlw	-5
  8284  003682  50E3               	movf	plusw1,w,c
  8285  003684  203D               	addwfc	btemp,w,c
  8286  003686  6E3D               	movwf	btemp,c
  8287  003688  0EFB               	movlw	-5
  8288  00368A  0060  F0F7  FFE3   	movff	btemp,plusw1
  8289                           
  8290                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  8291                           ;stkvar	_i @ sp[(-17)+15]
  8292  003690  0EFE               	movlw	-2
  8293  003692  50E3               	movf	plusw1,w,c
  8294  003694  0F01               	addlw	1
  8295  003696  6E3D               	movwf	btemp,c
  8296  003698  0EFE               	movlw	-2
  8297  00369A  0060  F0F7  FFE3   	movff	btemp,plusw1
  8298  0036A0  6A3D               	clrf	btemp,c
  8299  0036A2  0EFF               	movlw	-1
  8300  0036A4  50E3               	movf	plusw1,w,c
  8301  0036A6  203D               	addwfc	btemp,w,c
  8302  0036A8  6E3D               	movwf	btemp,c
  8303  0036AA  0EFF               	movlw	-1
  8304  0036AC  0060  F0F7  FFE3   	movff	btemp,plusw1
  8305  0036B2                     l7119:
  8306                           
  8307                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8308                           ;stkvar	_p @ sp[(-17)+9]
  8309                           ;stkvar	_i @ sp[(-17)+15]
  8310  0036B2  50E1               	movf	fsr1l,w,c
  8311  0036B4  0FFE               	addlw	-2
  8312  0036B6  6ED9               	movwf	fsr2l,c
  8313  0036B8  50E2               	movf	fsr1h,w,c
  8314  0036BA  6EDA               	movwf	fsr2h,c
  8315  0036BC  0EFF               	movlw	255
  8316  0036BE  22DA               	addwfc	fsr2h,f,c
  8317  0036C0  0EF8               	movlw	-8
  8318  0036C2  50E3               	movf	plusw1,w,c
  8319  0036C4  5CDE               	subwf	postinc2,w,c
  8320  0036C6  50DE               	movf	postinc2,w,c
  8321  0036C8  0A80               	xorlw	128
  8322  0036CA  6E3D               	movwf	btemp,c
  8323  0036CC  0EF9               	movlw	-7
  8324  0036CE  50E3               	movf	plusw1,w,c
  8325  0036D0  0A80               	xorlw	128
  8326  0036D2  583D               	subwfb	btemp,w,c
  8327  0036D4  A0D8               	btfss	status,0,c
  8328  0036D6  D7B6               	goto	l7113
  8329                           
  8330                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  8331  0036D8  B028               	btfsc	_flags,0,c
  8332  0036DA  D01F               	goto	l7127
  8333  0036DC  D031               	goto	u4240
  8334  0036DE                     l7123:
  8335                           
  8336                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  8337                           ;stkvar	_fp @ sp[(-17)+-2]
  8338  0036DE  0EED               	movlw	-19
  8339  0036E0  006F FF8F FFE6     	movff	plusw1,postinc1
  8340  0036E6  006F FF8F FFE6     	movff	plusw1,postinc1
  8341  0036EC  0E20               	movlw	32
  8342  0036EE  6EE6               	movwf	postinc1,c
  8343  0036F0  0E00               	movlw	0
  8344  0036F2  6EE6               	movwf	postinc1,c
  8345  0036F4  ECD7  F022         	call	_fputc	;wreg free
  8346                           
  8347                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  8348                           ;stkvar	_l @ sp[(-17)+7]
  8349  0036F8  0EF6               	movlw	-10
  8350  0036FA  50E3               	movf	plusw1,w,c
  8351  0036FC  0F01               	addlw	1
  8352  0036FE  6E3D               	movwf	btemp,c
  8353  003700  0EF6               	movlw	-10
  8354  003702  0060  F0F7  FFE3   	movff	btemp,plusw1
  8355  003708  6A3D               	clrf	btemp,c
  8356  00370A  0EF7               	movlw	-9
  8357  00370C  50E3               	movf	plusw1,w,c
  8358  00370E  203D               	addwfc	btemp,w,c
  8359  003710  6E3D               	movwf	btemp,c
  8360  003712  0EF7               	movlw	-9
  8361  003714  0060  F0F7  FFE3   	movff	btemp,plusw1
  8362  00371A                     l7127:
  8363                           
  8364                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  8365                           ;stkvar	_w @ sp[(-17)+13]
  8366                           ;stkvar	_l @ sp[(-17)+7]
  8367  00371A  50E1               	movf	fsr1l,w,c
  8368  00371C  0FF6               	addlw	-10
  8369  00371E  6ED9               	movwf	fsr2l,c
  8370  003720  50E2               	movf	fsr1h,w,c
  8371  003722  6EDA               	movwf	fsr2h,c
  8372  003724  0EFF               	movlw	255
  8373  003726  22DA               	addwfc	fsr2h,f,c
  8374  003728  0EFC               	movlw	-4
  8375  00372A  50E3               	movf	plusw1,w,c
  8376  00372C  5CDE               	subwf	postinc2,w,c
  8377  00372E  50DE               	movf	postinc2,w,c
  8378  003730  0A80               	xorlw	128
  8379  003732  6E3D               	movwf	btemp,c
  8380  003734  0EFD               	movlw	-3
  8381  003736  50E3               	movf	plusw1,w,c
  8382  003738  0A80               	xorlw	128
  8383  00373A  583D               	subwfb	btemp,w,c
  8384  00373C  A0D8               	btfss	status,0,c
  8385  00373E  D7CF               	goto	l7123
  8386  003740                     u4240:
  8387                           
  8388                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  8389                           ;stkvar	_l @ sp[(-17)+7]
  8390  003740  0EF6               	movlw	-10
  8391  003742  006F FF8C  F03D    	movff	plusw1,btemp
  8392  003748  0EF7               	movlw	-9
  8393  00374A  006F FF8C  F03E    	movff	plusw1,btemp+1
  8394                           
  8395                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  8396  003750  0EEB               	movlw	235
  8397  003752  26E1               	addwf	fsr1l,f,c
  8398  003754  0EFF               	movlw	255
  8399  003756  22E2               	addwfc	fsr1h,f,c
  8400  003758  0012               	return		;funcret
  8401  00375A                     __end_of_stoa:
  8402                           	opt callstack 0
  8403                           
  8404 ;; *************** function _dtoa *****************
  8405 ;; Defined at:
  8406 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8407 ;; Parameters:    Size  Location     Type
  8408 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8409 ;;		 -> f(5), NULL(0), 
  8410 ;;  d               8  [STACK] long long 
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;  n               8  [STACK] long long 
  8413 ;;  i               2  [STACK] int 
  8414 ;;  s               2  [STACK] int 
  8415 ;;  w               2  [STACK] int 
  8416 ;;  p               2  [STACK] int 
  8417 ;; Return value:  Size  Location     Type
  8418 ;;                  2  [STACK] int 
  8419 ;; Registers used:
  8420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, prodl
  8421 ;; Tracked objects:
  8422 ;;		On entry : 0/1
  8423 ;;		On exit  : 0/0
  8424 ;;		Unchanged: 0/0
  8425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8430 ;;Total ram usage:        0 bytes
  8431 ;; Hardware stack levels used:    1
  8432 ;; Hardware stack levels required when called:    8
  8433 ;; This function calls:
  8434 ;;		___aodiv
  8435 ;;		___aomod
  8436 ;;		_abs
  8437 ;;		_pad
  8438 ;; This function is called by:
  8439 ;;		_vfpfcnvrt
  8440 ;; This function uses a reentrant model
  8441 ;;
  8442                           
  8443                           	psect	text40
  8444  002746                     __ptext40:
  8445                           	opt callstack 0
  8446  002746                     _dtoa:
  8447                           	opt callstack 0
  8448                           
  8449                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8450  002746  0E12               	movlw	18
  8451  002748  26E1               	addwf	fsr1l,f,c
  8452  00274A  0E00               	movlw	0
  8453  00274C  22E2               	addwfc	fsr1h,f,c
  8454                           
  8455                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  8456                           ;stkvar	_d @ sp[(-18)+-10]
  8457                           
  8458                           ;incstack = 0
  8459  00274E  0EE4               	movlw	228
  8460  002750  24E1               	addwf	fsr1l,w,c
  8461  002752  6ED9               	movwf	fsr2l,c
  8462  002754  0EFF               	movlw	255
  8463  002756  20E2               	addwfc	fsr1h,w,c
  8464  002758  6EDA               	movwf	fsr2h,c
  8465                           
  8466                           ;stkvar	_n @ sp[(-18)+2]
  8467  00275A  0E08               	movlw	8
  8468  00275C  6E3D               	movwf	btemp,c
  8469  00275E  0EF0               	movlw	-16
  8470  002760                     us399999:
  8471  002760  006F FF7B FFE3     	movff	postinc2,plusw1
  8472  002766  28E8               	incf	wreg,w,c
  8473  002768  2E3D               	decfsz	btemp,f,c
  8474  00276A  D7FA               	bra	us399999
  8475                           
  8476                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  8477                           ;stkvar	_n @ sp[(-18)+2]
  8478  00276C  0EF7               	movlw	-9
  8479  00276E  AEE3               	btfss	plusw1,7,c
  8480  002770  D002               	goto	u4000
  8481  002772  0E01               	movlw	1
  8482  002774  D001               	goto	u4010
  8483  002776                     u4000:
  8484  002776  0E00               	movlw	0
  8485  002778                     u4010:
  8486  002778  6E47               	movwf	btemp+10,c
  8487  00277A  6A48               	clrf	btemp+11,c
  8488                           
  8489                           ;stkvar	_s @ sp[(-18)+12]
  8490  00277C  0EFA               	movlw	-6
  8491  00277E  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8492  002784  0EFB               	movlw	-5
  8493  002786  0060  F123  FFE3   	movff	btemp+11,plusw1
  8494                           
  8495                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  8496                           ;stkvar	_s @ sp[(-18)+12]
  8497  00278C  0EFA               	movlw	-6
  8498  00278E  006F FF8C  F03D    	movff	plusw1,btemp
  8499  002794  0EFB               	movlw	-5
  8500  002796  50E3               	movf	plusw1,w,c
  8501  002798  103D               	iorwf	btemp,w,c
  8502  00279A  B4D8               	btfsc	status,2,c
  8503  00279C  D025               	goto	u4030
  8504                           
  8505                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  8506                           ;stkvar	_n @ sp[(-18)+2]
  8507                           ;stkvar	_n @ sp[(-18)+2]
  8508  00279E  0EF0               	movlw	-16
  8509  0027A0  6CE3               	negf	plusw1,c
  8510  0027A2  0EF1               	movlw	-15
  8511  0027A4  1EE3               	comf	plusw1,f,c
  8512  0027A6  0EF2               	movlw	-14
  8513  0027A8  1EE3               	comf	plusw1,f,c
  8514  0027AA  0EF3               	movlw	-13
  8515  0027AC  1EE3               	comf	plusw1,f,c
  8516  0027AE  0EF4               	movlw	-12
  8517  0027B0  1EE3               	comf	plusw1,f,c
  8518  0027B2  0EF5               	movlw	-11
  8519  0027B4  1EE3               	comf	plusw1,f,c
  8520  0027B6  0EF6               	movlw	-10
  8521  0027B8  1EE3               	comf	plusw1,f,c
  8522  0027BA  0EF7               	movlw	-9
  8523  0027BC  1EE3               	comf	plusw1,f,c
  8524  0027BE  E314               	bnc	u4030
  8525  0027C0  0EF1               	movlw	-15
  8526  0027C2  2AE3               	incf	plusw1,f,c
  8527  0027C4  E311               	bnc	u4030
  8528  0027C6  0EF2               	movlw	-14
  8529  0027C8  2AE3               	incf	plusw1,f,c
  8530  0027CA  E30E               	bnc	u4030
  8531  0027CC  0EF3               	movlw	-13
  8532  0027CE  2AE3               	incf	plusw1,f,c
  8533  0027D0  E30B               	bnc	u4030
  8534  0027D2  0EF4               	movlw	-12
  8535  0027D4  2AE3               	incf	plusw1,f,c
  8536  0027D6  E308               	bnc	u4030
  8537  0027D8  0EF5               	movlw	-11
  8538  0027DA  2AE3               	incf	plusw1,f,c
  8539  0027DC  E305               	bnc	u4030
  8540  0027DE  0EF6               	movlw	-10
  8541  0027E0  2AE3               	incf	plusw1,f,c
  8542  0027E2  E302               	bnc	u4030
  8543  0027E4  0EF7               	movlw	-9
  8544  0027E6  2AE3               	incf	plusw1,f,c
  8545  0027E8                     u4030:
  8546                           
  8547                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  8548  0027E8  AE27               	btfss	_prec+1,7,c
  8549                           
  8550                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  8551  0027EA  9228               	bcf	_flags,1,c
  8552                           
  8553                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  8554  0027EC  BE27               	btfsc	_prec+1,7,c
  8555  0027EE  D005               	goto	u4050
  8556  0027F0  5027               	movf	_prec+1,w,c
  8557  0027F2  E110               	bnz	l7031
  8558  0027F4  0426               	decf	_prec,w,c
  8559  0027F6  B0D8               	btfsc	status,0,c
  8560  0027F8  D00D               	goto	l7031
  8561  0027FA                     u4050:
  8562  0027FA  0E01               	movlw	1
  8563  0027FC  6E47               	movwf	btemp+10,c
  8564  0027FE  0E00               	movlw	0
  8565  002800  6E48               	movwf	btemp+11,c
  8566                           
  8567                           ;stkvar	_p @ sp[(-18)+16]
  8568  002802  0EFE               	movlw	-2
  8569  002804  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8570  00280A  0EFF               	movlw	-1
  8571  00280C  0060  F123  FFE3   	movff	btemp+11,plusw1
  8572  002812  D008               	goto	l1664
  8573  002814                     l7031:
  8574                           
  8575                           ;stkvar	_p @ sp[(-18)+16]
  8576  002814  0EFE               	movlw	-2
  8577  002816  0060  F09B  FFE3   	movff	_prec,plusw1
  8578  00281C  0EFF               	movlw	-1
  8579  00281E  0060  F09F  FFE3   	movff	_prec+1,plusw1
  8580  002824                     l1664:
  8581                           
  8582                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  8583                           ;stkvar	_w @ sp[(-18)+14]
  8584  002824  0EFC               	movlw	-4
  8585  002826  0060  F093  FFE3   	movff	_width,plusw1
  8586  00282C  0EFD               	movlw	-3
  8587  00282E  0060  F097  FFE3   	movff	_width+1,plusw1
  8588                           
  8589                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  8590                           ;stkvar	_s @ sp[(-18)+12]
  8591  002834  0EFA               	movlw	-6
  8592  002836  006F FF8C  F03D    	movff	plusw1,btemp
  8593  00283C  0EFB               	movlw	-5
  8594  00283E  50E3               	movf	plusw1,w,c
  8595  002840  103D               	iorwf	btemp,w,c
  8596  002842  A4D8               	btfss	status,2,c
  8597  002844  D002               	goto	u4070
  8598  002846  A428               	btfss	_flags,2,c
  8599  002848  D00A               	goto	l7039
  8600  00284A                     u4070:
  8601                           
  8602                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  8603                           ;stkvar	_w @ sp[(-18)+14]
  8604  00284A  50E1               	movf	fsr1l,w,c
  8605  00284C  0FFC               	addlw	-4
  8606  00284E  6ED9               	movwf	fsr2l,c
  8607  002850  50E2               	movf	fsr1h,w,c
  8608  002852  6EDA               	movwf	fsr2h,c
  8609  002854  0EFF               	movlw	255
  8610  002856  22DA               	addwfc	fsr2h,f,c
  8611  002858  06DE               	decf	postinc2,f,c
  8612  00285A  0E00               	movlw	0
  8613  00285C  5ADD               	subwfb	postdec2,f,c
  8614  00285E                     l7039:
  8615                           
  8616                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  8617  00285E  0E1F               	movlw	31
  8618  002860  6E47               	movwf	btemp+10,c
  8619  002862  0E00               	movlw	0
  8620  002864  6E48               	movwf	btemp+11,c
  8621                           
  8622                           ;stkvar	_i @ sp[(-18)+10]
  8623  002866  0EF8               	movlw	-8
  8624  002868  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8625  00286E  0EF9               	movlw	-7
  8626  002870  0060  F123  FFE3   	movff	btemp+11,plusw1
  8627                           
  8628                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  8629  002876  0100               	movlb	0	; () banked
  8630  002878  6BF8               	clrf	(_dbuf+31)& (0+255),b
  8631                           
  8632                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8633  00287A  D103               	goto	l7053
  8634  00287C                     l7043:
  8635                           
  8636                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  8637                           ;stkvar	_i @ sp[(-18)+10]
  8638  00287C  50E1               	movf	fsr1l,w,c
  8639  00287E  0FF8               	addlw	-8
  8640  002880  6ED9               	movwf	fsr2l,c
  8641  002882  50E2               	movf	fsr1h,w,c
  8642  002884  6EDA               	movwf	fsr2h,c
  8643  002886  0EFF               	movlw	255
  8644  002888  22DA               	addwfc	fsr2h,f,c
  8645  00288A  06DE               	decf	postinc2,f,c
  8646  00288C  0E00               	movlw	0
  8647  00288E  5ADD               	subwfb	postdec2,f,c
  8648                           
  8649                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  8650  002890  0E0A               	movlw	10
  8651  002892  6EE6               	movwf	postinc1,c
  8652  002894  0E00               	movlw	0
  8653  002896  6EE6               	movwf	postinc1,c
  8654  002898  0E00               	movlw	0
  8655  00289A  6EE6               	movwf	postinc1,c
  8656  00289C  0E00               	movlw	0
  8657  00289E  6EE6               	movwf	postinc1,c
  8658  0028A0  0E00               	movlw	0
  8659  0028A2  6EE6               	movwf	postinc1,c
  8660  0028A4  0E00               	movlw	0
  8661  0028A6  6EE6               	movwf	postinc1,c
  8662  0028A8  0E00               	movlw	0
  8663  0028AA  6EE6               	movwf	postinc1,c
  8664  0028AC  0E00               	movlw	0
  8665  0028AE  6EE6               	movwf	postinc1,c
  8666                           
  8667                           ;stkvar	_n @ sp[(-26)+2]
  8668  0028B0  50E1               	movf	fsr1l,w,c
  8669  0028B2  0FE8               	addlw	-24
  8670  0028B4  6ED9               	movwf	fsr2l,c
  8671  0028B6  50E2               	movf	fsr1h,w,c
  8672  0028B8  6EDA               	movwf	fsr2h,c
  8673  0028BA  0EFF               	movlw	255
  8674  0028BC  22DA               	addwfc	fsr2h,f,c
  8675  0028BE  006F FF7B FFE6     	movff	postinc2,postinc1
  8676  0028C4  006F FF7B FFE6     	movff	postinc2,postinc1
  8677  0028CA  006F FF7B FFE6     	movff	postinc2,postinc1
  8678  0028D0  006F FF7B FFE6     	movff	postinc2,postinc1
  8679  0028D6  006F FF7B FFE6     	movff	postinc2,postinc1
  8680  0028DC  006F FF7B FFE6     	movff	postinc2,postinc1
  8681  0028E2  006F FF7B FFE6     	movff	postinc2,postinc1
  8682  0028E8  006F FF7B FFE6     	movff	postinc2,postinc1
  8683  0028EE  EC2C  F01E         	call	___aomod	;wreg free
  8684  0028F2  52E5               	movf	postdec1,f,c
  8685  0028F4  006F FF9C  F054    	movff	indf1,btemp+23
  8686  0028FA  52E5               	movf	postdec1,f,c
  8687  0028FC  006F FF9C  F053    	movff	indf1,btemp+22
  8688  002902  52E5               	movf	postdec1,f,c
  8689  002904  006F FF9C  F052    	movff	indf1,btemp+21
  8690  00290A  52E5               	movf	postdec1,f,c
  8691  00290C  006F FF9C  F051    	movff	indf1,btemp+20
  8692  002912  52E5               	movf	postdec1,f,c
  8693  002914  006F FF9C  F050    	movff	indf1,btemp+19
  8694  00291A  52E5               	movf	postdec1,f,c
  8695  00291C  006F FF9C  F04F    	movff	indf1,btemp+18
  8696  002922  52E5               	movf	postdec1,f,c
  8697  002924  006F FF9C  F04E    	movff	indf1,btemp+17
  8698  00292A  52E5               	movf	postdec1,f,c
  8699  00292C  006F FF9C  F04D    	movff	indf1,btemp+16
  8700  002932  0EF8               	movlw	248
  8701  002934  26E1               	addwf	fsr1l,f,c
  8702  002936  0EFF               	movlw	255
  8703  002938  22E2               	addwfc	fsr1h,f,c
  8704  00293A  0060  F134  F047   	movff	btemp+16,btemp+10
  8705  002940  0060  F138  F048   	movff	btemp+17,btemp+11
  8706  002946  0060  F11F  FFE6   	movff	btemp+10,postinc1
  8707  00294C  0060  F123  FFE6   	movff	btemp+11,postinc1
  8708  002952  EC5A  F02A         	call	_abs	;wreg free
  8709  002956  0E30               	movlw	48
  8710  002958  263D               	addwf	btemp,f,c
  8711                           
  8712                           ;stkvar	_i @ sp[(-18)+10]
  8713  00295A  0EF8               	movlw	-8
  8714  00295C  006F FF8C  F048    	movff	plusw1,btemp+11
  8715  002962  5048               	movf	btemp+11,w,c
  8716  002964  0FD9               	addlw	low _dbuf
  8717  002966  6ED9               	movwf	fsr2l,c
  8718  002968  6ADA               	clrf	fsr2h,c
  8719  00296A  0060  F0F7  FFDF   	movff	btemp,indf2
  8720                           
  8721                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  8722                           ;stkvar	_p @ sp[(-18)+16]
  8723  002970  50E1               	movf	fsr1l,w,c
  8724  002972  0FFE               	addlw	-2
  8725  002974  6ED9               	movwf	fsr2l,c
  8726  002976  50E2               	movf	fsr1h,w,c
  8727  002978  6EDA               	movwf	fsr2h,c
  8728  00297A  0EFF               	movlw	255
  8729  00297C  22DA               	addwfc	fsr2h,f,c
  8730  00297E  06DE               	decf	postinc2,f,c
  8731  002980  0E00               	movlw	0
  8732  002982  5ADD               	subwfb	postdec2,f,c
  8733                           
  8734                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  8735                           ;stkvar	_w @ sp[(-18)+14]
  8736  002984  50E1               	movf	fsr1l,w,c
  8737  002986  0FFC               	addlw	-4
  8738  002988  6ED9               	movwf	fsr2l,c
  8739  00298A  50E2               	movf	fsr1h,w,c
  8740  00298C  6EDA               	movwf	fsr2h,c
  8741  00298E  0EFF               	movlw	255
  8742  002990  22DA               	addwfc	fsr2h,f,c
  8743  002992  06DE               	decf	postinc2,f,c
  8744  002994  0E00               	movlw	0
  8745  002996  5ADD               	subwfb	postdec2,f,c
  8746                           
  8747                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  8748  002998  0E0A               	movlw	10
  8749  00299A  6EE6               	movwf	postinc1,c
  8750  00299C  0E00               	movlw	0
  8751  00299E  6EE6               	movwf	postinc1,c
  8752  0029A0  0E00               	movlw	0
  8753  0029A2  6EE6               	movwf	postinc1,c
  8754  0029A4  0E00               	movlw	0
  8755  0029A6  6EE6               	movwf	postinc1,c
  8756  0029A8  0E00               	movlw	0
  8757  0029AA  6EE6               	movwf	postinc1,c
  8758  0029AC  0E00               	movlw	0
  8759  0029AE  6EE6               	movwf	postinc1,c
  8760  0029B0  0E00               	movlw	0
  8761  0029B2  6EE6               	movwf	postinc1,c
  8762  0029B4  0E00               	movlw	0
  8763  0029B6  6EE6               	movwf	postinc1,c
  8764                           
  8765                           ;stkvar	_n @ sp[(-26)+2]
  8766  0029B8  50E1               	movf	fsr1l,w,c
  8767  0029BA  0FE8               	addlw	-24
  8768  0029BC  6ED9               	movwf	fsr2l,c
  8769  0029BE  50E2               	movf	fsr1h,w,c
  8770  0029C0  6EDA               	movwf	fsr2h,c
  8771  0029C2  0EFF               	movlw	255
  8772  0029C4  22DA               	addwfc	fsr2h,f,c
  8773  0029C6  006F FF7B FFE6     	movff	postinc2,postinc1
  8774  0029CC  006F FF7B FFE6     	movff	postinc2,postinc1
  8775  0029D2  006F FF7B FFE6     	movff	postinc2,postinc1
  8776  0029D8  006F FF7B FFE6     	movff	postinc2,postinc1
  8777  0029DE  006F FF7B FFE6     	movff	postinc2,postinc1
  8778  0029E4  006F FF7B FFE6     	movff	postinc2,postinc1
  8779  0029EA  006F FF7B FFE6     	movff	postinc2,postinc1
  8780  0029F0  006F FF7B FFE6     	movff	postinc2,postinc1
  8781  0029F6  ECAD  F01B         	call	___aodiv	;wreg free
  8782  0029FA  52E5               	movf	postdec1,f,c
  8783  0029FC  006F FF9C  F054    	movff	indf1,btemp+23
  8784  002A02  52E5               	movf	postdec1,f,c
  8785  002A04  006F FF9C  F053    	movff	indf1,btemp+22
  8786  002A0A  52E5               	movf	postdec1,f,c
  8787  002A0C  006F FF9C  F052    	movff	indf1,btemp+21
  8788  002A12  52E5               	movf	postdec1,f,c
  8789  002A14  006F FF9C  F051    	movff	indf1,btemp+20
  8790  002A1A  52E5               	movf	postdec1,f,c
  8791  002A1C  006F FF9C  F050    	movff	indf1,btemp+19
  8792  002A22  52E5               	movf	postdec1,f,c
  8793  002A24  006F FF9C  F04F    	movff	indf1,btemp+18
  8794  002A2A  52E5               	movf	postdec1,f,c
  8795  002A2C  006F FF9C  F04E    	movff	indf1,btemp+17
  8796  002A32  52E5               	movf	postdec1,f,c
  8797  002A34  006F FF9C  F04D    	movff	indf1,btemp+16
  8798  002A3A  0EF8               	movlw	248
  8799  002A3C  26E1               	addwf	fsr1l,f,c
  8800  002A3E  0EFF               	movlw	255
  8801  002A40  22E2               	addwfc	fsr1h,f,c
  8802                           
  8803                           ;stkvar	_n @ sp[(-18)+2]
  8804  002A42  0EF0               	movlw	-16
  8805  002A44  0060  F137  FFE3   	movff	btemp+16,plusw1
  8806  002A4A  0EF1               	movlw	-15
  8807  002A4C  0060  F13B  FFE3   	movff	btemp+17,plusw1
  8808  002A52  0EF2               	movlw	-14
  8809  002A54  0060  F13F  FFE3   	movff	btemp+18,plusw1
  8810  002A5A  0EF3               	movlw	-13
  8811  002A5C  0060  F143  FFE3   	movff	btemp+19,plusw1
  8812  002A62  0EF4               	movlw	-12
  8813  002A64  0060  F147  FFE3   	movff	btemp+20,plusw1
  8814  002A6A  0EF5               	movlw	-11
  8815  002A6C  0060  F14B  FFE3   	movff	btemp+21,plusw1
  8816  002A72  0EF6               	movlw	-10
  8817  002A74  0060  F14F  FFE3   	movff	btemp+22,plusw1
  8818  002A7A  0EF7               	movlw	-9
  8819  002A7C  0060  F153  FFE3   	movff	btemp+23,plusw1
  8820  002A82                     l7053:
  8821                           
  8822                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8823                           ;stkvar	_i @ sp[(-18)+10]
  8824  002A82  0EF9               	movlw	-7
  8825  002A84  BEE3               	btfsc	plusw1,7,c
  8826  002A86  D036               	goto	u4120
  8827  002A88  0EF9               	movlw	-7
  8828  002A8A  50E3               	movf	plusw1,w,c
  8829  002A8C  E104               	bnz	u4080
  8830  002A8E  0EF8               	movlw	-8
  8831  002A90  04E3               	decf	plusw1,w,c
  8832  002A92  A0D8               	btfss	status,0,c
  8833  002A94  D02F               	goto	u4120
  8834  002A96                     u4080:
  8835                           
  8836                           ;stkvar	_n @ sp[(-18)+2]
  8837  002A96  0EF0               	movlw	-16
  8838  002A98  50E3               	movf	plusw1,w,c
  8839  002A9A  E115               	bnz	u4091
  8840  002A9C  0EF1               	movlw	-15
  8841  002A9E  50E3               	movf	plusw1,w,c
  8842  002AA0  E112               	bnz	u4091
  8843  002AA2  0EF2               	movlw	-14
  8844  002AA4  50E3               	movf	plusw1,w,c
  8845  002AA6  E10F               	bnz	u4091
  8846  002AA8  0EF3               	movlw	-13
  8847  002AAA  50E3               	movf	plusw1,w,c
  8848  002AAC  E10C               	bnz	u4091
  8849  002AAE  0EF4               	movlw	-12
  8850  002AB0  50E3               	movf	plusw1,w,c
  8851  002AB2  E109               	bnz	u4091
  8852  002AB4  0EF5               	movlw	-11
  8853  002AB6  50E3               	movf	plusw1,w,c
  8854  002AB8  E106               	bnz	u4091
  8855  002ABA  0EF6               	movlw	-10
  8856  002ABC  50E3               	movf	plusw1,w,c
  8857  002ABE  E103               	bnz	u4091
  8858  002AC0  0EF7               	movlw	-9
  8859  002AC2  50E3               	movf	plusw1,w,c
  8860  002AC4  A4D8               	btfss	status,2,c
  8861  002AC6                     u4091:
  8862  002AC6  D6DA               	goto	l7043
  8863                           
  8864                           ;stkvar	_p @ sp[(-18)+16]
  8865  002AC8  0EFF               	movlw	-1
  8866  002ACA  BEE3               	btfsc	plusw1,7,c
  8867  002ACC  D007               	goto	u4100
  8868  002ACE  0EFF               	movlw	-1
  8869  002AD0  50E3               	movf	plusw1,w,c
  8870  002AD2  E103               	bnz	u4101
  8871  002AD4  0EFE               	movlw	-2
  8872  002AD6  04E3               	decf	plusw1,w,c
  8873  002AD8  B0D8               	btfsc	status,0,c
  8874  002ADA                     u4101:
  8875  002ADA  D6D0               	goto	l7043
  8876  002ADC                     u4100:
  8877                           
  8878                           ;stkvar	_w @ sp[(-18)+14]
  8879  002ADC  0EFD               	movlw	-3
  8880  002ADE  BEE3               	btfsc	plusw1,7,c
  8881  002AE0  D009               	goto	u4120
  8882  002AE2  0EFD               	movlw	-3
  8883  002AE4  50E3               	movf	plusw1,w,c
  8884  002AE6  E104               	bnz	u4110
  8885  002AE8  0EFC               	movlw	-4
  8886  002AEA  04E3               	decf	plusw1,w,c
  8887  002AEC  A0D8               	btfss	status,0,c
  8888  002AEE  D002               	goto	u4120
  8889  002AF0                     u4110:
  8890  002AF0  B228               	btfsc	_flags,1,c
  8891  002AF2  D6C4               	goto	l7043
  8892  002AF4                     u4120:
  8893                           
  8894                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  8895                           ;stkvar	_s @ sp[(-18)+12]
  8896  002AF4  0EFA               	movlw	-6
  8897  002AF6  006F FF8C  F03D    	movff	plusw1,btemp
  8898  002AFC  0EFB               	movlw	-5
  8899  002AFE  50E3               	movf	plusw1,w,c
  8900  002B00  103D               	iorwf	btemp,w,c
  8901  002B02  A4D8               	btfss	status,2,c
  8902  002B04  D002               	goto	u4140
  8903  002B06  A428               	btfss	_flags,2,c
  8904  002B08  D02D               	goto	l7077
  8905  002B0A                     u4140:
  8906                           
  8907                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  8908                           ;stkvar	_i @ sp[(-18)+10]
  8909  002B0A  50E1               	movf	fsr1l,w,c
  8910  002B0C  0FF8               	addlw	-8
  8911  002B0E  6ED9               	movwf	fsr2l,c
  8912  002B10  50E2               	movf	fsr1h,w,c
  8913  002B12  6EDA               	movwf	fsr2h,c
  8914  002B14  0EFF               	movlw	255
  8915  002B16  22DA               	addwfc	fsr2h,f,c
  8916  002B18  06DE               	decf	postinc2,f,c
  8917  002B1A  0E00               	movlw	0
  8918  002B1C  5ADD               	subwfb	postdec2,f,c
  8919                           
  8920                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  8921                           ;stkvar	_s @ sp[(-18)+12]
  8922  002B1E  0EFA               	movlw	-6
  8923  002B20  006F FF8C  F03D    	movff	plusw1,btemp
  8924  002B26  0EFB               	movlw	-5
  8925  002B28  50E3               	movf	plusw1,w,c
  8926  002B2A  103D               	iorwf	btemp,w,c
  8927  002B2C  A4D8               	btfss	status,2,c
  8928  002B2E  D002               	goto	l7073
  8929  002B30  0E2B               	movlw	43
  8930  002B32  D001               	goto	L21
  8931  002B34                     l7073:
  8932  002B34  0E2D               	movlw	45
  8933  002B36                     L21:
  8934  002B36  6E47               	movwf	btemp+10,c
  8935  002B38  0E00               	movlw	0
  8936  002B3A  6E48               	movwf	btemp+11,c
  8937                           
  8938                           ;stkvar	_dtoa$3722 @ sp[(-18)+0]
  8939  002B3C  0EEE               	movlw	-18
  8940  002B3E  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8941  002B44  0EEF               	movlw	-17
  8942  002B46  0060  F123  FFE3   	movff	btemp+11,plusw1
  8943                           
  8944                           ;stkvar	_dtoa$3722 @ sp[(-18)+0]
  8945                           ;stkvar	_i @ sp[(-18)+10]
  8946  002B4C  0EF8               	movlw	-8
  8947  002B4E  006F FF8C  F048    	movff	plusw1,btemp+11
  8948  002B54  5048               	movf	btemp+11,w,c
  8949  002B56  0FD9               	addlw	low _dbuf
  8950  002B58  6ED9               	movwf	fsr2l,c
  8951  002B5A  6ADA               	clrf	fsr2h,c
  8952  002B5C  0EEE               	movlw	-18
  8953  002B5E  006F FF8F FFDF     	movff	plusw1,indf2
  8954  002B64                     l7077:
  8955                           
  8956                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  8957                           ;stkvar	_w @ sp[(-18)+14]
  8958  002B64  0EFC               	movlw	-4
  8959  002B66  006F FF8F FFE6     	movff	plusw1,postinc1
  8960  002B6C  006F FF8F FFE6     	movff	plusw1,postinc1
  8961                           
  8962                           ;stkvar	_i @ sp[(-20)+10]
  8963  002B72  0EF6               	movlw	-10
  8964  002B74  006F FF8C  F048    	movff	plusw1,btemp+11
  8965  002B7A  5048               	movf	btemp+11,w,c
  8966  002B7C  0FD9               	addlw	low _dbuf
  8967  002B7E  6EE6               	movwf	postinc1,c
  8968                           
  8969                           ;stkvar	_fp @ sp[(-21)+-2]
  8970  002B80  0EE9               	movlw	-23
  8971  002B82  006F FF8F FFE6     	movff	plusw1,postinc1
  8972  002B88  006F FF8F FFE6     	movff	plusw1,postinc1
  8973  002B8E  EC5D  F023         	call	_pad	;wreg free
  8974                           
  8975                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  8976  002B92  0EE4               	movlw	228
  8977  002B94  26E1               	addwf	fsr1l,f,c
  8978  002B96  0EFF               	movlw	255
  8979  002B98  22E2               	addwfc	fsr1h,f,c
  8980  002B9A  0012               	return		;funcret
  8981  002B9C                     __end_of_dtoa:
  8982                           	opt callstack 0
  8983                           
  8984 ;; *************** function _abs *****************
  8985 ;; Defined at:
  8986 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;  a               2  [STACK] int 
  8989 ;; Auto vars:     Size  Location     Type
  8990 ;;		None
  8991 ;; Return value:  Size  Location     Type
  8992 ;;                  2  [STACK] int 
  8993 ;; Registers used:
  8994 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  8995 ;; Tracked objects:
  8996 ;;		On entry : 0/0
  8997 ;;		On exit  : 0/0
  8998 ;;		Unchanged: 0/0
  8999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9004 ;;Total ram usage:        0 bytes
  9005 ;; Hardware stack levels used:    1
  9006 ;; Hardware stack levels required when called:    3
  9007 ;; This function calls:
  9008 ;;		Nothing
  9009 ;; This function is called by:
  9010 ;;		_dtoa
  9011 ;; This function uses a reentrant model
  9012 ;;
  9013                           
  9014                           	psect	text41
  9015  0054B4                     __ptext41:
  9016                           	opt callstack 0
  9017  0054B4                     _abs:
  9018                           	opt callstack 23
  9019                           
  9020                           ;stkvar	_a @ sp[(0)+-2]
  9021                           
  9022                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9023                           ;incstack = 0
  9024  0054B4  0EFF               	movlw	-1
  9025  0054B6  BEE3               	btfsc	plusw1,7,c
  9026  0054B8  D007               	goto	u2140
  9027  0054BA  0EFF               	movlw	-1
  9028  0054BC  50E3               	movf	plusw1,w,c
  9029  0054BE  E112               	bnz	l4899
  9030  0054C0  0EFE               	movlw	-2
  9031  0054C2  04E3               	decf	plusw1,w,c
  9032  0054C4  B0D8               	btfsc	status,0,c
  9033  0054C6  D00E               	goto	l4899
  9034  0054C8                     u2140:
  9035                           
  9036                           ;stkvar	_a @ sp[(0)+-2]
  9037  0054C8  0EFE               	movlw	-2
  9038  0054CA  006F FF8C  F03D    	movff	plusw1,btemp
  9039  0054D0  1E3D               	comf	btemp,f,c
  9040  0054D2  0EFF               	movlw	-1
  9041  0054D4  006F FF8C  F03E    	movff	plusw1,btemp+1
  9042  0054DA  1E3E               	comf	btemp+1,f,c
  9043  0054DC  2A3D               	incf	btemp,f,c
  9044  0054DE  B4D8               	btfsc	status,2,c
  9045  0054E0  2A3E               	incf	btemp+1,f,c
  9046  0054E2  D008               	goto	l2457
  9047  0054E4                     l4899:
  9048                           
  9049                           ;stkvar	_a @ sp[(0)+-2]
  9050  0054E4  0EFE               	movlw	-2
  9051  0054E6  006F FF8C  F03D    	movff	plusw1,btemp
  9052  0054EC  0EFF               	movlw	-1
  9053  0054EE  006F FF8C  F03E    	movff	plusw1,btemp+1
  9054  0054F4                     l2457:
  9055                           
  9056                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
  9057  0054F4  52E5               	movf	postdec1,f,c
  9058  0054F6  52E5               	movf	postdec1,f,c
  9059  0054F8  0012               	return		;funcret
  9060  0054FA                     __end_of_abs:
  9061                           	opt callstack 0
  9062                           
  9063 ;; *************** function ___aomod *****************
  9064 ;; Defined at:
  9065 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;  dividend        8  [STACK] long long 
  9068 ;;  divisor         8  [STACK] long long 
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;  sign            1  [STACK] unsigned char 
  9071 ;;  counter         1  [STACK] unsigned char 
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  8  [STACK] long long 
  9074 ;; Registers used:
  9075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9085 ;;Total ram usage:        0 bytes
  9086 ;; Hardware stack levels used:    1
  9087 ;; Hardware stack levels required when called:    3
  9088 ;; This function calls:
  9089 ;;		Nothing
  9090 ;; This function is called by:
  9091 ;;		_dtoa
  9092 ;; This function uses a reentrant model
  9093 ;;
  9094                           
  9095                           	psect	text42
  9096  003C58                     __ptext42:
  9097                           	opt callstack 0
  9098  003C58                     ___aomod:
  9099                           	opt callstack 0
  9100                           
  9101                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  9102  003C58  52E6               	movf	postinc1,f,c
  9103  003C5A  52E6               	movf	postinc1,f,c
  9104                           
  9105                           ;stkvar	_sign @ sp[(-2)+0]
  9106                           
  9107                           ;incstack = 0
  9108  003C5C  0EFE               	movlw	-2
  9109  003C5E  6AE3               	clrf	plusw1,c
  9110                           
  9111                           ;stkvar	_dividend @ sp[(-2)+-8]
  9112  003C60  0EFD               	movlw	-3
  9113  003C62  AEE3               	btfss	plusw1,7,c
  9114  003C64  D028               	goto	l4981
  9115                           
  9116                           ;stkvar	_dividend @ sp[(-2)+-8]
  9117                           ;stkvar	_dividend @ sp[(-2)+-8]
  9118  003C66  0EF6               	movlw	-10
  9119  003C68  6CE3               	negf	plusw1,c
  9120  003C6A  0EF7               	movlw	-9
  9121  003C6C  1EE3               	comf	plusw1,f,c
  9122  003C6E  0EF8               	movlw	-8
  9123  003C70  1EE3               	comf	plusw1,f,c
  9124  003C72  0EF9               	movlw	-7
  9125  003C74  1EE3               	comf	plusw1,f,c
  9126  003C76  0EFA               	movlw	-6
  9127  003C78  1EE3               	comf	plusw1,f,c
  9128  003C7A  0EFB               	movlw	-5
  9129  003C7C  1EE3               	comf	plusw1,f,c
  9130  003C7E  0EFC               	movlw	-4
  9131  003C80  1EE3               	comf	plusw1,f,c
  9132  003C82  0EFD               	movlw	-3
  9133  003C84  1EE3               	comf	plusw1,f,c
  9134  003C86  E314               	bnc	u2370
  9135  003C88  0EF7               	movlw	-9
  9136  003C8A  2AE3               	incf	plusw1,f,c
  9137  003C8C  E311               	bnc	u2370
  9138  003C8E  0EF8               	movlw	-8
  9139  003C90  2AE3               	incf	plusw1,f,c
  9140  003C92  E30E               	bnc	u2370
  9141  003C94  0EF9               	movlw	-7
  9142  003C96  2AE3               	incf	plusw1,f,c
  9143  003C98  E30B               	bnc	u2370
  9144  003C9A  0EFA               	movlw	-6
  9145  003C9C  2AE3               	incf	plusw1,f,c
  9146  003C9E  E308               	bnc	u2370
  9147  003CA0  0EFB               	movlw	-5
  9148  003CA2  2AE3               	incf	plusw1,f,c
  9149  003CA4  E305               	bnc	u2370
  9150  003CA6  0EFC               	movlw	-4
  9151  003CA8  2AE3               	incf	plusw1,f,c
  9152  003CAA  E302               	bnc	u2370
  9153  003CAC  0EFD               	movlw	-3
  9154  003CAE  2AE3               	incf	plusw1,f,c
  9155  003CB0                     u2370:
  9156                           
  9157                           ;stkvar	_sign @ sp[(-2)+0]
  9158  003CB0  0EFE               	movlw	-2
  9159  003CB2  6AE3               	clrf	plusw1,c
  9160  003CB4  2AE3               	incf	plusw1,f,c
  9161  003CB6                     l4981:
  9162                           
  9163                           ;stkvar	_divisor @ sp[(-2)+-16]
  9164  003CB6  0EF5               	movlw	-11
  9165  003CB8  AEE3               	btfss	plusw1,7,c
  9166  003CBA  D025               	goto	u2390
  9167                           
  9168                           ;stkvar	_divisor @ sp[(-2)+-16]
  9169                           ;stkvar	_divisor @ sp[(-2)+-16]
  9170  003CBC  0EEE               	movlw	-18
  9171  003CBE  6CE3               	negf	plusw1,c
  9172  003CC0  0EEF               	movlw	-17
  9173  003CC2  1EE3               	comf	plusw1,f,c
  9174  003CC4  0EF0               	movlw	-16
  9175  003CC6  1EE3               	comf	plusw1,f,c
  9176  003CC8  0EF1               	movlw	-15
  9177  003CCA  1EE3               	comf	plusw1,f,c
  9178  003CCC  0EF2               	movlw	-14
  9179  003CCE  1EE3               	comf	plusw1,f,c
  9180  003CD0  0EF3               	movlw	-13
  9181  003CD2  1EE3               	comf	plusw1,f,c
  9182  003CD4  0EF4               	movlw	-12
  9183  003CD6  1EE3               	comf	plusw1,f,c
  9184  003CD8  0EF5               	movlw	-11
  9185  003CDA  1EE3               	comf	plusw1,f,c
  9186  003CDC  E314               	bnc	u2390
  9187  003CDE  0EEF               	movlw	-17
  9188  003CE0  2AE3               	incf	plusw1,f,c
  9189  003CE2  E311               	bnc	u2390
  9190  003CE4  0EF0               	movlw	-16
  9191  003CE6  2AE3               	incf	plusw1,f,c
  9192  003CE8  E30E               	bnc	u2390
  9193  003CEA  0EF1               	movlw	-15
  9194  003CEC  2AE3               	incf	plusw1,f,c
  9195  003CEE  E30B               	bnc	u2390
  9196  003CF0  0EF2               	movlw	-14
  9197  003CF2  2AE3               	incf	plusw1,f,c
  9198  003CF4  E308               	bnc	u2390
  9199  003CF6  0EF3               	movlw	-13
  9200  003CF8  2AE3               	incf	plusw1,f,c
  9201  003CFA  E305               	bnc	u2390
  9202  003CFC  0EF4               	movlw	-12
  9203  003CFE  2AE3               	incf	plusw1,f,c
  9204  003D00  E302               	bnc	u2390
  9205  003D02  0EF5               	movlw	-11
  9206  003D04  2AE3               	incf	plusw1,f,c
  9207  003D06                     u2390:
  9208                           
  9209                           ;stkvar	_divisor @ sp[(-2)+-16]
  9210  003D06  0EEE               	movlw	-18
  9211  003D08  50E3               	movf	plusw1,w,c
  9212  003D0A  E116               	bnz	u2400
  9213  003D0C  0EEF               	movlw	-17
  9214  003D0E  50E3               	movf	plusw1,w,c
  9215  003D10  E113               	bnz	u2400
  9216  003D12  0EF0               	movlw	-16
  9217  003D14  50E3               	movf	plusw1,w,c
  9218  003D16  E110               	bnz	u2400
  9219  003D18  0EF1               	movlw	-15
  9220  003D1A  50E3               	movf	plusw1,w,c
  9221  003D1C  E10D               	bnz	u2400
  9222  003D1E  0EF2               	movlw	-14
  9223  003D20  50E3               	movf	plusw1,w,c
  9224  003D22  E10A               	bnz	u2400
  9225  003D24  0EF3               	movlw	-13
  9226  003D26  50E3               	movf	plusw1,w,c
  9227  003D28  E107               	bnz	u2400
  9228  003D2A  0EF4               	movlw	-12
  9229  003D2C  50E3               	movf	plusw1,w,c
  9230  003D2E  E104               	bnz	u2400
  9231  003D30  0EF5               	movlw	-11
  9232  003D32  50E3               	movf	plusw1,w,c
  9233  003D34  B4D8               	btfsc	status,2,c
  9234  003D36  D075               	goto	u2430
  9235  003D38                     u2400:
  9236                           
  9237                           ;stkvar	_counter @ sp[(-2)+1]
  9238  003D38  0EFF               	movlw	-1
  9239  003D3A  6AE3               	clrf	plusw1,c
  9240  003D3C  D012               	goto	L22
  9241  003D3E                     l4989:
  9242                           
  9243                           ;stkvar	_divisor @ sp[(-2)+-16]
  9244  003D3E  90D8               	bcf	status,0,c
  9245  003D40  0EEE               	movlw	-18
  9246  003D42  36E3               	rlcf	plusw1,f,c
  9247  003D44  0EEF               	movlw	-17
  9248  003D46  36E3               	rlcf	plusw1,f,c
  9249  003D48  0EF0               	movlw	-16
  9250  003D4A  36E3               	rlcf	plusw1,f,c
  9251  003D4C  0EF1               	movlw	-15
  9252  003D4E  36E3               	rlcf	plusw1,f,c
  9253  003D50  0EF2               	movlw	-14
  9254  003D52  36E3               	rlcf	plusw1,f,c
  9255  003D54  0EF3               	movlw	-13
  9256  003D56  36E3               	rlcf	plusw1,f,c
  9257  003D58  0EF4               	movlw	-12
  9258  003D5A  36E3               	rlcf	plusw1,f,c
  9259  003D5C  0EF5               	movlw	-11
  9260  003D5E  36E3               	rlcf	plusw1,f,c
  9261                           
  9262                           ;stkvar	_counter @ sp[(-2)+1]
  9263  003D60  0EFF               	movlw	-1
  9264  003D62                     L22:
  9265  003D62  2AE3               	incf	plusw1,f,c
  9266                           
  9267                           ;stkvar	_divisor @ sp[(-2)+-16]
  9268  003D64  0EF5               	movlw	-11
  9269  003D66  AEE3               	btfss	plusw1,7,c
  9270  003D68  D7EA               	goto	l4989
  9271  003D6A                     u2410:
  9272                           
  9273                           ;stkvar	_divisor @ sp[(-2)+-16]
  9274                           ;stkvar	_dividend @ sp[(-2)+-8]
  9275  003D6A  50E1               	movf	fsr1l,w,c
  9276  003D6C  0FF6               	addlw	-10
  9277  003D6E  6ED9               	movwf	fsr2l,c
  9278  003D70  50E2               	movf	fsr1h,w,c
  9279  003D72  6EDA               	movwf	fsr2h,c
  9280  003D74  0EFF               	movlw	255
  9281  003D76  22DA               	addwfc	fsr2h,f,c
  9282  003D78  0EEE               	movlw	-18
  9283  003D7A  50E3               	movf	plusw1,w,c
  9284  003D7C  5CDE               	subwf	postinc2,w,c
  9285  003D7E  0EEF               	movlw	-17
  9286  003D80  50E3               	movf	plusw1,w,c
  9287  003D82  58DE               	subwfb	postinc2,w,c
  9288  003D84  0EF0               	movlw	-16
  9289  003D86  50E3               	movf	plusw1,w,c
  9290  003D88  58DE               	subwfb	postinc2,w,c
  9291  003D8A  0EF1               	movlw	-15
  9292  003D8C  50E3               	movf	plusw1,w,c
  9293  003D8E  58DE               	subwfb	postinc2,w,c
  9294  003D90  0EF2               	movlw	-14
  9295  003D92  50E3               	movf	plusw1,w,c
  9296  003D94  58DE               	subwfb	postinc2,w,c
  9297  003D96  0EF3               	movlw	-13
  9298  003D98  50E3               	movf	plusw1,w,c
  9299  003D9A  58DE               	subwfb	postinc2,w,c
  9300  003D9C  0EF4               	movlw	-12
  9301  003D9E  50E3               	movf	plusw1,w,c
  9302  003DA0  58DE               	subwfb	postinc2,w,c
  9303  003DA2  0EF5               	movlw	-11
  9304  003DA4  50E3               	movf	plusw1,w,c
  9305  003DA6  58DE               	subwfb	postinc2,w,c
  9306  003DA8  A0D8               	btfss	status,0,c
  9307  003DAA  D01F               	goto	l4997
  9308                           
  9309                           ;stkvar	_divisor @ sp[(-2)+-16]
  9310                           ;stkvar	_dividend @ sp[(-2)+-8]
  9311  003DAC  50E1               	movf	fsr1l,w,c
  9312  003DAE  0FF6               	addlw	-10
  9313  003DB0  6ED9               	movwf	fsr2l,c
  9314  003DB2  50E2               	movf	fsr1h,w,c
  9315  003DB4  6EDA               	movwf	fsr2h,c
  9316  003DB6  0EFF               	movlw	255
  9317  003DB8  22DA               	addwfc	fsr2h,f,c
  9318  003DBA  0EEE               	movlw	-18
  9319  003DBC  50E3               	movf	plusw1,w,c
  9320  003DBE  5EDE               	subwf	postinc2,f,c
  9321  003DC0  0EEF               	movlw	-17
  9322  003DC2  50E3               	movf	plusw1,w,c
  9323  003DC4  5ADE               	subwfb	postinc2,f,c
  9324  003DC6  0EF0               	movlw	-16
  9325  003DC8  50E3               	movf	plusw1,w,c
  9326  003DCA  5ADE               	subwfb	postinc2,f,c
  9327  003DCC  0EF1               	movlw	-15
  9328  003DCE  50E3               	movf	plusw1,w,c
  9329  003DD0  5ADE               	subwfb	postinc2,f,c
  9330  003DD2  0EF2               	movlw	-14
  9331  003DD4  50E3               	movf	plusw1,w,c
  9332  003DD6  5ADE               	subwfb	postinc2,f,c
  9333  003DD8  0EF3               	movlw	-13
  9334  003DDA  50E3               	movf	plusw1,w,c
  9335  003DDC  5ADE               	subwfb	postinc2,f,c
  9336  003DDE  0EF4               	movlw	-12
  9337  003DE0  50E3               	movf	plusw1,w,c
  9338  003DE2  5ADE               	subwfb	postinc2,f,c
  9339  003DE4  0EF5               	movlw	-11
  9340  003DE6  50E3               	movf	plusw1,w,c
  9341  003DE8  5ADE               	subwfb	postinc2,f,c
  9342  003DEA                     l4997:
  9343                           
  9344                           ;stkvar	_divisor @ sp[(-2)+-16]
  9345  003DEA  90D8               	bcf	status,0,c
  9346  003DEC  0EF5               	movlw	-11
  9347  003DEE  32E3               	rrcf	plusw1,f,c
  9348  003DF0  0EF4               	movlw	-12
  9349  003DF2  32E3               	rrcf	plusw1,f,c
  9350  003DF4  0EF3               	movlw	-13
  9351  003DF6  32E3               	rrcf	plusw1,f,c
  9352  003DF8  0EF2               	movlw	-14
  9353  003DFA  32E3               	rrcf	plusw1,f,c
  9354  003DFC  0EF1               	movlw	-15
  9355  003DFE  32E3               	rrcf	plusw1,f,c
  9356  003E00  0EF0               	movlw	-16
  9357  003E02  32E3               	rrcf	plusw1,f,c
  9358  003E04  0EEF               	movlw	-17
  9359  003E06  32E3               	rrcf	plusw1,f,c
  9360  003E08  0EEE               	movlw	-18
  9361  003E0A  32E3               	rrcf	plusw1,f,c
  9362                           
  9363                           ;stkvar	_counter @ sp[(-2)+1]
  9364  003E0C  0EFF               	movlw	-1
  9365  003E0E  50E3               	movf	plusw1,w,c
  9366  003E10  6E3D               	movwf	btemp,c
  9367  003E12  0E01               	movlw	1
  9368  003E14  5E3D               	subwf	btemp,f,c
  9369  003E16  0EFF               	movlw	-1
  9370  003E18  0060  F0F7  FFE3   	movff	btemp,plusw1
  9371  003E1E  A4D8               	btfss	status,2,c
  9372  003E20  D7A4               	goto	u2410
  9373  003E22                     u2430:
  9374                           
  9375                           ;stkvar	_sign @ sp[(-2)+0]
  9376  003E22  0EFE               	movlw	-2
  9377  003E24  50E3               	movf	plusw1,w,c
  9378  003E26  B4D8               	btfsc	status,2,c
  9379  003E28  D025               	goto	u2450
  9380                           
  9381                           ;stkvar	_dividend @ sp[(-2)+-8]
  9382                           ;stkvar	_dividend @ sp[(-2)+-8]
  9383  003E2A  0EF6               	movlw	-10
  9384  003E2C  6CE3               	negf	plusw1,c
  9385  003E2E  0EF7               	movlw	-9
  9386  003E30  1EE3               	comf	plusw1,f,c
  9387  003E32  0EF8               	movlw	-8
  9388  003E34  1EE3               	comf	plusw1,f,c
  9389  003E36  0EF9               	movlw	-7
  9390  003E38  1EE3               	comf	plusw1,f,c
  9391  003E3A  0EFA               	movlw	-6
  9392  003E3C  1EE3               	comf	plusw1,f,c
  9393  003E3E  0EFB               	movlw	-5
  9394  003E40  1EE3               	comf	plusw1,f,c
  9395  003E42  0EFC               	movlw	-4
  9396  003E44  1EE3               	comf	plusw1,f,c
  9397  003E46  0EFD               	movlw	-3
  9398  003E48  1EE3               	comf	plusw1,f,c
  9399  003E4A  E314               	bnc	u2450
  9400  003E4C  0EF7               	movlw	-9
  9401  003E4E  2AE3               	incf	plusw1,f,c
  9402  003E50  E311               	bnc	u2450
  9403  003E52  0EF8               	movlw	-8
  9404  003E54  2AE3               	incf	plusw1,f,c
  9405  003E56  E30E               	bnc	u2450
  9406  003E58  0EF9               	movlw	-7
  9407  003E5A  2AE3               	incf	plusw1,f,c
  9408  003E5C  E30B               	bnc	u2450
  9409  003E5E  0EFA               	movlw	-6
  9410  003E60  2AE3               	incf	plusw1,f,c
  9411  003E62  E308               	bnc	u2450
  9412  003E64  0EFB               	movlw	-5
  9413  003E66  2AE3               	incf	plusw1,f,c
  9414  003E68  E305               	bnc	u2450
  9415  003E6A  0EFC               	movlw	-4
  9416  003E6C  2AE3               	incf	plusw1,f,c
  9417  003E6E  E302               	bnc	u2450
  9418  003E70  0EFD               	movlw	-3
  9419  003E72  2AE3               	incf	plusw1,f,c
  9420  003E74                     u2450:
  9421                           
  9422                           ;stkvar	_dividend @ sp[(-2)+-8]
  9423  003E74  0EF6               	movlw	246
  9424  003E76  24E1               	addwf	fsr1l,w,c
  9425  003E78  6ED9               	movwf	fsr2l,c
  9426  003E7A  0EFF               	movlw	255
  9427  003E7C  20E2               	addwfc	fsr1h,w,c
  9428  003E7E  6EDA               	movwf	fsr2h,c
  9429                           
  9430                           ;stkvar	?___aomod @ sp[(-2)+-8]
  9431  003E80  0E08               	movlw	8
  9432  003E82  6E3D               	movwf	btemp,c
  9433  003E84  0EF6               	movlw	-10
  9434  003E86                     us246999:
  9435  003E86  006F FF7B FFE3     	movff	postinc2,plusw1
  9436  003E8C  28E8               	incf	wreg,w,c
  9437  003E8E  2E3D               	decfsz	btemp,f,c
  9438  003E90  D7FA               	bra	us246999
  9439                           
  9440                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
  9441  003E92  52E5               	movf	postdec1,f,c
  9442  003E94  52E5               	movf	postdec1,f,c
  9443  003E96  0012               	return		;funcret
  9444  003E98                     __end_of___aomod:
  9445                           	opt callstack 0
  9446                           
  9447 ;; *************** function ___aodiv *****************
  9448 ;; Defined at:
  9449 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  9450 ;; Parameters:    Size  Location     Type
  9451 ;;  dividend        8  [STACK] long long 
  9452 ;;  divisor         8  [STACK] long long 
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;  quotient        8  [STACK] long long 
  9455 ;;  sign            1  [STACK] unsigned char 
  9456 ;;  counter         1  [STACK] unsigned char 
  9457 ;; Return value:  Size  Location     Type
  9458 ;;                  8  [STACK] long long 
  9459 ;; Registers used:
  9460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9461 ;; Tracked objects:
  9462 ;;		On entry : 0/0
  9463 ;;		On exit  : 0/0
  9464 ;;		Unchanged: 0/0
  9465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9470 ;;Total ram usage:        0 bytes
  9471 ;; Hardware stack levels used:    1
  9472 ;; Hardware stack levels required when called:    3
  9473 ;; This function calls:
  9474 ;;		Nothing
  9475 ;; This function is called by:
  9476 ;;		_dtoa
  9477 ;; This function uses a reentrant model
  9478 ;;
  9479                           
  9480                           	psect	text43
  9481  00375A                     __ptext43:
  9482                           	opt callstack 0
  9483  00375A                     ___aodiv:
  9484                           	opt callstack 0
  9485                           
  9486                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
  9487  00375A  0E0A               	movlw	10
  9488  00375C  26E1               	addwf	fsr1l,f,c
  9489  00375E  0E00               	movlw	0
  9490  003760  22E2               	addwfc	fsr1h,f,c
  9491                           
  9492                           ;stkvar	_sign @ sp[(-10)+8]
  9493                           
  9494                           ;incstack = 0
  9495  003762  0EFE               	movlw	-2
  9496  003764  6AE3               	clrf	plusw1,c
  9497                           
  9498                           ;stkvar	_divisor @ sp[(-10)+-16]
  9499  003766  0EED               	movlw	-19
  9500  003768  AEE3               	btfss	plusw1,7,c
  9501  00376A  D028               	goto	l4937
  9502                           
  9503                           ;stkvar	_divisor @ sp[(-10)+-16]
  9504                           ;stkvar	_divisor @ sp[(-10)+-16]
  9505  00376C  0EE6               	movlw	-26
  9506  00376E  6CE3               	negf	plusw1,c
  9507  003770  0EE7               	movlw	-25
  9508  003772  1EE3               	comf	plusw1,f,c
  9509  003774  0EE8               	movlw	-24
  9510  003776  1EE3               	comf	plusw1,f,c
  9511  003778  0EE9               	movlw	-23
  9512  00377A  1EE3               	comf	plusw1,f,c
  9513  00377C  0EEA               	movlw	-22
  9514  00377E  1EE3               	comf	plusw1,f,c
  9515  003780  0EEB               	movlw	-21
  9516  003782  1EE3               	comf	plusw1,f,c
  9517  003784  0EEC               	movlw	-20
  9518  003786  1EE3               	comf	plusw1,f,c
  9519  003788  0EED               	movlw	-19
  9520  00378A  1EE3               	comf	plusw1,f,c
  9521  00378C  E314               	bnc	u2250
  9522  00378E  0EE7               	movlw	-25
  9523  003790  2AE3               	incf	plusw1,f,c
  9524  003792  E311               	bnc	u2250
  9525  003794  0EE8               	movlw	-24
  9526  003796  2AE3               	incf	plusw1,f,c
  9527  003798  E30E               	bnc	u2250
  9528  00379A  0EE9               	movlw	-23
  9529  00379C  2AE3               	incf	plusw1,f,c
  9530  00379E  E30B               	bnc	u2250
  9531  0037A0  0EEA               	movlw	-22
  9532  0037A2  2AE3               	incf	plusw1,f,c
  9533  0037A4  E308               	bnc	u2250
  9534  0037A6  0EEB               	movlw	-21
  9535  0037A8  2AE3               	incf	plusw1,f,c
  9536  0037AA  E305               	bnc	u2250
  9537  0037AC  0EEC               	movlw	-20
  9538  0037AE  2AE3               	incf	plusw1,f,c
  9539  0037B0  E302               	bnc	u2250
  9540  0037B2  0EED               	movlw	-19
  9541  0037B4  2AE3               	incf	plusw1,f,c
  9542  0037B6                     u2250:
  9543                           
  9544                           ;stkvar	_sign @ sp[(-10)+8]
  9545  0037B6  0EFE               	movlw	-2
  9546  0037B8  6AE3               	clrf	plusw1,c
  9547  0037BA  2AE3               	incf	plusw1,f,c
  9548  0037BC                     l4937:
  9549                           
  9550                           ;stkvar	_dividend @ sp[(-10)+-8]
  9551  0037BC  0EF5               	movlw	-11
  9552  0037BE  AEE3               	btfss	plusw1,7,c
  9553  0037C0  D027               	goto	l4943
  9554                           
  9555                           ;stkvar	_dividend @ sp[(-10)+-8]
  9556                           ;stkvar	_dividend @ sp[(-10)+-8]
  9557  0037C2  0EEE               	movlw	-18
  9558  0037C4  6CE3               	negf	plusw1,c
  9559  0037C6  0EEF               	movlw	-17
  9560  0037C8  1EE3               	comf	plusw1,f,c
  9561  0037CA  0EF0               	movlw	-16
  9562  0037CC  1EE3               	comf	plusw1,f,c
  9563  0037CE  0EF1               	movlw	-15
  9564  0037D0  1EE3               	comf	plusw1,f,c
  9565  0037D2  0EF2               	movlw	-14
  9566  0037D4  1EE3               	comf	plusw1,f,c
  9567  0037D6  0EF3               	movlw	-13
  9568  0037D8  1EE3               	comf	plusw1,f,c
  9569  0037DA  0EF4               	movlw	-12
  9570  0037DC  1EE3               	comf	plusw1,f,c
  9571  0037DE  0EF5               	movlw	-11
  9572  0037E0  1EE3               	comf	plusw1,f,c
  9573  0037E2  E314               	bnc	u2270
  9574  0037E4  0EEF               	movlw	-17
  9575  0037E6  2AE3               	incf	plusw1,f,c
  9576  0037E8  E311               	bnc	u2270
  9577  0037EA  0EF0               	movlw	-16
  9578  0037EC  2AE3               	incf	plusw1,f,c
  9579  0037EE  E30E               	bnc	u2270
  9580  0037F0  0EF1               	movlw	-15
  9581  0037F2  2AE3               	incf	plusw1,f,c
  9582  0037F4  E30B               	bnc	u2270
  9583  0037F6  0EF2               	movlw	-14
  9584  0037F8  2AE3               	incf	plusw1,f,c
  9585  0037FA  E308               	bnc	u2270
  9586  0037FC  0EF3               	movlw	-13
  9587  0037FE  2AE3               	incf	plusw1,f,c
  9588  003800  E305               	bnc	u2270
  9589  003802  0EF4               	movlw	-12
  9590  003804  2AE3               	incf	plusw1,f,c
  9591  003806  E302               	bnc	u2270
  9592  003808  0EF5               	movlw	-11
  9593  00380A  2AE3               	incf	plusw1,f,c
  9594  00380C                     u2270:
  9595                           
  9596                           ;stkvar	_sign @ sp[(-10)+8]
  9597  00380C  0EFE               	movlw	-2
  9598  00380E  70E3               	btg	plusw1,0,c
  9599  003810                     l4943:
  9600                           
  9601                           ;stkvar	_quotient @ sp[(-10)+0]
  9602  003810  0E07               	movlw	7
  9603  003812  6E3D               	movwf	btemp,c
  9604  003814  0EF6               	movlw	-10
  9605  003816                     u2281:
  9606  003816  6AE3               	clrf	plusw1,c
  9607  003818  2AE8               	incf	wreg,f,c
  9608  00381A  063D               	decf	btemp,f,c
  9609  00381C  E2FC               	bc	u2281
  9610                           
  9611                           ;stkvar	_divisor @ sp[(-10)+-16]
  9612  00381E  0EE6               	movlw	-26
  9613  003820  50E3               	movf	plusw1,w,c
  9614  003822  E116               	bnz	u2290
  9615  003824  0EE7               	movlw	-25
  9616  003826  50E3               	movf	plusw1,w,c
  9617  003828  E113               	bnz	u2290
  9618  00382A  0EE8               	movlw	-24
  9619  00382C  50E3               	movf	plusw1,w,c
  9620  00382E  E110               	bnz	u2290
  9621  003830  0EE9               	movlw	-23
  9622  003832  50E3               	movf	plusw1,w,c
  9623  003834  E10D               	bnz	u2290
  9624  003836  0EEA               	movlw	-22
  9625  003838  50E3               	movf	plusw1,w,c
  9626  00383A  E10A               	bnz	u2290
  9627  00383C  0EEB               	movlw	-21
  9628  00383E  50E3               	movf	plusw1,w,c
  9629  003840  E107               	bnz	u2290
  9630  003842  0EEC               	movlw	-20
  9631  003844  50E3               	movf	plusw1,w,c
  9632  003846  E104               	bnz	u2290
  9633  003848  0EED               	movlw	-19
  9634  00384A  50E3               	movf	plusw1,w,c
  9635  00384C  B4D8               	btfsc	status,2,c
  9636  00384E  D088               	goto	u2320
  9637  003850                     u2290:
  9638                           
  9639                           ;stkvar	_counter @ sp[(-10)+9]
  9640  003850  0EFF               	movlw	-1
  9641  003852  6AE3               	clrf	plusw1,c
  9642  003854  D012               	goto	L23
  9643  003856                     l4949:
  9644                           
  9645                           ;stkvar	_divisor @ sp[(-10)+-16]
  9646  003856  90D8               	bcf	status,0,c
  9647  003858  0EE6               	movlw	-26
  9648  00385A  36E3               	rlcf	plusw1,f,c
  9649  00385C  0EE7               	movlw	-25
  9650  00385E  36E3               	rlcf	plusw1,f,c
  9651  003860  0EE8               	movlw	-24
  9652  003862  36E3               	rlcf	plusw1,f,c
  9653  003864  0EE9               	movlw	-23
  9654  003866  36E3               	rlcf	plusw1,f,c
  9655  003868  0EEA               	movlw	-22
  9656  00386A  36E3               	rlcf	plusw1,f,c
  9657  00386C  0EEB               	movlw	-21
  9658  00386E  36E3               	rlcf	plusw1,f,c
  9659  003870  0EEC               	movlw	-20
  9660  003872  36E3               	rlcf	plusw1,f,c
  9661  003874  0EED               	movlw	-19
  9662  003876  36E3               	rlcf	plusw1,f,c
  9663                           
  9664                           ;stkvar	_counter @ sp[(-10)+9]
  9665  003878  0EFF               	movlw	-1
  9666  00387A                     L23:
  9667  00387A  2AE3               	incf	plusw1,f,c
  9668                           
  9669                           ;stkvar	_divisor @ sp[(-10)+-16]
  9670  00387C  0EED               	movlw	-19
  9671  00387E  AEE3               	btfss	plusw1,7,c
  9672  003880  D7EA               	goto	l4949
  9673  003882                     u2300:
  9674                           
  9675                           ;stkvar	_quotient @ sp[(-10)+0]
  9676  003882  90D8               	bcf	status,0,c
  9677  003884  0EF6               	movlw	-10
  9678  003886  36E3               	rlcf	plusw1,f,c
  9679  003888  0EF7               	movlw	-9
  9680  00388A  36E3               	rlcf	plusw1,f,c
  9681  00388C  0EF8               	movlw	-8
  9682  00388E  36E3               	rlcf	plusw1,f,c
  9683  003890  0EF9               	movlw	-7
  9684  003892  36E3               	rlcf	plusw1,f,c
  9685  003894  0EFA               	movlw	-6
  9686  003896  36E3               	rlcf	plusw1,f,c
  9687  003898  0EFB               	movlw	-5
  9688  00389A  36E3               	rlcf	plusw1,f,c
  9689  00389C  0EFC               	movlw	-4
  9690  00389E  36E3               	rlcf	plusw1,f,c
  9691  0038A0  0EFD               	movlw	-3
  9692  0038A2  36E3               	rlcf	plusw1,f,c
  9693                           
  9694                           ;stkvar	_divisor @ sp[(-10)+-16]
  9695                           ;stkvar	_dividend @ sp[(-10)+-8]
  9696  0038A4  50E1               	movf	fsr1l,w,c
  9697  0038A6  0FEE               	addlw	-18
  9698  0038A8  6ED9               	movwf	fsr2l,c
  9699  0038AA  50E2               	movf	fsr1h,w,c
  9700  0038AC  6EDA               	movwf	fsr2h,c
  9701  0038AE  0EFF               	movlw	255
  9702  0038B0  22DA               	addwfc	fsr2h,f,c
  9703  0038B2  0EE6               	movlw	-26
  9704  0038B4  50E3               	movf	plusw1,w,c
  9705  0038B6  5CDE               	subwf	postinc2,w,c
  9706  0038B8  0EE7               	movlw	-25
  9707  0038BA  50E3               	movf	plusw1,w,c
  9708  0038BC  58DE               	subwfb	postinc2,w,c
  9709  0038BE  0EE8               	movlw	-24
  9710  0038C0  50E3               	movf	plusw1,w,c
  9711  0038C2  58DE               	subwfb	postinc2,w,c
  9712  0038C4  0EE9               	movlw	-23
  9713  0038C6  50E3               	movf	plusw1,w,c
  9714  0038C8  58DE               	subwfb	postinc2,w,c
  9715  0038CA  0EEA               	movlw	-22
  9716  0038CC  50E3               	movf	plusw1,w,c
  9717  0038CE  58DE               	subwfb	postinc2,w,c
  9718  0038D0  0EEB               	movlw	-21
  9719  0038D2  50E3               	movf	plusw1,w,c
  9720  0038D4  58DE               	subwfb	postinc2,w,c
  9721  0038D6  0EEC               	movlw	-20
  9722  0038D8  50E3               	movf	plusw1,w,c
  9723  0038DA  58DE               	subwfb	postinc2,w,c
  9724  0038DC  0EED               	movlw	-19
  9725  0038DE  50E3               	movf	plusw1,w,c
  9726  0038E0  58DE               	subwfb	postinc2,w,c
  9727  0038E2  A0D8               	btfss	status,0,c
  9728  0038E4  D021               	goto	l4961
  9729                           
  9730                           ;stkvar	_divisor @ sp[(-10)+-16]
  9731                           ;stkvar	_dividend @ sp[(-10)+-8]
  9732  0038E6  50E1               	movf	fsr1l,w,c
  9733  0038E8  0FEE               	addlw	-18
  9734  0038EA  6ED9               	movwf	fsr2l,c
  9735  0038EC  50E2               	movf	fsr1h,w,c
  9736  0038EE  6EDA               	movwf	fsr2h,c
  9737  0038F0  0EFF               	movlw	255
  9738  0038F2  22DA               	addwfc	fsr2h,f,c
  9739  0038F4  0EE6               	movlw	-26
  9740  0038F6  50E3               	movf	plusw1,w,c
  9741  0038F8  5EDE               	subwf	postinc2,f,c
  9742  0038FA  0EE7               	movlw	-25
  9743  0038FC  50E3               	movf	plusw1,w,c
  9744  0038FE  5ADE               	subwfb	postinc2,f,c
  9745  003900  0EE8               	movlw	-24
  9746  003902  50E3               	movf	plusw1,w,c
  9747  003904  5ADE               	subwfb	postinc2,f,c
  9748  003906  0EE9               	movlw	-23
  9749  003908  50E3               	movf	plusw1,w,c
  9750  00390A  5ADE               	subwfb	postinc2,f,c
  9751  00390C  0EEA               	movlw	-22
  9752  00390E  50E3               	movf	plusw1,w,c
  9753  003910  5ADE               	subwfb	postinc2,f,c
  9754  003912  0EEB               	movlw	-21
  9755  003914  50E3               	movf	plusw1,w,c
  9756  003916  5ADE               	subwfb	postinc2,f,c
  9757  003918  0EEC               	movlw	-20
  9758  00391A  50E3               	movf	plusw1,w,c
  9759  00391C  5ADE               	subwfb	postinc2,f,c
  9760  00391E  0EED               	movlw	-19
  9761  003920  50E3               	movf	plusw1,w,c
  9762  003922  5ADE               	subwfb	postinc2,f,c
  9763                           
  9764                           ;stkvar	_quotient @ sp[(-10)+0]
  9765  003924  0EF6               	movlw	-10
  9766  003926  80E3               	bsf	plusw1,0,c
  9767  003928                     l4961:
  9768                           
  9769                           ;stkvar	_divisor @ sp[(-10)+-16]
  9770  003928  90D8               	bcf	status,0,c
  9771  00392A  0EED               	movlw	-19
  9772  00392C  32E3               	rrcf	plusw1,f,c
  9773  00392E  0EEC               	movlw	-20
  9774  003930  32E3               	rrcf	plusw1,f,c
  9775  003932  0EEB               	movlw	-21
  9776  003934  32E3               	rrcf	plusw1,f,c
  9777  003936  0EEA               	movlw	-22
  9778  003938  32E3               	rrcf	plusw1,f,c
  9779  00393A  0EE9               	movlw	-23
  9780  00393C  32E3               	rrcf	plusw1,f,c
  9781  00393E  0EE8               	movlw	-24
  9782  003940  32E3               	rrcf	plusw1,f,c
  9783  003942  0EE7               	movlw	-25
  9784  003944  32E3               	rrcf	plusw1,f,c
  9785  003946  0EE6               	movlw	-26
  9786  003948  32E3               	rrcf	plusw1,f,c
  9787                           
  9788                           ;stkvar	_counter @ sp[(-10)+9]
  9789  00394A  0EFF               	movlw	-1
  9790  00394C  50E3               	movf	plusw1,w,c
  9791  00394E  6E3D               	movwf	btemp,c
  9792  003950  0E01               	movlw	1
  9793  003952  5E3D               	subwf	btemp,f,c
  9794  003954  0EFF               	movlw	-1
  9795  003956  0060  F0F7  FFE3   	movff	btemp,plusw1
  9796  00395C  A4D8               	btfss	status,2,c
  9797  00395E  D791               	goto	u2300
  9798  003960                     u2320:
  9799                           
  9800                           ;stkvar	_sign @ sp[(-10)+8]
  9801  003960  0EFE               	movlw	-2
  9802  003962  50E3               	movf	plusw1,w,c
  9803  003964  B4D8               	btfsc	status,2,c
  9804  003966  D025               	goto	u2340
  9805                           
  9806                           ;stkvar	_quotient @ sp[(-10)+0]
  9807                           ;stkvar	_quotient @ sp[(-10)+0]
  9808  003968  0EF6               	movlw	-10
  9809  00396A  6CE3               	negf	plusw1,c
  9810  00396C  0EF7               	movlw	-9
  9811  00396E  1EE3               	comf	plusw1,f,c
  9812  003970  0EF8               	movlw	-8
  9813  003972  1EE3               	comf	plusw1,f,c
  9814  003974  0EF9               	movlw	-7
  9815  003976  1EE3               	comf	plusw1,f,c
  9816  003978  0EFA               	movlw	-6
  9817  00397A  1EE3               	comf	plusw1,f,c
  9818  00397C  0EFB               	movlw	-5
  9819  00397E  1EE3               	comf	plusw1,f,c
  9820  003980  0EFC               	movlw	-4
  9821  003982  1EE3               	comf	plusw1,f,c
  9822  003984  0EFD               	movlw	-3
  9823  003986  1EE3               	comf	plusw1,f,c
  9824  003988  E314               	bnc	u2340
  9825  00398A  0EF7               	movlw	-9
  9826  00398C  2AE3               	incf	plusw1,f,c
  9827  00398E  E311               	bnc	u2340
  9828  003990  0EF8               	movlw	-8
  9829  003992  2AE3               	incf	plusw1,f,c
  9830  003994  E30E               	bnc	u2340
  9831  003996  0EF9               	movlw	-7
  9832  003998  2AE3               	incf	plusw1,f,c
  9833  00399A  E30B               	bnc	u2340
  9834  00399C  0EFA               	movlw	-6
  9835  00399E  2AE3               	incf	plusw1,f,c
  9836  0039A0  E308               	bnc	u2340
  9837  0039A2  0EFB               	movlw	-5
  9838  0039A4  2AE3               	incf	plusw1,f,c
  9839  0039A6  E305               	bnc	u2340
  9840  0039A8  0EFC               	movlw	-4
  9841  0039AA  2AE3               	incf	plusw1,f,c
  9842  0039AC  E302               	bnc	u2340
  9843  0039AE  0EFD               	movlw	-3
  9844  0039B0  2AE3               	incf	plusw1,f,c
  9845  0039B2                     u2340:
  9846                           
  9847                           ;stkvar	_quotient @ sp[(-10)+0]
  9848  0039B2  0EF6               	movlw	246
  9849  0039B4  24E1               	addwf	fsr1l,w,c
  9850  0039B6  6ED9               	movwf	fsr2l,c
  9851  0039B8  0EFF               	movlw	255
  9852  0039BA  20E2               	addwfc	fsr1h,w,c
  9853  0039BC  6EDA               	movwf	fsr2h,c
  9854                           
  9855                           ;stkvar	?___aodiv @ sp[(-10)+-8]
  9856  0039BE  0E08               	movlw	8
  9857  0039C0  6E3D               	movwf	btemp,c
  9858  0039C2  0EEE               	movlw	-18
  9859  0039C4                     us235999:
  9860  0039C4  006F FF7B FFE3     	movff	postinc2,plusw1
  9861  0039CA  28E8               	incf	wreg,w,c
  9862  0039CC  2E3D               	decfsz	btemp,f,c
  9863  0039CE  D7FA               	bra	us235999
  9864                           
  9865                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
  9866  0039D0  0EF6               	movlw	246
  9867  0039D2  26E1               	addwf	fsr1l,f,c
  9868  0039D4  0EFF               	movlw	255
  9869  0039D6  22E2               	addwfc	fsr1h,f,c
  9870  0039D8  0012               	return		;funcret
  9871  0039DA                     __end_of___aodiv:
  9872                           	opt callstack 0
  9873                           
  9874 ;; *************** function _ctoa *****************
  9875 ;; Defined at:
  9876 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9879 ;;		 -> f(5), NULL(0), 
  9880 ;;  c               1  [STACK] unsigned char 
  9881 ;; Auto vars:     Size  Location     Type
  9882 ;;  w               2  [STACK] int 
  9883 ;;  l               2    0        int 
  9884 ;; Return value:  Size  Location     Type
  9885 ;;                  2  [STACK] int 
  9886 ;; Registers used:
  9887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
  9888 ;; Tracked objects:
  9889 ;;		On entry : 0/1
  9890 ;;		On exit  : 0/0
  9891 ;;		Unchanged: 0/0
  9892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9897 ;;Total ram usage:        0 bytes
  9898 ;; Hardware stack levels used:    1
  9899 ;; Hardware stack levels required when called:    8
  9900 ;; This function calls:
  9901 ;;		_pad
  9902 ;; This function is called by:
  9903 ;;		_vfpfcnvrt
  9904 ;; This function uses a reentrant model
  9905 ;;
  9906                           
  9907                           	psect	text44
  9908  004F36                     __ptext44:
  9909                           	opt callstack 0
  9910  004F36                     _ctoa:
  9911                           	opt callstack 0
  9912                           
  9913                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9914  004F36  52E6               	movf	postinc1,f,c
  9915  004F38  52E6               	movf	postinc1,f,c
  9916                           
  9917                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  9918                           
  9919                           ;incstack = 0
  9920  004F3A  5024               	movf	_width,w,c
  9921  004F3C  1025               	iorwf	_width+1,w,c
  9922  004F3E  A4D8               	btfss	status,2,c
  9923  004F40  D009               	goto	l7005
  9924                           
  9925                           ;stkvar	_w @ sp[(-2)+0]
  9926  004F42  0EFE               	movlw	-2
  9927  004F44  0060  F093  FFE3   	movff	_width,plusw1
  9928  004F4A  0EFF               	movlw	-1
  9929  004F4C  0060  F097  FFE3   	movff	_width+1,plusw1
  9930  004F52  D016               	goto	l7007
  9931  004F54                     l7005:
  9932  004F54  0EFF               	movlw	255
  9933  004F56  6E47               	movwf	btemp+10,c
  9934  004F58  0EFF               	movlw	255
  9935  004F5A  6E48               	movwf	btemp+11,c
  9936  004F5C  0060  F090  F045   	movff	_width,btemp+8
  9937  004F62  0060  F094  F046   	movff	_width+1,btemp+9
  9938  004F68  5047               	movf	btemp+10,w,c
  9939  004F6A  2645               	addwf	btemp+8,f,c
  9940  004F6C  5048               	movf	btemp+11,w,c
  9941  004F6E  2246               	addwfc	btemp+9,f,c
  9942                           
  9943                           ;stkvar	_w @ sp[(-2)+0]
  9944  004F70  0EFE               	movlw	-2
  9945  004F72  0060  F117  FFE3   	movff	btemp+8,plusw1
  9946  004F78  0EFF               	movlw	-1
  9947  004F7A  0060  F11B  FFE3   	movff	btemp+9,plusw1
  9948  004F80                     l7007:
  9949                           
  9950                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  9951                           ;stkvar	_c @ sp[(-2)+-3]
  9952  004F80  0EFB               	movlw	-5
  9953  004F82  006F FF8C  F0D9    	movff	plusw1,_dbuf
  9954                           
  9955                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  9956  004F88  0100               	movlb	0	; () banked
  9957  004F8A  6BDA               	clrf	(_dbuf+1)& (0+255),b
  9958                           
  9959                           ; BSR set to: 0
  9960                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  9961                           ;stkvar	_w @ sp[(-2)+0]
  9962  004F8C  0EFE               	movlw	-2
  9963  004F8E  006F FF8F FFE6     	movff	plusw1,postinc1
  9964  004F94  006F FF8F FFE6     	movff	plusw1,postinc1
  9965  004F9A  0ED9               	movlw	_dbuf& (0+255)
  9966  004F9C  6EE6               	movwf	postinc1,c
  9967                           
  9968                           ;stkvar	_fp @ sp[(-5)+-2]
  9969  004F9E  0EF9               	movlw	-7
  9970  004FA0  006F FF8F FFE6     	movff	plusw1,postinc1
  9971  004FA6  006F FF8F FFE6     	movff	plusw1,postinc1
  9972  004FAC  EC5D  F023         	call	_pad	;wreg free
  9973                           
  9974                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
  9975  004FB0  0EFB               	movlw	251
  9976  004FB2  26E1               	addwf	fsr1l,f,c
  9977  004FB4  0EFF               	movlw	255
  9978  004FB6  22E2               	addwfc	fsr1h,f,c
  9979  004FB8  0012               	return		;funcret
  9980  004FBA                     __end_of_ctoa:
  9981                           	opt callstack 0
  9982                           
  9983 ;; *************** function _pad *****************
  9984 ;; Defined at:
  9985 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9986 ;; Parameters:    Size  Location     Type
  9987 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9988 ;;		 -> f(5), NULL(0), 
  9989 ;;  buf             1  [STACK] PTR unsigned char 
  9990 ;;		 -> dbuf(32), 
  9991 ;;  p               2  [STACK] int 
  9992 ;; Auto vars:     Size  Location     Type
  9993 ;;  w               2  [STACK] int 
  9994 ;;  i               2  [STACK] int 
  9995 ;; Return value:  Size  Location     Type
  9996 ;;                  2  [STACK] int 
  9997 ;; Registers used:
  9998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
  9999 ;; Tracked objects:
 10000 ;;		On entry : 0/0
 10001 ;;		On exit  : 0/0
 10002 ;;		Unchanged: 0/0
 10003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10008 ;;Total ram usage:        0 bytes
 10009 ;; Hardware stack levels used:    1
 10010 ;; Hardware stack levels required when called:    7
 10011 ;; This function calls:
 10012 ;;		_fputc
 10013 ;;		_fputs
 10014 ;;		_strlen
 10015 ;; This function is called by:
 10016 ;;		_ctoa
 10017 ;;		_dtoa
 10018 ;;		_xtoa
 10019 ;; This function uses a reentrant model
 10020 ;;
 10021                           
 10022                           	psect	text45
 10023  0046BA                     __ptext45:
 10024                           	opt callstack 0
 10025  0046BA                     _pad:
 10026                           	opt callstack 0
 10027                           
 10028                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10029  0046BA  52E6               	movf	postinc1,f,c
 10030  0046BC  52E6               	movf	postinc1,f,c
 10031  0046BE  52E6               	movf	postinc1,f,c
 10032  0046C0  52E6               	movf	postinc1,f,c
 10033                           
 10034                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 10035                           
 10036                           ;incstack = 0
 10037  0046C2  A028               	btfss	_flags,0,c
 10038  0046C4  D00C               	goto	l6983
 10039                           
 10040                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 10041                           ;stkvar	_fp @ sp[(-4)+-2]
 10042  0046C6  0EFA               	movlw	-6
 10043  0046C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10044  0046CE  006F FF8F FFE6     	movff	plusw1,postinc1
 10045                           
 10046                           ;stkvar	_buf @ sp[(-6)+-3]
 10047  0046D4  0EF7               	movlw	-9
 10048  0046D6  50E3               	movf	plusw1,w,c
 10049  0046D8  6EE6               	movwf	postinc1,c
 10050  0046DA  EC1F  F028         	call	_fputs	;wreg free
 10051  0046DE                     l6983:
 10052                           
 10053                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 10054                           ;stkvar	_p @ sp[(-4)+-5]
 10055  0046DE  0EF8               	movlw	-8
 10056  0046E0  BEE3               	btfsc	plusw1,7,c
 10057  0046E2  D011               	goto	l6987
 10058                           
 10059                           ;stkvar	_p @ sp[(-4)+-5]
 10060                           ;stkvar	_w @ sp[(-4)+0]
 10061  0046E4  0EF7               	movlw	-9
 10062  0046E6  006F FF8C  F03D    	movff	plusw1,btemp
 10063  0046EC  0EFC               	movlw	-4
 10064  0046EE  0060  F0F7  FFE3   	movff	btemp,plusw1
 10065  0046F4  0EF8               	movlw	-8
 10066  0046F6  006F FF8C  F03D    	movff	plusw1,btemp
 10067  0046FC  0EFD               	movlw	-3
 10068  0046FE  0060  F0F7  FFE3   	movff	btemp,plusw1
 10069  004704  D004               	goto	l1644
 10070  004706                     l6987:
 10071                           
 10072                           ;stkvar	_w @ sp[(-4)+0]
 10073  004706  0EFC               	movlw	-4
 10074  004708  6AE3               	clrf	plusw1,c
 10075  00470A  0EFD               	movlw	-3
 10076  00470C  6AE3               	clrf	plusw1,c
 10077  00470E                     l1644:
 10078                           
 10079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 10080                           ;stkvar	_i @ sp[(-4)+2]
 10081  00470E  0EFE               	movlw	-2
 10082  004710  6AE3               	clrf	plusw1,c
 10083  004712  0EFF               	movlw	-1
 10084  004714  6AE3               	clrf	plusw1,c
 10085                           
 10086                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 10087  004716  D01E               	goto	l6993
 10088  004718                     l6989:
 10089                           
 10090                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 10091                           ;stkvar	_fp @ sp[(-4)+-2]
 10092  004718  0EFA               	movlw	-6
 10093  00471A  006F FF8F FFE6     	movff	plusw1,postinc1
 10094  004720  006F FF8F FFE6     	movff	plusw1,postinc1
 10095  004726  0E20               	movlw	32
 10096  004728  6EE6               	movwf	postinc1,c
 10097  00472A  0E00               	movlw	0
 10098  00472C  6EE6               	movwf	postinc1,c
 10099  00472E  ECD7  F022         	call	_fputc	;wreg free
 10100                           
 10101                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 10102                           ;stkvar	_i @ sp[(-4)+2]
 10103  004732  0EFE               	movlw	-2
 10104  004734  50E3               	movf	plusw1,w,c
 10105  004736  0F01               	addlw	1
 10106  004738  6E3D               	movwf	btemp,c
 10107  00473A  0EFE               	movlw	-2
 10108  00473C  0060  F0F7  FFE3   	movff	btemp,plusw1
 10109  004742  6A3D               	clrf	btemp,c
 10110  004744  0EFF               	movlw	-1
 10111  004746  50E3               	movf	plusw1,w,c
 10112  004748  203D               	addwfc	btemp,w,c
 10113  00474A  6E3D               	movwf	btemp,c
 10114  00474C  0EFF               	movlw	-1
 10115  00474E  0060  F0F7  FFE3   	movff	btemp,plusw1
 10116  004754                     l6993:
 10117                           
 10118                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 10119                           ;stkvar	_w @ sp[(-4)+0]
 10120                           ;stkvar	_i @ sp[(-4)+2]
 10121  004754  50E1               	movf	fsr1l,w,c
 10122  004756  0FFE               	addlw	-2
 10123  004758  6ED9               	movwf	fsr2l,c
 10124  00475A  50E2               	movf	fsr1h,w,c
 10125  00475C  6EDA               	movwf	fsr2h,c
 10126  00475E  0EFF               	movlw	255
 10127  004760  22DA               	addwfc	fsr2h,f,c
 10128  004762  0EFC               	movlw	-4
 10129  004764  50E3               	movf	plusw1,w,c
 10130  004766  5CDE               	subwf	postinc2,w,c
 10131  004768  50DE               	movf	postinc2,w,c
 10132  00476A  0A80               	xorlw	128
 10133  00476C  6E3D               	movwf	btemp,c
 10134  00476E  0EFD               	movlw	-3
 10135  004770  50E3               	movf	plusw1,w,c
 10136  004772  0A80               	xorlw	128
 10137  004774  583D               	subwfb	btemp,w,c
 10138  004776  A0D8               	btfss	status,0,c
 10139  004778  D7CF               	goto	l6989
 10140                           
 10141                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 10142  00477A  B028               	btfsc	_flags,0,c
 10143  00477C  D00C               	goto	l6997
 10144                           
 10145                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 10146                           ;stkvar	_fp @ sp[(-4)+-2]
 10147  00477E  0EFA               	movlw	-6
 10148  004780  006F FF8F FFE6     	movff	plusw1,postinc1
 10149  004786  006F FF8F FFE6     	movff	plusw1,postinc1
 10150                           
 10151                           ;stkvar	_buf @ sp[(-6)+-3]
 10152  00478C  0EF7               	movlw	-9
 10153  00478E  50E3               	movf	plusw1,w,c
 10154  004790  6EE6               	movwf	postinc1,c
 10155  004792  EC1F  F028         	call	_fputs	;wreg free
 10156  004796                     l6997:
 10157                           
 10158                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 10159                           ;stkvar	_w @ sp[(-4)+0]
 10160                           ;stkvar	_buf @ sp[(-4)+-3]
 10161  004796  0EF9               	movlw	-7
 10162  004798  006F FF8C  F048    	movff	plusw1,btemp+11
 10163  00479E  0060  F123  FFE6   	movff	btemp+11,postinc1
 10164  0047A4  0E00               	movlw	0
 10165  0047A6  6EE6               	movwf	postinc1,c
 10166  0047A8  ECDD  F027         	call	_strlen	;wreg free
 10167  0047AC  0EFC               	movlw	-4
 10168  0047AE  50E3               	movf	plusw1,w,c
 10169  0047B0  263D               	addwf	btemp,f,c
 10170  0047B2  0EFD               	movlw	-3
 10171  0047B4  50E3               	movf	plusw1,w,c
 10172  0047B6  223E               	addwfc	btemp+1,f,c
 10173                           
 10174                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize =
      +                           5, vargsize = 0
 10175  0047B8  0EF7               	movlw	247
 10176  0047BA  26E1               	addwf	fsr1l,f,c
 10177  0047BC  0EFF               	movlw	255
 10178  0047BE  22E2               	addwfc	fsr1h,f,c
 10179  0047C0  0012               	return		;funcret
 10180  0047C2                     __end_of_pad:
 10181                           	opt callstack 0
 10182                           
 10183 ;; *************** function _strlen *****************
 10184 ;; Defined at:
 10185 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 10186 ;; Parameters:    Size  Location     Type
 10187 ;;  s               2  [STACK] PTR const unsigned char 
 10188 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 10189 ;;		 -> V(80), 
 10190 ;; Auto vars:     Size  Location     Type
 10191 ;;  a               2  [STACK] PTR const unsigned char 
 10192 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 10193 ;;		 -> V(80), 
 10194 ;; Return value:  Size  Location     Type
 10195 ;;                  2  [STACK] unsigned int 
 10196 ;; Registers used:
 10197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10198 ;; Tracked objects:
 10199 ;;		On entry : 0/0
 10200 ;;		On exit  : 0/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10207 ;;Total ram usage:        0 bytes
 10208 ;; Hardware stack levels used:    1
 10209 ;; Hardware stack levels required when called:    3
 10210 ;; This function calls:
 10211 ;;		Nothing
 10212 ;; This function is called by:
 10213 ;;		_eaDogM_WriteString
 10214 ;;		_pad
 10215 ;;		_stoa
 10216 ;; This function uses a reentrant model
 10217 ;;
 10218                           
 10219                           	psect	text46
 10220  004FBA                     __ptext46:
 10221                           	opt callstack 0
 10222  004FBA                     _strlen:
 10223                           	opt callstack 0
 10224                           
 10225                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10226  004FBA  52E6               	movf	postinc1,f,c
 10227  004FBC  52E6               	movf	postinc1,f,c
 10228                           
 10229                           ;stkvar	_s @ sp[(-2)+-2]
 10230                           
 10231                           ;incstack = 0
 10232  004FBE  0EFC               	movlw	-4
 10233  004FC0  006F FF8C  F047    	movff	plusw1,btemp+10
 10234  004FC6  0EFD               	movlw	-3
 10235  004FC8  006F FF8C  F048    	movff	plusw1,btemp+11
 10236                           
 10237                           ;stkvar	_a @ sp[(-2)+0]
 10238  004FCE  0EFF               	movlw	-1
 10239  004FD0  0060  F123  FFE3   	movff	btemp+11,plusw1
 10240  004FD6  0EFE               	movlw	-2
 10241  004FD8  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10242  004FDE  D011               	goto	l4855
 10243  004FE0                     l4853:
 10244                           
 10245                           ;stkvar	_s @ sp[(-2)+-2]
 10246  004FE0  0EFC               	movlw	-4
 10247  004FE2  50E3               	movf	plusw1,w,c
 10248  004FE4  0F01               	addlw	1
 10249  004FE6  6E3D               	movwf	btemp,c
 10250  004FE8  0EFC               	movlw	-4
 10251  004FEA  0060  F0F7  FFE3   	movff	btemp,plusw1
 10252  004FF0  6A3D               	clrf	btemp,c
 10253  004FF2  0EFD               	movlw	-3
 10254  004FF4  50E3               	movf	plusw1,w,c
 10255  004FF6  203D               	addwfc	btemp,w,c
 10256  004FF8  6E3D               	movwf	btemp,c
 10257  004FFA  0EFD               	movlw	-3
 10258  004FFC  0060  F0F7  FFE3   	movff	btemp,plusw1
 10259  005002                     l4855:
 10260                           
 10261                           ;stkvar	_s @ sp[(-2)+-2]
 10262  005002  0EFC               	movlw	-4
 10263  005004  006F FF8F FFD9     	movff	plusw1,fsr2l
 10264  00500A  0EFD               	movlw	-3
 10265  00500C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10266  005012  50DF               	movf	indf2,w,c
 10267  005014  A4D8               	btfss	status,2,c
 10268  005016  D7E4               	goto	l4853
 10269                           
 10270                           ;stkvar	_a @ sp[(-2)+0]
 10271                           ;stkvar	_s @ sp[(-2)+-2]
 10272  005018  0EFC               	movlw	-4
 10273  00501A  006F FF8C  F03D    	movff	plusw1,btemp
 10274  005020  0EFD               	movlw	-3
 10275  005022  006F FF8C  F03E    	movff	plusw1,btemp+1
 10276  005028  0EFE               	movlw	-2
 10277  00502A  50E3               	movf	plusw1,w,c
 10278  00502C  5E3D               	subwf	btemp,f,c
 10279  00502E  0EFF               	movlw	-1
 10280  005030  50E3               	movf	plusw1,w,c
 10281  005032  5A3E               	subwfb	btemp+1,f,c
 10282                           
 10283                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 10284  005034  52E5               	movf	postdec1,f,c
 10285  005036  52E5               	movf	postdec1,f,c
 10286  005038  52E5               	movf	postdec1,f,c
 10287  00503A  52E5               	movf	postdec1,f,c
 10288  00503C  0012               	return		;funcret
 10289  00503E                     __end_of_strlen:
 10290                           	opt callstack 0
 10291                           
 10292 ;; *************** function _fputs *****************
 10293 ;; Defined at:
 10294 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 10295 ;; Parameters:    Size  Location     Type
 10296 ;;  s               1  [STACK] PTR const unsigned char 
 10297 ;;		 -> dbuf(32), 
 10298 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10299 ;;		 -> f(5), NULL(0), 
 10300 ;; Auto vars:     Size  Location     Type
 10301 ;;  i               2  [STACK] int 
 10302 ;;  c               1  [STACK] unsigned char 
 10303 ;; Return value:  Size  Location     Type
 10304 ;;                  2  [STACK] int 
 10305 ;; Registers used:
 10306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 10307 ;; Tracked objects:
 10308 ;;		On entry : 0/0
 10309 ;;		On exit  : 0/0
 10310 ;;		Unchanged: 0/0
 10311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10316 ;;Total ram usage:        0 bytes
 10317 ;; Hardware stack levels used:    1
 10318 ;; Hardware stack levels required when called:    6
 10319 ;; This function calls:
 10320 ;;		_fputc
 10321 ;; This function is called by:
 10322 ;;		_pad
 10323 ;; This function uses a reentrant model
 10324 ;;
 10325                           
 10326                           	psect	text47
 10327  00503E                     __ptext47:
 10328                           	opt callstack 0
 10329  00503E                     _fputs:
 10330                           	opt callstack 0
 10331                           
 10332                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10333  00503E  52E6               	movf	postinc1,f,c
 10334  005040  52E6               	movf	postinc1,f,c
 10335  005042  52E6               	movf	postinc1,f,c
 10336                           
 10337                           ;stkvar	_i @ sp[(-3)+0]
 10338                           
 10339                           ;incstack = 0
 10340  005044  0EFD               	movlw	-3
 10341  005046  6AE3               	clrf	plusw1,c
 10342  005048  0EFE               	movlw	-2
 10343  00504A  6AE3               	clrf	plusw1,c
 10344  00504C  D01F               	goto	l6977
 10345  00504E                     l6973:
 10346                           
 10347                           ;stkvar	_fp @ sp[(-3)+-3]
 10348  00504E  0EFA               	movlw	-6
 10349  005050  006F FF8F FFE6     	movff	plusw1,postinc1
 10350  005056  006F FF8F FFE6     	movff	plusw1,postinc1
 10351                           
 10352                           ;stkvar	_c @ sp[(-5)+2]
 10353  00505C  0EFD               	movlw	-3
 10354  00505E  50E3               	movf	plusw1,w,c
 10355  005060  6EE6               	movwf	postinc1,c
 10356  005062  0E00               	movlw	0
 10357  005064  6EE6               	movwf	postinc1,c
 10358  005066  ECD7  F022         	call	_fputc	;wreg free
 10359                           
 10360                           ;stkvar	_i @ sp[(-3)+0]
 10361  00506A  0EFD               	movlw	-3
 10362  00506C  50E3               	movf	plusw1,w,c
 10363  00506E  0F01               	addlw	1
 10364  005070  6E3D               	movwf	btemp,c
 10365  005072  0EFD               	movlw	-3
 10366  005074  0060  F0F7  FFE3   	movff	btemp,plusw1
 10367  00507A  6A3D               	clrf	btemp,c
 10368  00507C  0EFE               	movlw	-2
 10369  00507E  50E3               	movf	plusw1,w,c
 10370  005080  203D               	addwfc	btemp,w,c
 10371  005082  6E3D               	movwf	btemp,c
 10372  005084  0EFE               	movlw	-2
 10373  005086  0060  F0F7  FFE3   	movff	btemp,plusw1
 10374  00508C                     l6977:
 10375                           
 10376                           ;stkvar	_i @ sp[(-3)+0]
 10377  00508C  0EFD               	movlw	-3
 10378  00508E  006F FF8C  F048    	movff	plusw1,btemp+11
 10379                           
 10380                           ;stkvar	_s @ sp[(-3)+-1]
 10381  005094  0EFC               	movlw	-4
 10382  005096  50E3               	movf	plusw1,w,c
 10383  005098  2448               	addwf	btemp+11,w,c
 10384  00509A  6ED9               	movwf	fsr2l,c
 10385  00509C  6ADA               	clrf	fsr2h,c
 10386  00509E  50DF               	movf	indf2,w,c
 10387  0050A0  6E48               	movwf	btemp+11,c
 10388                           
 10389                           ;stkvar	_c @ sp[(-3)+2]
 10390  0050A2  0EFF               	movlw	-1
 10391  0050A4  0060  F123  FFE3   	movff	btemp+11,plusw1
 10392  0050AA  0EFF               	movlw	-1
 10393  0050AC  50E3               	movf	plusw1,w,c
 10394  0050AE  A4D8               	btfss	status,2,c
 10395  0050B0  D7CE               	goto	l6973
 10396                           
 10397                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize
      +                           = 3, vargsize = 0
 10398  0050B2  0EFA               	movlw	250
 10399  0050B4  26E1               	addwf	fsr1l,f,c
 10400  0050B6  0EFF               	movlw	255
 10401  0050B8  22E2               	addwfc	fsr1h,f,c
 10402  0050BA  0012               	return		;funcret
 10403  0050BC                     __end_of_fputs:
 10404                           	opt callstack 0
 10405                           
 10406 ;; *************** function _fputc *****************
 10407 ;; Defined at:
 10408 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 10409 ;; Parameters:    Size  Location     Type
 10410 ;;  c               2  [STACK] int 
 10411 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10412 ;;		 -> f(5), NULL(0), 
 10413 ;; Auto vars:     Size  Location     Type
 10414 ;;		None
 10415 ;; Return value:  Size  Location     Type
 10416 ;;                  2  [STACK] int 
 10417 ;; Registers used:
 10418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 10419 ;; Tracked objects:
 10420 ;;		On entry : 0/1
 10421 ;;		On exit  : 0/0
 10422 ;;		Unchanged: 0/0
 10423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10428 ;;Total ram usage:        0 bytes
 10429 ;; Hardware stack levels used:    1
 10430 ;; Hardware stack levels required when called:    5
 10431 ;; This function calls:
 10432 ;;		_putch
 10433 ;; This function is called by:
 10434 ;;		_pad
 10435 ;;		_stoa
 10436 ;;		_vfpfcnvrt
 10437 ;;		_fputs
 10438 ;; This function uses a reentrant model
 10439 ;;
 10440                           
 10441                           	psect	text48
 10442  0045AE                     __ptext48:
 10443                           	opt callstack 0
 10444  0045AE                     _fputc:
 10445                           	opt callstack 19
 10446                           
 10447                           ;stkvar	_fp @ sp[(0)+-4]
 10448                           
 10449                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10450                           ;incstack = 0
 10451  0045AE  0EFC               	movlw	-4
 10452  0045B0  006F FF8C  F03D    	movff	plusw1,btemp
 10453  0045B6  0EFD               	movlw	-3
 10454  0045B8  50E3               	movf	plusw1,w,c
 10455  0045BA  103D               	iorwf	btemp,w,c
 10456  0045BC  B4D8               	btfsc	status,2,c
 10457  0045BE  D009               	goto	u3900
 10458                           
 10459                           ;stkvar	_fp @ sp[(0)+-4]
 10460  0045C0  0EFC               	movlw	-4
 10461  0045C2  006F FF8C  F03D    	movff	plusw1,btemp
 10462  0045C8  0EFD               	movlw	-3
 10463  0045CA  50E3               	movf	plusw1,w,c
 10464  0045CC  103D               	iorwf	btemp,w,c
 10465  0045CE  A4D8               	btfss	status,2,c
 10466  0045D0  D006               	goto	l6963
 10467  0045D2                     u3900:
 10468                           
 10469                           ;stkvar	_c @ sp[(0)+-2]
 10470  0045D2  0EFE               	movlw	-2
 10471  0045D4  50E3               	movf	plusw1,w,c
 10472  0045D6  6EE6               	movwf	postinc1,c
 10473  0045D8  ECB7  F02E         	call	_putch	;wreg free
 10474  0045DC  D069               	goto	l2536
 10475  0045DE                     l6963:
 10476                           
 10477                           ;stkvar	_fp @ sp[(0)+-4]
 10478  0045DE  0EFC               	movlw	-4
 10479  0045E0  006F FF8C  F047    	movff	plusw1,btemp+10
 10480  0045E6  0EFD               	movlw	-3
 10481  0045E8  006F FF8C  F048    	movff	plusw1,btemp+11
 10482  0045EE  0E03               	movlw	3
 10483  0045F0  2447               	addwf	btemp+10,w,c
 10484  0045F2  6ED9               	movwf	fsr2l,c
 10485  0045F4  0E00               	movlw	0
 10486  0045F6  2048               	addwfc	btemp+11,w,c
 10487  0045F8  6EDA               	movwf	fsr2h,c
 10488  0045FA  50DE               	movf	postinc2,w,c
 10489  0045FC  10DE               	iorwf	postinc2,w,c
 10490  0045FE  B4D8               	btfsc	status,2,c
 10491  004600  D026               	goto	u3920
 10492                           
 10493                           ;stkvar	_fp @ sp[(0)+-4]
 10494  004602  0EFC               	movlw	-4
 10495  004604  006F FF8C  F047    	movff	plusw1,btemp+10
 10496  00460A  0EFD               	movlw	-3
 10497  00460C  006F FF8C  F048    	movff	plusw1,btemp+11
 10498  004612  0E03               	movlw	3
 10499  004614  2447               	addwf	btemp+10,w,c
 10500  004616  6ED9               	movwf	fsr2l,c
 10501  004618  0E00               	movlw	0
 10502  00461A  2048               	addwfc	btemp+11,w,c
 10503  00461C  6EDA               	movwf	fsr2h,c
 10504                           
 10505                           ;stkvar	_fp @ sp[(0)+-4]
 10506  00461E  0EFC               	movlw	-4
 10507  004620  006F FF8C  F047    	movff	plusw1,btemp+10
 10508  004626  0EFD               	movlw	-3
 10509  004628  006F FF8C  F048    	movff	plusw1,btemp+11
 10510  00462E  0E01               	movlw	1
 10511  004630  2447               	addwf	btemp+10,w,c
 10512  004632  6EE9               	movwf	fsr0l,c
 10513  004634  0E00               	movlw	0
 10514  004636  2048               	addwfc	btemp+11,w,c
 10515  004638  6EEA               	movwf	fsr0h,c
 10516  00463A  50DE               	movf	postinc2,w,c
 10517  00463C  5CEE               	subwf	postinc0,w,c
 10518  00463E  50EE               	movf	postinc0,w,c
 10519  004640  0A80               	xorlw	128
 10520  004642  6E3D               	movwf	btemp,c
 10521  004644  50DE               	movf	postinc2,w,c
 10522  004646  0A80               	xorlw	128
 10523  004648  583D               	subwfb	btemp,w,c
 10524  00464A  B0D8               	btfsc	status,0,c
 10525  00464C  D031               	goto	l2536
 10526  00464E                     u3920:
 10527                           
 10528                           ;stkvar	_c @ sp[(0)+-2]
 10529                           ;stkvar	_fp @ sp[(0)+-4]
 10530  00464E  0EFC               	movlw	-4
 10531  004650  006F FF8C  F047    	movff	plusw1,btemp+10
 10532  004656  0EFD               	movlw	-3
 10533  004658  006F FF8C  F048    	movff	plusw1,btemp+11
 10534  00465E  0E01               	movlw	1
 10535  004660  2447               	addwf	btemp+10,w,c
 10536  004662  6ED9               	movwf	fsr2l,c
 10537  004664  0E00               	movlw	0
 10538  004666  2048               	addwfc	btemp+11,w,c
 10539  004668  6EDA               	movwf	fsr2h,c
 10540  00466A  50DF               	movf	indf2,w,c
 10541  00466C  6E48               	movwf	btemp+11,c
 10542                           
 10543                           ;stkvar	_fp @ sp[(0)+-4]
 10544  00466E  0EFC               	movlw	-4
 10545  004670  006F FF8F FFD9     	movff	plusw1,fsr2l
 10546  004676  0EFD               	movlw	-3
 10547  004678  006F FF8F FFDA     	movff	plusw1,fsr2h
 10548  00467E  50DF               	movf	indf2,w,c
 10549  004680  2448               	addwf	btemp+11,w,c
 10550  004682  6ED9               	movwf	fsr2l,c
 10551  004684  6ADA               	clrf	fsr2h,c
 10552  004686  0EFE               	movlw	-2
 10553  004688  006F FF8F FFDF     	movff	plusw1,indf2
 10554                           
 10555                           ;stkvar	_fp @ sp[(0)+-4]
 10556  00468E  0EFC               	movlw	-4
 10557  004690  006F FF8C  F047    	movff	plusw1,btemp+10
 10558  004696  0EFD               	movlw	-3
 10559  004698  006F FF8C  F048    	movff	plusw1,btemp+11
 10560  00469E  0E01               	movlw	1
 10561  0046A0  2447               	addwf	btemp+10,w,c
 10562  0046A2  6ED9               	movwf	fsr2l,c
 10563  0046A4  0E00               	movlw	0
 10564  0046A6  2048               	addwfc	btemp+11,w,c
 10565  0046A8  6EDA               	movwf	fsr2h,c
 10566  0046AA  2ADE               	incf	postinc2,f,c
 10567  0046AC  0E00               	movlw	0
 10568  0046AE  22DD               	addwfc	postdec2,f,c
 10569  0046B0                     l2536:
 10570                           
 10571                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10572  0046B0  52E5               	movf	postdec1,f,c
 10573  0046B2  52E5               	movf	postdec1,f,c
 10574  0046B4  52E5               	movf	postdec1,f,c
 10575  0046B6  52E5               	movf	postdec1,f,c
 10576  0046B8  0012               	return		;funcret
 10577  0046BA                     __end_of_fputc:
 10578                           	opt callstack 0
 10579                           
 10580 ;; *************** function _putch *****************
 10581 ;; Defined at:
 10582 ;;		line 138 in file "eadog.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;  c               1  [STACK] unsigned char 
 10585 ;; Auto vars:     Size  Location     Type
 10586 ;;		None
 10587 ;; Return value:  Size  Location     Type
 10588 ;;                  1  [STACK] void 
 10589 ;; Registers used:
 10590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10591 ;; Tracked objects:
 10592 ;;		On entry : 0/1
 10593 ;;		On exit  : 0/0
 10594 ;;		Unchanged: 0/0
 10595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10600 ;;Total ram usage:        0 bytes
 10601 ;; Hardware stack levels used:    1
 10602 ;; Hardware stack levels required when called:    4
 10603 ;; This function calls:
 10604 ;;		_ringBufS_put_dma
 10605 ;; This function is called by:
 10606 ;;		_fputc
 10607 ;; This function uses a reentrant model
 10608 ;;
 10609                           
 10610                           	psect	text49
 10611  005D6E                     __ptext49:
 10612                           	opt callstack 0
 10613  005D6E                     _putch:
 10614                           	opt callstack 19
 10615                           
 10616                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 10617                           ;stkvar	_c @ sp[(0)+-1]
 10618                           
 10619                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10620                           ;incstack = 0
 10621  005D6E  0EFF               	movlw	-1
 10622  005D70  50E3               	movf	plusw1,w,c
 10623  005D72  6EE6               	movwf	postinc1,c
 10624  005D74  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
 10625  005D7A  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
 10626  005D80  ECD3  F025         	call	_ringBufS_put_dma	;wreg free
 10627                           
 10628                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 10629  005D84  52E5               	movf	postdec1,f,c
 10630  005D86  0012               	return		;funcret
 10631  005D88                     __end_of_putch:
 10632                           	opt callstack 0
 10633                           
 10634 ;; *************** function _ringBufS_put_dma *****************
 10635 ;; Defined at:
 10636 ;;		line 67 in file "ringbufs.c"
 10637 ;; Parameters:    Size  Location     Type
 10638 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10639 ;;		 -> ring_buf1(67), 
 10640 ;;  c               1  [STACK] const unsigned char 
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;		None
 10643 ;; Return value:  Size  Location     Type
 10644 ;;                  1  [STACK] void 
 10645 ;; Registers used:
 10646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/1
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10656 ;;Total ram usage:        0 bytes
 10657 ;; Hardware stack levels used:    1
 10658 ;; Hardware stack levels required when called:    3
 10659 ;; This function calls:
 10660 ;;		Nothing
 10661 ;; This function is called by:
 10662 ;;		_putch
 10663 ;; This function uses a reentrant model
 10664 ;;
 10665                           
 10666                           	psect	text50
 10667  004BA6                     __ptext50:
 10668                           	opt callstack 0
 10669  004BA6                     _ringBufS_put_dma:
 10670                           	opt callstack 19
 10671                           
 10672                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 10673                           ;stkvar	__this @ sp[(0)+-2]
 10674                           
 10675                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10676                           ;incstack = 0
 10677  004BA6  0EFE               	movlw	-2
 10678  004BA8  006F FF8C  F047    	movff	plusw1,btemp+10
 10679  004BAE  0EFF               	movlw	-1
 10680  004BB0  006F FF8C  F048    	movff	plusw1,btemp+11
 10681  004BB6  0E42               	movlw	66
 10682  004BB8  2447               	addwf	btemp+10,w,c
 10683  004BBA  6ED9               	movwf	fsr2l,c
 10684  004BBC  0E00               	movlw	0
 10685  004BBE  2048               	addwfc	btemp+11,w,c
 10686  004BC0  6EDA               	movwf	fsr2h,c
 10687  004BC2  0E40               	movlw	64
 10688  004BC4  60DF               	cpfslt	indf2,c
 10689  004BC6  D040               	goto	l1430
 10690                           
 10691                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 10692                           ;stkvar	_c @ sp[(0)+-3]
 10693                           ;stkvar	__this @ sp[(0)+-2]
 10694  004BC8  0EFE               	movlw	-2
 10695  004BCA  006F FF8C  F047    	movff	plusw1,btemp+10
 10696  004BD0  0EFF               	movlw	-1
 10697  004BD2  006F FF8C  F048    	movff	plusw1,btemp+11
 10698  004BD8  0E40               	movlw	64
 10699  004BDA  2447               	addwf	btemp+10,w,c
 10700  004BDC  6ED9               	movwf	fsr2l,c
 10701  004BDE  0E00               	movlw	0
 10702  004BE0  2048               	addwfc	btemp+11,w,c
 10703  004BE2  6EDA               	movwf	fsr2h,c
 10704  004BE4  50DF               	movf	indf2,w,c
 10705  004BE6  6E48               	movwf	btemp+11,c
 10706                           
 10707                           ;stkvar	__this @ sp[(0)+-2]
 10708  004BE8  0EFE               	movlw	-2
 10709  004BEA  006F FF8C  F045    	movff	plusw1,btemp+8
 10710  004BF0  0EFF               	movlw	-1
 10711  004BF2  006F FF8C  F046    	movff	plusw1,btemp+9
 10712  004BF8  5048               	movf	btemp+11,w,c
 10713  004BFA  2445               	addwf	btemp+8,w,c
 10714  004BFC  6ED9               	movwf	fsr2l,c
 10715  004BFE  0E00               	movlw	0
 10716  004C00  2046               	addwfc	btemp+9,w,c
 10717  004C02  6EDA               	movwf	fsr2h,c
 10718  004C04  0EFD               	movlw	-3
 10719  004C06  006F FF8F FFDF     	movff	plusw1,indf2
 10720                           
 10721                           ;ringbufs.c: 71:   ++_this->head;
 10722                           ;stkvar	__this @ sp[(0)+-2]
 10723  004C0C  0EFE               	movlw	-2
 10724  004C0E  006F FF8C  F047    	movff	plusw1,btemp+10
 10725  004C14  0EFF               	movlw	-1
 10726  004C16  006F FF8C  F048    	movff	plusw1,btemp+11
 10727  004C1C  0E40               	movlw	64
 10728  004C1E  2447               	addwf	btemp+10,w,c
 10729  004C20  6ED9               	movwf	fsr2l,c
 10730  004C22  0E00               	movlw	0
 10731  004C24  2048               	addwfc	btemp+11,w,c
 10732  004C26  6EDA               	movwf	fsr2h,c
 10733  004C28  2ADF               	incf	indf2,f,c
 10734                           
 10735                           ;ringbufs.c: 72:   ++_this->count;
 10736                           ;stkvar	__this @ sp[(0)+-2]
 10737  004C2A  0EFE               	movlw	-2
 10738  004C2C  006F FF8C  F047    	movff	plusw1,btemp+10
 10739  004C32  0EFF               	movlw	-1
 10740  004C34  006F FF8C  F048    	movff	plusw1,btemp+11
 10741  004C3A  0E42               	movlw	66
 10742  004C3C  2447               	addwf	btemp+10,w,c
 10743  004C3E  6ED9               	movwf	fsr2l,c
 10744  004C40  0E00               	movlw	0
 10745  004C42  2048               	addwfc	btemp+11,w,c
 10746  004C44  6EDA               	movwf	fsr2h,c
 10747  004C46  2ADF               	incf	indf2,f,c
 10748  004C48                     l1430:
 10749                           
 10750                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 10751  004C48  52E5               	movf	postdec1,f,c
 10752  004C4A  52E5               	movf	postdec1,f,c
 10753  004C4C  52E5               	movf	postdec1,f,c
 10754  004C4E  0012               	return		;funcret
 10755  004C50                     __end_of_ringBufS_put_dma:
 10756                           	opt callstack 0
 10757                           
 10758 ;; *************** function _atoi *****************
 10759 ;; Defined at:
 10760 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
 10761 ;; Parameters:    Size  Location     Type
 10762 ;;  s               1  [STACK] PTR const unsigned char 
 10763 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(23), 
 10764 ;;		 -> STR_4(6), STR_3(14), STR_2(12), STR_1(61), 
 10765 ;; Auto vars:     Size  Location     Type
 10766 ;;  n               2  [STACK] int 
 10767 ;;  neg             2  [STACK] int 
 10768 ;; Return value:  Size  Location     Type
 10769 ;;                  2  [STACK] int 
 10770 ;; Registers used:
 10771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 10772 ;; Tracked objects:
 10773 ;;		On entry : 0/1
 10774 ;;		On exit  : 0/0
 10775 ;;		Unchanged: 0/0
 10776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10781 ;;Total ram usage:        0 bytes
 10782 ;; Hardware stack levels used:    1
 10783 ;; Hardware stack levels required when called:    4
 10784 ;; This function calls:
 10785 ;;		_isdigit
 10786 ;;		_isspace
 10787 ;; This function is called by:
 10788 ;;		_vfpfcnvrt
 10789 ;; This function uses a reentrant model
 10790 ;;
 10791                           
 10792                           	psect	text51
 10793  003E98                     __ptext51:
 10794                           	opt callstack 0
 10795  003E98                     _atoi:
 10796                           	opt callstack 0
 10797                           
 10798                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10799  003E98  0E09               	movlw	9
 10800  003E9A  26E1               	addwf	fsr1l,f,c
 10801  003E9C  0E00               	movlw	0
 10802  003E9E  22E2               	addwfc	fsr1h,f,c
 10803                           
 10804                           ;stkvar	_n @ sp[(-9)+5]
 10805                           
 10806                           ;incstack = 0
 10807  003EA0  0EFC               	movlw	-4
 10808  003EA2  6AE3               	clrf	plusw1,c
 10809  003EA4  0EFD               	movlw	-3
 10810  003EA6  6AE3               	clrf	plusw1,c
 10811                           
 10812                           ;stkvar	_neg @ sp[(-9)+7]
 10813  003EA8  0EFE               	movlw	-2
 10814  003EAA  6AE3               	clrf	plusw1,c
 10815  003EAC  0EFF               	movlw	-1
 10816  003EAE  6AE3               	clrf	plusw1,c
 10817  003EB0  D002               	goto	l2464
 10818  003EB2                     l5227:
 10819                           
 10820                           ;stkvar	_s @ sp[(-9)+-1]
 10821  003EB2  0EF6               	movlw	-10
 10822  003EB4  2AE3               	incf	plusw1,f,c
 10823  003EB6                     l2464:
 10824                           
 10825                           ;stkvar	_atoi$4218 @ sp[(-9)+4]
 10826  003EB6  0EFB               	movlw	-5
 10827  003EB8  6AE3               	clrf	plusw1,c
 10828  003EBA  2AE3               	incf	plusw1,f,c
 10829                           
 10830                           ;stkvar	_s @ sp[(-9)+-1]
 10831  003EBC  50E1               	movf	fsr1l,w,c
 10832  003EBE  0FF6               	addlw	-10
 10833  003EC0  6ED9               	movwf	fsr2l,c
 10834  003EC2  50E2               	movf	fsr1h,w,c
 10835  003EC4  6EDA               	movwf	fsr2h,c
 10836  003EC6  0EFF               	movlw	255
 10837  003EC8  22DA               	addwfc	fsr2h,f,c
 10838  003ECA  006F FF7F FFF6     	movff	indf2,tblptrl
 10839  003ED0                     	if	1	;There is more than 1 active tblptr byte
 10840  003ED0  0E20               	movlw	high __smallconst
 10841  003ED2  6EF7               	movwf	tblptrh,c
 10842  003ED4                     	endif
 10843  003ED4                     	if	0	;tblptru may be non-zero
 10844  003ED4                     	endif
 10845  003ED4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10846  003ED4  0E00               	movlw	low (__smallconst shr (0+16))
 10847  003ED6  6EF8               	movwf	tblptru,c
 10848  003ED8                     	endif
 10849  003ED8  0008               	tblrd		*
 10850  003EDA  50F5               	movf	tablat,w,c
 10851  003EDC  0A20               	xorlw	32
 10852  003EDE  B4D8               	btfsc	status,2,c
 10853  003EE0  D022               	goto	l5235
 10854  003EE2  0EF7               	movlw	247
 10855  003EE4  6E47               	movwf	btemp+10,c
 10856  003EE6  0EFF               	movlw	255
 10857  003EE8  6E48               	movwf	btemp+11,c
 10858                           
 10859                           ;stkvar	_s @ sp[(-9)+-1]
 10860  003EEA  50E1               	movf	fsr1l,w,c
 10861  003EEC  0FF6               	addlw	-10
 10862  003EEE  6ED9               	movwf	fsr2l,c
 10863  003EF0  50E2               	movf	fsr1h,w,c
 10864  003EF2  6EDA               	movwf	fsr2h,c
 10865  003EF4  0EFF               	movlw	255
 10866  003EF6  22DA               	addwfc	fsr2h,f,c
 10867  003EF8  006F FF7F FFF6     	movff	indf2,tblptrl
 10868  003EFE                     	if	1	;There is more than 1 active tblptr byte
 10869  003EFE  0E20               	movlw	high __smallconst
 10870  003F00  6EF7               	movwf	tblptrh,c
 10871  003F02                     	endif
 10872  003F02                     	if	0	;tblptru may be non-zero
 10873  003F02                     	endif
 10874  003F02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10875  003F02  0E00               	movlw	low (__smallconst shr (0+16))
 10876  003F04  6EF8               	movwf	tblptru,c
 10877  003F06                     	endif
 10878  003F06  0008               	tblrd		*
 10879  003F08  50F5               	movf	tablat,w,c
 10880  003F0A  6E45               	movwf	btemp+8,c
 10881  003F0C  6A46               	clrf	btemp+9,c
 10882  003F0E  5047               	movf	btemp+10,w,c
 10883  003F10  2645               	addwf	btemp+8,f,c
 10884  003F12  5048               	movf	btemp+11,w,c
 10885  003F14  2246               	addwfc	btemp+9,f,c
 10886  003F16  5046               	movf	btemp+9,w,c
 10887  003F18  E104               	bnz	u2950
 10888  003F1A  0E05               	movlw	5
 10889  003F1C  5C45               	subwf	btemp+8,w,c
 10890  003F1E  A0D8               	btfss	status,0,c
 10891  003F20  D002               	goto	l5235
 10892  003F22                     u2950:
 10893                           
 10894                           ;stkvar	_atoi$4218 @ sp[(-9)+4]
 10895  003F22  0EFB               	movlw	-5
 10896  003F24  6AE3               	clrf	plusw1,c
 10897  003F26                     l5235:
 10898                           
 10899                           ;stkvar	_atoi$4218 @ sp[(-9)+4]
 10900  003F26  0EFB               	movlw	-5
 10901  003F28  50E3               	movf	plusw1,w,c
 10902  003F2A  6E47               	movwf	btemp+10,c
 10903  003F2C  6A48               	clrf	btemp+11,c
 10904                           
 10905                           ;stkvar	_atoi$4217 @ sp[(-9)+2]
 10906  003F2E  0EF9               	movlw	-7
 10907  003F30  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10908  003F36  0EFA               	movlw	-6
 10909  003F38  0060  F123  FFE3   	movff	btemp+11,plusw1
 10910                           
 10911                           ;stkvar	_atoi$4217 @ sp[(-9)+2]
 10912  003F3E  0EF9               	movlw	-7
 10913  003F40  006F FF8C  F03D    	movff	plusw1,btemp
 10914  003F46  0EFA               	movlw	-6
 10915  003F48  50E3               	movf	plusw1,w,c
 10916  003F4A  103D               	iorwf	btemp,w,c
 10917  003F4C  B4D8               	btfsc	status,2,c
 10918  003F4E  D010               	goto	l5245
 10919  003F50  D7B0               	goto	l5227
 10920  003F52                     l5241:
 10921  003F52  0E01               	movlw	1
 10922  003F54  6E47               	movwf	btemp+10,c
 10923  003F56  0E00               	movlw	0
 10924  003F58  6E48               	movwf	btemp+11,c
 10925                           
 10926                           ;stkvar	_neg @ sp[(-9)+7]
 10927  003F5A  0EFE               	movlw	-2
 10928  003F5C  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10929  003F62  0EFF               	movlw	-1
 10930  003F64  0060  F123  FFE3   	movff	btemp+11,plusw1
 10931  003F6A                     l5243:
 10932                           
 10933                           ;stkvar	_s @ sp[(-9)+-1]
 10934  003F6A  0EF6               	movlw	-10
 10935  003F6C  2AE3               	incf	plusw1,f,c
 10936  003F6E  D051               	goto	l5251
 10937  003F70                     l5245:
 10938                           
 10939                           ;stkvar	_s @ sp[(-9)+-1]
 10940  003F70  50E1               	movf	fsr1l,w,c
 10941  003F72  0FF6               	addlw	-10
 10942  003F74  6ED9               	movwf	fsr2l,c
 10943  003F76  50E2               	movf	fsr1h,w,c
 10944  003F78  6EDA               	movwf	fsr2h,c
 10945  003F7A  0EFF               	movlw	255
 10946  003F7C  22DA               	addwfc	fsr2h,f,c
 10947  003F7E  006F FF7F FFF6     	movff	indf2,tblptrl
 10948  003F84                     	if	1	;There is more than 1 active tblptr byte
 10949  003F84  0E20               	movlw	high __smallconst
 10950  003F86  6EF7               	movwf	tblptrh,c
 10951  003F88                     	endif
 10952  003F88                     	if	0	;tblptru may be non-zero
 10953  003F88                     	endif
 10954  003F88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10955  003F88  0E00               	movlw	low (__smallconst shr (0+16))
 10956  003F8A  6EF8               	movwf	tblptru,c
 10957  003F8C                     	endif
 10958  003F8C  0008               	tblrd		*
 10959  003F8E  50F5               	movf	tablat,w,c
 10960  003F90  6E47               	movwf	btemp+10,c
 10961  003F92  6A48               	clrf	btemp+11,c
 10962                           
 10963                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10964                           ; Switch size 1, requested type "simple"
 10965                           ; Number of cases is 1, Range of values is 0 to 0
 10966                           ; switch strategies available:
 10967                           ; Name         Instructions Cycles
 10968                           ; simple_byte            4     3 (average)
 10969                           ;	Chosen strategy is simple_byte
 10970  003F94  5048               	movf	btemp+11,w,c
 10971  003F96  0A00               	xorlw	0	; case 0
 10972  003F98  A4D8               	btfss	status,2,c
 10973  003F9A  D03B               	goto	l5251
 10974                           
 10975                           ; Switch size 1, requested type "simple"
 10976                           ; Number of cases is 2, Range of values is 43 to 45
 10977                           ; switch strategies available:
 10978                           ; Name         Instructions Cycles
 10979                           ; simple_byte            7     4 (average)
 10980                           ;	Chosen strategy is simple_byte
 10981  003F9C  5047               	movf	btemp+10,w,c
 10982  003F9E  0A2B               	xorlw	43	; case 43
 10983  003FA0  B4D8               	btfsc	status,2,c
 10984  003FA2  D7E3               	goto	l5243
 10985  003FA4  0A06               	xorlw	6	; case 45
 10986  003FA6  B4D8               	btfsc	status,2,c
 10987  003FA8  D7D4               	goto	l5241
 10988  003FAA  D033               	goto	l5251
 10989  003FAC                     l5247:
 10990                           
 10991                           ;stkvar	_n @ sp[(-9)+5]
 10992  003FAC  0EFC               	movlw	-4
 10993  003FAE  006F FF8C  F047    	movff	plusw1,btemp+10
 10994  003FB4  0EFD               	movlw	-3
 10995  003FB6  006F FF8C  F048    	movff	plusw1,btemp+11
 10996  003FBC  0E0A               	movlw	10
 10997  003FBE  0247               	mulwf	btemp+10,c
 10998  003FC0  006F FFCC  F045    	movff	prodl,btemp+8
 10999  003FC6  006F FFD0  F046    	movff	prodh,btemp+9
 11000  003FCC  0248               	mulwf	btemp+11,c
 11001  003FCE  50F3               	movf	prodl,w,c
 11002  003FD0  2646               	addwf	btemp+9,f,c
 11003                           
 11004                           ;stkvar	_s @ sp[(-9)+-1]
 11005  003FD2  50E1               	movf	fsr1l,w,c
 11006  003FD4  0FF6               	addlw	-10
 11007  003FD6  6ED9               	movwf	fsr2l,c
 11008  003FD8  50E2               	movf	fsr1h,w,c
 11009  003FDA  6EDA               	movwf	fsr2h,c
 11010  003FDC  0EFF               	movlw	255
 11011  003FDE  22DA               	addwfc	fsr2h,f,c
 11012  003FE0  006F FF7F FFF6     	movff	indf2,tblptrl
 11013  003FE6                     	if	1	;There is more than 1 active tblptr byte
 11014  003FE6  0E20               	movlw	high __smallconst
 11015  003FE8  6EF7               	movwf	tblptrh,c
 11016  003FEA                     	endif
 11017  003FEA                     	if	0	;tblptru may be non-zero
 11018  003FEA                     	endif
 11019  003FEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11020  003FEA  0E00               	movlw	low (__smallconst shr (0+16))
 11021  003FEC  6EF8               	movwf	tblptru,c
 11022  003FEE                     	endif
 11023  003FEE  0008               	tblrd		*
 11024  003FF0  50F5               	movf	tablat,w,c
 11025  003FF2  5E45               	subwf	btemp+8,f,c
 11026  003FF4  0E00               	movlw	0
 11027  003FF6  5A46               	subwfb	btemp+9,f,c
 11028  003FF8  0E30               	movlw	48
 11029  003FFA  2645               	addwf	btemp+8,f,c
 11030  003FFC  0E00               	movlw	0
 11031  003FFE  2246               	addwfc	btemp+9,f,c
 11032                           
 11033                           ;stkvar	_n @ sp[(-9)+5]
 11034  004000  0EFC               	movlw	-4
 11035  004002  0060  F117  FFE3   	movff	btemp+8,plusw1
 11036  004008  0EFD               	movlw	-3
 11037  00400A  0060  F11B  FFE3   	movff	btemp+9,plusw1
 11038  004010  D7AC               	goto	l5243
 11039  004012                     l5251:
 11040  004012  0ED0               	movlw	208
 11041  004014  6E47               	movwf	btemp+10,c
 11042  004016  0EFF               	movlw	255
 11043  004018  6E48               	movwf	btemp+11,c
 11044                           
 11045                           ;stkvar	_s @ sp[(-9)+-1]
 11046  00401A  50E1               	movf	fsr1l,w,c
 11047  00401C  0FF6               	addlw	-10
 11048  00401E  6ED9               	movwf	fsr2l,c
 11049  004020  50E2               	movf	fsr1h,w,c
 11050  004022  6EDA               	movwf	fsr2h,c
 11051  004024  0EFF               	movlw	255
 11052  004026  22DA               	addwfc	fsr2h,f,c
 11053  004028  006F FF7F FFF6     	movff	indf2,tblptrl
 11054  00402E                     	if	1	;There is more than 1 active tblptr byte
 11055  00402E  0E20               	movlw	high __smallconst
 11056  004030  6EF7               	movwf	tblptrh,c
 11057  004032                     	endif
 11058  004032                     	if	0	;tblptru may be non-zero
 11059  004032                     	endif
 11060  004032                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11061  004032  0E00               	movlw	low (__smallconst shr (0+16))
 11062  004034  6EF8               	movwf	tblptru,c
 11063  004036                     	endif
 11064  004036  0008               	tblrd		*
 11065  004038  50F5               	movf	tablat,w,c
 11066  00403A  6E45               	movwf	btemp+8,c
 11067  00403C  6A46               	clrf	btemp+9,c
 11068  00403E  5047               	movf	btemp+10,w,c
 11069  004040  2645               	addwf	btemp+8,f,c
 11070  004042  5048               	movf	btemp+11,w,c
 11071  004044  2246               	addwfc	btemp+9,f,c
 11072  004046  5046               	movf	btemp+9,w,c
 11073  004048  E106               	bnz	u2970
 11074  00404A  0E0A               	movlw	10
 11075  00404C  5C45               	subwf	btemp+8,w,c
 11076  00404E  B0D8               	btfsc	status,0,c
 11077  004050  D002               	goto	u2970
 11078  004052  0E01               	movlw	1
 11079  004054  D001               	goto	u2980
 11080  004056                     u2970:
 11081  004056  0E00               	movlw	0
 11082  004058                     u2980:
 11083  004058  6E47               	movwf	btemp+10,c
 11084  00405A  6A48               	clrf	btemp+11,c
 11085                           
 11086                           ;stkvar	_atoi$4219 @ sp[(-9)+0]
 11087  00405C  0EF7               	movlw	-9
 11088  00405E  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11089  004064  0EF8               	movlw	-8
 11090  004066  0060  F123  FFE3   	movff	btemp+11,plusw1
 11091                           
 11092                           ;stkvar	_atoi$4219 @ sp[(-9)+0]
 11093  00406C  0EF7               	movlw	-9
 11094  00406E  006F FF8C  F03D    	movff	plusw1,btemp
 11095  004074  0EF8               	movlw	-8
 11096  004076  50E3               	movf	plusw1,w,c
 11097  004078  103D               	iorwf	btemp,w,c
 11098  00407A  A4D8               	btfss	status,2,c
 11099  00407C  D797               	goto	l5247
 11100                           
 11101                           ;stkvar	_neg @ sp[(-9)+7]
 11102  00407E  0EFE               	movlw	-2
 11103  004080  006F FF8C  F03D    	movff	plusw1,btemp
 11104  004086  0EFF               	movlw	-1
 11105  004088  50E3               	movf	plusw1,w,c
 11106  00408A  103D               	iorwf	btemp,w,c
 11107  00408C  A4D8               	btfss	status,2,c
 11108  00408E  D00E               	goto	l5261
 11109                           
 11110                           ;stkvar	_n @ sp[(-9)+5]
 11111  004090  0EFC               	movlw	-4
 11112  004092  006F FF8C  F03D    	movff	plusw1,btemp
 11113  004098  1E3D               	comf	btemp,f,c
 11114  00409A  0EFD               	movlw	-3
 11115  00409C  006F FF8C  F03E    	movff	plusw1,btemp+1
 11116  0040A2  1E3E               	comf	btemp+1,f,c
 11117  0040A4  2A3D               	incf	btemp,f,c
 11118  0040A6  B4D8               	btfsc	status,2,c
 11119  0040A8  2A3E               	incf	btemp+1,f,c
 11120  0040AA  D008               	goto	l2488
 11121  0040AC                     l5261:
 11122                           
 11123                           ;stkvar	_n @ sp[(-9)+5]
 11124  0040AC  0EFC               	movlw	-4
 11125  0040AE  006F FF8C  F03D    	movff	plusw1,btemp
 11126  0040B4  0EFD               	movlw	-3
 11127  0040B6  006F FF8C  F03E    	movff	plusw1,btemp+1
 11128  0040BC                     l2488:
 11129                           
 11130                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
 11131  0040BC  0EF6               	movlw	246
 11132  0040BE  26E1               	addwf	fsr1l,f,c
 11133  0040C0  0EFF               	movlw	255
 11134  0040C2  22E2               	addwfc	fsr1h,f,c
 11135  0040C4  0012               	return		;funcret
 11136  0040C6                     __end_of_atoi:
 11137                           	opt callstack 0
 11138                           
 11139 ;; *************** function _isspace *****************
 11140 ;; Defined at:
 11141 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
 11142 ;; Parameters:    Size  Location     Type
 11143 ;;  c               2  [STACK] int 
 11144 ;; Auto vars:     Size  Location     Type
 11145 ;;		None
 11146 ;; Return value:  Size  Location     Type
 11147 ;;                  2  [STACK] int 
 11148 ;; Registers used:
 11149 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11150 ;; Tracked objects:
 11151 ;;		On entry : 0/0
 11152 ;;		On exit  : 0/0
 11153 ;;		Unchanged: 0/0
 11154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11159 ;;Total ram usage:        0 bytes
 11160 ;; Hardware stack levels used:    1
 11161 ;; Hardware stack levels required when called:    3
 11162 ;; This function calls:
 11163 ;;		Nothing
 11164 ;; This function is called by:
 11165 ;;		_atoi
 11166 ;; This function uses a reentrant model
 11167 ;;
 11168                           
 11169                           	psect	text52
 11170  00537C                     __ptext52:
 11171                           	opt callstack 0
 11172  00537C                     _isspace:
 11173                           	opt callstack 0
 11174                           
 11175                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11176  00537C  52E6               	movf	postinc1,f,c
 11177                           
 11178                           ;stkvar	_isspace$4244 @ sp[(-1)+0]
 11179                           
 11180                           ;incstack = 0
 11181  00537E  0EFF               	movlw	-1
 11182  005380  6AE3               	clrf	plusw1,c
 11183  005382  2AE3               	incf	plusw1,f,c
 11184                           
 11185                           ;stkvar	_c @ sp[(-1)+-2]
 11186  005384  0EFD               	movlw	-3
 11187  005386  006F FF8C  F03D    	movff	plusw1,btemp
 11188  00538C  0E20               	movlw	32
 11189  00538E  183D               	xorwf	btemp,w,c
 11190  005390  E104               	bnz	u2470
 11191  005392  0EFE               	movlw	-2
 11192  005394  50E3               	movf	plusw1,w,c
 11193  005396  B4D8               	btfsc	status,2,c
 11194  005398  D012               	goto	l5017
 11195  00539A                     u2470:
 11196                           
 11197                           ;stkvar	_c @ sp[(-1)+-2]
 11198  00539A  0EFD               	movlw	-3
 11199  00539C  50E3               	movf	plusw1,w,c
 11200  00539E  0FF7               	addlw	247
 11201  0053A0  6E47               	movwf	btemp+10,c
 11202  0053A2  0EFE               	movlw	-2
 11203  0053A4  006F FF8C  F048    	movff	plusw1,btemp+11
 11204  0053AA  0EFF               	movlw	255
 11205  0053AC  2248               	addwfc	btemp+11,f,c
 11206  0053AE  5048               	movf	btemp+11,w,c
 11207  0053B0  E104               	bnz	u2480
 11208  0053B2  0E05               	movlw	5
 11209  0053B4  5C47               	subwf	btemp+10,w,c
 11210  0053B6  A0D8               	btfss	status,0,c
 11211  0053B8  D002               	goto	l5017
 11212  0053BA                     u2480:
 11213                           
 11214                           ;stkvar	_isspace$4244 @ sp[(-1)+0]
 11215  0053BA  0EFF               	movlw	-1
 11216  0053BC  6AE3               	clrf	plusw1,c
 11217  0053BE                     l5017:
 11218                           
 11219                           ;stkvar	_isspace$4244 @ sp[(-1)+0]
 11220  0053BE  0EFF               	movlw	-1
 11221  0053C0  50E3               	movf	plusw1,w,c
 11222  0053C2  6E3D               	movwf	btemp,c
 11223  0053C4  6A3E               	clrf	btemp+1,c
 11224                           
 11225                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11226  0053C6  52E5               	movf	postdec1,f,c
 11227  0053C8  52E5               	movf	postdec1,f,c
 11228  0053CA  52E5               	movf	postdec1,f,c
 11229  0053CC  0012               	return		;funcret
 11230  0053CE                     __end_of_isspace:
 11231                           	opt callstack 0
 11232                           
 11233 ;; *************** function _isdigit *****************
 11234 ;; Defined at:
 11235 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;  c               2  [STACK] int 
 11238 ;; Auto vars:     Size  Location     Type
 11239 ;;		None
 11240 ;; Return value:  Size  Location     Type
 11241 ;;                  2  [STACK] int 
 11242 ;; Registers used:
 11243 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11244 ;; Tracked objects:
 11245 ;;		On entry : 0/0
 11246 ;;		On exit  : 0/0
 11247 ;;		Unchanged: 0/0
 11248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11253 ;;Total ram usage:        0 bytes
 11254 ;; Hardware stack levels used:    1
 11255 ;; Hardware stack levels required when called:    3
 11256 ;; This function calls:
 11257 ;;		Nothing
 11258 ;; This function is called by:
 11259 ;;		_vfpfcnvrt
 11260 ;;		_atoi
 11261 ;; This function uses a reentrant model
 11262 ;;
 11263                           
 11264                           	psect	text53
 11265  0057A2                     __ptext53:
 11266                           	opt callstack 0
 11267  0057A2                     _isdigit:
 11268                           	opt callstack 24
 11269                           
 11270                           ;stkvar	_c @ sp[(0)+-2]
 11271                           
 11272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11273                           ;incstack = 0
 11274  0057A2  0EFE               	movlw	-2
 11275  0057A4  50E3               	movf	plusw1,w,c
 11276  0057A6  0FD0               	addlw	208
 11277  0057A8  6E47               	movwf	btemp+10,c
 11278  0057AA  0EFF               	movlw	-1
 11279  0057AC  006F FF8C  F048    	movff	plusw1,btemp+11
 11280  0057B2  0EFF               	movlw	255
 11281  0057B4  2248               	addwfc	btemp+11,f,c
 11282  0057B6  5048               	movf	btemp+11,w,c
 11283  0057B8  E106               	bnz	u2220
 11284  0057BA  0E0A               	movlw	10
 11285  0057BC  5C47               	subwf	btemp+10,w,c
 11286  0057BE  B0D8               	btfsc	status,0,c
 11287  0057C0  D002               	goto	u2220
 11288  0057C2  0E01               	movlw	1
 11289  0057C4  D001               	goto	u2230
 11290  0057C6                     u2220:
 11291  0057C6  0E00               	movlw	0
 11292  0057C8                     u2230:
 11293  0057C8  6E3D               	movwf	btemp,c
 11294  0057CA  6A3E               	clrf	btemp+1,c
 11295                           
 11296                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11297  0057CC  52E5               	movf	postdec1,f,c
 11298  0057CE  52E5               	movf	postdec1,f,c
 11299  0057D0  0012               	return		;funcret
 11300  0057D2                     __end_of_isdigit:
 11301                           	opt callstack 0
 11302                           
 11303 ;; *************** function _SYSTEM_Initialize *****************
 11304 ;; Defined at:
 11305 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11306 ;; Parameters:    Size  Location     Type
 11307 ;;		None
 11308 ;; Auto vars:     Size  Location     Type
 11309 ;;		None
 11310 ;; Return value:  Size  Location     Type
 11311 ;;                  1  [STACK] void 
 11312 ;; Registers used:
 11313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 11314 ;; Tracked objects:
 11315 ;;		On entry : 0/0
 11316 ;;		On exit  : 3F/3C
 11317 ;;		Unchanged: 0/0
 11318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11323 ;;Total ram usage:        0 bytes
 11324 ;; Hardware stack levels used:    1
 11325 ;; Hardware stack levels required when called:    5
 11326 ;; This function calls:
 11327 ;;		_ADCC_Initialize
 11328 ;;		_CLC1_Initialize
 11329 ;;		_CLKREF_Initialize
 11330 ;;		_DMA1_Initialize
 11331 ;;		_DSM_Initialize
 11332 ;;		_EXT_INT_Initialize
 11333 ;;		_INTERRUPT_Initialize
 11334 ;;		_NCO1_Initialize
 11335 ;;		_OSCILLATOR_Initialize
 11336 ;;		_PIN_MANAGER_Initialize
 11337 ;;		_PMD_Initialize
 11338 ;;		_SPI1_Initialize
 11339 ;;		_TMR5_Initialize
 11340 ;;		_TMR6_Initialize
 11341 ;;		_UART1_Initialize
 11342 ;;		_UART2_Initialize
 11343 ;; This function is called by:
 11344 ;;		_main
 11345 ;; This function uses a reentrant model
 11346 ;;
 11347                           
 11348                           	psect	text54
 11349  0055CA                     __ptext54:
 11350                           	opt callstack 0
 11351  0055CA                     _SYSTEM_Initialize:
 11352                           	opt callstack 25
 11353                           
 11354                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 11355                           
 11356                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11357                           ;incstack = 0
 11358  0055CA  ECCB  F028         	call	_INTERRUPT_Initialize	;wreg free
 11359                           
 11360                           ; BSR set to: 57
 11361                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 11362  0055CE  ECF4  F02E         	call	_PMD_Initialize	;wreg free
 11363                           
 11364                           ; BSR set to: 57
 11365                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 11366  0055D2  EC79  F026         	call	_PIN_MANAGER_Initialize	;wreg free
 11367                           
 11368                           ; BSR set to: 58
 11369                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 11370  0055D6  ECE9  F02E         	call	_OSCILLATOR_Initialize	;wreg free
 11371                           
 11372                           ; BSR set to: 57
 11373                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 11374  0055DA  EC35  F02A         	call	_ADCC_Initialize	;wreg free
 11375                           
 11376                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 11377  0055DE  EC9B  F02E         	call	_NCO1_Initialize	;wreg free
 11378                           
 11379                           ; BSR set to: 63
 11380                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 11381  0055E2  EC0F  F02A         	call	_EXT_INT_Initialize	;wreg free
 11382                           
 11383                           ; BSR set to: 57
 11384                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 11385  0055E6  EC0B  F02D         	call	_TMR6_Initialize	;wreg free
 11386                           
 11387                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 11388  0055EA  ECF8  F02D         	call	_CLC1_Initialize	;wreg free
 11389                           
 11390                           ; BSR set to: 60
 11391                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 11392  0055EE  EC7D  F02A         	call	_TMR5_Initialize	;wreg free
 11393                           
 11394                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 11395  0055F2  ECA9  F02E         	call	_DSM_Initialize	;wreg free
 11396                           
 11397                           ; BSR set to: 60
 11398                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 11399  0055F6  ECFE  F028         	call	_UART1_Initialize	;wreg free
 11400                           
 11401                           ; BSR set to: 57
 11402                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 11403  0055FA  EC61  F029         	call	_UART2_Initialize	;wreg free
 11404                           
 11405                           ; BSR set to: 57
 11406                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 11407  0055FE  ECDE  F02E         	call	_SPI1_Initialize	;wreg free
 11408                           
 11409                           ; BSR set to: 61
 11410                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 11411  005602  EC96  F028         	call	_DMA1_Initialize	;wreg free
 11412                           
 11413                           ; BSR set to: 59
 11414                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 11415  005606  EC2C  F02F         	call	_CLKREF_Initialize	;wreg free
 11416                           
 11417                           ; BSR set to: 60
 11418                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 11419  00560A  0012               	return		;funcret
 11420  00560C                     __end_of_SYSTEM_Initialize:
 11421                           	opt callstack 0
 11422                           
 11423 ;; *************** function _UART2_Initialize *****************
 11424 ;; Defined at:
 11425 ;;		line 78 in file "mcc_generated_files/uart2.c"
 11426 ;; Parameters:    Size  Location     Type
 11427 ;;		None
 11428 ;; Auto vars:     Size  Location     Type
 11429 ;;		None
 11430 ;; Return value:  Size  Location     Type
 11431 ;;                  1  [STACK] void 
 11432 ;; Registers used:
 11433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 11434 ;; Tracked objects:
 11435 ;;		On entry : 3F/39
 11436 ;;		On exit  : 3F/39
 11437 ;;		Unchanged: 0/0
 11438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11443 ;;Total ram usage:        0 bytes
 11444 ;; Hardware stack levels used:    1
 11445 ;; Hardware stack levels required when called:    4
 11446 ;; This function calls:
 11447 ;;		_UART2_SetRxInterruptHandler
 11448 ;;		_UART2_SetTxInterruptHandler
 11449 ;; This function is called by:
 11450 ;;		_SYSTEM_Initialize
 11451 ;; This function uses a reentrant model
 11452 ;;
 11453                           
 11454                           	psect	text55
 11455  0052C2                     __ptext55:
 11456                           	opt callstack 0
 11457  0052C2                     _UART2_Initialize:
 11458                           	opt callstack 25
 11459                           
 11460                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 11461                           
 11462                           ; BSR set to: 60
 11463                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11464                           ;incstack = 0
 11465  0052C2  0139               	movlb	57	; () banked
 11466  0052C4  9596               	bcf	150,2,b	;volatile
 11467                           
 11468                           ; BSR set to: 57
 11469                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 11470  0052C6  0EDC               	movlw	low _UART2_Receive_ISR
 11471  0052C8  6EE6               	movwf	postinc1,c
 11472  0052CA  0E5C               	movlw	high _UART2_Receive_ISR
 11473  0052CC  6EE6               	movwf	postinc1,c
 11474  0052CE  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 11475  0052D0  6EE6               	movwf	postinc1,c
 11476  0052D2  ECCF  F02C         	call	_UART2_SetRxInterruptHandler	;wreg free
 11477                           
 11478                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 11479  0052D6  0139               	movlb	57	; () banked
 11480  0052D8  9796               	bcf	150,3,b	;volatile
 11481                           
 11482                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 11483  0052DA  0E2A               	movlw	low _UART2_Transmit_ISR
 11484  0052DC  6EE6               	movwf	postinc1,c
 11485  0052DE  0E58               	movlw	high _UART2_Transmit_ISR
 11486  0052E0  6EE6               	movwf	postinc1,c
 11487  0052E2  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 11488  0052E4  6EE6               	movwf	postinc1,c
 11489  0052E6  ECBB  F02C         	call	_UART2_SetTxInterruptHandler	;wreg free
 11490                           
 11491                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 11492  0052EA  013D               	movlb	61	; () banked
 11493  0052EC  6BD4               	clrf	212,b	;volatile
 11494                           
 11495                           ; BSR set to: 61
 11496                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 11497  0052EE  6BD6               	clrf	214,b	;volatile
 11498                           
 11499                           ; BSR set to: 61
 11500                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 11501  0052F0  6BD8               	clrf	216,b	;volatile
 11502                           
 11503                           ; BSR set to: 61
 11504                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 11505  0052F2  0EB0               	movlw	176
 11506  0052F4  6FDA               	movwf	218,b	;volatile
 11507                           
 11508                           ; BSR set to: 61
 11509                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 11510  0052F6  0E80               	movlw	128
 11511  0052F8  6FDB               	movwf	219,b	;volatile
 11512                           
 11513                           ; BSR set to: 61
 11514                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 11515  0052FA  6BDC               	clrf	220,b	;volatile
 11516                           
 11517                           ; BSR set to: 61
 11518                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 11519  0052FC  0E82               	movlw	130
 11520  0052FE  6FDD               	movwf	221,b	;volatile
 11521                           
 11522                           ; BSR set to: 61
 11523                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 11524  005300  0E06               	movlw	6
 11525  005302  6FDE               	movwf	222,b	;volatile
 11526                           
 11527                           ; BSR set to: 61
 11528                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 11529  005304  6BDF               	clrf	223,b	;volatile
 11530                           
 11531                           ; BSR set to: 61
 11532                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 11533  005306  6BE0               	clrf	224,b	;volatile
 11534                           
 11535                           ; BSR set to: 61
 11536                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 11537  005308  6BE1               	clrf	225,b	;volatile
 11538                           
 11539                           ; BSR set to: 61
 11540                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 11541  00530A  6BE2               	clrf	226,b	;volatile
 11542                           
 11543                           ; BSR set to: 61
 11544                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 11545  00530C  6A36               	clrf	_uart2TxHead,c	;volatile
 11546                           
 11547                           ; BSR set to: 61
 11548                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 11549  00530E  6A35               	clrf	_uart2TxTail,c	;volatile
 11550                           
 11551                           ; BSR set to: 61
 11552                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 11553  005310  0E40               	movlw	64
 11554  005312  6E34               	movwf	_uart2TxBufferRemaining,c	;volatile
 11555                           
 11556                           ; BSR set to: 61
 11557                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 11558  005314  6A33               	clrf	_uart2RxHead,c	;volatile
 11559                           
 11560                           ; BSR set to: 61
 11561                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 11562  005316  6A32               	clrf	_uart2RxTail,c	;volatile
 11563                           
 11564                           ; BSR set to: 61
 11565                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 11566  005318  6A31               	clrf	_uart2RxCount,c	;volatile
 11567                           
 11568                           ; BSR set to: 61
 11569                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 11570  00531A  0139               	movlb	57	; () banked
 11571  00531C  8596               	bsf	150,2,b	;volatile
 11572                           
 11573                           ; BSR set to: 57
 11574                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 11575  00531E  0012               	return		;funcret
 11576  005320                     __end_of_UART2_Initialize:
 11577                           	opt callstack 0
 11578                           
 11579 ;; *************** function _UART2_SetTxInterruptHandler *****************
 11580 ;; Defined at:
 11581 ;;		line 252 in file "mcc_generated_files/uart2.c"
 11582 ;; Parameters:    Size  Location     Type
 11583 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11584 ;;		 -> UART2_Transmit_ISR(1), 
 11585 ;; Auto vars:     Size  Location     Type
 11586 ;;		None
 11587 ;; Return value:  Size  Location     Type
 11588 ;;                  1  [STACK] void 
 11589 ;; Registers used:
 11590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11591 ;; Tracked objects:
 11592 ;;		On entry : 3F/39
 11593 ;;		On exit  : 0/0
 11594 ;;		Unchanged: 0/0
 11595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11600 ;;Total ram usage:        0 bytes
 11601 ;; Hardware stack levels used:    1
 11602 ;; Hardware stack levels required when called:    3
 11603 ;; This function calls:
 11604 ;;		Nothing
 11605 ;; This function is called by:
 11606 ;;		_UART2_Initialize
 11607 ;; This function uses a reentrant model
 11608 ;;
 11609                           
 11610                           	psect	text56
 11611  005976                     __ptext56:
 11612                           	opt callstack 0
 11613  005976                     _UART2_SetTxInterruptHandler:
 11614                           	opt callstack 25
 11615                           
 11616                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 11617                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11618                           
 11619                           ; BSR set to: 57
 11620                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11621                           ;incstack = 0
 11622  005976  50E1               	movf	fsr1l,w,c
 11623  005978  0FFD               	addlw	-3
 11624  00597A  6ED9               	movwf	fsr2l,c
 11625  00597C  50E2               	movf	fsr1h,w,c
 11626  00597E  6EDA               	movwf	fsr2h,c
 11627  005980  0EFF               	movlw	255
 11628  005982  22DA               	addwfc	fsr2h,f,c
 11629  005984  006F FF78  F013    	movff	postinc2,_UART2_TxInterruptHandler
 11630  00598A  006F FF78  F014    	movff	postinc2,_UART2_TxInterruptHandler+1
 11631  005990  006F FF74  F015    	movff	postdec2,_UART2_TxInterruptHandler+2
 11632                           
 11633                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11634  005996  52E5               	movf	postdec1,f,c
 11635  005998  52E5               	movf	postdec1,f,c
 11636  00599A  52E5               	movf	postdec1,f,c
 11637  00599C  0012               	return		;funcret
 11638  00599E                     __end_of_UART2_SetTxInterruptHandler:
 11639                           	opt callstack 0
 11640                           
 11641 ;; *************** function _UART2_SetRxInterruptHandler *****************
 11642 ;; Defined at:
 11643 ;;		line 248 in file "mcc_generated_files/uart2.c"
 11644 ;; Parameters:    Size  Location     Type
 11645 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11646 ;;		 -> UART2_Receive_ISR(1), 
 11647 ;; Auto vars:     Size  Location     Type
 11648 ;;		None
 11649 ;; Return value:  Size  Location     Type
 11650 ;;                  1  [STACK] void 
 11651 ;; Registers used:
 11652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11653 ;; Tracked objects:
 11654 ;;		On entry : 3F/39
 11655 ;;		On exit  : 0/0
 11656 ;;		Unchanged: 0/0
 11657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11662 ;;Total ram usage:        0 bytes
 11663 ;; Hardware stack levels used:    1
 11664 ;; Hardware stack levels required when called:    3
 11665 ;; This function calls:
 11666 ;;		Nothing
 11667 ;; This function is called by:
 11668 ;;		_UART2_Initialize
 11669 ;; This function uses a reentrant model
 11670 ;;
 11671                           
 11672                           	psect	text57
 11673  00599E                     __ptext57:
 11674                           	opt callstack 0
 11675  00599E                     _UART2_SetRxInterruptHandler:
 11676                           	opt callstack 25
 11677                           
 11678                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 11679                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11680                           
 11681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11682                           ;incstack = 0
 11683  00599E  50E1               	movf	fsr1l,w,c
 11684  0059A0  0FFD               	addlw	-3
 11685  0059A2  6ED9               	movwf	fsr2l,c
 11686  0059A4  50E2               	movf	fsr1h,w,c
 11687  0059A6  6EDA               	movwf	fsr2h,c
 11688  0059A8  0EFF               	movlw	255
 11689  0059AA  22DA               	addwfc	fsr2h,f,c
 11690  0059AC  006F FF78  F016    	movff	postinc2,_UART2_RxInterruptHandler
 11691  0059B2  006F FF78  F017    	movff	postinc2,_UART2_RxInterruptHandler+1
 11692  0059B8  006F FF74  F018    	movff	postdec2,_UART2_RxInterruptHandler+2
 11693                           
 11694                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11695  0059BE  52E5               	movf	postdec1,f,c
 11696  0059C0  52E5               	movf	postdec1,f,c
 11697  0059C2  52E5               	movf	postdec1,f,c
 11698  0059C4  0012               	return		;funcret
 11699  0059C6                     __end_of_UART2_SetRxInterruptHandler:
 11700                           	opt callstack 0
 11701                           
 11702 ;; *************** function _UART1_Initialize *****************
 11703 ;; Defined at:
 11704 ;;		line 78 in file "mcc_generated_files/uart1.c"
 11705 ;; Parameters:    Size  Location     Type
 11706 ;;		None
 11707 ;; Auto vars:     Size  Location     Type
 11708 ;;		None
 11709 ;; Return value:  Size  Location     Type
 11710 ;;                  1  [STACK] void 
 11711 ;; Registers used:
 11712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 11713 ;; Tracked objects:
 11714 ;;		On entry : 3F/3C
 11715 ;;		On exit  : 3F/39
 11716 ;;		Unchanged: 0/0
 11717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11722 ;;Total ram usage:        0 bytes
 11723 ;; Hardware stack levels used:    1
 11724 ;; Hardware stack levels required when called:    4
 11725 ;; This function calls:
 11726 ;;		_UART1_SetRxInterruptHandler
 11727 ;;		_UART1_SetTxInterruptHandler
 11728 ;; This function is called by:
 11729 ;;		_SYSTEM_Initialize
 11730 ;; This function uses a reentrant model
 11731 ;;
 11732                           
 11733                           	psect	text58
 11734  0051FC                     __ptext58:
 11735                           	opt callstack 0
 11736  0051FC                     _UART1_Initialize:
 11737                           	opt callstack 25
 11738                           
 11739                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 11740                           
 11741                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11742                           ;incstack = 0
 11743  0051FC  0139               	movlb	57	; () banked
 11744  0051FE  9793               	bcf	147,3,b	;volatile
 11745                           
 11746                           ; BSR set to: 57
 11747                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 11748  005200  0EBC               	movlw	low _UART1_Receive_ISR
 11749  005202  6EE6               	movwf	postinc1,c
 11750  005204  0E5C               	movlw	high _UART1_Receive_ISR
 11751  005206  6EE6               	movwf	postinc1,c
 11752  005208  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 11753  00520A  6EE6               	movwf	postinc1,c
 11754  00520C  ECF7  F02C         	call	_UART1_SetRxInterruptHandler	;wreg free
 11755                           
 11756                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 11757  005210  0139               	movlb	57	; () banked
 11758  005212  9993               	bcf	147,4,b	;volatile
 11759                           
 11760                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 11761  005214  0EFE               	movlw	low _UART1_Transmit_ISR
 11762  005216  6EE6               	movwf	postinc1,c
 11763  005218  0E57               	movlw	high _UART1_Transmit_ISR
 11764  00521A  6EE6               	movwf	postinc1,c
 11765  00521C  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 11766  00521E  6EE6               	movwf	postinc1,c
 11767  005220  ECE3  F02C         	call	_UART1_SetTxInterruptHandler	;wreg free
 11768                           
 11769                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 11770  005224  013D               	movlb	61	; () banked
 11771  005226  6BEC               	clrf	236,b	;volatile
 11772                           
 11773                           ; BSR set to: 61
 11774                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 11775  005228  6BED               	clrf	237,b	;volatile
 11776                           
 11777                           ; BSR set to: 61
 11778                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 11779  00522A  6BEE               	clrf	238,b	;volatile
 11780                           
 11781                           ; BSR set to: 61
 11782                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 11783  00522C  6BEF               	clrf	239,b	;volatile
 11784                           
 11785                           ; BSR set to: 61
 11786                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 11787  00522E  6BF0               	clrf	240,b	;volatile
 11788                           
 11789                           ; BSR set to: 61
 11790                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 11791  005230  6BF1               	clrf	241,b	;volatile
 11792                           
 11793                           ; BSR set to: 61
 11794                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 11795  005232  0EB0               	movlw	176
 11796  005234  6FF2               	movwf	242,b	;volatile
 11797                           
 11798                           ; BSR set to: 61
 11799                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 11800  005236  0E80               	movlw	128
 11801  005238  6FF3               	movwf	243,b	;volatile
 11802                           
 11803                           ; BSR set to: 61
 11804                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 11805  00523A  6BF4               	clrf	244,b	;volatile
 11806                           
 11807                           ; BSR set to: 61
 11808                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 11809  00523C  0E82               	movlw	130
 11810  00523E  6FF5               	movwf	245,b	;volatile
 11811                           
 11812                           ; BSR set to: 61
 11813                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 11814  005240  0E06               	movlw	6
 11815  005242  6FF6               	movwf	246,b	;volatile
 11816                           
 11817                           ; BSR set to: 61
 11818                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 11819  005244  6BF7               	clrf	247,b	;volatile
 11820                           
 11821                           ; BSR set to: 61
 11822                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 11823  005246  6BF8               	clrf	248,b	;volatile
 11824                           
 11825                           ; BSR set to: 61
 11826                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 11827  005248  6BF9               	clrf	249,b	;volatile
 11828                           
 11829                           ; BSR set to: 61
 11830                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 11831  00524A  6BFA               	clrf	250,b	;volatile
 11832                           
 11833                           ; BSR set to: 61
 11834                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 11835  00524C  6A3C               	clrf	_uart1TxHead,c	;volatile
 11836                           
 11837                           ; BSR set to: 61
 11838                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 11839  00524E  6A3B               	clrf	_uart1TxTail,c	;volatile
 11840                           
 11841                           ; BSR set to: 61
 11842                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 11843  005250  0E40               	movlw	64
 11844  005252  6E3A               	movwf	_uart1TxBufferRemaining,c	;volatile
 11845                           
 11846                           ; BSR set to: 61
 11847                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 11848  005254  6A39               	clrf	_uart1RxHead,c	;volatile
 11849                           
 11850                           ; BSR set to: 61
 11851                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 11852  005256  6A38               	clrf	_uart1RxTail,c	;volatile
 11853                           
 11854                           ; BSR set to: 61
 11855                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 11856  005258  6A37               	clrf	_uart1RxCount,c	;volatile
 11857                           
 11858                           ; BSR set to: 61
 11859                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 11860  00525A  0139               	movlb	57	; () banked
 11861  00525C  8793               	bsf	147,3,b	;volatile
 11862                           
 11863                           ; BSR set to: 57
 11864                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 11865  00525E  0012               	return		;funcret
 11866  005260                     __end_of_UART1_Initialize:
 11867                           	opt callstack 0
 11868                           
 11869 ;; *************** function _UART1_SetTxInterruptHandler *****************
 11870 ;; Defined at:
 11871 ;;		line 244 in file "mcc_generated_files/uart1.c"
 11872 ;; Parameters:    Size  Location     Type
 11873 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11874 ;;		 -> UART1_Transmit_ISR(1), 
 11875 ;; Auto vars:     Size  Location     Type
 11876 ;;		None
 11877 ;; Return value:  Size  Location     Type
 11878 ;;                  1  [STACK] void 
 11879 ;; Registers used:
 11880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11881 ;; Tracked objects:
 11882 ;;		On entry : 3F/39
 11883 ;;		On exit  : 0/0
 11884 ;;		Unchanged: 0/0
 11885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11890 ;;Total ram usage:        0 bytes
 11891 ;; Hardware stack levels used:    1
 11892 ;; Hardware stack levels required when called:    3
 11893 ;; This function calls:
 11894 ;;		Nothing
 11895 ;; This function is called by:
 11896 ;;		_UART1_Initialize
 11897 ;; This function uses a reentrant model
 11898 ;;
 11899                           
 11900                           	psect	text59
 11901  0059C6                     __ptext59:
 11902                           	opt callstack 0
 11903  0059C6                     _UART1_SetTxInterruptHandler:
 11904                           	opt callstack 25
 11905                           
 11906                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 11907                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11908                           
 11909                           ; BSR set to: 57
 11910                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11911                           ;incstack = 0
 11912  0059C6  50E1               	movf	fsr1l,w,c
 11913  0059C8  0FFD               	addlw	-3
 11914  0059CA  6ED9               	movwf	fsr2l,c
 11915  0059CC  50E2               	movf	fsr1h,w,c
 11916  0059CE  6EDA               	movwf	fsr2h,c
 11917  0059D0  0EFF               	movlw	255
 11918  0059D2  22DA               	addwfc	fsr2h,f,c
 11919  0059D4  006F FF78  F00D    	movff	postinc2,_UART1_TxInterruptHandler
 11920  0059DA  006F FF78  F00E    	movff	postinc2,_UART1_TxInterruptHandler+1
 11921  0059E0  006F FF74  F00F    	movff	postdec2,_UART1_TxInterruptHandler+2
 11922                           
 11923                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11924  0059E6  52E5               	movf	postdec1,f,c
 11925  0059E8  52E5               	movf	postdec1,f,c
 11926  0059EA  52E5               	movf	postdec1,f,c
 11927  0059EC  0012               	return		;funcret
 11928  0059EE                     __end_of_UART1_SetTxInterruptHandler:
 11929                           	opt callstack 0
 11930                           
 11931 ;; *************** function _UART1_SetRxInterruptHandler *****************
 11932 ;; Defined at:
 11933 ;;		line 239 in file "mcc_generated_files/uart1.c"
 11934 ;; Parameters:    Size  Location     Type
 11935 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11936 ;;		 -> UART1_Receive_ISR(1), 
 11937 ;; Auto vars:     Size  Location     Type
 11938 ;;		None
 11939 ;; Return value:  Size  Location     Type
 11940 ;;                  1  [STACK] void 
 11941 ;; Registers used:
 11942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11943 ;; Tracked objects:
 11944 ;;		On entry : 3F/39
 11945 ;;		On exit  : 0/0
 11946 ;;		Unchanged: 0/0
 11947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11952 ;;Total ram usage:        0 bytes
 11953 ;; Hardware stack levels used:    1
 11954 ;; Hardware stack levels required when called:    3
 11955 ;; This function calls:
 11956 ;;		Nothing
 11957 ;; This function is called by:
 11958 ;;		_UART1_Initialize
 11959 ;; This function uses a reentrant model
 11960 ;;
 11961                           
 11962                           	psect	text60
 11963  0059EE                     __ptext60:
 11964                           	opt callstack 0
 11965  0059EE                     _UART1_SetRxInterruptHandler:
 11966                           	opt callstack 25
 11967                           
 11968                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 11969                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11970                           
 11971                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11972                           ;incstack = 0
 11973  0059EE  50E1               	movf	fsr1l,w,c
 11974  0059F0  0FFD               	addlw	-3
 11975  0059F2  6ED9               	movwf	fsr2l,c
 11976  0059F4  50E2               	movf	fsr1h,w,c
 11977  0059F6  6EDA               	movwf	fsr2h,c
 11978  0059F8  0EFF               	movlw	255
 11979  0059FA  22DA               	addwfc	fsr2h,f,c
 11980  0059FC  006F FF78  F010    	movff	postinc2,_UART1_RxInterruptHandler
 11981  005A02  006F FF78  F011    	movff	postinc2,_UART1_RxInterruptHandler+1
 11982  005A08  006F FF74  F012    	movff	postdec2,_UART1_RxInterruptHandler+2
 11983                           
 11984                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11985  005A0E  52E5               	movf	postdec1,f,c
 11986  005A10  52E5               	movf	postdec1,f,c
 11987  005A12  52E5               	movf	postdec1,f,c
 11988  005A14  0012               	return		;funcret
 11989  005A16                     __end_of_UART1_SetRxInterruptHandler:
 11990                           	opt callstack 0
 11991                           
 11992 ;; *************** function _TMR6_Initialize *****************
 11993 ;; Defined at:
 11994 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 11995 ;; Parameters:    Size  Location     Type
 11996 ;;		None
 11997 ;; Auto vars:     Size  Location     Type
 11998 ;;		None
 11999 ;; Return value:  Size  Location     Type
 12000 ;;                  1  [STACK] void 
 12001 ;; Registers used:
 12002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12003 ;; Tracked objects:
 12004 ;;		On entry : 3F/39
 12005 ;;		On exit  : 0/0
 12006 ;;		Unchanged: 0/0
 12007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12012 ;;Total ram usage:        0 bytes
 12013 ;; Hardware stack levels used:    1
 12014 ;; Hardware stack levels required when called:    4
 12015 ;; This function calls:
 12016 ;;		_TMR6_SetInterruptHandler
 12017 ;; This function is called by:
 12018 ;;		_SYSTEM_Initialize
 12019 ;; This function uses a reentrant model
 12020 ;;
 12021                           
 12022                           	psect	text61
 12023  005A16                     __ptext61:
 12024                           	opt callstack 0
 12025  005A16                     _TMR6_Initialize:
 12026                           	opt callstack 25
 12027                           
 12028                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 12029                           
 12030                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12031                           ;incstack = 0
 12032  005A16  0E01               	movlw	1
 12033  005A18  6E96               	movwf	16278,c	;volatile
 12034                           
 12035                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 12036  005A1A  6A95               	clrf	16277,c	;volatile
 12037                           
 12038                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 12039  005A1C  6A97               	clrf	16279,c	;volatile
 12040                           
 12041                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 12042  005A1E  0E03               	movlw	3
 12043  005A20  6E93               	movwf	16275,c	;volatile
 12044                           
 12045                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 12046  005A22  6A92               	clrf	16274,c	;volatile
 12047                           
 12048                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 12049  005A24  0139               	movlb	57	; () banked
 12050  005A26  91A9               	bcf	169,0,b	;volatile
 12051                           
 12052                           ; BSR set to: 57
 12053                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 12054  005A28  8199               	bsf	153,0,b	;volatile
 12055                           
 12056                           ; BSR set to: 57
 12057                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 12058  005A2A  0E40               	movlw	low _TMR6_DefaultInterruptHandler
 12059  005A2C  6EE6               	movwf	postinc1,c
 12060  005A2E  0E55               	movlw	high _TMR6_DefaultInterruptHandler
 12061  005A30  6EE6               	movwf	postinc1,c
 12062  005A32  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 12063  005A34  6EE6               	movwf	postinc1,c
 12064  005A36  EC1F  F02D         	call	_TMR6_SetInterruptHandler	;wreg free
 12065                           
 12066                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 12067  005A3A  6894               	setf	16276,c	;volatile
 12068                           
 12069                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12070  005A3C  0012               	return		;funcret
 12071  005A3E                     __end_of_TMR6_Initialize:
 12072                           	opt callstack 0
 12073                           
 12074 ;; *************** function _TMR6_SetInterruptHandler *****************
 12075 ;; Defined at:
 12076 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 12077 ;; Parameters:    Size  Location     Type
 12078 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12079 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 12080 ;; Auto vars:     Size  Location     Type
 12081 ;;		None
 12082 ;; Return value:  Size  Location     Type
 12083 ;;                  1  [STACK] void 
 12084 ;; Registers used:
 12085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12086 ;; Tracked objects:
 12087 ;;		On entry : 3F/39
 12088 ;;		On exit  : 0/0
 12089 ;;		Unchanged: 0/0
 12090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12095 ;;Total ram usage:        0 bytes
 12096 ;; Hardware stack levels used:    1
 12097 ;; Hardware stack levels required when called:    3
 12098 ;; This function calls:
 12099 ;;		Nothing
 12100 ;; This function is called by:
 12101 ;;		_TMR6_Initialize
 12102 ;; This function uses a reentrant model
 12103 ;;
 12104                           
 12105                           	psect	text62
 12106  005A3E                     __ptext62:
 12107                           	opt callstack 0
 12108  005A3E                     _TMR6_SetInterruptHandler:
 12109                           	opt callstack 25
 12110                           
 12111                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 12112                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12113                           
 12114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12115                           ;incstack = 0
 12116  005A3E  50E1               	movf	fsr1l,w,c
 12117  005A40  0FFD               	addlw	-3
 12118  005A42  6ED9               	movwf	fsr2l,c
 12119  005A44  50E2               	movf	fsr1h,w,c
 12120  005A46  6EDA               	movwf	fsr2h,c
 12121  005A48  0EFF               	movlw	255
 12122  005A4A  22DA               	addwfc	fsr2h,f,c
 12123  005A4C  006F FF78  F007    	movff	postinc2,_TMR6_InterruptHandler
 12124  005A52  006F FF78  F008    	movff	postinc2,_TMR6_InterruptHandler+1
 12125  005A58  006F FF74  F009    	movff	postdec2,_TMR6_InterruptHandler+2
 12126                           
 12127                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12128  005A5E  52E5               	movf	postdec1,f,c
 12129  005A60  52E5               	movf	postdec1,f,c
 12130  005A62  52E5               	movf	postdec1,f,c
 12131  005A64  0012               	return		;funcret
 12132  005A66                     __end_of_TMR6_SetInterruptHandler:
 12133                           	opt callstack 0
 12134                           
 12135 ;; *************** function _TMR5_Initialize *****************
 12136 ;; Defined at:
 12137 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 12138 ;; Parameters:    Size  Location     Type
 12139 ;;		None
 12140 ;; Auto vars:     Size  Location     Type
 12141 ;;		None
 12142 ;; Return value:  Size  Location     Type
 12143 ;;                  1  [STACK] void 
 12144 ;; Registers used:
 12145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 12146 ;; Tracked objects:
 12147 ;;		On entry : 3F/3C
 12148 ;;		On exit  : 0/0
 12149 ;;		Unchanged: 0/0
 12150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12155 ;;Total ram usage:        0 bytes
 12156 ;; Hardware stack levels used:    1
 12157 ;; Hardware stack levels required when called:    4
 12158 ;; This function calls:
 12159 ;;		_TMR5_SetInterruptHandler
 12160 ;; This function is called by:
 12161 ;;		_SYSTEM_Initialize
 12162 ;; This function uses a reentrant model
 12163 ;;
 12164                           
 12165                           	psect	text63
 12166  0054FA                     __ptext63:
 12167                           	opt callstack 0
 12168  0054FA                     _TMR5_Initialize:
 12169                           	opt callstack 25
 12170                           
 12171                           ;mcc_generated_files/tmr5.c: 71:  T5GCON = 0x00;
 12172                           
 12173                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12174                           ;incstack = 0
 12175  0054FA  6A9B               	clrf	16283,c	;volatile
 12176                           
 12177                           ;mcc_generated_files/tmr5.c: 74:  T5GATE = 0x00;
 12178  0054FC  6A9C               	clrf	16284,c	;volatile
 12179                           
 12180                           ;mcc_generated_files/tmr5.c: 77:  T5CLK = 0x01;
 12181  0054FE  0E01               	movlw	1
 12182  005500  6E9D               	movwf	16285,c	;volatile
 12183                           
 12184                           ;mcc_generated_files/tmr5.c: 80:  TMR5H = 0x63;
 12185  005502  0E63               	movlw	99
 12186  005504  6E99               	movwf	16281,c	;volatile
 12187                           
 12188                           ;mcc_generated_files/tmr5.c: 83:  TMR5L = 0xC0;
 12189  005506  0EC0               	movlw	192
 12190  005508  6E98               	movwf	16280,c	;volatile
 12191                           
 12192                           ;mcc_generated_files/tmr5.c: 86:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 12193  00550A  5098               	movf	16280,w,c	;volatile
 12194  00550C  006F FE64  F03D    	movff	16281,btemp	;volatile
 12195  005512  6A3E               	clrf	btemp+1,c
 12196  005514  0060  F0F4  F03E   	movff	btemp,btemp+1
 12197  00551A  6A3D               	clrf	btemp,c
 12198  00551C  103D               	iorwf	btemp,w,c
 12199  00551E  6E2E               	movwf	_timer5ReloadVal,c	;volatile
 12200  005520  503E               	movf	btemp+1,w,c
 12201  005522  6E2F               	movwf	_timer5ReloadVal+1,c	;volatile
 12202                           
 12203                           ;mcc_generated_files/tmr5.c: 89:  PIR8bits.TMR5IF = 0;
 12204  005524  0139               	movlb	57	; () banked
 12205  005526  9DA8               	bcf	168,6,b	;volatile
 12206                           
 12207                           ; BSR set to: 57
 12208                           ;mcc_generated_files/tmr5.c: 92:  PIE8bits.TMR5IE = 1;
 12209  005528  8D98               	bsf	152,6,b	;volatile
 12210                           
 12211                           ; BSR set to: 57
 12212                           ;mcc_generated_files/tmr5.c: 95:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 12213  00552A  0EA2               	movlw	low _TMR5_DefaultInterruptHandler
 12214  00552C  6EE6               	movwf	postinc1,c
 12215  00552E  0E5D               	movlw	high _TMR5_DefaultInterruptHandler
 12216  005530  6EE6               	movwf	postinc1,c
 12217  005532  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 12218  005534  6EE6               	movwf	postinc1,c
 12219  005536  EC33  F02D         	call	_TMR5_SetInterruptHandler	;wreg free
 12220                           
 12221                           ;mcc_generated_files/tmr5.c: 98:  T5CON = 0x31;
 12222  00553A  0E31               	movlw	49
 12223  00553C  6E9A               	movwf	16282,c	;volatile
 12224                           
 12225                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12226  00553E  0012               	return		;funcret
 12227  005540                     __end_of_TMR5_Initialize:
 12228                           	opt callstack 0
 12229                           
 12230 ;; *************** function _TMR5_SetInterruptHandler *****************
 12231 ;; Defined at:
 12232 ;;		line 189 in file "mcc_generated_files/tmr5.c"
 12233 ;; Parameters:    Size  Location     Type
 12234 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12235 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 12236 ;; Auto vars:     Size  Location     Type
 12237 ;;		None
 12238 ;; Return value:  Size  Location     Type
 12239 ;;                  1  [STACK] void 
 12240 ;; Registers used:
 12241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12242 ;; Tracked objects:
 12243 ;;		On entry : 3F/39
 12244 ;;		On exit  : 0/0
 12245 ;;		Unchanged: 0/0
 12246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12251 ;;Total ram usage:        0 bytes
 12252 ;; Hardware stack levels used:    1
 12253 ;; Hardware stack levels required when called:    3
 12254 ;; This function calls:
 12255 ;;		Nothing
 12256 ;; This function is called by:
 12257 ;;		_TMR5_Initialize
 12258 ;; This function uses a reentrant model
 12259 ;;
 12260                           
 12261                           	psect	text64
 12262  005A66                     __ptext64:
 12263                           	opt callstack 0
 12264  005A66                     _TMR5_SetInterruptHandler:
 12265                           	opt callstack 25
 12266                           
 12267                           ;mcc_generated_files/tmr5.c: 189: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 190: {;mcc_generated_files/tmr5.c: 191:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 12268                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12269                           
 12270                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12271                           ;incstack = 0
 12272  005A66  50E1               	movf	fsr1l,w,c
 12273  005A68  0FFD               	addlw	-3
 12274  005A6A  6ED9               	movwf	fsr2l,c
 12275  005A6C  50E2               	movf	fsr1h,w,c
 12276  005A6E  6EDA               	movwf	fsr2h,c
 12277  005A70  0EFF               	movlw	255
 12278  005A72  22DA               	addwfc	fsr2h,f,c
 12279  005A74  006F FF78  F004    	movff	postinc2,_TMR5_InterruptHandler
 12280  005A7A  006F FF78  F005    	movff	postinc2,_TMR5_InterruptHandler+1
 12281  005A80  006F FF74  F006    	movff	postdec2,_TMR5_InterruptHandler+2
 12282                           
 12283                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12284  005A86  52E5               	movf	postdec1,f,c
 12285  005A88  52E5               	movf	postdec1,f,c
 12286  005A8A  52E5               	movf	postdec1,f,c
 12287  005A8C  0012               	return		;funcret
 12288  005A8E                     __end_of_TMR5_SetInterruptHandler:
 12289                           	opt callstack 0
 12290                           
 12291 ;; *************** function _SPI1_Initialize *****************
 12292 ;; Defined at:
 12293 ;;		line 64 in file "mcc_generated_files/spi1.c"
 12294 ;; Parameters:    Size  Location     Type
 12295 ;;		None
 12296 ;; Auto vars:     Size  Location     Type
 12297 ;;		None
 12298 ;; Return value:  Size  Location     Type
 12299 ;;                  1  [STACK] void 
 12300 ;; Registers used:
 12301 ;;		wreg, status,2
 12302 ;; Tracked objects:
 12303 ;;		On entry : 3F/39
 12304 ;;		On exit  : 3F/3D
 12305 ;;		Unchanged: 0/0
 12306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12311 ;;Total ram usage:        0 bytes
 12312 ;; Hardware stack levels used:    1
 12313 ;; Hardware stack levels required when called:    3
 12314 ;; This function calls:
 12315 ;;		Nothing
 12316 ;; This function is called by:
 12317 ;;		_SYSTEM_Initialize
 12318 ;; This function uses a reentrant model
 12319 ;;
 12320                           
 12321                           	psect	text65
 12322  005DBC                     __ptext65:
 12323                           	opt callstack 0
 12324  005DBC                     _SPI1_Initialize:
 12325                           	opt callstack 26
 12326                           
 12327                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 12328                           
 12329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12330                           ;incstack = 0
 12331  005DBC  0E40               	movlw	64
 12332  005DBE  013D               	movlb	61	; () banked
 12333  005DC0  6F15               	movwf	21,b	;volatile
 12334                           
 12335                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 12336  005DC2  0E03               	movlw	3
 12337  005DC4  6F16               	movwf	22,b	;volatile
 12338                           
 12339                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 12340  005DC6  0E4F               	movlw	79
 12341  005DC8  6F19               	movwf	25,b	;volatile
 12342                           
 12343                           ; BSR set to: 61
 12344                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 12345  005DCA  6B1C               	clrf	28,b	;volatile
 12346                           
 12347                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 12348  005DCC  0E83               	movlw	131
 12349  005DCE  6F14               	movwf	20,b	;volatile
 12350                           
 12351                           ; BSR set to: 61
 12352                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12353  005DD0  0012               	return		;funcret
 12354  005DD2                     __end_of_SPI1_Initialize:
 12355                           	opt callstack 0
 12356                           
 12357 ;; *************** function _PMD_Initialize *****************
 12358 ;; Defined at:
 12359 ;;		line 88 in file "mcc_generated_files/mcc.c"
 12360 ;; Parameters:    Size  Location     Type
 12361 ;;		None
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;		None
 12364 ;; Return value:  Size  Location     Type
 12365 ;;                  1  [STACK] void 
 12366 ;; Registers used:
 12367 ;;		None
 12368 ;; Tracked objects:
 12369 ;;		On entry : 3F/39
 12370 ;;		On exit  : 3F/39
 12371 ;;		Unchanged: 0/0
 12372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12377 ;;Total ram usage:        0 bytes
 12378 ;; Hardware stack levels used:    1
 12379 ;; Hardware stack levels required when called:    3
 12380 ;; This function calls:
 12381 ;;		Nothing
 12382 ;; This function is called by:
 12383 ;;		_SYSTEM_Initialize
 12384 ;; This function uses a reentrant model
 12385 ;;
 12386                           
 12387                           	psect	text66
 12388  005DE8                     __ptext66:
 12389                           	opt callstack 0
 12390  005DE8                     _PMD_Initialize:
 12391                           	opt callstack 26
 12392                           
 12393                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 12394                           
 12395                           ; BSR set to: 61
 12396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12397                           ;incstack = 0
 12398  005DE8  0139               	movlb	57	; () banked
 12399  005DEA  6BC0               	clrf	192,b	;volatile
 12400                           
 12401                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 12402  005DEC  6BC1               	clrf	193,b	;volatile
 12403                           
 12404                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 12405  005DEE  6BC2               	clrf	194,b	;volatile
 12406                           
 12407                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 12408  005DF0  6BC3               	clrf	195,b	;volatile
 12409                           
 12410                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 12411  005DF2  6BC4               	clrf	196,b	;volatile
 12412                           
 12413                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 12414  005DF4  6BC5               	clrf	197,b	;volatile
 12415                           
 12416                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 12417  005DF6  6BC6               	clrf	198,b	;volatile
 12418                           
 12419                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 12420  005DF8  6BC7               	clrf	199,b	;volatile
 12421                           
 12422                           ; BSR set to: 57
 12423                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12424  005DFA  0012               	return		;funcret
 12425  005DFC                     __end_of_PMD_Initialize:
 12426                           	opt callstack 0
 12427                           
 12428 ;; *************** function _PIN_MANAGER_Initialize *****************
 12429 ;; Defined at:
 12430 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 12431 ;; Parameters:    Size  Location     Type
 12432 ;;		None
 12433 ;; Auto vars:     Size  Location     Type
 12434 ;;		None
 12435 ;; Return value:  Size  Location     Type
 12436 ;;                  1  [STACK] void 
 12437 ;; Registers used:
 12438 ;;		wreg, status,2
 12439 ;; Tracked objects:
 12440 ;;		On entry : 3F/39
 12441 ;;		On exit  : 3F/3A
 12442 ;;		Unchanged: 0/0
 12443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12448 ;;Total ram usage:        0 bytes
 12449 ;; Hardware stack levels used:    1
 12450 ;; Hardware stack levels required when called:    3
 12451 ;; This function calls:
 12452 ;;		Nothing
 12453 ;; This function is called by:
 12454 ;;		_SYSTEM_Initialize
 12455 ;; This function uses a reentrant model
 12456 ;;
 12457                           
 12458                           	psect	text67
 12459  004CF2                     __ptext67:
 12460                           	opt callstack 0
 12461  004CF2                     _PIN_MANAGER_Initialize:
 12462                           	opt callstack 26
 12463                           
 12464                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 12465                           
 12466                           ; BSR set to: 57
 12467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12468                           ;incstack = 0
 12469  004CF2  0E07               	movlw	7
 12470  004CF4  6EBE               	movwf	16318,c	;volatile
 12471                           
 12472                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 12473  004CF6  6ABD               	clrf	16317,c	;volatile
 12474                           
 12475                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 12476  004CF8  6ABA               	clrf	16314,c	;volatile
 12477                           
 12478                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 12479  004CFA  6ABF               	clrf	16319,c	;volatile
 12480                           
 12481                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 12482  004CFC  6ABB               	clrf	16315,c	;volatile
 12483                           
 12484                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 12485  004CFE  0E06               	movlw	6
 12486  004D00  6EBC               	movwf	16316,c	;volatile
 12487                           
 12488                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 12489  004D02  6AC6               	clrf	16326,c	;volatile
 12490                           
 12491                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 12492  004D04  68C7               	setf	16327,c	;volatile
 12493                           
 12494                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 12495  004D06  0E8F               	movlw	143
 12496  004D08  6EC2               	movwf	16322,c	;volatile
 12497                           
 12498                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 12499  004D0A  0EBF               	movlw	191
 12500  004D0C  6EC3               	movwf	16323,c	;volatile
 12501                           
 12502                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 12503  004D0E  0E91               	movlw	145
 12504  004D10  6EC4               	movwf	16324,c	;volatile
 12505                           
 12506                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFF;
 12507  004D12  68C5               	setf	16325,c	;volatile
 12508                           
 12509                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0xFF;
 12510  004D14  013A               	movlb	58	; () banked
 12511  004D16  6970               	setf	112,b	;volatile
 12512                           
 12513                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 12514  004D18  0E01               	movlw	1
 12515  004D1A  6F60               	movwf	96,b	;volatile
 12516                           
 12517                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 12518  004D1C  0E38               	movlw	56
 12519  004D1E  6F50               	movwf	80,b	;volatile
 12520                           
 12521                           ; BSR set to: 58
 12522                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 12523  004D20  6B80               	clrf	128,b	;volatile
 12524                           
 12525                           ; BSR set to: 58
 12526                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 12527  004D22  6990               	setf	144,b	;volatile
 12528                           
 12529                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 12530  004D24  0E8F               	movlw	143
 12531  004D26  6F40               	movwf	64,b	;volatile
 12532                           
 12533                           ; BSR set to: 58
 12534                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x00;
 12535  004D28  6B71               	clrf	113,b	;volatile
 12536                           
 12537                           ; BSR set to: 58
 12538                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 12539  004D2A  6B91               	clrf	145,b	;volatile
 12540                           
 12541                           ; BSR set to: 58
 12542                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 12543  004D2C  6B81               	clrf	129,b	;volatile
 12544                           
 12545                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 12546  004D2E  0E87               	movlw	135
 12547  004D30  6F51               	movwf	81,b	;volatile
 12548                           
 12549                           ; BSR set to: 58
 12550                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 12551  004D32  6B41               	clrf	65,b	;volatile
 12552                           
 12553                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 12554  004D34  0E90               	movlw	144
 12555  004D36  6F61               	movwf	97,b	;volatile
 12556                           
 12557                           ; BSR set to: 58
 12558                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 12559  004D38  6B82               	clrf	130,b	;volatile
 12560                           
 12561                           ; BSR set to: 58
 12562                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 12563  004D3A  6B92               	clrf	146,b	;volatile
 12564                           
 12565                           ; BSR set to: 58
 12566                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 12567  004D3C  6B42               	clrf	66,b	;volatile
 12568                           
 12569                           ; BSR set to: 58
 12570                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 12571  004D3E  6B52               	clrf	82,b	;volatile
 12572                           
 12573                           ; BSR set to: 58
 12574                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 12575  004D40  6B62               	clrf	98,b	;volatile
 12576                           
 12577                           ; BSR set to: 58
 12578                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 12579  004D42  6B72               	clrf	114,b	;volatile
 12580                           
 12581                           ; BSR set to: 58
 12582                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 12583  004D44  6943               	setf	67,b	;volatile
 12584                           
 12585                           ; BSR set to: 58
 12586                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 12587  004D46  6953               	setf	83,b	;volatile
 12588                           
 12589                           ; BSR set to: 58
 12590                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 12591  004D48  6963               	setf	99,b	;volatile
 12592                           
 12593                           ; BSR set to: 58
 12594                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 12595  004D4A  6973               	setf	115,b	;volatile
 12596                           
 12597                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 12598  004D4C  0E07               	movlw	7
 12599  004D4E  6F83               	movwf	131,b	;volatile
 12600                           
 12601                           ; BSR set to: 58
 12602                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 12603  004D50  6993               	setf	147,b	;volatile
 12604                           
 12605                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 12606  004D52  0E0F               	movlw	15
 12607  004D54  6FE8               	movwf	232,b	;volatile
 12608                           
 12609                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 12610  004D56  0E16               	movlw	22
 12611  004D58  6F0E               	movwf	14,b	;volatile
 12612                           
 12613                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 12614  004D5A  0E1E               	movlw	30
 12615  004D5C  6F13               	movwf	19,b	;volatile
 12616                           
 12617                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 12618  004D5E  0E08               	movlw	8
 12619  004D60  6FC0               	movwf	192,b	;volatile
 12620                           
 12621                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 12622  004D62  0E0A               	movlw	10
 12623  004D64  6FC2               	movwf	194,b	;volatile
 12624                           
 12625                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 12626  004D66  0E09               	movlw	9
 12627  004D68  6FC1               	movwf	193,b	;volatile
 12628                           
 12629                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 12630  004D6A  0E17               	movlw	23
 12631  004D6C  6FE5               	movwf	229,b	;volatile
 12632                           
 12633                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 12634  004D6E  0E13               	movlw	19
 12635  004D70  6FDE               	movwf	222,b	;volatile
 12636                           
 12637                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 12638  004D72  0E01               	movlw	1
 12639  004D74  6F04               	movwf	4,b	;volatile
 12640                           
 12641                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 12642  004D76  0E26               	movlw	38
 12643  004D78  6F05               	movwf	5,b	;volatile
 12644                           
 12645                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 12646  004D7A  0E28               	movlw	40
 12647  004D7C  6F06               	movwf	6,b	;volatile
 12648                           
 12649                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 12650  004D7E  0E1F               	movlw	31
 12651  004D80  6F15               	movwf	21,b	;volatile
 12652                           
 12653                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 12654  004D82  0E13               	movlw	19
 12655  004D84  6F16               	movwf	22,b	;volatile
 12656                           
 12657                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 12658  004D86  0E14               	movlw	20
 12659  004D88  6FDF               	movwf	223,b	;volatile
 12660                           
 12661                           ; BSR set to: 58
 12662                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 12663  004D8A  0012               	return		;funcret
 12664  004D8C                     __end_of_PIN_MANAGER_Initialize:
 12665                           	opt callstack 0
 12666                           
 12667 ;; *************** function _OSCILLATOR_Initialize *****************
 12668 ;; Defined at:
 12669 ;;		line 70 in file "mcc_generated_files/mcc.c"
 12670 ;; Parameters:    Size  Location     Type
 12671 ;;		None
 12672 ;; Auto vars:     Size  Location     Type
 12673 ;;		None
 12674 ;; Return value:  Size  Location     Type
 12675 ;;                  1  [STACK] void 
 12676 ;; Registers used:
 12677 ;;		wreg, status,2
 12678 ;; Tracked objects:
 12679 ;;		On entry : 3F/3A
 12680 ;;		On exit  : 3F/39
 12681 ;;		Unchanged: 0/0
 12682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12687 ;;Total ram usage:        0 bytes
 12688 ;; Hardware stack levels used:    1
 12689 ;; Hardware stack levels required when called:    3
 12690 ;; This function calls:
 12691 ;;		Nothing
 12692 ;; This function is called by:
 12693 ;;		_SYSTEM_Initialize
 12694 ;; This function uses a reentrant model
 12695 ;;
 12696                           
 12697                           	psect	text68
 12698  005DD2                     __ptext68:
 12699                           	opt callstack 0
 12700  005DD2                     _OSCILLATOR_Initialize:
 12701                           	opt callstack 26
 12702                           
 12703                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 12704                           
 12705                           ; BSR set to: 58
 12706                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12707                           ;incstack = 0
 12708  005DD2  0E20               	movlw	32
 12709  005DD4  0139               	movlb	57	; () banked
 12710  005DD6  6FD9               	movwf	217,b	;volatile
 12711                           
 12712                           ; BSR set to: 57
 12713                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 12714  005DD8  6BDB               	clrf	219,b	;volatile
 12715                           
 12716                           ; BSR set to: 57
 12717                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 12718  005DDA  6BDD               	clrf	221,b	;volatile
 12719                           
 12720                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 12721  005DDC  0E02               	movlw	2
 12722  005DDE  6FDF               	movwf	223,b	;volatile
 12723                           
 12724                           ; BSR set to: 57
 12725                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 12726  005DE0  6BDE               	clrf	222,b	;volatile
 12727  005DE2                     l194:
 12728                           
 12729                           ; BSR set to: 57
 12730                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 12731  005DE2  B1DC               	btfsc	220,0,b	;volatile
 12732  005DE4  0012               	return	
 12733  005DE6  D7FD               	goto	l194
 12734  005DE8                     __end_of_OSCILLATOR_Initialize:
 12735                           	opt callstack 0
 12736                           
 12737 ;; *************** function _NCO1_Initialize *****************
 12738 ;; Defined at:
 12739 ;;		line 58 in file "mcc_generated_files/nco1.c"
 12740 ;; Parameters:    Size  Location     Type
 12741 ;;		None
 12742 ;; Auto vars:     Size  Location     Type
 12743 ;;		None
 12744 ;; Return value:  Size  Location     Type
 12745 ;;                  1  [STACK] void 
 12746 ;; Registers used:
 12747 ;;		wreg, status,2
 12748 ;; Tracked objects:
 12749 ;;		On entry : 0/39
 12750 ;;		On exit  : 3F/3F
 12751 ;;		Unchanged: 0/0
 12752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12757 ;;Total ram usage:        0 bytes
 12758 ;; Hardware stack levels used:    1
 12759 ;; Hardware stack levels required when called:    3
 12760 ;; This function calls:
 12761 ;;		Nothing
 12762 ;; This function is called by:
 12763 ;;		_SYSTEM_Initialize
 12764 ;; This function uses a reentrant model
 12765 ;;
 12766                           
 12767                           	psect	text69
 12768  005D36                     __ptext69:
 12769                           	opt callstack 0
 12770  005D36                     _NCO1_Initialize:
 12771                           	opt callstack 26
 12772                           
 12773                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 12774                           
 12775                           ; BSR set to: 57
 12776                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12777                           ;incstack = 0
 12778  005D36  013F               	movlb	63	; () banked
 12779  005D38  6B3E               	clrf	62,b	;volatile
 12780                           
 12781                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 12782  005D3A  6B3F               	clrf	63,b	;volatile
 12783                           
 12784                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 12785  005D3C  6B3A               	clrf	58,b	;volatile
 12786                           
 12787                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 12788  005D3E  6B39               	clrf	57,b	;volatile
 12789                           
 12790                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 12791  005D40  6B38               	clrf	56,b	;volatile
 12792                           
 12793                           ; BSR set to: 63
 12794                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 12795  005D42  0E06               	movlw	6
 12796  005D44  6F3D               	movwf	61,b	;volatile
 12797                           
 12798                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 12799  005D46  0EC7               	movlw	199
 12800  005D48  6F3C               	movwf	60,b	;volatile
 12801                           
 12802                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 12803  005D4A  0EAE               	movlw	174
 12804  005D4C  6F3B               	movwf	59,b	;volatile
 12805                           
 12806                           ; BSR set to: 63
 12807                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 12808  005D4E  8F3E               	bsf	62,7,b	;volatile
 12809                           
 12810                           ; BSR set to: 63
 12811                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12812  005D50  0012               	return		;funcret
 12813  005D52                     __end_of_NCO1_Initialize:
 12814                           	opt callstack 0
 12815                           
 12816 ;; *************** function _INTERRUPT_Initialize *****************
 12817 ;; Defined at:
 12818 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12819 ;; Parameters:    Size  Location     Type
 12820 ;;		None
 12821 ;; Auto vars:     Size  Location     Type
 12822 ;;  state           1  [STACK] _Bool 
 12823 ;; Return value:  Size  Location     Type
 12824 ;;                  1  [STACK] void 
 12825 ;; Registers used:
 12826 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 12827 ;; Tracked objects:
 12828 ;;		On entry : 0/0
 12829 ;;		On exit  : 3F/39
 12830 ;;		Unchanged: 0/0
 12831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12836 ;;Total ram usage:        0 bytes
 12837 ;; Hardware stack levels used:    1
 12838 ;; Hardware stack levels required when called:    3
 12839 ;; This function calls:
 12840 ;;		Nothing
 12841 ;; This function is called by:
 12842 ;;		_SYSTEM_Initialize
 12843 ;; This function uses a reentrant model
 12844 ;;
 12845                           
 12846                           	psect	text70
 12847  005196                     __ptext70:
 12848                           	opt callstack 0
 12849  005196                     _INTERRUPT_Initialize:
 12850                           	opt callstack 0
 12851                           
 12852                           ; BSR set to: 63
 12853                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12854  005196  52E6               	movf	postinc1,f,c
 12855                           
 12856                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 12857                           
 12858                           ;incstack = 0
 12859  005198  8AD2               	bsf	16338,5,c	;volatile
 12860                           
 12861                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 12862  00519A  AED2               	btfss	16338,7,c	;volatile
 12863  00519C  D003               	goto	u3320
 12864  00519E  6A48               	clrf	btemp+11,c
 12865  0051A0  2A48               	incf	btemp+11,f,c
 12866  0051A2  D001               	goto	u3338
 12867  0051A4                     u3320:
 12868  0051A4  6A48               	clrf	btemp+11,c
 12869  0051A6                     u3338:
 12870                           
 12871                           ;stkvar	_state @ sp[(-1)+0]
 12872  0051A6  0EFF               	movlw	-1
 12873  0051A8  0060  F123  FFE3   	movff	btemp+11,plusw1
 12874                           
 12875                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 12876  0051AE  9ED2               	bcf	16338,7,c	;volatile
 12877                           
 12878                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 12879  0051B0  0E55               	movlw	85
 12880  0051B2  6ED4               	movwf	16340,c	;volatile
 12881                           
 12882                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 12883  0051B4  0EAA               	movlw	170
 12884  0051B6  6ED4               	movwf	16340,c	;volatile
 12885                           
 12886                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 12887  0051B8  90D4               	bcf	16340,0,c	;volatile
 12888                           
 12889                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 12890  0051BA  0138               	movlb	56	; () banked
 12891  0051BC  6B9F               	clrf	159,b	;volatile
 12892                           
 12893                           ; BSR set to: 56
 12894                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 12895  0051BE  6B9E               	clrf	158,b	;volatile
 12896                           
 12897                           ; BSR set to: 56
 12898                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 12899  0051C0  0E08               	movlw	8
 12900  0051C2  6F9D               	movwf	157,b	;volatile
 12901                           
 12902                           ; BSR set to: 56
 12903                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 12904  0051C4  0E55               	movlw	85
 12905  0051C6  6ED4               	movwf	16340,c	;volatile
 12906                           
 12907                           ; BSR set to: 56
 12908                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 12909  0051C8  0EAA               	movlw	170
 12910  0051CA  6ED4               	movwf	16340,c	;volatile
 12911                           
 12912                           ; BSR set to: 56
 12913                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 12914  0051CC  80D4               	bsf	16340,0,c	;volatile
 12915                           
 12916                           ; BSR set to: 56
 12917                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 12918                           ;stkvar	_state @ sp[(-1)+0]
 12919  0051CE  0EFF               	movlw	-1
 12920  0051D0  B0E3               	btfsc	plusw1,0,c
 12921  0051D2  D002               	bra	u3345
 12922  0051D4  9ED2               	bcf	16338,7,c	;volatile
 12923  0051D6  D001               	bra	u3346
 12924  0051D8                     u3345:
 12925  0051D8  8ED2               	bsf	16338,7,c	;volatile
 12926  0051DA                     u3346:
 12927                           
 12928                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 12929  0051DA  0139               	movlb	57	; () banked
 12930  0051DC  8782               	bsf	130,3,b	;volatile
 12931                           
 12932                           ; BSR set to: 57
 12933                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 12934  0051DE  8382               	bsf	130,1,b	;volatile
 12935                           
 12936                           ; BSR set to: 57
 12937                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 12938  0051E0  8182               	bsf	130,0,b	;volatile
 12939                           
 12940                           ; BSR set to: 57
 12941                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 12942  0051E2  8582               	bsf	130,2,b	;volatile
 12943                           
 12944                           ; BSR set to: 57
 12945                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 12946  0051E4  8786               	bsf	134,3,b	;volatile
 12947                           
 12948                           ; BSR set to: 57
 12949                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 12950  0051E6  8586               	bsf	134,2,b	;volatile
 12951                           
 12952                           ; BSR set to: 57
 12953                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 12954  0051E8  8983               	bsf	131,4,b	;volatile
 12955                           
 12956                           ; BSR set to: 57
 12957                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 12958  0051EA  8783               	bsf	131,3,b	;volatile
 12959                           
 12960                           ; BSR set to: 57
 12961                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 12962  0051EC  8181               	bsf	129,0,b	;volatile
 12963                           
 12964                           ; BSR set to: 57
 12965                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 12966  0051EE  8185               	bsf	133,0,b	;volatile
 12967                           
 12968                           ; BSR set to: 57
 12969                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 12970  0051F0  8B87               	bsf	135,5,b	;volatile
 12971                           
 12972                           ; BSR set to: 57
 12973                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 12974  0051F2  8189               	bsf	137,0,b	;volatile
 12975                           
 12976                           ; BSR set to: 57
 12977                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 12978  0051F4  8D88               	bsf	136,6,b	;volatile
 12979                           
 12980                           ; BSR set to: 57
 12981                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 12982  0051F6  8581               	bsf	129,2,b	;volatile
 12983                           
 12984                           ; BSR set to: 57
 12985                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 12986  0051F8  52E5               	movf	postdec1,f,c
 12987  0051FA  0012               	return		;funcret
 12988  0051FC                     __end_of_INTERRUPT_Initialize:
 12989                           	opt callstack 0
 12990                           
 12991 ;; *************** function _EXT_INT_Initialize *****************
 12992 ;; Defined at:
 12993 ;;		line 114 in file "mcc_generated_files/ext_int.c"
 12994 ;; Parameters:    Size  Location     Type
 12995 ;;		None
 12996 ;; Auto vars:     Size  Location     Type
 12997 ;;		None
 12998 ;; Return value:  Size  Location     Type
 12999 ;;                  1  [STACK] void 
 13000 ;; Registers used:
 13001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13002 ;; Tracked objects:
 13003 ;;		On entry : 3F/3F
 13004 ;;		On exit  : 3F/39
 13005 ;;		Unchanged: 0/0
 13006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13011 ;;Total ram usage:        0 bytes
 13012 ;; Hardware stack levels used:    1
 13013 ;; Hardware stack levels required when called:    4
 13014 ;; This function calls:
 13015 ;;		_INT0_SetInterruptHandler
 13016 ;;		_INT1_SetInterruptHandler
 13017 ;;		_INT2_SetInterruptHandler
 13018 ;; This function is called by:
 13019 ;;		_SYSTEM_Initialize
 13020 ;; This function uses a reentrant model
 13021 ;;
 13022                           
 13023                           	psect	text71
 13024  00541E                     __ptext71:
 13025                           	opt callstack 0
 13026  00541E                     _EXT_INT_Initialize:
 13027                           	opt callstack 25
 13028                           
 13029                           ;mcc_generated_files/ext_int.c: 119:     (PIR1bits.INT0IF = 0);
 13030                           
 13031                           ; BSR set to: 57
 13032                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13033                           ;incstack = 0
 13034  00541E  0139               	movlb	57	; () banked
 13035  005420  91A1               	bcf	161,0,b	;volatile
 13036                           
 13037                           ;mcc_generated_files/ext_int.c: 120:     (INTCON0bits.INT0EDG = 0);
 13038  005422  90D2               	bcf	16338,0,c	;volatile
 13039                           
 13040                           ; BSR set to: 57
 13041                           ;mcc_generated_files/ext_int.c: 122:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
 13042  005424  0EA6               	movlw	low _INT0_DefaultInterruptHandler
 13043  005426  6EE6               	movwf	postinc1,c
 13044  005428  0E5E               	movlw	high _INT0_DefaultInterruptHandler
 13045  00542A  6EE6               	movwf	postinc1,c
 13046  00542C  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 13047  00542E  6EE6               	movwf	postinc1,c
 13048  005430  EC6F  F02D         	call	_INT0_SetInterruptHandler	;wreg free
 13049                           
 13050                           ;mcc_generated_files/ext_int.c: 123:     (PIE1bits.INT0IE = 1);
 13051  005434  0139               	movlb	57	; () banked
 13052  005436  8191               	bsf	145,0,b	;volatile
 13053                           
 13054                           ; BSR set to: 57
 13055                           ;mcc_generated_files/ext_int.c: 128:     (PIR5bits.INT1IF = 0);
 13056  005438  91A5               	bcf	165,0,b	;volatile
 13057                           
 13058                           ; BSR set to: 57
 13059                           ;mcc_generated_files/ext_int.c: 129:     (INTCON0bits.INT1EDG = 0);
 13060  00543A  92D2               	bcf	16338,1,c	;volatile
 13061                           
 13062                           ;mcc_generated_files/ext_int.c: 131:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
 13063  00543C  0EA8               	movlw	low _INT1_DefaultInterruptHandler
 13064  00543E  6EE6               	movwf	postinc1,c
 13065  005440  0E5E               	movlw	high _INT1_DefaultInterruptHandler
 13066  005442  6EE6               	movwf	postinc1,c
 13067  005444  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 13068  005446  6EE6               	movwf	postinc1,c
 13069  005448  EC5B  F02D         	call	_INT1_SetInterruptHandler	;wreg free
 13070                           
 13071                           ;mcc_generated_files/ext_int.c: 132:     (PIE5bits.INT1IE = 1);
 13072  00544C  0139               	movlb	57	; () banked
 13073  00544E  8195               	bsf	149,0,b	;volatile
 13074                           
 13075                           ; BSR set to: 57
 13076                           ;mcc_generated_files/ext_int.c: 137:     (PIR7bits.INT2IF = 0);
 13077  005450  9BA7               	bcf	167,5,b	;volatile
 13078                           
 13079                           ; BSR set to: 57
 13080                           ;mcc_generated_files/ext_int.c: 138:     (INTCON0bits.INT2EDG = 0);
 13081  005452  94D2               	bcf	16338,2,c	;volatile
 13082                           
 13083                           ;mcc_generated_files/ext_int.c: 140:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
 13084  005454  0EAA               	movlw	low _INT2_DefaultInterruptHandler
 13085  005456  6EE6               	movwf	postinc1,c
 13086  005458  0E5E               	movlw	high _INT2_DefaultInterruptHandler
 13087  00545A  6EE6               	movwf	postinc1,c
 13088  00545C  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 13089  00545E  6EE6               	movwf	postinc1,c
 13090  005460  EC47  F02D         	call	_INT2_SetInterruptHandler	;wreg free
 13091                           
 13092                           ;mcc_generated_files/ext_int.c: 141:     (PIE7bits.INT2IE = 1);
 13093  005464  0139               	movlb	57	; () banked
 13094  005466  8B97               	bsf	151,5,b	;volatile
 13095                           
 13096                           ; BSR set to: 57
 13097                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13098  005468  0012               	return		;funcret
 13099  00546A                     __end_of_EXT_INT_Initialize:
 13100                           	opt callstack 0
 13101                           
 13102 ;; *************** function _INT2_SetInterruptHandler *****************
 13103 ;; Defined at:
 13104 ;;		line 105 in file "mcc_generated_files/ext_int.c"
 13105 ;; Parameters:    Size  Location     Type
 13106 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13107 ;;		 -> INT2_DefaultInterruptHandler(1), 
 13108 ;; Auto vars:     Size  Location     Type
 13109 ;;		None
 13110 ;; Return value:  Size  Location     Type
 13111 ;;                  1  [STACK] void 
 13112 ;; Registers used:
 13113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13114 ;; Tracked objects:
 13115 ;;		On entry : 3F/39
 13116 ;;		On exit  : 0/0
 13117 ;;		Unchanged: 0/0
 13118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13123 ;;Total ram usage:        0 bytes
 13124 ;; Hardware stack levels used:    1
 13125 ;; Hardware stack levels required when called:    3
 13126 ;; This function calls:
 13127 ;;		Nothing
 13128 ;; This function is called by:
 13129 ;;		_EXT_INT_Initialize
 13130 ;; This function uses a reentrant model
 13131 ;;
 13132                           
 13133                           	psect	text72
 13134  005A8E                     __ptext72:
 13135                           	opt callstack 0
 13136  005A8E                     _INT2_SetInterruptHandler:
 13137                           	opt callstack 25
 13138                           
 13139                           ;mcc_generated_files/ext_int.c: 106:     INT2_InterruptHandler = InterruptHandler;
 13140                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13141                           
 13142                           ; BSR set to: 57
 13143                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13144                           ;incstack = 0
 13145  005A8E  50E1               	movf	fsr1l,w,c
 13146  005A90  0FFD               	addlw	-3
 13147  005A92  6ED9               	movwf	fsr2l,c
 13148  005A94  50E2               	movf	fsr1h,w,c
 13149  005A96  6EDA               	movwf	fsr2h,c
 13150  005A98  0EFF               	movlw	255
 13151  005A9A  22DA               	addwfc	fsr2h,f,c
 13152  005A9C  006F FF78  F019    	movff	postinc2,_INT2_InterruptHandler
 13153  005AA2  006F FF78  F01A    	movff	postinc2,_INT2_InterruptHandler+1
 13154  005AA8  006F FF74  F01B    	movff	postdec2,_INT2_InterruptHandler+2
 13155                           
 13156                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13157  005AAE  52E5               	movf	postdec1,f,c
 13158  005AB0  52E5               	movf	postdec1,f,c
 13159  005AB2  52E5               	movf	postdec1,f,c
 13160  005AB4  0012               	return		;funcret
 13161  005AB6                     __end_of_INT2_SetInterruptHandler:
 13162                           	opt callstack 0
 13163                           
 13164 ;; *************** function _INT1_SetInterruptHandler *****************
 13165 ;; Defined at:
 13166 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 13167 ;; Parameters:    Size  Location     Type
 13168 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13169 ;;		 -> INT1_DefaultInterruptHandler(1), 
 13170 ;; Auto vars:     Size  Location     Type
 13171 ;;		None
 13172 ;; Return value:  Size  Location     Type
 13173 ;;                  1  [STACK] void 
 13174 ;; Registers used:
 13175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13176 ;; Tracked objects:
 13177 ;;		On entry : 3F/39
 13178 ;;		On exit  : 0/0
 13179 ;;		Unchanged: 0/0
 13180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13185 ;;Total ram usage:        0 bytes
 13186 ;; Hardware stack levels used:    1
 13187 ;; Hardware stack levels required when called:    3
 13188 ;; This function calls:
 13189 ;;		Nothing
 13190 ;; This function is called by:
 13191 ;;		_EXT_INT_Initialize
 13192 ;; This function uses a reentrant model
 13193 ;;
 13194                           
 13195                           	psect	text73
 13196  005AB6                     __ptext73:
 13197                           	opt callstack 0
 13198  005AB6                     _INT1_SetInterruptHandler:
 13199                           	opt callstack 25
 13200                           
 13201                           ;mcc_generated_files/ext_int.c: 80:     INT1_InterruptHandler = InterruptHandler;
 13202                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13203                           
 13204                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13205                           ;incstack = 0
 13206  005AB6  50E1               	movf	fsr1l,w,c
 13207  005AB8  0FFD               	addlw	-3
 13208  005ABA  6ED9               	movwf	fsr2l,c
 13209  005ABC  50E2               	movf	fsr1h,w,c
 13210  005ABE  6EDA               	movwf	fsr2h,c
 13211  005AC0  0EFF               	movlw	255
 13212  005AC2  22DA               	addwfc	fsr2h,f,c
 13213  005AC4  006F FF78  F01C    	movff	postinc2,_INT1_InterruptHandler
 13214  005ACA  006F FF78  F01D    	movff	postinc2,_INT1_InterruptHandler+1
 13215  005AD0  006F FF74  F01E    	movff	postdec2,_INT1_InterruptHandler+2
 13216                           
 13217                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13218  005AD6  52E5               	movf	postdec1,f,c
 13219  005AD8  52E5               	movf	postdec1,f,c
 13220  005ADA  52E5               	movf	postdec1,f,c
 13221  005ADC  0012               	return		;funcret
 13222  005ADE                     __end_of_INT1_SetInterruptHandler:
 13223                           	opt callstack 0
 13224                           
 13225 ;; *************** function _INT0_SetInterruptHandler *****************
 13226 ;; Defined at:
 13227 ;;		line 53 in file "mcc_generated_files/ext_int.c"
 13228 ;; Parameters:    Size  Location     Type
 13229 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13230 ;;		 -> INT0_DefaultInterruptHandler(1), 
 13231 ;; Auto vars:     Size  Location     Type
 13232 ;;		None
 13233 ;; Return value:  Size  Location     Type
 13234 ;;                  1  [STACK] void 
 13235 ;; Registers used:
 13236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13237 ;; Tracked objects:
 13238 ;;		On entry : 3F/39
 13239 ;;		On exit  : 0/0
 13240 ;;		Unchanged: 0/0
 13241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13246 ;;Total ram usage:        0 bytes
 13247 ;; Hardware stack levels used:    1
 13248 ;; Hardware stack levels required when called:    3
 13249 ;; This function calls:
 13250 ;;		Nothing
 13251 ;; This function is called by:
 13252 ;;		_EXT_INT_Initialize
 13253 ;; This function uses a reentrant model
 13254 ;;
 13255                           
 13256                           	psect	text74
 13257  005ADE                     __ptext74:
 13258                           	opt callstack 0
 13259  005ADE                     _INT0_SetInterruptHandler:
 13260                           	opt callstack 25
 13261                           
 13262                           ;mcc_generated_files/ext_int.c: 54:     INT0_InterruptHandler = InterruptHandler;
 13263                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13264                           
 13265                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13266                           ;incstack = 0
 13267  005ADE  50E1               	movf	fsr1l,w,c
 13268  005AE0  0FFD               	addlw	-3
 13269  005AE2  6ED9               	movwf	fsr2l,c
 13270  005AE4  50E2               	movf	fsr1h,w,c
 13271  005AE6  6EDA               	movwf	fsr2h,c
 13272  005AE8  0EFF               	movlw	255
 13273  005AEA  22DA               	addwfc	fsr2h,f,c
 13274  005AEC  006F FF78  F01F    	movff	postinc2,_INT0_InterruptHandler
 13275  005AF2  006F FF78  F020    	movff	postinc2,_INT0_InterruptHandler+1
 13276  005AF8  006F FF74  F021    	movff	postdec2,_INT0_InterruptHandler+2
 13277                           
 13278                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13279  005AFE  52E5               	movf	postdec1,f,c
 13280  005B00  52E5               	movf	postdec1,f,c
 13281  005B02  52E5               	movf	postdec1,f,c
 13282  005B04  0012               	return		;funcret
 13283  005B06                     __end_of_INT0_SetInterruptHandler:
 13284                           	opt callstack 0
 13285                           
 13286 ;; *************** function _DSM_Initialize *****************
 13287 ;; Defined at:
 13288 ;;		line 58 in file "mcc_generated_files/dsm.c"
 13289 ;; Parameters:    Size  Location     Type
 13290 ;;		None
 13291 ;; Auto vars:     Size  Location     Type
 13292 ;;		None
 13293 ;; Return value:  Size  Location     Type
 13294 ;;                  1  [STACK] void 
 13295 ;; Registers used:
 13296 ;;		wreg, status,2
 13297 ;; Tracked objects:
 13298 ;;		On entry : 0/3C
 13299 ;;		On exit  : 3F/3C
 13300 ;;		Unchanged: 0/0
 13301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13306 ;;Total ram usage:        0 bytes
 13307 ;; Hardware stack levels used:    1
 13308 ;; Hardware stack levels required when called:    3
 13309 ;; This function calls:
 13310 ;;		Nothing
 13311 ;; This function is called by:
 13312 ;;		_SYSTEM_Initialize
 13313 ;; This function uses a reentrant model
 13314 ;;
 13315                           
 13316                           	psect	text75
 13317  005D52                     __ptext75:
 13318                           	opt callstack 0
 13319  005D52                     _DSM_Initialize:
 13320                           	opt callstack 26
 13321                           
 13322                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 13323                           
 13324                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13325                           ;incstack = 0
 13326  005D52  013C               	movlb	60	; () banked
 13327  005D54  99FA               	bcf	250,4,b	;volatile
 13328                           
 13329                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 13330  005D56  81FB               	bsf	251,0,b	;volatile
 13331                           
 13332                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 13333  005D58  93FB               	bcf	251,1,b	;volatile
 13334                           
 13335                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 13336  005D5A  89FB               	bsf	251,4,b	;volatile
 13337                           
 13338                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 13339  005D5C  9BFB               	bcf	251,5,b	;volatile
 13340                           
 13341                           ; BSR set to: 60
 13342                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 13343  005D5E  0E13               	movlw	19
 13344  005D60  6FFC               	movwf	252,b	;volatile
 13345                           
 13346                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 13347  005D62  0E0E               	movlw	14
 13348  005D64  6FFE               	movwf	254,b	;volatile
 13349                           
 13350                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 13351  005D66  0E04               	movlw	4
 13352  005D68  6FFD               	movwf	253,b	;volatile
 13353                           
 13354                           ; BSR set to: 60
 13355                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 13356  005D6A  8FFA               	bsf	250,7,b	;volatile
 13357                           
 13358                           ; BSR set to: 60
 13359                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 13360  005D6C  0012               	return		;funcret
 13361  005D6E                     __end_of_DSM_Initialize:
 13362                           	opt callstack 0
 13363                           
 13364 ;; *************** function _DMA1_Initialize *****************
 13365 ;; Defined at:
 13366 ;;		line 86 in file "mcc_generated_files/dma1.c"
 13367 ;; Parameters:    Size  Location     Type
 13368 ;;		None
 13369 ;; Auto vars:     Size  Location     Type
 13370 ;;		None
 13371 ;; Return value:  Size  Location     Type
 13372 ;;                  1  [STACK] void 
 13373 ;; Registers used:
 13374 ;;		wreg, status,2
 13375 ;; Tracked objects:
 13376 ;;		On entry : 3F/3D
 13377 ;;		On exit  : 3F/3B
 13378 ;;		Unchanged: 0/0
 13379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13384 ;;Total ram usage:        0 bytes
 13385 ;; Hardware stack levels used:    1
 13386 ;; Hardware stack levels required when called:    3
 13387 ;; This function calls:
 13388 ;;		Nothing
 13389 ;; This function is called by:
 13390 ;;		_SYSTEM_Initialize
 13391 ;; This function uses a reentrant model
 13392 ;;
 13393                           
 13394                           	psect	text76
 13395  00512C                     __ptext76:
 13396                           	opt callstack 0
 13397  00512C                     _DMA1_Initialize:
 13398                           	opt callstack 26
 13399                           
 13400                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 13401                           
 13402                           ; BSR set to: 60
 13403                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13404                           ;incstack = 0
 13405  00512C  0E00               	movlw	0
 13406  00512E  013B               	movlb	59	; () banked
 13407  005130  6FF9               	movwf	249,b	;volatile
 13408  005132  0E10               	movlw	16
 13409  005134  6FFA               	movwf	250,b	;volatile
 13410  005136  0E00               	movlw	0
 13411  005138  6FFB               	movwf	251,b	;volatile
 13412                           
 13413                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 13414  00513A  0E3D               	movlw	61
 13415  00513C  6FF1               	movwf	241,b	;volatile
 13416  00513E  0E11               	movlw	17
 13417  005140  6FF0               	movwf	240,b	;volatile
 13418                           
 13419                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 13420  005142  0E03               	movlw	3
 13421  005144  6FFD               	movwf	253,b	;volatile
 13422                           
 13423                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 13424  005146  0E00               	movlw	0
 13425  005148  6FF8               	movwf	248,b	;volatile
 13426  00514A  0E01               	movlw	1
 13427  00514C  6FF7               	movwf	247,b	;volatile
 13428                           
 13429                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 13430  00514E  0E00               	movlw	0
 13431  005150  6FEF               	movwf	239,b	;volatile
 13432  005152  0E01               	movlw	1
 13433  005154  6FEE               	movwf	238,b	;volatile
 13434                           
 13435                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 13436  005156  0E15               	movlw	21
 13437  005158  6FFF               	movwf	255,b	;volatile
 13438                           
 13439                           ; BSR set to: 59
 13440                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 13441  00515A  6BFE               	clrf	254,b	;volatile
 13442                           
 13443                           ; BSR set to: 59
 13444                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 13445  00515C  0139               	movlb	57	; () banked
 13446  00515E  93A2               	bcf	162,1,b	;volatile
 13447                           
 13448                           ; BSR set to: 57
 13449                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 13450  005160  91A2               	bcf	162,0,b	;volatile
 13451                           
 13452                           ; BSR set to: 57
 13453                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 13454  005162  97A2               	bcf	162,3,b	;volatile
 13455                           
 13456                           ; BSR set to: 57
 13457                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 13458  005164  95A2               	bcf	162,2,b	;volatile
 13459                           
 13460                           ; BSR set to: 57
 13461                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 13462  005166  8392               	bsf	146,1,b	;volatile
 13463                           
 13464                           ; BSR set to: 57
 13465                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 13466  005168  8192               	bsf	146,0,b	;volatile
 13467                           
 13468                           ; BSR set to: 57
 13469                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 13470  00516A  8792               	bsf	146,3,b	;volatile
 13471                           
 13472                           ; BSR set to: 57
 13473                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 13474  00516C  8592               	bsf	146,2,b	;volatile
 13475                           
 13476                           ; BSR set to: 57
 13477                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 13478  00516E  6BF1               	clrf	241,b	;volatile
 13479                           
 13480                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 13481  005170  0E01               	movlw	1
 13482  005172  6FF2               	movwf	242,b	;volatile
 13483                           
 13484                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 13485  005174  0E04               	movlw	4
 13486  005176  6FF3               	movwf	243,b	;volatile
 13487                           
 13488                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 13489  005178  0E02               	movlw	2
 13490  00517A  6FF4               	movwf	244,b	;volatile
 13491                           
 13492                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 13493  00517C  0E03               	movlw	3
 13494  00517E  6FF7               	movwf	247,b	;volatile
 13495  005180  9ED2               	bcf	16338,7,c	;# 
 13496  005182  0139               	banksel	14831	;# 
 13497  005184  0E55               	movlw	85	;# 
 13498  005186  6FEF               	movwf	14831,b	;# 
 13499  005188  0EAA               	movlw	170	;# 
 13500  00518A  6FEF               	movwf	14831,b	;# 
 13501  00518C  81EF               	bsf	14831,0,b	;# 
 13502  00518E  8ED2               	bsf	16338,7,c	;# 
 13503                           
 13504                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 13505  005190  013B               	movlb	59	; () banked
 13506  005192  6BFC               	clrf	252,b	;volatile
 13507                           
 13508                           ; BSR set to: 59
 13509                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13510  005194  0012               	return		;funcret
 13511  005196                     __end_of_DMA1_Initialize:
 13512                           	opt callstack 0
 13513                           
 13514 ;; *************** function _CLKREF_Initialize *****************
 13515 ;; Defined at:
 13516 ;;		line 58 in file "mcc_generated_files/clkref.c"
 13517 ;; Parameters:    Size  Location     Type
 13518 ;;		None
 13519 ;; Auto vars:     Size  Location     Type
 13520 ;;		None
 13521 ;; Return value:  Size  Location     Type
 13522 ;;                  1  [STACK] void 
 13523 ;; Registers used:
 13524 ;;		wreg, status,2
 13525 ;; Tracked objects:
 13526 ;;		On entry : 3F/3B
 13527 ;;		On exit  : 3F/3C
 13528 ;;		Unchanged: 0/0
 13529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13534 ;;Total ram usage:        0 bytes
 13535 ;; Hardware stack levels used:    1
 13536 ;; Hardware stack levels required when called:    3
 13537 ;; This function calls:
 13538 ;;		Nothing
 13539 ;; This function is called by:
 13540 ;;		_SYSTEM_Initialize
 13541 ;; This function uses a reentrant model
 13542 ;;
 13543                           
 13544                           	psect	text77
 13545  005E58                     __ptext77:
 13546                           	opt callstack 0
 13547  005E58                     _CLKREF_Initialize:
 13548                           	opt callstack 26
 13549                           
 13550                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 13551                           
 13552                           ; BSR set to: 59
 13553                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13554                           ;incstack = 0
 13555  005E58  013C               	movlb	60	; () banked
 13556  005E5A  6BE6               	clrf	230,b	;volatile
 13557                           
 13558                           ; BSR set to: 60
 13559                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 13560  005E5C  0E94               	movlw	148
 13561  005E5E  6FE5               	movwf	229,b	;volatile
 13562                           
 13563                           ; BSR set to: 60
 13564                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13565  005E60  0012               	return		;funcret
 13566  005E62                     __end_of_CLKREF_Initialize:
 13567                           	opt callstack 0
 13568                           
 13569 ;; *************** function _CLC1_Initialize *****************
 13570 ;; Defined at:
 13571 ;;		line 58 in file "mcc_generated_files/clc1.c"
 13572 ;; Parameters:    Size  Location     Type
 13573 ;;		None
 13574 ;; Auto vars:     Size  Location     Type
 13575 ;;		None
 13576 ;; Return value:  Size  Location     Type
 13577 ;;                  1  [STACK] void 
 13578 ;; Registers used:
 13579 ;;		wreg, status,2
 13580 ;; Tracked objects:
 13581 ;;		On entry : 0/39
 13582 ;;		On exit  : 3F/3C
 13583 ;;		Unchanged: 0/0
 13584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13589 ;;Total ram usage:        0 bytes
 13590 ;; Hardware stack levels used:    1
 13591 ;; Hardware stack levels required when called:    3
 13592 ;; This function calls:
 13593 ;;		Nothing
 13594 ;; This function is called by:
 13595 ;;		_SYSTEM_Initialize
 13596 ;; This function uses a reentrant model
 13597 ;;
 13598                           
 13599                           	psect	text78
 13600  005BF0                     __ptext78:
 13601                           	opt callstack 0
 13602  005BF0                     _CLC1_Initialize:
 13603                           	opt callstack 26
 13604                           
 13605                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 13606                           
 13607                           ; BSR set to: 60
 13608                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13609                           ;incstack = 0
 13610  005BF0  013C               	movlb	60	; () banked
 13611  005BF2  6B75               	clrf	117,b	;volatile
 13612                           
 13613                           ; BSR set to: 60
 13614                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 13615  005BF4  0E04               	movlw	4
 13616  005BF6  6F76               	movwf	118,b	;volatile
 13617                           
 13618                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 13619  005BF8  0E04               	movlw	4
 13620  005BFA  6F77               	movwf	119,b	;volatile
 13621                           
 13622                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 13623  005BFC  0E04               	movlw	4
 13624  005BFE  6F78               	movwf	120,b	;volatile
 13625                           
 13626                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 13627  005C00  0E04               	movlw	4
 13628  005C02  6F79               	movwf	121,b	;volatile
 13629                           
 13630                           ; BSR set to: 60
 13631                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 13632  005C04  6B7A               	clrf	122,b	;volatile
 13633                           
 13634                           ; BSR set to: 60
 13635                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 13636  005C06  6B7B               	clrf	123,b	;volatile
 13637                           
 13638                           ; BSR set to: 60
 13639                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 13640  005C08  6B7C               	clrf	124,b	;volatile
 13641                           
 13642                           ; BSR set to: 60
 13643                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 13644  005C0A  6B7D               	clrf	125,b	;volatile
 13645                           
 13646                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 13647  005C0C  0E81               	movlw	129
 13648  005C0E  6F74               	movwf	116,b	;volatile
 13649                           
 13650                           ; BSR set to: 60
 13651                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13652  005C10  0012               	return		;funcret
 13653  005C12                     __end_of_CLC1_Initialize:
 13654                           	opt callstack 0
 13655                           
 13656 ;; *************** function _ADCC_Initialize *****************
 13657 ;; Defined at:
 13658 ;;		line 64 in file "mcc_generated_files/adcc.c"
 13659 ;; Parameters:    Size  Location     Type
 13660 ;;		None
 13661 ;; Auto vars:     Size  Location     Type
 13662 ;;		None
 13663 ;; Return value:  Size  Location     Type
 13664 ;;                  1  [STACK] void 
 13665 ;; Registers used:
 13666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13667 ;; Tracked objects:
 13668 ;;		On entry : 3F/39
 13669 ;;		On exit  : 0/0
 13670 ;;		Unchanged: 0/0
 13671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13676 ;;Total ram usage:        0 bytes
 13677 ;; Hardware stack levels used:    1
 13678 ;; Hardware stack levels required when called:    4
 13679 ;; This function calls:
 13680 ;;		_ADCC_SetADIInterruptHandler
 13681 ;; This function is called by:
 13682 ;;		_SYSTEM_Initialize
 13683 ;; This function uses a reentrant model
 13684 ;;
 13685                           
 13686                           	psect	text79
 13687  00546A                     __ptext79:
 13688                           	opt callstack 0
 13689  00546A                     _ADCC_Initialize:
 13690                           	opt callstack 25
 13691                           
 13692                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 13693                           
 13694                           ; BSR set to: 60
 13695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13696                           ;incstack = 0
 13697  00546A  013E               	movlb	62	; () banked
 13698  00546C  6BDE               	clrf	222,b	;volatile
 13699                           
 13700                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 13701  00546E  6BDF               	clrf	223,b	;volatile
 13702                           
 13703                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 13704  005470  6BE0               	clrf	224,b	;volatile
 13705                           
 13706                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 13707  005472  6BE1               	clrf	225,b	;volatile
 13708                           
 13709                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 13710  005474  6BE4               	clrf	228,b	;volatile
 13711                           
 13712                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 13713  005476  6BE5               	clrf	229,b	;volatile
 13714                           
 13715                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 13716  005478  6BEA               	clrf	234,b	;volatile
 13717                           
 13718                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 13719  00547A  6BEC               	clrf	236,b	;volatile
 13720                           
 13721                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 13722  00547C  6BF1               	clrf	241,b	;volatile
 13723                           
 13724                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 13725  00547E  6BF3               	clrf	243,b	;volatile
 13726                           
 13727                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 13728  005480  6BF4               	clrf	244,b	;volatile
 13729                           
 13730                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 13731  005482  6BF5               	clrf	245,b	;volatile
 13732                           
 13733                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 13734  005484  6BF6               	clrf	246,b	;volatile
 13735                           
 13736                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 13737  005486  6BF7               	clrf	247,b	;volatile
 13738                           
 13739                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 13740  005488  6BF9               	clrf	249,b	;volatile
 13741                           
 13742                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 13743  00548A  6BFA               	clrf	250,b	;volatile
 13744                           
 13745                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 13746  00548C  6BFB               	clrf	251,b	;volatile
 13747                           
 13748                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 13749  00548E  6BFC               	clrf	252,b	;volatile
 13750                           
 13751                           ; BSR set to: 62
 13752                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 13753  005490  0E02               	movlw	2
 13754  005492  6FFD               	movwf	253,b	;volatile
 13755                           
 13756                           ; BSR set to: 62
 13757                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 13758  005494  6BFE               	clrf	254,b	;volatile
 13759                           
 13760                           ; BSR set to: 62
 13761                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 13762  005496  6BFF               	clrf	255,b	;volatile
 13763                           
 13764                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 13765  005498  0E94               	movlw	148
 13766  00549A  6FF8               	movwf	248,b	;volatile
 13767                           
 13768                           ; BSR set to: 62
 13769                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 13770  00549C  0139               	movlb	57	; () banked
 13771  00549E  95A1               	bcf	161,2,b	;volatile
 13772                           
 13773                           ; BSR set to: 57
 13774                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 13775  0054A0  8591               	bsf	145,2,b	;volatile
 13776                           
 13777                           ; BSR set to: 57
 13778                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 13779  0054A2  0EAC               	movlw	low _ADCC_DefaultInterruptHandler
 13780  0054A4  6EE6               	movwf	postinc1,c
 13781  0054A6  0E5E               	movlw	high _ADCC_DefaultInterruptHandler
 13782  0054A8  6EE6               	movwf	postinc1,c
 13783  0054AA  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 13784  0054AC  6EE6               	movwf	postinc1,c
 13785  0054AE  EC83  F02D         	call	_ADCC_SetADIInterruptHandler	;wreg free
 13786                           
 13787                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13788  0054B2  0012               	return		;funcret
 13789  0054B4                     __end_of_ADCC_Initialize:
 13790                           	opt callstack 0
 13791                           
 13792 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 13793 ;; Defined at:
 13794 ;;		line 316 in file "mcc_generated_files/adcc.c"
 13795 ;; Parameters:    Size  Location     Type
 13796 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13797 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 13798 ;; Auto vars:     Size  Location     Type
 13799 ;;		None
 13800 ;; Return value:  Size  Location     Type
 13801 ;;                  1  [STACK] void 
 13802 ;; Registers used:
 13803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13804 ;; Tracked objects:
 13805 ;;		On entry : 3F/39
 13806 ;;		On exit  : 0/0
 13807 ;;		Unchanged: 0/0
 13808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13813 ;;Total ram usage:        0 bytes
 13814 ;; Hardware stack levels used:    1
 13815 ;; Hardware stack levels required when called:    3
 13816 ;; This function calls:
 13817 ;;		Nothing
 13818 ;; This function is called by:
 13819 ;;		_ADCC_Initialize
 13820 ;; This function uses a reentrant model
 13821 ;;
 13822                           
 13823                           	psect	text80
 13824  005B06                     __ptext80:
 13825                           	opt callstack 0
 13826  005B06                     _ADCC_SetADIInterruptHandler:
 13827                           	opt callstack 25
 13828                           
 13829                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 13830                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13831                           
 13832                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13833                           ;incstack = 0
 13834  005B06  50E1               	movf	fsr1l,w,c
 13835  005B08  0FFD               	addlw	-3
 13836  005B0A  6ED9               	movwf	fsr2l,c
 13837  005B0C  50E2               	movf	fsr1h,w,c
 13838  005B0E  6EDA               	movwf	fsr2h,c
 13839  005B10  0EFF               	movlw	255
 13840  005B12  22DA               	addwfc	fsr2h,f,c
 13841  005B14  006F FF78  F00A    	movff	postinc2,_ADCC_ADI_InterruptHandler
 13842  005B1A  006F FF78  F00B    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 13843  005B20  006F FF74  F00C    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 13844                           
 13845                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13846  005B26  52E5               	movf	postdec1,f,c
 13847  005B28  52E5               	movf	postdec1,f,c
 13848  005B2A  52E5               	movf	postdec1,f,c
 13849  005B2C  0012               	return		;funcret
 13850  005B2E                     __end_of_ADCC_SetADIInterruptHandler:
 13851                           	opt callstack 0
 13852                           
 13853 ;; *************** function _INT0_ISR *****************
 13854 ;; Defined at:
 13855 ;;		line 35 in file "mcc_generated_files/ext_int.c"
 13856 ;; Parameters:    Size  Location     Type
 13857 ;;		None
 13858 ;; Auto vars:     Size  Location     Type
 13859 ;;		None
 13860 ;; Return value:  Size  Location     Type
 13861 ;;                  1    wreg      void 
 13862 ;; Registers used:
 13863 ;;		wreg, status,2, status,0, pclath, tosl
 13864 ;; Tracked objects:
 13865 ;;		On entry : 0/0
 13866 ;;		On exit  : 0/0
 13867 ;;		Unchanged: 0/0
 13868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13873 ;;Total ram usage:        0 bytes
 13874 ;; Hardware stack levels used:    1
 13875 ;; Hardware stack levels required when called:    2
 13876 ;; This function calls:
 13877 ;;		_INT0_CallBack
 13878 ;; This function is called by:
 13879 ;;		Interrupt level 2
 13880 ;; This function uses a non-reentrant model
 13881 ;;
 13882                           
 13883                           	psect	text81
 13884  005E0C                     __ptext81:
 13885                           	opt callstack 0
 13886  005E0C                     _INT0_ISR:
 13887                           	opt callstack 17
 13888                           
 13889                           ;incstack = 0
 13890  005E0C  EE13  F150         	lfsr	1,___inthi_sp
 13891                           
 13892                           ;mcc_generated_files/ext_int.c: 37:     (PIR1bits.INT0IF = 0);
 13893  005E10  0139               	movlb	57	; () banked
 13894  005E12  91A1               	bcf	161,0,b	;volatile
 13895                           
 13896                           ; BSR set to: 57
 13897                           ;mcc_generated_files/ext_int.c: 40:     INT0_CallBack();
 13898  005E14  EC09  F02E         	call	_INT0_CallBack	;wreg free
 13899  005E18  0011               	retfie		f
 13900  005E1A                     __end_of_INT0_ISR:
 13901                           	opt callstack 0
 13902                           
 13903 ;; *************** function _INT0_CallBack *****************
 13904 ;; Defined at:
 13905 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 13906 ;; Parameters:    Size  Location     Type
 13907 ;;		None
 13908 ;; Auto vars:     Size  Location     Type
 13909 ;;		None
 13910 ;; Return value:  Size  Location     Type
 13911 ;;                  1  [STACK] void 
 13912 ;; Registers used:
 13913 ;;		wreg, status,2, status,0, pclath, tosl
 13914 ;; Tracked objects:
 13915 ;;		On entry : 3F/39
 13916 ;;		On exit  : 0/0
 13917 ;;		Unchanged: 0/0
 13918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13923 ;;Total ram usage:        0 bytes
 13924 ;; Hardware stack levels used:    1
 13925 ;; Hardware stack levels required when called:    1
 13926 ;; This function calls:
 13927 ;;		Absolute function
 13928 ;;		_INT0_DefaultInterruptHandler
 13929 ;; This function is called by:
 13930 ;;		_INT0_ISR
 13931 ;; This function uses a reentrant model
 13932 ;;
 13933                           
 13934                           	psect	text82
 13935  005C12                     __ptext82:
 13936                           	opt callstack 0
 13937  005C12                     _INT0_CallBack:
 13938                           	opt callstack 17
 13939                           
 13940                           ;mcc_generated_files/ext_int.c: 47:     if(INT0_InterruptHandler)
 13941                           
 13942                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13943                           ;incstack = 0
 13944  005C12  501F               	movf	_INT0_InterruptHandler,w,c
 13945  005C14  1020               	iorwf	_INT0_InterruptHandler+1,w,c
 13946  005C16  1021               	iorwf	_INT0_InterruptHandler+2,w,c
 13947  005C18  B4D8               	btfsc	status,2,c
 13948  005C1A  0012               	return	
 13949                           
 13950                           ;mcc_generated_files/ext_int.c: 48:     {;mcc_generated_files/ext_int.c: 49:         INT
      +                          0_InterruptHandler();
 13951  005C1C  D801               	call	u149_48
 13952  005C1E  0012               	return	
 13953  005C20                     u149_48:
 13954  005C20  0005               	push	
 13955  005C22  6EFA               	movwf	pclath,c
 13956  005C24  501F               	movf	_INT0_InterruptHandler,w,c
 13957  005C26  6EFD               	movwf	tosl,c
 13958  005C28  5020               	movf	_INT0_InterruptHandler+1,w,c
 13959  005C2A  6EFE               	movwf	tosh,c
 13960  005C2C  5021               	movf	_INT0_InterruptHandler+2,w,c
 13961  005C2E  6EFF               	movwf	tosu,c
 13962  005C30  50FA               	movf	pclath,w,c
 13963  005C32  0012               	return		;indir
 13964  005C34                     __end_of_INT0_CallBack:
 13965                           	opt callstack 0
 13966                           
 13967 ;; *************** function _INT0_DefaultInterruptHandler *****************
 13968 ;; Defined at:
 13969 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 13970 ;; Parameters:    Size  Location     Type
 13971 ;;		None
 13972 ;; Auto vars:     Size  Location     Type
 13973 ;;		None
 13974 ;; Return value:  Size  Location     Type
 13975 ;;                  1  [STACK] void 
 13976 ;; Registers used:
 13977 ;;		None
 13978 ;; Tracked objects:
 13979 ;;		On entry : 0/39
 13980 ;;		On exit  : 0/0
 13981 ;;		Unchanged: 0/0
 13982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13987 ;;Total ram usage:        0 bytes
 13988 ;; Hardware stack levels used:    1
 13989 ;; This function calls:
 13990 ;;		Nothing
 13991 ;; This function is called by:
 13992 ;;		_EXT_INT_Initialize
 13993 ;;		_INT0_CallBack
 13994 ;; This function uses a reentrant model
 13995 ;;
 13996                           
 13997                           	psect	text83
 13998  005EA6                     __ptext83:
 13999                           	opt callstack 0
 14000  005EA6                     _INT0_DefaultInterruptHandler:
 14001                           	opt callstack 17
 14002                           
 14003                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14004                           
 14005                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14006                           ;incstack = 0
 14007  005EA6  0012               	return		;funcret
 14008  005EA8                     __end_of_INT0_DefaultInterruptHandler:
 14009                           	opt callstack 0
 14010                           
 14011 ;; *************** function _INT1_ISR *****************
 14012 ;; Defined at:
 14013 ;;		line 61 in file "mcc_generated_files/ext_int.c"
 14014 ;; Parameters:    Size  Location     Type
 14015 ;;		None
 14016 ;; Auto vars:     Size  Location     Type
 14017 ;;		None
 14018 ;; Return value:  Size  Location     Type
 14019 ;;                  1    wreg      void 
 14020 ;; Registers used:
 14021 ;;		wreg, status,2, status,0, pclath, tosl
 14022 ;; Tracked objects:
 14023 ;;		On entry : 0/0
 14024 ;;		On exit  : 0/0
 14025 ;;		Unchanged: 0/0
 14026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14031 ;;Total ram usage:        0 bytes
 14032 ;; Hardware stack levels used:    1
 14033 ;; Hardware stack levels required when called:    2
 14034 ;; This function calls:
 14035 ;;		_INT1_CallBack
 14036 ;; This function is called by:
 14037 ;;		Interrupt level 2
 14038 ;; This function uses a non-reentrant model
 14039 ;;
 14040                           
 14041                           	psect	text84
 14042  005E1C                     __ptext84:
 14043                           	opt callstack 0
 14044  005E1C                     _INT1_ISR:
 14045                           	opt callstack 17
 14046                           
 14047                           ;incstack = 0
 14048  005E1C  EE13  F150         	lfsr	1,___inthi_sp
 14049                           
 14050                           ;mcc_generated_files/ext_int.c: 63:     (PIR5bits.INT1IF = 0);
 14051  005E20  0139               	movlb	57	; () banked
 14052  005E22  91A5               	bcf	165,0,b	;volatile
 14053                           
 14054                           ; BSR set to: 57
 14055                           ;mcc_generated_files/ext_int.c: 66:     INT1_CallBack();
 14056  005E24  EC1A  F02E         	call	_INT1_CallBack	;wreg free
 14057  005E28  0011               	retfie		f
 14058  005E2A                     __end_of_INT1_ISR:
 14059                           	opt callstack 0
 14060                           
 14061 ;; *************** function _INT1_CallBack *****************
 14062 ;; Defined at:
 14063 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 14064 ;; Parameters:    Size  Location     Type
 14065 ;;		None
 14066 ;; Auto vars:     Size  Location     Type
 14067 ;;		None
 14068 ;; Return value:  Size  Location     Type
 14069 ;;                  1  [STACK] void 
 14070 ;; Registers used:
 14071 ;;		wreg, status,2, status,0, pclath, tosl
 14072 ;; Tracked objects:
 14073 ;;		On entry : 3F/39
 14074 ;;		On exit  : 0/0
 14075 ;;		Unchanged: 0/0
 14076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14081 ;;Total ram usage:        0 bytes
 14082 ;; Hardware stack levels used:    1
 14083 ;; Hardware stack levels required when called:    1
 14084 ;; This function calls:
 14085 ;;		Absolute function
 14086 ;;		_INT1_DefaultInterruptHandler
 14087 ;; This function is called by:
 14088 ;;		_INT1_ISR
 14089 ;; This function uses a reentrant model
 14090 ;;
 14091                           
 14092                           	psect	text85
 14093  005C34                     __ptext85:
 14094                           	opt callstack 0
 14095  005C34                     _INT1_CallBack:
 14096                           	opt callstack 17
 14097                           
 14098                           ;mcc_generated_files/ext_int.c: 73:     if(INT1_InterruptHandler)
 14099                           
 14100                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14101                           ;incstack = 0
 14102  005C34  501C               	movf	_INT1_InterruptHandler,w,c
 14103  005C36  101D               	iorwf	_INT1_InterruptHandler+1,w,c
 14104  005C38  101E               	iorwf	_INT1_InterruptHandler+2,w,c
 14105  005C3A  B4D8               	btfsc	status,2,c
 14106  005C3C  0012               	return	
 14107                           
 14108                           ;mcc_generated_files/ext_int.c: 74:     {;mcc_generated_files/ext_int.c: 75:         INT
      +                          1_InterruptHandler();
 14109  005C3E  D801               	call	u151_48
 14110  005C40  0012               	return	
 14111  005C42                     u151_48:
 14112  005C42  0005               	push	
 14113  005C44  6EFA               	movwf	pclath,c
 14114  005C46  501C               	movf	_INT1_InterruptHandler,w,c
 14115  005C48  6EFD               	movwf	tosl,c
 14116  005C4A  501D               	movf	_INT1_InterruptHandler+1,w,c
 14117  005C4C  6EFE               	movwf	tosh,c
 14118  005C4E  501E               	movf	_INT1_InterruptHandler+2,w,c
 14119  005C50  6EFF               	movwf	tosu,c
 14120  005C52  50FA               	movf	pclath,w,c
 14121  005C54  0012               	return		;indir
 14122  005C56                     __end_of_INT1_CallBack:
 14123                           	opt callstack 0
 14124                           
 14125 ;; *************** function _INT1_DefaultInterruptHandler *****************
 14126 ;; Defined at:
 14127 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 14128 ;; Parameters:    Size  Location     Type
 14129 ;;		None
 14130 ;; Auto vars:     Size  Location     Type
 14131 ;;		None
 14132 ;; Return value:  Size  Location     Type
 14133 ;;                  1  [STACK] void 
 14134 ;; Registers used:
 14135 ;;		None
 14136 ;; Tracked objects:
 14137 ;;		On entry : 0/39
 14138 ;;		On exit  : 0/0
 14139 ;;		Unchanged: 0/0
 14140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14145 ;;Total ram usage:        0 bytes
 14146 ;; Hardware stack levels used:    1
 14147 ;; This function calls:
 14148 ;;		Nothing
 14149 ;; This function is called by:
 14150 ;;		_EXT_INT_Initialize
 14151 ;;		_INT1_CallBack
 14152 ;; This function uses a reentrant model
 14153 ;;
 14154                           
 14155                           	psect	text86
 14156  005EA8                     __ptext86:
 14157                           	opt callstack 0
 14158  005EA8                     _INT1_DefaultInterruptHandler:
 14159                           	opt callstack 17
 14160                           
 14161                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14162                           
 14163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14164                           ;incstack = 0
 14165  005EA8  0012               	return		;funcret
 14166  005EAA                     __end_of_INT1_DefaultInterruptHandler:
 14167                           	opt callstack 0
 14168                           
 14169 ;; *************** function _INT2_ISR *****************
 14170 ;; Defined at:
 14171 ;;		line 87 in file "mcc_generated_files/ext_int.c"
 14172 ;; Parameters:    Size  Location     Type
 14173 ;;		None
 14174 ;; Auto vars:     Size  Location     Type
 14175 ;;		None
 14176 ;; Return value:  Size  Location     Type
 14177 ;;                  1    wreg      void 
 14178 ;; Registers used:
 14179 ;;		wreg, status,2, status,0, pclath, tosl
 14180 ;; Tracked objects:
 14181 ;;		On entry : 0/0
 14182 ;;		On exit  : 0/0
 14183 ;;		Unchanged: 0/0
 14184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14189 ;;Total ram usage:        0 bytes
 14190 ;; Hardware stack levels used:    1
 14191 ;; Hardware stack levels required when called:    2
 14192 ;; This function calls:
 14193 ;;		_INT2_CallBack
 14194 ;; This function is called by:
 14195 ;;		Interrupt level 2
 14196 ;; This function uses a non-reentrant model
 14197 ;;
 14198                           
 14199                           	psect	text87
 14200  005E2C                     __ptext87:
 14201                           	opt callstack 0
 14202  005E2C                     _INT2_ISR:
 14203                           	opt callstack 17
 14204                           
 14205                           ;incstack = 0
 14206  005E2C  EE13  F150         	lfsr	1,___inthi_sp
 14207                           
 14208                           ;mcc_generated_files/ext_int.c: 89:     (PIR7bits.INT2IF = 0);
 14209  005E30  0139               	movlb	57	; () banked
 14210  005E32  9BA7               	bcf	167,5,b	;volatile
 14211                           
 14212                           ; BSR set to: 57
 14213                           ;mcc_generated_files/ext_int.c: 92:     INT2_CallBack();
 14214  005E34  EC2B  F02E         	call	_INT2_CallBack	;wreg free
 14215  005E38  0011               	retfie		f
 14216  005E3A                     __end_of_INT2_ISR:
 14217                           	opt callstack 0
 14218                           
 14219 ;; *************** function _INT2_CallBack *****************
 14220 ;; Defined at:
 14221 ;;		line 96 in file "mcc_generated_files/ext_int.c"
 14222 ;; Parameters:    Size  Location     Type
 14223 ;;		None
 14224 ;; Auto vars:     Size  Location     Type
 14225 ;;		None
 14226 ;; Return value:  Size  Location     Type
 14227 ;;                  1  [STACK] void 
 14228 ;; Registers used:
 14229 ;;		wreg, status,2, status,0, pclath, tosl
 14230 ;; Tracked objects:
 14231 ;;		On entry : 3F/39
 14232 ;;		On exit  : 0/0
 14233 ;;		Unchanged: 0/0
 14234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14239 ;;Total ram usage:        0 bytes
 14240 ;; Hardware stack levels used:    1
 14241 ;; Hardware stack levels required when called:    1
 14242 ;; This function calls:
 14243 ;;		Absolute function
 14244 ;;		_INT2_DefaultInterruptHandler
 14245 ;; This function is called by:
 14246 ;;		_INT2_ISR
 14247 ;; This function uses a reentrant model
 14248 ;;
 14249                           
 14250                           	psect	text88
 14251  005C56                     __ptext88:
 14252                           	opt callstack 0
 14253  005C56                     _INT2_CallBack:
 14254                           	opt callstack 17
 14255                           
 14256                           ;mcc_generated_files/ext_int.c: 99:     if(INT2_InterruptHandler)
 14257                           
 14258                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14259                           ;incstack = 0
 14260  005C56  5019               	movf	_INT2_InterruptHandler,w,c
 14261  005C58  101A               	iorwf	_INT2_InterruptHandler+1,w,c
 14262  005C5A  101B               	iorwf	_INT2_InterruptHandler+2,w,c
 14263  005C5C  B4D8               	btfsc	status,2,c
 14264  005C5E  0012               	return	
 14265                           
 14266                           ;mcc_generated_files/ext_int.c: 100:     {;mcc_generated_files/ext_int.c: 101:         I
      +                          NT2_InterruptHandler();
 14267  005C60  D801               	call	u153_48
 14268  005C62  0012               	return	
 14269  005C64                     u153_48:
 14270  005C64  0005               	push	
 14271  005C66  6EFA               	movwf	pclath,c
 14272  005C68  5019               	movf	_INT2_InterruptHandler,w,c
 14273  005C6A  6EFD               	movwf	tosl,c
 14274  005C6C  501A               	movf	_INT2_InterruptHandler+1,w,c
 14275  005C6E  6EFE               	movwf	tosh,c
 14276  005C70  501B               	movf	_INT2_InterruptHandler+2,w,c
 14277  005C72  6EFF               	movwf	tosu,c
 14278  005C74  50FA               	movf	pclath,w,c
 14279  005C76  0012               	return		;indir
 14280  005C78                     __end_of_INT2_CallBack:
 14281                           	opt callstack 0
 14282                           
 14283 ;; *************** function _INT2_DefaultInterruptHandler *****************
 14284 ;; Defined at:
 14285 ;;		line 109 in file "mcc_generated_files/ext_int.c"
 14286 ;; Parameters:    Size  Location     Type
 14287 ;;		None
 14288 ;; Auto vars:     Size  Location     Type
 14289 ;;		None
 14290 ;; Return value:  Size  Location     Type
 14291 ;;                  1  [STACK] void 
 14292 ;; Registers used:
 14293 ;;		None
 14294 ;; Tracked objects:
 14295 ;;		On entry : 0/39
 14296 ;;		On exit  : 0/0
 14297 ;;		Unchanged: 0/0
 14298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14303 ;;Total ram usage:        0 bytes
 14304 ;; Hardware stack levels used:    1
 14305 ;; This function calls:
 14306 ;;		Nothing
 14307 ;; This function is called by:
 14308 ;;		_EXT_INT_Initialize
 14309 ;;		_INT2_CallBack
 14310 ;; This function uses a reentrant model
 14311 ;;
 14312                           
 14313                           	psect	text89
 14314  005EAA                     __ptext89:
 14315                           	opt callstack 0
 14316  005EAA                     _INT2_DefaultInterruptHandler:
 14317                           	opt callstack 17
 14318                           
 14319                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14320                           
 14321                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14322                           ;incstack = 0
 14323  005EAA  0012               	return		;funcret
 14324  005EAC                     __end_of_INT2_DefaultInterruptHandler:
 14325                           	opt callstack 0
 14326                           
 14327 ;; *************** function _Default_ISR *****************
 14328 ;; Defined at:
 14329 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 14330 ;; Parameters:    Size  Location     Type
 14331 ;;		None
 14332 ;; Auto vars:     Size  Location     Type
 14333 ;;		None
 14334 ;; Return value:  Size  Location     Type
 14335 ;;                  1    wreg      void 
 14336 ;; Registers used:
 14337 ;;		None
 14338 ;; Tracked objects:
 14339 ;;		On entry : 0/0
 14340 ;;		On exit  : 0/0
 14341 ;;		Unchanged: 0/0
 14342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14347 ;;Total ram usage:        0 bytes
 14348 ;; Hardware stack levels used:    1
 14349 ;; This function calls:
 14350 ;;		Nothing
 14351 ;; This function is called by:
 14352 ;;		Interrupt level 2
 14353 ;; This function uses a non-reentrant model
 14354 ;;
 14355                           
 14356                           	psect	text90
 14357  005EA0                     __ptext90:
 14358                           	opt callstack 0
 14359  005EA0                     _Default_ISR:
 14360                           	opt callstack 19
 14361                           
 14362                           ;incstack = 0
 14363  005EA0  EE13  F150         	lfsr	1,___inthi_sp
 14364  005EA4  0011               	retfie		f
 14365  005EA6                     __end_of_Default_ISR:
 14366                           	opt callstack 0
 14367                           
 14368 ;; *************** function _ADCC_ISR *****************
 14369 ;; Defined at:
 14370 ;;		line 307 in file "mcc_generated_files/adcc.c"
 14371 ;; Parameters:    Size  Location     Type
 14372 ;;		None
 14373 ;; Auto vars:     Size  Location     Type
 14374 ;;		None
 14375 ;; Return value:  Size  Location     Type
 14376 ;;                  1    wreg      void 
 14377 ;; Registers used:
 14378 ;;		wreg, status,2, status,0, pclath, tosl
 14379 ;; Tracked objects:
 14380 ;;		On entry : 0/0
 14381 ;;		On exit  : 0/0
 14382 ;;		Unchanged: 0/0
 14383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14388 ;;Total ram usage:        0 bytes
 14389 ;; Hardware stack levels used:    1
 14390 ;; Hardware stack levels required when called:    1
 14391 ;; This function calls:
 14392 ;;		Absolute function
 14393 ;;		_ADCC_DefaultInterruptHandler
 14394 ;; This function is called by:
 14395 ;;		Interrupt level 2
 14396 ;; This function uses a non-reentrant model
 14397 ;;
 14398                           
 14399                           	psect	text91
 14400  0058AC                     __ptext91:
 14401                           	opt callstack 0
 14402  0058AC                     _ADCC_ISR:
 14403                           	opt callstack 18
 14404                           
 14405                           ;incstack = 0
 14406  0058AC  EE13  F150         	lfsr	1,___inthi_sp
 14407                           
 14408                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 14409  0058B0  0139               	movlb	57	; () banked
 14410  0058B2  95A1               	bcf	161,2,b	;volatile
 14411                           
 14412                           ; BSR set to: 57
 14413                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 14414  0058B4  500A               	movf	_ADCC_ADI_InterruptHandler,w,c
 14415  0058B6  100B               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 14416  0058B8  100C               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 14417  0058BA  B4D8               	btfsc	status,2,c
 14418  0058BC  0011               	retfie		f
 14419                           
 14420                           ; BSR set to: 57
 14421                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 14422  0058BE  D801               	call	i2u187_48
 14423  0058C0  0011               	retfie		f
 14424  0058C2                     i2u187_48:
 14425  0058C2  0005               	push	
 14426  0058C4  6EFA               	movwf	pclath,c
 14427  0058C6  500A               	movf	_ADCC_ADI_InterruptHandler,w,c
 14428  0058C8  6EFD               	movwf	tosl,c
 14429  0058CA  500B               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 14430  0058CC  6EFE               	movwf	tosh,c
 14431  0058CE  500C               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 14432  0058D0  6EFF               	movwf	tosu,c
 14433  0058D2  50FA               	movf	pclath,w,c
 14434  0058D4  0012               	return		;indir
 14435  0058D6                     __end_of_ADCC_ISR:
 14436                           	opt callstack 0
 14437                           
 14438 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 14439 ;; Defined at:
 14440 ;;		line 320 in file "mcc_generated_files/adcc.c"
 14441 ;; Parameters:    Size  Location     Type
 14442 ;;		None
 14443 ;; Auto vars:     Size  Location     Type
 14444 ;;		None
 14445 ;; Return value:  Size  Location     Type
 14446 ;;                  1  [STACK] void 
 14447 ;; Registers used:
 14448 ;;		None
 14449 ;; Tracked objects:
 14450 ;;		On entry : 3F/39
 14451 ;;		On exit  : 0/0
 14452 ;;		Unchanged: 0/0
 14453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14458 ;;Total ram usage:        0 bytes
 14459 ;; Hardware stack levels used:    1
 14460 ;; This function calls:
 14461 ;;		Nothing
 14462 ;; This function is called by:
 14463 ;;		_ADCC_Initialize
 14464 ;;		_ADCC_ISR
 14465 ;; This function uses a reentrant model
 14466 ;;
 14467                           
 14468                           	psect	text92
 14469  005EAC                     __ptext92:
 14470                           	opt callstack 0
 14471  005EAC                     _ADCC_DefaultInterruptHandler:
 14472                           	opt callstack 18
 14473                           
 14474                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14475                           
 14476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14477                           ;incstack = 0
 14478  005EAC  0012               	return		;funcret
 14479  005EAE                     __end_of_ADCC_DefaultInterruptHandler:
 14480                           	opt callstack 0
 14481                           
 14482 ;; *************** function _UART1_tx_vect_isr *****************
 14483 ;; Defined at:
 14484 ;;		line 197 in file "mcc_generated_files/uart1.c"
 14485 ;; Parameters:    Size  Location     Type
 14486 ;;		None
 14487 ;; Auto vars:     Size  Location     Type
 14488 ;;		None
 14489 ;; Return value:  Size  Location     Type
 14490 ;;                  1    wreg      void 
 14491 ;; Registers used:
 14492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14493 ;; Tracked objects:
 14494 ;;		On entry : 0/0
 14495 ;;		On exit  : 0/0
 14496 ;;		Unchanged: 0/0
 14497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14502 ;;Total ram usage:        0 bytes
 14503 ;; Hardware stack levels used:    1
 14504 ;; Hardware stack levels required when called:    1
 14505 ;; This function calls:
 14506 ;;		Absolute function
 14507 ;;		_UART1_Transmit_ISR
 14508 ;; This function is called by:
 14509 ;;		Interrupt level 2
 14510 ;; This function uses a non-reentrant model
 14511 ;;
 14512                           
 14513                           	psect	text93
 14514  005B30                     __ptext93:
 14515                           	opt callstack 0
 14516  005B30                     _UART1_tx_vect_isr:
 14517                           	opt callstack 18
 14518                           
 14519                           ;incstack = 0
 14520  005B30  EE13  F150         	lfsr	1,___inthi_sp
 14521                           
 14522                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 14523  005B34  500D               	movf	_UART1_TxInterruptHandler,w,c
 14524  005B36  100E               	iorwf	_UART1_TxInterruptHandler+1,w,c
 14525  005B38  100F               	iorwf	_UART1_TxInterruptHandler+2,w,c
 14526  005B3A  B4D8               	btfsc	status,2,c
 14527  005B3C  0011               	retfie		f
 14528                           
 14529                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 14530  005B3E  D801               	call	i2u377_48
 14531  005B40  0011               	retfie		f
 14532  005B42                     i2u377_48:
 14533  005B42  0005               	push	
 14534  005B44  6EFA               	movwf	pclath,c
 14535  005B46  500D               	movf	_UART1_TxInterruptHandler,w,c
 14536  005B48  6EFD               	movwf	tosl,c
 14537  005B4A  500E               	movf	_UART1_TxInterruptHandler+1,w,c
 14538  005B4C  6EFE               	movwf	tosh,c
 14539  005B4E  500F               	movf	_UART1_TxInterruptHandler+2,w,c
 14540  005B50  6EFF               	movwf	tosu,c
 14541  005B52  50FA               	movf	pclath,w,c
 14542  005B54  0012               	return		;indir
 14543  005B56                     __end_of_UART1_tx_vect_isr:
 14544                           	opt callstack 0
 14545                           
 14546 ;; *************** function _UART1_Transmit_ISR *****************
 14547 ;; Defined at:
 14548 ;;		line 211 in file "mcc_generated_files/uart1.c"
 14549 ;; Parameters:    Size  Location     Type
 14550 ;;		None
 14551 ;; Auto vars:     Size  Location     Type
 14552 ;;		None
 14553 ;; Return value:  Size  Location     Type
 14554 ;;                  1  [STACK] void 
 14555 ;; Registers used:
 14556 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14557 ;; Tracked objects:
 14558 ;;		On entry : 0/0
 14559 ;;		On exit  : 3B/39
 14560 ;;		Unchanged: 0/0
 14561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14566 ;;Total ram usage:        0 bytes
 14567 ;; Hardware stack levels used:    1
 14568 ;; This function calls:
 14569 ;;		Nothing
 14570 ;; This function is called by:
 14571 ;;		_UART1_Initialize
 14572 ;;		_UART1_tx_vect_isr
 14573 ;; This function uses a reentrant model
 14574 ;;
 14575                           
 14576                           	psect	text94
 14577  0057FE                     __ptext94:
 14578                           	opt callstack 0
 14579  0057FE                     _UART1_Transmit_ISR:
 14580                           	opt callstack 18
 14581                           
 14582                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 14583                           
 14584                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14585                           ;incstack = 0
 14586  0057FE  0E40               	movlw	64
 14587  005800  603A               	cpfslt	_uart1TxBufferRemaining,c
 14588  005802  D010               	goto	l597
 14589                           
 14590                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 14591  005804  0E80               	movlw	low _uart1TxBuffer
 14592  005806  243B               	addwf	_uart1TxTail,w,c	;volatile
 14593  005808  6ED9               	movwf	fsr2l,c
 14594  00580A  6ADA               	clrf	fsr2h,c
 14595  00580C  0E02               	movlw	high _uart1TxBuffer
 14596  00580E  22DA               	addwfc	fsr2h,f,c
 14597  005810  50DF               	movf	indf2,w,c
 14598  005812  013D               	movlb	61	; () banked
 14599  005814  6FEA               	movwf	234,b	;volatile
 14600                           
 14601                           ; BSR set to: 61
 14602  005816  2A3B               	incf	_uart1TxTail,f,c	;volatile
 14603                           
 14604                           ; BSR set to: 61
 14605                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 14606  005818  0E3F               	movlw	63
 14607  00581A  643B               	cpfsgt	_uart1TxTail,c
 14608  00581C  D001               	goto	l6197
 14609                           
 14610                           ; BSR set to: 61
 14611                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 14612  00581E  6A3B               	clrf	_uart1TxTail,c	;volatile
 14613  005820                     l6197:
 14614                           
 14615                           ; BSR set to: 61
 14616                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 14617  005820  2A3A               	incf	_uart1TxBufferRemaining,f,c	;volatile
 14618                           
 14619                           ;mcc_generated_files/uart1.c: 220:  } else {
 14620  005822  0012               	return	
 14621  005824                     l597:
 14622                           
 14623                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 14624  005824  0139               	movlb	57	; () banked
 14625  005826  9993               	bcf	147,4,b	;volatile
 14626                           
 14627                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14628  005828  0012               	return		;funcret
 14629  00582A                     __end_of_UART1_Transmit_ISR:
 14630                           	opt callstack 0
 14631                           
 14632 ;; *************** function _UART1_rx_vect_isr *****************
 14633 ;; Defined at:
 14634 ;;		line 204 in file "mcc_generated_files/uart1.c"
 14635 ;; Parameters:    Size  Location     Type
 14636 ;;		None
 14637 ;; Auto vars:     Size  Location     Type
 14638 ;;		None
 14639 ;; Return value:  Size  Location     Type
 14640 ;;                  1    wreg      void 
 14641 ;; Registers used:
 14642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14643 ;; Tracked objects:
 14644 ;;		On entry : 0/0
 14645 ;;		On exit  : 0/0
 14646 ;;		Unchanged: 0/0
 14647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14652 ;;Total ram usage:        0 bytes
 14653 ;; Hardware stack levels used:    1
 14654 ;; Hardware stack levels required when called:    1
 14655 ;; This function calls:
 14656 ;;		Absolute function
 14657 ;;		_UART1_Receive_ISR
 14658 ;; This function is called by:
 14659 ;;		Interrupt level 2
 14660 ;; This function uses a non-reentrant model
 14661 ;;
 14662                           
 14663                           	psect	text95
 14664  005B58                     __ptext95:
 14665                           	opt callstack 0
 14666  005B58                     _UART1_rx_vect_isr:
 14667                           	opt callstack 18
 14668                           
 14669                           ;incstack = 0
 14670  005B58  EE13  F150         	lfsr	1,___inthi_sp
 14671                           
 14672                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 14673  005B5C  5010               	movf	_UART1_RxInterruptHandler,w,c
 14674  005B5E  1011               	iorwf	_UART1_RxInterruptHandler+1,w,c
 14675  005B60  1012               	iorwf	_UART1_RxInterruptHandler+2,w,c
 14676  005B62  B4D8               	btfsc	status,2,c
 14677  005B64  0011               	retfie		f
 14678                           
 14679                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 14680  005B66  D801               	call	i2u379_48
 14681  005B68  0011               	retfie		f
 14682  005B6A                     i2u379_48:
 14683  005B6A  0005               	push	
 14684  005B6C  6EFA               	movwf	pclath,c
 14685  005B6E  5010               	movf	_UART1_RxInterruptHandler,w,c
 14686  005B70  6EFD               	movwf	tosl,c
 14687  005B72  5011               	movf	_UART1_RxInterruptHandler+1,w,c
 14688  005B74  6EFE               	movwf	tosh,c
 14689  005B76  5012               	movf	_UART1_RxInterruptHandler+2,w,c
 14690  005B78  6EFF               	movwf	tosu,c
 14691  005B7A  50FA               	movf	pclath,w,c
 14692  005B7C  0012               	return		;indir
 14693  005B7E                     __end_of_UART1_rx_vect_isr:
 14694                           	opt callstack 0
 14695                           
 14696 ;; *************** function _UART1_Receive_ISR *****************
 14697 ;; Defined at:
 14698 ;;		line 227 in file "mcc_generated_files/uart1.c"
 14699 ;; Parameters:    Size  Location     Type
 14700 ;;		None
 14701 ;; Auto vars:     Size  Location     Type
 14702 ;;		None
 14703 ;; Return value:  Size  Location     Type
 14704 ;;                  1  [STACK] void 
 14705 ;; Registers used:
 14706 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14707 ;; Tracked objects:
 14708 ;;		On entry : 0/0
 14709 ;;		On exit  : 0/0
 14710 ;;		Unchanged: 0/0
 14711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14716 ;;Total ram usage:        0 bytes
 14717 ;; Hardware stack levels used:    1
 14718 ;; This function calls:
 14719 ;;		Nothing
 14720 ;; This function is called by:
 14721 ;;		_UART1_Initialize
 14722 ;;		_UART1_rx_vect_isr
 14723 ;; This function uses a reentrant model
 14724 ;;
 14725                           
 14726                           	psect	text96
 14727  005CBC                     __ptext96:
 14728                           	opt callstack 0
 14729  005CBC                     _UART1_Receive_ISR:
 14730                           	opt callstack 18
 14731                           
 14732                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 14733                           
 14734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14735                           ;incstack = 0
 14736  005CBC  0EA1               	movlw	low _uart1RxBuffer
 14737  005CBE  2439               	addwf	_uart1RxHead,w,c	;volatile
 14738  005CC0  6ED9               	movwf	fsr2l,c
 14739  005CC2  6ADA               	clrf	fsr2h,c
 14740  005CC4  0E01               	movlw	high _uart1RxBuffer
 14741  005CC6  22DA               	addwfc	fsr2h,f,c
 14742  005CC8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 14743  005CCE  2A39               	incf	_uart1RxHead,f,c	;volatile
 14744                           
 14745                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 14746  005CD0  0E3F               	movlw	63
 14747  005CD2  6439               	cpfsgt	_uart1RxHead,c
 14748  005CD4  D001               	goto	l6207
 14749                           
 14750                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 14751  005CD6  6A39               	clrf	_uart1RxHead,c	;volatile
 14752  005CD8                     l6207:
 14753                           
 14754                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 14755  005CD8  2A37               	incf	_uart1RxCount,f,c	;volatile
 14756                           
 14757                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14758  005CDA  0012               	return		;funcret
 14759  005CDC                     __end_of_UART1_Receive_ISR:
 14760                           	opt callstack 0
 14761                           
 14762 ;; *************** function _UART2_tx_vect_isr *****************
 14763 ;; Defined at:
 14764 ;;		line 195 in file "mcc_generated_files/uart2.c"
 14765 ;; Parameters:    Size  Location     Type
 14766 ;;		None
 14767 ;; Auto vars:     Size  Location     Type
 14768 ;;		None
 14769 ;; Return value:  Size  Location     Type
 14770 ;;                  1    wreg      void 
 14771 ;; Registers used:
 14772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14773 ;; Tracked objects:
 14774 ;;		On entry : 0/0
 14775 ;;		On exit  : 0/0
 14776 ;;		Unchanged: 0/0
 14777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14782 ;;Total ram usage:        0 bytes
 14783 ;; Hardware stack levels used:    1
 14784 ;; Hardware stack levels required when called:    1
 14785 ;; This function calls:
 14786 ;;		Absolute function
 14787 ;;		_UART2_Transmit_ISR
 14788 ;; This function is called by:
 14789 ;;		Interrupt level 2
 14790 ;; This function uses a non-reentrant model
 14791 ;;
 14792                           
 14793                           	psect	text97
 14794  005B80                     __ptext97:
 14795                           	opt callstack 0
 14796  005B80                     _UART2_tx_vect_isr:
 14797                           	opt callstack 18
 14798                           
 14799                           ;incstack = 0
 14800  005B80  EE13  F150         	lfsr	1,___inthi_sp
 14801                           
 14802                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 14803  005B84  5013               	movf	_UART2_TxInterruptHandler,w,c
 14804  005B86  1014               	iorwf	_UART2_TxInterruptHandler+1,w,c
 14805  005B88  1015               	iorwf	_UART2_TxInterruptHandler+2,w,c
 14806  005B8A  B4D8               	btfsc	status,2,c
 14807  005B8C  0011               	retfie		f
 14808                           
 14809                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 14810  005B8E  D801               	call	i2u381_48
 14811  005B90  0011               	retfie		f
 14812  005B92                     i2u381_48:
 14813  005B92  0005               	push	
 14814  005B94  6EFA               	movwf	pclath,c
 14815  005B96  5013               	movf	_UART2_TxInterruptHandler,w,c
 14816  005B98  6EFD               	movwf	tosl,c
 14817  005B9A  5014               	movf	_UART2_TxInterruptHandler+1,w,c
 14818  005B9C  6EFE               	movwf	tosh,c
 14819  005B9E  5015               	movf	_UART2_TxInterruptHandler+2,w,c
 14820  005BA0  6EFF               	movwf	tosu,c
 14821  005BA2  50FA               	movf	pclath,w,c
 14822  005BA4  0012               	return		;indir
 14823  005BA6                     __end_of_UART2_tx_vect_isr:
 14824                           	opt callstack 0
 14825                           
 14826 ;; *************** function _UART2_Transmit_ISR *****************
 14827 ;; Defined at:
 14828 ;;		line 213 in file "mcc_generated_files/uart2.c"
 14829 ;; Parameters:    Size  Location     Type
 14830 ;;		None
 14831 ;; Auto vars:     Size  Location     Type
 14832 ;;		None
 14833 ;; Return value:  Size  Location     Type
 14834 ;;                  1  [STACK] void 
 14835 ;; Registers used:
 14836 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14837 ;; Tracked objects:
 14838 ;;		On entry : 0/0
 14839 ;;		On exit  : 3B/39
 14840 ;;		Unchanged: 0/0
 14841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14846 ;;Total ram usage:        0 bytes
 14847 ;; Hardware stack levels used:    1
 14848 ;; This function calls:
 14849 ;;		Nothing
 14850 ;; This function is called by:
 14851 ;;		_UART2_Initialize
 14852 ;;		_UART2_tx_vect_isr
 14853 ;; This function uses a reentrant model
 14854 ;;
 14855                           
 14856                           	psect	text98
 14857  00582A                     __ptext98:
 14858                           	opt callstack 0
 14859  00582A                     _UART2_Transmit_ISR:
 14860                           	opt callstack 18
 14861                           
 14862                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 14863                           
 14864                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14865                           ;incstack = 0
 14866  00582A  0E40               	movlw	64
 14867  00582C  6034               	cpfslt	_uart2TxBufferRemaining,c
 14868  00582E  D010               	goto	l717
 14869                           
 14870                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 14871  005830  0E40               	movlw	low _uart2TxBuffer
 14872  005832  2435               	addwf	_uart2TxTail,w,c	;volatile
 14873  005834  6ED9               	movwf	fsr2l,c
 14874  005836  6ADA               	clrf	fsr2h,c
 14875  005838  0E02               	movlw	high _uart2TxBuffer
 14876  00583A  22DA               	addwfc	fsr2h,f,c
 14877  00583C  50DF               	movf	indf2,w,c
 14878  00583E  013D               	movlb	61	; () banked
 14879  005840  6FD2               	movwf	210,b	;volatile
 14880                           
 14881                           ; BSR set to: 61
 14882  005842  2A35               	incf	_uart2TxTail,f,c	;volatile
 14883                           
 14884                           ; BSR set to: 61
 14885                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 14886  005844  0E3F               	movlw	63
 14887  005846  6435               	cpfsgt	_uart2TxTail,c
 14888  005848  D001               	goto	l6219
 14889                           
 14890                           ; BSR set to: 61
 14891                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 14892  00584A  6A35               	clrf	_uart2TxTail,c	;volatile
 14893  00584C                     l6219:
 14894                           
 14895                           ; BSR set to: 61
 14896                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 14897  00584C  2A34               	incf	_uart2TxBufferRemaining,f,c	;volatile
 14898                           
 14899                           ;mcc_generated_files/uart2.c: 224:     }
 14900  00584E  0012               	return	
 14901  005850                     l717:
 14902                           
 14903                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 14904  005850  0139               	movlb	57	; () banked
 14905  005852  9796               	bcf	150,3,b	;volatile
 14906                           
 14907                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14908  005854  0012               	return		;funcret
 14909  005856                     __end_of_UART2_Transmit_ISR:
 14910                           	opt callstack 0
 14911                           
 14912 ;; *************** function _UART2_rx_vect_isr *****************
 14913 ;; Defined at:
 14914 ;;		line 203 in file "mcc_generated_files/uart2.c"
 14915 ;; Parameters:    Size  Location     Type
 14916 ;;		None
 14917 ;; Auto vars:     Size  Location     Type
 14918 ;;		None
 14919 ;; Return value:  Size  Location     Type
 14920 ;;                  1    wreg      void 
 14921 ;; Registers used:
 14922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14923 ;; Tracked objects:
 14924 ;;		On entry : 0/0
 14925 ;;		On exit  : 0/0
 14926 ;;		Unchanged: 0/0
 14927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14932 ;;Total ram usage:        0 bytes
 14933 ;; Hardware stack levels used:    1
 14934 ;; Hardware stack levels required when called:    1
 14935 ;; This function calls:
 14936 ;;		Absolute function
 14937 ;;		_UART2_Receive_ISR
 14938 ;; This function is called by:
 14939 ;;		Interrupt level 2
 14940 ;; This function uses a non-reentrant model
 14941 ;;
 14942                           
 14943                           	psect	text99
 14944  005BA8                     __ptext99:
 14945                           	opt callstack 0
 14946  005BA8                     _UART2_rx_vect_isr:
 14947                           	opt callstack 18
 14948                           
 14949                           ;incstack = 0
 14950  005BA8  EE13  F150         	lfsr	1,___inthi_sp
 14951                           
 14952                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 14953  005BAC  5016               	movf	_UART2_RxInterruptHandler,w,c
 14954  005BAE  1017               	iorwf	_UART2_RxInterruptHandler+1,w,c
 14955  005BB0  1018               	iorwf	_UART2_RxInterruptHandler+2,w,c
 14956  005BB2  B4D8               	btfsc	status,2,c
 14957  005BB4  0011               	retfie		f
 14958                           
 14959                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 14960  005BB6  D801               	call	i2u383_48
 14961  005BB8  0011               	retfie		f
 14962  005BBA                     i2u383_48:
 14963  005BBA  0005               	push	
 14964  005BBC  6EFA               	movwf	pclath,c
 14965  005BBE  5016               	movf	_UART2_RxInterruptHandler,w,c
 14966  005BC0  6EFD               	movwf	tosl,c
 14967  005BC2  5017               	movf	_UART2_RxInterruptHandler+1,w,c
 14968  005BC4  6EFE               	movwf	tosh,c
 14969  005BC6  5018               	movf	_UART2_RxInterruptHandler+2,w,c
 14970  005BC8  6EFF               	movwf	tosu,c
 14971  005BCA  50FA               	movf	pclath,w,c
 14972  005BCC  0012               	return		;indir
 14973  005BCE                     __end_of_UART2_rx_vect_isr:
 14974                           	opt callstack 0
 14975                           
 14976 ;; *************** function _UART2_Receive_ISR *****************
 14977 ;; Defined at:
 14978 ;;		line 233 in file "mcc_generated_files/uart2.c"
 14979 ;; Parameters:    Size  Location     Type
 14980 ;;		None
 14981 ;; Auto vars:     Size  Location     Type
 14982 ;;		None
 14983 ;; Return value:  Size  Location     Type
 14984 ;;                  1  [STACK] void 
 14985 ;; Registers used:
 14986 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14987 ;; Tracked objects:
 14988 ;;		On entry : 0/0
 14989 ;;		On exit  : 0/0
 14990 ;;		Unchanged: 0/0
 14991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14996 ;;Total ram usage:        0 bytes
 14997 ;; Hardware stack levels used:    1
 14998 ;; This function calls:
 14999 ;;		Nothing
 15000 ;; This function is called by:
 15001 ;;		_UART2_Initialize
 15002 ;;		_UART2_rx_vect_isr
 15003 ;; This function uses a reentrant model
 15004 ;;
 15005                           
 15006                           	psect	text100
 15007  005CDC                     __ptext100:
 15008                           	opt callstack 0
 15009  005CDC                     _UART2_Receive_ISR:
 15010                           	opt callstack 18
 15011                           
 15012                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 15013                           
 15014                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15015                           ;incstack = 0
 15016  005CDC  0E00               	movlw	low _uart2RxBuffer
 15017  005CDE  2433               	addwf	_uart2RxHead,w,c	;volatile
 15018  005CE0  6ED9               	movwf	fsr2l,c
 15019  005CE2  6ADA               	clrf	fsr2h,c
 15020  005CE4  0E02               	movlw	high _uart2RxBuffer
 15021  005CE6  22DA               	addwfc	fsr2h,f,c
 15022  005CE8  006F F743 FFDF     	movff	15824,indf2	;volatile
 15023  005CEE  2A33               	incf	_uart2RxHead,f,c	;volatile
 15024                           
 15025                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 15026  005CF0  0E3F               	movlw	63
 15027  005CF2  6433               	cpfsgt	_uart2RxHead,c
 15028  005CF4  D001               	goto	l6229
 15029                           
 15030                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 15031  005CF6  6A33               	clrf	_uart2RxHead,c	;volatile
 15032  005CF8                     l6229:
 15033                           
 15034                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 15035  005CF8  2A31               	incf	_uart2RxCount,f,c	;volatile
 15036                           
 15037                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15038  005CFA  0012               	return		;funcret
 15039  005CFC                     __end_of_UART2_Receive_ISR:
 15040                           	opt callstack 0
 15041                           
 15042 ;; *************** function _TMR6_ISR *****************
 15043 ;; Defined at:
 15044 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 15045 ;; Parameters:    Size  Location     Type
 15046 ;;		None
 15047 ;; Auto vars:     Size  Location     Type
 15048 ;;		None
 15049 ;; Return value:  Size  Location     Type
 15050 ;;                  1    wreg      void 
 15051 ;; Registers used:
 15052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 15053 ;; Tracked objects:
 15054 ;;		On entry : 0/0
 15055 ;;		On exit  : 0/0
 15056 ;;		Unchanged: 0/0
 15057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15060 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15061 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15062 ;;Total ram usage:        1 bytes
 15063 ;; Hardware stack levels used:    1
 15064 ;; Hardware stack levels required when called:    2
 15065 ;; This function calls:
 15066 ;;		_TMR6_CallBack
 15067 ;; This function is called by:
 15068 ;;		Interrupt level 2
 15069 ;; This function uses a non-reentrant model
 15070 ;;
 15071                           
 15072                           	psect	text101
 15073  005D88                     __ptext101:
 15074                           	opt callstack 0
 15075  005D88                     _TMR6_ISR:
 15076                           	opt callstack 17
 15077                           
 15078                           ;incstack = 0
 15079  005D88  0060  F0F4  F05D   	movff	btemp,??_TMR6_ISR
 15080  005D8E  EE13  F150         	lfsr	1,___inthi_sp
 15081                           
 15082                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 15083  005D92  0139               	movlb	57	; () banked
 15084  005D94  91A9               	bcf	169,0,b	;volatile
 15085                           
 15086                           ; BSR set to: 57
 15087                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 15088  005D96  EC3C  F02E         	call	_TMR6_CallBack	;wreg free
 15089  005D9A  0060  F174  F03D   	movff	??_TMR6_ISR,btemp
 15090  005DA0  0011               	retfie		f
 15091  005DA2                     __end_of_TMR6_ISR:
 15092                           	opt callstack 0
 15093                           
 15094 ;; *************** function _TMR6_CallBack *****************
 15095 ;; Defined at:
 15096 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 15097 ;; Parameters:    Size  Location     Type
 15098 ;;		None
 15099 ;; Auto vars:     Size  Location     Type
 15100 ;;		None
 15101 ;; Return value:  Size  Location     Type
 15102 ;;                  1  [STACK] void 
 15103 ;; Registers used:
 15104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 15105 ;; Tracked objects:
 15106 ;;		On entry : 3F/39
 15107 ;;		On exit  : 0/0
 15108 ;;		Unchanged: 0/0
 15109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15114 ;;Total ram usage:        0 bytes
 15115 ;; Hardware stack levels used:    1
 15116 ;; Hardware stack levels required when called:    1
 15117 ;; This function calls:
 15118 ;;		Absolute function
 15119 ;;		_TMR6_DefaultInterruptHandler
 15120 ;; This function is called by:
 15121 ;;		_TMR6_ISR
 15122 ;; This function uses a reentrant model
 15123 ;;
 15124                           
 15125                           	psect	text102
 15126  005C78                     __ptext102:
 15127                           	opt callstack 0
 15128  005C78                     _TMR6_CallBack:
 15129                           	opt callstack 17
 15130                           
 15131                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 15132                           
 15133                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15134                           ;incstack = 0
 15135  005C78  5007               	movf	_TMR6_InterruptHandler,w,c
 15136  005C7A  1008               	iorwf	_TMR6_InterruptHandler+1,w,c
 15137  005C7C  1009               	iorwf	_TMR6_InterruptHandler+2,w,c
 15138  005C7E  B4D8               	btfsc	status,2,c
 15139  005C80  0012               	return	
 15140                           
 15141                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 15142  005C82  D801               	call	u354_48
 15143  005C84  0012               	return	
 15144  005C86                     u354_48:
 15145  005C86  0005               	push	
 15146  005C88  6EFA               	movwf	pclath,c
 15147  005C8A  5007               	movf	_TMR6_InterruptHandler,w,c
 15148  005C8C  6EFD               	movwf	tosl,c
 15149  005C8E  5008               	movf	_TMR6_InterruptHandler+1,w,c
 15150  005C90  6EFE               	movwf	tosh,c
 15151  005C92  5009               	movf	_TMR6_InterruptHandler+2,w,c
 15152  005C94  6EFF               	movwf	tosu,c
 15153  005C96  50FA               	movf	pclath,w,c
 15154  005C98  0012               	return		;indir
 15155  005C9A                     __end_of_TMR6_CallBack:
 15156                           	opt callstack 0
 15157                           
 15158 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 15159 ;; Defined at:
 15160 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 15161 ;; Parameters:    Size  Location     Type
 15162 ;;		None
 15163 ;; Auto vars:     Size  Location     Type
 15164 ;;  i               1  [STACK] unsigned char 
 15165 ;; Return value:  Size  Location     Type
 15166 ;;                  1  [STACK] void 
 15167 ;; Registers used:
 15168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 15169 ;; Tracked objects:
 15170 ;;		On entry : 0/39
 15171 ;;		On exit  : 0/0
 15172 ;;		Unchanged: 0/0
 15173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15178 ;;Total ram usage:        0 bytes
 15179 ;; Hardware stack levels used:    1
 15180 ;; This function calls:
 15181 ;;		Nothing
 15182 ;; This function is called by:
 15183 ;;		_TMR6_Initialize
 15184 ;;		_TMR6_CallBack
 15185 ;; This function uses a reentrant model
 15186 ;;
 15187                           
 15188                           	psect	text103
 15189  005540                     __ptext103:
 15190                           	opt callstack 0
 15191  005540                     _TMR6_DefaultInterruptHandler:
 15192                           	opt callstack 0
 15193                           
 15194                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15195  005540  52E6               	movf	postinc1,f,c
 15196                           
 15197                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 15198                           ;stkvar	_i @ sp[(-1)+0]
 15199                           
 15200                           ;incstack = 0
 15201  005542  0EFF               	movlw	-1
 15202  005544  6AE3               	clrf	plusw1,c
 15203  005546                     l5929:
 15204                           
 15205                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 15206                           ;stkvar	_i @ sp[(-1)+0]
 15207  005546  0EFF               	movlw	-1
 15208  005548  50E3               	movf	plusw1,w,c
 15209  00554A  0D02               	mullw	2
 15210  00554C  50F3               	movf	prodl,w,c
 15211  00554E  0F79               	addlw	low _tickCount
 15212  005550  6ED9               	movwf	fsr2l,c
 15213  005552  6ADA               	clrf	fsr2h,c
 15214  005554  50DE               	movf	postinc2,w,c
 15215  005556  10DE               	iorwf	postinc2,w,c
 15216  005558  B4D8               	btfsc	status,2,c
 15217  00555A  D00A               	goto	l5933
 15218                           
 15219                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 15220                           ;stkvar	_i @ sp[(-1)+0]
 15221  00555C  0EFF               	movlw	-1
 15222  00555E  50E3               	movf	plusw1,w,c
 15223  005560  0D02               	mullw	2
 15224  005562  50F3               	movf	prodl,w,c
 15225  005564  0F79               	addlw	low _tickCount
 15226  005566  6ED9               	movwf	fsr2l,c
 15227  005568  6ADA               	clrf	fsr2h,c
 15228  00556A  06DE               	decf	postinc2,f,c
 15229  00556C  0E00               	movlw	0
 15230  00556E  5ADD               	subwfb	postdec2,f,c
 15231  005570                     l5933:
 15232                           
 15233                           ;mcc_generated_files/tmr6.c: 207:  }
 15234                           ;stkvar	_i @ sp[(-1)+0]
 15235  005570  0EFF               	movlw	-1
 15236  005572  2AE3               	incf	plusw1,f,c
 15237                           
 15238                           ;stkvar	_i @ sp[(-1)+0]
 15239  005574  0EFF               	movlw	-1
 15240  005576  006F FF8C  F03D    	movff	plusw1,btemp
 15241  00557C  0E05               	movlw	5
 15242  00557E  643D               	cpfsgt	btemp,c
 15243  005580  D7E2               	goto	l5929
 15244                           
 15245                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15246  005582  52E5               	movf	postdec1,f,c
 15247  005584  0012               	return		;funcret
 15248  005586                     __end_of_TMR6_DefaultInterruptHandler:
 15249                           	opt callstack 0
 15250                           
 15251 ;; *************** function _DMA1_DMASCNT_ISR *****************
 15252 ;; Defined at:
 15253 ;;		line 126 in file "mcc_generated_files/dma1.c"
 15254 ;; Parameters:    Size  Location     Type
 15255 ;;		None
 15256 ;; Auto vars:     Size  Location     Type
 15257 ;;		None
 15258 ;; Return value:  Size  Location     Type
 15259 ;;                  1    wreg      void 
 15260 ;; Registers used:
 15261 ;;		None
 15262 ;; Tracked objects:
 15263 ;;		On entry : 0/0
 15264 ;;		On exit  : 3F/0
 15265 ;;		Unchanged: 0/0
 15266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15271 ;;Total ram usage:        0 bytes
 15272 ;; Hardware stack levels used:    1
 15273 ;; This function calls:
 15274 ;;		Nothing
 15275 ;; This function is called by:
 15276 ;;		Interrupt level 2
 15277 ;; This function uses a non-reentrant model
 15278 ;;
 15279                           
 15280                           	psect	text104
 15281  005E3C                     __ptext104:
 15282                           	opt callstack 0
 15283  005E3C                     _DMA1_DMASCNT_ISR:
 15284                           	opt callstack 19
 15285                           
 15286                           ;incstack = 0
 15287  005E3C  EE13  F150         	lfsr	1,___inthi_sp
 15288                           
 15289                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 15290  005E40  0139               	movlb	57	; () banked
 15291  005E42  91A2               	bcf	162,0,b	;volatile
 15292                           
 15293                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 15294  005E44  0100               	movlb	0	; () banked
 15295  005E46  976D               	bcf	_spi_link& (0+255),3,b	;volatile
 15296                           
 15297                           ; BSR set to: 0
 15298  005E48  0011               	retfie		f
 15299  005E4A                     __end_of_DMA1_DMASCNT_ISR:
 15300                           	opt callstack 0
 15301                           
 15302 ;; *************** function _DMA1_DMADCNT_ISR *****************
 15303 ;; Defined at:
 15304 ;;		line 133 in file "mcc_generated_files/dma1.c"
 15305 ;; Parameters:    Size  Location     Type
 15306 ;;		None
 15307 ;; Auto vars:     Size  Location     Type
 15308 ;;		None
 15309 ;; Return value:  Size  Location     Type
 15310 ;;                  1    wreg      void 
 15311 ;; Registers used:
 15312 ;;		None
 15313 ;; Tracked objects:
 15314 ;;		On entry : 0/0
 15315 ;;		On exit  : 3F/39
 15316 ;;		Unchanged: 0/0
 15317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15322 ;;Total ram usage:        0 bytes
 15323 ;; Hardware stack levels used:    1
 15324 ;; This function calls:
 15325 ;;		Nothing
 15326 ;; This function is called by:
 15327 ;;		Interrupt level 2
 15328 ;; This function uses a non-reentrant model
 15329 ;;
 15330                           
 15331                           	psect	text105
 15332  005E64                     __ptext105:
 15333                           	opt callstack 0
 15334  005E64                     _DMA1_DMADCNT_ISR:
 15335                           	opt callstack 19
 15336                           
 15337                           ; BSR set to: 0
 15338                           ;incstack = 0
 15339  005E64  EE13  F150         	lfsr	1,___inthi_sp
 15340                           
 15341                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 15342  005E68  0139               	movlb	57	; () banked
 15343  005E6A  93A2               	bcf	162,1,b	;volatile
 15344                           
 15345                           ; BSR set to: 57
 15346  005E6C  0011               	retfie		f
 15347  005E6E                     __end_of_DMA1_DMADCNT_ISR:
 15348                           	opt callstack 0
 15349                           
 15350 ;; *************** function _DMA1_DMAA_ISR *****************
 15351 ;; Defined at:
 15352 ;;		line 143 in file "mcc_generated_files/dma1.c"
 15353 ;; Parameters:    Size  Location     Type
 15354 ;;		None
 15355 ;; Auto vars:     Size  Location     Type
 15356 ;;		None
 15357 ;; Return value:  Size  Location     Type
 15358 ;;                  1    wreg      void 
 15359 ;; Registers used:
 15360 ;;		None
 15361 ;; Tracked objects:
 15362 ;;		On entry : 0/0
 15363 ;;		On exit  : 3F/39
 15364 ;;		Unchanged: 0/0
 15365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15370 ;;Total ram usage:        0 bytes
 15371 ;; Hardware stack levels used:    1
 15372 ;; This function calls:
 15373 ;;		Nothing
 15374 ;; This function is called by:
 15375 ;;		Interrupt level 2
 15376 ;; This function uses a non-reentrant model
 15377 ;;
 15378                           
 15379                           	psect	text106
 15380  005E70                     __ptext106:
 15381                           	opt callstack 0
 15382  005E70                     _DMA1_DMAA_ISR:
 15383                           	opt callstack 19
 15384                           
 15385                           ; BSR set to: 57
 15386                           ;incstack = 0
 15387  005E70  EE13  F150         	lfsr	1,___inthi_sp
 15388                           
 15389                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 15390  005E74  0139               	movlb	57	; () banked
 15391  005E76  97A2               	bcf	162,3,b	;volatile
 15392                           
 15393                           ; BSR set to: 57
 15394  005E78  0011               	retfie		f
 15395  005E7A                     __end_of_DMA1_DMAA_ISR:
 15396                           	opt callstack 0
 15397                           
 15398 ;; *************** function _DMA1_DMAOR_ISR *****************
 15399 ;; Defined at:
 15400 ;;		line 154 in file "mcc_generated_files/dma1.c"
 15401 ;; Parameters:    Size  Location     Type
 15402 ;;		None
 15403 ;; Auto vars:     Size  Location     Type
 15404 ;;		None
 15405 ;; Return value:  Size  Location     Type
 15406 ;;                  1    wreg      void 
 15407 ;; Registers used:
 15408 ;;		None
 15409 ;; Tracked objects:
 15410 ;;		On entry : 0/0
 15411 ;;		On exit  : 3F/39
 15412 ;;		Unchanged: 0/0
 15413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15418 ;;Total ram usage:        0 bytes
 15419 ;; Hardware stack levels used:    1
 15420 ;; This function calls:
 15421 ;;		Nothing
 15422 ;; This function is called by:
 15423 ;;		Interrupt level 2
 15424 ;; This function uses a non-reentrant model
 15425 ;;
 15426                           
 15427                           	psect	text107
 15428  005E4C                     __ptext107:
 15429                           	opt callstack 0
 15430  005E4C                     _DMA1_DMAOR_ISR:
 15431                           	opt callstack 19
 15432                           
 15433                           ; BSR set to: 57
 15434                           ;incstack = 0
 15435  005E4C  EE13  F150         	lfsr	1,___inthi_sp
 15436                           
 15437                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 15438  005E50  0139               	movlb	57	; () banked
 15439  005E52  95A2               	bcf	162,2,b	;volatile
 15440                           
 15441                           ;mcc_generated_files/dma1.c: 159:  LATEbits.LATE1 = 0;
 15442  005E54  92BE               	bcf	16318,1,c	;volatile
 15443                           
 15444                           ; BSR set to: 57
 15445  005E56  0011               	retfie		f
 15446  005E58                     __end_of_DMA1_DMAOR_ISR:
 15447                           	opt callstack 0
 15448                           
 15449 ;; *************** function _TMR5_ISR *****************
 15450 ;; Defined at:
 15451 ;;		line 163 in file "mcc_generated_files/tmr5.c"
 15452 ;; Parameters:    Size  Location     Type
 15453 ;;		None
 15454 ;; Auto vars:     Size  Location     Type
 15455 ;;		None
 15456 ;; Return value:  Size  Location     Type
 15457 ;;                  1    wreg      void 
 15458 ;; Registers used:
 15459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 15460 ;; Tracked objects:
 15461 ;;		On entry : 0/0
 15462 ;;		On exit  : 0/0
 15463 ;;		Unchanged: 0/0
 15464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15467 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15468 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15469 ;;Total ram usage:        1 bytes
 15470 ;; Hardware stack levels used:    1
 15471 ;; Hardware stack levels required when called:    2
 15472 ;; This function calls:
 15473 ;;		_TMR5_CallBack
 15474 ;;		_TMR5_WriteTimer
 15475 ;; This function is called by:
 15476 ;;		Interrupt level 2
 15477 ;; This function uses a non-reentrant model
 15478 ;;
 15479                           
 15480                           	psect	text108
 15481  0056C8                     __ptext108:
 15482                           	opt callstack 0
 15483  0056C8                     _TMR5_ISR:
 15484                           	opt callstack 17
 15485                           
 15486                           ; BSR set to: 57
 15487                           ;incstack = 0
 15488  0056C8  0060  F120  F05E   	movff	btemp+11,??_TMR5_ISR
 15489  0056CE  EE13  F150         	lfsr	1,___inthi_sp
 15490                           
 15491                           ;mcc_generated_files/tmr5.c: 165:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 168:  PIR8bits.TMR5IF = 0;
 15492  0056D2  0139               	movlb	57	; () banked
 15493  0056D4  9DA8               	bcf	168,6,b	;volatile
 15494                           
 15495                           ; BSR set to: 57
 15496                           ;mcc_generated_files/tmr5.c: 169:  TMR5_WriteTimer(timer5ReloadVal);
 15497  0056D6  0060  F0BB  FFE6   	movff	_timer5ReloadVal,postinc1
 15498  0056DC  0060  F0BF  FFE6   	movff	_timer5ReloadVal+1,postinc1
 15499  0056E2  EC06  F02B         	call	_TMR5_WriteTimer	;wreg free
 15500                           
 15501                           ;mcc_generated_files/tmr5.c: 172:  if (++CountCallBack >= 50) {
 15502  0056E6  4A2C               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 15503  0056E8  2A2D               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 15504  0056EA  502D               	movf	TMR5_ISR@CountCallBack+1,w,c	;volatile
 15505  0056EC  E104               	bnz	i2u196_40
 15506  0056EE  0E32               	movlw	50
 15507  0056F0  5C2C               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 15508  0056F2  A0D8               	btfss	status,0,c
 15509  0056F4  D004               	goto	i2l1137
 15510  0056F6                     i2u196_40:
 15511                           
 15512                           ;mcc_generated_files/tmr5.c: 174:   TMR5_CallBack();
 15513  0056F6  EC4D  F02E         	call	_TMR5_CallBack	;wreg free
 15514                           
 15515                           ;mcc_generated_files/tmr5.c: 177:   CountCallBack = 0;
 15516  0056FA  6A2C               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 15517  0056FC  6A2D               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 15518  0056FE                     i2l1137:
 15519  0056FE  0060  F178  F048   	movff	??_TMR5_ISR,btemp+11
 15520  005704  0011               	retfie		f
 15521  005706                     __end_of_TMR5_ISR:
 15522                           	opt callstack 0
 15523                           
 15524 ;; *************** function _TMR5_WriteTimer *****************
 15525 ;; Defined at:
 15526 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 15527 ;; Parameters:    Size  Location     Type
 15528 ;;  timerVal        2  [STACK] unsigned short 
 15529 ;; Auto vars:     Size  Location     Type
 15530 ;;		None
 15531 ;; Return value:  Size  Location     Type
 15532 ;;                  1  [STACK] void 
 15533 ;; Registers used:
 15534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 15535 ;; Tracked objects:
 15536 ;;		On entry : 3F/39
 15537 ;;		On exit  : 0/0
 15538 ;;		Unchanged: 0/0
 15539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15544 ;;Total ram usage:        0 bytes
 15545 ;; Hardware stack levels used:    1
 15546 ;; This function calls:
 15547 ;;		Nothing
 15548 ;; This function is called by:
 15549 ;;		_TMR5_ISR
 15550 ;; This function uses a reentrant model
 15551 ;;
 15552                           
 15553                           	psect	text109
 15554  00560C                     __ptext109:
 15555                           	opt callstack 0
 15556  00560C                     _TMR5_WriteTimer:
 15557                           	opt callstack 18
 15558                           
 15559                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:  if (T5CONbits.NOT_SYNC == 1) {
 15560                           
 15561                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15562                           ;incstack = 0
 15563  00560C  A49A               	btfss	16282,2,c	;volatile
 15564  00560E  D00F               	goto	l4033
 15565                           
 15566                           ;mcc_generated_files/tmr5.c: 133:   T5CONbits.TMR5ON = 0;
 15567  005610  909A               	bcf	16282,0,c	;volatile
 15568                           
 15569                           ;mcc_generated_files/tmr5.c: 136:   TMR5H = (timerVal >> 8);
 15570                           ;stkvar	_timerVal @ sp[(0)+-2]
 15571  005612  0EFF               	movlw	255
 15572  005614  24E1               	addwf	fsr1l,w,c
 15573  005616  6ED9               	movwf	fsr2l,c
 15574  005618  0EFF               	movlw	255
 15575  00561A  20E2               	addwfc	fsr1h,w,c
 15576  00561C  6EDA               	movwf	fsr2h,c
 15577  00561E  50DF               	movf	indf2,w,c
 15578  005620  6E99               	movwf	16281,c	;volatile
 15579                           
 15580                           ;mcc_generated_files/tmr5.c: 137:   TMR5L = timerVal;
 15581                           ;stkvar	_timerVal @ sp[(0)+-2]
 15582  005622  0EFE               	movlw	-2
 15583  005624  006F FF8F FF98     	movff	plusw1,16280	;volatile
 15584                           
 15585                           ;mcc_generated_files/tmr5.c: 140:   T5CONbits.TMR5ON = 1;
 15586  00562A  809A               	bsf	16282,0,c	;volatile
 15587                           
 15588                           ;mcc_generated_files/tmr5.c: 141:  } else {
 15589  00562C  D00C               	goto	l1120
 15590  00562E                     l4033:
 15591                           
 15592                           ;mcc_generated_files/tmr5.c: 143:   TMR5H = (timerVal >> 8);
 15593                           ;stkvar	_timerVal @ sp[(0)+-2]
 15594  00562E  0EFF               	movlw	255
 15595  005630  24E1               	addwf	fsr1l,w,c
 15596  005632  6ED9               	movwf	fsr2l,c
 15597  005634  0EFF               	movlw	255
 15598  005636  20E2               	addwfc	fsr1h,w,c
 15599  005638  6EDA               	movwf	fsr2h,c
 15600  00563A  50DF               	movf	indf2,w,c
 15601  00563C  6E99               	movwf	16281,c	;volatile
 15602                           
 15603                           ;mcc_generated_files/tmr5.c: 144:   TMR5L = timerVal;
 15604                           ;stkvar	_timerVal @ sp[(0)+-2]
 15605  00563E  0EFE               	movlw	-2
 15606  005640  006F FF8F FF98     	movff	plusw1,16280	;volatile
 15607  005646                     l1120:
 15608                           
 15609                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 15610  005646  52E5               	movf	postdec1,f,c
 15611  005648  52E5               	movf	postdec1,f,c
 15612  00564A  0012               	return		;funcret
 15613  00564C                     __end_of_TMR5_WriteTimer:
 15614                           	opt callstack 0
 15615                           
 15616 ;; *************** function _TMR5_CallBack *****************
 15617 ;; Defined at:
 15618 ;;		line 181 in file "mcc_generated_files/tmr5.c"
 15619 ;; Parameters:    Size  Location     Type
 15620 ;;		None
 15621 ;; Auto vars:     Size  Location     Type
 15622 ;;		None
 15623 ;; Return value:  Size  Location     Type
 15624 ;;                  1  [STACK] void 
 15625 ;; Registers used:
 15626 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 15627 ;; Tracked objects:
 15628 ;;		On entry : 0/39
 15629 ;;		On exit  : 0/0
 15630 ;;		Unchanged: 0/0
 15631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15636 ;;Total ram usage:        0 bytes
 15637 ;; Hardware stack levels used:    1
 15638 ;; Hardware stack levels required when called:    1
 15639 ;; This function calls:
 15640 ;;		Absolute function
 15641 ;;		_TMR5_DefaultInterruptHandler
 15642 ;; This function is called by:
 15643 ;;		_TMR5_ISR
 15644 ;; This function uses a reentrant model
 15645 ;;
 15646                           
 15647                           	psect	text110
 15648  005C9A                     __ptext110:
 15649                           	opt callstack 0
 15650  005C9A                     _TMR5_CallBack:
 15651                           	opt callstack 17
 15652                           
 15653                           ;mcc_generated_files/tmr5.c: 184:  if (TMR5_InterruptHandler) {
 15654                           
 15655                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15656                           ;incstack = 0
 15657  005C9A  5004               	movf	_TMR5_InterruptHandler,w,c
 15658  005C9C  1005               	iorwf	_TMR5_InterruptHandler+1,w,c
 15659  005C9E  1006               	iorwf	_TMR5_InterruptHandler+2,w,c
 15660  005CA0  B4D8               	btfsc	status,2,c
 15661  005CA2  0012               	return	
 15662                           
 15663                           ;mcc_generated_files/tmr5.c: 185:   TMR5_InterruptHandler();
 15664  005CA4  D801               	call	u164_48
 15665  005CA6  0012               	return	
 15666  005CA8                     u164_48:
 15667  005CA8  0005               	push	
 15668  005CAA  6EFA               	movwf	pclath,c
 15669  005CAC  5004               	movf	_TMR5_InterruptHandler,w,c
 15670  005CAE  6EFD               	movwf	tosl,c
 15671  005CB0  5005               	movf	_TMR5_InterruptHandler+1,w,c
 15672  005CB2  6EFE               	movwf	tosh,c
 15673  005CB4  5006               	movf	_TMR5_InterruptHandler+2,w,c
 15674  005CB6  6EFF               	movwf	tosu,c
 15675  005CB8  50FA               	movf	pclath,w,c
 15676  005CBA  0012               	return		;indir
 15677  005CBC                     __end_of_TMR5_CallBack:
 15678                           	opt callstack 0
 15679                           
 15680 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 15681 ;; Defined at:
 15682 ;;		line 194 in file "mcc_generated_files/tmr5.c"
 15683 ;; Parameters:    Size  Location     Type
 15684 ;;		None
 15685 ;; Auto vars:     Size  Location     Type
 15686 ;;		None
 15687 ;; Return value:  Size  Location     Type
 15688 ;;                  1  [STACK] void 
 15689 ;; Registers used:
 15690 ;;		wreg, status,2, status,0, btemp+11
 15691 ;; Tracked objects:
 15692 ;;		On entry : 0/39
 15693 ;;		On exit  : 0/0
 15694 ;;		Unchanged: 0/0
 15695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15700 ;;Total ram usage:        0 bytes
 15701 ;; Hardware stack levels used:    1
 15702 ;; This function calls:
 15703 ;;		Nothing
 15704 ;; This function is called by:
 15705 ;;		_TMR5_Initialize
 15706 ;;		_TMR5_CallBack
 15707 ;; This function uses a reentrant model
 15708 ;;
 15709                           
 15710                           	psect	text111
 15711  005DA2                     __ptext111:
 15712                           	opt callstack 0
 15713  005DA2                     _TMR5_DefaultInterruptHandler:
 15714                           	opt callstack 17
 15715                           
 15716                           ;mcc_generated_files/tmr5.c: 198:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 15717                           
 15718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15719                           ;incstack = 0
 15720  005DA2  A0BE               	btfss	16318,0,c	;volatile
 15721  005DA4  D002               	goto	u140_40
 15722  005DA6  0E01               	movlw	1
 15723  005DA8  D001               	goto	u140_46
 15724  005DAA                     u140_40:
 15725  005DAA  0E00               	movlw	0
 15726  005DAC                     u140_46:
 15727  005DAC  0AFF               	xorlw	255
 15728  005DAE  6E48               	movwf	btemp+11,c
 15729  005DB0  50BE               	movf	16318,w,c	;volatile
 15730  005DB2  1848               	xorwf	btemp+11,w,c
 15731  005DB4  0BFE               	andlw	-2
 15732  005DB6  1848               	xorwf	btemp+11,w,c
 15733  005DB8  6EBE               	movwf	16318,c	;volatile
 15734                           
 15735                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15736  005DBA  0012               	return		;funcret
 15737  005DBC                     __end_of_TMR5_DefaultInterruptHandler:
 15738                           	opt callstack 0
 15739                           
 15740                           ;
 15741                           ; Interrupt Vector Table @ 0x8
 15742                           ;
 15743                           
 15744                           	psect	ivt0x8
 15745  000008                     __pivt0x8:
 15746                           	opt callstack 0
 15747  000008                     ivt0x8_base:
 15748                           	opt callstack 0
 15749                           
 15750                           ; Vector 0 : SWINT
 15751  000008  17A8               	dw	_Default_ISR shr (0+2)
 15752                           
 15753                           ; Vector 1 : HLVD
 15754  00000A  17A8               	dw	_Default_ISR shr (0+2)
 15755                           
 15756                           ; Vector 2 : OSF
 15757  00000C  17A8               	dw	_Default_ISR shr (0+2)
 15758                           
 15759                           ; Vector 3 : CSW
 15760  00000E  17A8               	dw	_Default_ISR shr (0+2)
 15761                           
 15762                           ; Vector 4 : NVM
 15763  000010  17A8               	dw	_Default_ISR shr (0+2)
 15764                           
 15765                           ; Vector 5 : SCAN
 15766  000012  17A8               	dw	_Default_ISR shr (0+2)
 15767                           
 15768                           ; Vector 6 : CRC
 15769  000014  17A8               	dw	_Default_ISR shr (0+2)
 15770                           
 15771                           ; Vector 7 : IOC
 15772  000016  17A8               	dw	_Default_ISR shr (0+2)
 15773                           
 15774                           ; Vector 8 : INT0
 15775  000018  1783               	dw	_INT0_ISR shr (0+2)
 15776                           
 15777                           ; Vector 9 : ZCD
 15778  00001A  17A8               	dw	_Default_ISR shr (0+2)
 15779                           
 15780                           ; Vector 10 : AD
 15781  00001C  162B               	dw	_ADCC_ISR shr (0+2)
 15782                           
 15783                           ; Vector 11 : ADT
 15784  00001E  17A8               	dw	_Default_ISR shr (0+2)
 15785                           
 15786                           ; Vector 12 : CMP1
 15787  000020  17A8               	dw	_Default_ISR shr (0+2)
 15788                           
 15789                           ; Vector 13 : SMT1
 15790  000022  17A8               	dw	_Default_ISR shr (0+2)
 15791                           
 15792                           ; Vector 14 : SMT1PRA
 15793  000024  17A8               	dw	_Default_ISR shr (0+2)
 15794                           
 15795                           ; Vector 15 : SMT1PRW
 15796  000026  17A8               	dw	_Default_ISR shr (0+2)
 15797                           
 15798                           ; Vector 16 : DMA1SCNT
 15799  000028  178F               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 15800                           
 15801                           ; Vector 17 : DMA1DCNT
 15802  00002A  1799               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 15803                           
 15804                           ; Vector 18 : DMA1OR
 15805  00002C  1793               	dw	_DMA1_DMAOR_ISR shr (0+2)
 15806                           
 15807                           ; Vector 19 : DMA1A
 15808  00002E  179C               	dw	_DMA1_DMAA_ISR shr (0+2)
 15809                           
 15810                           ; Vector 20 : SPI1RX
 15811  000030  17A8               	dw	_Default_ISR shr (0+2)
 15812                           
 15813                           ; Vector 21 : SPI1TX
 15814  000032  17A8               	dw	_Default_ISR shr (0+2)
 15815                           
 15816                           ; Vector 22 : SPI1
 15817  000034  17A8               	dw	_Default_ISR shr (0+2)
 15818                           
 15819                           ; Vector 23 : I2C1RX
 15820  000036  17A8               	dw	_Default_ISR shr (0+2)
 15821                           
 15822                           ; Vector 24 : I2C1TX
 15823  000038  17A8               	dw	_Default_ISR shr (0+2)
 15824                           
 15825                           ; Vector 25 : I2C1
 15826  00003A  17A8               	dw	_Default_ISR shr (0+2)
 15827                           
 15828                           ; Vector 26 : I2C1E
 15829  00003C  17A8               	dw	_Default_ISR shr (0+2)
 15830                           
 15831                           ; Vector 27 : U1RX
 15832  00003E  16D6               	dw	_UART1_rx_vect_isr shr (0+2)
 15833                           
 15834                           ; Vector 28 : U1TX
 15835  000040  16CC               	dw	_UART1_tx_vect_isr shr (0+2)
 15836                           
 15837                           ; Vector 29 : U1E
 15838  000042  17A8               	dw	_Default_ISR shr (0+2)
 15839                           
 15840                           ; Vector 30 : U1
 15841  000044  17A8               	dw	_Default_ISR shr (0+2)
 15842                           
 15843                           ; Vector 31 : TMR0
 15844  000046  17A8               	dw	_Default_ISR shr (0+2)
 15845                           
 15846                           ; Vector 32 : TMR1
 15847  000048  17A8               	dw	_Default_ISR shr (0+2)
 15848                           
 15849                           ; Vector 33 : TMR1G
 15850  00004A  17A8               	dw	_Default_ISR shr (0+2)
 15851                           
 15852                           ; Vector 34 : TMR2
 15853  00004C  17A8               	dw	_Default_ISR shr (0+2)
 15854                           
 15855                           ; Vector 35 : CCP1
 15856  00004E  17A8               	dw	_Default_ISR shr (0+2)
 15857                           
 15858                           ; Vector 36 : Undefined
 15859  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 15860                           
 15861                           ; Vector 37 : NCO1
 15862  000052  17A8               	dw	_Default_ISR shr (0+2)
 15863                           
 15864                           ; Vector 38 : CWG1
 15865  000054  17A8               	dw	_Default_ISR shr (0+2)
 15866                           
 15867                           ; Vector 39 : CLC1
 15868  000056  17A8               	dw	_Default_ISR shr (0+2)
 15869                           
 15870                           ; Vector 40 : INT1
 15871  000058  1787               	dw	_INT1_ISR shr (0+2)
 15872                           
 15873                           ; Vector 41 : CMP2
 15874  00005A  17A8               	dw	_Default_ISR shr (0+2)
 15875                           
 15876                           ; Vector 42 : DMA2SCNT
 15877  00005C  17A8               	dw	_Default_ISR shr (0+2)
 15878                           
 15879                           ; Vector 43 : DMA2DCNT
 15880  00005E  17A8               	dw	_Default_ISR shr (0+2)
 15881                           
 15882                           ; Vector 44 : DMA2OR
 15883  000060  17A8               	dw	_Default_ISR shr (0+2)
 15884                           
 15885                           ; Vector 45 : DMA2A
 15886  000062  17A8               	dw	_Default_ISR shr (0+2)
 15887                           
 15888                           ; Vector 46 : I2C2RX
 15889  000064  17A8               	dw	_Default_ISR shr (0+2)
 15890                           
 15891                           ; Vector 47 : I2C2TX
 15892  000066  17A8               	dw	_Default_ISR shr (0+2)
 15893                           
 15894                           ; Vector 48 : I2C2
 15895  000068  17A8               	dw	_Default_ISR shr (0+2)
 15896                           
 15897                           ; Vector 49 : I2C2E
 15898  00006A  17A8               	dw	_Default_ISR shr (0+2)
 15899                           
 15900                           ; Vector 50 : U2RX
 15901  00006C  16EA               	dw	_UART2_rx_vect_isr shr (0+2)
 15902                           
 15903                           ; Vector 51 : U2TX
 15904  00006E  16E0               	dw	_UART2_tx_vect_isr shr (0+2)
 15905                           
 15906                           ; Vector 52 : U2E
 15907  000070  17A8               	dw	_Default_ISR shr (0+2)
 15908                           
 15909                           ; Vector 53 : U2
 15910  000072  17A8               	dw	_Default_ISR shr (0+2)
 15911                           
 15912                           ; Vector 54 : TMR3
 15913  000074  17A8               	dw	_Default_ISR shr (0+2)
 15914                           
 15915                           ; Vector 55 : TMR3G
 15916  000076  17A8               	dw	_Default_ISR shr (0+2)
 15917                           
 15918                           ; Vector 56 : TMR4
 15919  000078  17A8               	dw	_Default_ISR shr (0+2)
 15920                           
 15921                           ; Vector 57 : CCP2
 15922  00007A  17A8               	dw	_Default_ISR shr (0+2)
 15923                           
 15924                           ; Vector 58 : Undefined
 15925  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 15926                           
 15927                           ; Vector 59 : CWG2
 15928  00007E  17A8               	dw	_Default_ISR shr (0+2)
 15929                           
 15930                           ; Vector 60 : CLC2
 15931  000080  17A8               	dw	_Default_ISR shr (0+2)
 15932                           
 15933                           ; Vector 61 : INT2
 15934  000082  178B               	dw	_INT2_ISR shr (0+2)
 15935                           
 15936                           ; Vector 62 : Undefined
 15937  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 15938                           
 15939                           ; Vector 63 : Undefined
 15940  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 15941                           
 15942                           ; Vector 64 : Undefined
 15943  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 15944                           
 15945                           ; Vector 65 : Undefined
 15946  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 15947                           
 15948                           ; Vector 66 : Undefined
 15949  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 15950                           
 15951                           ; Vector 67 : Undefined
 15952  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 15953                           
 15954                           ; Vector 68 : Undefined
 15955  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 15956                           
 15957                           ; Vector 69 : Undefined
 15958  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 15959                           
 15960                           ; Vector 70 : TMR5
 15961  000094  15B2               	dw	_TMR5_ISR shr (0+2)
 15962                           
 15963                           ; Vector 71 : TMR5G
 15964  000096  17A8               	dw	_Default_ISR shr (0+2)
 15965                           
 15966                           ; Vector 72 : TMR6
 15967  000098  1762               	dw	_TMR6_ISR shr (0+2)
 15968                           
 15969                           ; Vector 73 : CCP3
 15970  00009A  17A8               	dw	_Default_ISR shr (0+2)
 15971                           
 15972                           ; Vector 74 : CWG3
 15973  00009C  17A8               	dw	_Default_ISR shr (0+2)
 15974                           
 15975                           ; Vector 75 : CLC3
 15976  00009E  17A8               	dw	_Default_ISR shr (0+2)
 15977                           
 15978                           ; Vector 76 : Undefined
 15979  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 15980                           
 15981                           ; Vector 77 : Undefined
 15982  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 15983                           
 15984                           ; Vector 78 : Undefined
 15985  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 15986                           
 15987                           ; Vector 79 : Undefined
 15988  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 15989                           
 15990                           ; Vector 80 : CCP4
 15991  0000A8  17A8               	dw	_Default_ISR shr (0+2)
 15992                           
 15993                           ; Vector 81 : CLC4
 15994  0000AA  17A8               	dw	_Default_ISR shr (0+2)
 15995  0000AC                     ivt0x8_undefint:
 15996                           	opt callstack 0
 15997  0000AC  00FF               	reset	
 15998                           
 15999                           	psect	text112
 16000  000000                     __ptext112:
 16001                           	opt callstack 0
 16002                           
 16003                           	psect	rparam
 16004  0000                     
 16005                           	psect	temp
 16006  00003D                     btemp:
 16007                           	opt callstack 0
 16008  00003D                     	ds	32
 16009  0000                     wtemp0	set	btemp
 16010  0000                     wtemp1	set	btemp+2
 16011  0000                     wtemp2	set	btemp+4
 16012  0000                     wtemp3	set	btemp+6
 16013  0000                     wtemp4	set	btemp+8
 16014  0000                     wtemp5	set	btemp+10
 16015  0000                     wtemp8	set	btemp+1
 16016  0000                     ttemp0	set	btemp
 16017  0000                     ttemp1	set	btemp+3
 16018  0000                     ttemp2	set	btemp+6
 16019  0000                     ttemp3	set	btemp+9
 16020  0000                     ttemp5	set	btemp+1
 16021  0000                     ttemp6	set	btemp+4
 16022  0000                     ttemp7	set	btemp+8
 16023  0000                     ltemp0	set	btemp
 16024  0000                     ltemp1	set	btemp+4
 16025  0000                     ltemp2	set	btemp+8
 16026  0000                     lltemp0	set	btemp
 16027  0000                     lltemp1	set	btemp+8
 16028  0000                     lltemp2	set	btemp+16
 16029  0000                     lltemp3	set	btemp+24
 16030                           tosu	equ	0x3FFF
 16031                           tosh	equ	0x3FFE
 16032                           tosl	equ	0x3FFD
 16033                           stkptr	equ	0x3FFC
 16034                           pclatu	equ	0x3FFB
 16035                           pclath	equ	0x3FFA
 16036                           pcl	equ	0x3FF9
 16037                           tblptru	equ	0x3FF8
 16038                           tblptrh	equ	0x3FF7
 16039                           tblptrl	equ	0x3FF6
 16040                           tablat	equ	0x3FF5
 16041                           prodh	equ	0x3FF4
 16042                           prodl	equ	0x3FF3
 16043                           indf0	equ	0x3FEF
 16044                           postinc0	equ	0x3FEE
 16045                           postdec0	equ	0x3FED
 16046                           preinc0	equ	0x3FEC
 16047                           plusw0	equ	0x3FEB
 16048                           fsr0h	equ	0x3FEA
 16049                           fsr0l	equ	0x3FE9
 16050                           wreg	equ	0x3FE8
 16051                           indf1	equ	0x3FE7
 16052                           postinc1	equ	0x3FE6
 16053                           postdec1	equ	0x3FE5
 16054                           preinc1	equ	0x3FE4
 16055                           plusw1	equ	0x3FE3
 16056                           fsr1h	equ	0x3FE2
 16057                           fsr1l	equ	0x3FE1
 16058                           bsr	equ	0x3FE0
 16059                           indf2	equ	0x3FDF
 16060                           postinc2	equ	0x3FDE
 16061                           postdec2	equ	0x3FDD
 16062                           preinc2	equ	0x3FDC
 16063                           plusw2	equ	0x3FDB
 16064                           fsr2h	equ	0x3FDA
 16065                           fsr2l	equ	0x3FD9
 16066                           status	equ	0x3FD8


Data Sizes:
    Strings     110
    Constant    0
    Data        280
    BSS         603
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      2      62
    BANK0           160      0     160
    BANK1           256      0     225
    BANK2           256      0     192
    BANK3           256      0     246
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK0[32]), 
		 -> V(BANK0[80]), 

    a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK0[32]), 
		 -> V(BANK0[80]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_5(CODE[23]), STR_4(CODE[6]), STR_3(CODE[14]), STR_2(CODE[12]), 
		 -> STR_1(CODE[61]), 

    s	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4264_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[23]), 
		 -> STR_4(CODE[6]), STR_3(CODE[14]), STR_2(CODE[12]), STR_1(CODE[61]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[23]), 
		 -> STR_4(CODE[6]), STR_3(CODE[14]), STR_2(CODE[12]), STR_1(CODE[61]), 

    cfmt	PTR unsigned char  size(1) Largest target is 61
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[23]), 
		 -> STR_4(CODE[6]), STR_3(CODE[14]), STR_2(CODE[12]), STR_1(CODE[61]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), V(BANK0[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), V(BANK0[80]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), V(BANK0[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    F16582.header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    k	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    t_link	PTR enum E16164 size(1) Largest target is 80
		 -> V(BANK0[80]), 

    S3543response_type$header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    block.header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    r_link	PTR enum E16164 size(1) Largest target is 80
		 -> V(BANK0[80]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10.block(BANK1[10]), H10(BANK1[65]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    strPtr	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1984spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1984spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   69905
                  _SYSTEM_Initialize
                        _UART1_Write
                   _UART1_put_buffer
                             _WaitMs
                     _block_checksum
                _eaDogM_WriteCommand
                 _eaDogM_WriteString
            _eaDogM_WriteStringAtPos
                       _init_display
                         _r_protocol
                          _secs_send
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           5     4      1    1748
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                             _WaitMs
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      2     0      2      88
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35     9     26   11789
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1    1605
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                            9     5      4     837
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (3) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   25832
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1   12950
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   12820
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1   12789
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3   11564
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5   11459
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           41    35      6   11163
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (5) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     4      5    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3     674
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (9) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     9      1     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      22
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            1     1      0      60
                                              1 COMRAM     1     1      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _UART1_Write
   _UART1_put_buffer
   _WaitMs
     _StartTimer
     _TimerDone
   _block_checksum
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteString
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _ringBufS_flush
       _memset
     _start_lcd
     _strlen
     _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _secs_send
     _UART1_Write
     _UART1_is_tx_ready
     _UART1_put_buffer
     _block_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _WaitMs
       _StartTimer
       _TimerDone
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F6      11       96.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C0       9       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E1       7       87.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      2      3E       1       98.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     375      58        0.0%
DATA                 0      0     375       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Mar  8 18:39:27 2019

                    _SPI1_Exchange8bit 5CFC                                      _V 0089  
     __end_of_TMR5_SetInterruptHandler 5A8E                            __CFG_CP$OFF 000000  
              __size_of_ringBufS_flush 0092                            __CFG_LVP$ON 000000  
                                  _H10 0100                                    _H12 0192  
                                  _H13 0182                                    _H14 0171  
                                  _H24 0141                                    _H18 015C  
                                  _H53 0386                                    l194 5DE2  
                                  l572 56B4                                    l717 5850  
                                  l579 5662                                    l597 5824  
                                  l847 5D0A                                    _GIE 01FE97  
                                  _abs 54B4                                    _pad 46BA  
              __size_of_PMD_Initialize 0014                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 5C12  
                         _run_checksum 58D6                     _UART1_Transmit_ISR 57FE  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 5C34  
                         __CFG_ZCD$OFF 000000                                   l1120 5646  
                                 l1213 3496                                   l1218 333C  
                                 l1227 33EC                                   l1430 4C48  
                                 l1504 3A14                                   l1434 4EAA  
                                 l1530 40D0                                   l1294 532C  
                                 l1712 2BE0                                   l4033 562E  
                                 l1644 470E                                   l1558 4492  
                                 l2464 3EB6                                   l2536 46B0  
                                 l1664 2824                                   l5017 53BE  
                                 l2457 54F4                                   l1762 273C  
                                 l1691 35A2                                   l2574 4F2C  
                                 l2488 40BC                                   l5241 3F52  
                                 l5251 4012                                   l5243 3F6A  
                                 l5235 3F26                                   l5227 3EB2  
                                 l6043 58E2                                   l6107 4550  
                                 l6051 44A2                                   l5261 40AC  
                                 l5245 3F70                                   l7005 4F54  
                                 l6117 4570                                   l6207 5CD8  
                                 l5247 3FAC                                   l7007 4F80  
                                 l7031 2814                                   l5407 533E  
                                 l6063 44C6                                   l6055 44AE  
                                 l6119 4596                                   l7113 3644  
                                 l7105 35D8                                   l7201 2EE8  
                                 l6219 584C                                   l7043 287C  
                                 l7123 36DE                                   l5507 5878  
                                 l6091 4536                                   l6075 44E4  
                                 l6067 44D2                                   l6059 44BA  
                                 l6229 5CF8                                   l7053 2A82  
                                 l7109 3614                                   l7141 2BD0  
                                 l6077 4510                                   l7039 285E  
                                 l7127 371A                                   l7119 36B2  
                                 l7311 267A                                   l7231 20EA  
                                 l7223 20E2                                   l7215 20C8  
                                 l6095 4542                                   l7073 2B34  
                                 l4921 4F1C                                   l7161 2CA6  
                                 l7153 2C46                                   l7321 26D2  
                                 l7217 20CA                                   l7241 2158  
                                 l6089 451C                                   l7147 2C0A  
                                 l7235 20EE                                   l7227 20E6  
                                 l7219 20DE                                   l6197 5820  
                                 l4853 4FE0                                   l7077 2B64  
                                 l7317 26CE                                   l5493 5682  
                                 l4855 5002                                   l4943 3810  
                                 l7255 21F4                                   l7239 2108  
                                 l7327 26EE                                   l5903 568C  
                                 l5567 5BE8                                   l5495 5684  
                                 l4961 3928                                   l4937 37BC  
                                 l7089 3524                                   l7177 2D9C  
                                 l7185 2E16                                   l7257 221A  
                                 l7353 2FB8                                   l7601 3A5C  
                                 l7275 232A                                   l7259 222C  
                                 l7427 4B46                                   l7451 4362  
                                 l5933 5570                                   l4949 3856  
                                 l4981 3CB6                                   l7373 318E  
                                 l7365 30E0                                   l7287 2460  
                                 l7359 3076                                   l7471 4464  
                                 l7463 442A                                   l7631 3B38  
                                 l7623 3AE6                                   l7607 3A7C  
                                 l5929 5546                                   l7297 2508  
                                 l7385 4DA4                                   l7473 448C  
                                 l7713 41C4                                   l4899 54E4  
                                 l7387 4DE4                                   l7395 48C6  
                                 l7459 4410                                   l7643 3BB6  
                                 l7635 3B68                                   l7627 3B0A  
                                 l7619 3AB0                                   l7715 41D0  
                                 l7707 4170                                   l4997 3DEA  
                                 l4989 3D3E                                   l7661 3BF6  
                                 l7581 39DE                                   l7741 4264  
                                 l7733 4232                                   l7821 33BC  
                                 l7399 4938                                   l7655 3BDC  
                                 l7647 3BBA                                   l7743 4272  
                                 l7727 4220                                   l7751 428C  
                                 l7807 335A                                   l7657 3BEA  
                                 l7665 3C04                                   l7745 4276  
                                 l7753 42CE                                   l7825 33C4  
                                 l6963 45DE                                   l7659 3BEE  
                                 l7667 3C46                                   l7747 427E  
                                 l7691 410E                                   l7851 3460  
                                 l7843 3416                                   l7771 3220  
                                 l6973 504E                                   l7829 33DC  
                                 l7773 3226                                   l6983 46DE  
                                 l5999 5896                                   l7855 3464  
                                 l6977 508C                                   l6993 4754  
                                 l7697 412E                                   l6987 4706  
                                 l6997 4796                                   l6989 4718  
                                 STR_1 2001                                   STR_2 2032  
                                 STR_3 2055                                   STR_4 2063  
                                 STR_5 203E                                   STR_6 206C  
                                 STR_7 2069                                   u2200 4EDC  
                                 u2220 57C6                                   u2300 3882  
                                 u2140 54C8                                   _LATA 003FBA  
                                 u2230 57C8                                   u2150 5796  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 u2320 3960                                   u2400 3D38  
                                 u4000 2776                                   u2160 5798  
                                 u2080 5766                                   _LATD 003FBD  
                                 _LATE 003FBE                                   u2250 37B6  
                                 u2410 3D6A                                   u4010 2778  
                                 u2170 55BE                                   u2090 5768  
                                 _LATF 003FBF                                   u2340 39B2  
                                 u4100 2ADC                                   u2180 55C0  
                                 u4101 2ADA                                   u2270 380C  
                                 u2430 3E22                                   u4110 2AF0  
                                 u4030 27E8                                   u2190 4EDA  
                                 u3320 51A4                                   u4120 2AF4  
                                 u2281 3816                                   u2290 3850  
                                 u2450 3E74                                   u2370 3CB0  
                                 u4050 27FA                                   u4210 363A  
                                 u4140 2B0A                                   u4300 2CF2  
                                 u2470 539A                                   u2390 3D06  
                                 u4070 284A                                   u4310 2CF4  
                                 u2480 53BA                                   u4080 2A96  
                                 u4240 3740                                   u4400 2E8C  
                                 u3345 51D8                                   u3346 51DA  
                                 u3338 51A6                                   u4410 2E90  
                                 u4330 2D52                                   u4091 2AC6  
                                 u4340 2D54                                   u4260 2BB6  
                                 u4500 229A                                   u4360 2E12  
                                 u4370 2E32                                   u4290 2C9E  
                                 u4530 237A                                   _T6PR 003F93  
                                 u3900 45D2                                   u4620 3202  
                                 _PMD0 0039C0                                   u4381 2E62  
                                 u4365 2DF4                                   _PMD1 0039C1  
                                 u2950 3F22                                   u4390 2E78  
                                 _PMD2 0039C2                                   u4391 2E76  
                                 _PMD3 0039C3                                   u3920 464E  
                                 u4560 2558                                   u4480 2272  
                                 _PMD4 0039C4                                   _PMD5 0039C5  
                                 u2970 4056                                   u4490 2274  
                                 _PMD6 0039C6                                   _PMD7 0039C7  
                                 u2980 4058                                   u4660 4B36  
                                 u4670 435C                                   _PLLR 01CEE0  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                        _INT2_CallBack 5C56                       __end_of_ADCC_ISR 58D6  
                        __CFG_FCMEN$ON 000000                                   _dbuf 00D9  
                                 _atoi 3E98                                   _ctoa 4F36  
                                 _main 320C                                   _dtoa 2746  
                                 _prec 0026                                   _nout 0022  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 34B8                                   btemp 003D  
                                 _xtoa 2B9C      __size_of_INT2_SetInterruptHandler 0028  
                                 prodh 003FF4                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 002E  
            __end_of_SPI1_Exchange8bit 5D1A                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 5B58                           ___param_bank 000000  
           __size_of_UART1_is_rx_ready 0008                     ?_UART1_rx_vect_isr 005D  
           __size_of_UART1_is_tx_ready 0008                       __end_of_INT0_ISR 5E1A  
                     __end_of_INT1_ISR 5E2A                       __end_of_INT2_ISR 5E3A  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 4C50  
        __end_of_OSCILLATOR_Initialize 5DE8                                  PRLOCK 0039EF  
                      __end_of___aodiv 39DA                                  _ADCAP 003EF5  
                                _ADACT 003EFE                                  _ADCLK 003EFF  
                      __end_of___aomod 3E98                                  _ADPCH 003EF1  
                                _ADREF 003EFD                          __CFG_WDTE$OFF 000000  
                                _ADRPT 003EEC                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _U1P2L 003DEE  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                _T5CLK 003F9D                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95                                  _U1UIR 003DF8  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 005D  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
                                _TMR5H 003F99                                  _TMR5L 003F98  
                                _TRISA 003FC2                                  _TRISB 003FC3  
                                _TRISC 003FC4                                  _TRISD 003FC5  
                                _TRISE 003FC6                                  _TRISF 003FC7  
                          _Default_ISR 5EA0      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 5B30                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 5706                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 5DA2                           _DMA1CON1bits 003BFD  
                   r_protocol@rxData_l 0030                                  _flags 0028  
                                _fputc 45AE             __size_of_send_lcd_cmd_long 0028  
                      __end_of_isalpha 55CA                                  _fputs 503E  
                      __end_of_isdigit 57D2                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 005D                                  _width 0024  
                                _putch 5D6E                        __end_of_islower 5772  
                      __end_of_isspace 53CE               _INT1_SetInterruptHandler 5AB6  
                      __end_of_isupper 57A2                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 003D                                  ltemp1 0041  
                                ltemp2 0045               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  ttemp0 003D  
                                ttemp1 0040                                  ttemp2 0043  
                                ttemp3 0046                                  ttemp5 003E  
                                ttemp6 0041                                  ttemp7 0045  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 5A16  
          _UART1_SetRxInterruptHandler 59EE                                  wtemp0 003D  
                                wtemp1 003F                                  wtemp2 0041  
                                wtemp3 0043                                  wtemp4 0045  
                                wtemp5 0047                                  wtemp8 003E  
                      __end_of_sprintf 4A46                        __end_of_toupper 4F36  
                  ??_UART1_tx_vect_isr 005D              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 5B7E               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 54FA                  __end_of_ringBufS_init 5976  
                      __initialization 4A46                      _UART2_rx_vect_isr 5BA8  
                         __end_of_atoi 40C6                           __end_of_ctoa 4FBA  
                         __end_of_main 34B8                           __end_of_dtoa 2B9C  
                         __end_of_stoa 375A                           __end_of_xtoa 2F20  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005D  
             _TMR5_SetInterruptHandler 5A66                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 005D              __end_of_UART1_tx_vect_isr 5B56  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 5A16  
                     _UART1_Initialize 51FC                      _UART2_tx_vect_isr 5B80  
                   _UART2_Transmit_ISR 582A                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 005D  
                               _MD1SRC 003CFC                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RA4PPS 003A04  
                               _RA5PPS 003A05                                 _RA6PPS 003A06  
                               _RC3PPS 003A13                                 _RB6PPS 003A0E  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                               i2l1137 56FE                         __CFG_WDTCCS$SC 000000  
                               u140_40 5DAA                                 u140_46 5DAC  
                               u151_48 5C42                                 u153_48 5C64  
                               u164_48 5CA8                                 _SCANPR 0039F7  
                               u149_48 5C20                                 u354_48 5C86  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               _IVTADU 00389F           __size_of_eaDogM_WriteCommand 000E  
                               _OSCFRQ 0039DF               __end_of_send_lcd_cmd_dma 541E  
                  ??_UART2_tx_vect_isr 005D              __end_of_UART2_rx_vect_isr 5BCE  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 5E58  
                     _UART2_Initialize 52C2                                 _WaitMs 5880  
 __size_of_ADCC_SetADIInterruptHandler 0028                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 4E20                                 _memset 2F20  
                               clear_0 4AB2                                 clear_1 4ABE  
                               clear_2 4ACA                                 clear_3 4AD6  
                               clear_4 4AE2                                 _printf 5260  
                   _eaDogM_WriteString 4AFA                              ?_ADCC_ISR 005D  
                               _strlen 4FBA                     __size_of_TimerDone 0022  
                      _ADCC_Initialize 546A                         _PMD_Initialize 5DE8  
 __end_of_INT2_DefaultInterruptHandler 5EAC  __size_of_INT2_DefaultInterruptHandler 0002  
         _INT2_DefaultInterruptHandler 5EAA              __end_of_UART2_tx_vect_isr 5BA6  
                               lltemp0 003D                                 lltemp1 0045  
                               lltemp2 004D                                 lltemp3 0055  
                         __mediumconst 0000                                 tblptrh 003FF7  
                               tblptrl 003FF6                                 tblptru 003FF8  
                     __end_of_wdtdelay 537C                       __end_of_vfprintf 4E20  
                           _StartTimer 5706                        _CLC1_Initialize 5BF0  
        __size_of_INTERRUPT_Initialize 0066                __end_of_TMR5_Initialize 5540  
                    _SYSTEM_Initialize 55CA                             __accesstop 0060  
              __end_of__initialization 4AF4                              ?_INT0_ISR 005D  
                            ?_INT1_ISR 005D                              ?_INT2_ISR 005D  
            __end_of_CLKREF_Initialize 5E62                          ___rparam_used 000001  
           __size_of_UART1_rx_vect_isr 0026                        _TMR5_WriteTimer 560C  
               __end_of_ringBufS_flush 4EB2                         __pcstackCOMRAM 005D  
                           ___inthi_sp 0D50                           __pidataBANK0 5E8A  
                         __pidataBANK1 4C50                           __pidataBANK3 50BC  
                            ?_TMR5_ISR 005D                              ?_TMR6_ISR 005D  
                       ivt0x8_undefint 00AC                          __end_of_fputc 46BA  
                        __end_of_fputs 50BC                  __end_of_TMR5_CallBack 5CBC  
                        __end_of_putch 5D88                __end_of_TMR6_Initialize 5A3E  
               __end_of_PMD_Initialize 5DFC                __size_of_block_checksum 00D2  
                           ??_ADCC_ISR 005D                  __end_of_TMR6_CallBack 5C9A  
          __size_of_EXT_INT_Initialize 004C             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 5E70       __end_of_INT2_SetInterruptHandler 5AB6  
             _UART2_RxInterruptHandler 0016              __end_of_SYSTEM_Initialize 560C  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                       _DSM_Initialize 5D52                             __pbssBANK0 0060  
                           __pbssBANK1 01A1                             __pbssBANK2 0200  
                           __pbssBANK3 0300                  _INT0_InterruptHandler 001F  
                           ??_INT0_ISR 005D                             ??_INT1_ISR 005D  
                           ??_INT2_ISR 005D                      __end_of_TimerDone 5BF0  
                     _DMA1_DMADCNT_ISR 5E64              __size_of_UART1_put_buffer 002A  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                __end_of_wait_lcd_done 5D36                        __CFG_PPS1WAY$ON 000000  
     __end_of_TMR6_SetInterruptHandler 5A66                __end_of_ADCC_Initialize 54B4  
                           ??_TMR5_ISR 005E                             ??_TMR6_ISR 005D  
                   __size_of_secs_send 01B8                                _CLC1CON 003C74  
                              _CLC1POL 003C75                                _DMA1DSA 003BF0  
                              _DMA1DSZ 003BEE                                _DMA1SSA 003BF9  
                              _DMA1SSZ 003BF7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                                _MD1CARH 003CFE  
                              _MD1CARL 003CFD                      _UART1_Receive_ISR 5CBC  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
                              _NCO1CLK 003F3F                         ?_DMA1_DMAA_ISR 005D  
                     _DMA1_DMASCNT_ISR 5E3C                                _NCO1CON 003F3E  
                              _U1ERRIE 003DFA                                _U1ERRIR 003DF9  
              __end_of_CLC1_Initialize 5C12                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                              _INT2PPS 003AC2                           ?_Default_ISR 005D  
                 __size_of_UART1_Write 003E             __size_of_UART2_tx_vect_isr 0026  
                              _U1RXPPS 003AE5                                _U2RXPPS 003AE8  
                              _OSCCON1 0039D9                                _OSCCON3 0039DB  
                              _IVTLOCK 003FD4                     __size_of_vfpfcnvrt 06D6  
                              _SPI1CLK 003D1C                                _SPI1RXB 003D10  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
               __end_of_DSM_Initialize 5D6E                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
              __end_of_TMR5_WriteTimer 564C                     __end_of_UART1_Read 56C8  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000C                                __Hparam 0000  
                              __Lparam 0000               __end_of_UART1_Initialize 5260  
                      __size_of_WaitMs 002A                                ___aodiv 375A  
                              ___aomod 3C58              __end_of_UART1_Receive_ISR 5CDC  
                         __psmallconst 2000                   __end_of_init_display 48AC  
                              __pcinit 4A46                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 5DFC                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 320C                                __ptext1 40C6  
                              __ptext2 449C                                __ptext3 497E  
                              __ptext4 39DA                                __ptext5 42E4  
                              __ptext6 48AC                                __ptext7 5856  
                              __ptext8 5E7A                                __ptext9 564C  
                    _UART2_Receive_ISR 5CDC                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 0084  
                              us235999 39C4                                us246999 3E86  
                              us416999 34CA                  _OSCILLATOR_Initialize 5DD2  
                              us428999 2C1C                           __size_of_abs 0046  
                              _r_block 0060                           __size_of_pad 0108  
                              _isalpha 5586                                us399999 2760  
                              _isdigit 57A2                                _islower 5742  
                              _isspace 537C                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 5320  
                              _isupper 5772             __size_of_SYSTEM_Initialize 0042  
                              _sprintf 497E                                _toupper 4EB2  
                 end_of_initialization 4AF4                      __end_of_secs_send 449C  
             _INT2_SetInterruptHandler 5A8E               __size_of_secs_II_message 0112  
                           _r_protocol 39DA    __end_of_UART1_SetTxInterruptHandler 59EE  
          _UART1_SetTxInterruptHandler 59C6    __end_of_UART2_SetRxInterruptHandler 59C6  
          _UART2_SetRxInterruptHandler 599E                             _t_protocol 40C6  
                    __end_of_vfpfcnvrt 2746                              _SPI1TCNTL 003D12  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE                    __size_of_StartTimer 003C  
                    __end_of_start_lcd 5E9E              __end_of_UART2_Receive_ISR 5CFC  
                       wdtdelay@dcount 0085                  __CFG_WDTCPS$WDTCPS_31 000000  
                      ??_DMA1_DMAA_ISR 005E                         _block_checksum 48AC  
                _INT1_InterruptHandler 001C               _TMR6_SetInterruptHandler 5A3E  
                _TMR5_InterruptHandler 0004   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 002A    __end_of_ADCC_SetADIInterruptHandler 5B2E  
          _ADCC_SetADIInterruptHandler 5B06                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 512C  
                      _SPI1_Initialize 5DBC                       _UART1_put_buffer 5856  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                    __size_of_INT2_ISR 000E                         __end_of_WaitMs 58AA  
         __end_of_INTERRUPT_Initialize 51FC                 __end_of_block_checksum 497E  
 __end_of_INT0_DefaultInterruptHandler 5EA8  __size_of_INT0_DefaultInterruptHandler 0002  
         _INT0_DefaultInterruptHandler 5EA6             __size_of_UART1_Receive_ISR 0020  
                    __size_of_TMR5_ISR 003E                      __size_of_TMR6_ISR 001A  
          __size_of_UART2_Transmit_ISR 002C                         __end_of_memset 320C  
                       __end_of_printf 52C2               __end_of_DMA1_DMADCNT_ISR 5E6E  
                __end_of_INT0_CallBack 5C34                         __end_of_strlen 503E  
                  start_initialization 4A46   __end_of_TMR5_DefaultInterruptHandler 5DBC  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 5DA2  
      __size_of_PIN_MANAGER_Initialize 009A                            __end_of_abs 54FA  
                __end_of_INT1_CallBack 5C56                            __end_of_pad 47C2  
                 __size_of_Default_ISR 0006                   __end_of_send_lcd_cmd 594E  
                           ivt0x8_base 0008                  __end_of_INT2_CallBack 5C78  
                 secs_II_message@block 0001                          _uart1RxBuffer 01A1  
                        _uart1TxBuffer 0280                          _uart2RxBuffer 0200  
             __end_of_DMA1_DMASCNT_ISR 5E4A                          _uart2TxBuffer 0240  
                       _DMA1_DMAOR_ISR 5E4C                       __CFG_LPBOREN$OFF 000000  
                __size_of_init_display 00EA            __size_of_eaDogM_WriteString 00AC  
                            _TimerDone 5BCE                          _ringBufS_init 594E  
                          _MD1CON0bits 003CFA                            _MD1CON1bits 003CFB  
                          __pdataBANK0 00F9                            __pdataBANK1 0100  
                          __pdataBANK3 0386             __size_of_UART2_Receive_ISR 0020  
           __end_of_EXT_INT_Initialize 546A                        run_checksum@sum 002A  
      __end_of_eaDogM_WriteStringAtPos 57FE                __end_of_DMA1_Initialize 5196  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 5B06  
              __end_of_SPI1_Initialize 5DD2               _UART1_RxInterruptHandler 0010  
             _UART2_TxInterruptHandler 0013              __size_of_ringBufS_put_dma 00AA  
                         _init_display 47C2                 __end_of_DMA1_DMAOR_ISR 5E58  
               __size_of_TMR5_CallBack 0022                  _INT2_InterruptHandler 0019  
                _TMR6_InterruptHandler 0007                 __size_of_TMR6_CallBack 0022  
               _PIN_MANAGER_Initialize 4CF2                   __end_of_wait_lcd_set 5E98  
                            __ptext100 5CDC                              __ptext101 5D88  
                            __ptext110 5C9A                              __ptext102 5C78  
                            __ptext111 5DA2                              __ptext103 5540  
                            __ptext112 0000                              __ptext104 5E3C  
                            __ptext105 5E64                              __ptext106 5E70  
                            __ptext107 5E4C                              __ptext108 56C8  
                            __ptext109 560C                     __end_of_StartTimer 5742  
                    __size_of_wdtdelay 005C                      __size_of_vfprintf 0094  
                             _ADCC_ISR 58AC                    __size_of_r_protocol 027E  
               __CFG_BBSIZE$BBSIZE_512 000000                            __smallconst 2000  
                             _CLC1GLS0 003C7A                               _CLC1GLS1 003C7B  
                             _CLC1GLS2 003C7C                               _CLC1GLS3 003C7D  
                             _CLC1SEL0 003C76                               _CLC1SEL1 003C77  
                             _CLC1SEL2 003C78                               _CLC1SEL3 003C79  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA1SIRQ 003BFF  
                          _NCO1CONbits 003F3E                    __size_of_t_protocol 021E  
               __size_of_wait_lcd_done 001C                         __size_of_fputc 010C  
                       __size_of_fputs 007E                               _NCO1ACCH 003F39  
                       __size_of_putch 001A                               _NCO1ACCL 003F38  
                             _NCO1ACCU 003F3A                   _INTERRUPT_Initialize 5196  
                             _T6CLKCON 003F96                               _NCO1INCH 003F3C  
                             _NCO1INCL 003F3B                               _NCO1INCU 003F3D  
                      ?_DMA1_DMAOR_ISR 005D                               _INT0_ISR 5E0C  
                             _INT1_ISR 5E1C                               _INT2_ISR 5E2C  
                             _LATCbits 003FBC                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                              _secs_send 42E4  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 0079  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR7bits 003987                               _IPR8bits 003988  
                             _PIE6bits 003996                               _PIE7bits 003997  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
                            _ring_buf1 0343                              _ring_buf2 0300  
                             _PIR1bits 0039A1                               _PIR2bits 0039A2  
                             _SPI1BAUD 003D19                               i2u196_40 56F6  
                             i2u187_48 58C2                               i2u381_48 5B92  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               i2u383_48 5BBA  
                             _PIR5bits 0039A5                               i2u377_48 5B42  
                             i2u379_48 5B6A                               _PIR7bits 0039A7  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
             __size_of_TMR5_Initialize 0046             __end_of_UART1_Transmit_ISR 582A  
                             _TMR5_ISR 56C8                               _TMR6_ISR 5D88  
                            _vfpfcnvrt 2070                           _SPI1INTFbits 003D1A  
                        _TMR5_CallBack 5C9A                              _start_lcd 5E98  
            __size_of_send_lcd_cmd_dma 0050                          _TMR6_CallBack 5C78  
             __end_of_UART1_put_buffer 5880                  __size_of_send_lcd_cmd 0028  
    __size_of_TMR5_SetInterruptHandler 0028                    __end_of_UART1_Write 568A  
             __size_of_TMR6_Initialize 0028                            _INTCON0bits 003FD2  
                            copy_data0 4A5A                              copy_data1 4A7C  
                            copy_data2 4A9E               _INT0_SetInterruptHandler 5ADE  
               _uart1TxBufferRemaining 003A    __end_of_UART2_SetTxInterruptHandler 599E  
          _UART2_SetTxInterruptHandler 5976                           _uart1RxCount 0037  
                         _uart2RxCount 0031                               __Hrparam 0000  
     __size_of_eaDogM_WriteStringAtPos 002C                __CFG_RSTOSC$EXTOSC_4PLL 000000  
                 __end_of_run_checksum 58FE                               __Lrparam 0000  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 5D1A  
                         _send_lcd_cmd 5926                       __size_of___aodiv 0280  
                     __size_of___aomod 0240                        _NCO1_Initialize 5D36  
                __end_of_DMA1_DMAA_ISR 5E7A   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 005D               __size_of_ADCC_Initialize 004A  
          __end_of_eaDogM_WriteCommand 5E0A                       __size_of_isalpha 0044  
                     __size_of_isdigit 0030                               __pivt0x8 0008  
                     __size_of_islower 0030                       __size_of_isspace 0052  
                   ??_DMA1_DMADCNT_ISR 005E                               __ptext10 58D6  
                             __ptext11 5880                               __ptext20 594E  
                             __ptext12 5BCE                               __ptext21 57D2  
                             __ptext13 5706                               __ptext30 2F20  
                             __ptext22 4AFA                               __ptext14 5E82  
                             __ptext31 5260                               __ptext23 5DFC  
                             __ptext15 568A                               __ptext40 2746  
                             __ptext32 4D8C                               __ptext24 53CE  
                             __ptext16 47C2                               __ptext41 54B4  
                             __ptext33 2070                               __ptext25 5E92  
                             __ptext17 58FE                               __ptext50 4BA6  
                             __ptext42 3C58                               __ptext34 2B9C  
                             __ptext26 5D1A                               __ptext18 5926  
                             __ptext51 3E98                               __ptext43 375A  
                             __ptext35 4EB2                               __ptext27 5320  
                             __ptext19 5CFC                               __ptext60 59EE  
                             __ptext52 537C                               __ptext44 4F36  
                             __ptext36 5742                               __ptext28 5E98  
                             __ptext61 5A16                               __ptext53 57A2  
                             __ptext45 46BA                               __ptext37 5772  
                             __ptext29 4E20                               __ptext70 5196  
                             __ptext62 5A3E                               __ptext54 55CA  
                             __ptext46 4FBA                               __ptext38 5586  
                             __ptext71 541E                               __ptext63 54FA  
                             __ptext55 52C2                               __ptext47 503E  
                             __ptext39 34B8                               __ptext80 5B06  
                             __ptext72 5A8E                               __ptext64 5A66  
                             __ptext56 5976                               __ptext48 45AE  
                             __ptext81 5E0C                               __ptext73 5AB6  
                             __ptext65 5DBC                               __ptext57 599E  
                             __ptext49 5D6E                               __ptext90 5EA0  
                             __ptext82 5C12                               __ptext74 5ADE  
                             __ptext66 5DE8                               __ptext58 51FC  
                             __ptext91 58AC                               __ptext83 5EA6  
                             __ptext75 5D52                               __ptext67 4CF2  
                             __ptext59 59C6                               __ptext92 5EAC  
                             __ptext84 5E1C                               __ptext76 512C  
                             __ptext68 5DD2                               __ptext93 5B30  
                             __ptext85 5C34                               __ptext77 5E58  
                             __ptext69 5D36                               __ptext94 57FE  
                             __ptext86 5EA8                               __ptext78 5BF0  
                             __ptext95 5B58                               __ptext87 5E2C  
                             __ptext79 546A                               __ptext96 5CBC  
                             __ptext88 5C56                               __ptext97 5B80  
                             __ptext89 5EAA                               __ptext98 582A  
                             __ptext99 5BA8                       __size_of_isupper 0030  
                      _secs_II_message 449C               __size_of_CLC1_Initialize 0022  
                     __size_of_sprintf 00C8                       __size_of_toupper 0084  
                     _ringBufS_put_dma 4BA6                          __size_of_atoi 022E  
                        __size_of_ctoa 0084                          __size_of_main 02AC  
                        __size_of_dtoa 0456                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02A2                          __size_of_xtoa 0384  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 005D  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 000A                              stoa@F1144 00F9  
                   ??_DMA1_DMASCNT_ISR 005E                               _spi_link 006D  
                             _wdtdelay 5320             __end_of_UART2_Transmit_ISR 5856  
                             _vfprintf 4D8C                      _UART1_is_rx_ready 5E82  
                          _UART1_Write 564C   __end_of_INT1_DefaultInterruptHandler 5EAA  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 5EA8  
                    _UART1_is_tx_ready 5E7A                          ??_Default_ISR 005D  
                   __end_of_r_protocol 3C58                            _uart1RxHead 0039  
                          _uart1TxHead 003C                            _uart2RxHead 0033  
                          _uart1RxTail 0038                            _uart2TxHead 0036  
                          _uart1TxTail 003B                            _uart2RxTail 0032  
                          _uart2TxTail 0035                           _wait_lcd_set 5E92  
                   _EXT_INT_Initialize 541E   __end_of_TMR6_DefaultInterruptHandler 5586  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 5540  
                   __end_of_t_protocol 42E4   __end_of_ADCC_DefaultInterruptHandler 5EAE  
__size_of_ADCC_DefaultInterruptHandler 0002           _ADCC_DefaultInterruptHandler 5EAC  
                             intlevel2 0000                      _send_lcd_cmd_long 58FE  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 4BA6  
              __end_of_NCO1_Initialize 5D52                 __size_of_INT0_CallBack 0022  
                           _SPI1SCKPPS 003ADE                             _SPI1SDIPPS 003ADF  
            __end_of_UART1_is_rx_ready 5E8A                             _UART1_Read 568A  
               __size_of_INT1_CallBack 0022              __end_of_UART1_is_tx_ready 5E82  
               __size_of_INT2_CallBack 0022                 _uart2TxBufferRemaining 0034  
                     _send_lcd_cmd_dma 53CE                  TMR5_ISR@CountCallBack 002C  
              __end_of_secs_II_message 45AE       __end_of_INT1_SetInterruptHandler 5ADE  
            __size_of_UART1_Initialize 0064                       ??_DMA1_DMAOR_ISR 005E  
             _UART1_TxInterruptHandler 000D              __end_of_send_lcd_cmd_long 5926  
                  __end_of_Default_ISR 5EA6         __end_of_PIN_MANAGER_Initialize 4D8C  
                __size_of_run_checksum 0028                _eaDogM_WriteStringAtPos 57D2  
            __size_of_UART2_Initialize 005E  
