

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 10 03:20:27 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=2
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1,inline
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1,inline
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=2
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=4,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=4,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=4,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1,group=1
   199                           	psect	text176,global,reloc=4,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=4,class=CODE,delta=1
   203                           	psect	text180,global,reloc=4,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=4,class=CODE,delta=1
   208                           	psect	text185,global,reloc=4,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=4,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=4,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=4,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=4,class=CODE,delta=1
   218                           	psect	text195,global,reloc=4,class=CODE,delta=1
   219                           	psect	text196,global,reloc=4,class=CODE,delta=1
   220                           	psect	text197,global,reloc=4,class=CODE,delta=1
   221                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   222                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   223                           	psect	text198,global,reloc=4,class=CODE,delta=1
   224                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   225                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   226  0000                     
   227                           ; Version 2.10
   228                           ; Generated 31/07/2019 GMT
   229                           ; 
   230                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   231                           ; All rights reserved.
   232                           ; 
   233                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   234                           ; 
   235                           ; Redistribution and use in source and binary forms, with or without modification, are
   236                           ; permitted provided that the following conditions are met:
   237                           ; 
   238                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   239                           ;        conditions and the following disclaimer.
   240                           ; 
   241                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   242                           ;        of conditions and the following disclaimer in the documentation and/or other
   243                           ;        materials provided with the distribution.
   244                           ; 
   245                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   246                           ;        software without specific prior written permission.
   247                           ; 
   248                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   249                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   250                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   251                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   252                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   253                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   254                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   255                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   256                           ; 
   257                           ; 
   258                           ; Code-generator required, PIC18F57K42 Definitions
   259                           ; 
   260                           ; SFR Addresses
   261  0000                     
   262 ;;_main$3811	offset	0
   263 ;;_main$3807	offset	2
   264 ;;_esr_temp	offset	4
   265 ;;_i_esr	offset	8
   266 ;;_shape	offset	10
   267 ;;_inp_index	offset	11
   268 ;;_k	offset	12
   269 ;;_j	offset	13
   270 ;;_i	offset	14
   271 ;;_mode	offset	15
   272 ;;_i_ror	offset	16
   273 ;;_s	offset=-2 (param)
   274 ;;_voltage	offset=-4 (param)
   275 ;;_voltage	offset=-4 (param)
   276 ;;_voltage	offset=-4 (param)
   277 ;;_set	offset=-1 (param)
   278 ;;_x	offset	0
   279 ;;_r_cal_ptr	offset	2
   280 ;;_y	offset	4
   281 ;;_crcVal_save	offset	6
   282 ;;_bAdd	offset=-2 (param)
   283 ;;_data	offset=-1 (param)
   284 ;;_cmd	offset=-1 (param)
   285 ;;_cmd	offset=-1 (param)
   286 ;;_data	offset=-1 (param)
   287 ;;__this	offset=-2 (param)
   288 ;;_soc	offset	0
   289 ;;_slot	offset	2
   290 ;;_cvoltage	offset=-4 (param)
   291 ;;_h	offset=-2 (param)
   292 ;;_h	offset=-2 (param)
   293 ;;_fsm	offset=-1 (param)
   294 ;;_mode	offset=-1 (param)
   295 ;;_mode	offset=-1 (param)
   296 ;;_cmd	offset=-1 (param)
   297 ;;_cp	offset	0
   298 ;;_cb	offset	4
   299 ;;_x	offset	8
   300 ;;_x	offset	0
   301 ;;_y	offset	2
   302 ;;_r_cal_ptr	offset	4
   303 ;;_crcVal	offset	5
   304 ;;_GIEBitValue	offset	0
   305 ;;_bAdd	offset=-2 (param)
   306 ;;_bData	offset=-3 (param)
   307 ;;_result	offset	0
   308 ;;_mask	offset	2
   309 ;;_reverse	offset=-1 (param)
   310 ;;_xorValue	offset=-3 (param)
   311 ;;_mask	offset	0
   312 ;;_reverse	offset	2
   313 ;;_crc	offset=-2 (param)
   314 ;;_data	offset=-1 (param)
   315 ;;_channel	offset=-1 (param)
   316 ;;_c	offset	0
   317 ;;_shape	offset=-1 (param)
   318 ;;_reset	offset=-2 (param)
   319 ;;_i	offset=-1 (param)
   320 ;;_mode	offset=-1 (param)
   321 ;;_cb	offset=-3 (param)
   322 ;;_cp	offset=-5 (param)
   323 ;;_value	offset=-2 (param)
   324 ;;_window	offset=-4 (param)
   325 ;;_standard	offset=-6 (param)
   326 ;;_i	offset	0
   327 ;;_h	offset=-2 (param)
   328 ;;_flipper	offset=-1 (param)
   329 ;;_f	offset	0
   330 ;;_ap	offset	6
   331 ;;_s	offset=-3 (param)
   332 ;;_fmt	offset=-5 (param)
   333 ;;_line	offset=-1 (param)
   334 ;;_vterm	offset=-2 (param)
   335 ;;_numMilliseconds	offset=-2 (param)
   336 ;;_vterm	offset=-1 (param)
   337 ;;_row	offset	0
   338 ;;_r	offset=-1 (param)
   339 ;;_c	offset=-2 (param)
   340 ;;_strPtr	offset=-4 (param)
   341 ;;_strPtr	offset=-1 (param)
   342 ;;_delay	offset=-4 (param)
   343 ;;_strPtr	offset=-1 (param)
   344 ;;_strPtr	offset=-2 (param)
   345 ;;__this	offset=-2 (param)
   346 ;;_clearBuffer	offset=-3 (param)
   347 ;;_s	offset	0
   348 ;;_k	offset	2
   349 ;;_dest	offset=-2 (param)
   350 ;;_c	offset=-4 (param)
   351 ;;_n	offset=-6 (param)
   352 ;;_ap	offset	0
   353 ;;_fmt	offset=-3 (param)
   354 ;;_cfmt	offset	0
   355 ;;_fp	offset=-2 (param)
   356 ;;_fmt	offset=-4 (param)
   357 ;;_ap	offset=-6 (param)
   358 ;;_vfpfcnvrt$6220	offset	0
   359 ;;_vfpfcnvrt$6231	offset	2
   360 ;;_vfpfcnvrt$6219	offset	4
   361 ;;_llu	offset	6
   362 ;;_ll	offset	14
   363 ;;_f	offset	22
   364 ;;_ct	offset	26
   365 ;;_cp	offset	29
   366 ;;_c	offset	31
   367 ;;_fp	offset=-2 (param)
   368 ;;_fmt	offset=-4 (param)
   369 ;;_ap	offset=-6 (param)
   370 ;;_xtoa$6205	offset	0
   371 ;;_xtoa$6204	offset	2
   372 ;;_n	offset	4
   373 ;;_c	offset	12
   374 ;;_i	offset	14
   375 ;;_w	offset	16
   376 ;;_p	offset	18
   377 ;;_fp	offset=-2 (param)
   378 ;;_d	offset=-10 (param)
   379 ;;_x	offset=-11 (param)
   380 ;;_toupper$7011	offset	0
   381 ;;_c	offset=-2 (param)
   382 ;;_c	offset=-2 (param)
   383 ;;_c	offset=-2 (param)
   384 ;;_n	offset	0
   385 ;;_i	offset	8
   386 ;;_w	offset	10
   387 ;;_p	offset	12
   388 ;;_fp	offset=-2 (param)
   389 ;;_d	offset=-10 (param)
   390 ;;_counter	offset	0
   391 ;;_dividend	offset=-8 (param)
   392 ;;_divisor	offset=-16 (param)
   393 ;;_quotient	offset	0
   394 ;;_counter	offset	8
   395 ;;_dividend	offset=-8 (param)
   396 ;;_divisor	offset=-16 (param)
   397 ;;_r	offset	0
   398 ;;_l	offset	2
   399 ;;__l	offset=-2 (param)
   400 ;;__r	offset=-4 (param)
   401 ;;_n	offset=-6 (param)
   402 ;;_nuls	offset	0
   403 ;;_l	offset	7
   404 ;;_p	offset	9
   405 ;;_cp	offset	11
   406 ;;_w	offset	13
   407 ;;_i	offset	15
   408 ;;_fp	offset=-2 (param)
   409 ;;_s	offset=-4 (param)
   410 ;;_efgtoa$6177	offset	0
   411 ;;_efgtoa$6176	offset	2
   412 ;;_efgtoa$6175	offset	4
   413 ;;_efgtoa$6171	offset	6
   414 ;;_efgtoa$6167	offset	8
   415 ;;_efgtoa$6166	offset	10
   416 ;;_u	offset	12
   417 ;;_g	offset	16
   418 ;;_l	offset	20
   419 ;;_h	offset	24
   420 ;;_ou	offset	28
   421 ;;_n	offset	32
   422 ;;_e	offset	34
   423 ;;_i	offset	36
   424 ;;_w	offset	38
   425 ;;_p	offset	40
   426 ;;_sign	offset	42
   427 ;;_d	offset	44
   428 ;;_ne	offset	46
   429 ;;_m	offset	48
   430 ;;_pp	offset	50
   431 ;;_t	offset	52
   432 ;;_mode	offset	54
   433 ;;_nmode	offset	55
   434 ;;_fp	offset=-2 (param)
   435 ;;_f	offset=-6 (param)
   436 ;;_c	offset=-7 (param)
   437 ;;_tolower$6996	offset	0
   438 ;;_c	offset=-2 (param)
   439 ;;_c	offset=-2 (param)
   440 ;;_d	offset	0
   441 ;;_s	offset	2
   442 ;;_dest	offset=-2 (param)
   443 ;;_src	offset=-4 (param)
   444 ;;_u	offset	0
   445 ;;_m	offset	4
   446 ;;_e	offset	8
   447 ;;_x	offset=-4 (param)
   448 ;;_u	offset	0
   449 ;;_e	offset	4
   450 ;;_x	offset=-4 (param)
   451 ;;_exp1	offset	0
   452 ;;_sign1	offset	1
   453 ;;_f1	offset=-4 (param)
   454 ;;_f1	offset=-4 (param)
   455 ;;_ff1	offset=-4 (param)
   456 ;;_ff2	offset=-8 (param)
   457 ;;_sign	offset	0
   458 ;;_counter	offset	1
   459 ;;_dividend	offset=-2 (param)
   460 ;;_divisor	offset=-4 (param)
   461 ;;_quotient	offset	0
   462 ;;_sign	offset	2
   463 ;;_counter	offset	3
   464 ;;_dividend	offset=-2 (param)
   465 ;;_divisor	offset=-4 (param)
   466 ;;_dtoa$6143	offset	0
   467 ;;_n	offset	2
   468 ;;_i	offset	10
   469 ;;_s	offset	12
   470 ;;_w	offset	14
   471 ;;_p	offset	16
   472 ;;_fp	offset=-2 (param)
   473 ;;_d	offset=-10 (param)
   474 ;;_a	offset=-2 (param)
   475 ;;_sign	offset	0
   476 ;;_counter	offset	1
   477 ;;_dividend	offset=-8 (param)
   478 ;;_divisor	offset=-16 (param)
   479 ;;_quotient	offset	0
   480 ;;_sign	offset	8
   481 ;;_counter	offset	9
   482 ;;_dividend	offset=-8 (param)
   483 ;;_divisor	offset=-16 (param)
   484 ;;_w	offset	0
   485 ;;_fp	offset=-2 (param)
   486 ;;_c	offset=-3 (param)
   487 ;;_w	offset	0
   488 ;;_i	offset	2
   489 ;;_fp	offset=-2 (param)
   490 ;;_buf	offset=-4 (param)
   491 ;;_p	offset=-6 (param)
   492 ;;_a	offset	0
   493 ;;_s	offset=-2 (param)
   494 ;;_i	offset	0
   495 ;;_c	offset	2
   496 ;;_s	offset=-2 (param)
   497 ;;_fp	offset=-4 (param)
   498 ;;_c	offset=-2 (param)
   499 ;;_fp	offset=-4 (param)
   500 ;;_c	offset=-1 (param)
   501 ;;__this	offset=-2 (param)
   502 ;;_c	offset=-3 (param)
   503 ;;_atoi$6727	offset	0
   504 ;;_atoi$6725	offset	2
   505 ;;_atoi$6726	offset	4
   506 ;;_n	offset	5
   507 ;;_neg	offset	7
   508 ;;_s	offset=-2 (param)
   509 ;;_isspace$6776	offset	0
   510 ;;_c	offset=-2 (param)
   511 ;;_c	offset=-2 (param)
   512 ;;_vterm	offset=-1 (param)
   513 ;;_new_response_info	offset=-1 (param)
   514 ;;_new_response_info	offset=-1 (param)
   515 ;;_level	offset=-2 (param)
   516 ;;_dutyValue	offset=-2 (param)
   517 ;;_timer	offset=-1 (param)
   518 ;;_timer	offset=-1 (param)
   519 ;;_count	offset=-3 (param)
   520 ;;_h	offset=-2 (param)
   521 ;;_u	offset	0
   522 ;;_x	offset=-4 (param)
   523 ;;_chan	offset=-1 (param)
   524 ;;_to_what	offset=-2 (param)
   525 ;;_u	offset	0
   526 ;;_s	offset=-2 (param)
   527 ;;_index	offset=-1 (param)
   528 ;;_arg	offset	0
   529 ;;_exp	offset	4
   530 ;;_sign	offset=-1 (param)
   531 ;;_val	offset=-5 (param)
   532 ;;_grs	offset	0
   533 ;;_rem	offset	4
   534 ;;_new_exp	offset	8
   535 ;;_aexp	offset	10
   536 ;;_bexp	offset	11
   537 ;;_sign	offset	12
   538 ;;_b	offset=-4 (param)
   539 ;;_a	offset=-8 (param)
   540 ;;_ff1	offset=-4 (param)
   541 ;;_ff2	offset=-8 (param)
   542 ;;_lp_speed	offset	0
   543 ;;_new	offset=-4 (param)
   544 ;;_bn	offset=-5 (param)
   545 ;;_slow	offset=-6 (param)
   546 ;;_b	offset=-4 (param)
   547 ;;_a	offset=-8 (param)
   548 ;;_grs	offset	0
   549 ;;_bexp	offset	1
   550 ;;_aexp	offset	2
   551 ;;_signs	offset	3
   552 ;;_b	offset=-4 (param)
   553 ;;_a	offset=-8 (param)
   554 ;;_prod	offset	0
   555 ;;_grs	offset	4
   556 ;;_temp	offset	8
   557 ;;_bexp	offset	10
   558 ;;_aexp	offset	11
   559 ;;_sign	offset	12
   560 ;;_b	offset=-4 (param)
   561 ;;_a	offset=-8 (param)
   562 ;;_InterruptHandler	offset=-3 (param)
   563 ;;_InterruptHandler	offset=-3 (param)
   564 ;;_InterruptHandler	offset=-3 (param)
   565 ;;_InterruptHandler	offset=-3 (param)
   566 ;;_InterruptHandler	offset=-3 (param)
   567 ;;_InterruptHandler	offset=-3 (param)
   568 ;;_state	offset	0
   569 ;;_InterruptHandler	offset=-3 (param)
   570 ;;_InterruptHandler	offset=-3 (param)
   571 ;;_seed	offset	0
   572 ;;_poly	offset	2
   573 ;;_InterruptHandler	offset=-3 (param)
   574 ;;_InterruptHandler	offset=-3 (param)
   575 ;;_i	offset	0
   576 ;;_sw_value	offset	1
   577 ;;_timerVal	offset=-2 (param)
   578 ;;_light	offset	0
   579 ;;_mode	offset=-1 (param)
   580 ;;_chan	offset=-1 (param)
   581 ;;_to_what	offset=-2 (param)
   582 ;;_u	offset	0
   583 ;;_s	offset=-2 (param)
   584 ;;_index	offset=-1 (param)
   585 ;;_arg	offset	0
   586 ;;_exp	offset	4
   587 ;;_sign	offset=-1 (param)
   588 ;;_val	offset=-5 (param)
   589 ;;_b	offset=-4 (param)
   590 ;;_a	offset=-8 (param)
   591 ;;_grs	offset	0
   592 ;;_bexp	offset	1
   593 ;;_aexp	offset	2
   594 ;;_signs	offset	3
   595 ;;_b	offset=-4 (param)
   596 ;;_a	offset=-8 (param)
   597 ;;_prod	offset	0
   598 ;;_grs	offset	4
   599 ;;_temp	offset	8
   600 ;;_bexp	offset	10
   601 ;;_aexp	offset	11
   602 ;;_sign	offset	12
   603 ;;_b	offset=-4 (param)
   604 ;;_a	offset=-8 (param)
   605 ;;_grs	offset	0
   606 ;;_rem	offset	4
   607 ;;_new_exp	offset	8
   608 ;;_aexp	offset	10
   609 ;;_bexp	offset	11
   610 ;;_sign	offset	12
   611 ;;_b	offset=-4 (param)
   612 ;;_a	offset=-8 (param)
   613 ;;_ff1	offset=-4 (param)
   614 ;;_ff2	offset=-8 (param)
   615 ;;_timerVal	offset=-2 (param)
   616 ;;_adj	offset	0
   617 ;;_log_ptr	offset	4
   618 ;;_f	offset	0
   619 ;;_ap	offset	6
   620 ;;_s	offset=-3 (param)
   621 ;;_fmt	offset=-5 (param)
   622 ;;_cfmt	offset	0
   623 ;;_fp	offset=-2 (param)
   624 ;;_fmt	offset=-4 (param)
   625 ;;_ap	offset=-6 (param)
   626 ;;_vfpfcnvrt$6220	offset	0
   627 ;;_vfpfcnvrt$6231	offset	2
   628 ;;_vfpfcnvrt$6219	offset	4
   629 ;;_llu	offset	6
   630 ;;_ll	offset	14
   631 ;;_f	offset	22
   632 ;;_ct	offset	26
   633 ;;_cp	offset	29
   634 ;;_c	offset	31
   635 ;;_fp	offset=-2 (param)
   636 ;;_fmt	offset=-4 (param)
   637 ;;_ap	offset=-6 (param)
   638 ;;_xtoa$6205	offset	0
   639 ;;_xtoa$6204	offset	2
   640 ;;_n	offset	4
   641 ;;_c	offset	12
   642 ;;_i	offset	14
   643 ;;_w	offset	16
   644 ;;_p	offset	18
   645 ;;_fp	offset=-2 (param)
   646 ;;_d	offset=-10 (param)
   647 ;;_x	offset=-11 (param)
   648 ;;_toupper$7011	offset	0
   649 ;;_c	offset=-2 (param)
   650 ;;_c	offset=-2 (param)
   651 ;;_c	offset=-2 (param)
   652 ;;_n	offset	0
   653 ;;_i	offset	8
   654 ;;_w	offset	10
   655 ;;_p	offset	12
   656 ;;_fp	offset=-2 (param)
   657 ;;_d	offset=-10 (param)
   658 ;;_counter	offset	0
   659 ;;_dividend	offset=-8 (param)
   660 ;;_divisor	offset=-16 (param)
   661 ;;_quotient	offset	0
   662 ;;_counter	offset	8
   663 ;;_dividend	offset=-8 (param)
   664 ;;_divisor	offset=-16 (param)
   665 ;;_r	offset	0
   666 ;;_l	offset	2
   667 ;;__l	offset=-2 (param)
   668 ;;__r	offset=-4 (param)
   669 ;;_n	offset=-6 (param)
   670 ;;_nuls	offset	0
   671 ;;_l	offset	7
   672 ;;_p	offset	9
   673 ;;_cp	offset	11
   674 ;;_w	offset	13
   675 ;;_i	offset	15
   676 ;;_fp	offset=-2 (param)
   677 ;;_s	offset=-4 (param)
   678 ;;_efgtoa$6177	offset	0
   679 ;;_efgtoa$6176	offset	2
   680 ;;_efgtoa$6175	offset	4
   681 ;;_efgtoa$6171	offset	6
   682 ;;_efgtoa$6167	offset	8
   683 ;;_efgtoa$6166	offset	10
   684 ;;_u	offset	12
   685 ;;_g	offset	16
   686 ;;_l	offset	20
   687 ;;_h	offset	24
   688 ;;_ou	offset	28
   689 ;;_n	offset	32
   690 ;;_e	offset	34
   691 ;;_i	offset	36
   692 ;;_w	offset	38
   693 ;;_p	offset	40
   694 ;;_sign	offset	42
   695 ;;_d	offset	44
   696 ;;_ne	offset	46
   697 ;;_m	offset	48
   698 ;;_pp	offset	50
   699 ;;_t	offset	52
   700 ;;_mode	offset	54
   701 ;;_nmode	offset	55
   702 ;;_fp	offset=-2 (param)
   703 ;;_f	offset=-6 (param)
   704 ;;_c	offset=-7 (param)
   705 ;;_tolower$6996	offset	0
   706 ;;_c	offset=-2 (param)
   707 ;;_c	offset=-2 (param)
   708 ;;_d	offset	0
   709 ;;_s	offset	2
   710 ;;_dest	offset=-2 (param)
   711 ;;_src	offset=-4 (param)
   712 ;;_u	offset	0
   713 ;;_m	offset	4
   714 ;;_e	offset	8
   715 ;;_x	offset=-4 (param)
   716 ;;_u	offset	0
   717 ;;_e	offset	4
   718 ;;_x	offset=-4 (param)
   719 ;;_exp1	offset	0
   720 ;;_sign1	offset	1
   721 ;;_f1	offset=-4 (param)
   722 ;;_f1	offset=-4 (param)
   723 ;;_ff1	offset=-4 (param)
   724 ;;_ff2	offset=-8 (param)
   725 ;;_sign	offset	0
   726 ;;_counter	offset	1
   727 ;;_dividend	offset=-2 (param)
   728 ;;_divisor	offset=-4 (param)
   729 ;;_quotient	offset	0
   730 ;;_sign	offset	2
   731 ;;_counter	offset	3
   732 ;;_dividend	offset=-2 (param)
   733 ;;_divisor	offset=-4 (param)
   734 ;;_dtoa$6143	offset	0
   735 ;;_n	offset	2
   736 ;;_i	offset	10
   737 ;;_s	offset	12
   738 ;;_w	offset	14
   739 ;;_p	offset	16
   740 ;;_fp	offset=-2 (param)
   741 ;;_d	offset=-10 (param)
   742 ;;_a	offset=-2 (param)
   743 ;;_sign	offset	0
   744 ;;_counter	offset	1
   745 ;;_dividend	offset=-8 (param)
   746 ;;_divisor	offset=-16 (param)
   747 ;;_quotient	offset	0
   748 ;;_sign	offset	8
   749 ;;_counter	offset	9
   750 ;;_dividend	offset=-8 (param)
   751 ;;_divisor	offset=-16 (param)
   752 ;;_w	offset	0
   753 ;;_fp	offset=-2 (param)
   754 ;;_c	offset=-3 (param)
   755 ;;_w	offset	0
   756 ;;_i	offset	2
   757 ;;_fp	offset=-2 (param)
   758 ;;_buf	offset=-4 (param)
   759 ;;_p	offset=-6 (param)
   760 ;;_a	offset	0
   761 ;;_s	offset=-2 (param)
   762 ;;_i	offset	0
   763 ;;_c	offset	2
   764 ;;_s	offset=-2 (param)
   765 ;;_fp	offset=-4 (param)
   766 ;;_c	offset=-2 (param)
   767 ;;_fp	offset=-4 (param)
   768 ;;_c	offset=-1 (param)
   769 ;;__this	offset=-2 (param)
   770 ;;_c	offset=-3 (param)
   771 ;;_atoi$6727	offset	0
   772 ;;_atoi$6725	offset	2
   773 ;;_atoi$6726	offset	4
   774 ;;_n	offset	5
   775 ;;_neg	offset	7
   776 ;;_s	offset=-2 (param)
   777 ;;_isspace$6776	offset	0
   778 ;;_c	offset=-2 (param)
   779 ;;_c	offset=-2 (param)
   780 ;;_dsize	offset=-2 (param)
   781 ;;_u	offset	0
   782 ;;_x	offset=-4 (param)
   783 ;;_f1p	offset=-2 (param)
   784 ;;_f2	offset=-6 (param)
   785 ;;_timer	offset=-1 (param)
   786 ;;_count	offset=-3 (param)
   787 ;;_channel	offset=-1 (param)
   788 ;;_i	offset	0
   789                           
   790                           	psect	idataBIGRAM
   791  0170E2                     __pidataBIGRAM:
   792                           	opt callstack 0
   793                           
   794                           ;initializer for _port_data
   795  0170E2  FF                 	db	255
   796  0170E3  00                 	db	0
   797  0170E4  FF                 	db	255
   798  0170E5  00                 	db	0
   799  0170E6  FF                 	db	255
   800  0170E7  00                 	db	0
   801  0170E8  FF                 	db	255
   802  0170E9  00                 	db	0
   803  0170EA  FF                 	db	255
   804  0170EB  00                 	db	0
   805  0170EC  FF                 	db	255
   806  0170ED  00                 	db	0
   807  0170EE  FF                 	db	255
   808  0170EF  00                 	db	0
   809  0170F0  FF                 	db	255
   810  0170F1  00                 	db	0
   811  0170F2  00                 	db	0
   812  0170F3  00                 	db	0
   813  0170F4  00                 	db	0
   814  0170F5  00                 	db	0
   815  0170F6  00                 	db	0
   816  0170F7  00                 	db	0
   817  0170F8  00                 	db	0
   818  0170F9  00                 	db	0
   819  0170FA  00                 	db	0
   820  0170FB  00                 	db	0
   821  0170FC  00                 	db	0
   822  0170FD  00                 	db	0
   823  0170FE  00                 	db	0
   824  0170FF  00                 	db	0
   825  017100  00                 	db	0
   826  017101  00                 	db	0
   827  017102  00                 	db	0
   828  017103  00                 	db	0
   829  017104  00                 	db	0
   830  017105  00                 	db	0
   831  017106  00                 	db	0
   832  017107  00                 	db	0
   833  017108  00                 	db	0
   834  017109  00                 	db	0
   835  01710A  00                 	db	0
   836  01710B  00                 	db	0
   837  01710C  00                 	db	0
   838  01710D  00                 	db	0
   839  01710E  00                 	db	0
   840  01710F  00                 	db	0
   841  017110  00                 	db	0
   842  017111  00                 	db	0
   843  017112  00                 	db	0
   844  017113  00                 	db	0
   845  017114  00                 	db	0
   846  017115  00                 	db	0
   847  017116  00                 	db	0
   848  017117  00                 	db	0
   849  017118  00                 	db	0
   850  017119  00                 	db	0
   851  01711A  00                 	db	0
   852  01711B  00                 	db	0
   853  01711C  00                 	db	0
   854  01711D  00                 	db	0
   855  01711E  00                 	db	0
   856  01711F  00                 	db	0
   857  017120  00                 	db	0
   858  017121  00                 	db	0
   859  017122  00                 	db	0
   860  017123  00                 	db	0
   861  017124  00                 	db	0
   862  017125  00                 	db	0
   863  017126  00                 	db	0
   864  017127  00                 	db	0
   865  017128  00                 	db	0
   866  017129  00                 	db	0
   867  01712A  00                 	db	0
   868  01712B  00                 	db	0
   869  01712C  00                 	db	0
   870  01712D  00                 	db	0
   871  01712E  00                 	db	0
   872  01712F  00                 	db	0
   873  017130  00                 	db	0
   874  017131  00                 	db	0
   875  017132  00                 	db	0
   876  017133  00                 	db	0
   877  017134  00                 	db	0
   878  017135  00                 	db	0
   879  017136  00                 	db	0
   880  017137  00                 	db	0
   881  017138  00                 	db	0
   882  017139  00                 	db	0
   883  01713A  00                 	db	0
   884  01713B  00                 	db	0
   885  01713C  00                 	db	0
   886  01713D  00                 	db	0
   887  01713E  00                 	db	0
   888  01713F  00                 	db	0
   889  017140  00                 	db	0
   890  017141  00                 	db	0
   891  017142  00                 	db	0
   892  017143  00                 	db	0
   893  017144  00                 	db	0
   894  017145  00                 	db	0
   895  017146  00                 	db	0
   896  017147  00                 	db	0
   897  017148  00                 	db	0
   898  017149  00                 	db	0
   899  01714A  00                 	db	0
   900  01714B  00                 	db	0
   901  01714C  00                 	db	0
   902  01714D  00                 	db	0
   903  01714E  00                 	db	0
   904  01714F  00                 	db	0
   905  017150  00                 	db	0
   906  017151  00                 	db	0
   907  017152  00                 	db	0
   908  017153  00                 	db	0
   909  017154  00                 	db	0
   910  017155  00                 	db	0
   911  017156  00                 	db	0
   912  017157  00                 	db	0
   913  017158  00                 	db	0
   914  017159  00                 	db	0
   915  01715A  00                 	db	0
   916  01715B  00                 	db	0
   917  01715C  00                 	db	0
   918  01715D  00                 	db	0
   919  01715E  00                 	db	0
   920  01715F  00                 	db	0
   921  017160  00                 	db	0
   922  017161  00                 	db	0
   923  017162  00                 	db	0
   924  017163  00                 	db	0
   925  017164  00                 	db	0
   926  017165  00                 	db	0
   927  017166  00                 	db	0
   928  017167  00                 	db	0
   929  017168  00                 	db	0
   930  017169  00                 	db	0
   931  01716A  00                 	db	0
   932  01716B  00                 	db	0
   933  01716C  00                 	db	0
   934  01716D  00                 	db	0
   935  01716E  00                 	db	0
   936  01716F  00                 	db	0
   937  017170  00                 	db	0
   938  017171  00                 	db	0
   939  017172  00                 	db	0
   940  017173  00                 	db	0
   941  017174  00                 	db	0
   942  017175  00                 	db	0
   943  017176  00                 	db	0
   944  017177  00                 	db	0
   945  017178  00                 	db	0
   946  017179  00                 	db	0
   947  01717A  00                 	db	0
   948  01717B  00                 	db	0
   949  01717C  00                 	db	0
   950  01717D  00                 	db	0
   951  01717E  00                 	db	0
   952  01717F  00                 	db	0
   953  017180  00                 	db	0
   954  017181  00                 	db	0
   955  017182  00                 	db	0
   956  017183  00                 	db	0
   957  017184  00                 	db	0
   958  017185  00                 	db	0
   959  017186  00                 	db	0
   960  017187  00                 	db	0
   961  017188  00                 	db	0
   962  017189  00                 	db	0
   963  01718A  00                 	db	0
   964  01718B  00                 	db	0
   965  01718C  00                 	db	0
   966  01718D  00                 	db	0
   967  01718E  00                 	db	0
   968  01718F  00                 	db	0
   969  017190  00                 	db	0
   970  017191  00                 	db	0
   971  017192  00                 	db	0
   972  017193  00                 	db	0
   973  017194  00                 	db	0
   974  017195  00                 	db	0
   975  017196  00                 	db	0
   976  017197  00                 	db	0
   977  017198  00                 	db	0
   978  017199  00                 	db	0
   979  01719A  00                 	db	0
   980  01719B  00                 	db	0
   981  01719C  00                 	db	0
   982  01719D  00                 	db	0
   983  01719E  00                 	db	0
   984  01719F  00                 	db	0
   985  0171A0  00                 	db	0
   986  0171A1  00                 	db	0
   987  0171A2  00                 	db	0
   988  0171A3  00                 	db	0
   989  0171A4  00                 	db	0
   990  0171A5  00                 	db	0
   991  0171A6  00                 	db	0
   992  0171A7  00                 	db	0
   993  0171A8  00                 	db	0
   994  0171A9  00                 	db	0
   995  0171AA  00                 	db	0
   996  0171AB  00                 	db	0
   997  0171AC  00                 	db	0
   998  0171AD  00                 	db	0
   999  0171AE  00                 	db	0
  1000  0171AF  00                 	db	0
  1001  0171B0  00                 	db	0
  1002  0171B1  00                 	db	0
  1003  0171B2  00                 	db	0
  1004  0171B3  00                 	db	0
  1005  0171B4  00                 	db	0
  1006  0171B5  00                 	db	0
  1007  0171B6  00                 	db	0
  1008  0171B7  00                 	db	0
  1009  0171B8  00                 	db	0
  1010  0171B9  00                 	db	0
  1011  0171BA  00                 	db	0
  1012  0171BB  00                 	db	0
  1013  0171BC  00                 	db	0
  1014  0171BD  00                 	db	0
  1015  0171BE  00                 	db	0
  1016  0171BF  00                 	db	0
  1017  0171C0  00                 	db	0
  1018  0171C1  00                 	db	0
  1019  0171C2  00                 	db	0
  1020  0171C3  00                 	db	0
  1021  0171C4  00                 	db	0
  1022  0171C5  00                 	db	0
  1023  0171C6  00                 	db	0
  1024  0171C7  00                 	db	0
  1025  0171C8  00                 	db	0
  1026  0171C9  00                 	db	0
  1027  0171CA  00                 	db	0
  1028  0171CB  00                 	db	0
  1029  0171CC  00                 	db	0
  1030  0171CD  00                 	db	0
  1031  0171CE  00                 	db	0
  1032  0171CF  00                 	db	0
  1033  0171D0  00                 	db	0
  1034  0171D1  00                 	db	0
  1035  0171D2  00                 	db	0
  1036  0171D3  00                 	db	0
  1037  0171D4  00                 	db	0
  1038  0171D5  00                 	db	0
  1039  0171D6  00                 	db	0
  1040  0171D7  00                 	db	0
  1041  0171D8  00                 	db	0
  1042  0171D9  00                 	db	0
  1043  0171DA  00                 	db	0
  1044  0171DB  00                 	db	0
  1045  0171DC  00                 	db	0
  1046  0171DD  00                 	db	0
  1047  0171DE  00                 	db	0
  1048  0171DF  00                 	db	0
  1049  0171E0  00                 	db	0
  1050  0171E1  00                 	db	0
  1051  0171E2  00                 	db	0
  1052  0171E3  00                 	db	0
  1053  0171E4  00                 	db	0
  1054  0171E5  00                 	db	0
  1055  0171E6  00                 	db	0
  1056  0171E7  00                 	db	0
  1057  0171E8  00                 	db	0
  1058  0171E9  00                 	db	0
  1059  0171EA  00                 	db	0
  1060  0171EB  00                 	db	0
  1061  0171EC  00                 	db	0
  1062  0171ED  00                 	db	0
  1063  0171EE  00                 	db	0
  1064  0171EF  00                 	db	0
  1065  0171F0  00                 	db	0
  1066  0171F1  00                 	db	0
  1067  0171F2  00                 	db	0
  1068  0171F3  00                 	db	0
  1069  0171F4  00                 	db	0
  1070  0171F5  00                 	db	0
  1071  0171F6  00                 	db	0
  1072  0171F7  00                 	db	0
  1073  0171F8  00                 	db	0
  1074  0171F9  00                 	db	0
  1075  0171FA  00                 	db	0
  1076  0171FB  00                 	db	0
  1077  0171FC  00                 	db	0
  1078  0171FD  00                 	db	0
  1079  0171FE  00                 	db	0
  1080  0171FF  00                 	db	0
  1081  017200  00                 	db	0
  1082  017201  00                 	db	0
  1083  017202  00                 	db	0
  1084  017203  00                 	db	0
  1085  017204  00                 	db	0
  1086  017205  00                 	db	0
  1087  017206  00                 	db	0
  1088  017207  00                 	db	0
  1089  017208  00                 	db	0
  1090  017209  00                 	db	0
  1091  01720A  00                 	db	0
  1092  01720B  00                 	db	0
  1093  01720C  00                 	db	0
  1094  01720D  00                 	db	0
  1095  01720E  00                 	db	0
  1096  01720F  00                 	db	0
  1097  017210  00                 	db	0
  1098  017211  00                 	db	0
  1099  017212  00                 	db	0
  1100  017213  00                 	db	0
  1101  017214  00                 	db	0
  1102  017215  00                 	db	0
  1103  017216  00                 	db	0
  1104  017217  00                 	db	0
  1105  017218  00                 	db	0
  1106  017219  00                 	db	0
  1107  01721A  00                 	db	0
  1108  01721B  00                 	db	0
  1109  01721C  00                 	db	0
  1110  01721D  00                 	db	0
  1111  01721E  00                 	db	0
  1112  01721F  00                 	db	0
  1113  017220  00                 	db	0
  1114  017221  00                 	db	0
  1115  017222  00                 	db	0
  1116  017223  00                 	db	0
  1117  017224  00                 	db	0
  1118  017225  00                 	db	0
  1119  017226  00                 	db	0
  1120  017227  00                 	db	0
  1121  017228  00                 	db	0
  1122  017229  00                 	db	0
  1123  01722A  00                 	db	0
  1124  01722B  00                 	db	0
  1125  01722C  00                 	db	0
  1126  01722D  00                 	db	0
  1127  01722E  00                 	db	0
  1128  01722F  00                 	db	0
  1129  017230  00                 	db	0
  1130  017231  00                 	db	0
  1131  017232  00                 	db	0
  1132  017233  00                 	db	0
  1133  017234  00                 	db	0
  1134  017235  00                 	db	0
  1135  017236  00                 	db	0
  1136  017237  00                 	db	0
  1137  017238  00                 	db	0
  1138  017239  00                 	db	0
  1139  01723A  00                 	db	0
  1140  01723B  00                 	db	0
  1141  01723C  00                 	db	0
  1142  01723D  00                 	db	0
  1143  01723E  00                 	db	0
  1144  01723F  00                 	db	0
  1145  017240  00                 	db	0
  1146  017241  00                 	db	0
  1147  017242  00                 	db	0
  1148  017243  00                 	db	0
  1149  017244  00                 	db	0
  1150  017245  00                 	db	0
  1151  017246  00                 	db	0
  1152  017247  00                 	db	0
  1153  017248  00                 	db	0
  1154  017249  00                 	db	0
  1155  01724A  00                 	db	0
  1156  01724B  00                 	db	0
  1157  01724C  00                 	db	0
  1158  01724D  00                 	db	0
  1159  01724E  00                 	db	0
  1160  01724F  00                 	db	0
  1161  017250  00                 	db	0
  1162  017251  00                 	db	0
  1163  017252  00                 	db	0
  1164  017253  00                 	db	0
  1165  017254  00                 	db	0
  1166  017255  00                 	db	0
  1167  017256  00                 	db	0
  1168  017257  00                 	db	0
  1169  017258  00                 	db	0
  1170  017259  00                 	db	0
  1171  01725A  00                 	db	0
  1172  01725B  00                 	db	0
  1173  01725C  00                 	db	0
  1174  01725D  00                 	db	0
  1175  01725E  00                 	db	0
  1176  01725F  00                 	db	0
  1177  017260  00                 	db	0
  1178  017261  00                 	db	0
  1179  017262  00                 	db	0
  1180  017263  00                 	db	0
  1181  017264  00                 	db	0
  1182  017265  00                 	db	0
  1183  017266  00                 	db	0
  1184  017267  00                 	db	0
  1185  017268  00                 	db	0
  1186  017269  00                 	db	0
  1187  01726A  00                 	db	0
  1188  01726B  00                 	db	0
  1189  01726C  00                 	db	0
  1190  01726D  00                 	db	0
  1191  01726E  00                 	db	0
  1192  01726F  00                 	db	0
  1193  017270  00                 	db	0
  1194  017271  00                 	db	0
  1195  017272  00                 	db	0
  1196  017273  00                 	db	0
  1197  017274  00                 	db	0
  1198  017275  00                 	db	0
  1199  017276  00                 	db	0
  1200  017277  00                 	db	0
  1201  017278  00                 	db	0
  1202  017279  00                 	db	0
  1203  01727A  00                 	db	0
  1204  01727B  00                 	db	0
  1205  01727C  00                 	db	0
  1206  01727D  00                 	db	0
  1207  01727E  00                 	db	0
  1208  01727F  00                 	db	0
  1209  017280  00                 	db	0
  1210  017281  00                 	db	0
  1211  017282  00                 	db	0
  1212  017283  00                 	db	0
  1213  017284  00                 	db	0
  1214  017285  00                 	db	0
  1215  017286  00                 	db	0
  1216  017287  00                 	db	0
  1217  017288  00                 	db	0
  1218  017289  00                 	db	0
  1219  01728A  00                 	db	0
  1220  01728B  00                 	db	0
  1221  01728C  00                 	db	0
  1222  01728D  00                 	db	0
  1223  01728E  00                 	db	0
  1224  01728F  00                 	db	0
  1225  017290  00                 	db	0
  1226  017291  00                 	db	0
  1227  017292  00                 	db	0
  1228  017293  00                 	db	0
  1229  017294  00                 	db	0
  1230  017295  00                 	db	0
  1231  017296  00                 	db	0
  1232  017297  00                 	db	0
  1233  017298  00                 	db	0
  1234  017299  00                 	db	0
  1235  01729A  00                 	db	0
  1236  01729B  00                 	db	0
  1237  01729C  00                 	db	0
  1238  01729D  00                 	db	0
  1239  01729E  00                 	db	0
  1240  01729F  00                 	db	0
  1241  0172A0  00                 	db	0
  1242  0172A1  00                 	db	0
  1243  0172A2  00                 	db	0
  1244  0172A3  00                 	db	0
  1245  0172A4  00                 	db	0
  1246  0172A5  00                 	db	0
  1247  0172A6  00                 	db	0
  1248  0172A7  00                 	db	0
  1249  0172A8  00                 	db	0
  1250  0172A9  00                 	db	0
  1251  0172AA  00                 	db	0
  1252  0172AB  00                 	db	0
  1253  0172AC  00                 	db	0
  1254  0172AD  00                 	db	0
  1255  0172AE  00                 	db	0
  1256  0172AF  00                 	db	0
  1257  0172B0  00                 	db	0
  1258  0172B1  00                 	db	0
  1259  0172B2  00                 	db	0
  1260  0172B3  00                 	db	0
  1261  0172B4  00                 	db	0
  1262  0172B5  00                 	db	0
  1263  0172B6  00                 	db	0
  1264  0172B7  00                 	db	0
  1265  0172B8  00                 	db	0
  1266  0172B9  00                 	db	0
  1267  0172BA  00                 	db	0
  1268  0172BB  00                 	db	0
  1269  0172BC  00                 	db	0
  1270  0172BD  00                 	db	0
  1271  0172BE  00                 	db	0
  1272  0172BF  00                 	db	0
  1273  0172C0  00                 	db	0
  1274  0172C1  00                 	db	0
  1275  0172C2  00                 	db	0
  1276  0172C3  00                 	db	0
  1277  0172C4  00                 	db	0
  1278  0172C5  00                 	db	0
  1279  0172C6  00                 	db	0
  1280  0172C7  00                 	db	0
  1281  0172C8  00                 	db	0
  1282  0172C9  00                 	db	0
  1283  0172CA  00                 	db	0
  1284  0172CB  00                 	db	0
  1285  0172CC  00                 	db	0
  1286  0172CD  00                 	db	0
  1287  0172CE  00                 	db	0
  1288  0172CF  00                 	db	0
  1289  0172D0  00                 	db	0
  1290  0172D1  00                 	db	0
  1291  0172D2  00                 	db	0
  1292  0172D3  00                 	db	0
  1293  0172D4  00                 	db	0
  1294  0172D5  00                 	db	0
  1295  0172D6  00                 	db	0
  1296  0172D7  00                 	db	0
  1297  0172D8  00                 	db	0
  1298  0172D9  00                 	db	0
  1299  0172DA  00                 	db	0
  1300  0172DB  00                 	db	0
  1301  0172DC  00                 	db	0
  1302  0172DD  00                 	db	0
  1303  0172DE  00                 	db	0
  1304  0172DF  00                 	db	0
  1305  0172E0  00                 	db	0
  1306  0172E1  00                 	db	0
  1307                           
  1308                           ;initializer for _C
  1309  0172E2  0000               	dw	0
  1310  0172E4  0000               	dw	0
  1311  0172E6  0000               	dw	0
  1312  0172E8  0000               	dw	0
  1313  0172EA  0000               	dw	0
  1314  0172EC  0000               	dw	0
  1315  0172EE  0000               	dw	0
  1316  0172F0  0000               	dw	0
  1317  0172F2  0000               	dw	0
  1318  0172F4  0000               	dw	0
  1319  0172F6  0000               	dw	0
  1320  0172F8  0000               	dw	0
  1321  0172FA  0000               	dw	0
  1322  0172FC  0000               	dw	0
  1323  0172FE  0000               	dw	0
  1324  017300  0000               	dw	0
  1325  017302  0000               	dw	0
  1326  017304  0000               	dw	0
  1327  017306  0000               	dw	0
  1328  017308  0000               	dw	0
  1329  01730A  0000               	dw	0
  1330  01730C  0000               	dw	0
  1331  01730E  0000               	dw	0
  1332  017310  0000               	dw	0
  1333  017312  0000               	dw	0
  1334  017314  0000               	dw	0
  1335  017316  0000               	dw	0
  1336  017318  0000               	dw	0
  1337  01731A  0000               	dw	0
  1338  01731C  0000               	dw	0
  1339  01731E  0000               	dw	0
  1340  017320  0000               	dw	0
  1341  017322  0000               	dw	0
  1342  017324  0000               	dw	0
  1343  017326  0000               	dw	0
  1344  017328  0000               	dw	0
  1345  01732A  0000               	dw	0
  1346  01732C  0000               	dw	0
  1347  01732E  0000               	dw	0
  1348  017330  0000               	dw	0
  1349  017332  0000               	dw	0
  1350  017334  0000               	dw	0
  1351  017336  0000               	dw	0
  1352  017338  0000               	dw	0
  1353  01733A  0000               	dw	0
  1354  01733C  0000               	dw	0
  1355  01733E  0000               	dw	0
  1356  017340  0000               	dw	0
  1357  017342  0000               	dw	0
  1358  017344  0000               	dw	0
  1359  017346  0000               	dw	0
  1360  017348  0000               	dw	0
  1361  01734A  0000               	dw	0
  1362  01734C  0000               	dw	0
  1363  01734E  0000               	dw	0
  1364  017350  0000               	dw	0
  1365  017352  0000               	dw	0
  1366  017354  0000               	dw	0
  1367  017356  0000               	dw	0
  1368  017358  0000               	dw	0
  1369  01735A  0000               	dw	0
  1370  01735C  0000               	dw	0
  1371  01735E  0000               	dw	0
  1372  017360  0000               	dw	0
  1373  017362  0000               	dw	0
  1374  017364  0000               	dw	0
  1375  017366  0000               	dw	0
  1376  017368  0000               	dw	0
  1377  01736A  0000               	dw	0
  1378  01736C  0000               	dw	0
  1379  01736E  0000               	dw	0
  1380  017370  42FA               	dw	17146
  1381  017372  0000               	dw	0
  1382  017374  0000               	dw	0
  1383  017376  0000               	dw	0
  1384  017378  0000               	dw	0
  1385  01737A  0000               	dw	0
  1386  01737C  0000               	dw	0
  1387  01737E  0000               	dw	0
  1388  017380  0000               	dw	0
  1389  017382  0000               	dw	0
  1390  017384  0000               	dw	0
  1391  017386  0000               	dw	0
  1392  017388  0000               	dw	0
  1393  01738A  0000               	dw	0
  1394  01738C  0000               	dw	0
  1395  01738E  0000               	dw	0
  1396  017390  0000               	dw	0
  1397  017392  0000               	dw	0
  1398  017394  0000               	dw	0
  1399  017396  0000               	dw	0
  1400  017398  0000               	dw	0
  1401  01739A  00                 	db	0
  1402  01739B  01                 	db	1
  1403  01739C  0000               	dw	0
  1404  01739E  3F80               	dw	16256
  1405  0173A0  0000               	dw	0
  1406  0173A2  3F80               	dw	16256
  1407  0173A4  00                 	db	0
  1408  0173A5  00                 	db	0
  1409  0173A6  00                 	db	0
  1410  0173A7  00                 	db	0
  1411  0173A8  00                 	db	0
  1412  0173A9  00                 	db	0
  1413  0173AA  00                 	db	0
  1414  0173AB  00                 	db	0
  1415  0173AC  00                 	db	0
  1416  0173AD  00                 	db	0
  1417  0173AE  00                 	db	0
  1418  0173AF  00                 	db	0
  1419  0173B0  00                 	db	0
  1420  0173B1  00                 	db	0
  1421  0173B2  00                 	db	0
  1422  0173B3  00                 	db	0
  1423  0173B4  00                 	db	0
  1424  0173B5  00                 	db	0
  1425  0173B6  00                 	db	0
  1426  0173B7  00                 	db	0
  1427  0173B8  00                 	db	0
  1428  0173B9  00                 	db	0
  1429  0173BA  00                 	db	0
  1430  0173BB  00                 	db	0
  1431  0173BC  00                 	db	0
  1432  0173BD  00                 	db	0
  1433  0173BE  00                 	db	0
  1434  0173BF  00                 	db	0
  1435  0173C0  00                 	db	0
  1436  0173C1  00                 	db	0
  1437  0173C2  00                 	db	0
  1438  0173C3  00                 	db	0
  1439  0173C4  00                 	db	0
  1440  0173C5  00                 	db	0
  1441  0173C6  00                 	db	0
  1442  0173C7  00                 	db	0
  1443  0173C8  00                 	db	0
  1444  0173C9  00                 	db	0
  1445  0173CA  00                 	db	0
  1446  0173CB  00                 	db	0
  1447  0173CC  00                 	db	0
  1448  0173CD  00                 	db	0
  1449  0173CE  00                 	db	0
  1450  0173CF  00                 	db	0
  1451  0173D0  00                 	db	0
  1452  0173D1  00                 	db	0
  1453  0173D2  00                 	db	0
  1454  0173D3  00                 	db	0
  1455  0173D4  00                 	db	0
  1456  0173D5  00                 	db	0
  1457  0173D6  00                 	db	0
  1458  0173D7  00                 	db	0
  1459  0173D8  00                 	db	0
  1460  0173D9  00                 	db	0
  1461  0173DA  00                 	db	0
  1462  0173DB  00                 	db	0
  1463  0173DC  00                 	db	0
  1464  0173DD  00                 	db	0
  1465  0173DE  00                 	db	0
  1466  0173DF  00                 	db	0
  1467  0173E0  00                 	db	0
  1468  0173E1  00                 	db	0
  1469  0173E2  00                 	db	0
  1470  0173E3  00                 	db	0
  1471  0173E4  00                 	db	0
  1472  0173E5  00                 	db	0
  1473  0173E6  00                 	db	0
  1474  0173E7  00                 	db	0
  1475  0173E8  00                 	db	0
  1476  0173E9  00                 	db	0
  1477  0173EA  00                 	db	0
  1478  0173EB  00                 	db	0
  1479  0173EC  00                 	db	0
  1480  0173ED  00                 	db	0
  1481  0173EE  00                 	db	0
  1482  0173EF  00                 	db	0
  1483  0173F0  0000               	dw	0
  1484  0173F2  0000               	dw	0
  1485  0173F4  0000               	dw	0
  1486  0173F6  0000               	dw	0
  1487  0173F8  0000               	dw	0
  1488  0173FA  0000               	dw	0
  1489  0173FC  0000               	dw	0
  1490  0173FE  0000               	dw	0
  1491  017400  0000               	dw	0
  1492  017402  0000               	dw	0
  1493  017404  01                 	db	1
  1494  017405  00                 	db	0
  1495  017406  00                 	db	0
  1496  017407  00                 	db	0
  1497  017408  00                 	db	0
  1498  017409  00                 	db	0
  1499  01740A  00                 	db	0
  1500  01740B  00                 	db	0
  1501  01740C  00                 	db	0
  1502                           
  1503                           	psect	idataBANK0
  1504  01C9F0                     __pidataBANK0:
  1505                           	opt callstack 0
  1506                           
  1507                           ;initializer for _R
  1508  01C9F0  0000               	dw	0
  1509  01C9F2  0000               	dw	0
  1510  01C9F4  0000               	dw	0
  1511  01C9F6  0000               	dw	0
  1512  01C9F8  0000               	dw	0
  1513  01C9FA  0000               	dw	0
  1514  01C9FC  0000               	dw	0
  1515  01C9FE  0000               	dw	0
  1516  01CA00  0000               	dw	0
  1517  01CA02  0000               	dw	0
  1518  01CA04  0000               	dw	0
  1519  01CA06  0000               	dw	0
  1520  01CA08  0000               	dw	0
  1521  01CA0A  0000               	dw	0
  1522  01CA0C  0000               	dw	0
  1523  01CA0E  0000               	dw	0
  1524  01CA10  0000               	dw	0
  1525  01CA12  0000               	dw	0
  1526  01CA14  0000               	dw	0
  1527  01CA16  0F62               	dw	3938
  1528  01CA18  0FA4               	dw	4004
  1529  01CA1A  2D0E               	dw	11534
  1530  01CA1C  3DB2               	dw	15794
  1531  01CA1E  DD98               	dw	56728
  1532  01CA20  3D13               	dw	15635
  1533  01CA22  00                 	db	0
  1534  01CA23  0000               	dw	0
  1535  01CA25  00                 	db	0
  1536  01CA26  1957               	dw	6487
  1537  01CA28  42                 	db	66
  1538                           
  1539                           	psect	idataBANK1
  1540  01B026                     __pidataBANK1:
  1541                           	opt callstack 0
  1542                           
  1543                           ;initializer for stoa@F1166
  1544  01B026  28                 	db	40
  1545  01B027  6E                 	db	110
  1546  01B028  75                 	db	117
  1547  01B029  6C                 	db	108
  1548  01B02A  6C                 	db	108
  1549  01B02B  29                 	db	41
  1550  01B02C  00                 	db	0
  1551                           
  1552                           ;initializer for _V
  1553  01B02D  00                 	db	0
  1554  01B02E  00                 	db	0
  1555  01B02F  00                 	db	0
  1556  01B030  00                 	db	0
  1557  01B031  00                 	db	0
  1558  01B032  00                 	db	0
  1559  01B033  00                 	db	0
  1560  01B034  00                 	db	0
  1561  01B035  00                 	db	0
  1562  01B036  00                 	db	0
  1563  01B037  00                 	db	0
  1564  01B038  00                 	db	0
  1565  01B039  00                 	db	0
  1566  01B03A  00                 	db	0
  1567  01B03B  00                 	db	0
  1568  01B03C  00                 	db	0
  1569  01B03D  00                 	db	0
  1570  01B03E  00                 	db	0
  1571  01B03F  00                 	db	0
  1572  01B040  00                 	db	0
  1573  01B041  00                 	db	0
  1574  01B042  00                 	db	0
  1575  01B043  00                 	db	0
  1576  01B044  00                 	db	0
  1577  01B045  00                 	db	0
  1578  01B046  00                 	db	0
  1579  01B047  00                 	db	0
  1580  01B048  00                 	db	0
  1581  01B049  00                 	db	0
  1582  01B04A  00                 	db	0
  1583  01B04B  00                 	db	0
  1584  01B04C  00                 	db	0
  1585  01B04D  00                 	db	0
  1586  01B04E  00                 	db	0
  1587  01B04F  00                 	db	0
  1588  01B050  00                 	db	0
  1589  01B051  00                 	db	0
  1590  01B052  00                 	db	0
  1591  01B053  00                 	db	0
  1592  01B054  00                 	db	0
  1593  01B055  00                 	db	0
  1594  01B056  00                 	db	0
  1595  01B057  00                 	db	0
  1596  01B058  00                 	db	0
  1597  01B059  00                 	db	0
  1598  01B05A  00                 	db	0
  1599  01B05B  00                 	db	0
  1600  01B05C  00                 	db	0
  1601  01B05D  00                 	db	0
  1602  01B05E  00                 	db	0
  1603  01B05F  00                 	db	0
  1604  01B060  00                 	db	0
  1605  01B061  00                 	db	0
  1606  01B062  00                 	db	0
  1607  01B063  00                 	db	0
  1608  01B064  00                 	db	0
  1609  01B065  00                 	db	0
  1610  01B066  00                 	db	0
  1611  01B067  00                 	db	0
  1612  01B068  00                 	db	0
  1613  01B069  00                 	db	0
  1614  01B06A  00                 	db	0
  1615  01B06B  00                 	db	0
  1616  01B06C  00                 	db	0
  1617  01B06D  00                 	db	0
  1618  01B06E  00                 	db	0
  1619  01B06F  00                 	db	0
  1620  01B070  00                 	db	0
  1621  01B071  00                 	db	0
  1622  01B072  00                 	db	0
  1623  01B073  00                 	db	0
  1624  01B074  00                 	db	0
  1625  01B075  00                 	db	0
  1626  01B076  00                 	db	0
  1627  01B077  00                 	db	0
  1628  01B078  00                 	db	0
  1629  01B079  00                 	db	0
  1630  01B07A  00                 	db	0
  1631  01B07B  00                 	db	0
  1632  01B07C  00                 	db	0
  1633  01B07D  00                 	db	0
  1634  01B07E  00                 	db	0
  1635  01B07F  00                 	db	0
  1636  01B080  00                 	db	0
  1637  01B081  00                 	db	0
  1638  01B082  00                 	db	0
  1639  01B083  00                 	db	0
  1640  01B084  00                 	db	0
  1641  01B085  00                 	db	0
  1642  01B086  00                 	db	0
  1643  01B087  00                 	db	0
  1644  01B088  00                 	db	0
  1645  01B089  00                 	db	0
  1646  01B08A  00                 	db	0
  1647  01B08B  00                 	db	0
  1648  01B08C  00                 	db	0
  1649  01B08D  00                 	db	0
  1650  01B08E  00                 	db	0
  1651  01B08F  00                 	db	0
  1652  01B090  00                 	db	0
  1653  01B091  00                 	db	0
  1654  01B092  00                 	db	0
  1655  01B093  00                 	db	0
  1656  01B094  00                 	db	0
  1657  01B095  00                 	db	0
  1658  01B096  00                 	db	0
  1659  01B097  00                 	db	0
  1660  01B098  00                 	db	0
  1661  01B099  00                 	db	0
  1662  01B09A  00                 	db	0
  1663  01B09B  00                 	db	0
  1664  01B09C  00                 	db	0
  1665  01B09D  00                 	db	0
  1666  01B09E  00                 	db	0
  1667  01B09F  00                 	db	0
  1668  01B0A0  00                 	db	0
  1669  01B0A1  00                 	db	0
  1670  01B0A2  00                 	db	0
  1671  01B0A3  00                 	db	0
  1672  01B0A4  00                 	db	0
  1673  01B0A5  00                 	db	0
  1674  01B0A6  00                 	db	0
  1675  01B0A7  00                 	db	0
  1676  01B0A8  00                 	db	0
  1677  01B0A9  00                 	db	0
  1678  01B0AA  00                 	db	0
  1679  01B0AB  00                 	db	0
  1680  01B0AC  00                 	db	0
  1681  01B0AD  00                 	db	0
  1682  01B0AE  0000               	dw	0
  1683  01B0B0  0000               	dw	0
  1684  01B0B2  0000               	dw	0
  1685  01B0B4  0000               	dw	0
  1686  01B0B6  00                 	db	0
  1687  01B0B7  00                 	db	0
  1688  01B0B8  00                 	db	0
  1689  01B0B9  00                 	db	0
  1690  01B0BA  00                 	db	0
  1691  01B0BB  00                 	db	0
  1692  01B0BC  0000               	dw	0
  1693  01B0BE  0000               	dw	0
  1694  01B0C0  0000               	dw	0
  1695  01B0C2  0000               	dw	0
  1696  01B0C4  0000               	dw	0
  1697  01B0C6  0000               	dw	0
  1698  01B0C8  00                 	db	0
  1699  01B0C9  00                 	db	0
  1700  01B0CA  00                 	db	0
  1701  01B0CB  00                 	db	0
  1702  01B0CC  00                 	db	0
  1703  01B0CD  00                 	db	0
  1704  01B0CE  00                 	db	0
  1705  01B0CF  00                 	db	0
  1706  01B0D0  00                 	db	0
  1707  01B0D1  00                 	db	0
  1708  01B0D2  00                 	db	0
  1709  01B0D3  0000               	dw	0
  1710  01B0D5  0000               	dw	0
  1711  01B0D7  2D                 	db	45
  1712  01B0D8  00                 	db	0
  1713  01B0D9  00                 	db	0
  1714  01B0DA  00                 	db	0
  1715  01B0DB  00                 	db	0
  1716  01B0DC  00                 	db	0
  1717  01B0DD  0000               	dw	0
  1718  01B0DF  0000               	dw	0
  1719  01B0E1  0000               	dw	0
  1720  01B0E3  0000               	dw	0
  1721  01B0E5  0000               	dw	0
  1722  01B0E7  0000               	dw	0
  1723  01B0E9  0000               	dw	0
  1724  01B0EB  0000               	dw	0
  1725                           
  1726                           ;initializer for _H
  1727  01B0ED  00                 	db	0
  1728  01B0EE  00                 	db	0
  1729  01B0EF  01                 	db	1
  1730  01B0F0  00                 	db	0
  1731  01B0F1  01                 	db	1
  1732  01B0F2  00                 	db	0
  1733  01B0F3  01                 	db	1
  1734  01B0F4  00                 	db	0
  1735  01B0F5  00                 	db	0
  1736                           
  1737                           	psect	mediumconst
  1738  00F8E2                     __pmediumconst:
  1739                           	opt callstack 0
  1740  00F8E2  00                 	db	0
  1741  00F8E3                     _BVSOC_TABLE:
  1742                           	opt callstack 0
  1743  00F8E3  59D8               	dw	23000
  1744  00F8E5  0000               	dw	0
  1745  00F8E7  0005               	dw	5
  1746  00F8E9  0000               	dw	0
  1747  00F8EB  5B68               	dw	23400
  1748  00F8ED  0000               	dw	0
  1749  00F8EF  000A               	dw	10
  1750  00F8F1  0000               	dw	0
  1751  00F8F3  5C30               	dw	23600
  1752  00F8F5  0000               	dw	0
  1753  00F8F7  0014               	dw	20
  1754  00F8F9  0000               	dw	0
  1755  00F8FB  5E38               	dw	24120
  1756  00F8FD  0000               	dw	0
  1757  00F8FF  0019               	dw	25
  1758  00F901  0000               	dw	0
  1759  00F903  5E88               	dw	24200
  1760  00F905  0000               	dw	0
  1761  00F907  001E               	dw	30
  1762  00F909  0000               	dw	0
  1763  00F90B  5F78               	dw	24440
  1764  00F90D  0000               	dw	0
  1765  00F90F  0028               	dw	40
  1766  00F911  0000               	dw	0
  1767  00F913  5FDC               	dw	24540
  1768  00F915  0000               	dw	0
  1769  00F917  002D               	dw	45
  1770  00F919  0000               	dw	0
  1771  00F91B  6018               	dw	24600
  1772  00F91D  0000               	dw	0
  1773  00F91F  0032               	dw	50
  1774  00F921  0000               	dw	0
  1775  00F923  6046               	dw	24646
  1776  00F925  0000               	dw	0
  1777  00F927  0035               	dw	53
  1778  00F929  0000               	dw	0
  1779  00F92B  607C               	dw	24700
  1780  00F92D  0000               	dw	0
  1781  00F92F  0037               	dw	55
  1782  00F931  0000               	dw	0
  1783  00F933  60AE               	dw	24750
  1784  00F935  0000               	dw	0
  1785  00F937  0039               	dw	57
  1786  00F939  0000               	dw	0
  1787  00F93B  60E0               	dw	24800
  1788  00F93D  0000               	dw	0
  1789  00F93F  003C               	dw	60
  1790  00F941  0000               	dw	0
  1791  00F943  6112               	dw	24850
  1792  00F945  0000               	dw	0
  1793  00F947  003F               	dw	63
  1794  00F949  0000               	dw	0
  1795  00F94B  615D               	dw	24925
  1796  00F94D  0000               	dw	0
  1797  00F94F  0043               	dw	67
  1798  00F951  0000               	dw	0
  1799  00F953  61A8               	dw	25000
  1800  00F955  0000               	dw	0
  1801  00F957  0046               	dw	70
  1802  00F959  0000               	dw	0
  1803  00F95B  61BC               	dw	25020
  1804  00F95D  0000               	dw	0
  1805  00F95F  0048               	dw	72
  1806  00F961  0000               	dw	0
  1807  00F963  61D0               	dw	25040
  1808  00F965  0000               	dw	0
  1809  00F967  004B               	dw	75
  1810  00F969  0000               	dw	0
  1811  00F96B  61DA               	dw	25050
  1812  00F96D  0000               	dw	0
  1813  00F96F  0050               	dw	80
  1814  00F971  0000               	dw	0
  1815  00F973  61E4               	dw	25060
  1816  00F975  0000               	dw	0
  1817  00F977  0055               	dw	85
  1818  00F979  0000               	dw	0
  1819  00F97B  61F8               	dw	25080
  1820  00F97D  0000               	dw	0
  1821  00F97F  005A               	dw	90
  1822  00F981  0000               	dw	0
  1823  00F983  6208               	dw	25096
  1824  00F985  0000               	dw	0
  1825  00F987  005C               	dw	92
  1826  00F989  0000               	dw	0
  1827  00F98B  6222               	dw	25122
  1828  00F98D  0000               	dw	0
  1829  00F98F  005D               	dw	93
  1830  00F991  0000               	dw	0
  1831  00F993  6234               	dw	25140
  1832  00F995  0000               	dw	0
  1833  00F997  005F               	dw	95
  1834  00F999  0000               	dw	0
  1835  00F99B  6248               	dw	25160
  1836  00F99D  0000               	dw	0
  1837  00F99F  0061               	dw	97
  1838  00F9A1  0000               	dw	0
  1839  00F9A3  625C               	dw	25180
  1840  00F9A5  0000               	dw	0
  1841  00F9A7  0064               	dw	100
  1842  00F9A9  0000               	dw	0
  1843  00F9AB  6784               	dw	26500
  1844  00F9AD  0000               	dw	0
  1845  00F9AF  0062               	dw	98
  1846  00F9B1  0000               	dw	0
  1847  00F9B3                     __end_of_BVSOC_TABLE:
  1848                           	opt callstack 0
  1849  00F9B3                     _T:
  1850                           	opt callstack 0
  1851  00F9B3  63                 	db	99
  1852  00F9B4  6F                 	db	111
  1853  00F9B5  6D                 	db	109
  1854  00F9B6  6D                 	db	109
  1855  00F9B7  61                 	db	97
  1856  00F9B8  6E                 	db	110
  1857  00F9B9  64                 	db	100
  1858  00F9BA  73                 	db	115
  1859  00F9BB  20                 	db	32
  1860  00F9BC  31                 	db	49
  1861  00F9BD  00                 	db	0
  1862  00F9BE  00                 	db	0
  1863  00F9BF  00                 	db	0
  1864  00F9C0  00                 	db	0
  1865  00F9C1  00                 	db	0
  1866  00F9C2  00                 	db	0
  1867  00F9C3  00                 	db	0
  1868  00F9C4  00                 	db	0
  1869  00F9C5  64                 	db	100
  1870  00F9C6  69                 	db	105
  1871  00F9C7  73                 	db	115
  1872  00F9C8  70                 	db	112
  1873  00F9C9  6C                 	db	108
  1874  00F9CA  61                 	db	97
  1875  00F9CB  79                 	db	121
  1876  00F9CC  73                 	db	115
  1877  00F9CD  20                 	db	32
  1878  00F9CE  31                 	db	49
  1879  00F9CF  00                 	db	0
  1880  00F9D0  00                 	db	0
  1881  00F9D1  00                 	db	0
  1882  00F9D2  00                 	db	0
  1883  00F9D3  00                 	db	0
  1884  00F9D4  00                 	db	0
  1885  00F9D5  00                 	db	0
  1886  00F9D6  00                 	db	0
  1887  00F9D7  63                 	db	99
  1888  00F9D8  6F                 	db	111
  1889  00F9D9  6D                 	db	109
  1890  00F9DA  6D                 	db	109
  1891  00F9DB  61                 	db	97
  1892  00F9DC  6E                 	db	110
  1893  00F9DD  64                 	db	100
  1894  00F9DE  73                 	db	115
  1895  00F9DF  20                 	db	32
  1896  00F9E0  32                 	db	50
  1897  00F9E1  00                 	db	0
  1898  00F9E2  00                 	db	0
  1899  00F9E3  00                 	db	0
  1900  00F9E4  00                 	db	0
  1901  00F9E5  00                 	db	0
  1902  00F9E6  00                 	db	0
  1903  00F9E7  00                 	db	0
  1904  00F9E8  00                 	db	0
  1905  00F9E9  64                 	db	100
  1906  00F9EA  69                 	db	105
  1907  00F9EB  73                 	db	115
  1908  00F9EC  70                 	db	112
  1909  00F9ED  6C                 	db	108
  1910  00F9EE  61                 	db	97
  1911  00F9EF  79                 	db	121
  1912  00F9F0  73                 	db	115
  1913  00F9F1  20                 	db	32
  1914  00F9F2  32                 	db	50
  1915  00F9F3  00                 	db	0
  1916  00F9F4  00                 	db	0
  1917  00F9F5  00                 	db	0
  1918  00F9F6  00                 	db	0
  1919  00F9F7  00                 	db	0
  1920  00F9F8  00                 	db	0
  1921  00F9F9  00                 	db	0
  1922  00F9FA  00                 	db	0
  1923  00F9FB  63                 	db	99
  1924  00F9FC  6F                 	db	111
  1925  00F9FD  6D                 	db	109
  1926  00F9FE  6D                 	db	109
  1927  00F9FF  61                 	db	97
  1928  00FA00  6E                 	db	110
  1929  00FA01  64                 	db	100
  1930  00FA02  73                 	db	115
  1931  00FA03  20                 	db	32
  1932  00FA04  33                 	db	51
  1933  00FA05  00                 	db	0
  1934  00FA06  00                 	db	0
  1935  00FA07  00                 	db	0
  1936  00FA08  00                 	db	0
  1937  00FA09  00                 	db	0
  1938  00FA0A  00                 	db	0
  1939  00FA0B  00                 	db	0
  1940  00FA0C  00                 	db	0
  1941  00FA0D  64                 	db	100
  1942  00FA0E  69                 	db	105
  1943  00FA0F  73                 	db	115
  1944  00FA10  70                 	db	112
  1945  00FA11  6C                 	db	108
  1946  00FA12  61                 	db	97
  1947  00FA13  79                 	db	121
  1948  00FA14  73                 	db	115
  1949  00FA15  20                 	db	32
  1950  00FA16  33                 	db	51
  1951  00FA17  00                 	db	0
  1952  00FA18  00                 	db	0
  1953  00FA19  00                 	db	0
  1954  00FA1A  00                 	db	0
  1955  00FA1B  00                 	db	0
  1956  00FA1C  00                 	db	0
  1957  00FA1D  00                 	db	0
  1958  00FA1E  00                 	db	0
  1959  00FA1F  63                 	db	99
  1960  00FA20  6F                 	db	111
  1961  00FA21  6D                 	db	109
  1962  00FA22  6D                 	db	109
  1963  00FA23  61                 	db	97
  1964  00FA24  6E                 	db	110
  1965  00FA25  64                 	db	100
  1966  00FA26  73                 	db	115
  1967  00FA27  20                 	db	32
  1968  00FA28  34                 	db	52
  1969  00FA29  00                 	db	0
  1970  00FA2A  00                 	db	0
  1971  00FA2B  00                 	db	0
  1972  00FA2C  00                 	db	0
  1973  00FA2D  00                 	db	0
  1974  00FA2E  00                 	db	0
  1975  00FA2F  00                 	db	0
  1976  00FA30  00                 	db	0
  1977  00FA31  64                 	db	100
  1978  00FA32  69                 	db	105
  1979  00FA33  73                 	db	115
  1980  00FA34  70                 	db	112
  1981  00FA35  6C                 	db	108
  1982  00FA36  61                 	db	97
  1983  00FA37  79                 	db	121
  1984  00FA38  73                 	db	115
  1985  00FA39  20                 	db	32
  1986  00FA3A  34                 	db	52
  1987  00FA3B  00                 	db	0
  1988  00FA3C  00                 	db	0
  1989  00FA3D  00                 	db	0
  1990  00FA3E  00                 	db	0
  1991  00FA3F  00                 	db	0
  1992  00FA40  00                 	db	0
  1993  00FA41  00                 	db	0
  1994  00FA42  00                 	db	0
  1995  00FA43                     __end_of_T:
  1996                           	opt callstack 0
  1997  00FA43                     _spin:
  1998                           	opt callstack 0
  1999  00FA43  7C                 	db	124
  2000  00FA44  7C                 	db	124
  2001  00FA45  2F                 	db	47
  2002  00FA46  2F                 	db	47
  2003  00FA47  2D                 	db	45
  2004  00FA48  2D                 	db	45
  2005  00FA49  00                 	db	0
  2006  00FA4A  00                 	db	0
  2007  00FA4B  00                 	db	0
  2008  00FA4C  00                 	db	0
  2009  00FA4D  00                 	db	0
  2010  00FA4E  00                 	db	0
  2011  00FA4F  00                 	db	0
  2012  00FA50  00                 	db	0
  2013  00FA51  00                 	db	0
  2014  00FA52  00                 	db	0
  2015  00FA53  00                 	db	0
  2016  00FA54  00                 	db	0
  2017  00FA55  00                 	db	0
  2018  00FA56  00                 	db	0
  2019  00FA57  7C                 	db	124
  2020  00FA58  7C                 	db	124
  2021  00FA59  2F                 	db	47
  2022  00FA5A  2F                 	db	47
  2023  00FA5B  2D                 	db	45
  2024  00FA5C  2D                 	db	45
  2025  00FA5D  5C                 	db	92
  2026  00FA5E  5C                 	db	92
  2027  00FA5F  00                 	db	0
  2028  00FA60  00                 	db	0
  2029  00FA61  00                 	db	0
  2030  00FA62  00                 	db	0
  2031  00FA63  00                 	db	0
  2032  00FA64  00                 	db	0
  2033  00FA65  00                 	db	0
  2034  00FA66  00                 	db	0
  2035  00FA67  00                 	db	0
  2036  00FA68  00                 	db	0
  2037  00FA69  00                 	db	0
  2038  00FA6A  00                 	db	0
  2039  00FA6B  4F                 	db	79
  2040  00FA6C  4F                 	db	79
  2041  00FA6D  4F                 	db	79
  2042  00FA6E  4F                 	db	79
  2043  00FA6F  4F                 	db	79
  2044  00FA70  4F                 	db	79
  2045  00FA71  2D                 	db	45
  2046  00FA72  2D                 	db	45
  2047  00FA73  5F                 	db	95
  2048  00FA74  5F                 	db	95
  2049  00FA75  2D                 	db	45
  2050  00FA76  00                 	db	0
  2051  00FA77  00                 	db	0
  2052  00FA78  00                 	db	0
  2053  00FA79  00                 	db	0
  2054  00FA7A  00                 	db	0
  2055  00FA7B  00                 	db	0
  2056  00FA7C  00                 	db	0
  2057  00FA7D  00                 	db	0
  2058  00FA7E  00                 	db	0
  2059  00FA7F  76                 	db	118
  2060  00FA80  76                 	db	118
  2061  00FA81  3C                 	db	60
  2062  00FA82  3C                 	db	60
  2063  00FA83  5E                 	db	94
  2064  00FA84  5E                 	db	94
  2065  00FA85  3E                 	db	62
  2066  00FA86  3E                 	db	62
  2067  00FA87  00                 	db	0
  2068  00FA88  00                 	db	0
  2069  00FA89  00                 	db	0
  2070  00FA8A  00                 	db	0
  2071  00FA8B  00                 	db	0
  2072  00FA8C  00                 	db	0
  2073  00FA8D  00                 	db	0
  2074  00FA8E  00                 	db	0
  2075  00FA8F  00                 	db	0
  2076  00FA90  00                 	db	0
  2077  00FA91  00                 	db	0
  2078  00FA92  00                 	db	0
  2079  00FA93  2E                 	db	46
  2080  00FA94  2E                 	db	46
  2081  00FA95  2A                 	db	42
  2082  00FA96  2A                 	db	42
  2083  00FA97  78                 	db	120
  2084  00FA98  23                 	db	35
  2085  00FA99  78                 	db	120
  2086  00FA9A  23                 	db	35
  2087  00FA9B  58                 	db	88
  2088  00FA9C  58                 	db	88
  2089  00FA9D  7C                 	db	124
  2090  00FA9E  7C                 	db	124
  2091  00FA9F  2D                 	db	45
  2092  00FAA0  2D                 	db	45
  2093  00FAA1  00                 	db	0
  2094  00FAA2  00                 	db	0
  2095  00FAA3  00                 	db	0
  2096  00FAA4  00                 	db	0
  2097  00FAA5  00                 	db	0
  2098  00FAA6  00                 	db	0
  2099  00FAA7  2E                 	db	46
  2100  00FAA8  2E                 	db	46
  2101  00FAA9  6F                 	db	111
  2102  00FAAA  6F                 	db	111
  2103  00FAAB  4F                 	db	79
  2104  00FAAC  4F                 	db	79
  2105  00FAAD  6F                 	db	111
  2106  00FAAE  6F                 	db	111
  2107  00FAAF  00                 	db	0
  2108  00FAB0  00                 	db	0
  2109  00FAB1  00                 	db	0
  2110  00FAB2  00                 	db	0
  2111  00FAB3  00                 	db	0
  2112  00FAB4  00                 	db	0
  2113  00FAB5  00                 	db	0
  2114  00FAB6  00                 	db	0
  2115  00FAB7  00                 	db	0
  2116  00FAB8  00                 	db	0
  2117  00FAB9  00                 	db	0
  2118  00FABA  00                 	db	0
  2119  00FABB                     __end_of_spin:
  2120                           	opt callstack 0
  2121  00FABB  0000               	dw	0
  2122  00FABD  3F80               	dw	16256
  2123  00FABF  0000               	dw	0
  2124  00FAC1  3FC0               	dw	16320
  2125  00FAC3                     __end_of_bp:
  2126                           	opt callstack 0
  2127  00FAC3  AA00               	dw	43520
  2128  00FAC5  3FB8               	dw	16312
  2129  00FAC7                     __end_of_ivln2_h:
  2130                           	opt callstack 0
  2131  00FAC7  23C6               	dw	9158
  2132  00FAC9  B8F6               	dw	47350
  2133  00FACB                     __end_of_cp_l:
  2134                           	opt callstack 0
  2135  00FACB  4000               	dw	16384
  2136  00FACD  3F76               	dw	16246
  2137  00FACF                     __end_of_cp_h:
  2138                           	opt callstack 0
  2139  0000                     _IVTADL	set	14493
  2140  0000                     _IVTADH	set	14494
  2141  0000                     _IVTADU	set	14495
  2142  0000                     _CRCDATH	set	14689
  2143  0000                     _CRCDATL	set	14688
  2144  0000                     _CRCCON0bits	set	14696
  2145  0000                     _CRCCON1bits	set	14697
  2146  0000                     _CRCXORL	set	14694
  2147  0000                     _CRCXORH	set	14695
  2148  0000                     _SCANTRIG	set	14717
  2149  0000                     _SCANHADRL	set	14713
  2150  0000                     _SCANHADRH	set	14714
  2151  0000                     _SCANHADRU	set	14715
  2152  0000                     _SCANLADRL	set	14710
  2153  0000                     _SCANLADRH	set	14711
  2154  0000                     _SCANLADRU	set	14712
  2155  0000                     _SCANCON0	set	14716
  2156  0000                     _CRCACCH	set	14691
  2157  0000                     _CRCACCL	set	14690
  2158  0000                     _CRCCON1	set	14697
  2159  0000                     _CRCCON0	set	14696
  2160  0000                     _PIR6bits	set	14758
  2161  0000                     _PIR4bits	set	14756
  2162  0000                     _PIE8bits	set	14744
  2163  0000                     _PIR8bits	set	14760
  2164  0000                     _PIR0bits	set	14752
  2165  0000                     _NVMCON2	set	14822
  2166  0000                     _NVMDAT	set	14819
  2167  0000                     _NVMADRL	set	14816
  2168  0000                     _NVMADRH	set	14817
  2169  0000                     _NVMCON1bits	set	14821
  2170  0000                     _SCANPR	set	14839
  2171  0000                     _DMA2PR	set	14836
  2172  0000                     _DMA1PR	set	14835
  2173  0000                     _MAINPR	set	14834
  2174  0000                     _ISRPR	set	14833
  2175  0000                     _PIE2bits	set	14738
  2176  0000                     _PIR2bits	set	14754
  2177  0000                     _PIE9bits	set	14745
  2178  0000                     _PIR9bits	set	14761
  2179  0000                     _PIE6bits	set	14742
  2180  0000                     _PIE3bits	set	14739
  2181  0000                     _PMD7	set	14791
  2182  0000                     _PMD6	set	14790
  2183  0000                     _PMD5	set	14789
  2184  0000                     _PMD4	set	14788
  2185  0000                     _PMD3	set	14787
  2186  0000                     _PMD2	set	14786
  2187  0000                     _PMD1	set	14785
  2188  0000                     _PMD0	set	14784
  2189  0000                     _OSCTUNE	set	14814
  2190  0000                     _OSCFRQ	set	14815
  2191  0000                     _OSCEN	set	14813
  2192  0000                     _OSCCON3	set	14811
  2193  0000                     _OSCCON1	set	14809
  2194  0000                     _IPR8bits	set	14728
  2195  0000                     _IPR9bits	set	14729
  2196  0000                     _IPR5bits	set	14725
  2197  0000                     _IPR1bits	set	14721
  2198  0000                     _IPR3bits	set	14723
  2199  0000                     _IPR6bits	set	14726
  2200  0000                     _IPR2bits	set	14722
  2201  0000                     _PIE5bits	set	14741
  2202  0000                     _PIE1bits	set	14737
  2203  0000                     _PIR5bits	set	14757
  2204  0000                     _PIR1bits	set	14753
  2205  0000                     _PLLR	set	118496
  2206  0000                     _SPI1SDIPPS	set	15071
  2207  0000                     _U1RXPPS	set	15077
  2208  0000                     _RC6PPS	set	14870
  2209  0000                     _RC5PPS	set	14869
  2210  0000                     _INT1PPS	set	15041
  2211  0000                     _RD1PPS	set	14873
  2212  0000                     _INT0PPS	set	15040
  2213  0000                     _RC3PPS	set	14867
  2214  0000                     _RB6PPS	set	14862
  2215  0000                     _SPI1SCKPPS	set	15070
  2216  0000                     _U2RXPPS	set	15080
  2217  0000                     _SLRCONF	set	14995
  2218  0000                     _SLRCONE	set	14979
  2219  0000                     _SLRCOND	set	14963
  2220  0000                     _SLRCONC	set	14947
  2221  0000                     _SLRCONB	set	14931
  2222  0000                     _SLRCONA	set	14915
  2223  0000                     _ODCOND	set	14962
  2224  0000                     _ODCONC	set	14946
  2225  0000                     _ODCONB	set	14930
  2226  0000                     _ODCONA	set	14914
  2227  0000                     _ODCONF	set	14994
  2228  0000                     _ODCONE	set	14978
  2229  0000                     _WPUC	set	14945
  2230  0000                     _WPUA	set	14913
  2231  0000                     _WPUB	set	14929
  2232  0000                     _WPUE	set	14977
  2233  0000                     _WPUF	set	14993
  2234  0000                     _WPUD	set	14961
  2235  0000                     _ANSELA	set	14912
  2236  0000                     _ANSELF	set	14992
  2237  0000                     _ANSELE	set	14976
  2238  0000                     _ANSELB	set	14928
  2239  0000                     _ANSELC	set	14944
  2240  0000                     _ANSELD	set	14960
  2241  0000                     _DMA2SSA	set	15321
  2242  0000                     _DMA1SSA	set	15353
  2243  0000                     _DMA2DSZ	set	15310
  2244  0000                     _DMA2SSZ	set	15319
  2245  0000                     _DMA2DSA	set	15312
  2246  0000                     _DMA1DSZ	set	15342
  2247  0000                     _DMA1SSZ	set	15351
  2248  0000                     _DMA1DSA	set	15344
  2249  0000                     _DMA2CON0bits	set	15324
  2250  0000                     _DMA2CON1bits	set	15325
  2251  0000                     _DMA1CON0bits	set	15356
  2252  0000                     _DMA1CON1bits	set	15357
  2253  0000                     _DMA2CON0	set	15324
  2254  0000                     _DMA2AIRQ	set	15326
  2255  0000                     _DMA2SIRQ	set	15327
  2256  0000                     _DMA2CON1	set	15325
  2257  0000                     _DMA1CON0	set	15356
  2258  0000                     _DMA1AIRQ	set	15358
  2259  0000                     _DMA1SIRQ	set	15359
  2260  0000                     _DMA1CON1	set	15357
  2261  0000                     _CLKRCON	set	15589
  2262  0000                     _CLKRCLK	set	15590
  2263  0000                     _SPI1CON1bits	set	15637
  2264  0000                     _SPI1STATUSbits	set	15639
  2265  0000                     _SPI1INTFbits	set	15642
  2266  0000                     _SPI1CON0bits	set	15636
  2267  0000                     _SPI1RXB	set	15632
  2268  0000                     _SPI1TXB	set	15633
  2269  0000                     _SPI1TCNTL	set	15634
  2270  0000                     _SPI1CON0	set	15636
  2271  0000                     _SPI1CLK	set	15644
  2272  0000                     _SPI1BAUD	set	15641
  2273  0000                     _SPI1CON2	set	15638
  2274  0000                     _SPI1CON1	set	15637
  2275  0000                     _U2RXB	set	15824
  2276  0000                     _U2TXB	set	15826
  2277  0000                     _U2ERRIE	set	15842
  2278  0000                     _U2ERRIR	set	15841
  2279  0000                     _U2UIR	set	15840
  2280  0000                     _U2FIFO	set	15839
  2281  0000                     _U2BRGH	set	15838
  2282  0000                     _U2BRGL	set	15837
  2283  0000                     _U2CON2	set	15836
  2284  0000                     _U2CON1	set	15835
  2285  0000                     _U2CON0	set	15834
  2286  0000                     _U2P3L	set	15832
  2287  0000                     _U2P2L	set	15830
  2288  0000                     _U2P1L	set	15828
  2289  0000                     _U1RXB	set	15848
  2290  0000                     _U1ERRIE	set	15866
  2291  0000                     _U1ERRIR	set	15865
  2292  0000                     _U1UIR	set	15864
  2293  0000                     _U1FIFO	set	15863
  2294  0000                     _U1BRGH	set	15862
  2295  0000                     _U1BRGL	set	15861
  2296  0000                     _U1CON2	set	15860
  2297  0000                     _U1CON1	set	15859
  2298  0000                     _U1CON0	set	15858
  2299  0000                     _U1P3H	set	15857
  2300  0000                     _U1P3L	set	15856
  2301  0000                     _U1P2H	set	15855
  2302  0000                     _U1P2L	set	15854
  2303  0000                     _U1P1H	set	15853
  2304  0000                     _U1P1L	set	15852
  2305  0000                     _FVRCON	set	16065
  2306  0000                     _ADFLTRL	set	16102
  2307  0000                     _ADFLTRH	set	16103
  2308  0000                     _ADCON0bits	set	16120
  2309  0000                     _ADCON0	set	16120
  2310  0000                     _ADCLK	set	16127
  2311  0000                     _ADACT	set	16126
  2312  0000                     _ADREF	set	16125
  2313  0000                     _ADSTAT	set	16124
  2314  0000                     _ADCON3	set	16123
  2315  0000                     _ADCON2	set	16122
  2316  0000                     _ADCON1	set	16121
  2317  0000                     _ADPREH	set	16119
  2318  0000                     _ADPREL	set	16118
  2319  0000                     _ADCAP	set	16117
  2320  0000                     _ADACQH	set	16116
  2321  0000                     _ADACQL	set	16115
  2322  0000                     _ADPCH	set	16113
  2323  0000                     _ADRPT	set	16108
  2324  0000                     _ADACCU	set	16106
  2325  0000                     _ADSTPTH	set	16101
  2326  0000                     _ADSTPTL	set	16100
  2327  0000                     _ADUTHH	set	16097
  2328  0000                     _ADUTHL	set	16096
  2329  0000                     _ADLTHH	set	16095
  2330  0000                     _ADLTHL	set	16094
  2331  0000                     _CCPTMRS1bits	set	16223
  2332  0000                     _PORTDbits	set	16333
  2333  0000                     _PORTFbits	set	16335
  2334  0000                     _LATFbits	set	16319
  2335  0000                     _LATCbits	set	16316
  2336  0000                     _LATDbits	set	16317
  2337  0000                     _PORTBbits	set	16331
  2338  0000                     _T3CONbits	set	16294
  2339  0000                     _T3CON	set	16294
  2340  0000                     _TMR3L	set	16292
  2341  0000                     _TMR3H	set	16293
  2342  0000                     _T3CLK	set	16297
  2343  0000                     _T3GATE	set	16296
  2344  0000                     _T3GCON	set	16295
  2345  0000                     _T2CON	set	16300
  2346  0000                     _T2TMR	set	16298
  2347  0000                     _T2PR	set	16299
  2348  0000                     _T2RST	set	16303
  2349  0000                     _T2HLT	set	16301
  2350  0000                     _T2CLKCON	set	16302
  2351  0000                     _PWM8DCL	set	16224
  2352  0000                     _PWM8DCH	set	16225
  2353  0000                     _PWM8CON	set	16226
  2354  0000                     _LATEbits	set	16318
  2355  0000                     _T5CONbits	set	16282
  2356  0000                     _T5CON	set	16282
  2357  0000                     _TMR5L	set	16280
  2358  0000                     _TMR5H	set	16281
  2359  0000                     _T5CLK	set	16285
  2360  0000                     _T5GATE	set	16284
  2361  0000                     _T5GCON	set	16283
  2362  0000                     _T6CON	set	16276
  2363  0000                     _T6TMR	set	16274
  2364  0000                     _T6PR	set	16275
  2365  0000                     _T6RST	set	16279
  2366  0000                     _T6HLT	set	16277
  2367  0000                     _T6CLKCON	set	16278
  2368  0000                     _TRISD	set	16325
  2369  0000                     _TRISC	set	16324
  2370  0000                     _TRISB	set	16323
  2371  0000                     _TRISA	set	16322
  2372  0000                     _TRISF	set	16327
  2373  0000                     _TRISE	set	16326
  2374  0000                     _LATC	set	16316
  2375  0000                     _LATB	set	16315
  2376  0000                     _LATF	set	16319
  2377  0000                     _LATA	set	16314
  2378  0000                     _LATD	set	16317
  2379  0000                     _LATE	set	16318
  2380  0000                     _IVTLOCKbits	set	16340
  2381  0000                     _IVTLOCK	set	16340
  2382  0000                     _INTCON0bits	set	16338
  2383  0000                     _GIE	set	130711
  2384  00FACF                     STR_81:
  2385                           
  2386                           ; BSR set to: 57
  2387  00FACF  20                 	db	32
  2388  00FAD0  25                 	db	37
  2389  00FAD1  63                 	db	99	;'c'
  2390  00FAD2  20                 	db	32
  2391  00FAD3  2C                 	db	44
  2392  00FAD4  25                 	db	37
  2393  00FAD5  6C                 	db	108	;'l'
  2394  00FAD6  75                 	db	117	;'u'
  2395  00FAD7  2C                 	db	44
  2396  00FAD8  25                 	db	37
  2397  00FAD9  34                 	db	52	;'4'
  2398  00FADA  2E                 	db	46
  2399  00FADB  34                 	db	52	;'4'
  2400  00FADC  66                 	db	102	;'f'
  2401  00FADD  2C                 	db	44
  2402  00FADE  25                 	db	37
  2403  00FADF  34                 	db	52	;'4'
  2404  00FAE0  2E                 	db	46
  2405  00FAE1  34                 	db	52	;'4'
  2406  00FAE2  66                 	db	102	;'f'
  2407  00FAE3  2C                 	db	44
  2408  00FAE4  25                 	db	37
  2409  00FAE5  34                 	db	52	;'4'
  2410  00FAE6  2E                 	db	46
  2411  00FAE7  34                 	db	52	;'4'
  2412  00FAE8  66                 	db	102	;'f'
  2413  00FAE9  2C                 	db	44
  2414  00FAEA  25                 	db	37
  2415  00FAEB  34                 	db	52	;'4'
  2416  00FAEC  2E                 	db	46
  2417  00FAED  34                 	db	52	;'4'
  2418  00FAEE  66                 	db	102	;'f'
  2419  00FAEF  2C                 	db	44
  2420  00FAF0  25                 	db	37
  2421  00FAF1  34                 	db	52	;'4'
  2422  00FAF2  2E                 	db	46
  2423  00FAF3  34                 	db	52	;'4'
  2424  00FAF4  66                 	db	102	;'f'
  2425  00FAF5  2C                 	db	44
  2426  00FAF6  25                 	db	37
  2427  00FAF7  34                 	db	52	;'4'
  2428  00FAF8  2E                 	db	46
  2429  00FAF9  33                 	db	51	;'3'
  2430  00FAFA  66                 	db	102	;'f'
  2431  00FAFB  2C                 	db	44
  2432  00FAFC  25                 	db	37
  2433  00FAFD  34                 	db	52	;'4'
  2434  00FAFE  2E                 	db	46
  2435  00FAFF  33                 	db	51	;'3'
  2436  00FB00  66                 	db	102	;'f'
  2437  00FB01  2C                 	db	44
  2438  00FB02  25                 	db	37
  2439  00FB03  34                 	db	52	;'4'
  2440  00FB04  2E                 	db	46
  2441  00FB05  33                 	db	51	;'3'
  2442  00FB06  66                 	db	102	;'f'
  2443  00FB07  2C                 	db	44
  2444  00FB08  25                 	db	37
  2445  00FB09  34                 	db	52	;'4'
  2446  00FB0A  2E                 	db	46
  2447  00FB0B  33                 	db	51	;'3'
  2448  00FB0C  66                 	db	102	;'f'
  2449  00FB0D  2C                 	db	44
  2450  00FB0E  25                 	db	37
  2451  00FB0F  34                 	db	52	;'4'
  2452  00FB10  2E                 	db	46
  2453  00FB11  33                 	db	51	;'3'
  2454  00FB12  66                 	db	102	;'f'
  2455  00FB13  2C                 	db	44
  2456  00FB14  25                 	db	37
  2457  00FB15  34                 	db	52	;'4'
  2458  00FB16  2E                 	db	46
  2459  00FB17  33                 	db	51	;'3'
  2460  00FB18  66                 	db	102	;'f'
  2461  00FB19  2C                 	db	44
  2462  00FB1A  25                 	db	37
  2463  00FB1B  64                 	db	100	;'d'
  2464  00FB1C  2C                 	db	44
  2465  00FB1D  25                 	db	37
  2466  00FB1E  64                 	db	100	;'d'
  2467  00FB1F  2C                 	db	44
  2468  00FB20  25                 	db	37
  2469  00FB21  32                 	db	50	;'2'
  2470  00FB22  2E                 	db	46
  2471  00FB23  36                 	db	54	;'6'
  2472  00FB24  66                 	db	102	;'f'
  2473  00FB25  2C                 	db	44
  2474  00FB26  25                 	db	37
  2475  00FB27  34                 	db	52	;'4'
  2476  00FB28  2E                 	db	46
  2477  00FB29  33                 	db	51	;'3'
  2478  00FB2A  66                 	db	102	;'f'
  2479  00FB2B  2C                 	db	44
  2480  00FB2C  25                 	db	37
  2481  00FB2D  64                 	db	100	;'d'
  2482  00FB2E  2C                 	db	44
  2483  00FB2F  25                 	db	37
  2484  00FB30  64                 	db	100	;'d'
  2485  00FB31  2C                 	db	44
  2486  00FB32  25                 	db	37
  2487  00FB33  6C                 	db	108	;'l'
  2488  00FB34  75                 	db	117	;'u'
  2489  00FB35  2C                 	db	44
  2490  00FB36  25                 	db	37
  2491  00FB37  6C                 	db	108	;'l'
  2492  00FB38  75                 	db	117	;'u'
  2493  00FB39  2C                 	db	44
  2494  00FB3A  25                 	db	37
  2495  00FB3B  34                 	db	52	;'4'
  2496  00FB3C  2E                 	db	46
  2497  00FB3D  33                 	db	51	;'3'
  2498  00FB3E  66                 	db	102	;'f'
  2499  00FB3F  2C                 	db	44
  2500  00FB40  25                 	db	37
  2501  00FB41  34                 	db	52	;'4'
  2502  00FB42  2E                 	db	46
  2503  00FB43  33                 	db	51	;'3'
  2504  00FB44  66                 	db	102	;'f'
  2505  00FB45  2C                 	db	44
  2506  00FB46  25                 	db	37
  2507  00FB47  34                 	db	52	;'4'
  2508  00FB48  2E                 	db	46
  2509  00FB49  33                 	db	51	;'3'
  2510  00FB4A  66                 	db	102	;'f'
  2511  00FB4B  0D                 	db	13
  2512  00FB4C  0A                 	db	10
  2513  00FB4D  00                 	db	0
  2514  00FB4E                     STR_39:
  2515                           
  2516                           ; BSR set to: 57
  2517  00FB4E  53                 	db	83	;'S'
  2518  00FB4F  25                 	db	37
  2519  00FB50  63                 	db	99	;'c'
  2520  00FB51  43                 	db	67	;'C'
  2521  00FB52  20                 	db	32
  2522  00FB53  25                 	db	37
  2523  00FB54  64                 	db	100	;'d'
  2524  00FB55  20                 	db	32
  2525  00FB56  52                 	db	82	;'R'
  2526  00FB57  55                 	db	85	;'U'
  2527  00FB58  4E                 	db	78	;'N'
  2528  00FB59  20                 	db	32
  2529  00FB5A  25                 	db	37
  2530  00FB5B  64                 	db	100	;'d'
  2531  00FB5C  20                 	db	32
  2532  00FB5D  56                 	db	86	;'V'
  2533  00FB5E  25                 	db	37
  2534  00FB5F  32                 	db	50	;'2'
  2535  00FB60  2E                 	db	46
  2536  00FB61  32                 	db	50	;'2'
  2537  00FB62  66                 	db	102	;'f'
  2538  00FB63  20                 	db	32
  2539  00FB64  20                 	db	32
  2540  00FB65  20                 	db	32
  2541  00FB66  20                 	db	32
  2542  00FB67  20                 	db	32
  2543  00FB68  20                 	db	32
  2544  00FB69  20                 	db	32
  2545  00FB6A  00                 	db	0
  2546  00FB6B                     STR_20:
  2547                           
  2548                           ; BSR set to: 57
  2549  00FB6B  52                 	db	82	;'R'
  2550  00FB6C  31                 	db	49	;'1'
  2551  00FB6D  20                 	db	32
  2552  00FB6E  25                 	db	37
  2553  00FB6F  32                 	db	50	;'2'
  2554  00FB70  2E                 	db	46
  2555  00FB71  33                 	db	51	;'3'
  2556  00FB72  66                 	db	102	;'f'
  2557  00FB73  20                 	db	32
  2558  00FB74  25                 	db	37
  2559  00FB75  33                 	db	51	;'3'
  2560  00FB76  2E                 	db	46
  2561  00FB77  34                 	db	52	;'4'
  2562  00FB78  66                 	db	102	;'f'
  2563  00FB79  20                 	db	32
  2564  00FB7A  20                 	db	32
  2565  00FB7B  20                 	db	32
  2566  00FB7C  20                 	db	32
  2567  00FB7D  20                 	db	32
  2568  00FB7E  20                 	db	32
  2569  00FB7F  20                 	db	32
  2570  00FB80  20                 	db	32
  2571  00FB81  20                 	db	32
  2572  00FB82  20                 	db	32
  2573  00FB83  20                 	db	32
  2574  00FB84  00                 	db	0
  2575  00FB85                     STR_21:
  2576                           
  2577                           ; BSR set to: 57
  2578  00FB85  52                 	db	82	;'R'
  2579  00FB86  32                 	db	50	;'2'
  2580  00FB87  20                 	db	32
  2581  00FB88  25                 	db	37
  2582  00FB89  32                 	db	50	;'2'
  2583  00FB8A  2E                 	db	46
  2584  00FB8B  33                 	db	51	;'3'
  2585  00FB8C  66                 	db	102	;'f'
  2586  00FB8D  20                 	db	32
  2587  00FB8E  25                 	db	37
  2588  00FB8F  33                 	db	51	;'3'
  2589  00FB90  2E                 	db	46
  2590  00FB91  34                 	db	52	;'4'
  2591  00FB92  66                 	db	102	;'f'
  2592  00FB93  20                 	db	32
  2593  00FB94  20                 	db	32
  2594  00FB95  20                 	db	32
  2595  00FB96  20                 	db	32
  2596  00FB97  20                 	db	32
  2597  00FB98  20                 	db	32
  2598  00FB99  20                 	db	32
  2599  00FB9A  20                 	db	32
  2600  00FB9B  20                 	db	32
  2601  00FB9C  20                 	db	32
  2602  00FB9D  20                 	db	32
  2603  00FB9E  00                 	db	0
  2604  00FB9F                     STR_11:
  2605                           
  2606                           ; BSR set to: 57
  2607  00FB9F  53                 	db	83	;'S'
  2608  00FBA0  20                 	db	32
  2609  00FBA1  53                 	db	83	;'S'
  2610  00FBA2  25                 	db	37
  2611  00FBA3  63                 	db	99	;'c'
  2612  00FBA4  43                 	db	67	;'C'
  2613  00FBA5  20                 	db	32
  2614  00FBA6  25                 	db	37
  2615  00FBA7  64                 	db	100	;'d'
  2616  00FBA8  20                 	db	32
  2617  00FBA9  25                 	db	37
  2618  00FBAA  32                 	db	50	;'2'
  2619  00FBAB  2E                 	db	46
  2620  00FBAC  34                 	db	52	;'4'
  2621  00FBAD  66                 	db	102	;'f'
  2622  00FBAE  20                 	db	32
  2623  00FBAF  20                 	db	32
  2624  00FBB0  20                 	db	32
  2625  00FBB1  20                 	db	32
  2626  00FBB2  20                 	db	32
  2627  00FBB3  20                 	db	32
  2628  00FBB4  20                 	db	32
  2629  00FBB5  20                 	db	32
  2630  00FBB6  20                 	db	32
  2631  00FBB7  20                 	db	32
  2632  00FBB8  00                 	db	0
  2633  00FBB9                     
  2634                           ; BSR set to: 57
  2635  00FBB9  20                 	db	32
  2636  00FBBA  4D                 	db	77	;'M'
  2637  00FBBB  65                 	db	101	;'e'
  2638  00FBBC  73                 	db	115	;'s'
  2639  00FBBD  67                 	db	103	;'g'
  2640  00FBBE  20                 	db	32
  2641  00FBBF  25                 	db	37
  2642  00FBC0  64                 	db	100	;'d'
  2643  00FBC1  20                 	db	32
  2644  00FBC2  53                 	db	83	;'S'
  2645  00FBC3  74                 	db	116	;'t'
  2646  00FBC4  61                 	db	97	;'a'
  2647  00FBC5  63                 	db	99	;'c'
  2648  00FBC6  6B                 	db	107	;'k'
  2649  00FBC7  20                 	db	32
  2650  00FBC8  25                 	db	37
  2651  00FBC9  64                 	db	100	;'d'
  2652  00FBCA  20                 	db	32
  2653  00FBCB  20                 	db	32
  2654  00FBCC  20                 	db	32
  2655  00FBCD  20                 	db	32
  2656  00FBCE  20                 	db	32
  2657  00FBCF  20                 	db	32
  2658  00FBD0  00                 	db	0
  2659  00FBD1                     STR_40:
  2660                           
  2661                           ; BSR set to: 57
  2662  00FBD1  45                 	db	69	;'E'
  2663  00FBD2  53                 	db	83	;'S'
  2664  00FBD3  52                 	db	82	;'R'
  2665  00FBD4  20                 	db	32
  2666  00FBD5  20                 	db	32
  2667  00FBD6  25                 	db	37
  2668  00FBD7  32                 	db	50	;'2'
  2669  00FBD8  2E                 	db	46
  2670  00FBD9  36                 	db	54	;'6'
  2671  00FBDA  66                 	db	102	;'f'
  2672  00FBDB  20                 	db	32
  2673  00FBDC  20                 	db	32
  2674  00FBDD  20                 	db	32
  2675  00FBDE  20                 	db	32
  2676  00FBDF  20                 	db	32
  2677  00FBE0  20                 	db	32
  2678  00FBE1  20                 	db	32
  2679  00FBE2  20                 	db	32
  2680  00FBE3  20                 	db	32
  2681  00FBE4  20                 	db	32
  2682  00FBE5  20                 	db	32
  2683  00FBE6  20                 	db	32
  2684  00FBE7  00                 	db	0
  2685  00FBE8                     STR_37:
  2686                           
  2687                           ; BSR set to: 57
  2688  00FBE8  42                 	db	66	;'B'
  2689  00FBE9  41                 	db	65	;'A'
  2690  00FBEA  54                 	db	84	;'T'
  2691  00FBEB  54                 	db	84	;'T'
  2692  00FBEC  20                 	db	32
  2693  00FBED  50                 	db	80	;'P'
  2694  00FBEE  57                 	db	87	;'W'
  2695  00FBEF  52                 	db	82	;'R'
  2696  00FBF0  20                 	db	32
  2697  00FBF1  25                 	db	37
  2698  00FBF2  33                 	db	51	;'3'
  2699  00FBF3  2E                 	db	46
  2700  00FBF4  32                 	db	50	;'2'
  2701  00FBF5  66                 	db	102	;'f'
  2702  00FBF6  20                 	db	32
  2703  00FBF7  20                 	db	32
  2704  00FBF8  20                 	db	32
  2705  00FBF9  20                 	db	32
  2706  00FBFA  20                 	db	32
  2707  00FBFB  20                 	db	32
  2708  00FBFC  20                 	db	32
  2709  00FBFD  20                 	db	32
  2710  00FBFE  00                 	db	0
  2711  00FBFF                     STR_41:
  2712                           
  2713                           ; BSR set to: 57
  2714  00FBFF  52                 	db	82	;'R'
  2715  00FC00  31                 	db	49	;'1'
  2716  00FC01  20                 	db	32
  2717  00FC02  25                 	db	37
  2718  00FC03  32                 	db	50	;'2'
  2719  00FC04  2E                 	db	46
  2720  00FC05  33                 	db	51	;'3'
  2721  00FC06  66                 	db	102	;'f'
  2722  00FC07  20                 	db	32
  2723  00FC08  25                 	db	37
  2724  00FC09  33                 	db	51	;'3'
  2725  00FC0A  2E                 	db	46
  2726  00FC0B  34                 	db	52	;'4'
  2727  00FC0C  66                 	db	102	;'f'
  2728  00FC0D  20                 	db	32
  2729  00FC0E  20                 	db	32
  2730  00FC0F  20                 	db	32
  2731  00FC10  20                 	db	32
  2732  00FC11  20                 	db	32
  2733  00FC12  20                 	db	32
  2734  00FC13  20                 	db	32
  2735  00FC14  20                 	db	32
  2736  00FC15  00                 	db	0
  2737  00FC16                     STR_42:
  2738                           
  2739                           ; BSR set to: 57
  2740  00FC16  52                 	db	82	;'R'
  2741  00FC17  32                 	db	50	;'2'
  2742  00FC18  20                 	db	32
  2743  00FC19  25                 	db	37
  2744  00FC1A  32                 	db	50	;'2'
  2745  00FC1B  2E                 	db	46
  2746  00FC1C  33                 	db	51	;'3'
  2747  00FC1D  66                 	db	102	;'f'
  2748  00FC1E  20                 	db	32
  2749  00FC1F  25                 	db	37
  2750  00FC20  33                 	db	51	;'3'
  2751  00FC21  2E                 	db	46
  2752  00FC22  34                 	db	52	;'4'
  2753  00FC23  66                 	db	102	;'f'
  2754  00FC24  20                 	db	32
  2755  00FC25  20                 	db	32
  2756  00FC26  20                 	db	32
  2757  00FC27  20                 	db	32
  2758  00FC28  20                 	db	32
  2759  00FC29  20                 	db	32
  2760  00FC2A  20                 	db	32
  2761  00FC2B  20                 	db	32
  2762  00FC2C  00                 	db	0
  2763  00FC2D                     STR_38:
  2764                           
  2765                           ; BSR set to: 57
  2766  00FC2D  42                 	db	66	;'B'
  2767  00FC2E  41                 	db	65	;'A'
  2768  00FC2F  48                 	db	72	;'H'
  2769  00FC30  20                 	db	32
  2770  00FC31  25                 	db	37
  2771  00FC32  33                 	db	51	;'3'
  2772  00FC33  2E                 	db	46
  2773  00FC34  32                 	db	50	;'2'
  2774  00FC35  66                 	db	102	;'f'
  2775  00FC36  20                 	db	32
  2776  00FC37  50                 	db	80	;'P'
  2777  00FC38  25                 	db	37
  2778  00FC39  33                 	db	51	;'3'
  2779  00FC3A  2E                 	db	46
  2780  00FC3B  32                 	db	50	;'2'
  2781  00FC3C  66                 	db	102	;'f'
  2782  00FC3D  20                 	db	32
  2783  00FC3E  20                 	db	32
  2784  00FC3F  20                 	db	32
  2785  00FC40  20                 	db	32
  2786  00FC41  20                 	db	32
  2787  00FC42  20                 	db	32
  2788  00FC43  00                 	db	0
  2789  00FC44                     STR_14:
  2790                           
  2791                           ; BSR set to: 57
  2792  00FC44  20                 	db	32
  2793  00FC45  20                 	db	32
  2794  00FC46  20                 	db	32
  2795  00FC47  20                 	db	32
  2796  00FC48  20                 	db	32
  2797  00FC49  20                 	db	32
  2798  00FC4A  20                 	db	32
  2799  00FC4B  20                 	db	32
  2800  00FC4C  20                 	db	32
  2801  00FC4D  20                 	db	32
  2802  00FC4E  20                 	db	32
  2803  00FC4F  20                 	db	32
  2804  00FC50  20                 	db	32
  2805  00FC51  20                 	db	32
  2806  00FC52  20                 	db	32
  2807  00FC53  20                 	db	32
  2808  00FC54  20                 	db	32
  2809  00FC55  20                 	db	32
  2810  00FC56  20                 	db	32
  2811  00FC57  20                 	db	32
  2812  00FC58  20                 	db	32
  2813  00FC59  00                 	db	0
  2814  00FC5A                     STR_19:
  2815                           
  2816                           ; BSR set to: 57
  2817  00FC5A  45                 	db	69	;'E'
  2818  00FC5B  53                 	db	83	;'S'
  2819  00FC5C  52                 	db	82	;'R'
  2820  00FC5D  20                 	db	32
  2821  00FC5E  20                 	db	32
  2822  00FC5F  25                 	db	37
  2823  00FC60  32                 	db	50	;'2'
  2824  00FC61  2E                 	db	46
  2825  00FC62  36                 	db	54	;'6'
  2826  00FC63  66                 	db	102	;'f'
  2827  00FC64  20                 	db	32
  2828  00FC65  20                 	db	32
  2829  00FC66  20                 	db	32
  2830  00FC67  20                 	db	32
  2831  00FC68  20                 	db	32
  2832  00FC69  20                 	db	32
  2833  00FC6A  20                 	db	32
  2834  00FC6B  20                 	db	32
  2835  00FC6C  20                 	db	32
  2836  00FC6D  20                 	db	32
  2837  00FC6E  20                 	db	32
  2838  00FC6F  00                 	db	0
  2839  00FC70                     STR_12:
  2840                           
  2841                           ; BSR set to: 57
  2842  00FC70  53                 	db	83	;'S'
  2843  00FC71  74                 	db	116	;'t'
  2844  00FC72  61                 	db	97	;'a'
  2845  00FC73  74                 	db	116	;'t'
  2846  00FC74  69                 	db	105	;'i'
  2847  00FC75  63                 	db	99	;'c'
  2848  00FC76  20                 	db	32
  2849  00FC77  53                 	db	83	;'S'
  2850  00FC78  4F                 	db	79	;'O'
  2851  00FC79  43                 	db	67	;'C'
  2852  00FC7A  20                 	db	32
  2853  00FC7B  25                 	db	37
  2854  00FC7C  64                 	db	100	;'d'
  2855  00FC7D  20                 	db	32
  2856  00FC7E  20                 	db	32
  2857  00FC7F  20                 	db	32
  2858  00FC80  20                 	db	32
  2859  00FC81  20                 	db	32
  2860  00FC82  20                 	db	32
  2861  00FC83  20                 	db	32
  2862  00FC84  20                 	db	32
  2863  00FC85  00                 	db	0
  2864  00FC86                     STR_34:
  2865                           
  2866                           ; BSR set to: 57
  2867  00FC86  42                 	db	66	;'B'
  2868  00FC87  41                 	db	65	;'A'
  2869  00FC88  54                 	db	84	;'T'
  2870  00FC89  20                 	db	32
  2871  00FC8A  49                 	db	73	;'I'
  2872  00FC8B  57                 	db	87	;'W'
  2873  00FC8C  48                 	db	72	;'H'
  2874  00FC8D  20                 	db	32
  2875  00FC8E  25                 	db	37
  2876  00FC8F  34                 	db	52	;'4'
  2877  00FC90  2E                 	db	46
  2878  00FC91  31                 	db	49	;'1'
  2879  00FC92  66                 	db	102	;'f'
  2880  00FC93  20                 	db	32
  2881  00FC94  20                 	db	32
  2882  00FC95  20                 	db	32
  2883  00FC96  20                 	db	32
  2884  00FC97  20                 	db	32
  2885  00FC98  20                 	db	32
  2886  00FC99  20                 	db	32
  2887  00FC9A  20                 	db	32
  2888  00FC9B  00                 	db	0
  2889  00FC9C                     STR_35:
  2890                           
  2891                           ; BSR set to: 57
  2892  00FC9C  42                 	db	66	;'B'
  2893  00FC9D  41                 	db	65	;'A'
  2894  00FC9E  54                 	db	84	;'T'
  2895  00FC9F  20                 	db	32
  2896  00FCA0  4F                 	db	79	;'O'
  2897  00FCA1  57                 	db	87	;'W'
  2898  00FCA2  48                 	db	72	;'H'
  2899  00FCA3  20                 	db	32
  2900  00FCA4  25                 	db	37
  2901  00FCA5  34                 	db	52	;'4'
  2902  00FCA6  2E                 	db	46
  2903  00FCA7  31                 	db	49	;'1'
  2904  00FCA8  66                 	db	102	;'f'
  2905  00FCA9  20                 	db	32
  2906  00FCAA  20                 	db	32
  2907  00FCAB  20                 	db	32
  2908  00FCAC  20                 	db	32
  2909  00FCAD  20                 	db	32
  2910  00FCAE  20                 	db	32
  2911  00FCAF  20                 	db	32
  2912  00FCB0  20                 	db	32
  2913  00FCB1  00                 	db	0
  2914  00FCB2                     STR_36:
  2915                           
  2916                           ; BSR set to: 57
  2917  00FCB2  42                 	db	66	;'B'
  2918  00FCB3  41                 	db	65	;'A'
  2919  00FCB4  54                 	db	84	;'T'
  2920  00FCB5  20                 	db	32
  2921  00FCB6  54                 	db	84	;'T'
  2922  00FCB7  57                 	db	87	;'W'
  2923  00FCB8  48                 	db	72	;'H'
  2924  00FCB9  20                 	db	32
  2925  00FCBA  25                 	db	37
  2926  00FCBB  34                 	db	52	;'4'
  2927  00FCBC  2E                 	db	46
  2928  00FCBD  31                 	db	49	;'1'
  2929  00FCBE  66                 	db	102	;'f'
  2930  00FCBF  20                 	db	32
  2931  00FCC0  20                 	db	32
  2932  00FCC1  20                 	db	32
  2933  00FCC2  20                 	db	32
  2934  00FCC3  20                 	db	32
  2935  00FCC4  20                 	db	32
  2936  00FCC5  20                 	db	32
  2937  00FCC6  20                 	db	32
  2938  00FCC7  00                 	db	0
  2939  00FCC8                     STR_30:
  2940                           
  2941                           ; BSR set to: 57
  2942  00FCC8  49                 	db	73	;'I'
  2943  00FCC9  4E                 	db	78	;'N'
  2944  00FCCA  56                 	db	86	;'V'
  2945  00FCCB  20                 	db	32
  2946  00FCCC  20                 	db	32
  2947  00FCCD  57                 	db	87	;'W'
  2948  00FCCE  48                 	db	72	;'H'
  2949  00FCCF  20                 	db	32
  2950  00FCD0  25                 	db	37
  2951  00FCD1  33                 	db	51	;'3'
  2952  00FCD2  2E                 	db	46
  2953  00FCD3  32                 	db	50	;'2'
  2954  00FCD4  66                 	db	102	;'f'
  2955  00FCD5  20                 	db	32
  2956  00FCD6  20                 	db	32
  2957  00FCD7  20                 	db	32
  2958  00FCD8  20                 	db	32
  2959  00FCD9  20                 	db	32
  2960  00FCDA  20                 	db	32
  2961  00FCDB  20                 	db	32
  2962  00FCDC  20                 	db	32
  2963  00FCDD  00                 	db	0
  2964  00FCDE                     STR_29:
  2965                           
  2966                           ; BSR set to: 57
  2967  00FCDE  4C                 	db	76	;'L'
  2968  00FCDF  4F                 	db	79	;'O'
  2969  00FCE0  41                 	db	65	;'A'
  2970  00FCE1  44                 	db	68	;'D'
  2971  00FCE2  20                 	db	32
  2972  00FCE3  57                 	db	87	;'W'
  2973  00FCE4  48                 	db	72	;'H'
  2974  00FCE5  20                 	db	32
  2975  00FCE6  25                 	db	37
  2976  00FCE7  33                 	db	51	;'3'
  2977  00FCE8  2E                 	db	46
  2978  00FCE9  32                 	db	50	;'2'
  2979  00FCEA  66                 	db	102	;'f'
  2980  00FCEB  20                 	db	32
  2981  00FCEC  20                 	db	32
  2982  00FCED  20                 	db	32
  2983  00FCEE  20                 	db	32
  2984  00FCEF  20                 	db	32
  2985  00FCF0  20                 	db	32
  2986  00FCF1  20                 	db	32
  2987  00FCF2  20                 	db	32
  2988  00FCF3  00                 	db	0
  2989  00FCF4                     STR_28:
  2990                           
  2991                           ; BSR set to: 57
  2992  00FCF4  50                 	db	80	;'P'
  2993  00FCF5  56                 	db	86	;'V'
  2994  00FCF6  20                 	db	32
  2995  00FCF7  25                 	db	37
  2996  00FCF8  63                 	db	99	;'c'
  2997  00FCF9  20                 	db	32
  2998  00FCFA  57                 	db	87	;'W'
  2999  00FCFB  48                 	db	72	;'H'
  3000  00FCFC  20                 	db	32
  3001  00FCFD  25                 	db	37
  3002  00FCFE  33                 	db	51	;'3'
  3003  00FCFF  2E                 	db	46
  3004  00FD00  32                 	db	50	;'2'
  3005  00FD01  66                 	db	102	;'f'
  3006  00FD02  20                 	db	32
  3007  00FD03  20                 	db	32
  3008  00FD04  20                 	db	32
  3009  00FD05  20                 	db	32
  3010  00FD06  20                 	db	32
  3011  00FD07  20                 	db	32
  3012  00FD08  20                 	db	32
  3013  00FD09  00                 	db	0
  3014  00FD0A                     STR_27:
  3015                           
  3016                           ; BSR set to: 57
  3017  00FD0A  49                 	db	73	;'I'
  3018  00FD0B  4E                 	db	78	;'N'
  3019  00FD0C  56                 	db	86	;'V'
  3020  00FD0D  20                 	db	32
  3021  00FD0E  20                 	db	32
  3022  00FD0F  50                 	db	80	;'P'
  3023  00FD10  57                 	db	87	;'W'
  3024  00FD11  52                 	db	82	;'R'
  3025  00FD12  20                 	db	32
  3026  00FD13  25                 	db	37
  3027  00FD14  33                 	db	51	;'3'
  3028  00FD15  2E                 	db	46
  3029  00FD16  32                 	db	50	;'2'
  3030  00FD17  66                 	db	102	;'f'
  3031  00FD18  20                 	db	32
  3032  00FD19  20                 	db	32
  3033  00FD1A  20                 	db	32
  3034  00FD1B  20                 	db	32
  3035  00FD1C  20                 	db	32
  3036  00FD1D  20                 	db	32
  3037  00FD1E  20                 	db	32
  3038  00FD1F  00                 	db	0
  3039  00FD20                     STR_26:
  3040                           
  3041                           ; BSR set to: 57
  3042  00FD20  4C                 	db	76	;'L'
  3043  00FD21  4F                 	db	79	;'O'
  3044  00FD22  41                 	db	65	;'A'
  3045  00FD23  44                 	db	68	;'D'
  3046  00FD24  20                 	db	32
  3047  00FD25  50                 	db	80	;'P'
  3048  00FD26  57                 	db	87	;'W'
  3049  00FD27  52                 	db	82	;'R'
  3050  00FD28  20                 	db	32
  3051  00FD29  25                 	db	37
  3052  00FD2A  33                 	db	51	;'3'
  3053  00FD2B  2E                 	db	46
  3054  00FD2C  32                 	db	50	;'2'
  3055  00FD2D  66                 	db	102	;'f'
  3056  00FD2E  20                 	db	32
  3057  00FD2F  20                 	db	32
  3058  00FD30  20                 	db	32
  3059  00FD31  20                 	db	32
  3060  00FD32  20                 	db	32
  3061  00FD33  20                 	db	32
  3062  00FD34  20                 	db	32
  3063  00FD35  00                 	db	0
  3064  00FD36                     STR_25:
  3065                           
  3066                           ; BSR set to: 57
  3067  00FD36  50                 	db	80	;'P'
  3068  00FD37  56                 	db	86	;'V'
  3069  00FD38  20                 	db	32
  3070  00FD39  25                 	db	37
  3071  00FD3A  63                 	db	99	;'c'
  3072  00FD3B  20                 	db	32
  3073  00FD3C  50                 	db	80	;'P'
  3074  00FD3D  57                 	db	87	;'W'
  3075  00FD3E  52                 	db	82	;'R'
  3076  00FD3F  20                 	db	32
  3077  00FD40  25                 	db	37
  3078  00FD41  33                 	db	51	;'3'
  3079  00FD42  2E                 	db	46
  3080  00FD43  32                 	db	50	;'2'
  3081  00FD44  66                 	db	102	;'f'
  3082  00FD45  20                 	db	32
  3083  00FD46  20                 	db	32
  3084  00FD47  20                 	db	32
  3085  00FD48  20                 	db	32
  3086  00FD49  20                 	db	32
  3087  00FD4A  20                 	db	32
  3088  00FD4B  00                 	db	0
  3089  00FD4C                     STR_13:
  3090                           
  3091                           ; BSR set to: 57
  3092  00FD4C  42                 	db	66	;'B'
  3093  00FD4D  61                 	db	97	;'a'
  3094  00FD4E  74                 	db	116	;'t'
  3095  00FD4F  74                 	db	116	;'t'
  3096  00FD50  65                 	db	101	;'e'
  3097  00FD51  72                 	db	114	;'r'
  3098  00FD52  79                 	db	121	;'y'
  3099  00FD53  20                 	db	32
  3100  00FD54  41                 	db	65	;'A'
  3101  00FD55  68                 	db	104	;'h'
  3102  00FD56  20                 	db	32
  3103  00FD57  25                 	db	37
  3104  00FD58  33                 	db	51	;'3'
  3105  00FD59  2E                 	db	46
  3106  00FD5A  32                 	db	50	;'2'
  3107  00FD5B  66                 	db	102	;'f'
  3108  00FD5C  20                 	db	32
  3109  00FD5D  20                 	db	32
  3110  00FD5E  20                 	db	32
  3111  00FD5F  20                 	db	32
  3112  00FD60  20                 	db	32
  3113  00FD61  00                 	db	0
  3114  00FD62                     STR_32:
  3115                           
  3116                           ; BSR set to: 57
  3117  00FD62  42                 	db	66	;'B'
  3118  00FD63  56                 	db	86	;'V'
  3119  00FD64  20                 	db	32
  3120  00FD65  25                 	db	37
  3121  00FD66  32                 	db	50	;'2'
  3122  00FD67  2E                 	db	46
  3123  00FD68  32                 	db	50	;'2'
  3124  00FD69  66                 	db	102	;'f'
  3125  00FD6A  20                 	db	32
  3126  00FD6B  42                 	db	66	;'B'
  3127  00FD6C  41                 	db	65	;'A'
  3128  00FD6D  20                 	db	32
  3129  00FD6E  25                 	db	37
  3130  00FD6F  32                 	db	50	;'2'
  3131  00FD70  2E                 	db	46
  3132  00FD71  32                 	db	50	;'2'
  3133  00FD72  66                 	db	102	;'f'
  3134  00FD73  20                 	db	32
  3135  00FD74  20                 	db	32
  3136  00FD75  20                 	db	32
  3137  00FD76  20                 	db	32
  3138  00FD77  00                 	db	0
  3139  00FD78                     STR_33:
  3140                           
  3141                           ; BSR set to: 57
  3142  00FD78  43                 	db	67	;'C'
  3143  00FD79  56                 	db	86	;'V'
  3144  00FD7A  20                 	db	32
  3145  00FD7B  25                 	db	37
  3146  00FD7C  32                 	db	50	;'2'
  3147  00FD7D  2E                 	db	46
  3148  00FD7E  32                 	db	50	;'2'
  3149  00FD7F  66                 	db	102	;'f'
  3150  00FD80  20                 	db	32
  3151  00FD81  4C                 	db	76	;'L'
  3152  00FD82  41                 	db	65	;'A'
  3153  00FD83  20                 	db	32
  3154  00FD84  25                 	db	37
  3155  00FD85  32                 	db	50	;'2'
  3156  00FD86  2E                 	db	46
  3157  00FD87  32                 	db	50	;'2'
  3158  00FD88  66                 	db	102	;'f'
  3159  00FD89  20                 	db	32
  3160  00FD8A  20                 	db	32
  3161  00FD8B  20                 	db	32
  3162  00FD8C  20                 	db	32
  3163  00FD8D  00                 	db	0
  3164  00FD8E                     STR_31:
  3165                           
  3166                           ; BSR set to: 57
  3167  00FD8E  50                 	db	80	;'P'
  3168  00FD8F  56                 	db	86	;'V'
  3169  00FD90  20                 	db	32
  3170  00FD91  25                 	db	37
  3171  00FD92  32                 	db	50	;'2'
  3172  00FD93  2E                 	db	46
  3173  00FD94  32                 	db	50	;'2'
  3174  00FD95  66                 	db	102	;'f'
  3175  00FD96  20                 	db	32
  3176  00FD97  50                 	db	80	;'P'
  3177  00FD98  41                 	db	65	;'A'
  3178  00FD99  20                 	db	32
  3179  00FD9A  25                 	db	37
  3180  00FD9B  32                 	db	50	;'2'
  3181  00FD9C  2E                 	db	46
  3182  00FD9D  32                 	db	50	;'2'
  3183  00FD9E  66                 	db	102	;'f'
  3184  00FD9F  20                 	db	32
  3185  00FDA0  20                 	db	32
  3186  00FDA1  20                 	db	32
  3187  00FDA2  20                 	db	32
  3188  00FDA3  00                 	db	0
  3189  00FDA4                     STR_43:
  3190                           
  3191                           ; BSR set to: 57
  3192  00FDA4  25                 	db	37
  3193  00FDA5  64                 	db	100	;'d'
  3194  00FDA6  20                 	db	32
  3195  00FDA7  25                 	db	37
  3196  00FDA8  32                 	db	50	;'2'
  3197  00FDA9  2E                 	db	46
  3198  00FDAA  34                 	db	52	;'4'
  3199  00FDAB  66                 	db	102	;'f'
  3200  00FDAC  2C                 	db	44
  3201  00FDAD  20                 	db	32
  3202  00FDAE  25                 	db	37
  3203  00FDAF  64                 	db	100	;'d'
  3204  00FDB0  20                 	db	32
  3205  00FDB1  20                 	db	32
  3206  00FDB2  54                 	db	84	;'T'
  3207  00FDB3  52                 	db	82	;'R'
  3208  00FDB4  49                 	db	73	;'I'
  3209  00FDB5  4D                 	db	77	;'M'
  3210  00FDB6  20                 	db	32
  3211  00FDB7  20                 	db	32
  3212  00FDB8  20                 	db	32
  3213  00FDB9  00                 	db	0
  3214  00FDBA                     STR_52:
  3215                           
  3216                           ; BSR set to: 57
  3217  00FDBA  20                 	db	32
  3218  00FDBB  25                 	db	37
  3219  00FDBC  64                 	db	100	;'d'
  3220  00FDBD  20                 	db	32
  3221  00FDBE  25                 	db	37
  3222  00FDBF  64                 	db	100	;'d'
  3223  00FDC0  20                 	db	32
  3224  00FDC1  20                 	db	32
  3225  00FDC2  20                 	db	32
  3226  00FDC3  20                 	db	32
  3227  00FDC4  20                 	db	32
  3228  00FDC5  20                 	db	32
  3229  00FDC6  20                 	db	32
  3230  00FDC7  20                 	db	32
  3231  00FDC8  20                 	db	32
  3232  00FDC9  20                 	db	32
  3233  00FDCA  20                 	db	32
  3234  00FDCB  20                 	db	32
  3235  00FDCC  20                 	db	32
  3236  00FDCD  20                 	db	32
  3237  00FDCE  00                 	db	0
  3238  00FDCF                     STR_47:
  3239                           
  3240                           ; BSR set to: 57
  3241  00FDCF  53                 	db	83	;'S'
  3242  00FDD0  65                 	db	101	;'e'
  3243  00FDD1  6E                 	db	110	;'n'
  3244  00FDD2  73                 	db	115	;'s'
  3245  00FDD3  6F                 	db	111	;'o'
  3246  00FDD4  72                 	db	114	;'r'
  3247  00FDD5  20                 	db	32
  3248  00FDD6  20                 	db	32
  3249  00FDD7  20                 	db	32
  3250  00FDD8  20                 	db	32
  3251  00FDD9  20                 	db	32
  3252  00FDDA  20                 	db	32
  3253  00FDDB  20                 	db	32
  3254  00FDDC  20                 	db	32
  3255  00FDDD  20                 	db	32
  3256  00FDDE  20                 	db	32
  3257  00FDDF  20                 	db	32
  3258  00FDE0  20                 	db	32
  3259  00FDE1  20                 	db	32
  3260  00FDE2  20                 	db	32
  3261  00FDE3  00                 	db	0
  3262  00FDE4                     STR_55:
  3263                           
  3264                           ; BSR set to: 57
  3265  00FDE4  20                 	db	32
  3266  00FDE5  25                 	db	37
  3267  00FDE6  6C                 	db	108	;'l'
  3268  00FDE7  64                 	db	100	;'d'
  3269  00FDE8  20                 	db	32
  3270  00FDE9  25                 	db	37
  3271  00FDEA  6C                 	db	108	;'l'
  3272  00FDEB  64                 	db	100	;'d'
  3273  00FDEC  20                 	db	32
  3274  00FDED  20                 	db	32
  3275  00FDEE  20                 	db	32
  3276  00FDEF  20                 	db	32
  3277  00FDF0  20                 	db	32
  3278  00FDF1  20                 	db	32
  3279  00FDF2  20                 	db	32
  3280  00FDF3  20                 	db	32
  3281  00FDF4  20                 	db	32
  3282  00FDF5  20                 	db	32
  3283  00FDF6  20                 	db	32
  3284  00FDF7  20                 	db	32
  3285  00FDF8  00                 	db	0
  3286  00FDF9                     STR_10:
  3287                           
  3288                           ; BSR set to: 57
  3289  00FDF9  42                 	db	66	;'B'
  3290  00FDFA  56                 	db	86	;'V'
  3291  00FDFB  20                 	db	32
  3292  00FDFC  25                 	db	37
  3293  00FDFD  32                 	db	50	;'2'
  3294  00FDFE  2E                 	db	46
  3295  00FDFF  34                 	db	52	;'4'
  3296  00FE00  66                 	db	102	;'f'
  3297  00FE01  20                 	db	32
  3298  00FE02  20                 	db	32
  3299  00FE03  20                 	db	32
  3300  00FE04  20                 	db	32
  3301  00FE05  20                 	db	32
  3302  00FE06  20                 	db	32
  3303  00FE07  20                 	db	32
  3304  00FE08  20                 	db	32
  3305  00FE09  20                 	db	32
  3306  00FE0A  20                 	db	32
  3307  00FE0B  20                 	db	32
  3308  00FE0C  20                 	db	32
  3309  00FE0D  00                 	db	0
  3310  00FE0E                     STR_4:
  3311                           
  3312                           ; BSR set to: 57
  3313  00FE0E  20                 	db	32
  3314  00FE0F  4E                 	db	78	;'N'
  3315  00FE10  53                 	db	83	;'S'
  3316  00FE11  41                 	db	65	;'A'
  3317  00FE12  53                 	db	83	;'S'
  3318  00FE13  50                 	db	80	;'P'
  3319  00FE14  4F                 	db	79	;'O'
  3320  00FE15  4F                 	db	79	;'O'
  3321  00FE16  4B                 	db	75	;'K'
  3322  00FE17  20                 	db	32
  3323  00FE18  20                 	db	32
  3324  00FE19  20                 	db	32
  3325  00FE1A  20                 	db	32
  3326  00FE1B  20                 	db	32
  3327  00FE1C  20                 	db	32
  3328  00FE1D  20                 	db	32
  3329  00FE1E  20                 	db	32
  3330  00FE1F  20                 	db	32
  3331  00FE20  20                 	db	32
  3332  00FE21  20                 	db	32
  3333  00FE22  00                 	db	0
  3334  00FE23                     STR_15:
  3335                           
  3336                           ; BSR set to: 57
  3337  00FE23  42                 	db	66	;'B'
  3338  00FE24  61                 	db	97	;'a'
  3339  00FE25  74                 	db	116	;'t'
  3340  00FE26  74                 	db	116	;'t'
  3341  00FE27  65                 	db	101	;'e'
  3342  00FE28  72                 	db	114	;'r'
  3343  00FE29  79                 	db	121	;'y'
  3344  00FE2A  20                 	db	32
  3345  00FE2B  45                 	db	69	;'E'
  3346  00FE2C  53                 	db	83	;'S'
  3347  00FE2D  52                 	db	82	;'R'
  3348  00FE2E  20                 	db	32
  3349  00FE2F  20                 	db	32
  3350  00FE30  20                 	db	32
  3351  00FE31  20                 	db	32
  3352  00FE32  20                 	db	32
  3353  00FE33  20                 	db	32
  3354  00FE34  20                 	db	32
  3355  00FE35  20                 	db	32
  3356  00FE36  20                 	db	32
  3357  00FE37  00                 	db	0
  3358  00FE38                     STR_16:
  3359                           
  3360                           ; BSR set to: 57
  3361  00FE38  43                 	db	67	;'C'
  3362  00FE39  61                 	db	97	;'a'
  3363  00FE3A  6C                 	db	108	;'l'
  3364  00FE3B  63                 	db	99	;'c'
  3365  00FE3C  75                 	db	117	;'u'
  3366  00FE3D  6C                 	db	108	;'l'
  3367  00FE3E  61                 	db	97	;'a'
  3368  00FE3F  74                 	db	116	;'t'
  3369  00FE40  69                 	db	105	;'i'
  3370  00FE41  6F                 	db	111	;'o'
  3371  00FE42  6E                 	db	110	;'n'
  3372  00FE43  20                 	db	32
  3373  00FE44  20                 	db	32
  3374  00FE45  20                 	db	32
  3375  00FE46  20                 	db	32
  3376  00FE47  20                 	db	32
  3377  00FE48  20                 	db	32
  3378  00FE49  20                 	db	32
  3379  00FE4A  20                 	db	32
  3380  00FE4B  20                 	db	32
  3381  00FE4C  00                 	db	0
  3382  00FE4D                     STR_48:
  3383                           
  3384                           ; BSR set to: 57
  3385  00FE4D  43                 	db	67	;'C'
  3386  00FE4E  61                 	db	97	;'a'
  3387  00FE4F  6C                 	db	108	;'l'
  3388  00FE50  69                 	db	105	;'i'
  3389  00FE51  62                 	db	98	;'b'
  3390  00FE52  72                 	db	114	;'r'
  3391  00FE53  61                 	db	97	;'a'
  3392  00FE54  74                 	db	116	;'t'
  3393  00FE55  69                 	db	105	;'i'
  3394  00FE56  6F                 	db	111	;'o'
  3395  00FE57  6E                 	db	110	;'n'
  3396  00FE58  20                 	db	32
  3397  00FE59  20                 	db	32
  3398  00FE5A  20                 	db	32
  3399  00FE5B  20                 	db	32
  3400  00FE5C  20                 	db	32
  3401  00FE5D  20                 	db	32
  3402  00FE5E  20                 	db	32
  3403  00FE5F  20                 	db	32
  3404  00FE60  20                 	db	32
  3405  00FE61  00                 	db	0
  3406  00FE62                     STR_2:
  3407                           
  3408                           ; BSR set to: 57
  3409  00FE62  20                 	db	32
  3410  00FE63  56                 	db	86	;'V'
  3411  00FE64  65                 	db	101	;'e'
  3412  00FE65  72                 	db	114	;'r'
  3413  00FE66  73                 	db	115	;'s'
  3414  00FE67  69                 	db	105	;'i'
  3415  00FE68  6F                 	db	111	;'o'
  3416  00FE69  6E                 	db	110	;'n'
  3417  00FE6A  20                 	db	32
  3418  00FE6B  25                 	db	37
  3419  00FE6C  73                 	db	115	;'s'
  3420  00FE6D  20                 	db	32
  3421  00FE6E  20                 	db	32
  3422  00FE6F  20                 	db	32
  3423  00FE70  20                 	db	32
  3424  00FE71  20                 	db	32
  3425  00FE72  20                 	db	32
  3426  00FE73  20                 	db	32
  3427  00FE74  20                 	db	32
  3428  00FE75  20                 	db	32
  3429  00FE76  00                 	db	0
  3430  00FE77                     STR_59:
  3431                           
  3432                           ; BSR set to: 57
  3433  00FE77  4F                 	db	79	;'O'
  3434  00FE78  75                 	db	117	;'u'
  3435  00FE79  74                 	db	116	;'t'
  3436  00FE7A  20                 	db	32
  3437  00FE7B  4F                 	db	79	;'O'
  3438  00FE7C  66                 	db	102	;'f'
  3439  00FE7D  20                 	db	32
  3440  00FE7E  52                 	db	82	;'R'
  3441  00FE7F  61                 	db	97	;'a'
  3442  00FE80  6E                 	db	110	;'n'
  3443  00FE81  67                 	db	103	;'g'
  3444  00FE82  65                 	db	101	;'e'
  3445  00FE83  20                 	db	32
  3446  00FE84  20                 	db	32
  3447  00FE85  20                 	db	32
  3448  00FE86  20                 	db	32
  3449  00FE87  20                 	db	32
  3450  00FE88  20                 	db	32
  3451  00FE89  20                 	db	32
  3452  00FE8A  20                 	db	32
  3453  00FE8B  00                 	db	0
  3454  00FE8C                     STR_56:
  3455                           
  3456                           ; BSR set to: 57
  3457  00FE8C  5A                 	db	90	;'Z'
  3458  00FE8D  65                 	db	101	;'e'
  3459  00FE8E  72                 	db	114	;'r'
  3460  00FE8F  6F                 	db	111	;'o'
  3461  00FE90  20                 	db	32
  3462  00FE91  43                 	db	67	;'C'
  3463  00FE92  61                 	db	97	;'a'
  3464  00FE93  6C                 	db	108	;'l'
  3465  00FE94  20                 	db	32
  3466  00FE95  53                 	db	83	;'S'
  3467  00FE96  65                 	db	101	;'e'
  3468  00FE97  74                 	db	116	;'t'
  3469  00FE98  20                 	db	32
  3470  00FE99  20                 	db	32
  3471  00FE9A  20                 	db	32
  3472  00FE9B  20                 	db	32
  3473  00FE9C  20                 	db	32
  3474  00FE9D  20                 	db	32
  3475  00FE9E  20                 	db	32
  3476  00FE9F  20                 	db	32
  3477  00FEA0  00                 	db	0
  3478  00FEA1                     STR_1:
  3479                           
  3480                           ; BSR set to: 57
  3481  00FEA1  20                 	db	32
  3482  00FEA2  4D                 	db	77	;'M'
  3483  00FEA3  42                 	db	66	;'B'
  3484  00FEA4  4D                 	db	77	;'M'
  3485  00FEA5  43                 	db	67	;'C'
  3486  00FEA6  20                 	db	32
  3487  00FEA7  53                 	db	83	;'S'
  3488  00FEA8  4F                 	db	79	;'O'
  3489  00FEA9  4C                 	db	76	;'L'
  3490  00FEAA  41                 	db	65	;'A'
  3491  00FEAB  52                 	db	82	;'R'
  3492  00FEAC  4D                 	db	77	;'M'
  3493  00FEAD  4F                 	db	79	;'O'
  3494  00FEAE  4E                 	db	78	;'N'
  3495  00FEAF  20                 	db	32
  3496  00FEB0  20                 	db	32
  3497  00FEB1  20                 	db	32
  3498  00FEB2  20                 	db	32
  3499  00FEB3  20                 	db	32
  3500  00FEB4  20                 	db	32
  3501  00FEB5  00                 	db	0
  3502  00FEB6                     STR_46:
  3503                           
  3504                           ; BSR set to: 57
  3505  00FEB6  50                 	db	80	;'P'
  3506  00FEB7  56                 	db	86	;'V'
  3507  00FEB8  20                 	db	32
  3508  00FEB9  61                 	db	97	;'a'
  3509  00FEBA  6E                 	db	110	;'n'
  3510  00FEBB  64                 	db	100	;'d'
  3511  00FEBC  20                 	db	32
  3512  00FEBD  42                 	db	66	;'B'
  3513  00FEBE  41                 	db	65	;'A'
  3514  00FEBF  54                 	db	84	;'T'
  3515  00FEC0  54                 	db	84	;'T'
  3516  00FEC1  45                 	db	69	;'E'
  3517  00FEC2  52                 	db	82	;'R'
  3518  00FEC3  59                 	db	89	;'Y'
  3519  00FEC4  20                 	db	32
  3520  00FEC5  20                 	db	32
  3521  00FEC6  20                 	db	32
  3522  00FEC7  20                 	db	32
  3523  00FEC8  20                 	db	32
  3524  00FEC9  20                 	db	32
  3525  00FECA  00                 	db	0
  3526  00FECB                     STR_18:
  3527                           
  3528                           ; BSR set to: 57
  3529  00FECB  43                 	db	67	;'C'
  3530  00FECC  68                 	db	104	;'h'
  3531  00FECD  65                 	db	101	;'e'
  3532  00FECE  63                 	db	99	;'c'
  3533  00FECF  6B                 	db	107	;'k'
  3534  00FED0  69                 	db	105	;'i'
  3535  00FED1  6E                 	db	110	;'n'
  3536  00FED2  67                 	db	103	;'g'
  3537  00FED3  20                 	db	32
  3538  00FED4  25                 	db	37
  3539  00FED5  63                 	db	99	;'c'
  3540  00FED6  20                 	db	32
  3541  00FED7  25                 	db	37
  3542  00FED8  63                 	db	99	;'c'
  3543  00FED9  20                 	db	32
  3544  00FEDA  20                 	db	32
  3545  00FEDB  20                 	db	32
  3546  00FEDC  20                 	db	32
  3547  00FEDD  20                 	db	32
  3548  00FEDE  20                 	db	32
  3549  00FEDF  00                 	db	0
  3550  00FEE0                     STR_51:
  3551                           
  3552                           ; BSR set to: 57
  3553  00FEE0  53                 	db	83	;'S'
  3554  00FEE1  65                 	db	101	;'e'
  3555  00FEE2  6E                 	db	110	;'n'
  3556  00FEE3  73                 	db	115	;'s'
  3557  00FEE4  6F                 	db	111	;'o'
  3558  00FEE5  72                 	db	114	;'r'
  3559  00FEE6  20                 	db	32
  3560  00FEE7  52                 	db	82	;'R'
  3561  00FEE8  65                 	db	101	;'e'
  3562  00FEE9  61                 	db	97	;'a'
  3563  00FEEA  64                 	db	100	;'d'
  3564  00FEEB  69                 	db	105	;'i'
  3565  00FEEC  6E                 	db	110	;'n'
  3566  00FEED  67                 	db	103	;'g'
  3567  00FEEE  73                 	db	115	;'s'
  3568  00FEEF  20                 	db	32
  3569  00FEF0  20                 	db	32
  3570  00FEF1  20                 	db	32
  3571  00FEF2  20                 	db	32
  3572  00FEF3  20                 	db	32
  3573  00FEF4  00                 	db	0
  3574  00FEF5                     STR_8:
  3575                           
  3576                           ; BSR set to: 57
  3577  00FEF5  52                 	db	82	;'R'
  3578  00FEF6  65                 	db	101	;'e'
  3579  00FEF7  61                 	db	97	;'a'
  3580  00FEF8  64                 	db	100	;'d'
  3581  00FEF9  20                 	db	32
  3582  00FEFA  45                 	db	69	;'E'
  3583  00FEFB  45                 	db	69	;'E'
  3584  00FEFC  50                 	db	80	;'P'
  3585  00FEFD  52                 	db	82	;'R'
  3586  00FEFE  4F                 	db	79	;'O'
  3587  00FEFF  4D                 	db	77	;'M'
  3588  00FF00  20                 	db	32
  3589  00FF01  44                 	db	68	;'D'
  3590  00FF02  41                 	db	65	;'A'
  3591  00FF03  54                 	db	84	;'T'
  3592  00FF04  41                 	db	65	;'A'
  3593  00FF05  20                 	db	32
  3594  00FF06  20                 	db	32
  3595  00FF07  20                 	db	32
  3596  00FF08  20                 	db	32
  3597  00FF09  00                 	db	0
  3598  00FF0A                     STR_17:
  3599                           
  3600                           ; BSR set to: 57
  3601  00FF0A  43                 	db	67	;'C'
  3602  00FF0B  68                 	db	104	;'h'
  3603  00FF0C  65                 	db	101	;'e'
  3604  00FF0D  63                 	db	99	;'c'
  3605  00FF0E  6B                 	db	107	;'k'
  3606  00FF0F  20                 	db	32
  3607  00FF10  33                 	db	51	;'3'
  3608  00FF11  30                 	db	48	;'0'
  3609  00FF12  20                 	db	32
  3610  00FF13  73                 	db	115	;'s'
  3611  00FF14  65                 	db	101	;'e'
  3612  00FF15  63                 	db	99	;'c'
  3613  00FF16  6F                 	db	111	;'o'
  3614  00FF17  6E                 	db	110	;'n'
  3615  00FF18  64                 	db	100	;'d'
  3616  00FF19  73                 	db	115	;'s'
  3617  00FF1A  20                 	db	32
  3618  00FF1B  20                 	db	32
  3619  00FF1C  20                 	db	32
  3620  00FF1D  20                 	db	32
  3621  00FF1E  00                 	db	0
  3622  00FF1F                     STR_53:
  3623                           
  3624                           ; BSR set to: 57
  3625  00FF1F  53                 	db	83	;'S'
  3626  00FF20  74                 	db	116	;'t'
  3627  00FF21  61                 	db	97	;'a'
  3628  00FF22  62                 	db	98	;'b'
  3629  00FF23  69                 	db	105	;'i'
  3630  00FF24  6C                 	db	108	;'l'
  3631  00FF25  69                 	db	105	;'i'
  3632  00FF26  74                 	db	116	;'t'
  3633  00FF27  79                 	db	121	;'y'
  3634  00FF28  20                 	db	32
  3635  00FF29  63                 	db	99	;'c'
  3636  00FF2A  6C                 	db	108	;'l'
  3637  00FF2B  6F                 	db	111	;'o'
  3638  00FF2C  63                 	db	99	;'c'
  3639  00FF2D  6B                 	db	107	;'k'
  3640  00FF2E  20                 	db	32
  3641  00FF2F  25                 	db	37
  3642  00FF30  64                 	db	100	;'d'
  3643  00FF31  20                 	db	32
  3644  00FF32  20                 	db	32
  3645  00FF33  00                 	db	0
  3646  00FF34                     STR_9:
  3647                           
  3648                           ; BSR set to: 57
  3649  00FF34  49                 	db	73	;'I'
  3650  00FF35  6E                 	db	110	;'n'
  3651  00FF36  76                 	db	118	;'v'
  3652  00FF37  61                 	db	97	;'a'
  3653  00FF38  6C                 	db	108	;'l'
  3654  00FF39  69                 	db	105	;'i'
  3655  00FF3A  64                 	db	100	;'d'
  3656  00FF3B  20                 	db	32
  3657  00FF3C  45                 	db	69	;'E'
  3658  00FF3D  45                 	db	69	;'E'
  3659  00FF3E  50                 	db	80	;'P'
  3660  00FF3F  52                 	db	82	;'R'
  3661  00FF40  4F                 	db	79	;'O'
  3662  00FF41  4D                 	db	77	;'M'
  3663  00FF42  20                 	db	32
  3664  00FF43  44                 	db	68	;'D'
  3665  00FF44  41                 	db	65	;'A'
  3666  00FF45  54                 	db	84	;'T'
  3667  00FF46  41                 	db	65	;'A'
  3668  00FF47  20                 	db	32
  3669  00FF48  00                 	db	0
  3670  00FF49                     STR_49:
  3671                           
  3672                           ; BSR set to: 57
  3673  00FF49  52                 	db	82	;'R'
  3674  00FF4A  65                 	db	101	;'e'
  3675  00FF4B  6C                 	db	108	;'l'
  3676  00FF4C  65                 	db	101	;'e'
  3677  00FF4D  61                 	db	97	;'a'
  3678  00FF4E  73                 	db	115	;'s'
  3679  00FF4F  65                 	db	101	;'e'
  3680  00FF50  20                 	db	32
  3681  00FF51  62                 	db	98	;'b'
  3682  00FF52  75                 	db	117	;'u'
  3683  00FF53  74                 	db	116	;'t'
  3684  00FF54  74                 	db	116	;'t'
  3685  00FF55  6F                 	db	111	;'o'
  3686  00FF56  6E                 	db	110	;'n'
  3687  00FF57  20                 	db	32
  3688  00FF58  25                 	db	37
  3689  00FF59  63                 	db	99	;'c'
  3690  00FF5A  20                 	db	32
  3691  00FF5B  20                 	db	32
  3692  00FF5C  00                 	db	0
  3693  00FF5D                     STR_64:
  3694                           
  3695                           ; BSR set to: 57
  3696  00FF5D  48                 	db	72	;'H'
  3697  00FF5E  45                 	db	69	;'E'
  3698  00FF5F  4C                 	db	76	;'L'
  3699  00FF60  50                 	db	80	;'P'
  3700  00FF61  20                 	db	32
  3701  00FF62  25                 	db	37
  3702  00FF63  73                 	db	115	;'s'
  3703  00FF64  20                 	db	32
  3704  00FF65  20                 	db	32
  3705  00FF66  20                 	db	32
  3706  00FF67  20                 	db	32
  3707  00FF68  20                 	db	32
  3708  00FF69  20                 	db	32
  3709  00FF6A  20                 	db	32
  3710  00FF6B  20                 	db	32
  3711  00FF6C  20                 	db	32
  3712  00FF6D  20                 	db	32
  3713  00FF6E  20                 	db	32
  3714  00FF6F  00                 	db	0
  3715  00FF70                     
  3716                           ; BSR set to: 57
  3717  00FF70  44                 	db	68	;'D'
  3718  00FF71  49                 	db	73	;'I'
  3719  00FF72  53                 	db	83	;'S'
  3720  00FF73  50                 	db	80	;'P'
  3721  00FF74  4C                 	db	76	;'L'
  3722  00FF75  41                 	db	65	;'A'
  3723  00FF76  59                 	db	89	;'Y'
  3724  00FF77  20                 	db	32
  3725  00FF78  25                 	db	37
  3726  00FF79  73                 	db	115	;'s'
  3727  00FF7A  20                 	db	32
  3728  00FF7B  20                 	db	32
  3729  00FF7C  20                 	db	32
  3730  00FF7D  20                 	db	32
  3731  00FF7E  20                 	db	32
  3732  00FF7F  20                 	db	32
  3733  00FF80  20                 	db	32
  3734  00FF81  20                 	db	32
  3735  00FF82  00                 	db	0
  3736  00FF83                     
  3737                           ; BSR set to: 57
  3738  00FF83  25                 	db	37
  3739  00FF84  64                 	db	100	;'d'
  3740  00FF85  20                 	db	32
  3741  00FF86  25                 	db	37
  3742  00FF87  32                 	db	50	;'2'
  3743  00FF88  2E                 	db	46
  3744  00FF89  34                 	db	52	;'4'
  3745  00FF8A  66                 	db	102	;'f'
  3746  00FF8B  2C                 	db	44
  3747  00FF8C  20                 	db	32
  3748  00FF8D  25                 	db	37
  3749  00FF8E  64                 	db	100	;'d'
  3750  00FF8F  20                 	db	32
  3751  00FF90  20                 	db	32
  3752  00FF91  20                 	db	32
  3753  00FF92  23                 	db	35
  3754  00FF93  00                 	db	0
  3755  00FF94                     STR_22:
  3756                           
  3757                           ; BSR set to: 57
  3758  00FF94  25                 	db	37
  3759  00FF95  64                 	db	100	;'d'
  3760  00FF96  20                 	db	32
  3761  00FF97  25                 	db	37
  3762  00FF98  32                 	db	50	;'2'
  3763  00FF99  2E                 	db	46
  3764  00FF9A  34                 	db	52	;'4'
  3765  00FF9B  66                 	db	102	;'f'
  3766  00FF9C  20                 	db	32
  3767  00FF9D  20                 	db	32
  3768  00FF9E  20                 	db	32
  3769  00FF9F  25                 	db	37
  3770  00FFA0  64                 	db	100	;'d'
  3771  00FFA1  20                 	db	32
  3772  00FFA2  20                 	db	32
  3773  00FFA3  00                 	db	0
  3774  00FFA4                     STR_68:
  3775                           
  3776                           ; BSR set to: 57
  3777  00FFA4  76                 	db	118	;'v'
  3778  00FFA5  74                 	db	116	;'t'
  3779  00FFA6  65                 	db	101	;'e'
  3780  00FFA7  72                 	db	114	;'r'
  3781  00FFA8  6D                 	db	109	;'m'
  3782  00FFA9  20                 	db	32
  3783  00FFAA  25                 	db	37
  3784  00FFAB  78                 	db	120	;'x'
  3785  00FFAC  3A                 	db	58	;':'
  3786  00FFAD  25                 	db	37
  3787  00FFAE  78                 	db	120	;'x'
  3788  00FFAF  20                 	db	32
  3789  00FFB0  20                 	db	32
  3790  00FFB1  20                 	db	32
  3791  00FFB2  00                 	db	0
  3792  00FFB3                     STR_62:
  3793                           
  3794                           ; BSR set to: 57
  3795  00FFB3  46                 	db	70	;'F'
  3796  00FFB4  65                 	db	101	;'e'
  3797  00FFB5  62                 	db	98	;'b'
  3798  00FFB6  20                 	db	32
  3799  00FFB7  20                 	db	32
  3800  00FFB8  39                 	db	57	;'9'
  3801  00FFB9  20                 	db	32
  3802  00FFBA  32                 	db	50	;'2'
  3803  00FFBB  30                 	db	48	;'0'
  3804  00FFBC  32                 	db	50	;'2'
  3805  00FFBD  30                 	db	48	;'0'
  3806  00FFBE  00                 	db	0
  3807  00FFBF                     STR_66:
  3808                           
  3809                           ; BSR set to: 57
  3810  00FFBF  25                 	db	37
  3811  00FFC0  73                 	db	115	;'s'
  3812  00FFC1  20                 	db	32
  3813  00FFC2  20                 	db	32
  3814  00FFC3  20                 	db	32
  3815  00FFC4  20                 	db	32
  3816  00FFC5  20                 	db	32
  3817  00FFC6  20                 	db	32
  3818  00FFC7  20                 	db	32
  3819  00FFC8  00                 	db	0
  3820  00FFC9                     STR_63:
  3821                           
  3822                           ; BSR set to: 57
  3823  00FFC9  31                 	db	49	;'1'
  3824  00FFCA  39                 	db	57	;'9'
  3825  00FFCB  3A                 	db	58	;':'
  3826  00FFCC  32                 	db	50	;'2'
  3827  00FFCD  30                 	db	48	;'0'
  3828  00FFCE  3A                 	db	58	;':'
  3829  00FFCF  31                 	db	49	;'1'
  3830  00FFD0  35                 	db	53	;'5'
  3831  00FFD1  00                 	db	0
  3832  00FFD2                     STR_3:
  3833                           
  3834                           ; BSR set to: 57
  3835  00FFD2  31                 	db	49	;'1'
  3836  00FFD3  2E                 	db	46
  3837  00FFD4  31                 	db	49	;'1'
  3838  00FFD5  39                 	db	57	;'9'
  3839  00FFD6  00                 	db	0
  3840  00FFD7                     STR_82:
  3841                           
  3842                           ; BSR set to: 57
  3843  00FFD7  49                 	db	73	;'I'
  3844  00FFD8  4E                 	db	78	;'N'
  3845  00FFD9  46                 	db	70	;'F'
  3846  00FFDA  00                 	db	0
  3847  00FFDB                     STR_86:
  3848                           
  3849                           ; BSR set to: 57
  3850  00FFDB  4E                 	db	78	;'N'
  3851  00FFDC  41                 	db	65	;'A'
  3852  00FFDD  4E                 	db	78	;'N'
  3853  00FFDE  00                 	db	0
  3854  00FFDF                     STR_83:
  3855                           
  3856                           ; BSR set to: 57
  3857  00FFDF  69                 	db	105	;'i'
  3858  00FFE0  6E                 	db	110	;'n'
  3859  00FFE1  66                 	db	102	;'f'
  3860  00FFE2  00                 	db	0
  3861  00FFE3                     STR_87:
  3862                           
  3863                           ; BSR set to: 57
  3864  00FFE3  6E                 	db	110	;'n'
  3865  00FFE4  61                 	db	97	;'a'
  3866  00FFE5  6E                 	db	110	;'n'
  3867  00FFE6  00                 	db	0
  3868  00FFE7                     STR_113:
  3869                           
  3870                           ; BSR set to: 57
  3871  00FFE7  6C                 	db	108	;'l'
  3872  00FFE8  58                 	db	88	;'X'
  3873  00FFE9  00                 	db	0
  3874  00FFEA                     STR_90:
  3875                           
  3876                           ; BSR set to: 57
  3877  00FFEA  6C                 	db	108	;'l'
  3878  00FFEB  64                 	db	100	;'d'
  3879  00FFEC  00                 	db	0
  3880  00FFED                     STR_99:
  3881                           
  3882                           ; BSR set to: 57
  3883  00FFED  6C                 	db	108	;'l'
  3884  00FFEE  66                 	db	102	;'f'
  3885  00FFEF  00                 	db	0
  3886  00FFF0                     STR_94:
  3887                           
  3888                           ; BSR set to: 57
  3889  00FFF0  6C                 	db	108	;'l'
  3890  00FFF1  69                 	db	105	;'i'
  3891  00FFF2  00                 	db	0
  3892  00FFF3                     STR_104:
  3893                           
  3894                           ; BSR set to: 57
  3895  00FFF3  6C                 	db	108	;'l'
  3896  00FFF4  75                 	db	117	;'u'
  3897  00FFF5  00                 	db	0
  3898  00FFF6                     STR_109:
  3899                           
  3900                           ; BSR set to: 57
  3901  00FFF6  6C                 	db	108	;'l'
  3902  00FFF7  78                 	db	120	;'x'
  3903  00FFF8  00                 	db	0
  3904  00FFF9                     STR_61:
  3905                           
  3906                           ; BSR set to: 57
  3907  00FFF9  25                 	db	37
  3908  00FFFA  63                 	db	99	;'c'
  3909  00FFFB  00                 	db	0
  3910  00FFFC                     STR_60:
  3911                           
  3912                           ; BSR set to: 57
  3913  00FFFC  25                 	db	37
  3914  00FFFD  73                 	db	115	;'s'
  3915  00FFFE  00                 	db	0
  3916  0000                     
  3917                           ; #config settings
  3918  00FFFF  00                 	db	0	; dummy byte at the end
  3919  0000                     
  3920                           	psect	cinit
  3921  01AC9A                     __pcinit:
  3922                           	opt callstack 0
  3923  01AC9A                     start_initialization:
  3924                           	opt callstack 0
  3925  01AC9A                     __initialization:
  3926                           	opt callstack 0
  3927                           
  3928                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3929                           ; load TBLPTR registers with __pidataBIGRAM
  3930  01AC9A  0EE2               	movlw	low __pidataBIGRAM
  3931  01AC9C  6EF6               	movwf	tblptrl,c
  3932  01AC9E  0E70               	movlw	high __pidataBIGRAM
  3933  01ACA0  6EF7               	movwf	tblptrh,c
  3934  01ACA2  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3935  01ACA4  6EF8               	movwf	tblptru,c
  3936  01ACA6  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  3937  01ACAA  EE20 F32B          	lfsr	2,811
  3938  01ACAE                     copy_data0:
  3939  01ACAE  0009               	tblrd		*+
  3940  01ACB0  006F FFD7 FFEE     	movff	tablat,postinc0
  3941  01ACB6  50DD               	movf	postdec2,w,c
  3942  01ACB8  50D9               	movf	fsr2l,w,c
  3943  01ACBA  E1F9               	bnz	copy_data0
  3944  01ACBC  50DA               	movf	fsr2h,w,c
  3945  01ACBE  E1F7               	bnz	copy_data0
  3946                           
  3947                           ; Initialize objects allocated to BANK1 (208 bytes)
  3948                           ; load TBLPTR registers with __pidataBANK1
  3949  01ACC0  0E26               	movlw	low __pidataBANK1
  3950  01ACC2  6EF6               	movwf	tblptrl,c
  3951  01ACC4  0EB0               	movlw	high __pidataBANK1
  3952  01ACC6  6EF7               	movwf	tblptrh,c
  3953  01ACC8  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3954  01ACCA  6EF8               	movwf	tblptru,c
  3955  01ACCC  EE00  F100         	lfsr	0,__pdataBANK1
  3956  01ACD0  EE20 F0D0          	lfsr	2,208
  3957  01ACD4                     copy_data1:
  3958  01ACD4  0009               	tblrd		*+
  3959  01ACD6  006F FFD7 FFEE     	movff	tablat,postinc0
  3960  01ACDC  50DD               	movf	postdec2,w,c
  3961  01ACDE  50D9               	movf	fsr2l,w,c
  3962  01ACE0  E1F9               	bnz	copy_data1
  3963                           
  3964                           ; Initialize objects allocated to BANK0 (57 bytes)
  3965                           ; load TBLPTR registers with __pidataBANK0
  3966  01ACE2  0EF0               	movlw	low __pidataBANK0
  3967  01ACE4  6EF6               	movwf	tblptrl,c
  3968  01ACE6  0EC9               	movlw	high __pidataBANK0
  3969  01ACE8  6EF7               	movwf	tblptrh,c
  3970  01ACEA  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3971  01ACEC  6EF8               	movwf	tblptru,c
  3972  01ACEE  EE00  F0AE         	lfsr	0,__pdataBANK0
  3973  01ACF2  EE20 F039          	lfsr	2,57
  3974  01ACF6                     copy_data2:
  3975  01ACF6  0009               	tblrd		*+
  3976  01ACF8  006F FFD7 FFEE     	movff	tablat,postinc0
  3977  01ACFE  50DD               	movf	postdec2,w,c
  3978  01AD00  50D9               	movf	fsr2l,w,c
  3979  01AD02  E1F9               	bnz	copy_data2
  3980                           
  3981                           ; Clear objects allocated to BIGRAM (482 bytes)
  3982  01AD04  EE02  F12A         	lfsr	0,__pbssBIGRAM
  3983  01AD08  EE20 F1E2          	lfsr	2,482
  3984  01AD0C                     clear_0:
  3985  01AD0C  6AEE               	clrf	postinc0,c
  3986  01AD0E  50DD               	movf	postdec2,w,c
  3987  01AD10  50D9               	movf	fsr2l,w,c
  3988  01AD12  E1FC               	bnz	clear_0
  3989  01AD14  50DA               	movf	fsr2h,w,c
  3990  01AD16  E1FA               	bnz	clear_0
  3991                           
  3992                           ; Clear objects allocated to BANK5 (255 bytes)
  3993  01AD18  EE01  F100         	lfsr	0,__pbssBANK5
  3994  01AD1C  EE20 F0FF          	lfsr	2,255
  3995  01AD20                     clear_1:
  3996  01AD20  6AEE               	clrf	postinc0,c
  3997  01AD22  50DD               	movf	postdec2,w,c
  3998  01AD24  50D9               	movf	fsr2l,w,c
  3999  01AD26  E1FC               	bnz	clear_1
  4000  01AD28  50DA               	movf	fsr2h,w,c
  4001  01AD2A  E1FA               	bnz	clear_1
  4002                           
  4003                           ; Clear objects allocated to BANK4 (67 bytes)
  4004  01AD2C  EE01  F000         	lfsr	0,__pbssBANK4
  4005  01AD30  0E43               	movlw	67
  4006  01AD32                     clear_2:
  4007  01AD32  6AEE               	clrf	postinc0,c
  4008  01AD34  06E8               	decf	wreg,f,c
  4009  01AD36  E1FD               	bnz	clear_2
  4010                           
  4011                           ; Clear objects allocated to BANK3 (215 bytes)
  4012  01AD38  EE00  F300         	lfsr	0,__pbssBANK3
  4013  01AD3C  0ED7               	movlw	215
  4014  01AD3E                     clear_3:
  4015  01AD3E  6AEE               	clrf	postinc0,c
  4016  01AD40  06E8               	decf	wreg,f,c
  4017  01AD42  E1FD               	bnz	clear_3
  4018                           
  4019                           ; Clear objects allocated to BANK2 (212 bytes)
  4020  01AD44  EE00  F200         	lfsr	0,__pbssBANK2
  4021  01AD48  0ED4               	movlw	212
  4022  01AD4A                     clear_4:
  4023  01AD4A  6AEE               	clrf	postinc0,c
  4024  01AD4C  06E8               	decf	wreg,f,c
  4025  01AD4E  E1FD               	bnz	clear_4
  4026                           
  4027                           ; Clear objects allocated to BANK1 (42 bytes)
  4028  01AD50  EE00  F1D0         	lfsr	0,__pbssBANK1
  4029  01AD54  0E2A               	movlw	42
  4030  01AD56                     clear_5:
  4031  01AD56  6AEE               	clrf	postinc0,c
  4032  01AD58  06E8               	decf	wreg,f,c
  4033  01AD5A  E1FD               	bnz	clear_5
  4034                           
  4035                           ; Clear objects allocated to BANK0 (78 bytes)
  4036  01AD5C  EE00  F060         	lfsr	0,__pbssBANK0
  4037  01AD60  0E4E               	movlw	78
  4038  01AD62                     clear_6:
  4039  01AD62  6AEE               	clrf	postinc0,c
  4040  01AD64  06E8               	decf	wreg,f,c
  4041  01AD66  E1FD               	bnz	clear_6
  4042                           
  4043                           ; Clear objects allocated to COMRAM (14 bytes)
  4044  01AD68  EE00  F03A         	lfsr	0,__pbssCOMRAM
  4045  01AD6C  0E0E               	movlw	14
  4046  01AD6E                     clear_7:
  4047  01AD6E  6AEE               	clrf	postinc0,c
  4048  01AD70  06E8               	decf	wreg,f,c
  4049  01AD72  E1FD               	bnz	clear_7
  4050                           
  4051                           ;
  4052                           ; Setup IVTBASE
  4053                           ;
  4054  01AD74  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4055  01AD76  6ED5               	movwf	213,c
  4056  01AD78  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4057  01AD7A  6ED6               	movwf	214,c
  4058  01AD7C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4059  01AD7E  6ED7               	movwf	215,c
  4060  01AD80                     end_of_initialization:
  4061                           	opt callstack 0
  4062  01AD80                     __end_of__initialization:
  4063                           	opt callstack 0
  4064  01AD80  0100               	movlb	0
  4065  01AD82  EF00  F080         	goto	_main	;jump to C main() function
  4066                           
  4067                           	psect	bssCOMRAM
  4068  00003A                     __pbssCOMRAM:
  4069                           	opt callstack 0
  4070  00003A                     _width:
  4071                           	opt callstack 0
  4072  00003A                     	ds	2
  4073  00003C                     _prec:
  4074                           	opt callstack 0
  4075  00003C                     	ds	2
  4076  00003E                     _flags:
  4077                           	opt callstack 0
  4078  00003E                     	ds	2
  4079  000040                     calc_bsoc@log_update_wait:
  4080                           	opt callstack 0
  4081  000040                     	ds	1
  4082  000041                     check_day_time@day_delay:
  4083                           	opt callstack 0
  4084  000041                     	ds	1
  4085  000042                     dac_spi_control@S0:
  4086                           	opt callstack 0
  4087  000042                     	ds	1
  4088  000043                     dac_spi_control@init:
  4089                           	opt callstack 0
  4090  000043                     	ds	1
  4091  000044                     _uart2RxHead:
  4092                           	opt callstack 0
  4093  000044                     	ds	1
  4094  000045                     _uart2TxBufferRemaining:
  4095                           	opt callstack 0
  4096  000045                     	ds	1
  4097  000046                     _uart2TxTail:
  4098                           	opt callstack 0
  4099  000046                     	ds	1
  4100  000047                     _uart1RxHead:
  4101                           	opt callstack 0
  4102  000047                     	ds	1
  4103                           
  4104                           	psect	bssBANK0
  4105  000060                     __pbssBANK0:
  4106                           	opt callstack 0
  4107  000060                     ___fpclassifyf@F463:
  4108                           	opt callstack 0
  4109  000060                     	ds	4
  4110  000064                     calc_ror_data@bcror:
  4111                           	opt callstack 0
  4112  000064                     	ds	4
  4113  000068                     calc_ror_data@bvror:
  4114                           	opt callstack 0
  4115  000068                     	ds	4
  4116  00006C                     calc_model_data@bcror:
  4117                           	opt callstack 0
  4118  00006C                     	ds	4
  4119  000070                     calc_model_data@bvror:
  4120                           	opt callstack 0
  4121  000070                     	ds	4
  4122  000074                     wdtdelay@dcount:
  4123                           	opt callstack 0
  4124  000074                     	ds	4
  4125  000078                     _TMR3_InterruptHandler:
  4126                           	opt callstack 0
  4127  000078                     	ds	3
  4128  00007B                     _TMR5_InterruptHandler:
  4129                           	opt callstack 0
  4130  00007B                     	ds	3
  4131  00007E                     _TMR6_InterruptHandler:
  4132                           	opt callstack 0
  4133  00007E                     	ds	3
  4134  000081                     _ADCC_ADTI_InterruptHandler:
  4135                           	opt callstack 0
  4136  000081                     	ds	3
  4137  000084                     _ADCC_ADI_InterruptHandler:
  4138                           	opt callstack 0
  4139  000084                     	ds	3
  4140  000087                     _UART1_RxInterruptHandler:
  4141                           	opt callstack 0
  4142  000087                     	ds	3
  4143  00008A                     _UART2_TxInterruptHandler:
  4144                           	opt callstack 0
  4145  00008A                     	ds	3
  4146  00008D                     _UART2_RxInterruptHandler:
  4147                           	opt callstack 0
  4148  00008D                     	ds	3
  4149  000090                     _INT1_InterruptHandler:
  4150                           	opt callstack 0
  4151  000090                     	ds	3
  4152  000093                     _INT0_InterruptHandler:
  4153                           	opt callstack 0
  4154  000093                     	ds	3
  4155  000096                     _nout:
  4156                           	opt callstack 0
  4157  000096                     	ds	2
  4158  000098                     TMR3_ISR@CountCallBack:
  4159                           	opt callstack 0
  4160  000098                     	ds	2
  4161  00009A                     _timer3ReloadVal:
  4162                           	opt callstack 0
  4163  00009A                     	ds	2
  4164  00009C                     TMR5_ISR@CountCallBack:
  4165                           	opt callstack 0
  4166  00009C                     	ds	2
  4167  00009E                     _timer5ReloadVal:
  4168                           	opt callstack 0
  4169  00009E                     	ds	2
  4170  0000A0                     esr_check@esr_state:
  4171                           	opt callstack 0
  4172  0000A0                     	ds	1
  4173  0000A1                     dac_spi_control@SB:
  4174                           	opt callstack 0
  4175  0000A1                     	ds	1
  4176  0000A2                     dac_spi_control@SC:
  4177                           	opt callstack 0
  4178  0000A2                     	ds	1
  4179  0000A3                     dac_spi_control@S2:
  4180                           	opt callstack 0
  4181  0000A3                     	ds	1
  4182  0000A4                     dac_spi_control@S1:
  4183                           	opt callstack 0
  4184  0000A4                     	ds	1
  4185  0000A5                     _mode_sw:
  4186                           	opt callstack 0
  4187  0000A5                     	ds	1
  4188  0000A6                     _uart2RxCount:
  4189                           	opt callstack 0
  4190  0000A6                     	ds	1
  4191  0000A7                     _uart2RxTail:
  4192                           	opt callstack 0
  4193  0000A7                     	ds	1
  4194  0000A8                     _uart2TxHead:
  4195                           	opt callstack 0
  4196  0000A8                     	ds	1
  4197  0000A9                     _uart1RxCount:
  4198                           	opt callstack 0
  4199  0000A9                     	ds	1
  4200  0000AA                     _uart1RxTail:
  4201                           	opt callstack 0
  4202  0000AA                     	ds	1
  4203  0000AB                     _crcObj:
  4204                           	opt callstack 0
  4205  0000AB                     	ds	3
  4206                           
  4207                           	psect	dataBANK0
  4208  0000AE                     __pdataBANK0:
  4209                           	opt callstack 0
  4210  0000AE                     _R:
  4211                           	opt callstack 0
  4212  0000AE                     	ds	57
  4213                           
  4214                           	psect	bssBANK1
  4215  0001D0                     __pbssBANK1:
  4216                           	opt callstack 0
  4217  0001D0                     _spi_link:
  4218                           	opt callstack 0
  4219  0001D0                     	ds	12
  4220  0001DC                     _uart1RxBuffer:
  4221                           	opt callstack 0
  4222  0001DC                     	ds	8
  4223  0001E4                     spinners@s:
  4224                           	opt callstack 0
  4225  0001E4                     	ds	6
  4226  0001EA                     floorf@F524:
  4227                           	opt callstack 0
  4228  0001EA                     	ds	4
  4229  0001EE                     fabsf@F463:
  4230                           	opt callstack 0
  4231  0001EE                     	ds	4
  4232  0001F2                     _utctime:
  4233                           	opt callstack 0
  4234  0001F2                     	ds	4
  4235  0001F6                     _P:
  4236                           	opt callstack 0
  4237  0001F6                     	ds	4
  4238                           
  4239                           	psect	dataBANK1
  4240  000100                     __pdataBANK1:
  4241                           	opt callstack 0
  4242  000100                     stoa@F1166:
  4243                           	opt callstack 0
  4244  000100                     	ds	7
  4245  000107                     _V:
  4246                           	opt callstack 0
  4247  000107                     	ds	192
  4248  0001C7                     _H:
  4249                           	opt callstack 0
  4250  0001C7                     	ds	9
  4251                           
  4252                           	psect	bssBANK2
  4253  000200                     __pbssBANK2:
  4254                           	opt callstack 0
  4255  000200                     _S:
  4256                           	opt callstack 0
  4257  000200                     	ds	41
  4258  000229                     _tickCount:
  4259                           	opt callstack 0
  4260  000229                     	ds	26
  4261  000243                     _dbuf:
  4262                           	opt callstack 0
  4263  000243                     	ds	80
  4264  000293                     _r_cal:
  4265                           	opt callstack 0
  4266  000293                     	ds	57
  4267  0002CC                     _seed:
  4268                           	opt callstack 0
  4269  0002CC                     	ds	8
  4270                           
  4271                           	psect	bssBANK3
  4272  000300                     __pbssBANK3:
  4273                           	opt callstack 0
  4274  000300                     lp_filter@smooth:
  4275                           	opt callstack 0
  4276  000300                     	ds	84
  4277  000354                     _uart2TxBuffer:
  4278                           	opt callstack 0
  4279  000354                     	ds	64
  4280  000394                     _ring_buf1:
  4281                           	opt callstack 0
  4282  000394                     	ds	67
  4283                           
  4284                           	psect	bssBANK4
  4285  000400                     __pbssBANK4:
  4286                           	opt callstack 0
  4287  000400                     _ring_buf2:
  4288                           	opt callstack 0
  4289  000400                     	ds	67
  4290                           
  4291                           	psect	bssBANK5
  4292  000500                     __pbssBANK5:
  4293                           	opt callstack 0
  4294  000500                     _uart2RxBuffer:
  4295                           	opt callstack 0
  4296  000500                     	ds	255
  4297                           
  4298                           	psect	bssBIGRAM
  4299  00092A                     __pbssBIGRAM:
  4300                           	opt callstack 0
  4301  00092A                     _D:
  4302                           	opt callstack 0
  4303  00092A                     	ds	482
  4304                           
  4305                           	psect	dataBIGRAM
  4306  0005FF                     __pdataBIGRAM:
  4307                           	opt callstack 0
  4308  0005FF                     _port_data:
  4309                           	opt callstack 0
  4310  0005FF                     	ds	512
  4311  0007FF                     _C:
  4312                           	opt callstack 0
  4313  0007FF                     	ds	299
  4314                           
  4315                           	psect	cstackBANK0
  4316  0000E7                     __pcstackBANK0:
  4317                           	opt callstack 0
  4318  0000E7                     ??_TMR3_ISR:
  4319                           
  4320                           ; 1 bytes @ 0x0
  4321  0000E7                     	ds	25
  4322                           
  4323                           	psect	cstackCOMRAM
  4324  000021                     __pcstackCOMRAM:
  4325                           	opt callstack 0
  4326  000021                     ??_ADCC_ThresholdISR:
  4327  000021                     
  4328                           ; 1 bytes @ 0x0
  4329  000021                     	ds	5
  4330  000026                     ??_TMR6_ISR:
  4331                           
  4332                           ; 1 bytes @ 0x5
  4333  000026                     	ds	1
  4334  000027                     ??_INT1_ISR:
  4335  000027                     
  4336                           ; 1 bytes @ 0x6
  4337  000027                     	ds	4
  4338  00002B                     ??_TMR5_ISR:
  4339                           
  4340                           ; 1 bytes @ 0xA
  4341  00002B                     	ds	15
  4342                           
  4343 ;;
  4344 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4345 ;;
  4346 ;; *************** function _main *****************
  4347 ;; Defined at:
  4348 ;;		line 189 in file "main.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;		None
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  esr_temp        4  [STACK] float 
  4353 ;;  i_esr           2  [STACK] unsigned short 
  4354 ;;  shape           1  [STACK] unsigned char 
  4355 ;;  inp_index       1  [STACK] unsigned char 
  4356 ;;  k               1  [STACK] unsigned char 
  4357 ;;  j               1  [STACK] unsigned char 
  4358 ;;  i               1  [STACK] unsigned char 
  4359 ;;  mode            1  [STACK] enum E17028
  4360 ;;  i_ror           1  [STACK] unsigned char 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1  [STACK] void 
  4363 ;; Registers used:
  4364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4374 ;;Total ram usage:        0 bytes
  4375 ;; Hardware stack levels required when called:   29
  4376 ;; This function calls:
  4377 ;;		_SYSTEM_Initialize
  4378 ;;		_StartTimer
  4379 ;;		_TimerDone
  4380 ;;		_WaitMs
  4381 ;;		___fladd
  4382 ;;		___flge
  4383 ;;		___fltol
  4384 ;;		_calc_model_data
  4385 ;;		_calc_ror_data
  4386 ;;		_check_adc_scan
  4387 ;;		_check_enter_button
  4388 ;;		_check_help
  4389 ;;		_clear_adc_scan
  4390 ;;		_clear_hid_pflags
  4391 ;;		_conv_raw_result
  4392 ;;		_convert_adc_data
  4393 ;;		_current_sensor_cal
  4394 ;;		_eaDogM_WriteCommand
  4395 ;;		_esr_check
  4396 ;;		_fabsf
  4397 ;;		_get_raw_result
  4398 ;;		_get_switch
  4399 ;;		_get_vterm_ptr
  4400 ;;		_hid_display
  4401 ;;		_init_bsoc
  4402 ;;		_init_display
  4403 ;;		_init_port_dma
  4404 ;;		_lp_filter
  4405 ;;		_mode_lamp_dim
  4406 ;;		_read_cal_data
  4407 ;;		_set_dac
  4408 ;;		_set_dac_a
  4409 ;;		_set_dac_b
  4410 ;;		_set_display_info
  4411 ;;		_set_load_relay_one
  4412 ;;		_set_load_relay_two
  4413 ;;		_set_vterm
  4414 ;;		_spinners
  4415 ;;		_sprintf
  4416 ;;		_srand
  4417 ;;		_start_adc_scan
  4418 ;;		_start_switch_handler
  4419 ;;		_static_soc
  4420 ;;		_update_cal_data
  4421 ;;		_update_lcd
  4422 ;;		_wait_lcd_done
  4423 ;; This function is called by:
  4424 ;;		Startup code after reset
  4425 ;; This function uses a reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text0
  4429  010000                     __ptext0:
  4430                           	opt callstack 0
  4431  010000                     _main:
  4432                           	opt callstack 0
  4433                           
  4434                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4435  010000  0E11               	movlw	17
  4436  010002  26E1               	addwf	fsr1l,f,c
  4437  010004  0E00               	movlw	0
  4438  010006  22E2               	addwfc	fsr1h,f,c
  4439                           
  4440                           ;main.c: 191:  UI_STATES mode;;main.c: 192:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4441                           ;stkvar	_inp_index @ sp[(-17)+11]
  4442                           
  4443                           ;incstack = 0
  4444  010008  0EFA               	movlw	-6
  4445  01000A  6AE3               	clrf	plusw1,c
  4446                           
  4447                           ;stkvar	_i @ sp[(-17)+14]
  4448  01000C  0EFD               	movlw	-3
  4449  01000E  6AE3               	clrf	plusw1,c
  4450                           
  4451                           ;stkvar	_j @ sp[(-17)+13]
  4452  010010  0EFC               	movlw	-4
  4453  010012  6AE3               	clrf	plusw1,c
  4454  010014  2AE3               	incf	plusw1,f,c
  4455                           
  4456                           ;stkvar	_k @ sp[(-17)+12]
  4457  010016  0EFB               	movlw	-5
  4458  010018  6AE3               	clrf	plusw1,c
  4459  01001A  82E3               	bsf	plusw1,1,c
  4460                           
  4461                           ;main.c: 195:  SYSTEM_Initialize();
  4462  01001C  EC90  F0E2         	call	_SYSTEM_Initialize	;wreg free
  4463                           
  4464                           ; BSR set to: 60
  4465                           ;main.c: 198:  (INTCON0bits.GIEH = 1);
  4466  010020  8ED2               	bsf	210,7,c	;volatile
  4467                           
  4468                           ; BSR set to: 60
  4469                           ;main.c: 201:  (INTCON0bits.GIEL = 1);
  4470  010022  8CD2               	bsf	210,6,c	;volatile
  4471                           
  4472                           ; BSR set to: 60
  4473                           ;main.c: 203:  V.ui_state = UI_STATE_INIT;
  4474  010024  0101               	movlb	1	; () banked
  4475  010026  6B07               	clrf	_V& (0+255),b	;volatile
  4476                           
  4477                           ; BSR set to: 1
  4478                           ;main.c: 208:  WaitMs(300);
  4479  010028  0E2C               	movlw	44
  4480  01002A  6EE6               	movwf	postinc1,c
  4481  01002C  0E01               	movlw	1
  4482  01002E  6EE6               	movwf	postinc1,c
  4483  010030  EC4D  F0E5         	call	_WaitMs	;wreg free
  4484                           
  4485                           ;main.c: 209:  if (PORTBbits.RB0) {
  4486  010034  A0CB               	btfss	203,0,c	;volatile
  4487  010036  D004               	goto	l14384
  4488                           
  4489                           ;main.c: 210:   mode = UI_STATE_HOST;
  4490                           ;stkvar	_mode @ sp[(-17)+15]
  4491  010038  0EFE               	movlw	-2
  4492  01003A  6AE3               	clrf	plusw1,c
  4493  01003C  2AE3               	incf	plusw1,f,c
  4494                           
  4495                           ;main.c: 211:  } else {
  4496  01003E  D004               	goto	l14386
  4497  010040                     l14384:
  4498                           
  4499                           ;main.c: 212:   mode = UI_STATE_LOG;
  4500                           ;stkvar	_mode @ sp[(-17)+15]
  4501  010040  0EFE               	movlw	-2
  4502  010042  6AE3               	clrf	plusw1,c
  4503  010044  80E3               	bsf	plusw1,0,c
  4504  010046  82E3               	bsf	plusw1,1,c	;indir
  4505  010048                     l14386:
  4506                           
  4507                           ;main.c: 215:  if (mode == UI_STATE_HOST) {
  4508                           ;stkvar	_mode @ sp[(-17)+15]
  4509  010048  0EFE               	movlw	-2
  4510  01004A  04E3               	decf	plusw1,w,c
  4511  01004C  A4D8               	btfss	status,2,c
  4512  01004E  D007               	goto	l1344
  4513                           
  4514                           ;main.c: 216:   do { LATDbits.LATD0 = 1; } while(0);
  4515  010050  80BD               	bsf	189,0,c	;volatile
  4516                           
  4517                           ;main.c: 217:   V.mode_pwm = 70;
  4518  010052  0E00               	movlw	0
  4519  010054  0101               	movlb	1	; () banked
  4520  010056  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4521  010058  0E46               	movlw	70
  4522  01005A  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4523                           
  4524                           ;main.c: 218:  } else {
  4525  01005C  D004               	goto	l14390
  4526  01005E                     l1344:
  4527  01005E  90BD               	bcf	189,0,c	;volatile
  4528                           
  4529                           ;main.c: 220:   V.mode_pwm = 0;
  4530  010060  0101               	movlb	1	; () banked
  4531  010062  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4532  010064  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4533  010066                     l14390:
  4534                           
  4535                           ; BSR set to: 1
  4536                           ;main.c: 222:  mode_lamp_dim(V.mode_pwm);
  4537  010066  0060  F673  FFE6   	movff	_V+149,postinc1
  4538  01006C  0060  F677  FFE6   	movff	_V+150,postinc1
  4539  010072  EC09  F0E9         	call	_mode_lamp_dim	;wreg free
  4540  010076  D39B               	goto	l14538
  4541  010078                     l14392:
  4542                           
  4543                           ; BSR set to: 1
  4544                           ;main.c: 230:    init_port_dma();
  4545  010078  ECE9  F0E5         	call	_init_port_dma	;wreg free
  4546                           
  4547                           ; BSR set to: 59
  4548                           ;main.c: 232:    init_display();
  4549  01007C  ECC3  F0D6         	call	_init_display	;wreg free
  4550                           
  4551                           ; BSR set to: 61
  4552                           ;main.c: 233:    eaDogM_WriteCommand(0b00001100);
  4553  010080  0E0C               	movlw	12
  4554  010082  6EE6               	movwf	postinc1,c
  4555  010084  EC91  F0E9         	call	_eaDogM_WriteCommand	;wreg free
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;main.c: 234:    set_dac();
  4559  010088  ECFD  F0D9         	call	_set_dac	;wreg free
  4560                           
  4561                           ;main.c: 238:    set_load_relay_one(1);
  4562  01008C  0E01               	movlw	1
  4563  01008E  6EE6               	movwf	postinc1,c
  4564  010090  EC71  F0E9         	call	_set_load_relay_one	;wreg free
  4565                           
  4566                           ;main.c: 239:    set_load_relay_two(1);
  4567  010094  0E01               	movlw	1
  4568  010096  6EE6               	movwf	postinc1,c
  4569  010098  EC69  F0E9         	call	_set_load_relay_two	;wreg free
  4570                           
  4571                           ;main.c: 241:    V.ui_state = mode;
  4572                           ;stkvar	_mode @ sp[(-17)+15]
  4573  01009C  0EFE               	movlw	-2
  4574  01009E  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4575                           
  4576                           ;main.c: 242:    srand(1957);
  4577  0100A4  0EA5               	movlw	165
  4578  0100A6  6EE6               	movwf	postinc1,c
  4579  0100A8  0E07               	movlw	7
  4580  0100AA  6EE6               	movwf	postinc1,c
  4581  0100AC  EC68  F0E5         	call	_srand	;wreg free
  4582                           
  4583                           ; BSR set to: 2
  4584                           ;main.c: 243:    set_vterm(0);
  4585  0100B0  0E00               	movlw	0
  4586  0100B2  6EE6               	movwf	postinc1,c
  4587  0100B4  ECC1  F0E8         	call	_set_vterm	;wreg free
  4588                           
  4589                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4590  0100B8  0EA1               	movlw	low STR_1
  4591  0100BA  6EE6               	movwf	postinc1,c
  4592  0100BC  0EFE               	movlw	high STR_1
  4593  0100BE  6EE6               	movwf	postinc1,c
  4594  0100C0  0E00               	movlw	0
  4595  0100C2  6EE6               	movwf	postinc1,c
  4596  0100C4  0E00               	movlw	0
  4597  0100C6  6EE6               	movwf	postinc1,c
  4598  0100C8  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  4599  0100CC  0060  F007  FFE6   	movff	btemp,postinc1
  4600  0100D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4601  0100D8  0E04               	movlw	4
  4602  0100DA  6EE6               	movwf	postinc1,c
  4603  0100DC  EC4D  F0D5         	call	_sprintf	;wreg free
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.19");
  4607  0100E0  0ED2               	movlw	low STR_3
  4608  0100E2  6EE6               	movwf	postinc1,c
  4609  0100E4  0EFF               	movlw	high STR_3
  4610  0100E6  6EE6               	movwf	postinc1,c
  4611  0100E8  0E62               	movlw	low STR_2
  4612  0100EA  6EE6               	movwf	postinc1,c
  4613  0100EC  0EFE               	movlw	high STR_2
  4614  0100EE  6EE6               	movwf	postinc1,c
  4615  0100F0  0E00               	movlw	0
  4616  0100F2  6EE6               	movwf	postinc1,c
  4617  0100F4  0E01               	movlw	1
  4618  0100F6  6EE6               	movwf	postinc1,c
  4619  0100F8  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  4620  0100FC  0060  F007  FFE6   	movff	btemp,postinc1
  4621  010102  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4622  010108  0E06               	movlw	6
  4623  01010A  6EE6               	movwf	postinc1,c
  4624  01010C  EC4D  F0D5         	call	_sprintf	;wreg free
  4625                           
  4626                           ; BSR set to: 0
  4627                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4628  010110  0E0E               	movlw	low STR_4
  4629  010112  6EE6               	movwf	postinc1,c
  4630  010114  0EFE               	movlw	high STR_4
  4631  010116  6EE6               	movwf	postinc1,c
  4632  010118  0E00               	movlw	0
  4633  01011A  6EE6               	movwf	postinc1,c
  4634  01011C  0E02               	movlw	2
  4635  01011E  6EE6               	movwf	postinc1,c
  4636  010120  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  4637  010124  0060  F007  FFE6   	movff	btemp,postinc1
  4638  01012A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4639  010130  0E04               	movlw	4
  4640  010132  6EE6               	movwf	postinc1,c
  4641  010134  EC4D  F0D5         	call	_sprintf	;wreg free
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;main.c: 247:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4645  010138  0E45               	movlw	low (STR_14+1)
  4646  01013A  6EE6               	movwf	postinc1,c
  4647  01013C  0EFC               	movlw	high (STR_14+1)
  4648  01013E  6EE6               	movwf	postinc1,c
  4649  010140  0E02               	movlw	2
  4650  010142  6EE6               	movwf	postinc1,c
  4651  010144  0E00               	movlw	0
  4652  010146  6EE6               	movwf	postinc1,c
  4653  010148  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  4654  01014C  0060  F007  FFE6   	movff	btemp,postinc1
  4655  010152  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4656  010158  0E04               	movlw	4
  4657  01015A  6EE6               	movwf	postinc1,c
  4658  01015C  EC4D  F0D5         	call	_sprintf	;wreg free
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;main.c: 248:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4662  010160  0E45               	movlw	low (STR_14+1)
  4663  010162  6EE6               	movwf	postinc1,c
  4664  010164  0EFC               	movlw	high (STR_14+1)
  4665  010166  6EE6               	movwf	postinc1,c
  4666  010168  0E02               	movlw	2
  4667  01016A  6EE6               	movwf	postinc1,c
  4668  01016C  0E01               	movlw	1
  4669  01016E  6EE6               	movwf	postinc1,c
  4670  010170  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  4671  010174  0060  F007  FFE6   	movff	btemp,postinc1
  4672  01017A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4673  010180  0E04               	movlw	4
  4674  010182  6EE6               	movwf	postinc1,c
  4675  010184  EC4D  F0D5         	call	_sprintf	;wreg free
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;main.c: 249:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4679  010188  0E45               	movlw	low (STR_14+1)
  4680  01018A  6EE6               	movwf	postinc1,c
  4681  01018C  0EFC               	movlw	high (STR_14+1)
  4682  01018E  6EE6               	movwf	postinc1,c
  4683  010190  0E02               	movlw	2
  4684  010192  6EE6               	movwf	postinc1,c
  4685  010194  0E02               	movlw	2
  4686  010196  6EE6               	movwf	postinc1,c
  4687  010198  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  4688  01019C  0060  F007  FFE6   	movff	btemp,postinc1
  4689  0101A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4690  0101A8  0E04               	movlw	4
  4691  0101AA  6EE6               	movwf	postinc1,c
  4692  0101AC  EC4D  F0D5         	call	_sprintf	;wreg free
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;main.c: 250:    update_lcd(0);
  4696  0101B0  0E00               	movlw	0
  4697  0101B2  6EE6               	movwf	postinc1,c
  4698  0101B4  ECC5  F0D4         	call	_update_lcd	;wreg free
  4699                           
  4700                           ;main.c: 251:    WaitMs(1000);
  4701  0101B8  0EE8               	movlw	232
  4702  0101BA  6EE6               	movwf	postinc1,c
  4703  0101BC  0E03               	movlw	3
  4704  0101BE  6EE6               	movwf	postinc1,c
  4705  0101C0  EC4D  F0E5         	call	_WaitMs	;wreg free
  4706                           
  4707                           ;main.c: 252:    StartTimer(TMR_DISPLAY, 250);
  4708  0101C4  0EFA               	movlw	250
  4709  0101C6  6EE6               	movwf	postinc1,c
  4710  0101C8  0E00               	movlw	0
  4711  0101CA  6EE6               	movwf	postinc1,c
  4712  0101CC  0E0A               	movlw	10
  4713  0101CE  6EE6               	movwf	postinc1,c
  4714  0101D0  EC5C  F0E4         	call	_StartTimer	;wreg free
  4715                           
  4716                           ;main.c: 253:    StartTimer(TMR_ADC, 200);
  4717  0101D4  0EC8               	movlw	200
  4718  0101D6  6EE6               	movwf	postinc1,c
  4719  0101D8  0E00               	movlw	0
  4720  0101DA  6EE6               	movwf	postinc1,c
  4721  0101DC  0E01               	movlw	1
  4722  0101DE  6EE6               	movwf	postinc1,c
  4723  0101E0  EC5C  F0E4         	call	_StartTimer	;wreg free
  4724                           
  4725                           ;main.c: 254:    StartTimer(TMR_INFO, 3000);
  4726  0101E4  0EB8               	movlw	184
  4727  0101E6  6EE6               	movwf	postinc1,c
  4728  0101E8  0E0B               	movlw	11
  4729  0101EA  6EE6               	movwf	postinc1,c
  4730  0101EC  0E07               	movlw	7
  4731  0101EE  6EE6               	movwf	postinc1,c
  4732  0101F0  EC5C  F0E4         	call	_StartTimer	;wreg free
  4733                           
  4734                           ;main.c: 255:    StartTimer(TMR_FLIPPER, 1500);
  4735  0101F4  0EDC               	movlw	220
  4736  0101F6  6EE6               	movwf	postinc1,c
  4737  0101F8  0E05               	movlw	5
  4738  0101FA  6EE6               	movwf	postinc1,c
  4739  0101FC  0E0B               	movlw	11
  4740  0101FE  6EE6               	movwf	postinc1,c
  4741  010200  EC5C  F0E4         	call	_StartTimer	;wreg free
  4742                           
  4743                           ;main.c: 256:    StartTimer(TMR_HELPDIS, 3000);
  4744  010204  0EB8               	movlw	184
  4745  010206  6EE6               	movwf	postinc1,c
  4746  010208  0E0B               	movlw	11
  4747  01020A  6EE6               	movwf	postinc1,c
  4748  01020C  0E09               	movlw	9
  4749  01020E  6EE6               	movwf	postinc1,c
  4750  010210  EC5C  F0E4         	call	_StartTimer	;wreg free
  4751                           
  4752                           ;main.c: 258:    start_adc_scan();
  4753  010214  ECF3  F0E0         	call	_start_adc_scan	;wreg free
  4754                           
  4755                           ;main.c: 259:    start_switch_handler();
  4756  010218  EC83  F0E8         	call	_start_switch_handler	;wreg free
  4757                           
  4758                           ; BSR set to: 57
  4759                           ;main.c: 260:    WaitMs(1000);
  4760  01021C  0EE8               	movlw	232
  4761  01021E  6EE6               	movwf	postinc1,c
  4762  010220  0E03               	movlw	3
  4763  010222  6EE6               	movwf	postinc1,c
  4764  010224  EC4D  F0E5         	call	_WaitMs	;wreg free
  4765                           
  4766                           ;main.c: 265:    if (read_cal_data()) {
  4767  010228  EC2E  F0C7         	call	_read_cal_data	;wreg free
  4768  01022C  5001               	movf	btemp^0,w,c
  4769  01022E  B4D8               	btfsc	status,2,c
  4770  010230  D017               	goto	l14448
  4771                           
  4772                           ;main.c: 266:     update_cal_data();
  4773  010232  EC21  F0E9         	call	_update_cal_data	;wreg free
  4774                           
  4775                           ;main.c: 267:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  4776  010236  0EF5               	movlw	low STR_8
  4777  010238  6EE6               	movwf	postinc1,c
  4778  01023A  0EFE               	movlw	high STR_8
  4779  01023C  6EE6               	movwf	postinc1,c
  4780  01023E  0E00               	movlw	0
  4781  010240  6EE6               	movwf	postinc1,c
  4782  010242  0E02               	movlw	2
  4783  010244  6EE6               	movwf	postinc1,c
  4784  010246  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  4785  01024A  0060  F007  FFE6   	movff	btemp,postinc1
  4786  010250  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4787  010256  0E04               	movlw	4
  4788  010258  6EE6               	movwf	postinc1,c
  4789  01025A  EC4D  F0D5         	call	_sprintf	;wreg free
  4790                           
  4791                           ;main.c: 268:    } else {
  4792  01025E  D014               	goto	l1350
  4793  010260                     l14448:
  4794                           
  4795                           ;main.c: 269:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  4796  010260  0E34               	movlw	low STR_9
  4797  010262  6EE6               	movwf	postinc1,c
  4798  010264  0EFF               	movlw	high STR_9
  4799  010266  6EE6               	movwf	postinc1,c
  4800  010268  0E00               	movlw	0
  4801  01026A  6EE6               	movwf	postinc1,c
  4802  01026C  0E02               	movlw	2
  4803  01026E  6EE6               	movwf	postinc1,c
  4804  010270  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  4805  010274  0060  F007  FFE6   	movff	btemp,postinc1
  4806  01027A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4807  010280  0E04               	movlw	4
  4808  010282  6EE6               	movwf	postinc1,c
  4809  010284  EC4D  F0D5         	call	_sprintf	;wreg free
  4810  010288                     l1350:
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;main.c: 271:    update_lcd(0);
  4814  010288  0E00               	movlw	0
  4815  01028A  6EE6               	movwf	postinc1,c
  4816  01028C  ECC5  F0D4         	call	_update_lcd	;wreg free
  4817                           
  4818                           ;main.c: 272:    WaitMs(2000);
  4819  010290  0ED0               	movlw	208
  4820  010292  6EE6               	movwf	postinc1,c
  4821  010294  0E07               	movlw	7
  4822  010296  6EE6               	movwf	postinc1,c
  4823  010298  EC4D  F0E5         	call	_WaitMs	;wreg free
  4824                           
  4825                           ;main.c: 274:    i_ror = 1;
  4826                           ;stkvar	_i_ror @ sp[(-17)+16]
  4827  01029C  0EFF               	movlw	-1
  4828  01029E  6AE3               	clrf	plusw1,c
  4829  0102A0  2AE3               	incf	plusw1,f,c
  4830  0102A2                     l14454:
  4831                           
  4832                           ;main.c: 276:     calc_ror_data();
  4833  0102A2  EC88  F0CA         	call	_calc_ror_data	;wreg free
  4834                           
  4835                           ;main.c: 277:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4836  0102A6  0E00               	movlw	0
  4837  0102A8  6EE6               	movwf	postinc1,c
  4838  0102AA  0E04               	movlw	4
  4839  0102AC  6EE6               	movwf	postinc1,c
  4840  0102AE  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  4841  0102B2  0060  F007  FFE6   	movff	btemp,postinc1
  4842  0102B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4843  0102BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4844  0102C4  0060  F013  FFE6   	movff	btemp+3,postinc1
  4845  0102CA  0EF9               	movlw	low STR_10
  4846  0102CC  6EE6               	movwf	postinc1,c
  4847  0102CE  0EFD               	movlw	high STR_10
  4848  0102D0  6EE6               	movwf	postinc1,c
  4849  0102D2  0E00               	movlw	0
  4850  0102D4  6EE6               	movwf	postinc1,c
  4851  0102D6  0E01               	movlw	1
  4852  0102D8  6EE6               	movwf	postinc1,c
  4853  0102DA  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  4854  0102DE  0060  F007  FFE6   	movff	btemp,postinc1
  4855  0102E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4856  0102EA  0E08               	movlw	8
  4857  0102EC  6EE6               	movwf	postinc1,c
  4858  0102EE  EC4D  F0D5         	call	_sprintf	;wreg free
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;main.c: 278:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4862  0102F2  EE22  F06B         	lfsr	2,_C+108	;volatile
  4863  0102F6  006F FF7B FFE6     	movff	postinc2,postinc1
  4864  0102FC  006F FF7B FFE6     	movff	postinc2,postinc1
  4865  010302  006F FF7B FFE6     	movff	postinc2,postinc1
  4866  010308  006F FF7B FFE6     	movff	postinc2,postinc1
  4867                           
  4868                           ;stkvar	_i_ror @ sp[(-21)+16]
  4869  01030E  0EFB               	movlw	-5
  4870  010310  50E3               	movf	plusw1,w,c
  4871  010312  6EE6               	movwf	postinc1,c
  4872  010314  0E00               	movlw	0
  4873  010316  6EE6               	movwf	postinc1,c
  4874  010318  0E00               	movlw	0
  4875  01031A  6EE6               	movwf	postinc1,c
  4876  01031C  0E05               	movlw	5
  4877  01031E  6EE6               	movwf	postinc1,c
  4878  010320  ECD2  F0D5         	call	_spinners	;wreg free
  4879  010324  5001               	movf	btemp^0,w,c
  4880  010326  6EE6               	movwf	postinc1,c
  4881  010328  0E00               	movlw	0
  4882  01032A  6EE6               	movwf	postinc1,c
  4883  01032C  0E9F               	movlw	low STR_11
  4884  01032E  6EE6               	movwf	postinc1,c
  4885  010330  0EFB               	movlw	high STR_11
  4886  010332  6EE6               	movwf	postinc1,c
  4887  010334  0E00               	movlw	0
  4888  010336  6EE6               	movwf	postinc1,c
  4889  010338  0E02               	movlw	2
  4890  01033A  6EE6               	movwf	postinc1,c
  4891  01033C  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  4892  010340  0060  F007  FFE6   	movff	btemp,postinc1
  4893  010346  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4894  01034C  0E0C               	movlw	12
  4895  01034E  6EE6               	movwf	postinc1,c
  4896  010350  EC4D  F0D5         	call	_sprintf	;wreg free
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;main.c: 279:     update_lcd(0);
  4900  010354  0E00               	movlw	0
  4901  010356  6EE6               	movwf	postinc1,c
  4902  010358  ECC5  F0D4         	call	_update_lcd	;wreg free
  4903                           
  4904                           ;main.c: 280:     clear_adc_scan();
  4905  01035C  ECE8  F0E9         	call	_clear_adc_scan	;wreg free
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;main.c: 281:     start_adc_scan();
  4909  010360  ECF3  F0E0         	call	_start_adc_scan	;wreg free
  4910                           
  4911                           ;main.c: 282:     WaitMs(2000);
  4912  010364  0ED0               	movlw	208
  4913  010366  6EE6               	movwf	postinc1,c
  4914  010368  0E07               	movlw	7
  4915  01036A  6EE6               	movwf	postinc1,c
  4916  01036C  EC4D  F0E5         	call	_WaitMs	;wreg free
  4917                           
  4918                           ;main.c: 285:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4919                           ;stkvar	_i_ror @ sp[(-17)+16]
  4920  010370  0EFF               	movlw	-1
  4921  010372  006F FF8C  F00C    	movff	plusw1,btemp+11
  4922  010378  2A0C               	incf	(btemp+11)^0,f,c
  4923  01037A  0060  F033  FFE3   	movff	btemp+11,plusw1
  4924  010380  060C               	decf	(btemp+11)^0,f,c
  4925  010382  0E1E               	movlw	30
  4926  010384  600C               	cpfslt	(btemp+11)^0,c
  4927  010386  D01A               	goto	u13740
  4928  010388  EE22  F06B         	lfsr	2,_C+108	;volatile
  4929  01038C  006F FF7B FFE6     	movff	postinc2,postinc1
  4930  010392  006F FF7B FFE6     	movff	postinc2,postinc1
  4931  010398  006F FF7B FFE6     	movff	postinc2,postinc1
  4932  01039E  006F FF7B FFE6     	movff	postinc2,postinc1
  4933  0103A4  0E42               	movlw	66
  4934  0103A6  6EE6               	movwf	postinc1,c
  4935  0103A8  0E60               	movlw	96
  4936  0103AA  6EE6               	movwf	postinc1,c
  4937  0103AC  0E65               	movlw	101
  4938  0103AE  6EE6               	movwf	postinc1,c
  4939  0103B0  0E3C               	movlw	60
  4940  0103B2  6EE6               	movwf	postinc1,c
  4941  0103B4  EC7D  F0CD         	call	___flge	;wreg free
  4942  0103B8  A001               	btfss	btemp& (0+255),0,c
  4943  0103BA  D773               	goto	l14454
  4944  0103BC                     u13740:
  4945                           
  4946                           ;main.c: 287:    static_soc();
  4947  0103BC  ECB7  F0E1         	call	_static_soc	;wreg free
  4948                           
  4949                           ;main.c: 288:    init_bsoc();
  4950  0103C0  ECC2  F0C0         	call	_init_bsoc	;wreg free
  4951                           
  4952                           ;main.c: 289:    set_load_relay_one(0);
  4953  0103C4  0E00               	movlw	0
  4954  0103C6  6EE6               	movwf	postinc1,c
  4955  0103C8  EC71  F0E9         	call	_set_load_relay_one	;wreg free
  4956                           
  4957                           ;main.c: 290:    set_load_relay_two(0);
  4958  0103CC  0E00               	movlw	0
  4959  0103CE  6EE6               	movwf	postinc1,c
  4960  0103D0  EC69  F0E9         	call	_set_load_relay_two	;wreg free
  4961                           
  4962                           ;main.c: 291:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4963  0103D4  EE22  F0B5         	lfsr	2,_C+182	;volatile
  4964  0103D8  006F FF78  F00B    	movff	postinc2,btemp+10
  4965  0103DE  006F FF74  F00C    	movff	postdec2,btemp+11
  4966  0103E4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4967  0103EA  0060  F033  FFE6   	movff	btemp+11,postinc1
  4968  0103F0  0E70               	movlw	low STR_12
  4969  0103F2  6EE6               	movwf	postinc1,c
  4970  0103F4  0EFC               	movlw	high STR_12
  4971  0103F6  6EE6               	movwf	postinc1,c
  4972  0103F8  0E00               	movlw	0
  4973  0103FA  6EE6               	movwf	postinc1,c
  4974  0103FC  0E00               	movlw	0
  4975  0103FE  6EE6               	movwf	postinc1,c
  4976  010400  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  4977  010404  0060  F007  FFE6   	movff	btemp,postinc1
  4978  01040A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4979  010410  0E06               	movlw	6
  4980  010412  6EE6               	movwf	postinc1,c
  4981  010414  EC4D  F0D5         	call	_sprintf	;wreg free
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;main.c: 292:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4985  010418  EE22  F08F         	lfsr	2,_C+144	;volatile
  4986  01041C  006F FF7B FFE6     	movff	postinc2,postinc1
  4987  010422  006F FF7B FFE6     	movff	postinc2,postinc1
  4988  010428  006F FF7B FFE6     	movff	postinc2,postinc1
  4989  01042E  006F FF7B FFE6     	movff	postinc2,postinc1
  4990  010434  0E4C               	movlw	low STR_13
  4991  010436  6EE6               	movwf	postinc1,c
  4992  010438  0EFD               	movlw	high STR_13
  4993  01043A  6EE6               	movwf	postinc1,c
  4994  01043C  0E00               	movlw	0
  4995  01043E  6EE6               	movwf	postinc1,c
  4996  010440  0E01               	movlw	1
  4997  010442  6EE6               	movwf	postinc1,c
  4998  010444  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  4999  010448  0060  F007  FFE6   	movff	btemp,postinc1
  5000  01044E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5001  010454  0E08               	movlw	8
  5002  010456  6EE6               	movwf	postinc1,c
  5003  010458  EC4D  F0D5         	call	_sprintf	;wreg free
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;main.c: 293:    sprintf(get_vterm_ptr(2, 0), "                     ");
  5007  01045C  0E44               	movlw	low STR_14
  5008  01045E  6EE6               	movwf	postinc1,c
  5009  010460  0EFC               	movlw	high STR_14
  5010  010462  6EE6               	movwf	postinc1,c
  5011  010464  0E00               	movlw	0
  5012  010466  6EE6               	movwf	postinc1,c
  5013  010468  0E02               	movlw	2
  5014  01046A  6EE6               	movwf	postinc1,c
  5015  01046C  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5016  010470  0060  F007  FFE6   	movff	btemp,postinc1
  5017  010476  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5018  01047C  0E04               	movlw	4
  5019  01047E  6EE6               	movwf	postinc1,c
  5020  010480  EC4D  F0D5         	call	_sprintf	;wreg free
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;main.c: 294:    update_lcd(0);
  5024  010484  0E00               	movlw	0
  5025  010486  6EE6               	movwf	postinc1,c
  5026  010488  ECC5  F0D4         	call	_update_lcd	;wreg free
  5027                           
  5028                           ;main.c: 295:    WaitMs(2000);
  5029  01048C  0ED0               	movlw	208
  5030  01048E  6EE6               	movwf	postinc1,c
  5031  010490  0E07               	movlw	7
  5032  010492  6EE6               	movwf	postinc1,c
  5033  010494  EC4D  F0E5         	call	_WaitMs	;wreg free
  5034                           
  5035                           ;main.c: 296:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  5036  010498  0E23               	movlw	low STR_15
  5037  01049A  6EE6               	movwf	postinc1,c
  5038  01049C  0EFE               	movlw	high STR_15
  5039  01049E  6EE6               	movwf	postinc1,c
  5040  0104A0  0E00               	movlw	0
  5041  0104A2  6EE6               	movwf	postinc1,c
  5042  0104A4  0E00               	movlw	0
  5043  0104A6  6EE6               	movwf	postinc1,c
  5044  0104A8  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5045  0104AC  0060  F007  FFE6   	movff	btemp,postinc1
  5046  0104B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5047  0104B8  0E04               	movlw	4
  5048  0104BA  6EE6               	movwf	postinc1,c
  5049  0104BC  EC4D  F0D5         	call	_sprintf	;wreg free
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;main.c: 297:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  5053  0104C0  0E38               	movlw	low STR_16
  5054  0104C2  6EE6               	movwf	postinc1,c
  5055  0104C4  0EFE               	movlw	high STR_16
  5056  0104C6  6EE6               	movwf	postinc1,c
  5057  0104C8  0E00               	movlw	0
  5058  0104CA  6EE6               	movwf	postinc1,c
  5059  0104CC  0E01               	movlw	1
  5060  0104CE  6EE6               	movwf	postinc1,c
  5061  0104D0  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5062  0104D4  0060  F007  FFE6   	movff	btemp,postinc1
  5063  0104DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5064  0104E0  0E04               	movlw	4
  5065  0104E2  6EE6               	movwf	postinc1,c
  5066  0104E4  EC4D  F0D5         	call	_sprintf	;wreg free
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;main.c: 298:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  5070  0104E8  0E0A               	movlw	low STR_17
  5071  0104EA  6EE6               	movwf	postinc1,c
  5072  0104EC  0EFF               	movlw	high STR_17
  5073  0104EE  6EE6               	movwf	postinc1,c
  5074  0104F0  0E00               	movlw	0
  5075  0104F2  6EE6               	movwf	postinc1,c
  5076  0104F4  0E02               	movlw	2
  5077  0104F6  6EE6               	movwf	postinc1,c
  5078  0104F8  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5079  0104FC  0060  F007  FFE6   	movff	btemp,postinc1
  5080  010502  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5081  010508  0E04               	movlw	4
  5082  01050A  6EE6               	movwf	postinc1,c
  5083  01050C  EC4D  F0D5         	call	_sprintf	;wreg free
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;main.c: 299:    update_lcd(0);
  5087  010510  0E00               	movlw	0
  5088  010512  6EE6               	movwf	postinc1,c
  5089  010514  ECC5  F0D4         	call	_update_lcd	;wreg free
  5090                           
  5091                           ;main.c: 300:    uint16_t i_esr = 1;
  5092  010518  0E01               	movlw	1
  5093  01051A  6E0B               	movwf	(btemp+10)^0,c
  5094  01051C  0E00               	movlw	0
  5095  01051E  6E0C               	movwf	(btemp+11)^0,c
  5096                           
  5097                           ;stkvar	_i_esr @ sp[(-17)+8]
  5098  010520  0EF7               	movlw	-9
  5099  010522  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5100  010528  0EF8               	movlw	-8
  5101  01052A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5102                           
  5103                           ;main.c: 302:    float esr_temp;;main.c: 303:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5104  010530  D06D               	goto	l14514
  5105  010532                     l14502:
  5106                           
  5107                           ;main.c: 304:     WaitMs(110);
  5108  010532  0E6E               	movlw	110
  5109  010534  6EE6               	movwf	postinc1,c
  5110  010536  0E00               	movlw	0
  5111  010538  6EE6               	movwf	postinc1,c
  5112  01053A  EC4D  F0E5         	call	_WaitMs	;wreg free
  5113                           
  5114                           ;main.c: 305:     shape = (uint8_t) fabsf(esr_temp);
  5115                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5116  01053E  0EF3               	movlw	-13
  5117  010540  006F FF8F FFE6     	movff	plusw1,postinc1
  5118  010546  006F FF8F FFE6     	movff	plusw1,postinc1
  5119  01054C  006F FF8F FFE6     	movff	plusw1,postinc1
  5120  010552  006F FF8F FFE6     	movff	plusw1,postinc1
  5121  010558  EC58  F0DA         	call	_fabsf	;wreg free
  5122  01055C  0060  F007  FFE6   	movff	btemp,postinc1
  5123  010562  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5124  010568  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5125  01056E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5126  010574  ECC4  F0CC         	call	___fltol	;wreg free
  5127  010578  0060  F004  F00C   	movff	btemp,btemp+11
  5128                           
  5129                           ;stkvar	_shape @ sp[(-17)+10]
  5130  01057E  0EF9               	movlw	-7
  5131  010580  0060  F033  FFE3   	movff	btemp+11,plusw1
  5132                           
  5133                           ;main.c: 306:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  5134  010586  0E00               	movlw	0
  5135  010588  6EE6               	movwf	postinc1,c
  5136                           
  5137                           ;stkvar	_shape @ sp[(-18)+10]
  5138  01058A  0EF8               	movlw	-8
  5139  01058C  50E3               	movf	plusw1,w,c
  5140  01058E  6EE6               	movwf	postinc1,c
  5141  010590  ECD2  F0D5         	call	_spinners	;wreg free
  5142  010594  5001               	movf	btemp^0,w,c
  5143  010596  6EE6               	movwf	postinc1,c
  5144  010598  0E00               	movlw	0
  5145  01059A  6EE6               	movwf	postinc1,c
  5146  01059C  0E00               	movlw	0
  5147  01059E  6EE6               	movwf	postinc1,c
  5148  0105A0  0E00               	movlw	0
  5149  0105A2  6EE6               	movwf	postinc1,c
  5150  0105A4  ECD2  F0D5         	call	_spinners	;wreg free
  5151  0105A8  5001               	movf	btemp^0,w,c
  5152  0105AA  6EE6               	movwf	postinc1,c
  5153  0105AC  0E00               	movlw	0
  5154  0105AE  6EE6               	movwf	postinc1,c
  5155  0105B0  0ECB               	movlw	low STR_18
  5156  0105B2  6EE6               	movwf	postinc1,c
  5157  0105B4  0EFE               	movlw	high STR_18
  5158  0105B6  6EE6               	movwf	postinc1,c
  5159  0105B8  0E00               	movlw	0
  5160  0105BA  6EE6               	movwf	postinc1,c
  5161  0105BC  0E02               	movlw	2
  5162  0105BE  6EE6               	movwf	postinc1,c
  5163  0105C0  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5164  0105C4  0060  F007  FFE6   	movff	btemp,postinc1
  5165  0105CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5166  0105D0  0E08               	movlw	8
  5167  0105D2  6EE6               	movwf	postinc1,c
  5168  0105D4  EC4D  F0D5         	call	_sprintf	;wreg free
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;main.c: 307:     update_lcd(0);
  5172  0105D8  0E00               	movlw	0
  5173  0105DA  6EE6               	movwf	postinc1,c
  5174  0105DC  ECC5  F0D4         	call	_update_lcd	;wreg free
  5175                           
  5176                           ;main.c: 309:     if (i_esr++ > 512)
  5177                           ;stkvar	_i_esr @ sp[(-17)+8]
  5178  0105E0  50E1               	movf	fsr1l,w,c
  5179  0105E2  0FF7               	addlw	-9
  5180  0105E4  6ED9               	movwf	fsr2l,c
  5181  0105E6  50E2               	movf	fsr1h,w,c
  5182  0105E8  6EDA               	movwf	fsr2h,c
  5183  0105EA  0EFF               	movlw	255
  5184  0105EC  22DA               	addwfc	fsr2h,f,c
  5185  0105EE  006F FF7C  F00B    	movff	indf2,btemp+10
  5186  0105F4  0E01               	movlw	1
  5187  0105F6  26DE               	addwf	postinc2,f,c
  5188  0105F8  006F FF7C  F00C    	movff	indf2,btemp+11
  5189  0105FE  0E00               	movlw	0
  5190  010600  22DD               	addwfc	postdec2,f,c
  5191  010602  040B               	decf	(btemp+10)^0,w,c
  5192  010604  0E02               	movlw	2
  5193  010606  580C               	subwfb	(btemp+11)^0,w,c
  5194  010608  B0D8               	btfsc	status,0,c
  5195  01060A  D017               	goto	u13760
  5196  01060C                     l14514:
  5197                           
  5198                           ;main.c: 303:    while ((esr_temp = esr_check(0)) < 0.0) {
  5199  01060C  0E00               	movlw	0
  5200  01060E  6EE6               	movwf	postinc1,c
  5201  010610  EC7D  F0BB         	call	_esr_check	;wreg free
  5202                           
  5203                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5204  010614  0EF3               	movlw	-13
  5205  010616  0060  F007  FFE3   	movff	btemp,plusw1
  5206  01061C  0EF4               	movlw	-12
  5207  01061E  0060  F00B  FFE3   	movff	btemp+1,plusw1
  5208  010624  0EF5               	movlw	-11
  5209  010626  0060  F00F  FFE3   	movff	btemp+2,plusw1
  5210  01062C  0EF6               	movlw	-10
  5211  01062E  0060  F013  FFE3   	movff	btemp+3,plusw1
  5212  010634  0EF6               	movlw	-10
  5213  010636  BEE3               	btfsc	plusw1,7,c
  5214  010638  D77C               	goto	l14502
  5215  01063A                     u13760:
  5216                           
  5217                           ;main.c: 312:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  5218  01063A  EE22  F087         	lfsr	2,_C+136	;volatile
  5219  01063E  006F FF7B FFE6     	movff	postinc2,postinc1
  5220  010644  006F FF7B FFE6     	movff	postinc2,postinc1
  5221  01064A  006F FF7B FFE6     	movff	postinc2,postinc1
  5222  010650  006F FF7B FFE6     	movff	postinc2,postinc1
  5223  010656  0E5A               	movlw	low STR_19
  5224  010658  6EE6               	movwf	postinc1,c
  5225  01065A  0EFC               	movlw	high STR_19
  5226  01065C  6EE6               	movwf	postinc1,c
  5227  01065E  0E00               	movlw	0
  5228  010660  6EE6               	movwf	postinc1,c
  5229  010662  0E00               	movlw	0
  5230  010664  6EE6               	movwf	postinc1,c
  5231  010666  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5232  01066A  0060  F007  FFE6   	movff	btemp,postinc1
  5233  010670  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5234  010676  0E08               	movlw	8
  5235  010678  6EE6               	movwf	postinc1,c
  5236  01067A  EC4D  F0D5         	call	_sprintf	;wreg free
  5237                           
  5238                           ;main.c: 313:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  5239  01067E  EE22  F10D         	lfsr	2,_C+270	;volatile
  5240  010682  006F FF7B FFE6     	movff	postinc2,postinc1
  5241  010688  006F FF7B FFE6     	movff	postinc2,postinc1
  5242  01068E  006F FF7B FFE6     	movff	postinc2,postinc1
  5243  010694  006F FF7B FFE6     	movff	postinc2,postinc1
  5244  01069A  EE22  F119         	lfsr	2,_C+282	;volatile
  5245  01069E  006F FF7B FFE6     	movff	postinc2,postinc1
  5246  0106A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5247  0106AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5248  0106B0  006F FF7B FFE6     	movff	postinc2,postinc1
  5249  0106B6  0E6B               	movlw	low STR_20
  5250  0106B8  6EE6               	movwf	postinc1,c
  5251  0106BA  0EFB               	movlw	high STR_20
  5252  0106BC  6EE6               	movwf	postinc1,c
  5253  0106BE  0E00               	movlw	0
  5254  0106C0  6EE6               	movwf	postinc1,c
  5255  0106C2  0E01               	movlw	1
  5256  0106C4  6EE6               	movwf	postinc1,c
  5257  0106C6  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5258  0106CA  0060  F007  FFE6   	movff	btemp,postinc1
  5259  0106D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5260  0106D6  0E0C               	movlw	12
  5261  0106D8  6EE6               	movwf	postinc1,c
  5262  0106DA  EC4D  F0D5         	call	_sprintf	;wreg free
  5263                           
  5264                           ;main.c: 314:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  5265  0106DE  EE22  F111         	lfsr	2,_C+274	;volatile
  5266  0106E2  006F FF7B FFE6     	movff	postinc2,postinc1
  5267  0106E8  006F FF7B FFE6     	movff	postinc2,postinc1
  5268  0106EE  006F FF7B FFE6     	movff	postinc2,postinc1
  5269  0106F4  006F FF7B FFE6     	movff	postinc2,postinc1
  5270  0106FA  EE22  F11D         	lfsr	2,_C+286	;volatile
  5271  0106FE  006F FF7B FFE6     	movff	postinc2,postinc1
  5272  010704  006F FF7B FFE6     	movff	postinc2,postinc1
  5273  01070A  006F FF7B FFE6     	movff	postinc2,postinc1
  5274  010710  006F FF7B FFE6     	movff	postinc2,postinc1
  5275  010716  0E85               	movlw	low STR_21
  5276  010718  6EE6               	movwf	postinc1,c
  5277  01071A  0EFB               	movlw	high STR_21
  5278  01071C  6EE6               	movwf	postinc1,c
  5279  01071E  0E00               	movlw	0
  5280  010720  6EE6               	movwf	postinc1,c
  5281  010722  0E02               	movlw	2
  5282  010724  6EE6               	movwf	postinc1,c
  5283  010726  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5284  01072A  0060  F007  FFE6   	movff	btemp,postinc1
  5285  010730  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5286  010736  0E0C               	movlw	12
  5287  010738  6EE6               	movwf	postinc1,c
  5288  01073A  EC4D  F0D5         	call	_sprintf	;wreg free
  5289                           
  5290                           ;main.c: 315:    update_lcd(0);
  5291  01073E  0E00               	movlw	0
  5292  010740  6EE6               	movwf	postinc1,c
  5293  010742  ECC5  F0D4         	call	_update_lcd	;wreg free
  5294                           
  5295                           ;main.c: 316:    WaitMs(4000);
  5296  010746  0EA0               	movlw	160
  5297  010748  6EE6               	movwf	postinc1,c
  5298  01074A  0E0F               	movlw	15
  5299  01074C  6EE6               	movwf	postinc1,c
  5300  01074E  EC4D  F0E5         	call	_WaitMs	;wreg free
  5301                           
  5302                           ;main.c: 317:    V.sensor_set = get_switch(SCALIB);
  5303  010752  0E04               	movlw	4
  5304  010754  6EE6               	movwf	postinc1,c
  5305  010756  EC60  F0E6         	call	_get_switch	;wreg free
  5306  01075A  5001               	movf	btemp^0,w,c
  5307  01075C  B4D8               	btfsc	status,2,c
  5308  01075E  D002               	goto	u13770
  5309  010760  0E01               	movlw	1
  5310  010762  D001               	goto	u13780
  5311  010764                     u13770:
  5312  010764  0E00               	movlw	0
  5313  010766                     u13780:
  5314  010766  0101               	movlb	1	; () banked
  5315  010768  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  5316                           
  5317                           ; BSR set to: 1
  5318                           ;main.c: 318:    WaitMs(1000);
  5319  01076A  0EE8               	movlw	232
  5320  01076C  6EE6               	movwf	postinc1,c
  5321  01076E  0E03               	movlw	3
  5322  010770  6EE6               	movwf	postinc1,c
  5323  010772  EC4D  F0E5         	call	_WaitMs	;wreg free
  5324                           
  5325                           ;main.c: 319:    if (V.sensor_set && get_switch(SCALIB)) {
  5326  010776  0101               	movlb	1	; () banked
  5327  010778  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
  5328  01077A  B4D8               	btfsc	status,2,c
  5329  01077C  D00F               	goto	l14532
  5330                           
  5331                           ; BSR set to: 1
  5332  01077E  0E04               	movlw	4
  5333  010780  6EE6               	movwf	postinc1,c
  5334  010782  EC60  F0E6         	call	_get_switch	;wreg free
  5335  010786  5001               	movf	btemp^0,w,c
  5336  010788  B4D8               	btfsc	status,2,c
  5337  01078A  D008               	goto	l14532
  5338                           
  5339                           ;main.c: 320:     current_sensor_cal();
  5340  01078C  EC7C  F0AC         	call	_current_sensor_cal	;wreg free
  5341                           
  5342                           ;main.c: 321:     WaitMs(4000);
  5343  010790  0EA0               	movlw	160
  5344  010792  6EE6               	movwf	postinc1,c
  5345  010794  0E0F               	movlw	15
  5346  010796  6EE6               	movwf	postinc1,c
  5347  010798  EC4D  F0E5         	call	_WaitMs	;wreg free
  5348  01079C                     l14532:
  5349                           
  5350                           ;main.c: 323:    V.sensor_set = 0;
  5351  01079C  0101               	movlb	1	; () banked
  5352  01079E  6BB5               	clrf	(_V+174)& (0+255),b	;volatile
  5353                           
  5354                           ; BSR set to: 1
  5355                           ;main.c: 324:    V.system_stable = 1;
  5356  0107A0  0E01               	movlw	1
  5357  0107A2  6FB6               	movwf	(_V+175)& (0+255),b	;volatile
  5358                           
  5359                           ;main.c: 325:    break;
  5360  0107A4  D01B               	goto	l14540
  5361  0107A6                     l1363:
  5362                           
  5363                           ; BSR set to: 1
  5364                           ;main.c: 331:    P.SYSTEM_STABLE = 1;
  5365  0107A6  81F7               	bsf	(_P+1)& (0+255),0,b	;volatile
  5366                           
  5367                           ;main.c: 332:    break;
  5368  0107A8  D019               	goto	l14540
  5369  0107AA                     l1365:
  5370                           
  5371                           ; BSR set to: 1
  5372                           ;main.c: 335:    V.ui_state = UI_STATE_INIT;
  5373  0107AA  6B07               	clrf	_V& (0+255),b	;volatile
  5374                           
  5375                           ;main.c: 336:    break;
  5376  0107AC  D017               	goto	l14540
  5377  0107AE                     l14538:
  5378  0107AE  0101               	movlb	1	; () banked
  5379  0107B0  5107               	movf	_V& (0+255),w,b	;volatile
  5380  0107B2  6E0B               	movwf	(btemp+10)^0,c
  5381  0107B4  6A0C               	clrf	(btemp+11)^0,c
  5382                           
  5383                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5384                           ; Switch size 1, requested type "simple"
  5385                           ; Number of cases is 1, Range of values is 0 to 0
  5386                           ; switch strategies available:
  5387                           ; Name         Instructions Cycles
  5388                           ; simple_byte            4     3 (average)
  5389                           ;	Chosen strategy is simple_byte
  5390  0107B6  500C               	movf	(btemp+11)^0,w,c
  5391  0107B8  0A00               	xorlw	0	; case 0
  5392  0107BA  A4D8               	btfss	status,2,c
  5393  0107BC  D7F6               	goto	l1365
  5394                           
  5395                           ; BSR set to: 1
  5396                           ; Switch size 1, requested type "simple"
  5397                           ; Number of cases is 5, Range of values is 0 to 5
  5398                           ; switch strategies available:
  5399                           ; Name         Instructions Cycles
  5400                           ; simple_byte           16     9 (average)
  5401                           ;	Chosen strategy is simple_byte
  5402  0107BE  500B               	movf	(btemp+10)^0,w,c
  5403  0107C0  0A00               	xorlw	0	; case 0
  5404  0107C2  B4D8               	btfsc	status,2,c
  5405  0107C4  D459               	goto	l14392
  5406  0107C6  0A01               	xorlw	1	; case 1
  5407  0107C8  B4D8               	btfsc	status,2,c
  5408  0107CA  D008               	goto	l14540
  5409  0107CC  0A02               	xorlw	2	; case 3
  5410  0107CE  B4D8               	btfsc	status,2,c
  5411  0107D0  D005               	goto	l14540
  5412  0107D2  0A07               	xorlw	7	; case 4
  5413  0107D4  B4D8               	btfsc	status,2,c
  5414  0107D6  D7E7               	goto	l1363
  5415  0107D8  0A01               	xorlw	1	; case 5
  5416  0107DA  D7E7               	goto	l1365
  5417  0107DC                     l14540:
  5418                           
  5419                           ; BSR set to: 1
  5420                           ;main.c: 339:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  5421  0107DC  0E01               	movlw	1
  5422  0107DE  6EE6               	movwf	postinc1,c
  5423  0107E0  ECCB  F0E6         	call	_TimerDone	;wreg free
  5424  0107E4  5001               	movf	btemp^0,w,c
  5425  0107E6  B4D8               	btfsc	status,2,c
  5426  0107E8  D013               	goto	l14552
  5427  0107EA  ECD1  F0E9         	call	_check_adc_scan	;wreg free
  5428  0107EE  5001               	movf	btemp^0,w,c
  5429  0107F0  B4D8               	btfsc	status,2,c
  5430  0107F2  D00E               	goto	l14552
  5431                           
  5432                           ;main.c: 343:    convert_adc_data();
  5433  0107F4  ECA1  F0D9         	call	_convert_adc_data	;wreg free
  5434                           
  5435                           ;main.c: 347:    clear_adc_scan();
  5436  0107F8  ECE8  F0E9         	call	_clear_adc_scan	;wreg free
  5437                           
  5438                           ; BSR set to: 0
  5439                           ;main.c: 348:    start_adc_scan();
  5440  0107FC  ECF3  F0E0         	call	_start_adc_scan	;wreg free
  5441                           
  5442                           ;main.c: 349:    StartTimer(TMR_ADC, 200);
  5443  010800  0EC8               	movlw	200
  5444  010802  6EE6               	movwf	postinc1,c
  5445  010804  0E00               	movlw	0
  5446  010806  6EE6               	movwf	postinc1,c
  5447  010808  0E01               	movlw	1
  5448  01080A  6EE6               	movwf	postinc1,c
  5449  01080C  EC5C  F0E4         	call	_StartTimer	;wreg free
  5450  010810                     l14552:
  5451                           
  5452                           ;main.c: 356:   if (TimerDone(TMR_DISPLAY)) {
  5453                           
  5454                           ;main.c: 352:   if (V.ticks) {
  5455  010810  0E0A               	movlw	10
  5456  010812  6EE6               	movwf	postinc1,c
  5457  010814  ECCB  F0E6         	call	_TimerDone	;wreg free
  5458  010818  5001               	movf	btemp^0,w,c
  5459  01081A  B4D8               	btfsc	status,2,c
  5460  01081C  EFB4  F088         	goto	l14636
  5461                           
  5462                           ;main.c: 357:    if (TimerDone(TMR_HELPDIS)) {
  5463  010820  0E09               	movlw	9
  5464  010822  6EE6               	movwf	postinc1,c
  5465  010824  ECCB  F0E6         	call	_TimerDone	;wreg free
  5466  010828  5001               	movf	btemp^0,w,c
  5467  01082A  B4D8               	btfsc	status,2,c
  5468  01082C  D004               	goto	l14560
  5469                           
  5470                           ;main.c: 358:     set_display_info(DIS_STR);
  5471  01082E  0E00               	movlw	0
  5472  010830  6EE6               	movwf	postinc1,c
  5473  010832  ECD0  F0E8         	call	_set_display_info	;wreg free
  5474  010836                     l14560:
  5475                           
  5476                           ;main.c: 360:    calc_model_data();
  5477  010836  EC18  F0B1         	call	_calc_model_data	;wreg free
  5478                           
  5479                           ; BSR set to: 57
  5480                           ;main.c: 367:     hid_display(&H);
  5481                           
  5482                           ;main.c: 362:    if (0) {
  5483  01083A  0EC7               	movlw	low _H
  5484  01083C  6EE6               	movwf	postinc1,c
  5485  01083E  0E01               	movlw	high _H
  5486  010840  6EE6               	movwf	postinc1,c
  5487  010842  EC15  F0C4         	call	_hid_display	;wreg free
  5488                           
  5489                           ;main.c: 368:     switch (H.hid_display) {
  5490  010846  EF4A  F088         	goto	l14608
  5491  01084A                     l1373:
  5492                           
  5493                           ; BSR set to: 1
  5494                           ;main.c: 370:      V.calib = 0;
  5495  01084A  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5496                           
  5497                           ; BSR set to: 1
  5498                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  5499  01084C  EE22  F121         	lfsr	2,_C+290	;volatile
  5500  010850  50DF               	movf	indf2,w,c
  5501  010852  A4D8               	btfss	status,2,c
  5502  010854  D002               	goto	l14570
  5503                           
  5504                           ; BSR set to: 1
  5505  010856  0E20               	movlw	32
  5506  010858  D001               	goto	L1
  5507  01085A                     l14570:
  5508                           
  5509                           ; BSR set to: 1
  5510  01085A  0E44               	movlw	68
  5511  01085C                     L1:
  5512  01085C  6E0B               	movwf	(btemp+10)^0,c
  5513  01085E  0E00               	movlw	0
  5514  010860  6E0C               	movwf	(btemp+11)^0,c
  5515                           
  5516                           ;stkvar	_main$3807 @ sp[(-17)+2]
  5517  010862  0EF1               	movlw	-15
  5518  010864  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5519  01086A  0EF2               	movlw	-14
  5520  01086C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5521                           
  5522                           ; BSR set to: 1
  5523  010872  EE22  F07B         	lfsr	2,_C+124	;volatile
  5524  010876  006F FF7B FFE6     	movff	postinc2,postinc1
  5525  01087C  006F FF7B FFE6     	movff	postinc2,postinc1
  5526  010882  006F FF7B FFE6     	movff	postinc2,postinc1
  5527  010888  006F FF7B FFE6     	movff	postinc2,postinc1
  5528                           
  5529                           ;stkvar	_main$3807 @ sp[(-21)+2]
  5530  01088E  0EED               	movlw	-19
  5531  010890  006F FF8F FFE6     	movff	plusw1,postinc1
  5532  010896  006F FF8F FFE6     	movff	plusw1,postinc1
  5533  01089C  0E36               	movlw	low STR_25
  5534  01089E  6EE6               	movwf	postinc1,c
  5535  0108A0  0EFD               	movlw	high STR_25
  5536  0108A2  6EE6               	movwf	postinc1,c
  5537  0108A4  0E00               	movlw	0
  5538  0108A6  6EE6               	movwf	postinc1,c
  5539  0108A8  0E00               	movlw	0
  5540  0108AA  6EE6               	movwf	postinc1,c
  5541  0108AC  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5542  0108B0  0060  F007  FFE6   	movff	btemp,postinc1
  5543  0108B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5544  0108BC  0E0A               	movlw	10
  5545  0108BE  6EE6               	movwf	postinc1,c
  5546  0108C0  EC4D  F0D5         	call	_sprintf	;wreg free
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5550  0108C4  EE22  F073         	lfsr	2,_C+116	;volatile
  5551  0108C8  006F FF7B FFE6     	movff	postinc2,postinc1
  5552  0108CE  006F FF7B FFE6     	movff	postinc2,postinc1
  5553  0108D4  006F FF7B FFE6     	movff	postinc2,postinc1
  5554  0108DA  006F FF7B FFE6     	movff	postinc2,postinc1
  5555  0108E0  0E20               	movlw	low STR_26
  5556  0108E2  6EE6               	movwf	postinc1,c
  5557  0108E4  0EFD               	movlw	high STR_26
  5558  0108E6  6EE6               	movwf	postinc1,c
  5559  0108E8  0E00               	movlw	0
  5560  0108EA  6EE6               	movwf	postinc1,c
  5561  0108EC  0E01               	movlw	1
  5562  0108EE  6EE6               	movwf	postinc1,c
  5563  0108F0  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5564  0108F4  0060  F007  FFE6   	movff	btemp,postinc1
  5565  0108FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5566  010900  0E08               	movlw	8
  5567  010902  6EE6               	movwf	postinc1,c
  5568  010904  EC4D  F0D5         	call	_sprintf	;wreg free
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5572  010908  EE22  F077         	lfsr	2,_C+120	;volatile
  5573  01090C  006F FF7B FFE6     	movff	postinc2,postinc1
  5574  010912  006F FF7B FFE6     	movff	postinc2,postinc1
  5575  010918  006F FF7B FFE6     	movff	postinc2,postinc1
  5576  01091E  006F FF7B FFE6     	movff	postinc2,postinc1
  5577  010924  0E0A               	movlw	low STR_27
  5578  010926  6EE6               	movwf	postinc1,c
  5579  010928  0EFD               	movlw	high STR_27
  5580  01092A  6EE6               	movwf	postinc1,c
  5581  01092C  0E00               	movlw	0
  5582  01092E  6EE6               	movwf	postinc1,c
  5583  010930  0E02               	movlw	2
  5584  010932  6EE6               	movwf	postinc1,c
  5585  010934  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5586  010938  0060  F007  FFE6   	movff	btemp,postinc1
  5587  01093E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5588  010944  0E08               	movlw	8
  5589  010946  6EE6               	movwf	postinc1,c
  5590  010948  EC4D  F0D5         	call	_sprintf	;wreg free
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5594  01094C  EE22  F121         	lfsr	2,_C+290	;volatile
  5595  010950  50DF               	movf	indf2,w,c
  5596  010952  A4D8               	btfss	status,2,c
  5597  010954  D002               	goto	l14582
  5598                           
  5599                           ; BSR set to: 0
  5600  010956  0E20               	movlw	32
  5601  010958  D001               	goto	L2
  5602  01095A                     l14582:
  5603                           
  5604                           ; BSR set to: 0
  5605  01095A  0E44               	movlw	68
  5606  01095C                     L2:
  5607  01095C  6E0B               	movwf	(btemp+10)^0,c
  5608  01095E  0E00               	movlw	0
  5609  010960  6E0C               	movwf	(btemp+11)^0,c
  5610                           
  5611                           ;stkvar	_main$3811 @ sp[(-17)+0]
  5612  010962  0EEF               	movlw	-17
  5613  010964  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5614  01096A  0EF0               	movlw	-16
  5615  01096C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5616                           
  5617                           ; BSR set to: 0
  5618  010972  EE22  F0A7         	lfsr	2,_C+168	;volatile
  5619  010976  006F FF7B FFE6     	movff	postinc2,postinc1
  5620  01097C  006F FF7B FFE6     	movff	postinc2,postinc1
  5621  010982  006F FF7B FFE6     	movff	postinc2,postinc1
  5622  010988  006F FF7B FFE6     	movff	postinc2,postinc1
  5623                           
  5624                           ;stkvar	_main$3811 @ sp[(-21)+0]
  5625  01098E  0EEB               	movlw	-21
  5626  010990  006F FF8F FFE6     	movff	plusw1,postinc1
  5627  010996  006F FF8F FFE6     	movff	plusw1,postinc1
  5628  01099C  0EF4               	movlw	low STR_28
  5629  01099E  6EE6               	movwf	postinc1,c
  5630  0109A0  0EFC               	movlw	high STR_28
  5631  0109A2  6EE6               	movwf	postinc1,c
  5632  0109A4  0E01               	movlw	1
  5633  0109A6  6EE6               	movwf	postinc1,c
  5634  0109A8  0E00               	movlw	0
  5635  0109AA  6EE6               	movwf	postinc1,c
  5636  0109AC  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5637  0109B0  0060  F007  FFE6   	movff	btemp,postinc1
  5638  0109B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5639  0109BC  0E0A               	movlw	10
  5640  0109BE  6EE6               	movwf	postinc1,c
  5641  0109C0  EC4D  F0D5         	call	_sprintf	;wreg free
  5642                           
  5643                           ; BSR set to: 0
  5644                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5645  0109C4  EE22  F0AF         	lfsr	2,_C+176	;volatile
  5646  0109C8  006F FF7B FFE6     	movff	postinc2,postinc1
  5647  0109CE  006F FF7B FFE6     	movff	postinc2,postinc1
  5648  0109D4  006F FF7B FFE6     	movff	postinc2,postinc1
  5649  0109DA  006F FF7B FFE6     	movff	postinc2,postinc1
  5650  0109E0  0EDE               	movlw	low STR_29
  5651  0109E2  6EE6               	movwf	postinc1,c
  5652  0109E4  0EFC               	movlw	high STR_29
  5653  0109E6  6EE6               	movwf	postinc1,c
  5654  0109E8  0E01               	movlw	1
  5655  0109EA  6EE6               	movwf	postinc1,c
  5656  0109EC  0E01               	movlw	1
  5657  0109EE  6EE6               	movwf	postinc1,c
  5658  0109F0  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5659  0109F4  0060  F007  FFE6   	movff	btemp,postinc1
  5660  0109FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5661  010A00  0E08               	movlw	8
  5662  010A02  6EE6               	movwf	postinc1,c
  5663  010A04  EC4D  F0D5         	call	_sprintf	;wreg free
  5664                           
  5665                           ; BSR set to: 0
  5666                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5667  010A08  EE22  F0AB         	lfsr	2,_C+172	;volatile
  5668  010A0C  006F FF7B FFE6     	movff	postinc2,postinc1
  5669  010A12  006F FF7B FFE6     	movff	postinc2,postinc1
  5670  010A18  006F FF7B FFE6     	movff	postinc2,postinc1
  5671  010A1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5672  010A24  0EC8               	movlw	low STR_30
  5673  010A26  6EE6               	movwf	postinc1,c
  5674  010A28  0EFC               	movlw	high STR_30
  5675  010A2A  6EE6               	movwf	postinc1,c
  5676  010A2C  0E01               	movlw	1
  5677  010A2E  6EE6               	movwf	postinc1,c
  5678  010A30  0E02               	movlw	2
  5679  010A32  6EE6               	movwf	postinc1,c
  5680  010A34  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5681  010A38  0060  F007  FFE6   	movff	btemp,postinc1
  5682  010A3E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5683  010A44  0E08               	movlw	8
  5684  010A46  6EE6               	movwf	postinc1,c
  5685  010A48  EC4D  F0D5         	call	_sprintf	;wreg free
  5686                           
  5687                           ;main.c: 378:      break;
  5688  010A4C  D339               	goto	l14610
  5689  010A4E                     l1383:
  5690                           
  5691                           ; BSR set to: 1
  5692                           ;main.c: 380:      V.calib = 0;
  5693  010A4E  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5694                           
  5695                           ; BSR set to: 1
  5696                           ;main.c: 381:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5697  010A50  EE22  F003         	lfsr	2,_C+4	;volatile
  5698  010A54  006F FF7B FFE6     	movff	postinc2,postinc1
  5699  010A5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5700  010A60  006F FF7B FFE6     	movff	postinc2,postinc1
  5701  010A66  006F FF7B FFE6     	movff	postinc2,postinc1
  5702  010A6C  EE22  F013         	lfsr	2,_C+20	;volatile
  5703  010A70  006F FF7B FFE6     	movff	postinc2,postinc1
  5704  010A76  006F FF7B FFE6     	movff	postinc2,postinc1
  5705  010A7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5706  010A82  006F FF7B FFE6     	movff	postinc2,postinc1
  5707  010A88  0E8E               	movlw	low STR_31
  5708  010A8A  6EE6               	movwf	postinc1,c
  5709  010A8C  0EFD               	movlw	high STR_31
  5710  010A8E  6EE6               	movwf	postinc1,c
  5711  010A90  0E00               	movlw	0
  5712  010A92  6EE6               	movwf	postinc1,c
  5713  010A94  0E00               	movlw	0
  5714  010A96  6EE6               	movwf	postinc1,c
  5715  010A98  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5716  010A9C  0060  F007  FFE6   	movff	btemp,postinc1
  5717  010AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5718  010AA8  0E0C               	movlw	12
  5719  010AAA  6EE6               	movwf	postinc1,c
  5720  010AAC  EC4D  F0D5         	call	_sprintf	;wreg free
  5721                           
  5722                           ;main.c: 382:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5723  010AB0  EE21  F3FF         	lfsr	2,_C
  5724  010AB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5725  010ABA  006F FF7B FFE6     	movff	postinc2,postinc1
  5726  010AC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5727  010AC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5728  010ACC  EE22  F00F         	lfsr	2,_C+16	;volatile
  5729  010AD0  006F FF7B FFE6     	movff	postinc2,postinc1
  5730  010AD6  006F FF7B FFE6     	movff	postinc2,postinc1
  5731  010ADC  006F FF7B FFE6     	movff	postinc2,postinc1
  5732  010AE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5733  010AE8  0E62               	movlw	low STR_32
  5734  010AEA  6EE6               	movwf	postinc1,c
  5735  010AEC  0EFD               	movlw	high STR_32
  5736  010AEE  6EE6               	movwf	postinc1,c
  5737  010AF0  0E00               	movlw	0
  5738  010AF2  6EE6               	movwf	postinc1,c
  5739  010AF4  0E01               	movlw	1
  5740  010AF6  6EE6               	movwf	postinc1,c
  5741  010AF8  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5742  010AFC  0060  F007  FFE6   	movff	btemp,postinc1
  5743  010B02  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5744  010B08  0E0C               	movlw	12
  5745  010B0A  6EE6               	movwf	postinc1,c
  5746  010B0C  EC4D  F0D5         	call	_sprintf	;wreg free
  5747                           
  5748                           ;main.c: 383:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5749  010B10  EE22  F03F         	lfsr	2,_C+64	;volatile
  5750  010B14  006F FF7B FFE6     	movff	postinc2,postinc1
  5751  010B1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5752  010B20  006F FF7B FFE6     	movff	postinc2,postinc1
  5753  010B26  006F FF7B FFE6     	movff	postinc2,postinc1
  5754  010B2C  EE22  F007         	lfsr	2,_C+8	;volatile
  5755  010B30  006F FF7B FFE6     	movff	postinc2,postinc1
  5756  010B36  006F FF7B FFE6     	movff	postinc2,postinc1
  5757  010B3C  006F FF7B FFE6     	movff	postinc2,postinc1
  5758  010B42  006F FF7B FFE6     	movff	postinc2,postinc1
  5759  010B48  0E78               	movlw	low STR_33
  5760  010B4A  6EE6               	movwf	postinc1,c
  5761  010B4C  0EFD               	movlw	high STR_33
  5762  010B4E  6EE6               	movwf	postinc1,c
  5763  010B50  0E00               	movlw	0
  5764  010B52  6EE6               	movwf	postinc1,c
  5765  010B54  0E02               	movlw	2
  5766  010B56  6EE6               	movwf	postinc1,c
  5767  010B58  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5768  010B5C  0060  F007  FFE6   	movff	btemp,postinc1
  5769  010B62  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5770  010B68  0E0C               	movlw	12
  5771  010B6A  6EE6               	movwf	postinc1,c
  5772  010B6C  EC4D  F0D5         	call	_sprintf	;wreg free
  5773                           
  5774                           ;main.c: 385:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5775  010B70  EE22  F09F         	lfsr	2,_C+160	;volatile
  5776  010B74  006F FF7B FFE6     	movff	postinc2,postinc1
  5777  010B7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5778  010B80  006F FF7B FFE6     	movff	postinc2,postinc1
  5779  010B86  006F FF7B FFE6     	movff	postinc2,postinc1
  5780  010B8C  0E86               	movlw	low STR_34
  5781  010B8E  6EE6               	movwf	postinc1,c
  5782  010B90  0EFC               	movlw	high STR_34
  5783  010B92  6EE6               	movwf	postinc1,c
  5784  010B94  0E01               	movlw	1
  5785  010B96  6EE6               	movwf	postinc1,c
  5786  010B98  0E00               	movlw	0
  5787  010B9A  6EE6               	movwf	postinc1,c
  5788  010B9C  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5789  010BA0  0060  F007  FFE6   	movff	btemp,postinc1
  5790  010BA6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5791  010BAC  0E08               	movlw	8
  5792  010BAE  6EE6               	movwf	postinc1,c
  5793  010BB0  EC4D  F0D5         	call	_sprintf	;wreg free
  5794                           
  5795                           ;main.c: 386:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5796  010BB4  EE22  F0A3         	lfsr	2,_C+164	;volatile
  5797  010BB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5798  010BBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5799  010BC4  006F FF7B FFE6     	movff	postinc2,postinc1
  5800  010BCA  006F FF7B FFE6     	movff	postinc2,postinc1
  5801  010BD0  0E9C               	movlw	low STR_35
  5802  010BD2  6EE6               	movwf	postinc1,c
  5803  010BD4  0EFC               	movlw	high STR_35
  5804  010BD6  6EE6               	movwf	postinc1,c
  5805  010BD8  0E01               	movlw	1
  5806  010BDA  6EE6               	movwf	postinc1,c
  5807  010BDC  0E01               	movlw	1
  5808  010BDE  6EE6               	movwf	postinc1,c
  5809  010BE0  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5810  010BE4  0060  F007  FFE6   	movff	btemp,postinc1
  5811  010BEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5812  010BF0  0E08               	movlw	8
  5813  010BF2  6EE6               	movwf	postinc1,c
  5814  010BF4  EC4D  F0D5         	call	_sprintf	;wreg free
  5815                           
  5816                           ;main.c: 387:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5817  010BF8  EE22  F0A3         	lfsr	2,_C+164	;volatile
  5818  010BFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5819  010C02  006F FF7B FFE6     	movff	postinc2,postinc1
  5820  010C08  006F FF7B FFE6     	movff	postinc2,postinc1
  5821  010C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5822  010C14  EE22  F09F         	lfsr	2,_C+160	;volatile
  5823  010C18  006F FF7B FFE6     	movff	postinc2,postinc1
  5824  010C1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5825  010C24  006F FF7B FFE6     	movff	postinc2,postinc1
  5826  010C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5827  010C30  EC83  F0A3         	call	___fladd	;wreg free
  5828  010C34  0060  F007  FFE6   	movff	btemp,postinc1
  5829  010C3A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5830  010C40  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5831  010C46  0060  F013  FFE6   	movff	btemp+3,postinc1
  5832  010C4C  0EB2               	movlw	low STR_36
  5833  010C4E  6EE6               	movwf	postinc1,c
  5834  010C50  0EFC               	movlw	high STR_36
  5835  010C52  6EE6               	movwf	postinc1,c
  5836  010C54  0E01               	movlw	1
  5837  010C56  6EE6               	movwf	postinc1,c
  5838  010C58  0E02               	movlw	2
  5839  010C5A  6EE6               	movwf	postinc1,c
  5840  010C5C  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5841  010C60  0060  F007  FFE6   	movff	btemp,postinc1
  5842  010C66  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5843  010C6C  0E08               	movlw	8
  5844  010C6E  6EE6               	movwf	postinc1,c
  5845  010C70  EC4D  F0D5         	call	_sprintf	;wreg free
  5846                           
  5847                           ;main.c: 388:      break;
  5848  010C74  D225               	goto	l14610
  5849  010C76                     l1384:
  5850                           
  5851                           ; BSR set to: 1
  5852                           ;main.c: 390:      V.calib = 0;
  5853  010C76  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5854                           
  5855                           ; BSR set to: 1
  5856                           ;main.c: 391:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5857  010C78  EE22  F07F         	lfsr	2,_C+128	;volatile
  5858  010C7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5859  010C82  006F FF7B FFE6     	movff	postinc2,postinc1
  5860  010C88  006F FF7B FFE6     	movff	postinc2,postinc1
  5861  010C8E  006F FF7B FFE6     	movff	postinc2,postinc1
  5862  010C94  0EE8               	movlw	low STR_37
  5863  010C96  6EE6               	movwf	postinc1,c
  5864  010C98  0EFB               	movlw	high STR_37
  5865  010C9A  6EE6               	movwf	postinc1,c
  5866  010C9C  0E00               	movlw	0
  5867  010C9E  6EE6               	movwf	postinc1,c
  5868  010CA0  0E00               	movlw	0
  5869  010CA2  6EE6               	movwf	postinc1,c
  5870  010CA4  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5871  010CA8  0060  F007  FFE6   	movff	btemp,postinc1
  5872  010CAE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5873  010CB4  0E08               	movlw	8
  5874  010CB6  6EE6               	movwf	postinc1,c
  5875  010CB8  EC4D  F0D5         	call	_sprintf	;wreg free
  5876                           
  5877                           ;main.c: 392:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5878  010CBC  EE22  F093         	lfsr	2,_C+148	;volatile
  5879  010CC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5880  010CC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5881  010CCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5882  010CD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5883  010CD8  EE22  F08F         	lfsr	2,_C+144	;volatile
  5884  010CDC  006F FF7B FFE6     	movff	postinc2,postinc1
  5885  010CE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5886  010CE8  006F FF7B FFE6     	movff	postinc2,postinc1
  5887  010CEE  006F FF7B FFE6     	movff	postinc2,postinc1
  5888  010CF4  0E2D               	movlw	low STR_38
  5889  010CF6  6EE6               	movwf	postinc1,c
  5890  010CF8  0EFC               	movlw	high STR_38
  5891  010CFA  6EE6               	movwf	postinc1,c
  5892  010CFC  0E00               	movlw	0
  5893  010CFE  6EE6               	movwf	postinc1,c
  5894  010D00  0E01               	movlw	1
  5895  010D02  6EE6               	movwf	postinc1,c
  5896  010D04  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5897  010D08  0060  F007  FFE6   	movff	btemp,postinc1
  5898  010D0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5899  010D14  0E0C               	movlw	12
  5900  010D16  6EE6               	movwf	postinc1,c
  5901  010D18  EC4D  F0D5         	call	_sprintf	;wreg free
  5902                           
  5903                           ;main.c: 393:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  5904  010D1C  EE22  F00F         	lfsr	2,_C+16	;volatile
  5905  010D20  006F FF7B FFE6     	movff	postinc2,postinc1
  5906  010D26  006F FF7B FFE6     	movff	postinc2,postinc1
  5907  010D2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5908  010D32  006F FF7B FFE6     	movff	postinc2,postinc1
  5909  010D38  EE22  F0B3         	lfsr	2,_C+180	;volatile
  5910  010D3C  006F FF78  F00B    	movff	postinc2,btemp+10
  5911  010D42  006F FF74  F00C    	movff	postdec2,btemp+11
  5912  010D48  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5913  010D4E  0060  F033  FFE6   	movff	btemp+11,postinc1
  5914  010D54  EE22  F0B5         	lfsr	2,_C+182	;volatile
  5915  010D58  006F FF78  F00B    	movff	postinc2,btemp+10
  5916  010D5E  006F FF74  F00C    	movff	postdec2,btemp+11
  5917  010D64  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5918  010D6A  0060  F033  FFE6   	movff	btemp+11,postinc1
  5919  010D70  0E00               	movlw	0
  5920  010D72  6EE6               	movwf	postinc1,c
  5921  010D74  0E05               	movlw	5
  5922  010D76  6EE6               	movwf	postinc1,c
  5923  010D78  ECD2  F0D5         	call	_spinners	;wreg free
  5924  010D7C  5001               	movf	btemp^0,w,c
  5925  010D7E  6EE6               	movwf	postinc1,c
  5926  010D80  0E00               	movlw	0
  5927  010D82  6EE6               	movwf	postinc1,c
  5928  010D84  0E4E               	movlw	low STR_39
  5929  010D86  6EE6               	movwf	postinc1,c
  5930  010D88  0EFB               	movlw	high STR_39
  5931  010D8A  6EE6               	movwf	postinc1,c
  5932  010D8C  0E00               	movlw	0
  5933  010D8E  6EE6               	movwf	postinc1,c
  5934  010D90  0E02               	movlw	2
  5935  010D92  6EE6               	movwf	postinc1,c
  5936  010D94  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5937  010D98  0060  F007  FFE6   	movff	btemp,postinc1
  5938  010D9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5939  010DA4  0E0E               	movlw	14
  5940  010DA6  6EE6               	movwf	postinc1,c
  5941  010DA8  EC4D  F0D5         	call	_sprintf	;wreg free
  5942                           
  5943                           ;main.c: 395:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5944  010DAC  EE22  F087         	lfsr	2,_C+136	;volatile
  5945  010DB0  006F FF7B FFE6     	movff	postinc2,postinc1
  5946  010DB6  006F FF7B FFE6     	movff	postinc2,postinc1
  5947  010DBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5948  010DC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5949  010DC8  0ED1               	movlw	low STR_40
  5950  010DCA  6EE6               	movwf	postinc1,c
  5951  010DCC  0EFB               	movlw	high STR_40
  5952  010DCE  6EE6               	movwf	postinc1,c
  5953  010DD0  0E01               	movlw	1
  5954  010DD2  6EE6               	movwf	postinc1,c
  5955  010DD4  0E00               	movlw	0
  5956  010DD6  6EE6               	movwf	postinc1,c
  5957  010DD8  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5958  010DDC  0060  F007  FFE6   	movff	btemp,postinc1
  5959  010DE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5960  010DE8  0E08               	movlw	8
  5961  010DEA  6EE6               	movwf	postinc1,c
  5962  010DEC  EC4D  F0D5         	call	_sprintf	;wreg free
  5963                           
  5964                           ;main.c: 396:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5965  010DF0  EE22  F10D         	lfsr	2,_C+270	;volatile
  5966  010DF4  006F FF7B FFE6     	movff	postinc2,postinc1
  5967  010DFA  006F FF7B FFE6     	movff	postinc2,postinc1
  5968  010E00  006F FF7B FFE6     	movff	postinc2,postinc1
  5969  010E06  006F FF7B FFE6     	movff	postinc2,postinc1
  5970  010E0C  EE22  F119         	lfsr	2,_C+282	;volatile
  5971  010E10  006F FF7B FFE6     	movff	postinc2,postinc1
  5972  010E16  006F FF7B FFE6     	movff	postinc2,postinc1
  5973  010E1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5974  010E22  006F FF7B FFE6     	movff	postinc2,postinc1
  5975  010E28  0EFF               	movlw	low STR_41
  5976  010E2A  6EE6               	movwf	postinc1,c
  5977  010E2C  0EFB               	movlw	high STR_41
  5978  010E2E  6EE6               	movwf	postinc1,c
  5979  010E30  0E01               	movlw	1
  5980  010E32  6EE6               	movwf	postinc1,c
  5981  010E34  0E01               	movlw	1
  5982  010E36  6EE6               	movwf	postinc1,c
  5983  010E38  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  5984  010E3C  0060  F007  FFE6   	movff	btemp,postinc1
  5985  010E42  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5986  010E48  0E0C               	movlw	12
  5987  010E4A  6EE6               	movwf	postinc1,c
  5988  010E4C  EC4D  F0D5         	call	_sprintf	;wreg free
  5989                           
  5990                           ;main.c: 397:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5991  010E50  EE22  F111         	lfsr	2,_C+274	;volatile
  5992  010E54  006F FF7B FFE6     	movff	postinc2,postinc1
  5993  010E5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5994  010E60  006F FF7B FFE6     	movff	postinc2,postinc1
  5995  010E66  006F FF7B FFE6     	movff	postinc2,postinc1
  5996  010E6C  EE22  F11D         	lfsr	2,_C+286	;volatile
  5997  010E70  006F FF7B FFE6     	movff	postinc2,postinc1
  5998  010E76  006F FF7B FFE6     	movff	postinc2,postinc1
  5999  010E7C  006F FF7B FFE6     	movff	postinc2,postinc1
  6000  010E82  006F FF7B FFE6     	movff	postinc2,postinc1
  6001  010E88  0E16               	movlw	low STR_42
  6002  010E8A  6EE6               	movwf	postinc1,c
  6003  010E8C  0EFC               	movlw	high STR_42
  6004  010E8E  6EE6               	movwf	postinc1,c
  6005  010E90  0E01               	movlw	1
  6006  010E92  6EE6               	movwf	postinc1,c
  6007  010E94  0E02               	movlw	2
  6008  010E96  6EE6               	movwf	postinc1,c
  6009  010E98  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  6010  010E9C  0060  F007  FFE6   	movff	btemp,postinc1
  6011  010EA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6012  010EA8  0E0C               	movlw	12
  6013  010EAA  6EE6               	movwf	postinc1,c
  6014  010EAC  EC4D  F0D5         	call	_sprintf	;wreg free
  6015                           
  6016                           ;main.c: 398:      break;
  6017  010EB0  D107               	goto	l14610
  6018  010EB2                     l14594:
  6019                           
  6020                           ; BSR set to: 1
  6021                           ;main.c: 400:      if (!V.calib) {
  6022  010EB2  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  6023  010EB4  A4D8               	btfss	status,2,c
  6024  010EB6  D02D               	goto	l14598
  6025                           
  6026                           ; BSR set to: 1
  6027                           ;main.c: 401:       lp_filter(0.0, i, -1);
  6028  010EB8  0EFF               	movlw	255
  6029  010EBA  6EE6               	movwf	postinc1,c
  6030                           
  6031                           ;stkvar	_i @ sp[(-18)+14]
  6032  010EBC  0EFC               	movlw	-4
  6033  010EBE  50E3               	movf	plusw1,w,c
  6034  010EC0  6EE6               	movwf	postinc1,c
  6035  010EC2  0E00               	movlw	0
  6036  010EC4  6EE6               	movwf	postinc1,c
  6037  010EC6  0E00               	movlw	0
  6038  010EC8  6EE6               	movwf	postinc1,c
  6039  010ECA  0E00               	movlw	0
  6040  010ECC  6EE6               	movwf	postinc1,c
  6041  010ECE  0E00               	movlw	0
  6042  010ED0  6EE6               	movwf	postinc1,c
  6043  010ED2  EC0F  F0C8         	call	_lp_filter	;wreg free
  6044                           
  6045                           ;main.c: 402:       lp_filter(0.0, j, -1);
  6046  010ED6  0EFF               	movlw	255
  6047  010ED8  6EE6               	movwf	postinc1,c
  6048                           
  6049                           ;stkvar	_j @ sp[(-18)+13]
  6050  010EDA  0EFB               	movlw	-5
  6051  010EDC  50E3               	movf	plusw1,w,c
  6052  010EDE  6EE6               	movwf	postinc1,c
  6053  010EE0  0E00               	movlw	0
  6054  010EE2  6EE6               	movwf	postinc1,c
  6055  010EE4  0E00               	movlw	0
  6056  010EE6  6EE6               	movwf	postinc1,c
  6057  010EE8  0E00               	movlw	0
  6058  010EEA  6EE6               	movwf	postinc1,c
  6059  010EEC  0E00               	movlw	0
  6060  010EEE  6EE6               	movwf	postinc1,c
  6061  010EF0  EC0F  F0C8         	call	_lp_filter	;wreg free
  6062                           
  6063                           ;main.c: 403:       lp_filter(0.0, k, -1);
  6064  010EF4  0EFF               	movlw	255
  6065  010EF6  6EE6               	movwf	postinc1,c
  6066                           
  6067                           ;stkvar	_k @ sp[(-18)+12]
  6068  010EF8  0EFA               	movlw	-6
  6069  010EFA  50E3               	movf	plusw1,w,c
  6070  010EFC  6EE6               	movwf	postinc1,c
  6071  010EFE  0E00               	movlw	0
  6072  010F00  6EE6               	movwf	postinc1,c
  6073  010F02  0E00               	movlw	0
  6074  010F04  6EE6               	movwf	postinc1,c
  6075  010F06  0E00               	movlw	0
  6076  010F08  6EE6               	movwf	postinc1,c
  6077  010F0A  0E00               	movlw	0
  6078  010F0C  6EE6               	movwf	postinc1,c
  6079  010F0E  EC0F  F0C8         	call	_lp_filter	;wreg free
  6080  010F12                     l14598:
  6081                           
  6082                           ;main.c: 405:      V.calib = 1;
  6083  010F12  0E01               	movlw	1
  6084  010F14  0101               	movlb	1	; () banked
  6085  010F16  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  6086                           
  6087                           ; BSR set to: 1
  6088                           ;main.c: 406:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  6089                           ;stkvar	_inp_index @ sp[(-17)+11]
  6090  010F18  0EFA               	movlw	-6
  6091  010F1A  50E3               	movf	plusw1,w,c
  6092  010F1C  6EE6               	movwf	postinc1,c
  6093  010F1E  0E00               	movlw	0
  6094  010F20  6EE6               	movwf	postinc1,c
  6095                           
  6096                           ;stkvar	_i @ sp[(-19)+14]
  6097  010F22  0EFB               	movlw	-5
  6098  010F24  50E3               	movf	plusw1,w,c
  6099  010F26  0D04               	mullw	4
  6100  010F28  0EFF               	movlw	low _C
  6101  010F2A  24F3               	addwf	243,w,c
  6102  010F2C  6ED9               	movwf	fsr2l,c
  6103  010F2E  0E07               	movlw	high _C
  6104  010F30  20F4               	addwfc	prodh,w,c
  6105  010F32  6EDA               	movwf	fsr2h,c
  6106  010F34  006F FF7B FFE6     	movff	postinc2,postinc1
  6107  010F3A  006F FF7B FFE6     	movff	postinc2,postinc1
  6108  010F40  006F FF7B FFE6     	movff	postinc2,postinc1
  6109  010F46  006F FF7B FFE6     	movff	postinc2,postinc1
  6110                           
  6111                           ;stkvar	_i @ sp[(-23)+14]
  6112  010F4C  0EF7               	movlw	-9
  6113  010F4E  50E3               	movf	plusw1,w,c
  6114  010F50  6EE6               	movwf	postinc1,c
  6115  010F52  ECDF  F0E8         	call	_get_raw_result	;wreg free
  6116  010F56  0060  F007  FFE6   	movff	btemp,postinc1
  6117  010F5C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6118  010F62  0EA4               	movlw	low STR_43
  6119  010F64  6EE6               	movwf	postinc1,c
  6120  010F66  0EFD               	movlw	high STR_43
  6121  010F68  6EE6               	movwf	postinc1,c
  6122  010F6A  0E00               	movlw	0
  6123  010F6C  6EE6               	movwf	postinc1,c
  6124  010F6E  0E00               	movlw	0
  6125  010F70  6EE6               	movwf	postinc1,c
  6126  010F72  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  6127  010F76  0060  F007  FFE6   	movff	btemp,postinc1
  6128  010F7C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6129  010F82  0E0C               	movlw	12
  6130  010F84  6EE6               	movwf	postinc1,c
  6131  010F86  EC4D  F0D5         	call	_sprintf	;wreg free
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;main.c: 407:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  6135                           ;stkvar	_inp_index @ sp[(-17)+11]
  6136  010F8A  0EFA               	movlw	-6
  6137  010F8C  50E3               	movf	plusw1,w,c
  6138  010F8E  6E0B               	movwf	(btemp+10)^0,c
  6139  010F90  6A0C               	clrf	(btemp+11)^0,c
  6140  010F92  0E01               	movlw	1
  6141  010F94  260B               	addwf	(btemp+10)^0,f,c
  6142  010F96  0E00               	movlw	0
  6143  010F98  220C               	addwfc	(btemp+11)^0,f,c
  6144  010F9A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6145  010FA0  0060  F033  FFE6   	movff	btemp+11,postinc1
  6146                           
  6147                           ;stkvar	_j @ sp[(-19)+13]
  6148  010FA6  0EFA               	movlw	-6
  6149  010FA8  50E3               	movf	plusw1,w,c
  6150  010FAA  0D04               	mullw	4
  6151  010FAC  0EFF               	movlw	low _C
  6152  010FAE  24F3               	addwf	243,w,c
  6153  010FB0  6ED9               	movwf	fsr2l,c
  6154  010FB2  0E07               	movlw	high _C
  6155  010FB4  20F4               	addwfc	prodh,w,c
  6156  010FB6  6EDA               	movwf	fsr2h,c
  6157  010FB8  006F FF7B FFE6     	movff	postinc2,postinc1
  6158  010FBE  006F FF7B FFE6     	movff	postinc2,postinc1
  6159  010FC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6160  010FCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6161                           
  6162                           ;stkvar	_j @ sp[(-23)+13]
  6163  010FD0  0EF6               	movlw	-10
  6164  010FD2  50E3               	movf	plusw1,w,c
  6165  010FD4  6EE6               	movwf	postinc1,c
  6166  010FD6  ECDF  F0E8         	call	_get_raw_result	;wreg free
  6167  010FDA  0060  F007  FFE6   	movff	btemp,postinc1
  6168  010FE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6169  010FE6  0EA4               	movlw	low STR_43
  6170  010FE8  6EE6               	movwf	postinc1,c
  6171  010FEA  0EFD               	movlw	high STR_43
  6172  010FEC  6EE6               	movwf	postinc1,c
  6173  010FEE  0E00               	movlw	0
  6174  010FF0  6EE6               	movwf	postinc1,c
  6175  010FF2  0E01               	movlw	1
  6176  010FF4  6EE6               	movwf	postinc1,c
  6177  010FF6  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  6178  010FFA  0060  F007  FFE6   	movff	btemp,postinc1
  6179  011000  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6180  011006  0E0C               	movlw	12
  6181  011008  6EE6               	movwf	postinc1,c
  6182  01100A  EC4D  F0D5         	call	_sprintf	;wreg free
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;main.c: 408:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  6186                           ;stkvar	_inp_index @ sp[(-17)+11]
  6187  01100E  0EFA               	movlw	-6
  6188  011010  50E3               	movf	plusw1,w,c
  6189  011012  6E0B               	movwf	(btemp+10)^0,c
  6190  011014  6A0C               	clrf	(btemp+11)^0,c
  6191  011016  0E02               	movlw	2
  6192  011018  260B               	addwf	(btemp+10)^0,f,c
  6193  01101A  0E00               	movlw	0
  6194  01101C  220C               	addwfc	(btemp+11)^0,f,c
  6195  01101E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6196  011024  0060  F033  FFE6   	movff	btemp+11,postinc1
  6197                           
  6198                           ;stkvar	_k @ sp[(-19)+12]
  6199  01102A  0EF9               	movlw	-7
  6200  01102C  50E3               	movf	plusw1,w,c
  6201  01102E  0D04               	mullw	4
  6202  011030  0EFF               	movlw	low _C
  6203  011032  24F3               	addwf	243,w,c
  6204  011034  6ED9               	movwf	fsr2l,c
  6205  011036  0E07               	movlw	high _C
  6206  011038  20F4               	addwfc	prodh,w,c
  6207  01103A  6EDA               	movwf	fsr2h,c
  6208  01103C  006F FF7B FFE6     	movff	postinc2,postinc1
  6209  011042  006F FF7B FFE6     	movff	postinc2,postinc1
  6210  011048  006F FF7B FFE6     	movff	postinc2,postinc1
  6211  01104E  006F FF7B FFE6     	movff	postinc2,postinc1
  6212                           
  6213                           ;stkvar	_k @ sp[(-23)+12]
  6214  011054  0EF5               	movlw	-11
  6215  011056  50E3               	movf	plusw1,w,c
  6216  011058  6EE6               	movwf	postinc1,c
  6217  01105A  ECDF  F0E8         	call	_get_raw_result	;wreg free
  6218  01105E  0060  F007  FFE6   	movff	btemp,postinc1
  6219  011064  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6220  01106A  0EA4               	movlw	low STR_43
  6221  01106C  6EE6               	movwf	postinc1,c
  6222  01106E  0EFD               	movlw	high STR_43
  6223  011070  6EE6               	movwf	postinc1,c
  6224  011072  0E00               	movlw	0
  6225  011074  6EE6               	movwf	postinc1,c
  6226  011076  0E02               	movlw	2
  6227  011078  6EE6               	movwf	postinc1,c
  6228  01107A  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
  6229  01107E  0060  F007  FFE6   	movff	btemp,postinc1
  6230  011084  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6231  01108A  0E0C               	movlw	12
  6232  01108C  6EE6               	movwf	postinc1,c
  6233  01108E  EC4D  F0D5         	call	_sprintf	;wreg free
  6234                           
  6235                           ;main.c: 409:      break;
  6236  011092  D016               	goto	l14610
  6237  011094                     l14608:
  6238  011094  0101               	movlb	1	; () banked
  6239  011096  51C7               	movf	_H& (0+255),w,b
  6240  011098  6E0B               	movwf	(btemp+10)^0,c
  6241  01109A  6A0C               	clrf	(btemp+11)^0,c
  6242                           
  6243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6244                           ; Switch size 1, requested type "simple"
  6245                           ; Number of cases is 1, Range of values is 0 to 0
  6246                           ; switch strategies available:
  6247                           ; Name         Instructions Cycles
  6248                           ; simple_byte            4     3 (average)
  6249                           ;	Chosen strategy is simple_byte
  6250  01109C  500C               	movf	(btemp+11)^0,w,c
  6251  01109E  0A00               	xorlw	0	; case 0
  6252  0110A0  A4D8               	btfss	status,2,c
  6253  0110A2  D00E               	goto	l14610
  6254                           
  6255                           ; BSR set to: 1
  6256                           ; Switch size 1, requested type "simple"
  6257                           ; Number of cases is 4, Range of values is 0 to 3
  6258                           ; switch strategies available:
  6259                           ; Name         Instructions Cycles
  6260                           ; simple_byte           13     7 (average)
  6261                           ;	Chosen strategy is simple_byte
  6262  0110A4  500B               	movf	(btemp+10)^0,w,c
  6263  0110A6  0A00               	xorlw	0	; case 0
  6264  0110A8  B4D8               	btfsc	status,2,c
  6265  0110AA  D4D1               	goto	l1383
  6266  0110AC  0A01               	xorlw	1	; case 1
  6267  0110AE  B4D8               	btfsc	status,2,c
  6268  0110B0  EF25  F084         	goto	l1373
  6269  0110B4  0A03               	xorlw	3	; case 2
  6270  0110B6  B4D8               	btfsc	status,2,c
  6271  0110B8  D5DE               	goto	l1384
  6272  0110BA  0A01               	xorlw	1	; case 3
  6273  0110BC  B4D8               	btfsc	status,2,c
  6274  0110BE  D6F9               	goto	l14594
  6275  0110C0                     l14610:
  6276                           
  6277                           ;main.c: 413:     clear_hid_pflags(&H);
  6278  0110C0  0EC7               	movlw	low _H
  6279  0110C2  6EE6               	movwf	postinc1,c
  6280  0110C4  0E01               	movlw	high _H
  6281  0110C6  6EE6               	movwf	postinc1,c
  6282  0110C8  EC8D  F0E0         	call	_clear_hid_pflags	;wreg free
  6283                           
  6284                           ;main.c: 415:    StartTimer(TMR_DISPLAY, 250);
  6285  0110CC  0EFA               	movlw	250
  6286  0110CE  6EE6               	movwf	postinc1,c
  6287  0110D0  0E00               	movlw	0
  6288  0110D2  6EE6               	movwf	postinc1,c
  6289  0110D4  0E0A               	movlw	10
  6290  0110D6  6EE6               	movwf	postinc1,c
  6291  0110D8  EC5C  F0E4         	call	_StartTimer	;wreg free
  6292                           
  6293                           ;main.c: 416:    V.enter = check_enter_button(&H);
  6294  0110DC  0EC7               	movlw	low _H
  6295  0110DE  6EE6               	movwf	postinc1,c
  6296  0110E0  0E01               	movlw	high _H
  6297  0110E2  6EE6               	movwf	postinc1,c
  6298  0110E4  EC80  F0DF         	call	_check_enter_button	;wreg free
  6299  0110E8  5001               	movf	btemp^0,w,c
  6300  0110EA  0101               	movlb	1	; () banked
  6301  0110EC  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  6302                           
  6303                           ; BSR set to: 1
  6304                           ;main.c: 417:    if (V.enter && (H.hid_display != HID_AUX)) {
  6305  0110EE  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6306  0110F0  B4D8               	btfsc	status,2,c
  6307  0110F2  D011               	goto	l14624
  6308                           
  6309                           ; BSR set to: 1
  6310  0110F4  0E03               	movlw	3
  6311  0110F6  19C7               	xorwf	_H& (0+255),w,b
  6312  0110F8  B4D8               	btfsc	status,2,c
  6313  0110FA  D00D               	goto	l14624
  6314                           
  6315                           ; BSR set to: 1
  6316                           ;main.c: 418:     V.enter = 0;
  6317  0110FC  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6318                           
  6319                           ; BSR set to: 1
  6320                           ;main.c: 419:     V.screen = ~V.screen;
  6321  0110FE  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6322  011100  D002               	goto	u13900
  6323  011102  0E01               	movlw	1
  6324  011104  D001               	goto	u13906
  6325  011106                     u13900:
  6326  011106  0E00               	movlw	0
  6327  011108                     u13906:
  6328  011108  0AFF               	xorlw	255
  6329  01110A  6E0C               	movwf	(btemp+11)^0,c
  6330  01110C  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  6331  01110E  180C               	xorwf	(btemp+11)^0,w,c
  6332  011110  0BFE               	andlw	-2
  6333  011112  180C               	xorwf	(btemp+11)^0,w,c
  6334  011114  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  6335  011116                     l14624:
  6336                           
  6337                           ; BSR set to: 1
  6338                           ;main.c: 421:    set_vterm(V.screen);
  6339  011116  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6340  011118  D002               	goto	u13910
  6341  01111A  0E01               	movlw	1
  6342  01111C  D001               	goto	u13916
  6343  01111E                     u13910:
  6344  01111E  0E00               	movlw	0
  6345  011120                     u13916:
  6346  011120  6EE6               	movwf	postinc1,c
  6347  011122  ECC1  F0E8         	call	_set_vterm	;wreg free
  6348                           
  6349                           ;main.c: 422:    update_lcd(V.screen);
  6350  011126  0101               	movlb	1	; () banked
  6351  011128  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6352  01112A  D002               	goto	u13920
  6353  01112C  0E01               	movlw	1
  6354  01112E  D001               	goto	u13926
  6355  011130                     u13920:
  6356  011130  0E00               	movlw	0
  6357  011132                     u13926:
  6358  011132  6EE6               	movwf	postinc1,c
  6359  011134  ECC5  F0D4         	call	_update_lcd	;wreg free
  6360                           
  6361                           ;main.c: 424:    wait_lcd_done();
  6362  011138  EC50  F0E8         	call	_wait_lcd_done	;wreg free
  6363                           
  6364                           ; BSR set to: 0
  6365                           ;main.c: 425:    set_dac_a(3.333);
  6366  01113C  0EDF               	movlw	223
  6367  01113E  6EE6               	movwf	postinc1,c
  6368  011140  0E4F               	movlw	79
  6369  011142  6EE6               	movwf	postinc1,c
  6370  011144  0E55               	movlw	85
  6371  011146  6EE6               	movwf	postinc1,c
  6372  011148  0E40               	movlw	64
  6373  01114A  6EE6               	movwf	postinc1,c
  6374  01114C  EC9C  F0E5         	call	_set_dac_a	;wreg free
  6375                           
  6376                           ;main.c: 426:    set_dac_b(6.666);
  6377  011150  0EDF               	movlw	223
  6378  011152  6EE6               	movwf	postinc1,c
  6379  011154  0E4F               	movlw	79
  6380  011156  6EE6               	movwf	postinc1,c
  6381  011158  0ED5               	movlw	213
  6382  01115A  6EE6               	movwf	postinc1,c
  6383  01115C  0E40               	movlw	64
  6384  01115E  6EE6               	movwf	postinc1,c
  6385  011160  EC82  F0E5         	call	_set_dac_b	;wreg free
  6386                           
  6387                           ;main.c: 427:    set_dac();
  6388  011164  ECFD  F0D9         	call	_set_dac	;wreg free
  6389  011168                     l14636:
  6390                           
  6391                           ;main.c: 433:   check_help(V.flipper);
  6392  011168  0101               	movlb	1	; () banked
  6393  01116A  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6394  01116C  6EE6               	movwf	postinc1,c
  6395  01116E  EC23  F0C5         	call	_check_help	;wreg free
  6396                           
  6397                           ;main.c: 435:   if (V.enter) {
  6398  011172  0101               	movlb	1	; () banked
  6399  011174  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6400  011176  B4D8               	btfsc	status,2,c
  6401  011178  D062               	goto	l1389
  6402                           
  6403                           ; BSR set to: 1
  6404                           ;main.c: 436:    V.enter = 0;
  6405  01117A  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6406                           
  6407                           ;main.c: 437:    V.calib = 0;
  6408  01117C  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  6409                           
  6410                           ; BSR set to: 1
  6411                           ;main.c: 438:    inp_index += 3;
  6412                           ;stkvar	_inp_index @ sp[(-17)+11]
  6413  01117E  0EFA               	movlw	-6
  6414  011180  006F FF8C  F001    	movff	plusw1,btemp
  6415  011186  0E03               	movlw	3
  6416  011188  2601               	addwf	btemp^0,f,c
  6417  01118A  0EFA               	movlw	-6
  6418  01118C  0060  F007  FFE3   	movff	btemp,plusw1
  6419                           
  6420                           ;main.c: 439:    if (inp_index > 9)
  6421                           ;stkvar	_inp_index @ sp[(-17)+11]
  6422  011192  0EFA               	movlw	-6
  6423  011194  006F FF8C  F001    	movff	plusw1,btemp
  6424  01119A  0E09               	movlw	9
  6425  01119C  6401               	cpfsgt	btemp^0,c
  6426  01119E  D03A               	goto	l14664
  6427                           
  6428                           ; BSR set to: 1
  6429                           ;main.c: 440:     inp_index = 0;
  6430                           ;stkvar	_inp_index @ sp[(-17)+11]
  6431  0111A0  0EFA               	movlw	-6
  6432  0111A2  6AE3               	clrf	plusw1,c
  6433  0111A4  D037               	goto	l14664
  6434  0111A6                     l14646:
  6435                           
  6436                           ; BSR set to: 1
  6437                           ;main.c: 443:     i = C_BATT;
  6438                           ;stkvar	_i @ sp[(-17)+14]
  6439  0111A6  0EFD               	movlw	-3
  6440  0111A8  6AE3               	clrf	plusw1,c
  6441                           
  6442                           ; BSR set to: 1
  6443                           ;main.c: 444:     j = C_PV;
  6444                           ;stkvar	_j @ sp[(-17)+13]
  6445  0111AA  0EFC               	movlw	-4
  6446  0111AC  6AE3               	clrf	plusw1,c
  6447  0111AE  2AE3               	incf	plusw1,f,c
  6448                           
  6449                           ; BSR set to: 1
  6450                           ;main.c: 445:     k = V_CC;
  6451                           ;stkvar	_k @ sp[(-17)+12]
  6452  0111B0  0EFB               	movlw	-5
  6453  0111B2  6AE3               	clrf	plusw1,c
  6454  0111B4  82E3               	bsf	plusw1,1,c
  6455                           
  6456                           ;main.c: 446:     break;
  6457  0111B6  D043               	goto	l1389
  6458  0111B8                     l14652:
  6459                           
  6460                           ; BSR set to: 1
  6461                           ;main.c: 448:     i = V_BAT;
  6462                           ;stkvar	_i @ sp[(-17)+14]
  6463  0111B8  0EFD               	movlw	-3
  6464  0111BA  6AE3               	clrf	plusw1,c
  6465  0111BC  84E3               	bsf	plusw1,2,c
  6466                           
  6467                           ;main.c: 449:     j = V_PV;
  6468                           ;stkvar	_j @ sp[(-17)+13]
  6469  0111BE  0EFC               	movlw	-4
  6470  0111C0  6AE3               	clrf	plusw1,c
  6471  0111C2  80E3               	bsf	plusw1,0,c
  6472  0111C4  84E3               	bsf	plusw1,2,c	;indir
  6473                           
  6474                           ;main.c: 450:     k = V_CBUS;
  6475                           ;stkvar	_k @ sp[(-17)+12]
  6476  0111C6  0EFB               	movlw	-5
  6477  0111C8  6AE3               	clrf	plusw1,c
  6478  0111CA  82E3               	bsf	plusw1,1,c
  6479  0111CC  84E3               	bsf	plusw1,2,c	;indir
  6480                           
  6481                           ;main.c: 451:     break;
  6482  0111CE  D037               	goto	l1389
  6483  0111D0                     l14654:
  6484                           
  6485                           ; BSR set to: 1
  6486                           ;main.c: 453:     i = V_BBAT;
  6487                           ;stkvar	_i @ sp[(-17)+14]
  6488  0111D0  0EFD               	movlw	-3
  6489  0111D2  6AE3               	clrf	plusw1,c
  6490  0111D4  82E3               	bsf	plusw1,1,c
  6491  0111D6  86E3               	bsf	plusw1,3,c	;indir
  6492                           
  6493                           ; BSR set to: 1
  6494                           ;main.c: 454:     j = V_TEMP;
  6495  0111D8  0E0B               	movlw	11
  6496  0111DA  6E0C               	movwf	(btemp+11)^0,c
  6497                           
  6498                           ;stkvar	_j @ sp[(-17)+13]
  6499  0111DC  0EFC               	movlw	-4
  6500  0111DE  0060  F033  FFE3   	movff	btemp+11,plusw1
  6501                           
  6502                           ; BSR set to: 1
  6503                           ;main.c: 455:     k = V_INVERTER;
  6504                           ;stkvar	_k @ sp[(-17)+12]
  6505  0111E4  0EFB               	movlw	-5
  6506  0111E6  6AE3               	clrf	plusw1,c
  6507  0111E8  84E3               	bsf	plusw1,2,c
  6508  0111EA  86E3               	bsf	plusw1,3,c	;indir
  6509                           
  6510                           ;main.c: 456:     break;
  6511  0111EC  D028               	goto	l1389
  6512  0111EE                     l14660:
  6513                           
  6514                           ; BSR set to: 1
  6515                           ;main.c: 458:     i = V_LIGHT_SENSOR;
  6516  0111EE  0E0D               	movlw	13
  6517  0111F0  6E0C               	movwf	(btemp+11)^0,c
  6518                           
  6519                           ;stkvar	_i @ sp[(-17)+14]
  6520  0111F2  0EFD               	movlw	-3
  6521  0111F4  0060  F033  FFE3   	movff	btemp+11,plusw1
  6522                           
  6523                           ;main.c: 459:     j = V_LIGHT_SENSOR;
  6524  0111FA  0E0D               	movlw	13
  6525  0111FC  6E0C               	movwf	(btemp+11)^0,c
  6526                           
  6527                           ;stkvar	_j @ sp[(-17)+13]
  6528  0111FE  0EFC               	movlw	-4
  6529  011200  0060  F033  FFE3   	movff	btemp+11,plusw1
  6530                           
  6531                           ;main.c: 460:     k = V_LIGHT_SENSOR;
  6532  011206  0E0D               	movlw	13
  6533  011208  6E0C               	movwf	(btemp+11)^0,c
  6534                           
  6535                           ;stkvar	_k @ sp[(-17)+12]
  6536  01120A  0EFB               	movlw	-5
  6537  01120C  0060  F033  FFE3   	movff	btemp+11,plusw1
  6538                           
  6539                           ;main.c: 461:     break;
  6540  011212  D015               	goto	l1389
  6541  011214                     l14664:
  6542                           
  6543                           ; BSR set to: 1
  6544                           ;stkvar	_inp_index @ sp[(-17)+11]
  6545  011214  0EFA               	movlw	-6
  6546  011216  50E3               	movf	plusw1,w,c
  6547  011218  6E0B               	movwf	(btemp+10)^0,c
  6548  01121A  6A0C               	clrf	(btemp+11)^0,c
  6549                           
  6550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6551                           ; Switch size 1, requested type "simple"
  6552                           ; Number of cases is 1, Range of values is 0 to 0
  6553                           ; switch strategies available:
  6554                           ; Name         Instructions Cycles
  6555                           ; simple_byte            4     3 (average)
  6556                           ;	Chosen strategy is simple_byte
  6557  01121C  500C               	movf	(btemp+11)^0,w,c
  6558  01121E  0A00               	xorlw	0	; case 0
  6559  011220  A4D8               	btfss	status,2,c
  6560  011222  D00D               	goto	l1389
  6561                           
  6562                           ; BSR set to: 1
  6563                           ; Switch size 1, requested type "simple"
  6564                           ; Number of cases is 4, Range of values is 0 to 9
  6565                           ; switch strategies available:
  6566                           ; Name         Instructions Cycles
  6567                           ; simple_byte           13     7 (average)
  6568                           ;	Chosen strategy is simple_byte
  6569  011224  500B               	movf	(btemp+10)^0,w,c
  6570  011226  0A00               	xorlw	0	; case 0
  6571  011228  B4D8               	btfsc	status,2,c
  6572  01122A  D7BD               	goto	l14646
  6573  01122C  0A03               	xorlw	3	; case 3
  6574  01122E  B4D8               	btfsc	status,2,c
  6575  011230  D7C3               	goto	l14652
  6576  011232  0A05               	xorlw	5	; case 6
  6577  011234  B4D8               	btfsc	status,2,c
  6578  011236  D7CC               	goto	l14654
  6579  011238  0A0F               	xorlw	15	; case 9
  6580  01123A  B4D8               	btfsc	status,2,c
  6581  01123C  D7D8               	goto	l14660
  6582  01123E                     l1389:
  6583                           
  6584                           ; BSR set to: 1
  6585                           ;main.c: 470:   if (V.set_sequ) {
  6586  01123E  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6587  011240  EFD7  F083         	goto	l14538
  6588                           
  6589                           ; BSR set to: 1
  6590                           ;main.c: 471:    if (TimerDone(TMR_INFO)) {
  6591  011244  0E07               	movlw	7
  6592  011246  6EE6               	movwf	postinc1,c
  6593  011248  ECCB  F0E6         	call	_TimerDone	;wreg free
  6594  01124C  5001               	movf	btemp^0,w,c
  6595  01124E  B4D8               	btfsc	status,2,c
  6596  011250  D00C               	goto	l14674
  6597                           
  6598                           ;main.c: 472:     V.set_sequ = 0;
  6599  011252  0101               	movlb	1	; () banked
  6600  011254  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6601                           
  6602                           ; BSR set to: 1
  6603                           ;main.c: 473:     set_vterm(0);
  6604  011256  0E00               	movlw	0
  6605  011258  6EE6               	movwf	postinc1,c
  6606  01125A  ECC1  F0E8         	call	_set_vterm	;wreg free
  6607                           
  6608                           ;main.c: 474:     update_lcd(0);
  6609  01125E  0E00               	movlw	0
  6610  011260  6EE6               	movwf	postinc1,c
  6611  011262  ECC5  F0D4         	call	_update_lcd	;wreg free
  6612                           
  6613                           ;main.c: 475:    } else {
  6614  011266  EFD7  F083         	goto	l14538
  6615  01126A                     l14674:
  6616                           
  6617                           ;main.c: 476:     set_vterm(2);
  6618  01126A  0E02               	movlw	2
  6619  01126C  6EE6               	movwf	postinc1,c
  6620  01126E  ECC1  F0E8         	call	_set_vterm	;wreg free
  6621                           
  6622                           ;main.c: 477:     update_lcd(2);
  6623  011272  0E02               	movlw	2
  6624  011274  6EE6               	movwf	postinc1,c
  6625  011276  ECC5  F0D4         	call	_update_lcd	;wreg free
  6626  01127A  EFD7  F083         	goto	l14538
  6627  01127E                     __end_of_main:
  6628                           	opt callstack 0
  6629                           
  6630 ;; *************** function _update_cal_data *****************
  6631 ;; Defined at:
  6632 ;;		line 417 in file "daq.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;		None
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;		None
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  1  [STACK] void 
  6639 ;; Registers used:
  6640 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/39
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6650 ;;Total ram usage:        0 bytes
  6651 ;; Hardware stack levels used:    1
  6652 ;; Hardware stack levels required when called:   15
  6653 ;; This function calls:
  6654 ;;		Nothing
  6655 ;; This function is called by:
  6656 ;;		_main
  6657 ;; This function uses a reentrant model
  6658 ;;
  6659                           
  6660                           	psect	text1
  6661  01D242                     __ptext1:
  6662                           	opt callstack 0
  6663  01D242                     _update_cal_data:
  6664                           	opt callstack 15
  6665                           
  6666                           ;daq.c: 419:  R = r_cal;
  6667                           
  6668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6669                           ;incstack = 0
  6670  01D242  EE20  F293         	lfsr	2,_r_cal
  6671  01D246  EE00  F0AE         	lfsr	0,_R	;volatile
  6672  01D24A  0E38               	movlw	56
  6673  01D24C                     u10971:
  6674  01D24C  006F FF6F FFEB     	movff	plusw2,plusw0
  6675  01D252  06E8               	decf	wreg,f,c
  6676  01D254  E2FB               	bc	u10971
  6677                           
  6678                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  6679  01D256  0012               	return		;funcret
  6680  01D258                     __end_of_update_cal_data:
  6681                           	opt callstack 0
  6682                           
  6683 ;; *************** function _static_soc *****************
  6684 ;; Defined at:
  6685 ;;		line 117 in file "mbmc.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;		None
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;		None
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  1  [STACK] void 
  6692 ;; Registers used:
  6693 ;;		wreg, fsr2l, fsr2h
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6703 ;;Total ram usage:        0 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; Hardware stack levels required when called:   15
  6706 ;; This function calls:
  6707 ;;		Nothing
  6708 ;; This function is called by:
  6709 ;;		_main
  6710 ;; This function uses a reentrant model
  6711 ;;
  6712                           
  6713                           	psect	text2
  6714  01C36E                     __ptext2:
  6715                           	opt callstack 0
  6716  01C36E                     _static_soc:
  6717                           	opt callstack 15
  6718                           
  6719                           ;mbmc.c: 119:  C.runtime = 120;
  6720                           
  6721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6722                           ;incstack = 0
  6723  01C36E  0E78               	movlw	120
  6724  01C370  006F FFA0  F8B3    	movff	wreg,_C+180	;volatile
  6725  01C376  0E00               	movlw	0
  6726  01C378  006F FFA0  F8B4    	movff	wreg,_C+181	;volatile
  6727                           
  6728                           ;mbmc.c: 120:  C.soc = 100;
  6729  01C37E  0E64               	movlw	100
  6730  01C380  006F FFA0  F8B5    	movff	wreg,_C+182	;volatile
  6731  01C386  0E00               	movlw	0
  6732  01C388  006F FFA0  F8B6    	movff	wreg,_C+183	;volatile
  6733                           
  6734                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6735  01C38E  EE22  F08B         	lfsr	2,_C+140	;volatile
  6736  01C392  006F FF78  F88F    	movff	postinc2,_C+144	;volatile
  6737  01C398  006F FF78  F890    	movff	postinc2,_C+145	;volatile
  6738  01C39E  006F FF78  F891    	movff	postinc2,_C+146	;volatile
  6739  01C3A4  006F FF74  F892    	movff	postdec2,_C+147	;volatile
  6740                           
  6741                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6742  01C3AA  EE22  F08F         	lfsr	2,_C+144	;volatile
  6743  01C3AE  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
  6744  01C3B4  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
  6745  01C3BA  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
  6746  01C3C0  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
  6747                           
  6748                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6749  01C3C6  0012               	return		;funcret
  6750  01C3C8                     __end_of_static_soc:
  6751                           	opt callstack 0
  6752                           
  6753 ;; *************** function _start_switch_handler *****************
  6754 ;; Defined at:
  6755 ;;		line 125 in file "dio.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;		None
  6758 ;; Auto vars:     Size  Location     Type
  6759 ;;		None
  6760 ;; Return value:  Size  Location     Type
  6761 ;;                  1  [STACK] void 
  6762 ;; Registers used:
  6763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6764 ;; Tracked objects:
  6765 ;;		On entry : 1/0
  6766 ;;		On exit  : 3F/39
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6773 ;;Total ram usage:        0 bytes
  6774 ;; Hardware stack levels used:    1
  6775 ;; Hardware stack levels required when called:   16
  6776 ;; This function calls:
  6777 ;;		_INT1_SetInterruptHandler
  6778 ;; This function is called by:
  6779 ;;		_main
  6780 ;; This function uses a reentrant model
  6781 ;;
  6782                           
  6783                           	psect	text3
  6784  01D106                     __ptext3:
  6785                           	opt callstack 0
  6786  01D106                     _start_switch_handler:
  6787                           	opt callstack 14
  6788                           
  6789                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  6790                           
  6791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6792                           ;incstack = 0
  6793  01D106  0139               	movlb	57	; () banked
  6794  01D108  9195               	bcf	149,0,b	;volatile
  6795                           
  6796                           ; BSR set to: 57
  6797                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  6798  01D10A  0E0C               	movlw	low _switch_handler
  6799  01D10C  6EE6               	movwf	postinc1,c
  6800  01D10E  0E9F               	movlw	high _switch_handler
  6801  01D110  6EE6               	movwf	postinc1,c
  6802  01D112  0E01               	movlw	low (_switch_handler shr (0+16))
  6803  01D114  6EE6               	movwf	postinc1,c
  6804  01D116  EC57  F0E7         	call	_INT1_SetInterruptHandler	;wreg free
  6805                           
  6806                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  6807  01D11A  0E02               	movlw	2
  6808  01D11C  0102               	movlb	2	; () banked
  6809  01D11E  6F23               	movwf	(_S+35)& (0+255),b	;volatile
  6810                           
  6811                           ; BSR set to: 2
  6812                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  6813  01D120  0139               	movlb	57	; () banked
  6814  01D122  8195               	bsf	149,0,b	;volatile
  6815                           
  6816                           ; BSR set to: 57
  6817                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6818  01D124  0012               	return		;funcret
  6819  01D126                     __end_of_start_switch_handler:
  6820                           	opt callstack 0
  6821                           
  6822 ;; *************** function _srand *****************
  6823 ;; Defined at:
  6824 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6825 ;; Parameters:    Size  Location     Type
  6826 ;;  s               2  [STACK] unsigned int 
  6827 ;; Auto vars:     Size  Location     Type
  6828 ;;		None
  6829 ;; Return value:  Size  Location     Type
  6830 ;;                  1  [STACK] void 
  6831 ;; Registers used:
  6832 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6833 ;; Tracked objects:
  6834 ;;		On entry : 0/0
  6835 ;;		On exit  : 3F/2
  6836 ;;		Unchanged: 0/0
  6837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6842 ;;Total ram usage:        0 bytes
  6843 ;; Hardware stack levels used:    1
  6844 ;; Hardware stack levels required when called:   15
  6845 ;; This function calls:
  6846 ;;		Nothing
  6847 ;; This function is called by:
  6848 ;;		_main
  6849 ;; This function uses a reentrant model
  6850 ;;
  6851                           
  6852                           	psect	text4
  6853  01CAD0                     __ptext4:
  6854                           	opt callstack 0
  6855  01CAD0                     _srand:
  6856                           	opt callstack 15
  6857                           
  6858                           ;stkvar	_s @ sp[(0)+-2]
  6859                           
  6860                           ; BSR set to: 57
  6861                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6862                           ;incstack = 0
  6863  01CAD0  0EFE               	movlw	-2
  6864  01CAD2  50E3               	movf	plusw1,w,c
  6865  01CAD4  0FFF               	addlw	255
  6866  01CAD6  6E0B               	movwf	(btemp+10)^0,c
  6867  01CAD8  0EFF               	movlw	-1
  6868  01CADA  006F FF8C  F00C    	movff	plusw1,btemp+11
  6869  01CAE0  0EFF               	movlw	255
  6870  01CAE2  220C               	addwfc	(btemp+11)^0,f,c
  6871  01CAE4  0060  F02C  F2CC   	movff	btemp+10,_seed
  6872  01CAEA  0060  F030  F2CD   	movff	btemp+11,_seed+1
  6873  01CAF0  0102               	movlb	2	; () banked
  6874  01CAF2  6BCE               	clrf	(_seed+2)& (0+255),b
  6875  01CAF4  6BCF               	clrf	(_seed+3)& (0+255),b
  6876  01CAF6  6BD0               	clrf	(_seed+4)& (0+255),b
  6877  01CAF8  6BD1               	clrf	(_seed+5)& (0+255),b
  6878  01CAFA  6BD2               	clrf	(_seed+6)& (0+255),b
  6879  01CAFC  6BD3               	clrf	(_seed+7)& (0+255),b
  6880                           
  6881                           ; BSR set to: 2
  6882                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6883  01CAFE  52E5               	movf	postdec1,f,c
  6884  01CB00  52E5               	movf	postdec1,f,c
  6885  01CB02  0012               	return		;funcret
  6886  01CB04                     __end_of_srand:
  6887                           	opt callstack 0
  6888                           
  6889 ;; *************** function _set_dac_b *****************
  6890 ;; Defined at:
  6891 ;;		line 301 in file "daq.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;  voltage         4  [STACK] const float 
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;		None
  6896 ;; Return value:  Size  Location     Type
  6897 ;;                  2  [STACK] unsigned short 
  6898 ;; Registers used:
  6899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6900 ;; Tracked objects:
  6901 ;;		On entry : 0/0
  6902 ;;		On exit  : 0/0
  6903 ;;		Unchanged: 0/0
  6904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6909 ;;Total ram usage:        0 bytes
  6910 ;; Hardware stack levels used:    1
  6911 ;; Hardware stack levels required when called:   17
  6912 ;; This function calls:
  6913 ;;		_convert_dac_raw
  6914 ;; This function is called by:
  6915 ;;		_main
  6916 ;; This function uses a reentrant model
  6917 ;;
  6918                           
  6919                           	psect	text5
  6920  01CB04                     __ptext5:
  6921                           	opt callstack 0
  6922  01CB04                     _set_dac_b:
  6923                           	opt callstack 13
  6924                           
  6925                           ;daq.c: 301: uint16_t set_dac_b(const float voltage);daq.c: 302: {;daq.c: 303:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  6926                           ;stkvar	_voltage @ sp[(0)+-4]
  6927                           
  6928                           ; BSR set to: 2
  6929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6930                           ;incstack = 0
  6931  01CB04  0EFC               	movlw	-4
  6932  01CB06  006F FF8F FFE6     	movff	plusw1,postinc1
  6933  01CB0C  006F FF8F FFE6     	movff	plusw1,postinc1
  6934  01CB12  006F FF8F FFE6     	movff	plusw1,postinc1
  6935  01CB18  006F FF8F FFE6     	movff	plusw1,postinc1
  6936  01CB1E  EC23  F0D3         	call	_convert_dac_raw	;wreg free
  6937  01CB22  0060  F004  F0D0   	movff	btemp,_R+34	;volatile
  6938  01CB28  0060  F008  F0D1   	movff	btemp+1,_R+35	;volatile
  6939                           
  6940                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6941                           
  6942                           ;daq.c: 304:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  6943  01CB2E  52E5               	movf	postdec1,f,c
  6944  01CB30  52E5               	movf	postdec1,f,c
  6945  01CB32  52E5               	movf	postdec1,f,c
  6946  01CB34  52E5               	movf	postdec1,f,c
  6947  01CB36  0012               	return		;funcret
  6948  01CB38                     __end_of_set_dac_b:
  6949                           	opt callstack 0
  6950                           
  6951 ;; *************** function _set_dac_a *****************
  6952 ;; Defined at:
  6953 ;;		line 292 in file "daq.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;  voltage         4  [STACK] const float 
  6956 ;; Auto vars:     Size  Location     Type
  6957 ;;		None
  6958 ;; Return value:  Size  Location     Type
  6959 ;;                  2  [STACK] unsigned short 
  6960 ;; Registers used:
  6961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6962 ;; Tracked objects:
  6963 ;;		On entry : 3F/0
  6964 ;;		On exit  : 0/0
  6965 ;;		Unchanged: 0/0
  6966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6971 ;;Total ram usage:        0 bytes
  6972 ;; Hardware stack levels used:    1
  6973 ;; Hardware stack levels required when called:   17
  6974 ;; This function calls:
  6975 ;;		_convert_dac_raw
  6976 ;; This function is called by:
  6977 ;;		_main
  6978 ;; This function uses a reentrant model
  6979 ;;
  6980                           
  6981                           	psect	text6
  6982  01CB38                     __ptext6:
  6983                           	opt callstack 0
  6984  01CB38                     _set_dac_a:
  6985                           	opt callstack 13
  6986                           
  6987                           ;daq.c: 292: uint16_t set_dac_a(const float voltage);daq.c: 293: {;daq.c: 294:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  6988                           ;stkvar	_voltage @ sp[(0)+-4]
  6989                           
  6990                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6991                           ;incstack = 0
  6992  01CB38  0EFC               	movlw	-4
  6993  01CB3A  006F FF8F FFE6     	movff	plusw1,postinc1
  6994  01CB40  006F FF8F FFE6     	movff	plusw1,postinc1
  6995  01CB46  006F FF8F FFE6     	movff	plusw1,postinc1
  6996  01CB4C  006F FF8F FFE6     	movff	plusw1,postinc1
  6997  01CB52  EC23  F0D3         	call	_convert_dac_raw	;wreg free
  6998  01CB56  0060  F004  F0CE   	movff	btemp,_R+32	;volatile
  6999  01CB5C  0060  F008  F0CF   	movff	btemp+1,_R+33	;volatile
  7000                           
  7001                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7002                           
  7003                           ;daq.c: 295:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  7004  01CB62  52E5               	movf	postdec1,f,c
  7005  01CB64  52E5               	movf	postdec1,f,c
  7006  01CB66  52E5               	movf	postdec1,f,c
  7007  01CB68  52E5               	movf	postdec1,f,c
  7008  01CB6A  0012               	return		;funcret
  7009  01CB6C                     __end_of_set_dac_a:
  7010                           	opt callstack 0
  7011                           
  7012 ;; *************** function _convert_dac_raw *****************
  7013 ;; Defined at:
  7014 ;;		line 274 in file "daq.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;  voltage         4  [STACK] float 
  7017 ;; Auto vars:     Size  Location     Type
  7018 ;;		None
  7019 ;; Return value:  Size  Location     Type
  7020 ;;                  2  [STACK] unsigned short 
  7021 ;; Registers used:
  7022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7023 ;; Tracked objects:
  7024 ;;		On entry : 0/0
  7025 ;;		On exit  : 0/0
  7026 ;;		Unchanged: 0/0
  7027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7032 ;;Total ram usage:        0 bytes
  7033 ;; Hardware stack levels used:    1
  7034 ;; Hardware stack levels required when called:   16
  7035 ;; This function calls:
  7036 ;;		___fldiv
  7037 ;;		___flge
  7038 ;;		___fltol
  7039 ;; This function is called by:
  7040 ;;		_set_dac_a
  7041 ;;		_set_dac_b
  7042 ;; This function uses a reentrant model
  7043 ;;
  7044                           
  7045                           	psect	text7
  7046  01A646                     __ptext7:
  7047                           	opt callstack 0
  7048  01A646                     _convert_dac_raw:
  7049                           	opt callstack 13
  7050                           
  7051                           ;daq.c: 274: static uint16_t convert_dac_raw(float voltage);daq.c: 275: {;daq.c: 279:  i
      +                          f (voltage < 0.001)
  7052                           
  7053                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7054                           ;incstack = 0
  7055  01A646  0E6F               	movlw	111
  7056  01A648  6EE6               	movwf	postinc1,c
  7057  01A64A  0E12               	movlw	18
  7058  01A64C  6EE6               	movwf	postinc1,c
  7059  01A64E  0E83               	movlw	131
  7060  01A650  6EE6               	movwf	postinc1,c
  7061  01A652  0E3A               	movlw	58
  7062  01A654  6EE6               	movwf	postinc1,c
  7063                           
  7064                           ;stkvar	_voltage @ sp[(-4)+-4]
  7065  01A656  0EF8               	movlw	-8
  7066  01A658  006F FF8F FFE6     	movff	plusw1,postinc1
  7067  01A65E  006F FF8F FFE6     	movff	plusw1,postinc1
  7068  01A664  006F FF8F FFE6     	movff	plusw1,postinc1
  7069  01A66A  006F FF8F FFE6     	movff	plusw1,postinc1
  7070  01A670  EC7D  F0CD         	call	___flge	;wreg free
  7071  01A674  B001               	btfsc	btemp& (0+255),0,c
  7072  01A676  D018               	goto	l11496
  7073                           
  7074                           ;daq.c: 280:   voltage = 0.001;
  7075  01A678  0E6F               	movlw	111
  7076  01A67A  6E09               	movwf	(btemp+8)^0,c
  7077  01A67C  0E12               	movlw	18
  7078  01A67E  6E0A               	movwf	(btemp+9)^0,c
  7079  01A680  0E83               	movlw	131
  7080  01A682  6E0B               	movwf	(btemp+10)^0,c
  7081  01A684  0E3A               	movlw	58
  7082  01A686  6E0C               	movwf	(btemp+11)^0,c
  7083                           
  7084                           ;stkvar	_voltage @ sp[(0)+-4]
  7085  01A688  0EFC               	movlw	-4
  7086  01A68A  0060  F027  FFE3   	movff	btemp+8,plusw1
  7087  01A690  0EFD               	movlw	-3
  7088  01A692  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7089  01A698  0EFE               	movlw	-2
  7090  01A69A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7091  01A6A0  0EFF               	movlw	-1
  7092  01A6A2  0060  F033  FFE3   	movff	btemp+11,plusw1
  7093  01A6A8                     l11496:
  7094                           
  7095                           ;daq.c: 281:  if (voltage > 10.0)
  7096                           ;stkvar	_voltage @ sp[(0)+-4]
  7097  01A6A8  0EFC               	movlw	-4
  7098  01A6AA  006F FF8F FFE6     	movff	plusw1,postinc1
  7099  01A6B0  006F FF8F FFE6     	movff	plusw1,postinc1
  7100  01A6B6  006F FF8F FFE6     	movff	plusw1,postinc1
  7101  01A6BC  006F FF8F FFE6     	movff	plusw1,postinc1
  7102  01A6C2  0E00               	movlw	0
  7103  01A6C4  6EE6               	movwf	postinc1,c
  7104  01A6C6  0E00               	movlw	0
  7105  01A6C8  6EE6               	movwf	postinc1,c
  7106  01A6CA  0E20               	movlw	32
  7107  01A6CC  6EE6               	movwf	postinc1,c
  7108  01A6CE  0E41               	movlw	65
  7109  01A6D0  6EE6               	movwf	postinc1,c
  7110  01A6D2  EC7D  F0CD         	call	___flge	;wreg free
  7111  01A6D6  B001               	btfsc	btemp& (0+255),0,c
  7112  01A6D8  D018               	goto	l11500
  7113                           
  7114                           ;daq.c: 282:   voltage = 10.0;
  7115  01A6DA  0E00               	movlw	0
  7116  01A6DC  6E09               	movwf	(btemp+8)^0,c
  7117  01A6DE  0E00               	movlw	0
  7118  01A6E0  6E0A               	movwf	(btemp+9)^0,c
  7119  01A6E2  0E20               	movlw	32
  7120  01A6E4  6E0B               	movwf	(btemp+10)^0,c
  7121  01A6E6  0E41               	movlw	65
  7122  01A6E8  6E0C               	movwf	(btemp+11)^0,c
  7123                           
  7124                           ;stkvar	_voltage @ sp[(0)+-4]
  7125  01A6EA  0EFC               	movlw	-4
  7126  01A6EC  0060  F027  FFE3   	movff	btemp+8,plusw1
  7127  01A6F2  0EFD               	movlw	-3
  7128  01A6F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7129  01A6FA  0EFE               	movlw	-2
  7130  01A6FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7131  01A702  0EFF               	movlw	-1
  7132  01A704  0060  F033  FFE3   	movff	btemp+11,plusw1
  7133  01A70A                     l11500:
  7134                           
  7135                           ;daq.c: 286:  return(uint16_t) (voltage / 0.002442);
  7136  01A70A  0EF6               	movlw	246
  7137  01A70C  6EE6               	movwf	postinc1,c
  7138  01A70E  0E09               	movlw	9
  7139  01A710  6EE6               	movwf	postinc1,c
  7140  01A712  0E20               	movlw	32
  7141  01A714  6EE6               	movwf	postinc1,c
  7142  01A716  0E3B               	movlw	59
  7143  01A718  6EE6               	movwf	postinc1,c
  7144                           
  7145                           ;stkvar	_voltage @ sp[(-4)+-4]
  7146  01A71A  0EF8               	movlw	-8
  7147  01A71C  006F FF8F FFE6     	movff	plusw1,postinc1
  7148  01A722  006F FF8F FFE6     	movff	plusw1,postinc1
  7149  01A728  006F FF8F FFE6     	movff	plusw1,postinc1
  7150  01A72E  006F FF8F FFE6     	movff	plusw1,postinc1
  7151  01A734  EC61  F0A7         	call	___fldiv	;wreg free
  7152  01A738  0060  F007  FFE6   	movff	btemp,postinc1
  7153  01A73E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7154  01A744  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7155  01A74A  0060  F013  FFE6   	movff	btemp+3,postinc1
  7156  01A750  ECC4  F0CC         	call	___fltol	;wreg free
  7157                           
  7158                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  7159  01A754  52E5               	movf	postdec1,f,c
  7160  01A756  52E5               	movf	postdec1,f,c
  7161  01A758  52E5               	movf	postdec1,f,c
  7162  01A75A  52E5               	movf	postdec1,f,c
  7163  01A75C  0012               	return		;funcret
  7164  01A75E                     __end_of_convert_dac_raw:
  7165                           	opt callstack 0
  7166                           
  7167 ;; *************** function _set_dac *****************
  7168 ;; Defined at:
  7169 ;;		line 250 in file "daq.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;		None
  7172 ;; Auto vars:     Size  Location     Type
  7173 ;;		None
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  1  [STACK] void 
  7176 ;; Registers used:
  7177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7187 ;;Total ram usage:        0 bytes
  7188 ;; Hardware stack levels used:    1
  7189 ;; Hardware stack levels required when called:   16
  7190 ;; This function calls:
  7191 ;;		_SPI1_Exchange8bit
  7192 ;;		_dac_spi_control
  7193 ;; This function is called by:
  7194 ;;		_main
  7195 ;; This function uses a reentrant model
  7196 ;;
  7197                           
  7198                           	psect	text8
  7199  01B3FA                     __ptext8:
  7200                           	opt callstack 0
  7201  01B3FA                     _set_dac:
  7202                           	opt callstack 14
  7203                           
  7204                           ;daq.c: 252:  while (!SPI1STATUSbits.TXBE);
  7205                           
  7206                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7207                           ;incstack = 0
  7208  01B3FA  013D               	movlb	61	; () banked
  7209  01B3FC  AB17               	btfss	23,5,b	;volatile
  7210  01B3FE  D7FD               	goto	_set_dac
  7211                           
  7212                           ; BSR set to: 61
  7213                           
  7214                           ;daq.c: 253:  do { LATCbits.LATC2 = 1; } while(0);
  7215  01B400  84BC               	bsf	188,2,c	;volatile
  7216                           
  7217                           ; BSR set to: 61
  7218                           
  7219                           ;daq.c: 254:  do { LATCbits.LATC0 = 1; } while(0);
  7220  01B402  80BC               	bsf	188,0,c	;volatile
  7221                           
  7222                           ; BSR set to: 61
  7223                           ;daq.c: 255:  dac_spi_control(1);
  7224  01B404  0E01               	movlw	1
  7225  01B406  6EE6               	movwf	postinc1,c
  7226  01B408  EC07  F0DF         	call	_dac_spi_control	;wreg free
  7227                           
  7228                           ;daq.c: 256:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  7229  01B40C  C0CE  F0D2         	movff	_R+32,_R+36	;volatile
  7230                           
  7231                           ;daq.c: 257:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  7232  01B410  EE20  F0CE         	lfsr	2,_R+32	;volatile
  7233  01B414  006F FF78  F00B    	movff	postinc2,btemp+10
  7234  01B41A  006F FF74  F00C    	movff	postdec2,btemp+11
  7235  01B420  0060  F030  F00B   	movff	btemp+11,btemp+10
  7236  01B426  6A0C               	clrf	(btemp+11)^0,c
  7237  01B428  0E0F               	movlw	15
  7238  01B42A  160B               	andwf	(btemp+10)^0,f,c
  7239  01B42C  0100               	movlb	0	; () banked
  7240  01B42E  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7241  01B430  180B               	xorwf	(btemp+10)^0,w,c
  7242  01B432  0BF0               	andlw	-16
  7243  01B434  180B               	xorwf	(btemp+10)^0,w,c
  7244  01B436  6FD3               	movwf	(_R+37)& (0+255),b	;volatile
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;daq.c: 258:  R.max5322_cmd.map.cont = 0b0100;
  7248  01B438  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7249  01B43A  0B0F               	andlw	-241
  7250  01B43C  0940               	iorlw	64
  7251  01B43E  6FD3               	movwf	(_R+37)& (0+255),b	;volatile
  7252                           
  7253                           ; BSR set to: 0
  7254  01B440  90BF               	bcf	191,0,c	;volatile
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;daq.c: 260:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7258  01B442  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7259  01B444  6EE6               	movwf	postinc1,c
  7260  01B446  ECA3  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  7261                           
  7262                           ; BSR set to: 57
  7263                           ;daq.c: 261:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7264  01B44A  0100               	movlb	0	; () banked
  7265  01B44C  51D2               	movf	(_R+36)& (0+255),w,b	;volatile
  7266  01B44E  6EE6               	movwf	postinc1,c
  7267  01B450  ECA3  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  7268                           
  7269                           ; BSR set to: 57
  7270  01B454  80BF               	bsf	191,0,c	;volatile
  7271                           
  7272                           ; BSR set to: 57
  7273                           ;daq.c: 263:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  7274  01B456  C0D0  F0D2         	movff	_R+34,_R+36	;volatile
  7275                           
  7276                           ; BSR set to: 57
  7277                           ;daq.c: 264:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  7278  01B45A  EE20  F0D0         	lfsr	2,_R+34	;volatile
  7279  01B45E  006F FF78  F00B    	movff	postinc2,btemp+10
  7280  01B464  006F FF74  F00C    	movff	postdec2,btemp+11
  7281  01B46A  0060  F030  F00B   	movff	btemp+11,btemp+10
  7282  01B470  6A0C               	clrf	(btemp+11)^0,c
  7283  01B472  0E0F               	movlw	15
  7284  01B474  160B               	andwf	(btemp+10)^0,f,c
  7285  01B476  0100               	movlb	0	; () banked
  7286  01B478  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7287  01B47A  180B               	xorwf	(btemp+10)^0,w,c
  7288  01B47C  0BF0               	andlw	-16
  7289  01B47E  180B               	xorwf	(btemp+10)^0,w,c
  7290  01B480  6FD3               	movwf	(_R+37)& (0+255),b	;volatile
  7291                           
  7292                           ; BSR set to: 0
  7293                           ;daq.c: 265:  R.max5322_cmd.map.cont = 0b0101;
  7294  01B482  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7295  01B484  0B0F               	andlw	-241
  7296  01B486  0950               	iorlw	80
  7297  01B488  6FD3               	movwf	(_R+37)& (0+255),b	;volatile
  7298                           
  7299                           ; BSR set to: 0
  7300  01B48A  90BF               	bcf	191,0,c	;volatile
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;daq.c: 267:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7304  01B48C  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7305  01B48E  6EE6               	movwf	postinc1,c
  7306  01B490  ECA3  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  7307                           
  7308                           ; BSR set to: 57
  7309                           ;daq.c: 268:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7310  01B494  0100               	movlb	0	; () banked
  7311  01B496  51D2               	movf	(_R+36)& (0+255),w,b	;volatile
  7312  01B498  6EE6               	movwf	postinc1,c
  7313  01B49A  ECA3  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  7314  01B49E                     l1913:
  7315  01B49E  013D               	movlb	61	; () banked
  7316  01B4A0  AB17               	btfss	23,5,b	;volatile
  7317  01B4A2  D7FD               	goto	l1913
  7318                           
  7319                           ; BSR set to: 61
  7320                           
  7321                           ;daq.c: 270:  do { LATFbits.LATF0 = 1; } while(0);
  7322  01B4A4  80BF               	bsf	191,0,c	;volatile
  7323                           
  7324                           ; BSR set to: 61
  7325                           ;daq.c: 271:  dac_spi_control(0);
  7326  01B4A6  0E00               	movlw	0
  7327  01B4A8  6EE6               	movwf	postinc1,c
  7328  01B4AA  EC07  F0DF         	call	_dac_spi_control	;wreg free
  7329                           
  7330                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  7331  01B4AE  0012               	return		;funcret
  7332  01B4B0                     __end_of_set_dac:
  7333                           	opt callstack 0
  7334                           
  7335 ;; *************** function _dac_spi_control *****************
  7336 ;; Defined at:
  7337 ;;		line 202 in file "daq.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;  set             1  [STACK] _Bool 
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;		None
  7342 ;; Return value:  Size  Location     Type
  7343 ;;                  1  [STACK] void 
  7344 ;; Registers used:
  7345 ;;		wreg, fsr1l, fsr1h, status,2
  7346 ;; Tracked objects:
  7347 ;;		On entry : 3F/3D
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7355 ;;Total ram usage:        0 bytes
  7356 ;; Hardware stack levels used:    1
  7357 ;; Hardware stack levels required when called:   15
  7358 ;; This function calls:
  7359 ;;		Nothing
  7360 ;; This function is called by:
  7361 ;;		_set_dac
  7362 ;; This function uses a reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text9
  7366  01BE0E                     __ptext9:
  7367                           	opt callstack 0
  7368  01BE0E                     _dac_spi_control:
  7369                           	opt callstack 14
  7370                           
  7371                           ;daq.c: 202: void dac_spi_control(_Bool set);daq.c: 203: {;daq.c: 204:  static _Bool ini
      +                          t = 0;;daq.c: 205:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 207:  if (set) {
  7372                           ;stkvar	_set @ sp[(0)+-1]
  7373                           
  7374                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7375                           ;incstack = 0
  7376  01BE0E  0EFF               	movlw	-1
  7377  01BE10  50E3               	movf	plusw1,w,c
  7378  01BE12  B4D8               	btfsc	status,2,c
  7379  01BE14  D022               	goto	l11488
  7380                           
  7381                           ;daq.c: 208:   SPI1CON0bits.EN = 0;
  7382  01BE16  013D               	movlb	61	; () banked
  7383  01BE18  9F14               	bcf	20,7,b	;volatile
  7384                           
  7385                           ; BSR set to: 61
  7386                           ;daq.c: 209:   if (!init) {
  7387  01BE1A  5043               	movf	dac_spi_control@init^0,w,c
  7388  01BE1C  A4D8               	btfss	status,2,c
  7389  01BE1E  D011               	goto	l11476
  7390                           
  7391                           ; BSR set to: 61
  7392                           ;daq.c: 210:    init = 1;
  7393  01BE20  0E01               	movlw	1
  7394  01BE22  6E43               	movwf	dac_spi_control@init^0,c
  7395                           
  7396                           ; BSR set to: 61
  7397                           ;daq.c: 211:    S0 = SPI1CON0;
  7398  01BE24  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7399                           
  7400                           ; BSR set to: 61
  7401                           ;daq.c: 212:    S1 = SPI1CON1;
  7402  01BE2A  006F F454  F0A4    	movff	15637,dac_spi_control@S1	;volatile
  7403                           
  7404                           ; BSR set to: 61
  7405                           ;daq.c: 213:    S2 = SPI1CON2;
  7406  01BE30  006F F458  F0A3    	movff	15638,dac_spi_control@S2	;volatile
  7407                           
  7408                           ; BSR set to: 61
  7409                           ;daq.c: 214:    SC = SPI1CLK;
  7410  01BE36  006F F470  F0A2    	movff	15644,dac_spi_control@SC	;volatile
  7411                           
  7412                           ; BSR set to: 61
  7413                           ;daq.c: 215:    SB = SPI1BAUD;
  7414  01BE3C  006F F464  F0A1    	movff	15641,dac_spi_control@SB	;volatile
  7415  01BE42                     l11476:
  7416                           
  7417                           ; BSR set to: 61
  7418                           ;daq.c: 221:   SPI1CON1 = 0x00;
  7419  01BE42  6B15               	clrf	21,b	;volatile
  7420                           
  7421                           ; BSR set to: 61
  7422                           ;daq.c: 222:   SPI1CON1bits.CKE = 1;
  7423  01BE44  8D15               	bsf	21,6,b	;volatile
  7424                           
  7425                           ; BSR set to: 61
  7426                           ;daq.c: 223:   SPI1CON1bits.CKP = 0;
  7427  01BE46  9B15               	bcf	21,5,b	;volatile
  7428                           
  7429                           ; BSR set to: 61
  7430                           ;daq.c: 224:   SPI1CON1bits.SMP = 0;
  7431  01BE48  9F15               	bcf	21,7,b	;volatile
  7432                           
  7433                           ;daq.c: 226:   SPI1CON2 = 0x03;
  7434  01BE4A  0E03               	movlw	3
  7435  01BE4C  6F16               	movwf	22,b	;volatile
  7436                           
  7437                           ;daq.c: 228:   SPI1BAUD = 0x0f;
  7438  01BE4E  0E0F               	movlw	15
  7439  01BE50  6F19               	movwf	25,b	;volatile
  7440                           
  7441                           ; BSR set to: 61
  7442                           ;daq.c: 230:   SPI1CLK = 0x00;
  7443  01BE52  6B1C               	clrf	28,b	;volatile
  7444                           
  7445                           ;daq.c: 232:   SPI1CON0 = 0x83;
  7446  01BE54  0E83               	movlw	131
  7447  01BE56  6F14               	movwf	20,b	;volatile
  7448  01BE58  D014               	goto	L3
  7449  01BE5A                     l11488:
  7450                           
  7451                           ;daq.c: 235:   if (init) {
  7452  01BE5A  5043               	movf	dac_spi_control@init^0,w,c
  7453  01BE5C  B4D8               	btfsc	status,2,c
  7454  01BE5E  D012               	goto	l1897
  7455                           
  7456                           ;daq.c: 239:    SPI1CON0bits.EN = 0;
  7457  01BE60  013D               	movlb	61	; () banked
  7458  01BE62  9F14               	bcf	20,7,b	;volatile
  7459                           
  7460                           ;daq.c: 240:    SPI1CON1 = S1;
  7461  01BE64  0060  F293  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7462                           
  7463                           ;daq.c: 241:    SPI1CON2 = S2;
  7464  01BE6A  0060  F28F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7465                           
  7466                           ;daq.c: 242:    SPI1CLK = SC;
  7467  01BE70  0060  F28B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7468                           
  7469                           ;daq.c: 243:    SPI1BAUD = SB;
  7470  01BE76  0060  F287  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7471                           
  7472                           ;daq.c: 244:    SPI1CON0 = S0;
  7473  01BE7C  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7474  01BE82                     L3:
  7475                           
  7476                           ;daq.c: 245:    SPI1CON0bits.EN = 1;
  7477  01BE82  8F14               	bsf	20,7,b	;volatile
  7478  01BE84                     l1897:
  7479                           
  7480                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7481  01BE84  52E5               	movf	postdec1,f,c
  7482  01BE86  0012               	return		;funcret
  7483  01BE88                     __end_of_dac_spi_control:
  7484                           	opt callstack 0
  7485                           
  7486 ;; *************** function _read_cal_data *****************
  7487 ;; Defined at:
  7488 ;;		line 351 in file "daq.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;		None
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  x               2  [STACK] unsigned short 
  7493 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  7494 ;;		 -> r_cal(57), 
  7495 ;;  y               2  [STACK] unsigned short 
  7496 ;;  crcVal_save     1  [STACK] unsigned char 
  7497 ;; Return value:  Size  Location     Type
  7498 ;;                  1  [STACK] _Bool 
  7499 ;; Registers used:
  7500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  7501 ;; Tracked objects:
  7502 ;;		On entry : 0/39
  7503 ;;		On exit  : 0/0
  7504 ;;		Unchanged: 0/0
  7505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7510 ;;Total ram usage:        0 bytes
  7511 ;; Hardware stack levels used:    1
  7512 ;; Hardware stack levels required when called:   17
  7513 ;; This function calls:
  7514 ;;		_CRC_8BitDataWrite
  7515 ;;		_CRC_CalculatedResultGet
  7516 ;;		_CRC_Initialize
  7517 ;;		_CRC_IsBusy
  7518 ;;		_CRC_Start
  7519 ;;		_DATAEE_ReadByte
  7520 ;; This function is called by:
  7521 ;;		_main
  7522 ;; This function uses a reentrant model
  7523 ;;
  7524                           
  7525                           	psect	text10
  7526  018E5C                     __ptext10:
  7527                           	opt callstack 0
  7528  018E5C                     _read_cal_data:
  7529                           	opt callstack 0
  7530                           
  7531                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7532  018E5C  0E07               	movlw	7
  7533  018E5E  26E1               	addwf	fsr1l,f,c
  7534  018E60  0E00               	movlw	0
  7535  018E62  22E2               	addwfc	fsr1h,f,c
  7536                           
  7537                           ;daq.c: 353:  uint16_t x = 0, y;
  7538                           ;stkvar	_x @ sp[(-7)+0]
  7539                           
  7540                           ;incstack = 0
  7541  018E64  0EF9               	movlw	-7
  7542  018E66  6AE3               	clrf	plusw1,c
  7543  018E68  0EFA               	movlw	-6
  7544  018E6A  6AE3               	clrf	plusw1,c
  7545                           
  7546                           ;daq.c: 354:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 356:  y = sizeof(r_cal);
  7547  018E6C  0E39               	movlw	57
  7548  018E6E  6E0B               	movwf	(btemp+10)^0,c
  7549  018E70  0E00               	movlw	0
  7550  018E72  6E0C               	movwf	(btemp+11)^0,c
  7551                           
  7552                           ;stkvar	_y @ sp[(-7)+4]
  7553  018E74  0EFD               	movlw	-3
  7554  018E76  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7555  018E7C  0EFE               	movlw	-2
  7556  018E7E  0060  F033  FFE3   	movff	btemp+11,plusw1
  7557                           
  7558                           ;daq.c: 357:  r_cal_ptr = (uint8_t*) & r_cal;
  7559                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  7560  018E84  0E02               	movlw	high _r_cal
  7561  018E86  6E01               	movwf	btemp^0,c
  7562  018E88  0EFC               	movlw	-4
  7563  018E8A  0060  F007  FFE3   	movff	btemp,plusw1
  7564  018E90  0E93               	movlw	low _r_cal
  7565  018E92  6E01               	movwf	btemp^0,c
  7566  018E94  0EFB               	movlw	-5
  7567  018E96  0060  F007  FFE3   	movff	btemp,plusw1
  7568                           
  7569                           ;daq.c: 359:  CRC_Initialize();
  7570  018E9C  EC30  F0DD         	call	_CRC_Initialize	;wreg free
  7571                           
  7572                           ; BSR set to: 0
  7573                           ;daq.c: 362:  CRC_Start();
  7574  018EA0  ECE5  F0E9         	call	_CRC_Start	;wreg free
  7575  018EA4                     l11922:
  7576                           
  7577                           ;daq.c: 365:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  7578                           ;stkvar	_x @ sp[(-7)+0]
  7579  018EA4  0EF9               	movlw	-7
  7580  018EA6  006F FF8F FFE6     	movff	plusw1,postinc1
  7581  018EAC  006F FF8F FFE6     	movff	plusw1,postinc1
  7582  018EB2  ECD0  F0E5         	call	_DATAEE_ReadByte	;wreg free
  7583                           
  7584                           ;stkvar	_x @ sp[(-7)+0]
  7585  018EB6  0EF9               	movlw	-7
  7586  018EB8  006F FF8C  F00B    	movff	plusw1,btemp+10
  7587  018EBE  0EFA               	movlw	-6
  7588  018EC0  006F FF8C  F00C    	movff	plusw1,btemp+11
  7589                           
  7590                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  7591  018EC6  0EFB               	movlw	-5
  7592  018EC8  006F FF8C  F009    	movff	plusw1,btemp+8
  7593  018ECE  0EFC               	movlw	-4
  7594  018ED0  006F FF8C  F00A    	movff	plusw1,btemp+9
  7595  018ED6  500B               	movf	(btemp+10)^0,w,c
  7596  018ED8  2409               	addwf	(btemp+8)^0,w,c
  7597  018EDA  6ED9               	movwf	fsr2l,c
  7598  018EDC  500C               	movf	(btemp+11)^0,w,c
  7599  018EDE  200A               	addwfc	(btemp+9)^0,w,c
  7600  018EE0  6EDA               	movwf	fsr2h,c
  7601  018EE2  0060  F007  FFDF   	movff	btemp,indf2
  7602                           
  7603                           ;daq.c: 366:  } while (++x < y);
  7604                           ;stkvar	_y @ sp[(-7)+4]
  7605  018EE8  0EFD               	movlw	-3
  7606  018EEA  006F FF8C  F00B    	movff	plusw1,btemp+10
  7607  018EF0  0EFE               	movlw	-2
  7608  018EF2  006F FF8C  F00C    	movff	plusw1,btemp+11
  7609                           
  7610                           ;stkvar	_x @ sp[(-7)+0]
  7611  018EF8  0EF9               	movlw	-7
  7612  018EFA  50E3               	movf	plusw1,w,c
  7613  018EFC  0F01               	addlw	1
  7614  018EFE  6E01               	movwf	btemp^0,c
  7615  018F00  0EF9               	movlw	-7
  7616  018F02  0060  F007  FFE3   	movff	btemp,plusw1
  7617  018F08  6A01               	clrf	btemp^0,c
  7618  018F0A  0EFA               	movlw	-6
  7619  018F0C  50E3               	movf	plusw1,w,c
  7620  018F0E  2001               	addwfc	btemp^0,w,c
  7621  018F10  6E01               	movwf	btemp^0,c
  7622  018F12  0EFA               	movlw	-6
  7623  018F14  0060  F007  FFE3   	movff	btemp,plusw1
  7624  018F1A  0EF9               	movlw	-7
  7625  018F1C  006F FF8C  F009    	movff	plusw1,btemp+8
  7626  018F22  0EFA               	movlw	-6
  7627  018F24  006F FF8C  F00A    	movff	plusw1,btemp+9
  7628  018F2A  500B               	movf	(btemp+10)^0,w,c
  7629  018F2C  5C09               	subwf	(btemp+8)^0,w,c
  7630  018F2E  500C               	movf	(btemp+11)^0,w,c
  7631  018F30  580A               	subwfb	(btemp+9)^0,w,c
  7632  018F32  A0D8               	btfss	status,0,c
  7633  018F34  D7B7               	goto	l11922
  7634                           
  7635                           ;daq.c: 367:  crcVal_save = r_cal.crc;
  7636                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  7637  018F36  0EFF               	movlw	-1
  7638  018F38  0060  FB2F  FFE3   	movff	_r_cal+56,plusw1
  7639                           
  7640                           ;daq.c: 368:  r_cal.crc = 0x42;
  7641  018F3E  0E42               	movlw	66
  7642  018F40  0102               	movlb	2	; () banked
  7643  018F42  6FCB               	movwf	(_r_cal+56)& (0+255),b
  7644                           
  7645                           ; BSR set to: 2
  7646                           ;daq.c: 370:  if (r_cal.checkmark == 0x1957) {
  7647  018F44  0E57               	movlw	87
  7648  018F46  19C9               	xorwf	(_r_cal+54)& (0+255),w,b
  7649  018F48  E161               	bnz	l11942
  7650  018F4A  0E19               	movlw	25
  7651  018F4C  19CA               	xorwf	(_r_cal+55)& (0+255),w,b
  7652  018F4E  A4D8               	btfss	status,2,c
  7653  018F50  D05D               	goto	u10960
  7654                           
  7655                           ; BSR set to: 2
  7656                           ;daq.c: 371:   x = 0;
  7657                           ;stkvar	_x @ sp[(-7)+0]
  7658  018F52  0EF9               	movlw	-7
  7659  018F54  6AE3               	clrf	plusw1,c
  7660  018F56  0EFA               	movlw	-6
  7661  018F58  6AE3               	clrf	plusw1,c
  7662  018F5A                     l11934:
  7663                           
  7664                           ;daq.c: 374:    CRC_8BitDataWrite(r_cal_ptr[x]);
  7665                           ;stkvar	_x @ sp[(-7)+0]
  7666  018F5A  0EF9               	movlw	-7
  7667  018F5C  006F FF8C  F00B    	movff	plusw1,btemp+10
  7668  018F62  0EFA               	movlw	-6
  7669  018F64  006F FF8C  F00C    	movff	plusw1,btemp+11
  7670                           
  7671                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  7672  018F6A  0EFB               	movlw	-5
  7673  018F6C  006F FF8C  F009    	movff	plusw1,btemp+8
  7674  018F72  0EFC               	movlw	-4
  7675  018F74  006F FF8C  F00A    	movff	plusw1,btemp+9
  7676  018F7A  500B               	movf	(btemp+10)^0,w,c
  7677  018F7C  2409               	addwf	(btemp+8)^0,w,c
  7678  018F7E  6ED9               	movwf	fsr2l,c
  7679  018F80  500C               	movf	(btemp+11)^0,w,c
  7680  018F82  200A               	addwfc	(btemp+9)^0,w,c
  7681  018F84  6EDA               	movwf	fsr2h,c
  7682  018F86  50DF               	movf	indf2,w,c
  7683  018F88  6EE6               	movwf	postinc1,c
  7684  018F8A  EC57  F0E9         	call	_CRC_8BitDataWrite	;wreg free
  7685  018F8E                     l11936:
  7686  018F8E  EC79  F0E9         	call	_CRC_IsBusy	;wreg free
  7687  018F92  5001               	movf	btemp^0,w,c
  7688  018F94  A4D8               	btfss	status,2,c
  7689  018F96  D7FB               	goto	l11936
  7690                           
  7691                           ;daq.c: 376:   } while (++x < y);
  7692                           ;stkvar	_y @ sp[(-7)+4]
  7693  018F98  0EFD               	movlw	-3
  7694  018F9A  006F FF8C  F00B    	movff	plusw1,btemp+10
  7695  018FA0  0EFE               	movlw	-2
  7696  018FA2  006F FF8C  F00C    	movff	plusw1,btemp+11
  7697                           
  7698                           ;stkvar	_x @ sp[(-7)+0]
  7699  018FA8  0EF9               	movlw	-7
  7700  018FAA  50E3               	movf	plusw1,w,c
  7701  018FAC  0F01               	addlw	1
  7702  018FAE  6E01               	movwf	btemp^0,c
  7703  018FB0  0EF9               	movlw	-7
  7704  018FB2  0060  F007  FFE3   	movff	btemp,plusw1
  7705  018FB8  6A01               	clrf	btemp^0,c
  7706  018FBA  0EFA               	movlw	-6
  7707  018FBC  50E3               	movf	plusw1,w,c
  7708  018FBE  2001               	addwfc	btemp^0,w,c
  7709  018FC0  6E01               	movwf	btemp^0,c
  7710  018FC2  0EFA               	movlw	-6
  7711  018FC4  0060  F007  FFE3   	movff	btemp,plusw1
  7712  018FCA  0EF9               	movlw	-7
  7713  018FCC  006F FF8C  F009    	movff	plusw1,btemp+8
  7714  018FD2  0EFA               	movlw	-6
  7715  018FD4  006F FF8C  F00A    	movff	plusw1,btemp+9
  7716  018FDA  500B               	movf	(btemp+10)^0,w,c
  7717  018FDC  5C09               	subwf	(btemp+8)^0,w,c
  7718  018FDE  500C               	movf	(btemp+11)^0,w,c
  7719  018FE0  580A               	subwfb	(btemp+9)^0,w,c
  7720  018FE2  A0D8               	btfss	status,0,c
  7721  018FE4  D7BA               	goto	l11934
  7722                           
  7723                           ;daq.c: 377:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  7724  018FE6  0E00               	movlw	0
  7725  018FE8  6EE6               	movwf	postinc1,c
  7726  018FEA  0E00               	movlw	0
  7727  018FEC  6EE6               	movwf	postinc1,c
  7728  018FEE  0E00               	movlw	0
  7729  018FF0  6EE6               	movwf	postinc1,c
  7730  018FF2  EC0B  F0CC         	call	_CRC_CalculatedResultGet	;wreg free
  7731                           
  7732                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  7733  018FF6  0EFF               	movlw	-1
  7734  018FF8  50E3               	movf	plusw1,w,c
  7735  018FFA  6E0B               	movwf	(btemp+10)^0,c
  7736  018FFC  6A0C               	clrf	(btemp+11)^0,c
  7737  018FFE  500B               	movf	(btemp+10)^0,w,c
  7738  019000  1801               	xorwf	btemp^0,w,c
  7739  019002  E104               	bnz	u10960
  7740  019004  500C               	movf	(btemp+11)^0,w,c
  7741  019006  1802               	xorwf	(btemp+1)^0,w,c
  7742  019008  B4D8               	btfsc	status,2,c
  7743  01900A  D002               	goto	l11950
  7744  01900C                     u10960:
  7745  01900C                     l11942:
  7746                           
  7747                           ;daq.c: 378:    return 0;
  7748  01900C  0E00               	movlw	0
  7749  01900E  D001               	goto	L4
  7750  019010                     l11950:
  7751                           
  7752                           ;daq.c: 382:  return 1;
  7753  019010  0E01               	movlw	1
  7754  019012                     L4:
  7755  019012  6E01               	movwf	btemp^0,c
  7756                           
  7757                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7758  019014  0EF9               	movlw	249
  7759  019016  26E1               	addwf	fsr1l,f,c
  7760  019018  0EFF               	movlw	255
  7761  01901A  22E2               	addwfc	fsr1h,f,c
  7762  01901C  0012               	return		;funcret
  7763  01901E                     __end_of_read_cal_data:
  7764                           	opt callstack 0
  7765                           
  7766 ;; *************** function _DATAEE_ReadByte *****************
  7767 ;; Defined at:
  7768 ;;		line 194 in file "mcc_generated_files/memory.c"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;  bAdd            2  [STACK] unsigned short 
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;		None
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  1  [STACK] unsigned char 
  7775 ;; Registers used:
  7776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  7777 ;; Tracked objects:
  7778 ;;		On entry : 0/39
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7786 ;;Total ram usage:        0 bytes
  7787 ;; Hardware stack levels used:    1
  7788 ;; Hardware stack levels required when called:   15
  7789 ;; This function calls:
  7790 ;;		Nothing
  7791 ;; This function is called by:
  7792 ;;		_read_cal_data
  7793 ;; This function uses a reentrant model
  7794 ;;
  7795                           
  7796                           	psect	text11
  7797  01CBA0                     __ptext11:
  7798                           	opt callstack 0
  7799  01CBA0                     _DATAEE_ReadByte:
  7800                           	opt callstack 14
  7801                           
  7802                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  7803                           ;stkvar	_bAdd @ sp[(0)+-2]
  7804                           
  7805                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7806                           ;incstack = 0
  7807  01CBA0  0EFF               	movlw	255
  7808  01CBA2  24E1               	addwf	fsr1l,w,c
  7809  01CBA4  6ED9               	movwf	fsr2l,c
  7810  01CBA6  0EFF               	movlw	255
  7811  01CBA8  20E2               	addwfc	fsr1h,w,c
  7812  01CBAA  6EDA               	movwf	fsr2h,c
  7813  01CBAC  50DF               	movf	indf2,w,c
  7814  01CBAE  0B03               	andlw	3
  7815  01CBB0  0139               	movlb	57	; () banked
  7816  01CBB2  6FE1               	movwf	225,b	;volatile
  7817                           
  7818                           ; BSR set to: 57
  7819                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  7820                           ;stkvar	_bAdd @ sp[(0)+-2]
  7821  01CBB4  0EFE               	movlw	-2
  7822  01CBB6  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  7823                           
  7824                           ; BSR set to: 57
  7825                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  7826  01CBBC  0E3F               	movlw	-193
  7827  01CBBE  17E5               	andwf	229,f,b	;volsfr
  7828                           
  7829                           ; BSR set to: 57
  7830                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  7831  01CBC0  81E5               	bsf	229,0,b	;volsfr
  7832                           
  7833                           ; BSR set to: 57
  7834                           ;mcc_generated_files/memory.c: 200:     __nop();
  7835  01CBC2  F000               	nop	
  7836                           
  7837                           ;mcc_generated_files/memory.c: 201:     __nop();
  7838  01CBC4  F000               	nop	
  7839                           
  7840                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  7841  01CBC6  006E F78C  F001    	movff	14819,btemp	;volatile
  7842                           
  7843                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  7844  01CBCC  52E5               	movf	postdec1,f,c
  7845  01CBCE  52E5               	movf	postdec1,f,c
  7846  01CBD0  0012               	return		;funcret
  7847  01CBD2                     __end_of_DATAEE_ReadByte:
  7848                           	opt callstack 0
  7849                           
  7850 ;; *************** function _init_port_dma *****************
  7851 ;; Defined at:
  7852 ;;		line 104 in file "eadog.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;		None
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;		None
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  1  [STACK] void 
  7859 ;; Registers used:
  7860 ;;		wreg, status,2
  7861 ;; Tracked objects:
  7862 ;;		On entry : 0/1
  7863 ;;		On exit  : 3F/3B
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7870 ;;Total ram usage:        0 bytes
  7871 ;; Hardware stack levels used:    1
  7872 ;; Hardware stack levels required when called:   15
  7873 ;; This function calls:
  7874 ;;		Nothing
  7875 ;; This function is called by:
  7876 ;;		_main
  7877 ;; This function uses a reentrant model
  7878 ;;
  7879                           
  7880                           	psect	text12
  7881  01CBD2                     __ptext12:
  7882                           	opt callstack 0
  7883  01CBD2                     _init_port_dma:
  7884                           	opt callstack 15
  7885                           
  7886                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  7887                           
  7888                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7889                           ;incstack = 0
  7890  01CBD2  0E3F               	movlw	-193
  7891  01CBD4  013B               	movlb	59	; () banked
  7892  01CBD6  17DD               	andwf	221,f,b	;volatile
  7893                           
  7894                           ; BSR set to: 59
  7895                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  7896  01CBD8  9BDD               	bcf	221,5,b	;volatile
  7897                           
  7898                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  7899  01CBDA  51DD               	movf	221,w,b	;volatile
  7900  01CBDC  0BF9               	andlw	-7
  7901  01CBDE  0902               	iorlw	2
  7902  01CBE0  6FDD               	movwf	221,b	;volatile
  7903                           
  7904                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  7905  01CBE2  0EE7               	movlw	-25
  7906  01CBE4  17DD               	andwf	221,f,b	;volatile
  7907                           
  7908                           ; BSR set to: 59
  7909                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  7910  01CBE6  81DD               	bsf	221,0,b	;volatile
  7911                           
  7912                           ; BSR set to: 59
  7913                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  7914  01CBE8  9DDC               	bcf	220,6,b	;volatile
  7915                           
  7916                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  7917  01CBEA  0E3D               	movlw	61
  7918  01CBEC  6FD1               	movwf	209,b	;volatile
  7919  01CBEE  0EEA               	movlw	234
  7920  01CBF0  6FD0               	movwf	208,b	;volatile
  7921                           
  7922                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  7923  01CBF2  0EFF               	movlw	low _port_data
  7924  01CBF4  6FD9               	movwf	217,b	;volatile
  7925  01CBF6  0E05               	movlw	high _port_data
  7926  01CBF8  6FDA               	movwf	218,b	;volatile
  7927  01CBFA  0E00               	movlw	low (_port_data shr (0+16))
  7928  01CBFC  6FDB               	movwf	219,b	;volatile
  7929                           
  7930                           ; BSR set to: 59
  7931                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  7932  01CBFE  9BDC               	bcf	220,5,b	;volatile
  7933                           
  7934                           ; BSR set to: 59
  7935                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7936  01CC00  0012               	return		;funcret
  7937  01CC02                     __end_of_init_port_dma:
  7938                           	opt callstack 0
  7939                           
  7940 ;; *************** function _init_display *****************
  7941 ;; Defined at:
  7942 ;;		line 38 in file "eadog.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;		None
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;		None
  7947 ;; Return value:  Size  Location     Type
  7948 ;;                  1  [STACK] void 
  7949 ;; Registers used:
  7950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7951 ;; Tracked objects:
  7952 ;;		On entry : 3F/3B
  7953 ;;		On exit  : 3F/3D
  7954 ;;		Unchanged: 0/0
  7955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7960 ;;Total ram usage:        0 bytes
  7961 ;; Hardware stack levels used:    1
  7962 ;; Hardware stack levels required when called:   17
  7963 ;; This function calls:
  7964 ;;		_ringBufS_init
  7965 ;;		_send_lcd_cmd
  7966 ;;		_send_lcd_cmd_long
  7967 ;;		_send_lcd_data
  7968 ;;		_wdtdelay
  7969 ;; This function is called by:
  7970 ;;		_main
  7971 ;; This function uses a reentrant model
  7972 ;;
  7973                           
  7974                           	psect	text13
  7975  01AD86                     __ptext13:
  7976                           	opt callstack 0
  7977  01AD86                     _init_display:
  7978                           	opt callstack 13
  7979                           
  7980                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  7981                           
  7982                           ; BSR set to: 59
  7983                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7984                           ;incstack = 0
  7985  01AD86  0E94               	movlw	low _ring_buf1
  7986  01AD88  0101               	movlb	1	; () banked
  7987  01AD8A  6FD6               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7988  01AD8C  0E03               	movlw	high _ring_buf1
  7989  01AD8E  6FD7               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7990                           
  7991                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  7992  01AD90  0E00               	movlw	low _ring_buf2
  7993  01AD92  6FD4               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7994  01AD94  0E04               	movlw	high _ring_buf2
  7995  01AD96  6FD5               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7996                           
  7997                           ; BSR set to: 1
  7998                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  7999  01AD98  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
  8000  01AD9E  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
  8001  01ADA4  ECB7  F0E6         	call	_ringBufS_init	;wreg free
  8002                           
  8003                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  8004  01ADA8  0060  F753  FFE6   	movff	_spi_link+4,postinc1
  8005  01ADAE  0060  F757  FFE6   	movff	_spi_link+5,postinc1
  8006  01ADB4  ECB7  F0E6         	call	_ringBufS_init	;wreg free
  8007                           
  8008                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  8009  01ADB8  84BE               	bsf	190,2,c	;volatile
  8010                           
  8011                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  8012  01ADBA  013D               	movlb	61	; () banked
  8013  01ADBC  9F14               	bcf	20,7,b	;volatile
  8014                           
  8015                           ; BSR set to: 61
  8016                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  8017  01ADBE  0E20               	movlw	32
  8018  01ADC0  6F15               	movwf	21,b	;volatile
  8019                           
  8020                           ; BSR set to: 61
  8021                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  8022  01ADC2  0E03               	movlw	3
  8023  01ADC4  6F16               	movwf	22,b	;volatile
  8024                           
  8025                           ; BSR set to: 61
  8026                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  8027  01ADC6  0E04               	movlw	4
  8028  01ADC8  6F19               	movwf	25,b	;volatile
  8029                           
  8030                           ; BSR set to: 61
  8031                           ;eadog.c: 55:  SPI1CLK = 0x02;
  8032  01ADCA  0E02               	movlw	2
  8033  01ADCC  6F1C               	movwf	28,b	;volatile
  8034                           
  8035                           ; BSR set to: 61
  8036                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  8037  01ADCE  0E83               	movlw	131
  8038  01ADD0  6F14               	movwf	20,b	;volatile
  8039                           
  8040                           ; BSR set to: 61
  8041                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  8042  01ADD2  8F14               	bsf	20,7,b	;volatile
  8043                           
  8044                           ; BSR set to: 61
  8045                           ;eadog.c: 60:  wdtdelay(350000);
  8046  01ADD4  0E30               	movlw	48
  8047  01ADD6  6EE6               	movwf	postinc1,c
  8048  01ADD8  0E57               	movlw	87
  8049  01ADDA  6EE6               	movwf	postinc1,c
  8050  01ADDC  0E05               	movlw	5
  8051  01ADDE  6EE6               	movwf	postinc1,c
  8052  01ADE0  0E00               	movlw	0
  8053  01ADE2  6EE6               	movwf	postinc1,c
  8054  01ADE4  ECE4  F0E1         	call	_wdtdelay	;wreg free
  8055                           
  8056                           ; BSR set to: 0
  8057                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  8058  01ADE8  0E46               	movlw	70
  8059  01ADEA  6EE6               	movwf	postinc1,c
  8060  01ADEC  EC1C  F0E4         	call	_send_lcd_cmd_long	;wreg free
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  8064  01ADF0  0E41               	movlw	65
  8065  01ADF2  6EE6               	movwf	postinc1,c
  8066  01ADF4  EC3C  F0E4         	call	_send_lcd_cmd	;wreg free
  8067                           
  8068                           ; BSR set to: 0
  8069                           ;eadog.c: 63:  wdtdelay(80);
  8070  01ADF8  0E50               	movlw	80
  8071  01ADFA  6EE6               	movwf	postinc1,c
  8072  01ADFC  0E00               	movlw	0
  8073  01ADFE  6EE6               	movwf	postinc1,c
  8074  01AE00  0E00               	movlw	0
  8075  01AE02  6EE6               	movwf	postinc1,c
  8076  01AE04  0E00               	movlw	0
  8077  01AE06  6EE6               	movwf	postinc1,c
  8078  01AE08  ECE4  F0E1         	call	_wdtdelay	;wreg free
  8079                           
  8080                           ; BSR set to: 0
  8081                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  8082  01AE0C  0E53               	movlw	83
  8083  01AE0E  6EE6               	movwf	postinc1,c
  8084  01AE10  EC3C  F0E4         	call	_send_lcd_cmd	;wreg free
  8085                           
  8086                           ; BSR set to: 0
  8087                           ;eadog.c: 65:  send_lcd_data(2);
  8088  01AE14  0E02               	movlw	2
  8089  01AE16  6EE6               	movwf	postinc1,c
  8090  01AE18  ECE4  F0E7         	call	_send_lcd_data	;wreg free
  8091                           
  8092                           ; BSR set to: 0
  8093                           ;eadog.c: 66:  wdtdelay(80);
  8094  01AE1C  0E50               	movlw	80
  8095  01AE1E  6EE6               	movwf	postinc1,c
  8096  01AE20  0E00               	movlw	0
  8097  01AE22  6EE6               	movwf	postinc1,c
  8098  01AE24  0E00               	movlw	0
  8099  01AE26  6EE6               	movwf	postinc1,c
  8100  01AE28  0E00               	movlw	0
  8101  01AE2A  6EE6               	movwf	postinc1,c
  8102  01AE2C  ECE4  F0E1         	call	_wdtdelay	;wreg free
  8103                           
  8104                           ; BSR set to: 0
  8105                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  8106  01AE30  0E51               	movlw	81
  8107  01AE32  6EE6               	movwf	postinc1,c
  8108  01AE34  EC1C  F0E4         	call	_send_lcd_cmd_long	;wreg free
  8109                           
  8110                           ; BSR set to: 0
  8111                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  8112  01AE38  013D               	movlb	61	; () banked
  8113  01AE3A  9F14               	bcf	20,7,b	;volatile
  8114                           
  8115                           ; BSR set to: 61
  8116                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  8117  01AE3C  0E02               	movlw	2
  8118  01AE3E  6F16               	movwf	22,b	;volatile
  8119                           
  8120                           ; BSR set to: 61
  8121                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  8122  01AE40  8F14               	bsf	20,7,b	;volatile
  8123                           
  8124                           ; BSR set to: 61
  8125                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  8126  01AE42  931A               	bcf	26,1,b	;volatile
  8127                           
  8128                           ; BSR set to: 61
  8129                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  8130  01AE44  0E3F               	movlw	-193
  8131  01AE46  013B               	movlb	59	; () banked
  8132  01AE48  17FD               	andwf	253,f,b	;volatile
  8133                           
  8134                           ; BSR set to: 59
  8135                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  8136  01AE4A  9BFD               	bcf	253,5,b	;volatile
  8137                           
  8138                           ; BSR set to: 59
  8139                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  8140  01AE4C  51FD               	movf	253,w,b	;volatile
  8141  01AE4E  0BF9               	andlw	-7
  8142  01AE50  0902               	iorlw	2
  8143  01AE52  6FFD               	movwf	253,b	;volatile
  8144                           
  8145                           ; BSR set to: 59
  8146                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  8147  01AE54  0EE7               	movlw	-25
  8148  01AE56  17FD               	andwf	253,f,b	;volatile
  8149                           
  8150                           ; BSR set to: 59
  8151                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  8152  01AE58  81FD               	bsf	253,0,b	;volatile
  8153                           
  8154                           ; BSR set to: 59
  8155                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  8156  01AE5A  0E94               	movlw	low _ring_buf1
  8157  01AE5C  6FF9               	movwf	249,b	;volatile
  8158  01AE5E  0E03               	movlw	high _ring_buf1
  8159  01AE60  6FFA               	movwf	250,b	;volatile
  8160  01AE62  0E00               	movlw	low (_ring_buf1 shr (0+16))
  8161  01AE64  6FFB               	movwf	251,b	;volatile
  8162                           
  8163                           ; BSR set to: 59
  8164                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  8165  01AE66  9BFC               	bcf	252,5,b	;volatile
  8166                           
  8167                           ; BSR set to: 59
  8168                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  8169  01AE68  013D               	movlb	61	; () banked
  8170  01AE6A  831A               	bsf	26,1,b	;volatile
  8171                           
  8172                           ; BSR set to: 61
  8173                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  8174  01AE6C  94BE               	bcf	190,2,c	;volatile
  8175                           
  8176                           ; BSR set to: 61
  8177                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8178  01AE6E  0012               	return		;funcret
  8179  01AE70                     __end_of_init_display:
  8180                           	opt callstack 0
  8181                           
  8182 ;; *************** function _send_lcd_data *****************
  8183 ;; Defined at:
  8184 ;;		line 123 in file "eadog.c"
  8185 ;; Parameters:    Size  Location     Type
  8186 ;;  data            1  [STACK] const unsigned char 
  8187 ;; Auto vars:     Size  Location     Type
  8188 ;;		None
  8189 ;; Return value:  Size  Location     Type
  8190 ;;                  1  [STACK] void 
  8191 ;; Registers used:
  8192 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8193 ;; Tracked objects:
  8194 ;;		On entry : 3F/0
  8195 ;;		On exit  : 3F/0
  8196 ;;		Unchanged: 0/0
  8197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8202 ;;Total ram usage:        0 bytes
  8203 ;; Hardware stack levels used:    1
  8204 ;; Hardware stack levels required when called:   16
  8205 ;; This function calls:
  8206 ;;		_SPI1_Exchange8bit
  8207 ;;		_wdtdelay
  8208 ;; This function is called by:
  8209 ;;		_init_display
  8210 ;; This function uses a reentrant model
  8211 ;;
  8212                           
  8213                           	psect	text14
  8214  01CFC8                     __ptext14:
  8215                           	opt callstack 0
  8216  01CFC8                     _send_lcd_data:
  8217                           	opt callstack 13
  8218                           
  8219                           ; BSR set to: 61
  8220                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8221                           ;incstack = 0
  8222                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  8223  01CFC8  94BC               	bcf	188,2,c	;volatile
  8224                           
  8225                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  8226                           ;stkvar	_data @ sp[(0)+-1]
  8227  01CFCA  0EFF               	movlw	-1
  8228  01CFCC  50E3               	movf	plusw1,w,c
  8229  01CFCE  6EE6               	movwf	postinc1,c
  8230  01CFD0  ECA3  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8231                           
  8232                           ; BSR set to: 57
  8233                           ;eadog.c: 127:  wdtdelay(8);
  8234  01CFD4  0E08               	movlw	8
  8235  01CFD6  6EE6               	movwf	postinc1,c
  8236  01CFD8  0E00               	movlw	0
  8237  01CFDA  6EE6               	movwf	postinc1,c
  8238  01CFDC  0E00               	movlw	0
  8239  01CFDE  6EE6               	movwf	postinc1,c
  8240  01CFE0  0E00               	movlw	0
  8241  01CFE2  6EE6               	movwf	postinc1,c
  8242  01CFE4  ECE4  F0E1         	call	_wdtdelay	;wreg free
  8243                           
  8244                           ; BSR set to: 0
  8245                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  8246  01CFE8  52E5               	movf	postdec1,f,c
  8247  01CFEA  0012               	return		;funcret
  8248  01CFEC                     __end_of_send_lcd_data:
  8249                           	opt callstack 0
  8250                           
  8251 ;; *************** function _send_lcd_cmd_long *****************
  8252 ;; Defined at:
  8253 ;;		line 139 in file "eadog.c"
  8254 ;; Parameters:    Size  Location     Type
  8255 ;;  cmd             1  [STACK] const unsigned char 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;		None
  8258 ;; Return value:  Size  Location     Type
  8259 ;;                  1  [STACK] void 
  8260 ;; Registers used:
  8261 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8262 ;; Tracked objects:
  8263 ;;		On entry : 3F/0
  8264 ;;		On exit  : 3F/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8271 ;;Total ram usage:        0 bytes
  8272 ;; Hardware stack levels used:    1
  8273 ;; Hardware stack levels required when called:   16
  8274 ;; This function calls:
  8275 ;;		_SPI1_Exchange8bit
  8276 ;;		_wdtdelay
  8277 ;; This function is called by:
  8278 ;;		_init_display
  8279 ;; This function uses a reentrant model
  8280 ;;
  8281                           
  8282                           	psect	text15
  8283  01C838                     __ptext15:
  8284                           	opt callstack 0
  8285  01C838                     _send_lcd_cmd_long:
  8286                           	opt callstack 13
  8287                           
  8288                           ; BSR set to: 0
  8289                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8290                           ;incstack = 0
  8291                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  8292  01C838  94BC               	bcf	188,2,c	;volatile
  8293                           
  8294                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  8295  01C83A  0EFE               	movlw	254
  8296  01C83C  6EE6               	movwf	postinc1,c
  8297  01C83E  ECA3  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8298                           
  8299                           ; BSR set to: 57
  8300                           ;eadog.c: 143:  wdtdelay(8);
  8301  01C842  0E08               	movlw	8
  8302  01C844  6EE6               	movwf	postinc1,c
  8303  01C846  0E00               	movlw	0
  8304  01C848  6EE6               	movwf	postinc1,c
  8305  01C84A  0E00               	movlw	0
  8306  01C84C  6EE6               	movwf	postinc1,c
  8307  01C84E  0E00               	movlw	0
  8308  01C850  6EE6               	movwf	postinc1,c
  8309  01C852  ECE4  F0E1         	call	_wdtdelay	;wreg free
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  8313                           ;stkvar	_cmd @ sp[(0)+-1]
  8314  01C856  0EFF               	movlw	-1
  8315  01C858  50E3               	movf	plusw1,w,c
  8316  01C85A  6EE6               	movwf	postinc1,c
  8317  01C85C  ECA3  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8318                           
  8319                           ;eadog.c: 145:  wdtdelay(800);
  8320  01C860  0E20               	movlw	32
  8321  01C862  6EE6               	movwf	postinc1,c
  8322  01C864  0E03               	movlw	3
  8323  01C866  6EE6               	movwf	postinc1,c
  8324  01C868  0E00               	movlw	0
  8325  01C86A  6EE6               	movwf	postinc1,c
  8326  01C86C  0E00               	movlw	0
  8327  01C86E  6EE6               	movwf	postinc1,c
  8328  01C870  ECE4  F0E1         	call	_wdtdelay	;wreg free
  8329                           
  8330                           ; BSR set to: 0
  8331                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8332  01C874  52E5               	movf	postdec1,f,c
  8333  01C876  0012               	return		;funcret
  8334  01C878                     __end_of_send_lcd_cmd_long:
  8335                           	opt callstack 0
  8336                           
  8337 ;; *************** function _send_lcd_cmd *****************
  8338 ;; Defined at:
  8339 ;;		line 130 in file "eadog.c"
  8340 ;; Parameters:    Size  Location     Type
  8341 ;;  cmd             1  [STACK] const unsigned char 
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;		None
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  1  [STACK] void 
  8346 ;; Registers used:
  8347 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8348 ;; Tracked objects:
  8349 ;;		On entry : 3F/0
  8350 ;;		On exit  : 3F/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8357 ;;Total ram usage:        0 bytes
  8358 ;; Hardware stack levels used:    1
  8359 ;; Hardware stack levels required when called:   16
  8360 ;; This function calls:
  8361 ;;		_SPI1_Exchange8bit
  8362 ;;		_wdtdelay
  8363 ;; This function is called by:
  8364 ;;		_init_display
  8365 ;; This function uses a reentrant model
  8366 ;;
  8367                           
  8368                           	psect	text16
  8369  01C878                     __ptext16:
  8370                           	opt callstack 0
  8371  01C878                     _send_lcd_cmd:
  8372                           	opt callstack 13
  8373                           
  8374                           ; BSR set to: 0
  8375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8376                           ;incstack = 0
  8377                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  8378  01C878  94BC               	bcf	188,2,c	;volatile
  8379                           
  8380                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  8381  01C87A  0EFE               	movlw	254
  8382  01C87C  6EE6               	movwf	postinc1,c
  8383  01C87E  ECA3  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8384                           
  8385                           ; BSR set to: 57
  8386                           ;eadog.c: 134:  wdtdelay(8);
  8387  01C882  0E08               	movlw	8
  8388  01C884  6EE6               	movwf	postinc1,c
  8389  01C886  0E00               	movlw	0
  8390  01C888  6EE6               	movwf	postinc1,c
  8391  01C88A  0E00               	movlw	0
  8392  01C88C  6EE6               	movwf	postinc1,c
  8393  01C88E  0E00               	movlw	0
  8394  01C890  6EE6               	movwf	postinc1,c
  8395  01C892  ECE4  F0E1         	call	_wdtdelay	;wreg free
  8396                           
  8397                           ; BSR set to: 0
  8398                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  8399                           ;stkvar	_cmd @ sp[(0)+-1]
  8400  01C896  0EFF               	movlw	-1
  8401  01C898  50E3               	movf	plusw1,w,c
  8402  01C89A  6EE6               	movwf	postinc1,c
  8403  01C89C  ECA3  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8404                           
  8405                           ;eadog.c: 136:  wdtdelay(8);
  8406  01C8A0  0E08               	movlw	8
  8407  01C8A2  6EE6               	movwf	postinc1,c
  8408  01C8A4  0E00               	movlw	0
  8409  01C8A6  6EE6               	movwf	postinc1,c
  8410  01C8A8  0E00               	movlw	0
  8411  01C8AA  6EE6               	movwf	postinc1,c
  8412  01C8AC  0E00               	movlw	0
  8413  01C8AE  6EE6               	movwf	postinc1,c
  8414  01C8B0  ECE4  F0E1         	call	_wdtdelay	;wreg free
  8415                           
  8416                           ; BSR set to: 0
  8417                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  8418  01C8B4  52E5               	movf	postdec1,f,c
  8419  01C8B6  0012               	return		;funcret
  8420  01C8B8                     __end_of_send_lcd_cmd:
  8421                           	opt callstack 0
  8422                           
  8423 ;; *************** function _SPI1_Exchange8bit *****************
  8424 ;; Defined at:
  8425 ;;		line 79 in file "mcc_generated_files/spi1.c"
  8426 ;; Parameters:    Size  Location     Type
  8427 ;;  data            1  [STACK] unsigned char 
  8428 ;; Auto vars:     Size  Location     Type
  8429 ;;		None
  8430 ;; Return value:  Size  Location     Type
  8431 ;;                  1  [STACK] unsigned char 
  8432 ;; Registers used:
  8433 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  8434 ;; Tracked objects:
  8435 ;;		On entry : 0/0
  8436 ;;		On exit  : 3F/39
  8437 ;;		Unchanged: 0/0
  8438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8443 ;;Total ram usage:        0 bytes
  8444 ;; Hardware stack levels used:    1
  8445 ;; Hardware stack levels required when called:   15
  8446 ;; This function calls:
  8447 ;;		Nothing
  8448 ;; This function is called by:
  8449 ;;		_send_lcd_data
  8450 ;;		_send_lcd_cmd
  8451 ;;		_send_lcd_cmd_long
  8452 ;;		_set_dac
  8453 ;; This function uses a reentrant model
  8454 ;;
  8455                           
  8456                           	psect	text17
  8457  01D146                     __ptext17:
  8458                           	opt callstack 0
  8459  01D146                     _SPI1_Exchange8bit:
  8460                           	opt callstack 14
  8461                           
  8462                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  8463                           
  8464                           ; BSR set to: 0
  8465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8466                           ;incstack = 0
  8467  01D146  0E01               	movlw	1
  8468  01D148  013D               	movlb	61	; () banked
  8469  01D14A  6F12               	movwf	18,b	;volatile
  8470                           
  8471                           ; BSR set to: 61
  8472                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  8473                           ;stkvar	_data @ sp[(0)+-1]
  8474  01D14C  0EFF               	movlw	-1
  8475  01D14E  006F FF8F FD11     	movff	plusw1,15633	;volatile
  8476  01D154                     l809:
  8477                           
  8478                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  8479  01D154  0139               	movlb	57	; () banked
  8480  01D156  A9A2               	btfss	162,4,b	;volatile
  8481  01D158  D7FD               	goto	l809
  8482                           
  8483                           ; BSR set to: 57
  8484                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  8485  01D15A  006F F440  F001    	movff	15632,btemp	;volatile
  8486                           
  8487                           ; BSR set to: 57
  8488                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8489  01D160  52E5               	movf	postdec1,f,c
  8490  01D162  0012               	return		;funcret
  8491  01D164                     __end_of_SPI1_Exchange8bit:
  8492                           	opt callstack 0
  8493                           
  8494 ;; *************** function _ringBufS_init *****************
  8495 ;; Defined at:
  8496 ;;		line 22 in file "ringbufs.c"
  8497 ;; Parameters:    Size  Location     Type
  8498 ;;  _this           2  [STACK] PTR volatile struct ring
  8499 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8500 ;; Auto vars:     Size  Location     Type
  8501 ;;		None
  8502 ;; Return value:  Size  Location     Type
  8503 ;;                  1  [STACK] void 
  8504 ;; Registers used:
  8505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8506 ;; Tracked objects:
  8507 ;;		On entry : 0/1
  8508 ;;		On exit  : 0/0
  8509 ;;		Unchanged: 0/0
  8510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8515 ;;Total ram usage:        0 bytes
  8516 ;; Hardware stack levels used:    1
  8517 ;; Hardware stack levels required when called:   16
  8518 ;; This function calls:
  8519 ;;		_memset
  8520 ;; This function is called by:
  8521 ;;		_init_display
  8522 ;; This function uses a reentrant model
  8523 ;;
  8524                           
  8525                           	psect	text18
  8526  01CD6E                     __ptext18:
  8527                           	opt callstack 0
  8528  01CD6E                     _ringBufS_init:
  8529                           	opt callstack 13
  8530                           
  8531                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  8532                           
  8533                           ; BSR set to: 57
  8534                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8535                           ;incstack = 0
  8536  01CD6E  0E43               	movlw	67
  8537  01CD70  6EE6               	movwf	postinc1,c
  8538  01CD72  0E00               	movlw	0
  8539  01CD74  6EE6               	movwf	postinc1,c
  8540  01CD76  0E00               	movlw	0
  8541  01CD78  6EE6               	movwf	postinc1,c
  8542  01CD7A  0E00               	movlw	0
  8543  01CD7C  6EE6               	movwf	postinc1,c
  8544                           
  8545                           ;stkvar	__this @ sp[(-4)+-2]
  8546  01CD7E  0EFA               	movlw	-6
  8547  01CD80  006F FF8F FFE6     	movff	plusw1,postinc1
  8548  01CD86  006F FF8F FFE6     	movff	plusw1,postinc1
  8549  01CD8C  EC07  F0BA         	call	_memset	;wreg free
  8550                           
  8551                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8552  01CD90  52E5               	movf	postdec1,f,c
  8553  01CD92  52E5               	movf	postdec1,f,c
  8554  01CD94  0012               	return		;funcret
  8555  01CD96                     __end_of_ringBufS_init:
  8556                           	opt callstack 0
  8557                           
  8558 ;; *************** function _init_bsoc *****************
  8559 ;; Defined at:
  8560 ;;		line 110 in file "bsoc.c"
  8561 ;; Parameters:    Size  Location     Type
  8562 ;;		None
  8563 ;; Auto vars:     Size  Location     Type
  8564 ;;		None
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  1  [STACK] void 
  8567 ;; Registers used:
  8568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8569 ;; Tracked objects:
  8570 ;;		On entry : 0/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8578 ;;Total ram usage:        0 bytes
  8579 ;; Hardware stack levels used:    1
  8580 ;; Hardware stack levels required when called:   18
  8581 ;; This function calls:
  8582 ;;		_TMR3_SetInterruptHandler
  8583 ;;		_Volts_to_SOC
  8584 ;;		___fldiv
  8585 ;;		___flmul
  8586 ;;		___fltol
  8587 ;;		___xxtofl
  8588 ;;		_conv_raw_result
  8589 ;; This function is called by:
  8590 ;;		_main
  8591 ;; This function uses a reentrant model
  8592 ;;
  8593                           
  8594                           	psect	text19
  8595  018184                     __ptext19:
  8596                           	opt callstack 0
  8597  018184                     _init_bsoc:
  8598                           	opt callstack 12
  8599                           
  8600                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  8601                           
  8602                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8603                           ;incstack = 0
  8604  018184  0E00               	movlw	0
  8605  018186  6EE6               	movwf	postinc1,c
  8606  018188  0E00               	movlw	0
  8607  01818A  6EE6               	movwf	postinc1,c
  8608  01818C  0E7A               	movlw	122
  8609  01818E  6EE6               	movwf	postinc1,c
  8610  018190  0E44               	movlw	68
  8611  018192  6EE6               	movwf	postinc1,c
  8612  018194  0E00               	movlw	0
  8613  018196  6EE6               	movwf	postinc1,c
  8614  018198  0E04               	movlw	4
  8615  01819A  6EE6               	movwf	postinc1,c
  8616  01819C  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  8617  0181A0  0060  F007  FFE6   	movff	btemp,postinc1
  8618  0181A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8619  0181AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8620  0181B2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8621  0181B8  ECC4  F0CC         	call	___fltol	;wreg free
  8622  0181BC  0060  F007  FFE6   	movff	btemp,postinc1
  8623  0181C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8624  0181C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8625  0181CE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8626  0181D4  0E00               	movlw	0
  8627  0181D6  6EE6               	movwf	postinc1,c
  8628  0181D8  EC2C  F0C6         	call	___xxtofl	;wreg free
  8629  0181DC  0060  F007  FFE6   	movff	btemp,postinc1
  8630  0181E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8631  0181E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8632  0181EE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8633  0181F4  EC6E  F09F         	call	___flmul	;wreg free
  8634  0181F8  0060  F007  FFE6   	movff	btemp,postinc1
  8635  0181FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8636  018204  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8637  01820A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8638  018210  ECC4  F0CC         	call	___fltol	;wreg free
  8639  018214  0060  F007  FFE6   	movff	btemp,postinc1
  8640  01821A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8641  018220  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8642  018226  0060  F013  FFE6   	movff	btemp+3,postinc1
  8643  01822C  EC44  F0D9         	call	_Volts_to_SOC	;wreg free
  8644  018230  0060  F004  F8B5   	movff	btemp,_C+182	;volatile
  8645  018236  0060  F008  F8B6   	movff	btemp+1,_C+183	;volatile
  8646                           
  8647                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  8648  01823C  EE22  F08B         	lfsr	2,_C+140	;volatile
  8649  018240  006F FF7B FFE6     	movff	postinc2,postinc1
  8650  018246  006F FF7B FFE6     	movff	postinc2,postinc1
  8651  01824C  006F FF7B FFE6     	movff	postinc2,postinc1
  8652  018252  006F FF7B FFE6     	movff	postinc2,postinc1
  8653  018258  0E00               	movlw	0
  8654  01825A  6EE6               	movwf	postinc1,c
  8655  01825C  0E00               	movlw	0
  8656  01825E  6EE6               	movwf	postinc1,c
  8657  018260  0EC8               	movlw	200
  8658  018262  6EE6               	movwf	postinc1,c
  8659  018264  0E42               	movlw	66
  8660  018266  6EE6               	movwf	postinc1,c
  8661  018268  0E00               	movlw	0
  8662  01826A  6EE6               	movwf	postinc1,c
  8663  01826C  0E00               	movlw	0
  8664  01826E  6EE6               	movwf	postinc1,c
  8665  018270  0E7A               	movlw	122
  8666  018272  6EE6               	movwf	postinc1,c
  8667  018274  0E44               	movlw	68
  8668  018276  6EE6               	movwf	postinc1,c
  8669  018278  0E00               	movlw	0
  8670  01827A  6EE6               	movwf	postinc1,c
  8671  01827C  0E04               	movlw	4
  8672  01827E  6EE6               	movwf	postinc1,c
  8673  018280  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  8674  018284  0060  F007  FFE6   	movff	btemp,postinc1
  8675  01828A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8676  018290  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8677  018296  0060  F013  FFE6   	movff	btemp+3,postinc1
  8678  01829C  ECC4  F0CC         	call	___fltol	;wreg free
  8679  0182A0  0060  F007  FFE6   	movff	btemp,postinc1
  8680  0182A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8681  0182AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8682  0182B2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8683  0182B8  0E00               	movlw	0
  8684  0182BA  6EE6               	movwf	postinc1,c
  8685  0182BC  EC2C  F0C6         	call	___xxtofl	;wreg free
  8686  0182C0  0060  F007  FFE6   	movff	btemp,postinc1
  8687  0182C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8688  0182CC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8689  0182D2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8690  0182D8  EC6E  F09F         	call	___flmul	;wreg free
  8691  0182DC  0060  F007  FFE6   	movff	btemp,postinc1
  8692  0182E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8693  0182E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8694  0182EE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8695  0182F4  ECC4  F0CC         	call	___fltol	;wreg free
  8696  0182F8  0060  F007  FFE6   	movff	btemp,postinc1
  8697  0182FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8698  018304  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8699  01830A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8700  018310  EC44  F0D9         	call	_Volts_to_SOC	;wreg free
  8701  018314  0060  F004  F00B   	movff	btemp,btemp+10
  8702  01831A  0060  F008  F00C   	movff	btemp+1,btemp+11
  8703  018320  500B               	movf	(btemp+10)^0,w,c
  8704  018322  6E05               	movwf	(btemp+4)^0,c
  8705  018324  500C               	movf	(btemp+11)^0,w,c
  8706  018326  6E06               	movwf	(btemp+5)^0,c
  8707  018328  6A07               	clrf	(btemp+6)^0,c
  8708  01832A  6A08               	clrf	(btemp+7)^0,c
  8709  01832C  0060  F017  FFE6   	movff	btemp+4,postinc1
  8710  018332  0060  F01B  FFE6   	movff	btemp+5,postinc1
  8711  018338  0060  F01F  FFE6   	movff	btemp+6,postinc1
  8712  01833E  0060  F023  FFE6   	movff	btemp+7,postinc1
  8713  018344  0E00               	movlw	0
  8714  018346  6EE6               	movwf	postinc1,c
  8715  018348  EC2C  F0C6         	call	___xxtofl	;wreg free
  8716  01834C  0060  F007  FFE6   	movff	btemp,postinc1
  8717  018352  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8718  018358  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8719  01835E  0060  F013  FFE6   	movff	btemp+3,postinc1
  8720  018364  EC61  F0A7         	call	___fldiv	;wreg free
  8721  018368  0060  F007  FFE6   	movff	btemp,postinc1
  8722  01836E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8723  018374  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8724  01837A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8725  018380  EC6E  F09F         	call	___flmul	;wreg free
  8726  018384  0060  F004  F88F   	movff	btemp,_C+144	;volatile
  8727  01838A  0060  F008  F890   	movff	btemp+1,_C+145	;volatile
  8728  018390  0060  F00C  F891   	movff	btemp+2,_C+146	;volatile
  8729  018396  0060  F010  F892   	movff	btemp+3,_C+147	;volatile
  8730                           
  8731                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  8732  01839C  EE22  F08F         	lfsr	2,_C+144	;volatile
  8733  0183A0  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
  8734  0183A6  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
  8735  0183AC  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
  8736  0183B2  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
  8737                           
  8738                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  8739  0183B8  0E6E               	movlw	low _calc_bsoc
  8740  0183BA  6EE6               	movwf	postinc1,c
  8741  0183BC  0E34               	movlw	high _calc_bsoc
  8742  0183BE  6EE6               	movwf	postinc1,c
  8743  0183C0  0E01               	movlw	low (_calc_bsoc shr (0+16))
  8744  0183C2  6EE6               	movwf	postinc1,c
  8745  0183C4  EC43  F0E7         	call	_TMR3_SetInterruptHandler	;wreg free
  8746                           
  8747                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8748  0183C8  0012               	return		;funcret
  8749  0183CA                     __end_of_init_bsoc:
  8750                           	opt callstack 0
  8751                           
  8752 ;; *************** function _Volts_to_SOC *****************
  8753 ;; Defined at:
  8754 ;;		line 175 in file "bsoc.c"
  8755 ;; Parameters:    Size  Location     Type
  8756 ;;  cvoltage        4  [STACK] const unsigned long 
  8757 ;; Auto vars:     Size  Location     Type
  8758 ;;  soc             2  [STACK] unsigned short 
  8759 ;;  slot            1  [STACK] unsigned char 
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  2  [STACK] unsigned short 
  8762 ;; Registers used:
  8763 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8773 ;;Total ram usage:        0 bytes
  8774 ;; Hardware stack levels used:    1
  8775 ;; Hardware stack levels required when called:   15
  8776 ;; This function calls:
  8777 ;;		Nothing
  8778 ;; This function is called by:
  8779 ;;		_init_bsoc
  8780 ;; This function uses a reentrant model
  8781 ;;
  8782                           
  8783                           	psect	text20
  8784  01B288                     __ptext20:
  8785                           	opt callstack 0
  8786  01B288                     _Volts_to_SOC:
  8787                           	opt callstack 0
  8788                           
  8789                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8790  01B288  52E6               	movf	postinc1,f,c
  8791  01B28A  52E6               	movf	postinc1,f,c
  8792  01B28C  52E6               	movf	postinc1,f,c
  8793                           
  8794                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  8795                           ;stkvar	_soc @ sp[(-3)+0]
  8796                           
  8797                           ;incstack = 0
  8798  01B28E  0EFD               	movlw	-3
  8799  01B290  6AE3               	clrf	plusw1,c
  8800  01B292  0EFE               	movlw	-2
  8801  01B294  6AE3               	clrf	plusw1,c
  8802                           
  8803                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  8804                           ;stkvar	_slot @ sp[(-3)+2]
  8805  01B296  0EFF               	movlw	-1
  8806  01B298  6AE3               	clrf	plusw1,c
  8807  01B29A                     l11664:
  8808                           
  8809                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  8810                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  8811                           ;stkvar	_slot @ sp[(-3)+2]
  8812  01B29A  0EFF               	movlw	-1
  8813  01B29C  50E3               	movf	plusw1,w,c
  8814  01B29E  0D08               	mullw	8
  8815  01B2A0  0EE3               	movlw	low _BVSOC_TABLE
  8816  01B2A2  24F3               	addwf	243,w,c
  8817  01B2A4  6EF6               	movwf	tblptrl,c
  8818  01B2A6  0EF8               	movlw	high _BVSOC_TABLE
  8819  01B2A8  20F4               	addwfc	244,w,c
  8820  01B2AA  6EF7               	movwf	tblptrh,c
  8821  01B2AC                     	if	1	;There are 3 active tblptr bytes
  8822  01B2AC  6AF8               	clrf	tblptru,c
  8823  01B2AE  0E00               	movlw	low (__mediumconst shr (0+16))
  8824  01B2B0  22F8               	addwfc	tblptru,f,c
  8825  01B2B2                     	endif
  8826  01B2B2  0EF9               	movlw	-7
  8827  01B2B4  50E3               	movf	plusw1,w,c
  8828  01B2B6  0009               	tblrd		*+
  8829  01B2B8  5CF5               	subwf	tablat,w,c
  8830  01B2BA  0EFA               	movlw	-6
  8831  01B2BC  50E3               	movf	plusw1,w,c
  8832  01B2BE  0009               	tblrd		*+
  8833  01B2C0  58F5               	subwfb	tablat,w,c
  8834  01B2C2  0EFB               	movlw	-5
  8835  01B2C4  50E3               	movf	plusw1,w,c
  8836  01B2C6  0009               	tblrd		*+
  8837  01B2C8  58F5               	subwfb	tablat,w,c
  8838  01B2CA  0EFC               	movlw	-4
  8839  01B2CC  50E3               	movf	plusw1,w,c
  8840  01B2CE  0009               	tblrd		*+
  8841  01B2D0  58F5               	subwfb	tablat,w,c
  8842  01B2D2  B0D8               	btfsc	status,0,c
  8843  01B2D4  D020               	goto	l11668
  8844                           
  8845                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  8846                           ;stkvar	_slot @ sp[(-3)+2]
  8847  01B2D6  0EFF               	movlw	-1
  8848  01B2D8  50E3               	movf	plusw1,w,c
  8849  01B2DA  0D08               	mullw	8
  8850  01B2DC  0E04               	movlw	4
  8851  01B2DE  26F3               	addwf	243,f,c
  8852  01B2E0  0E00               	movlw	0
  8853  01B2E2  22F4               	addwfc	244,f,c
  8854  01B2E4  0EE3               	movlw	low _BVSOC_TABLE
  8855  01B2E6  24F3               	addwf	243,w,c
  8856  01B2E8  6EF6               	movwf	tblptrl,c
  8857  01B2EA  0EF8               	movlw	high _BVSOC_TABLE
  8858  01B2EC  20F4               	addwfc	244,w,c
  8859  01B2EE  6EF7               	movwf	tblptrh,c
  8860  01B2F0                     	if	1	;There are 3 active tblptr bytes
  8861  01B2F0  6AF8               	clrf	tblptru,c
  8862  01B2F2  0E00               	movlw	low (__mediumconst shr (0+16))
  8863  01B2F4  22F8               	addwfc	tblptru,f,c
  8864  01B2F6                     	endif
  8865  01B2F6  0009               	tblrd		*+
  8866  01B2F8  006F FFD4  F00B    	movff	tablat,btemp+10
  8867  01B2FE  0009               	tblrd		*+
  8868  01B300  006F FFD4  F00C    	movff	tablat,btemp+11
  8869                           
  8870                           ;stkvar	_soc @ sp[(-3)+0]
  8871  01B306  0EFD               	movlw	-3
  8872  01B308  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8873  01B30E  0EFE               	movlw	-2
  8874  01B310  0060  F033  FFE3   	movff	btemp+11,plusw1
  8875  01B316                     l11668:
  8876                           
  8877                           ;bsoc.c: 187:  }
  8878                           ;stkvar	_slot @ sp[(-3)+2]
  8879  01B316  0EFF               	movlw	-1
  8880  01B318  2AE3               	incf	plusw1,f,c
  8881                           
  8882                           ;stkvar	_slot @ sp[(-3)+2]
  8883  01B31A  0EFF               	movlw	-1
  8884  01B31C  006F FF8C  F001    	movff	plusw1,btemp
  8885  01B322  0E19               	movlw	25
  8886  01B324  6401               	cpfsgt	btemp^0,c
  8887  01B326  D7B9               	goto	l11664
  8888                           
  8889                           ;bsoc.c: 188:  return soc;
  8890                           ;stkvar	_soc @ sp[(-3)+0]
  8891  01B328  0EFD               	movlw	-3
  8892  01B32A  006F FF8C  F001    	movff	plusw1,btemp
  8893  01B330  0EFE               	movlw	-2
  8894  01B332  006F FF8C  F002    	movff	plusw1,btemp+1
  8895                           
  8896                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  8897  01B338  0EF9               	movlw	249
  8898  01B33A  26E1               	addwf	fsr1l,f,c
  8899  01B33C  0EFF               	movlw	255
  8900  01B33E  22E2               	addwfc	fsr1h,f,c
  8901  01B340  0012               	return		;funcret
  8902  01B342                     __end_of_Volts_to_SOC:
  8903                           	opt callstack 0
  8904                           
  8905 ;; *************** function _hid_display *****************
  8906 ;; Defined at:
  8907 ;;		line 22 in file "hid.c"
  8908 ;; Parameters:    Size  Location     Type
  8909 ;;  h               2  [STACK] PTR struct H_data
  8910 ;;		 -> H(9), 
  8911 ;; Auto vars:     Size  Location     Type
  8912 ;;		None
  8913 ;; Return value:  Size  Location     Type
  8914 ;;                  2  [STACK] PTR struct H_data
  8915 ;; Registers used:
  8916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  8917 ;; Tracked objects:
  8918 ;;		On entry : 3F/39
  8919 ;;		On exit  : 0/0
  8920 ;;		Unchanged: 0/0
  8921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8926 ;;Total ram usage:        0 bytes
  8927 ;; Hardware stack levels used:    1
  8928 ;; Hardware stack levels required when called:   17
  8929 ;; This function calls:
  8930 ;;		_hid_input
  8931 ;; This function is called by:
  8932 ;;		_main
  8933 ;; This function uses a reentrant model
  8934 ;;
  8935                           
  8936                           	psect	text21
  8937  01882A                     __ptext21:
  8938                           	opt callstack 0
  8939  01882A                     _hid_display:
  8940                           	opt callstack 13
  8941                           
  8942                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
  8943                           ;stkvar	_h @ sp[(0)+-2]
  8944                           
  8945                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8946                           ;incstack = 0
  8947  01882A  0EFE               	movlw	-2
  8948  01882C  006F FF8F FFE6     	movff	plusw1,postinc1
  8949  018832  006F FF8F FFE6     	movff	plusw1,postinc1
  8950  018838  ECC7  F0D0         	call	_hid_input	;wreg free
  8951                           
  8952                           ;hid.c: 26:  switch (h->h_state) {
  8953  01883C  D0E6               	goto	l14278
  8954  01883E                     l14252:
  8955                           
  8956                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
  8957                           ;stkvar	_h @ sp[(0)+-2]
  8958  01883E  0EFE               	movlw	-2
  8959  018840  006F FF8C  F00B    	movff	plusw1,btemp+10
  8960  018846  0EFF               	movlw	-1
  8961  018848  006F FF8C  F00C    	movff	plusw1,btemp+11
  8962  01884E  0E01               	movlw	1
  8963  018850  240B               	addwf	(btemp+10)^0,w,c
  8964  018852  6ED9               	movwf	fsr2l,c
  8965  018854  0E00               	movlw	0
  8966  018856  200C               	addwfc	(btemp+11)^0,w,c
  8967  018858  6EDA               	movwf	fsr2h,c
  8968  01885A  0E01               	movlw	1
  8969  01885C  6EDF               	movwf	indf2,c
  8970                           
  8971                           ;hid.c: 29:   h->hid_display = HID_MAIN;
  8972                           ;stkvar	_h @ sp[(0)+-2]
  8973  01885E  0EFE               	movlw	-2
  8974  018860  006F FF8F FFD9     	movff	plusw1,fsr2l
  8975  018866  0EFF               	movlw	-1
  8976  018868  006F FF8F FFDA     	movff	plusw1,fsr2h
  8977  01886E  0E00               	movlw	0
  8978  018870  6EDF               	movwf	indf2,c
  8979                           
  8980                           ;hid.c: 30:   h->wait_enter = 1;
  8981                           ;stkvar	_h @ sp[(0)+-2]
  8982  018872  0EFE               	movlw	-2
  8983  018874  006F FF8C  F00B    	movff	plusw1,btemp+10
  8984  01887A  0EFF               	movlw	-1
  8985  01887C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8986  018882  0E04               	movlw	4
  8987  018884  240B               	addwf	(btemp+10)^0,w,c
  8988  018886  6ED9               	movwf	fsr2l,c
  8989  018888  0E00               	movlw	0
  8990  01888A  200C               	addwfc	(btemp+11)^0,w,c
  8991  01888C  6EDA               	movwf	fsr2h,c
  8992  01888E  0E01               	movlw	1
  8993  018890  6EDF               	movwf	indf2,c
  8994                           
  8995                           ;hid.c: 31:   h->wait_select = 1;
  8996                           ;stkvar	_h @ sp[(0)+-2]
  8997  018892  0EFE               	movlw	-2
  8998  018894  006F FF8C  F00B    	movff	plusw1,btemp+10
  8999  01889A  0EFF               	movlw	-1
  9000  01889C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9001  0188A2  0E02               	movlw	2
  9002  0188A4  240B               	addwf	(btemp+10)^0,w,c
  9003  0188A6  6ED9               	movwf	fsr2l,c
  9004  0188A8  0E00               	movlw	0
  9005  0188AA  200C               	addwfc	(btemp+11)^0,w,c
  9006  0188AC  6EDA               	movwf	fsr2h,c
  9007  0188AE  0E01               	movlw	1
  9008  0188B0  6EDF               	movwf	indf2,c
  9009                           
  9010                           ;hid.c: 32:   h->wait_calib = 1;
  9011                           ;stkvar	_h @ sp[(0)+-2]
  9012  0188B2  0EFE               	movlw	-2
  9013  0188B4  006F FF8C  F00B    	movff	plusw1,btemp+10
  9014  0188BA  0EFF               	movlw	-1
  9015  0188BC  006F FF8C  F00C    	movff	plusw1,btemp+11
  9016  0188C2  0E06               	movlw	6
  9017  0188C4  240B               	addwf	(btemp+10)^0,w,c
  9018  0188C6  6ED9               	movwf	fsr2l,c
  9019  0188C8  0E00               	movlw	0
  9020  0188CA  200C               	addwfc	(btemp+11)^0,w,c
  9021  0188CC  6EDA               	movwf	fsr2h,c
  9022  0188CE  0E01               	movlw	1
  9023  0188D0  6EDF               	movwf	indf2,c
  9024                           
  9025                           ;hid.c: 33:   h->select_p = SW_OFF;
  9026                           ;stkvar	_h @ sp[(0)+-2]
  9027  0188D2  0EFE               	movlw	-2
  9028  0188D4  006F FF8C  F00B    	movff	plusw1,btemp+10
  9029  0188DA  0EFF               	movlw	-1
  9030  0188DC  006F FF8C  F00C    	movff	plusw1,btemp+11
  9031  0188E2  0E03               	movlw	3
  9032  0188E4  240B               	addwf	(btemp+10)^0,w,c
  9033  0188E6  6ED9               	movwf	fsr2l,c
  9034  0188E8  0E00               	movlw	0
  9035  0188EA  200C               	addwfc	(btemp+11)^0,w,c
  9036  0188EC  6EDA               	movwf	fsr2h,c
  9037  0188EE  0E00               	movlw	0
  9038  0188F0  6EDF               	movwf	indf2,c
  9039                           
  9040                           ;hid.c: 34:   h->enter_p = SW_OFF;
  9041                           ;stkvar	_h @ sp[(0)+-2]
  9042  0188F2  0EFE               	movlw	-2
  9043  0188F4  006F FF8C  F00B    	movff	plusw1,btemp+10
  9044  0188FA  0EFF               	movlw	-1
  9045  0188FC  006F FF8C  F00C    	movff	plusw1,btemp+11
  9046  018902  0E05               	movlw	5
  9047  018904  240B               	addwf	(btemp+10)^0,w,c
  9048  018906  6ED9               	movwf	fsr2l,c
  9049  018908  0E00               	movlw	0
  9050  01890A  200C               	addwfc	(btemp+11)^0,w,c
  9051  01890C  6EDA               	movwf	fsr2h,c
  9052  01890E  0E00               	movlw	0
  9053  018910  6EDF               	movwf	indf2,c
  9054                           
  9055                           ;hid.c: 35:   h->calib_p = SW_OFF;
  9056                           ;stkvar	_h @ sp[(0)+-2]
  9057  018912  0EFE               	movlw	-2
  9058  018914  006F FF8C  F00B    	movff	plusw1,btemp+10
  9059  01891A  0EFF               	movlw	-1
  9060  01891C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9061  018922  0E07               	movlw	7
  9062  018924  240B               	addwf	(btemp+10)^0,w,c
  9063  018926  6ED9               	movwf	fsr2l,c
  9064  018928  0E00               	movlw	0
  9065  01892A  200C               	addwfc	(btemp+11)^0,w,c
  9066  01892C  6EDA               	movwf	fsr2h,c
  9067  01892E  0E00               	movlw	0
  9068  018930  D06A               	goto	L5
  9069  018932                     l14268:
  9070                           
  9071                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  9072                           ;stkvar	_h @ sp[(0)+-2]
  9073  018932  0EFE               	movlw	-2
  9074  018934  006F FF8C  F00B    	movff	plusw1,btemp+10
  9075  01893A  0EFF               	movlw	-1
  9076  01893C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9077  018942  0E02               	movlw	2
  9078  018944  240B               	addwf	(btemp+10)^0,w,c
  9079  018946  6ED9               	movwf	fsr2l,c
  9080  018948  0E00               	movlw	0
  9081  01894A  200C               	addwfc	(btemp+11)^0,w,c
  9082  01894C  6EDA               	movwf	fsr2h,c
  9083  01894E  50DF               	movf	indf2,w,c
  9084  018950  A4D8               	btfss	status,2,c
  9085  018952  D076               	goto	l2136
  9086                           
  9087                           ;stkvar	_h @ sp[(0)+-2]
  9088  018954  0EFE               	movlw	-2
  9089  018956  006F FF8C  F00B    	movff	plusw1,btemp+10
  9090  01895C  0EFF               	movlw	-1
  9091  01895E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9092  018964  0E03               	movlw	3
  9093  018966  240B               	addwf	(btemp+10)^0,w,c
  9094  018968  6ED9               	movwf	fsr2l,c
  9095  01896A  0E00               	movlw	0
  9096  01896C  200C               	addwfc	(btemp+11)^0,w,c
  9097  01896E  6EDA               	movwf	fsr2h,c
  9098  018970  50DF               	movf	indf2,w,c
  9099  018972  A4D8               	btfss	status,2,c
  9100  018974  D065               	goto	l2136
  9101                           
  9102                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
  9103                           ;stkvar	_h @ sp[(0)+-2]
  9104  018976  0EFE               	movlw	-2
  9105  018978  006F FF8C  F00B    	movff	plusw1,btemp+10
  9106  01897E  0EFF               	movlw	-1
  9107  018980  006F FF8C  F00C    	movff	plusw1,btemp+11
  9108  018986  0E08               	movlw	8
  9109  018988  240B               	addwf	(btemp+10)^0,w,c
  9110  01898A  6ED9               	movwf	fsr2l,c
  9111  01898C  0E00               	movlw	0
  9112  01898E  200C               	addwfc	(btemp+11)^0,w,c
  9113  018990  6EDA               	movwf	fsr2h,c
  9114                           
  9115                           ;stkvar	_h @ sp[(0)+-2]
  9116  018992  0EFE               	movlw	-2
  9117  018994  006F FF8C  F00B    	movff	plusw1,btemp+10
  9118  01899A  0EFF               	movlw	-1
  9119  01899C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9120  0189A2  0E08               	movlw	8
  9121  0189A4  240B               	addwf	(btemp+10)^0,w,c
  9122  0189A6  6EE9               	movwf	fsr0l,c
  9123  0189A8  0E00               	movlw	0
  9124  0189AA  200C               	addwfc	(btemp+11)^0,w,c
  9125  0189AC  6EEA               	movwf	fsr0h,c
  9126  0189AE  2AEF               	incf	indf0,f,c
  9127  0189B0  50EF               	movf	indf0,w,c
  9128  0189B2  0B03               	andlw	3
  9129  0189B4  6EDF               	movwf	indf2,c
  9130                           
  9131                           ;hid.c: 41:    h->hid_display = h->sequence;
  9132                           ;stkvar	_h @ sp[(0)+-2]
  9133  0189B6  0EFE               	movlw	-2
  9134  0189B8  006F FF8C  F00B    	movff	plusw1,btemp+10
  9135  0189BE  0EFF               	movlw	-1
  9136  0189C0  006F FF8C  F00C    	movff	plusw1,btemp+11
  9137  0189C6  0E08               	movlw	8
  9138  0189C8  240B               	addwf	(btemp+10)^0,w,c
  9139  0189CA  6ED9               	movwf	fsr2l,c
  9140  0189CC  0E00               	movlw	0
  9141  0189CE  200C               	addwfc	(btemp+11)^0,w,c
  9142  0189D0  6EDA               	movwf	fsr2h,c
  9143                           
  9144                           ;stkvar	_h @ sp[(0)+-2]
  9145  0189D2  0EFE               	movlw	-2
  9146  0189D4  006F FF8F FFE9     	movff	plusw1,fsr0l
  9147  0189DA  0EFF               	movlw	-1
  9148  0189DC  006F FF8F FFEA     	movff	plusw1,fsr0h
  9149  0189E2  006F FF7F FFEF     	movff	indf2,indf0
  9150                           
  9151                           ;hid.c: 42:    h->wait_select = 1;
  9152                           ;stkvar	_h @ sp[(0)+-2]
  9153  0189E8  0EFE               	movlw	-2
  9154  0189EA  006F FF8C  F00B    	movff	plusw1,btemp+10
  9155  0189F0  0EFF               	movlw	-1
  9156  0189F2  006F FF8C  F00C    	movff	plusw1,btemp+11
  9157  0189F8  0E02               	movlw	2
  9158  0189FA  240B               	addwf	(btemp+10)^0,w,c
  9159  0189FC  6ED9               	movwf	fsr2l,c
  9160  0189FE  0E00               	movlw	0
  9161  018A00  200C               	addwfc	(btemp+11)^0,w,c
  9162  018A02  6EDA               	movwf	fsr2h,c
  9163  018A04  0E01               	movlw	1
  9164  018A06                     L5:
  9165  018A06  6EDF               	movwf	indf2,c
  9166  018A08  D01B               	goto	l2136
  9167  018A0A                     l14278:
  9168                           
  9169                           ;stkvar	_h @ sp[(0)+-2]
  9170  018A0A  0EFE               	movlw	-2
  9171  018A0C  006F FF8C  F00B    	movff	plusw1,btemp+10
  9172  018A12  0EFF               	movlw	-1
  9173  018A14  006F FF8C  F00C    	movff	plusw1,btemp+11
  9174  018A1A  0E01               	movlw	1
  9175  018A1C  240B               	addwf	(btemp+10)^0,w,c
  9176  018A1E  6ED9               	movwf	fsr2l,c
  9177  018A20  0E00               	movlw	0
  9178  018A22  200C               	addwfc	(btemp+11)^0,w,c
  9179  018A24  6EDA               	movwf	fsr2h,c
  9180  018A26  50DF               	movf	indf2,w,c
  9181  018A28  6E0B               	movwf	(btemp+10)^0,c
  9182  018A2A  6A0C               	clrf	(btemp+11)^0,c
  9183                           
  9184                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9185                           ; Switch size 1, requested type "simple"
  9186                           ; Number of cases is 1, Range of values is 0 to 0
  9187                           ; switch strategies available:
  9188                           ; Name         Instructions Cycles
  9189                           ; simple_byte            4     3 (average)
  9190                           ;	Chosen strategy is simple_byte
  9191  018A2C  500C               	movf	(btemp+11)^0,w,c
  9192  018A2E  0A00               	xorlw	0	; case 0
  9193  018A30  A4D8               	btfss	status,2,c
  9194  018A32  D77F               	goto	l14268
  9195                           
  9196                           ; Switch size 1, requested type "simple"
  9197                           ; Number of cases is 2, Range of values is 0 to 1
  9198                           ; switch strategies available:
  9199                           ; Name         Instructions Cycles
  9200                           ; simple_byte            7     4 (average)
  9201                           ;	Chosen strategy is simple_byte
  9202  018A34  500B               	movf	(btemp+10)^0,w,c
  9203  018A36  0A00               	xorlw	0	; case 0
  9204  018A38  B4D8               	btfsc	status,2,c
  9205  018A3A  D701               	goto	l14252
  9206  018A3C  0A01               	xorlw	1	; case 1
  9207  018A3E  D779               	goto	l14268
  9208  018A40                     l2136:
  9209                           
  9210                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  9211  018A40  52E5               	movf	postdec1,f,c
  9212  018A42  52E5               	movf	postdec1,f,c
  9213  018A44  0012               	return		;funcret
  9214  018A46                     __end_of_hid_display:
  9215                           	opt callstack 0
  9216                           
  9217 ;; *************** function _hid_input *****************
  9218 ;; Defined at:
  9219 ;;		line 3 in file "hid.c"
  9220 ;; Parameters:    Size  Location     Type
  9221 ;;  h               2  [STACK] PTR struct H_data
  9222 ;;		 -> H(9), 
  9223 ;; Auto vars:     Size  Location     Type
  9224 ;;		None
  9225 ;; Return value:  Size  Location     Type
  9226 ;;                  2  [STACK] PTR struct H_data
  9227 ;; Registers used:
  9228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9229 ;; Tracked objects:
  9230 ;;		On entry : 0/39
  9231 ;;		On exit  : 0/0
  9232 ;;		Unchanged: 0/0
  9233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9238 ;;Total ram usage:        0 bytes
  9239 ;; Hardware stack levels used:    1
  9240 ;; Hardware stack levels required when called:   16
  9241 ;; This function calls:
  9242 ;;		_get_switch
  9243 ;; This function is called by:
  9244 ;;		_hid_display
  9245 ;; This function uses a reentrant model
  9246 ;;
  9247                           
  9248                           	psect	text22
  9249  01A18E                     __ptext22:
  9250                           	opt callstack 0
  9251  01A18E                     _hid_input:
  9252                           	opt callstack 13
  9253                           
  9254                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  9255                           
  9256                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9257                           ;incstack = 0
  9258  01A18E  0E02               	movlw	2
  9259  01A190  6EE6               	movwf	postinc1,c
  9260  01A192  EC60  F0E6         	call	_get_switch	;wreg free
  9261  01A196  5001               	movf	btemp^0,w,c
  9262  01A198  B4D8               	btfsc	status,2,c
  9263  01A19A  D02C               	goto	l14008
  9264                           
  9265                           ;hid.c: 6:   h->wait_select = 0;
  9266                           ;stkvar	_h @ sp[(0)+-2]
  9267  01A19C  0EFE               	movlw	-2
  9268  01A19E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9269  01A1A4  0EFF               	movlw	-1
  9270  01A1A6  006F FF8C  F00C    	movff	plusw1,btemp+11
  9271  01A1AC  0E02               	movlw	2
  9272  01A1AE  240B               	addwf	(btemp+10)^0,w,c
  9273  01A1B0  6ED9               	movwf	fsr2l,c
  9274  01A1B2  0E00               	movlw	0
  9275  01A1B4  200C               	addwfc	(btemp+11)^0,w,c
  9276  01A1B6  6EDA               	movwf	fsr2h,c
  9277  01A1B8  0E00               	movlw	0
  9278  01A1BA  6EDF               	movwf	indf2,c
  9279                           
  9280                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  9281  01A1BC  0E02               	movlw	2
  9282  01A1BE  6EE6               	movwf	postinc1,c
  9283  01A1C0  EC60  F0E6         	call	_get_switch	;wreg free
  9284  01A1C4  5001               	movf	btemp^0,w,c
  9285  01A1C6  B4D8               	btfsc	status,2,c
  9286  01A1C8  D003               	goto	u13270
  9287  01A1CA  6A0C               	clrf	(btemp+11)^0,c
  9288  01A1CC  2A0C               	incf	(btemp+11)^0,f,c
  9289  01A1CE  D001               	goto	u13288
  9290  01A1D0                     u13270:
  9291  01A1D0  6A0C               	clrf	(btemp+11)^0,c
  9292  01A1D2                     u13288:
  9293                           
  9294                           ;stkvar	_h @ sp[(0)+-2]
  9295  01A1D2  0EFE               	movlw	-2
  9296  01A1D4  006F FF8C  F009    	movff	plusw1,btemp+8
  9297  01A1DA  0EFF               	movlw	-1
  9298  01A1DC  006F FF8C  F00A    	movff	plusw1,btemp+9
  9299  01A1E2  0E03               	movlw	3
  9300  01A1E4  2409               	addwf	(btemp+8)^0,w,c
  9301  01A1E6  6ED9               	movwf	fsr2l,c
  9302  01A1E8  0E00               	movlw	0
  9303  01A1EA  200A               	addwfc	(btemp+9)^0,w,c
  9304  01A1EC  6EDA               	movwf	fsr2h,c
  9305  01A1EE  0060  F033  FFDF   	movff	btemp+11,indf2
  9306  01A1F4                     l14008:
  9307                           
  9308                           ;hid.c: 10:  if (get_switch(SENTER)) {
  9309  01A1F4  0E03               	movlw	3
  9310  01A1F6  6EE6               	movwf	postinc1,c
  9311  01A1F8  EC60  F0E6         	call	_get_switch	;wreg free
  9312  01A1FC  5001               	movf	btemp^0,w,c
  9313  01A1FE  B4D8               	btfsc	status,2,c
  9314  01A200  D02C               	goto	l14014
  9315                           
  9316                           ;hid.c: 11:   h->wait_enter = 0;
  9317                           ;stkvar	_h @ sp[(0)+-2]
  9318  01A202  0EFE               	movlw	-2
  9319  01A204  006F FF8C  F00B    	movff	plusw1,btemp+10
  9320  01A20A  0EFF               	movlw	-1
  9321  01A20C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9322  01A212  0E04               	movlw	4
  9323  01A214  240B               	addwf	(btemp+10)^0,w,c
  9324  01A216  6ED9               	movwf	fsr2l,c
  9325  01A218  0E00               	movlw	0
  9326  01A21A  200C               	addwfc	(btemp+11)^0,w,c
  9327  01A21C  6EDA               	movwf	fsr2h,c
  9328  01A21E  0E00               	movlw	0
  9329  01A220  6EDF               	movwf	indf2,c
  9330                           
  9331                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  9332  01A222  0E03               	movlw	3
  9333  01A224  6EE6               	movwf	postinc1,c
  9334  01A226  EC60  F0E6         	call	_get_switch	;wreg free
  9335  01A22A  5001               	movf	btemp^0,w,c
  9336  01A22C  B4D8               	btfsc	status,2,c
  9337  01A22E  D003               	goto	u13300
  9338  01A230  6A0C               	clrf	(btemp+11)^0,c
  9339  01A232  2A0C               	incf	(btemp+11)^0,f,c
  9340  01A234  D001               	goto	u13318
  9341  01A236                     u13300:
  9342  01A236  6A0C               	clrf	(btemp+11)^0,c
  9343  01A238                     u13318:
  9344                           
  9345                           ;stkvar	_h @ sp[(0)+-2]
  9346  01A238  0EFE               	movlw	-2
  9347  01A23A  006F FF8C  F009    	movff	plusw1,btemp+8
  9348  01A240  0EFF               	movlw	-1
  9349  01A242  006F FF8C  F00A    	movff	plusw1,btemp+9
  9350  01A248  0E05               	movlw	5
  9351  01A24A  2409               	addwf	(btemp+8)^0,w,c
  9352  01A24C  6ED9               	movwf	fsr2l,c
  9353  01A24E  0E00               	movlw	0
  9354  01A250  200A               	addwfc	(btemp+9)^0,w,c
  9355  01A252  6EDA               	movwf	fsr2h,c
  9356  01A254  0060  F033  FFDF   	movff	btemp+11,indf2
  9357  01A25A                     l14014:
  9358                           
  9359                           ;hid.c: 15:  if (get_switch(SCALIB)) {
  9360  01A25A  0E04               	movlw	4
  9361  01A25C  6EE6               	movwf	postinc1,c
  9362  01A25E  EC60  F0E6         	call	_get_switch	;wreg free
  9363  01A262  5001               	movf	btemp^0,w,c
  9364  01A264  B4D8               	btfsc	status,2,c
  9365  01A266  D02C               	goto	l2127
  9366                           
  9367                           ;hid.c: 16:   h->wait_calib = 0;
  9368                           ;stkvar	_h @ sp[(0)+-2]
  9369  01A268  0EFE               	movlw	-2
  9370  01A26A  006F FF8C  F00B    	movff	plusw1,btemp+10
  9371  01A270  0EFF               	movlw	-1
  9372  01A272  006F FF8C  F00C    	movff	plusw1,btemp+11
  9373  01A278  0E06               	movlw	6
  9374  01A27A  240B               	addwf	(btemp+10)^0,w,c
  9375  01A27C  6ED9               	movwf	fsr2l,c
  9376  01A27E  0E00               	movlw	0
  9377  01A280  200C               	addwfc	(btemp+11)^0,w,c
  9378  01A282  6EDA               	movwf	fsr2h,c
  9379  01A284  0E00               	movlw	0
  9380  01A286  6EDF               	movwf	indf2,c
  9381                           
  9382                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
  9383  01A288  0E04               	movlw	4
  9384  01A28A  6EE6               	movwf	postinc1,c
  9385  01A28C  EC60  F0E6         	call	_get_switch	;wreg free
  9386  01A290  5001               	movf	btemp^0,w,c
  9387  01A292  B4D8               	btfsc	status,2,c
  9388  01A294  D003               	goto	u13330
  9389  01A296  6A0C               	clrf	(btemp+11)^0,c
  9390  01A298  2A0C               	incf	(btemp+11)^0,f,c
  9391  01A29A  D001               	goto	u13348
  9392  01A29C                     u13330:
  9393  01A29C  6A0C               	clrf	(btemp+11)^0,c
  9394  01A29E                     u13348:
  9395                           
  9396                           ;stkvar	_h @ sp[(0)+-2]
  9397  01A29E  0EFE               	movlw	-2
  9398  01A2A0  006F FF8C  F009    	movff	plusw1,btemp+8
  9399  01A2A6  0EFF               	movlw	-1
  9400  01A2A8  006F FF8C  F00A    	movff	plusw1,btemp+9
  9401  01A2AE  0E07               	movlw	7
  9402  01A2B0  2409               	addwf	(btemp+8)^0,w,c
  9403  01A2B2  6ED9               	movwf	fsr2l,c
  9404  01A2B4  0E00               	movlw	0
  9405  01A2B6  200A               	addwfc	(btemp+9)^0,w,c
  9406  01A2B8  6EDA               	movwf	fsr2h,c
  9407  01A2BA  0060  F033  FFDF   	movff	btemp+11,indf2
  9408  01A2C0                     l2127:
  9409                           
  9410                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  9411  01A2C0  52E5               	movf	postdec1,f,c
  9412  01A2C2  52E5               	movf	postdec1,f,c
  9413  01A2C4  0012               	return		;funcret
  9414  01A2C6                     __end_of_hid_input:
  9415                           	opt callstack 0
  9416                           
  9417 ;; *************** function _esr_check *****************
  9418 ;; Defined at:
  9419 ;;		line 197 in file "bsoc.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;  fsm             1  [STACK] const unsigned char 
  9422 ;; Auto vars:     Size  Location     Type
  9423 ;;		None
  9424 ;; Return value:  Size  Location     Type
  9425 ;;                  4  [STACK] float 
  9426 ;; Registers used:
  9427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9428 ;; Tracked objects:
  9429 ;;		On entry : 0/0
  9430 ;;		On exit  : 0/0
  9431 ;;		Unchanged: 0/0
  9432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9437 ;;Total ram usage:        0 bytes
  9438 ;; Hardware stack levels used:    1
  9439 ;; Hardware stack levels required when called:   18
  9440 ;; This function calls:
  9441 ;;		_StartTimer
  9442 ;;		_TimerDone
  9443 ;;		___fldiv
  9444 ;;		___flsub
  9445 ;;		_conv_raw_result
  9446 ;;		_fabsf
  9447 ;;		_set_load_relay_one
  9448 ;;		_set_load_relay_two
  9449 ;;		_update_adc_result
  9450 ;; This function is called by:
  9451 ;;		_main
  9452 ;; This function uses a reentrant model
  9453 ;;
  9454                           
  9455                           	psect	text23
  9456  0176FA                     __ptext23:
  9457                           	opt callstack 0
  9458  0176FA                     _esr_check:
  9459                           	opt callstack 12
  9460                           
  9461                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
  9462                           ;stkvar	_fsm @ sp[(0)+-1]
  9463                           
  9464                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9465                           ;incstack = 0
  9466  0176FA  0EFF               	movlw	-1
  9467  0176FC  50E3               	movf	plusw1,w,c
  9468  0176FE  B4D8               	btfsc	status,2,c
  9469  017700  D149               	goto	l12050
  9470                           
  9471                           ;bsoc.c: 202:   esr_state = 0;
  9472  017702  0100               	movlb	0	; () banked
  9473  017704  6BA0               	clrf	esr_check@esr_state& (0+255),b
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;bsoc.c: 203:   return -10.0;
  9477  017706  0E00               	movlw	0
  9478  017708  6E01               	movwf	btemp^0,c
  9479  01770A  0E00               	movlw	0
  9480  01770C  6E02               	movwf	(btemp+1)^0,c
  9481  01770E  0E20               	movlw	32
  9482  017710  6E03               	movwf	(btemp+2)^0,c
  9483  017712  0EC1               	movlw	193
  9484  017714  D15B               	goto	L6
  9485  017716                     l11982:
  9486                           
  9487                           ; BSR set to: 0
  9488                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
  9489  017716  0E10               	movlw	16
  9490  017718  6EE6               	movwf	postinc1,c
  9491  01771A  0E27               	movlw	39
  9492  01771C  6EE6               	movwf	postinc1,c
  9493  01771E  0E0C               	movlw	12
  9494  017720  6EE6               	movwf	postinc1,c
  9495  017722  EC5C  F0E4         	call	_StartTimer	;wreg free
  9496  017726                     l11984:
  9497                           
  9498                           ;bsoc.c: 209:   esr_state++;
  9499  017726  0100               	movlb	0	; () banked
  9500  017728  2BA0               	incf	esr_check@esr_state& (0+255),f,b
  9501                           
  9502                           ;bsoc.c: 210:   break;
  9503  01772A  D149               	goto	l12052
  9504  01772C                     l11986:
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;bsoc.c: 215:   set_load_relay_one(0);
  9508  01772C  0E00               	movlw	0
  9509  01772E  6EE6               	movwf	postinc1,c
  9510  017730  EC71  F0E9         	call	_set_load_relay_one	;wreg free
  9511                           
  9512                           ;bsoc.c: 216:   set_load_relay_two(0);
  9513  017734  0E00               	movlw	0
  9514  017736  6EE6               	movwf	postinc1,c
  9515  017738  EC69  F0E9         	call	_set_load_relay_two	;wreg free
  9516                           
  9517                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
  9518  01773C  0E0C               	movlw	12
  9519  01773E  6EE6               	movwf	postinc1,c
  9520  017740  ECCB  F0E6         	call	_TimerDone	;wreg free
  9521  017744  5001               	movf	btemp^0,w,c
  9522  017746  B4D8               	btfsc	status,2,c
  9523  017748  D009               	goto	l11992
  9524                           
  9525                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
  9526  01774A  0E10               	movlw	16
  9527  01774C  6EE6               	movwf	postinc1,c
  9528  01774E  0E27               	movlw	39
  9529  017750  6EE6               	movwf	postinc1,c
  9530  017752  0E0C               	movlw	12
  9531  017754  6EE6               	movwf	postinc1,c
  9532  017756  EC5C  F0E4         	call	_StartTimer	;wreg free
  9533                           
  9534                           ;bsoc.c: 219:   } else {
  9535  01775A  D006               	goto	l11996
  9536  01775C                     l11992:
  9537                           
  9538                           ;bsoc.c: 220:    return -2.0;
  9539  01775C  0E00               	movlw	0
  9540  01775E  6E01               	movwf	btemp^0,c
  9541  017760  0E00               	movlw	0
  9542  017762  6E02               	movwf	(btemp+1)^0,c
  9543  017764  0E00               	movlw	0
  9544  017766  D066               	goto	L8
  9545  017768                     l11996:
  9546                           
  9547                           ;bsoc.c: 225:   update_adc_result();
  9548  017768  ECDB  F0E4         	call	_update_adc_result	;wreg free
  9549                           
  9550                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  9551  01776C  0E00               	movlw	0
  9552  01776E  6EE6               	movwf	postinc1,c
  9553  017770  0E04               	movlw	4
  9554  017772  6EE6               	movwf	postinc1,c
  9555  017774  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9556  017778  0060  F004  F915   	movff	btemp,_C+278	;volatile
  9557  01777E  0060  F008  F916   	movff	btemp+1,_C+279	;volatile
  9558  017784  0060  F00C  F917   	movff	btemp+2,_C+280	;volatile
  9559  01778A  0060  F010  F918   	movff	btemp+3,_C+281	;volatile
  9560  017790  D7CA               	goto	l11984
  9561  017792                     l12002:
  9562                           
  9563                           ; BSR set to: 0
  9564                           ;bsoc.c: 230:   set_load_relay_one(1);
  9565  017792  0E01               	movlw	1
  9566  017794  6EE6               	movwf	postinc1,c
  9567  017796  EC71  F0E9         	call	_set_load_relay_one	;wreg free
  9568                           
  9569                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
  9570  01779A  0E0C               	movlw	12
  9571  01779C  6EE6               	movwf	postinc1,c
  9572  01779E  ECCB  F0E6         	call	_TimerDone	;wreg free
  9573  0177A2  5001               	movf	btemp^0,w,c
  9574  0177A4  B4D8               	btfsc	status,2,c
  9575  0177A6  D009               	goto	l12008
  9576                           
  9577                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
  9578  0177A8  0E10               	movlw	16
  9579  0177AA  6EE6               	movwf	postinc1,c
  9580  0177AC  0E27               	movlw	39
  9581  0177AE  6EE6               	movwf	postinc1,c
  9582  0177B0  0E0C               	movlw	12
  9583  0177B2  6EE6               	movwf	postinc1,c
  9584  0177B4  EC5C  F0E4         	call	_StartTimer	;wreg free
  9585                           
  9586                           ;bsoc.c: 233:   } else {
  9587  0177B8  D006               	goto	l12012
  9588  0177BA                     l12008:
  9589                           
  9590                           ;bsoc.c: 234:    return -3.0;
  9591  0177BA  0E00               	movlw	0
  9592  0177BC  6E01               	movwf	btemp^0,c
  9593  0177BE  0E00               	movlw	0
  9594  0177C0  6E02               	movwf	(btemp+1)^0,c
  9595  0177C2  0E40               	movlw	64
  9596  0177C4  D037               	goto	L8
  9597  0177C6                     l12012:
  9598                           
  9599                           ;bsoc.c: 237:   update_adc_result();
  9600  0177C6  ECDB  F0E4         	call	_update_adc_result	;wreg free
  9601                           
  9602                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  9603  0177CA  0E00               	movlw	0
  9604  0177CC  6EE6               	movwf	postinc1,c
  9605  0177CE  0E04               	movlw	4
  9606  0177D0  6EE6               	movwf	postinc1,c
  9607  0177D2  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9608  0177D6  0060  F004  F919   	movff	btemp,_C+282	;volatile
  9609  0177DC  0060  F008  F91A   	movff	btemp+1,_C+283	;volatile
  9610  0177E2  0060  F00C  F91B   	movff	btemp+2,_C+284	;volatile
  9611  0177E8  0060  F010  F91C   	movff	btemp+3,_C+285	;volatile
  9612                           
  9613                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  9614  0177EE  0E00               	movlw	0
  9615  0177F0  6EE6               	movwf	postinc1,c
  9616  0177F2  0E00               	movlw	0
  9617  0177F4  6EE6               	movwf	postinc1,c
  9618  0177F6  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9619  0177FA  0060  F004  F90D   	movff	btemp,_C+270	;volatile
  9620  017800  0060  F008  F90E   	movff	btemp+1,_C+271	;volatile
  9621  017806  0060  F00C  F90F   	movff	btemp+2,_C+272	;volatile
  9622  01780C  0060  F010  F910   	movff	btemp+3,_C+273	;volatile
  9623  017812  D789               	goto	l11984
  9624  017814                     l12020:
  9625                           
  9626                           ; BSR set to: 0
  9627                           ;bsoc.c: 243:   set_load_relay_two(1);
  9628  017814  0E01               	movlw	1
  9629  017816  6EE6               	movwf	postinc1,c
  9630  017818  EC69  F0E9         	call	_set_load_relay_two	;wreg free
  9631                           
  9632                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
  9633  01781C  0E0C               	movlw	12
  9634  01781E  6EE6               	movwf	postinc1,c
  9635  017820  ECCB  F0E6         	call	_TimerDone	;wreg free
  9636  017824  5001               	movf	btemp^0,w,c
  9637  017826  A4D8               	btfss	status,2,c
  9638  017828  D008               	goto	l12028
  9639                           
  9640                           ;bsoc.c: 245:    return -4.0;
  9641  01782A  0E00               	movlw	0
  9642  01782C  6E01               	movwf	btemp^0,c
  9643  01782E  0E00               	movlw	0
  9644  017830  6E02               	movwf	(btemp+1)^0,c
  9645  017832  0E80               	movlw	128
  9646  017834                     L8:
  9647  017834  6E03               	movwf	(btemp+2)^0,c
  9648  017836  0EC0               	movlw	192
  9649  017838  D0C9               	goto	L6
  9650  01783A                     l12028:
  9651                           
  9652                           ;bsoc.c: 247:   update_adc_result();
  9653  01783A  ECDB  F0E4         	call	_update_adc_result	;wreg free
  9654                           
  9655                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  9656  01783E  0E00               	movlw	0
  9657  017840  6EE6               	movwf	postinc1,c
  9658  017842  0E04               	movlw	4
  9659  017844  6EE6               	movwf	postinc1,c
  9660  017846  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9661  01784A  0060  F004  F91D   	movff	btemp,_C+286	;volatile
  9662  017850  0060  F008  F91E   	movff	btemp+1,_C+287	;volatile
  9663  017856  0060  F00C  F91F   	movff	btemp+2,_C+288	;volatile
  9664  01785C  0060  F010  F920   	movff	btemp+3,_C+289	;volatile
  9665                           
  9666                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  9667  017862  0E00               	movlw	0
  9668  017864  6EE6               	movwf	postinc1,c
  9669  017866  0E00               	movlw	0
  9670  017868  6EE6               	movwf	postinc1,c
  9671  01786A  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9672  01786E  0060  F004  F911   	movff	btemp,_C+274	;volatile
  9673  017874  0060  F008  F912   	movff	btemp+1,_C+275	;volatile
  9674  01787A  0060  F00C  F913   	movff	btemp+2,_C+276	;volatile
  9675  017880  0060  F010  F914   	movff	btemp+3,_C+277	;volatile
  9676                           
  9677                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  9678  017886  EE22  F111         	lfsr	2,_C+274	;volatile
  9679  01788A  006F FF7B FFE6     	movff	postinc2,postinc1
  9680  017890  006F FF7B FFE6     	movff	postinc2,postinc1
  9681  017896  006F FF7B FFE6     	movff	postinc2,postinc1
  9682  01789C  006F FF7B FFE6     	movff	postinc2,postinc1
  9683  0178A2  EE22  F10D         	lfsr	2,_C+270	;volatile
  9684  0178A6  006F FF7B FFE6     	movff	postinc2,postinc1
  9685  0178AC  006F FF7B FFE6     	movff	postinc2,postinc1
  9686  0178B2  006F FF7B FFE6     	movff	postinc2,postinc1
  9687  0178B8  006F FF7B FFE6     	movff	postinc2,postinc1
  9688  0178BE  ECB6  F0E3         	call	___flsub	;wreg free
  9689  0178C2  0060  F007  FFE6   	movff	btemp,postinc1
  9690  0178C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9691  0178CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9692  0178D4  0060  F013  FFE6   	movff	btemp+3,postinc1
  9693  0178DA  EE22  F11D         	lfsr	2,_C+286	;volatile
  9694  0178DE  006F FF7B FFE6     	movff	postinc2,postinc1
  9695  0178E4  006F FF7B FFE6     	movff	postinc2,postinc1
  9696  0178EA  006F FF7B FFE6     	movff	postinc2,postinc1
  9697  0178F0  006F FF7B FFE6     	movff	postinc2,postinc1
  9698  0178F6  EE22  F119         	lfsr	2,_C+282	;volatile
  9699  0178FA  006F FF7B FFE6     	movff	postinc2,postinc1
  9700  017900  006F FF7B FFE6     	movff	postinc2,postinc1
  9701  017906  006F FF7B FFE6     	movff	postinc2,postinc1
  9702  01790C  006F FF7B FFE6     	movff	postinc2,postinc1
  9703  017912  ECB6  F0E3         	call	___flsub	;wreg free
  9704  017916  0060  F007  FFE6   	movff	btemp,postinc1
  9705  01791C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9706  017922  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9707  017928  0060  F013  FFE6   	movff	btemp+3,postinc1
  9708  01792E  EC61  F0A7         	call	___fldiv	;wreg free
  9709  017932  0060  F007  FFE6   	movff	btemp,postinc1
  9710  017938  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9711  01793E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9712  017944  0060  F013  FFE6   	movff	btemp+3,postinc1
  9713  01794A  EC58  F0DA         	call	_fabsf	;wreg free
  9714  01794E  0060  F004  F887   	movff	btemp,_C+136	;volatile
  9715  017954  0060  F008  F888   	movff	btemp+1,_C+137	;volatile
  9716  01795A  0060  F00C  F889   	movff	btemp+2,_C+138	;volatile
  9717  017960  0060  F010  F88A   	movff	btemp+3,_C+139	;volatile
  9718                           
  9719                           ;bsoc.c: 252:   set_load_relay_one(0);
  9720  017966  0E00               	movlw	0
  9721  017968  6EE6               	movwf	postinc1,c
  9722  01796A  EC71  F0E9         	call	_set_load_relay_one	;wreg free
  9723                           
  9724                           ;bsoc.c: 253:   set_load_relay_two(0);
  9725  01796E  0E00               	movlw	0
  9726  017970  6EE6               	movwf	postinc1,c
  9727  017972  EC69  F0E9         	call	_set_load_relay_two	;wreg free
  9728                           
  9729                           ;bsoc.c: 254:   esr_state = 0;
  9730  017976  0100               	movlb	0	; () banked
  9731  017978  6BA0               	clrf	esr_check@esr_state& (0+255),b
  9732                           
  9733                           ; BSR set to: 0
  9734                           ;bsoc.c: 255:   return C.esr;
  9735  01797A  0062  F21C  F001   	movff	_C+136,btemp	;volatile
  9736  017980  0062  F220  F002   	movff	_C+137,btemp+1	;volatile
  9737  017986  0062  F224  F003   	movff	_C+138,btemp+2	;volatile
  9738  01798C  0062  F228  F004   	movff	_C+139,btemp+3	;volatile
  9739  017992  D01D               	goto	l2252
  9740  017994                     l12050:
  9741  017994  0100               	movlb	0	; () banked
  9742  017996  51A0               	movf	esr_check@esr_state& (0+255),w,b
  9743  017998  6E0B               	movwf	(btemp+10)^0,c
  9744  01799A  6A0C               	clrf	(btemp+11)^0,c
  9745                           
  9746                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9747                           ; Switch size 1, requested type "simple"
  9748                           ; Number of cases is 1, Range of values is 0 to 0
  9749                           ; switch strategies available:
  9750                           ; Name         Instructions Cycles
  9751                           ; simple_byte            4     3 (average)
  9752                           ;	Chosen strategy is simple_byte
  9753  01799C  500C               	movf	(btemp+11)^0,w,c
  9754  01799E  0A00               	xorlw	0	; case 0
  9755  0179A0  A4D8               	btfss	status,2,c
  9756  0179A2  D00D               	goto	l12052
  9757                           
  9758                           ; BSR set to: 0
  9759                           ; Switch size 1, requested type "simple"
  9760                           ; Number of cases is 4, Range of values is 0 to 3
  9761                           ; switch strategies available:
  9762                           ; Name         Instructions Cycles
  9763                           ; simple_byte           13     7 (average)
  9764                           ;	Chosen strategy is simple_byte
  9765  0179A4  500B               	movf	(btemp+10)^0,w,c
  9766  0179A6  0A00               	xorlw	0	; case 0
  9767  0179A8  B4D8               	btfsc	status,2,c
  9768  0179AA  D6B5               	goto	l11982
  9769  0179AC  0A01               	xorlw	1	; case 1
  9770  0179AE  B4D8               	btfsc	status,2,c
  9771  0179B0  D6BD               	goto	l11986
  9772  0179B2  0A03               	xorlw	3	; case 2
  9773  0179B4  B4D8               	btfsc	status,2,c
  9774  0179B6  D6ED               	goto	l12002
  9775  0179B8  0A01               	xorlw	1	; case 3
  9776  0179BA  B4D8               	btfsc	status,2,c
  9777  0179BC  D72B               	goto	l12020
  9778  0179BE                     l12052:
  9779                           
  9780                           ; BSR set to: 0
  9781                           ;bsoc.c: 260:  return -1.0;
  9782  0179BE  0E00               	movlw	0
  9783  0179C0  6E01               	movwf	btemp^0,c
  9784  0179C2  0E00               	movlw	0
  9785  0179C4  6E02               	movwf	(btemp+1)^0,c
  9786  0179C6  0E80               	movlw	128
  9787  0179C8  6E03               	movwf	(btemp+2)^0,c
  9788  0179CA  0EBF               	movlw	191
  9789  0179CC                     L6:
  9790  0179CC  6E04               	movwf	(btemp+3)^0,c
  9791  0179CE                     l2252:
  9792                           
  9793                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9794  0179CE  52E5               	movf	postdec1,f,c
  9795  0179D0  0012               	return		;funcret
  9796  0179D2                     __end_of_esr_check:
  9797                           	opt callstack 0
  9798                           
  9799 ;; *************** function _update_adc_result *****************
  9800 ;; Defined at:
  9801 ;;		line 104 in file "daq.c"
  9802 ;; Parameters:    Size  Location     Type
  9803 ;;		None
  9804 ;; Auto vars:     Size  Location     Type
  9805 ;;		None
  9806 ;; Return value:  Size  Location     Type
  9807 ;;                  1  [STACK] _Bool 
  9808 ;; Registers used:
  9809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  9810 ;; Tracked objects:
  9811 ;;		On entry : 0/0
  9812 ;;		On exit  : 0/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9819 ;;Total ram usage:        0 bytes
  9820 ;; Hardware stack levels used:    1
  9821 ;; Hardware stack levels required when called:   17
  9822 ;; This function calls:
  9823 ;;		_StartTimer
  9824 ;;		_TimerDone
  9825 ;;		_check_adc_scan
  9826 ;;		_clear_adc_scan
  9827 ;;		_start_adc_scan
  9828 ;; This function is called by:
  9829 ;;		_esr_check
  9830 ;; This function uses a reentrant model
  9831 ;;
  9832                           
  9833                           	psect	text24
  9834  01C9B6                     __ptext24:
  9835                           	opt callstack 0
  9836  01C9B6                     _update_adc_result:
  9837                           	opt callstack 12
  9838                           
  9839                           ;daq.c: 106:  if (R.done) {
  9840                           
  9841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9842                           ;incstack = 0
  9843  01C9B6  0100               	movlb	0	; () banked
  9844  01C9B8  51E3               	movf	(_R+53)& (0+255),w,b	;volatile
  9845  01C9BA  B4D8               	btfsc	status,2,c
  9846  01C9BC  0012               	return	
  9847                           
  9848                           ; BSR set to: 0
  9849                           ;daq.c: 107:   clear_adc_scan();
  9850  01C9BE  ECE8  F0E9         	call	_clear_adc_scan	;wreg free
  9851                           
  9852                           ; BSR set to: 0
  9853                           ;daq.c: 108:   start_adc_scan();
  9854  01C9C2  ECF3  F0E0         	call	_start_adc_scan	;wreg free
  9855                           
  9856                           ;daq.c: 109:   StartTimer(TMR_ADC, 200);
  9857  01C9C6  0EC8               	movlw	200
  9858  01C9C8  6EE6               	movwf	postinc1,c
  9859  01C9CA  0E00               	movlw	0
  9860  01C9CC  6EE6               	movwf	postinc1,c
  9861  01C9CE  0E01               	movlw	1
  9862  01C9D0  6EE6               	movwf	postinc1,c
  9863  01C9D2  EC5C  F0E4         	call	_StartTimer	;wreg free
  9864  01C9D6                     l11452:
  9865  01C9D6  0E01               	movlw	1
  9866  01C9D8  6EE6               	movwf	postinc1,c
  9867  01C9DA  ECCB  F0E6         	call	_TimerDone	;wreg free
  9868  01C9DE  5001               	movf	btemp^0,w,c
  9869  01C9E0  A4D8               	btfss	status,2,c
  9870  01C9E2  0012               	return	
  9871  01C9E4  ECD1  F0E9         	call	_check_adc_scan	;wreg free
  9872  01C9E8  5001               	movf	btemp^0,w,c
  9873  01C9EA  A4D8               	btfss	status,2,c
  9874  01C9EC  0012               	return	
  9875  01C9EE  D7F3               	goto	l11452
  9876  01C9F0                     __end_of_update_adc_result:
  9877                           	opt callstack 0
  9878                           
  9879 ;; *************** function _check_adc_scan *****************
  9880 ;; Defined at:
  9881 ;;		line 88 in file "daq.c"
  9882 ;; Parameters:    Size  Location     Type
  9883 ;;		None
  9884 ;; Auto vars:     Size  Location     Type
  9885 ;;		None
  9886 ;; Return value:  Size  Location     Type
  9887 ;;                  1  [STACK] _Bool 
  9888 ;; Registers used:
  9889 ;;		btemp
  9890 ;; Tracked objects:
  9891 ;;		On entry : 0/1
  9892 ;;		On exit  : 0/0
  9893 ;;		Unchanged: 0/0
  9894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9899 ;;Total ram usage:        0 bytes
  9900 ;; Hardware stack levels used:    1
  9901 ;; Hardware stack levels required when called:   15
  9902 ;; This function calls:
  9903 ;;		Nothing
  9904 ;; This function is called by:
  9905 ;;		_main
  9906 ;;		_update_adc_result
  9907 ;; This function uses a reentrant model
  9908 ;;
  9909                           
  9910                           	psect	text25
  9911  01D3A2                     __ptext25:
  9912                           	opt callstack 0
  9913  01D3A2                     _check_adc_scan:
  9914                           	opt callstack 13
  9915                           
  9916                           ;daq.c: 90:  return R.done;
  9917                           
  9918                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9919                           ;incstack = 0
  9920  01D3A2  0060  F38C  F001   	movff	_R+53,btemp	;volatile
  9921                           
  9922                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9923  01D3A8  0012               	return		;funcret
  9924  01D3AA                     __end_of_check_adc_scan:
  9925                           	opt callstack 0
  9926                           
  9927 ;; *************** function _set_load_relay_two *****************
  9928 ;; Defined at:
  9929 ;;		line 130 in file "mbmc.c"
  9930 ;; Parameters:    Size  Location     Type
  9931 ;;  mode            1  [STACK] const _Bool 
  9932 ;; Auto vars:     Size  Location     Type
  9933 ;;		None
  9934 ;; Return value:  Size  Location     Type
  9935 ;;                  1  [STACK] void 
  9936 ;; Registers used:
  9937 ;;		wreg, fsr1l, fsr1h
  9938 ;; Tracked objects:
  9939 ;;		On entry : 0/0
  9940 ;;		On exit  : 0/0
  9941 ;;		Unchanged: 0/0
  9942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9947 ;;Total ram usage:        0 bytes
  9948 ;; Hardware stack levels used:    1
  9949 ;; Hardware stack levels required when called:   15
  9950 ;; This function calls:
  9951 ;;		Nothing
  9952 ;; This function is called by:
  9953 ;;		_main
  9954 ;;		_esr_check
  9955 ;; This function uses a reentrant model
  9956 ;;
  9957                           
  9958                           	psect	text26
  9959  01D2D2                     __ptext26:
  9960                           	opt callstack 0
  9961  01D2D2                     _set_load_relay_two:
  9962                           	opt callstack 15
  9963                           
  9964                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  9965                           ;stkvar	_mode @ sp[(0)+-1]
  9966                           
  9967                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9968                           ;incstack = 0
  9969  01D2D2  0EFF               	movlw	-1
  9970  01D2D4  B0E3               	btfsc	plusw1,0,c
  9971  01D2D6  D002               	bra	u10145
  9972  01D2D8  9ABD               	bcf	189,5,c	;volatile
  9973  01D2DA  D001               	bra	u10146
  9974  01D2DC                     u10145:
  9975  01D2DC  8ABD               	bsf	189,5,c	;volatile
  9976  01D2DE                     u10146:
  9977                           
  9978                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9979  01D2DE  52E5               	movf	postdec1,f,c
  9980  01D2E0  0012               	return		;funcret
  9981  01D2E2                     __end_of_set_load_relay_two:
  9982                           	opt callstack 0
  9983                           
  9984 ;; *************** function _set_load_relay_one *****************
  9985 ;; Defined at:
  9986 ;;		line 125 in file "mbmc.c"
  9987 ;; Parameters:    Size  Location     Type
  9988 ;;  mode            1  [STACK] const _Bool 
  9989 ;; Auto vars:     Size  Location     Type
  9990 ;;		None
  9991 ;; Return value:  Size  Location     Type
  9992 ;;                  1  [STACK] void 
  9993 ;; Registers used:
  9994 ;;		wreg, fsr1l, fsr1h
  9995 ;; Tracked objects:
  9996 ;;		On entry : 0/0
  9997 ;;		On exit  : 0/0
  9998 ;;		Unchanged: 0/0
  9999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10004 ;;Total ram usage:        0 bytes
 10005 ;; Hardware stack levels used:    1
 10006 ;; Hardware stack levels required when called:   15
 10007 ;; This function calls:
 10008 ;;		Nothing
 10009 ;; This function is called by:
 10010 ;;		_main
 10011 ;;		_esr_check
 10012 ;; This function uses a reentrant model
 10013 ;;
 10014                           
 10015                           	psect	text27
 10016  01D2E2                     __ptext27:
 10017                           	opt callstack 0
 10018  01D2E2                     _set_load_relay_one:
 10019                           	opt callstack 15
 10020                           
 10021                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
 10022                           ;stkvar	_mode @ sp[(0)+-1]
 10023                           
 10024                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10025                           ;incstack = 0
 10026  01D2E2  0EFF               	movlw	-1
 10027  01D2E4  B0E3               	btfsc	plusw1,0,c
 10028  01D2E6  D002               	bra	u10135
 10029  01D2E8  98BD               	bcf	189,4,c	;volatile
 10030  01D2EA  D001               	bra	u10136
 10031  01D2EC                     u10135:
 10032  01D2EC  88BD               	bsf	189,4,c	;volatile
 10033  01D2EE                     u10136:
 10034                           
 10035                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 10036  01D2EE  52E5               	movf	postdec1,f,c
 10037  01D2F0  0012               	return		;funcret
 10038  01D2F2                     __end_of_set_load_relay_one:
 10039                           	opt callstack 0
 10040                           
 10041 ;; *************** function _eaDogM_WriteCommand *****************
 10042 ;; Defined at:
 10043 ;;		line 385 in file "eadog.c"
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;  cmd             1  [STACK] const unsigned char 
 10046 ;; Auto vars:     Size  Location     Type
 10047 ;;		None
 10048 ;; Return value:  Size  Location     Type
 10049 ;;                  1  [STACK] void 
 10050 ;; Registers used:
 10051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10052 ;; Tracked objects:
 10053 ;;		On entry : 3F/3D
 10054 ;;		On exit  : 3F/0
 10055 ;;		Unchanged: 0/0
 10056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10061 ;;Total ram usage:        0 bytes
 10062 ;; Hardware stack levels used:    1
 10063 ;; Hardware stack levels required when called:   26
 10064 ;; This function calls:
 10065 ;;		_send_lcd_cmd_dma
 10066 ;; This function is called by:
 10067 ;;		_main
 10068 ;; This function uses a reentrant model
 10069 ;;
 10070                           
 10071                           	psect	text28
 10072  01D322                     __ptext28:
 10073                           	opt callstack 0
 10074  01D322                     _eaDogM_WriteCommand:
 10075                           	opt callstack 4
 10076                           
 10077                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
 10078                           ;stkvar	_cmd @ sp[(0)+-1]
 10079                           
 10080                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10081                           ;incstack = 0
 10082  01D322  0EFF               	movlw	-1
 10083  01D324  50E3               	movf	plusw1,w,c
 10084  01D326  6EE6               	movwf	postinc1,c
 10085  01D328  ECB2  F0E8         	call	_send_lcd_cmd_dma	;wreg free
 10086                           
 10087                           ; BSR set to: 0
 10088                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 10089  01D32C  52E5               	movf	postdec1,f,c
 10090  01D32E  0012               	return		;funcret
 10091  01D330                     __end_of_eaDogM_WriteCommand:
 10092                           	opt callstack 0
 10093                           
 10094 ;; *************** function _current_sensor_cal *****************
 10095 ;; Defined at:
 10096 ;;		line 483 in file "main.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;		None
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;  cp              4  [STACK] unsigned long 
 10101 ;;  cb              4  [STACK] unsigned long 
 10102 ;;  x               1  [STACK] unsigned char 
 10103 ;; Return value:  Size  Location     Type
 10104 ;;                  1  [STACK] _Bool 
 10105 ;; Registers used:
 10106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10107 ;; Tracked objects:
 10108 ;;		On entry : 0/1
 10109 ;;		On exit  : 0/0
 10110 ;;		Unchanged: 0/0
 10111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10116 ;;Total ram usage:        0 bytes
 10117 ;; Hardware stack levels used:    1
 10118 ;; Hardware stack levels required when called:   28
 10119 ;; This function calls:
 10120 ;;		_WaitMs
 10121 ;;		_cal_current_zero
 10122 ;;		_clear_adc_scan
 10123 ;;		_get_raw_result
 10124 ;;		_get_switch
 10125 ;;		_get_vterm_ptr
 10126 ;;		_spinners
 10127 ;;		_sprintf
 10128 ;;		_start_adc_scan
 10129 ;;		_update_lcd
 10130 ;;		_write_cal_data
 10131 ;; This function is called by:
 10132 ;;		_main
 10133 ;; This function uses a reentrant model
 10134 ;;
 10135                           
 10136                           	psect	text29
 10137  0158F8                     __ptext29:
 10138                           	opt callstack 0
 10139  0158F8                     _current_sensor_cal:
 10140                           	opt callstack 0
 10141                           
 10142                           ; BSR set to: 0
 10143                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10144  0158F8  0E09               	movlw	9
 10145  0158FA  26E1               	addwf	fsr1l,f,c
 10146  0158FC  0E00               	movlw	0
 10147  0158FE  22E2               	addwfc	fsr1h,f,c
 10148                           
 10149                           ;main.c: 485:  uint8_t x = 0;
 10150                           ;stkvar	_x @ sp[(-9)+8]
 10151                           
 10152                           ;incstack = 0
 10153  015900  0EFF               	movlw	-1
 10154  015902  6AE3               	clrf	plusw1,c
 10155                           
 10156                           ;main.c: 486:  uint32_t cb = 0, cp = 0;
 10157                           ;stkvar	_cb @ sp[(-9)+4]
 10158  015904  0EFB               	movlw	-5
 10159  015906  6AE3               	clrf	plusw1,c
 10160  015908  0EFC               	movlw	-4
 10161  01590A  6AE3               	clrf	plusw1,c
 10162  01590C  0EFD               	movlw	-3
 10163  01590E  6AE3               	clrf	plusw1,c
 10164  015910  0EFE               	movlw	-2
 10165  015912  6AE3               	clrf	plusw1,c
 10166                           
 10167                           ;stkvar	_cp @ sp[(-9)+0]
 10168  015914  0EF7               	movlw	-9
 10169  015916  6AE3               	clrf	plusw1,c
 10170  015918  0EF8               	movlw	-8
 10171  01591A  6AE3               	clrf	plusw1,c
 10172  01591C  0EF9               	movlw	-7
 10173  01591E  6AE3               	clrf	plusw1,c
 10174  015920  0EFA               	movlw	-6
 10175  015922  6AE3               	clrf	plusw1,c
 10176                           
 10177                           ;main.c: 488:  sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
 10178  015924  0EB6               	movlw	low STR_46
 10179  015926  6EE6               	movwf	postinc1,c
 10180  015928  0EFE               	movlw	high STR_46
 10181  01592A  6EE6               	movwf	postinc1,c
 10182  01592C  0E00               	movlw	0
 10183  01592E  6EE6               	movwf	postinc1,c
 10184  015930  0E00               	movlw	0
 10185  015932  6EE6               	movwf	postinc1,c
 10186  015934  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 10187  015938  0060  F007  FFE6   	movff	btemp,postinc1
 10188  01593E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10189  015944  0E04               	movlw	4
 10190  015946  6EE6               	movwf	postinc1,c
 10191  015948  EC4D  F0D5         	call	_sprintf	;wreg free
 10192                           
 10193                           ; BSR set to: 0
 10194                           ;main.c: 489:  sprintf(get_vterm_ptr(1, 0), "Sensor              ");
 10195  01594C  0ECF               	movlw	low STR_47
 10196  01594E  6EE6               	movwf	postinc1,c
 10197  015950  0EFD               	movlw	high STR_47
 10198  015952  6EE6               	movwf	postinc1,c
 10199  015954  0E00               	movlw	0
 10200  015956  6EE6               	movwf	postinc1,c
 10201  015958  0E01               	movlw	1
 10202  01595A  6EE6               	movwf	postinc1,c
 10203  01595C  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 10204  015960  0060  F007  FFE6   	movff	btemp,postinc1
 10205  015966  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10206  01596C  0E04               	movlw	4
 10207  01596E  6EE6               	movwf	postinc1,c
 10208  015970  EC4D  F0D5         	call	_sprintf	;wreg free
 10209                           
 10210                           ; BSR set to: 0
 10211                           ;main.c: 490:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 10212  015974  0E4D               	movlw	low STR_48
 10213  015976  6EE6               	movwf	postinc1,c
 10214  015978  0EFE               	movlw	high STR_48
 10215  01597A  6EE6               	movwf	postinc1,c
 10216  01597C  0E00               	movlw	0
 10217  01597E  6EE6               	movwf	postinc1,c
 10218  015980  0E02               	movlw	2
 10219  015982  6EE6               	movwf	postinc1,c
 10220  015984  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 10221  015988  0060  F007  FFE6   	movff	btemp,postinc1
 10222  01598E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10223  015994  0E04               	movlw	4
 10224  015996  6EE6               	movwf	postinc1,c
 10225  015998  EC4D  F0D5         	call	_sprintf	;wreg free
 10226                           
 10227                           ; BSR set to: 0
 10228                           ;main.c: 491:  update_lcd(0);
 10229  01599C  0E00               	movlw	0
 10230  01599E  6EE6               	movwf	postinc1,c
 10231  0159A0  ECC5  F0D4         	call	_update_lcd	;wreg free
 10232                           
 10233                           ;main.c: 492:  WaitMs(2000);
 10234  0159A4  0ED0               	movlw	208
 10235  0159A6  6EE6               	movwf	postinc1,c
 10236  0159A8  0E07               	movlw	7
 10237  0159AA  6EE6               	movwf	postinc1,c
 10238  0159AC  EC4D  F0E5         	call	_WaitMs	;wreg free
 10239                           
 10240                           ;main.c: 493:  sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 10241  0159B0  0E00               	movlw	0
 10242  0159B2  6EE6               	movwf	postinc1,c
 10243  0159B4  0E04               	movlw	4
 10244  0159B6  6EE6               	movwf	postinc1,c
 10245  0159B8  ECD2  F0D5         	call	_spinners	;wreg free
 10246  0159BC  5001               	movf	btemp^0,w,c
 10247  0159BE  6EE6               	movwf	postinc1,c
 10248  0159C0  0E00               	movlw	0
 10249  0159C2  6EE6               	movwf	postinc1,c
 10250  0159C4  0E49               	movlw	low STR_49
 10251  0159C6  6EE6               	movwf	postinc1,c
 10252  0159C8  0EFF               	movlw	high STR_49
 10253  0159CA  6EE6               	movwf	postinc1,c
 10254  0159CC  0E00               	movlw	0
 10255  0159CE  6EE6               	movwf	postinc1,c
 10256  0159D0  0E02               	movlw	2
 10257  0159D2  6EE6               	movwf	postinc1,c
 10258  0159D4  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 10259  0159D8  0060  F007  FFE6   	movff	btemp,postinc1
 10260  0159DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10261  0159E4  0E06               	movlw	6
 10262  0159E6  6EE6               	movwf	postinc1,c
 10263  0159E8  EC4D  F0D5         	call	_sprintf	;wreg free
 10264                           
 10265                           ; BSR set to: 0
 10266                           ;main.c: 494:  update_lcd(0);
 10267  0159EC  0E00               	movlw	0
 10268  0159EE  6EE6               	movwf	postinc1,c
 10269  0159F0  ECC5  F0D4         	call	_update_lcd	;wreg free
 10270  0159F4                     l14194:
 10271                           
 10272                           ;main.c: 496:   if (++x > 64)
 10273                           ;stkvar	_x @ sp[(-9)+8]
 10274  0159F4  0EFF               	movlw	-1
 10275  0159F6  2AE3               	incf	plusw1,f,c
 10276  0159F8  0EFF               	movlw	-1
 10277  0159FA  006F FF8C  F001    	movff	plusw1,btemp
 10278  015A00  0E40               	movlw	64
 10279  015A02  6401               	cpfsgt	btemp^0,c
 10280  015A04  D001               	goto	l14198
 10281  015A06  D1CF               	goto	l1408
 10282  015A08                     l14198:
 10283                           
 10284                           ;main.c: 498:   sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 10285  015A08  0E00               	movlw	0
 10286  015A0A  6EE6               	movwf	postinc1,c
 10287  015A0C  0E04               	movlw	4
 10288  015A0E  6EE6               	movwf	postinc1,c
 10289  015A10  ECD2  F0D5         	call	_spinners	;wreg free
 10290  015A14  5001               	movf	btemp^0,w,c
 10291  015A16  6EE6               	movwf	postinc1,c
 10292  015A18  0E00               	movlw	0
 10293  015A1A  6EE6               	movwf	postinc1,c
 10294  015A1C  0E49               	movlw	low STR_49
 10295  015A1E  6EE6               	movwf	postinc1,c
 10296  015A20  0EFF               	movlw	high STR_49
 10297  015A22  6EE6               	movwf	postinc1,c
 10298  015A24  0E00               	movlw	0
 10299  015A26  6EE6               	movwf	postinc1,c
 10300  015A28  0E02               	movlw	2
 10301  015A2A  6EE6               	movwf	postinc1,c
 10302  015A2C  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 10303  015A30  0060  F007  FFE6   	movff	btemp,postinc1
 10304  015A36  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10305  015A3C  0E06               	movlw	6
 10306  015A3E  6EE6               	movwf	postinc1,c
 10307  015A40  EC4D  F0D5         	call	_sprintf	;wreg free
 10308                           
 10309                           ;main.c: 499:   update_lcd(0);
 10310  015A44  0E00               	movlw	0
 10311  015A46  6EE6               	movwf	postinc1,c
 10312  015A48  ECC5  F0D4         	call	_update_lcd	;wreg free
 10313                           
 10314                           ;main.c: 500:   WaitMs(100);
 10315  015A4C  0E64               	movlw	100
 10316  015A4E  6EE6               	movwf	postinc1,c
 10317  015A50  0E00               	movlw	0
 10318  015A52  6EE6               	movwf	postinc1,c
 10319  015A54  EC4D  F0E5         	call	_WaitMs	;wreg free
 10320                           
 10321                           ;main.c: 501:  } while (get_switch(SCALIB));
 10322  015A58  0E04               	movlw	4
 10323  015A5A  6EE6               	movwf	postinc1,c
 10324  015A5C  EC60  F0E6         	call	_get_switch	;wreg free
 10325  015A60  5001               	movf	btemp^0,w,c
 10326  015A62  A4D8               	btfss	status,2,c
 10327  015A64  D7C7               	goto	l14194
 10328                           
 10329                           ;main.c: 503:  x = 0;
 10330                           ;stkvar	_x @ sp[(-9)+8]
 10331  015A66  0EFF               	movlw	-1
 10332  015A68  6AE3               	clrf	plusw1,c
 10333  015A6A                     l14206:
 10334                           
 10335                           ;main.c: 505:   cb += get_raw_result(C_BATT);
 10336  015A6A  0E00               	movlw	0
 10337  015A6C  6EE6               	movwf	postinc1,c
 10338  015A6E  ECDF  F0E8         	call	_get_raw_result	;wreg free
 10339                           
 10340                           ;stkvar	_cb @ sp[(-9)+4]
 10341  015A72  50E1               	movf	fsr1l,w,c
 10342  015A74  0FFB               	addlw	-5
 10343  015A76  6ED9               	movwf	fsr2l,c
 10344  015A78  50E2               	movf	fsr1h,w,c
 10345  015A7A  6EDA               	movwf	fsr2h,c
 10346  015A7C  0EFF               	movlw	255
 10347  015A7E  22DA               	addwfc	fsr2h,f,c
 10348  015A80  5001               	movf	btemp^0,w,c
 10349  015A82  26DE               	addwf	postinc2,f,c
 10350  015A84  5002               	movf	(btemp+1)^0,w,c
 10351  015A86  22DE               	addwfc	postinc2,f,c
 10352  015A88  0E00               	movlw	0
 10353  015A8A  22DE               	addwfc	postinc2,f,c
 10354  015A8C  22DE               	addwfc	postinc2,f,c
 10355                           
 10356                           ;main.c: 506:   cp += get_raw_result(C_PV);
 10357  015A8E  0E01               	movlw	1
 10358  015A90  6EE6               	movwf	postinc1,c
 10359  015A92  ECDF  F0E8         	call	_get_raw_result	;wreg free
 10360                           
 10361                           ;stkvar	_cp @ sp[(-9)+0]
 10362  015A96  50E1               	movf	fsr1l,w,c
 10363  015A98  0FF7               	addlw	-9
 10364  015A9A  6ED9               	movwf	fsr2l,c
 10365  015A9C  50E2               	movf	fsr1h,w,c
 10366  015A9E  6EDA               	movwf	fsr2h,c
 10367  015AA0  0EFF               	movlw	255
 10368  015AA2  22DA               	addwfc	fsr2h,f,c
 10369  015AA4  5001               	movf	btemp^0,w,c
 10370  015AA6  26DE               	addwf	postinc2,f,c
 10371  015AA8  5002               	movf	(btemp+1)^0,w,c
 10372  015AAA  22DE               	addwfc	postinc2,f,c
 10373  015AAC  0E00               	movlw	0
 10374  015AAE  22DE               	addwfc	postinc2,f,c
 10375  015AB0  22DE               	addwfc	postinc2,f,c
 10376                           
 10377                           ;main.c: 507:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
 10378  015AB2  0EE0               	movlw	low STR_51
 10379  015AB4  6EE6               	movwf	postinc1,c
 10380  015AB6  0EFE               	movlw	high STR_51
 10381  015AB8  6EE6               	movwf	postinc1,c
 10382  015ABA  0E00               	movlw	0
 10383  015ABC  6EE6               	movwf	postinc1,c
 10384  015ABE  0E00               	movlw	0
 10385  015AC0  6EE6               	movwf	postinc1,c
 10386  015AC2  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 10387  015AC6  0060  F007  FFE6   	movff	btemp,postinc1
 10388  015ACC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10389  015AD2  0E04               	movlw	4
 10390  015AD4  6EE6               	movwf	postinc1,c
 10391  015AD6  EC4D  F0D5         	call	_sprintf	;wreg free
 10392                           
 10393                           ; BSR set to: 0
 10394                           ;main.c: 508:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 10395  015ADA  0E01               	movlw	1
 10396  015ADC  6EE6               	movwf	postinc1,c
 10397  015ADE  ECDF  F0E8         	call	_get_raw_result	;wreg free
 10398  015AE2  0060  F007  FFE6   	movff	btemp,postinc1
 10399  015AE8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10400  015AEE  0E00               	movlw	0
 10401  015AF0  6EE6               	movwf	postinc1,c
 10402  015AF2  ECDF  F0E8         	call	_get_raw_result	;wreg free
 10403  015AF6  0060  F007  FFE6   	movff	btemp,postinc1
 10404  015AFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10405  015B02  0EBA               	movlw	low STR_52
 10406  015B04  6EE6               	movwf	postinc1,c
 10407  015B06  0EFD               	movlw	high STR_52
 10408  015B08  6EE6               	movwf	postinc1,c
 10409  015B0A  0E00               	movlw	0
 10410  015B0C  6EE6               	movwf	postinc1,c
 10411  015B0E  0E01               	movlw	1
 10412  015B10  6EE6               	movwf	postinc1,c
 10413  015B12  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 10414  015B16  0060  F007  FFE6   	movff	btemp,postinc1
 10415  015B1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10416  015B22  0E08               	movlw	8
 10417  015B24  6EE6               	movwf	postinc1,c
 10418  015B26  EC4D  F0D5         	call	_sprintf	;wreg free
 10419                           
 10420                           ; BSR set to: 0
 10421                           ;main.c: 509:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
 10422                           ;stkvar	_x @ sp[(-9)+8]
 10423  015B2A  0EFF               	movlw	-1
 10424  015B2C  50E3               	movf	plusw1,w,c
 10425  015B2E  6EE6               	movwf	postinc1,c
 10426  015B30  0E00               	movlw	0
 10427  015B32  6EE6               	movwf	postinc1,c
 10428  015B34  0E1F               	movlw	low STR_53
 10429  015B36  6EE6               	movwf	postinc1,c
 10430  015B38  0EFF               	movlw	high STR_53
 10431  015B3A  6EE6               	movwf	postinc1,c
 10432  015B3C  0E00               	movlw	0
 10433  015B3E  6EE6               	movwf	postinc1,c
 10434  015B40  0E02               	movlw	2
 10435  015B42  6EE6               	movwf	postinc1,c
 10436  015B44  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 10437  015B48  0060  F007  FFE6   	movff	btemp,postinc1
 10438  015B4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10439  015B54  0E06               	movlw	6
 10440  015B56  6EE6               	movwf	postinc1,c
 10441  015B58  EC4D  F0D5         	call	_sprintf	;wreg free
 10442                           
 10443                           ; BSR set to: 0
 10444                           ;main.c: 510:   update_lcd(0);
 10445  015B5C  0E00               	movlw	0
 10446  015B5E  6EE6               	movwf	postinc1,c
 10447  015B60  ECC5  F0D4         	call	_update_lcd	;wreg free
 10448                           
 10449                           ;main.c: 511:   clear_adc_scan();
 10450  015B64  ECE8  F0E9         	call	_clear_adc_scan	;wreg free
 10451                           
 10452                           ; BSR set to: 0
 10453                           ;main.c: 512:   start_adc_scan();
 10454  015B68  ECF3  F0E0         	call	_start_adc_scan	;wreg free
 10455                           
 10456                           ;main.c: 513:   WaitMs(100);
 10457  015B6C  0E64               	movlw	100
 10458  015B6E  6EE6               	movwf	postinc1,c
 10459  015B70  0E00               	movlw	0
 10460  015B72  6EE6               	movwf	postinc1,c
 10461  015B74  EC4D  F0E5         	call	_WaitMs	;wreg free
 10462                           
 10463                           ;main.c: 514:  } while (++x < 64);
 10464                           ;stkvar	_x @ sp[(-9)+8]
 10465  015B78  0EFF               	movlw	-1
 10466  015B7A  2AE3               	incf	plusw1,f,c
 10467  015B7C  0EFF               	movlw	-1
 10468  015B7E  006F FF8C  F001    	movff	plusw1,btemp
 10469  015B84  0E3F               	movlw	63
 10470  015B86  6401               	cpfsgt	btemp^0,c
 10471  015B88  D770               	goto	l14206
 10472                           
 10473                           ;main.c: 515:  cb = cb >> 6;
 10474  015B8A  0E06               	movlw	6
 10475  015B8C  6E0C               	movwf	(btemp+11)^0,c
 10476                           
 10477                           ;stkvar	_cb @ sp[(-9)+4]
 10478  015B8E  50E1               	movf	fsr1l,w,c
 10479  015B90  0FFB               	addlw	-5
 10480  015B92  6ED9               	movwf	fsr2l,c
 10481  015B94  50E2               	movf	fsr1h,w,c
 10482  015B96  6EDA               	movwf	fsr2h,c
 10483  015B98  0EFF               	movlw	255
 10484  015B9A  22DA               	addwfc	fsr2h,f,c
 10485  015B9C  280C               	incf	(btemp+11)^0,w,c
 10486  015B9E  52DE               	movf	postinc2,f,c
 10487  015BA0  D007               	goto	u13540
 10488  015BA2                     u13545:
 10489  015BA2  52DE               	movf	postinc2,f,c
 10490  015BA4  52DE               	movf	postinc2,f,c
 10491  015BA6  90D8               	bcf	status,0,c
 10492  015BA8  32DD               	rrcf	postdec2,f,c
 10493  015BAA  32DD               	rrcf	postdec2,f,c
 10494  015BAC  32DD               	rrcf	postdec2,f,c
 10495  015BAE  32DE               	rrcf	postinc2,f,c
 10496  015BB0                     u13540:
 10497  015BB0  2EE8               	decfsz	wreg,f,c
 10498  015BB2  D7F7               	goto	u13545
 10499                           
 10500                           ;main.c: 516:  cp = cp >> 6;
 10501  015BB4  0E06               	movlw	6
 10502  015BB6  6E0C               	movwf	(btemp+11)^0,c
 10503                           
 10504                           ;stkvar	_cp @ sp[(-9)+0]
 10505  015BB8  50E1               	movf	fsr1l,w,c
 10506  015BBA  0FF7               	addlw	-9
 10507  015BBC  6ED9               	movwf	fsr2l,c
 10508  015BBE  50E2               	movf	fsr1h,w,c
 10509  015BC0  6EDA               	movwf	fsr2h,c
 10510  015BC2  0EFF               	movlw	255
 10511  015BC4  22DA               	addwfc	fsr2h,f,c
 10512  015BC6  280C               	incf	(btemp+11)^0,w,c
 10513  015BC8  52DE               	movf	postinc2,f,c
 10514  015BCA  D007               	goto	u13550
 10515  015BCC                     u13555:
 10516  015BCC  52DE               	movf	postinc2,f,c
 10517  015BCE  52DE               	movf	postinc2,f,c
 10518  015BD0  90D8               	bcf	status,0,c
 10519  015BD2  32DD               	rrcf	postdec2,f,c
 10520  015BD4  32DD               	rrcf	postdec2,f,c
 10521  015BD6  32DD               	rrcf	postdec2,f,c
 10522  015BD8  32DE               	rrcf	postinc2,f,c
 10523  015BDA                     u13550:
 10524  015BDA  2EE8               	decfsz	wreg,f,c
 10525  015BDC  D7F7               	goto	u13555
 10526                           
 10527                           ;main.c: 518:  if (cal_current_zero(0, cb, cp)) {
 10528                           ;stkvar	_cp @ sp[(-9)+0]
 10529  015BDE  0EF7               	movlw	-9
 10530  015BE0  006F FF8F FFE6     	movff	plusw1,postinc1
 10531  015BE6  006F FF8F FFE6     	movff	plusw1,postinc1
 10532                           
 10533                           ;stkvar	_cb @ sp[(-11)+4]
 10534  015BEC  0EF9               	movlw	-7
 10535  015BEE  006F FF8F FFE6     	movff	plusw1,postinc1
 10536  015BF4  006F FF8F FFE6     	movff	plusw1,postinc1
 10537  015BFA  0E00               	movlw	0
 10538  015BFC  6EE6               	movwf	postinc1,c
 10539  015BFE  EC79  F0DD         	call	_cal_current_zero	;wreg free
 10540  015C02  5001               	movf	btemp^0,w,c
 10541  015C04  B4D8               	btfsc	status,2,c
 10542  015C06  D075               	goto	l14244
 10543                           
 10544                           ;main.c: 519:   cal_current_zero(1, cb, cp);
 10545                           ;stkvar	_cp @ sp[(-9)+0]
 10546  015C08  0EF7               	movlw	-9
 10547  015C0A  006F FF8F FFE6     	movff	plusw1,postinc1
 10548  015C10  006F FF8F FFE6     	movff	plusw1,postinc1
 10549                           
 10550                           ;stkvar	_cb @ sp[(-11)+4]
 10551  015C16  0EF9               	movlw	-7
 10552  015C18  006F FF8F FFE6     	movff	plusw1,postinc1
 10553  015C1E  006F FF8F FFE6     	movff	plusw1,postinc1
 10554  015C24  0E01               	movlw	1
 10555  015C26  6EE6               	movwf	postinc1,c
 10556  015C28  EC79  F0DD         	call	_cal_current_zero	;wreg free
 10557                           
 10558                           ;main.c: 520:   sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
 10559  015C2C  0EB6               	movlw	low STR_46
 10560  015C2E  6EE6               	movwf	postinc1,c
 10561  015C30  0EFE               	movlw	high STR_46
 10562  015C32  6EE6               	movwf	postinc1,c
 10563  015C34  0E00               	movlw	0
 10564  015C36  6EE6               	movwf	postinc1,c
 10565  015C38  0E00               	movlw	0
 10566  015C3A  6EE6               	movwf	postinc1,c
 10567  015C3C  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 10568  015C40  0060  F007  FFE6   	movff	btemp,postinc1
 10569  015C46  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10570  015C4C  0E04               	movlw	4
 10571  015C4E  6EE6               	movwf	postinc1,c
 10572  015C50  EC4D  F0D5         	call	_sprintf	;wreg free
 10573                           
 10574                           ; BSR set to: 0
 10575                           ;main.c: 521:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", cb, cp);
 10576                           ;stkvar	_cp @ sp[(-9)+0]
 10577  015C54  0EF7               	movlw	-9
 10578  015C56  006F FF8F FFE6     	movff	plusw1,postinc1
 10579  015C5C  006F FF8F FFE6     	movff	plusw1,postinc1
 10580  015C62  006F FF8F FFE6     	movff	plusw1,postinc1
 10581  015C68  006F FF8F FFE6     	movff	plusw1,postinc1
 10582                           
 10583                           ;stkvar	_cb @ sp[(-13)+4]
 10584  015C6E  0EF7               	movlw	-9
 10585  015C70  006F FF8F FFE6     	movff	plusw1,postinc1
 10586  015C76  006F FF8F FFE6     	movff	plusw1,postinc1
 10587  015C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 10588  015C82  006F FF8F FFE6     	movff	plusw1,postinc1
 10589  015C88  0EE4               	movlw	low STR_55
 10590  015C8A  6EE6               	movwf	postinc1,c
 10591  015C8C  0EFD               	movlw	high STR_55
 10592  015C8E  6EE6               	movwf	postinc1,c
 10593  015C90  0E00               	movlw	0
 10594  015C92  6EE6               	movwf	postinc1,c
 10595  015C94  0E01               	movlw	1
 10596  015C96  6EE6               	movwf	postinc1,c
 10597  015C98  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 10598  015C9C  0060  F007  FFE6   	movff	btemp,postinc1
 10599  015CA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10600  015CA8  0E0C               	movlw	12
 10601  015CAA  6EE6               	movwf	postinc1,c
 10602  015CAC  EC4D  F0D5         	call	_sprintf	;wreg free
 10603                           
 10604                           ; BSR set to: 0
 10605                           ;main.c: 522:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set        ");
 10606  015CB0  0E8C               	movlw	low STR_56
 10607  015CB2  6EE6               	movwf	postinc1,c
 10608  015CB4  0EFE               	movlw	high STR_56
 10609  015CB6  6EE6               	movwf	postinc1,c
 10610  015CB8  0E00               	movlw	0
 10611  015CBA  6EE6               	movwf	postinc1,c
 10612  015CBC  0E02               	movlw	2
 10613  015CBE  6EE6               	movwf	postinc1,c
 10614  015CC0  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 10615  015CC4  0060  F007  FFE6   	movff	btemp,postinc1
 10616  015CCA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10617  015CD0  0E04               	movlw	4
 10618  015CD2  6EE6               	movwf	postinc1,c
 10619  015CD4  EC4D  F0D5         	call	_sprintf	;wreg free
 10620                           
 10621                           ; BSR set to: 0
 10622                           ;main.c: 523:   update_lcd(0);
 10623  015CD8  0E00               	movlw	0
 10624  015CDA  6EE6               	movwf	postinc1,c
 10625  015CDC  ECC5  F0D4         	call	_update_lcd	;wreg free
 10626                           
 10627                           ;main.c: 524:   WaitMs(2000);
 10628  015CE0  0ED0               	movlw	208
 10629  015CE2  6EE6               	movwf	postinc1,c
 10630  015CE4  0E07               	movlw	7
 10631  015CE6  6EE6               	movwf	postinc1,c
 10632  015CE8  EC4D  F0E5         	call	_WaitMs	;wreg free
 10633                           
 10634                           ;main.c: 525:   write_cal_data();
 10635  015CEC  EC63  F0D1         	call	_write_cal_data	;wreg free
 10636                           
 10637                           ;main.c: 526:  } else {
 10638  015CF0  D05A               	goto	l1408
 10639  015CF2                     l14244:
 10640                           
 10641                           ;main.c: 527:   sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
 10642  015CF2  0EB6               	movlw	low STR_46
 10643  015CF4  6EE6               	movwf	postinc1,c
 10644  015CF6  0EFE               	movlw	high STR_46
 10645  015CF8  6EE6               	movwf	postinc1,c
 10646  015CFA  0E00               	movlw	0
 10647  015CFC  6EE6               	movwf	postinc1,c
 10648  015CFE  0E00               	movlw	0
 10649  015D00  6EE6               	movwf	postinc1,c
 10650  015D02  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 10651  015D06  0060  F007  FFE6   	movff	btemp,postinc1
 10652  015D0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10653  015D12  0E04               	movlw	4
 10654  015D14  6EE6               	movwf	postinc1,c
 10655  015D16  EC4D  F0D5         	call	_sprintf	;wreg free
 10656                           
 10657                           ;main.c: 528:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 10658  015D1A  0E01               	movlw	1
 10659  015D1C  6EE6               	movwf	postinc1,c
 10660  015D1E  ECDF  F0E8         	call	_get_raw_result	;wreg free
 10661  015D22  0060  F007  FFE6   	movff	btemp,postinc1
 10662  015D28  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10663  015D2E  0E00               	movlw	0
 10664  015D30  6EE6               	movwf	postinc1,c
 10665  015D32  ECDF  F0E8         	call	_get_raw_result	;wreg free
 10666  015D36  0060  F007  FFE6   	movff	btemp,postinc1
 10667  015D3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10668  015D42  0EE4               	movlw	low STR_55
 10669  015D44  6EE6               	movwf	postinc1,c
 10670  015D46  0EFD               	movlw	high STR_55
 10671  015D48  6EE6               	movwf	postinc1,c
 10672  015D4A  0E00               	movlw	0
 10673  015D4C  6EE6               	movwf	postinc1,c
 10674  015D4E  0E01               	movlw	1
 10675  015D50  6EE6               	movwf	postinc1,c
 10676  015D52  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 10677  015D56  0060  F007  FFE6   	movff	btemp,postinc1
 10678  015D5C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10679  015D62  0E08               	movlw	8
 10680  015D64  6EE6               	movwf	postinc1,c
 10681  015D66  EC4D  F0D5         	call	_sprintf	;wreg free
 10682                           
 10683                           ;main.c: 529:   sprintf(get_vterm_ptr(2, 0), "Out Of Range        ");
 10684  015D6A  0E77               	movlw	low STR_59
 10685  015D6C  6EE6               	movwf	postinc1,c
 10686  015D6E  0EFE               	movlw	high STR_59
 10687  015D70  6EE6               	movwf	postinc1,c
 10688  015D72  0E00               	movlw	0
 10689  015D74  6EE6               	movwf	postinc1,c
 10690  015D76  0E02               	movlw	2
 10691  015D78  6EE6               	movwf	postinc1,c
 10692  015D7A  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 10693  015D7E  0060  F007  FFE6   	movff	btemp,postinc1
 10694  015D84  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10695  015D8A  0E04               	movlw	4
 10696  015D8C  6EE6               	movwf	postinc1,c
 10697  015D8E  EC4D  F0D5         	call	_sprintf	;wreg free
 10698                           
 10699                           ;main.c: 530:   update_lcd(0);
 10700  015D92  0E00               	movlw	0
 10701  015D94  6EE6               	movwf	postinc1,c
 10702  015D96  ECC5  F0D4         	call	_update_lcd	;wreg free
 10703                           
 10704                           ;main.c: 531:   WaitMs(2000);
 10705  015D9A  0ED0               	movlw	208
 10706  015D9C  6EE6               	movwf	postinc1,c
 10707  015D9E  0E07               	movlw	7
 10708  015DA0  6EE6               	movwf	postinc1,c
 10709  015DA2  EC4D  F0E5         	call	_WaitMs	;wreg free
 10710  015DA6                     l1408:
 10711                           
 10712                           ; _current_sensor_cal: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 10713  015DA6  0EF7               	movlw	247
 10714  015DA8  26E1               	addwf	fsr1l,f,c
 10715  015DAA  0EFF               	movlw	255
 10716  015DAC  22E2               	addwfc	fsr1h,f,c
 10717  015DAE  0012               	return		;funcret
 10718  015DB0                     __end_of_current_sensor_cal:
 10719                           	opt callstack 0
 10720                           
 10721 ;; *************** function _write_cal_data *****************
 10722 ;; Defined at:
 10723 ;;		line 388 in file "daq.c"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;		None
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;  x               2  [STACK] unsigned short 
 10728 ;;  y               2  [STACK] unsigned short 
 10729 ;;  r_cal_ptr       1  [STACK] PTR unsigned char 
 10730 ;;		 -> R(57), 
 10731 ;;  crcVal          1  [STACK] unsigned char 
 10732 ;; Return value:  Size  Location     Type
 10733 ;;                  1  [STACK] void 
 10734 ;; Registers used:
 10735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 10736 ;; Tracked objects:
 10737 ;;		On entry : 0/0
 10738 ;;		On exit  : 0/0
 10739 ;;		Unchanged: 0/0
 10740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10745 ;;Total ram usage:        0 bytes
 10746 ;; Hardware stack levels used:    1
 10747 ;; Hardware stack levels required when called:   17
 10748 ;; This function calls:
 10749 ;;		_CRC_8BitDataWrite
 10750 ;;		_CRC_CalculatedResultGet
 10751 ;;		_CRC_Initialize
 10752 ;;		_CRC_IsBusy
 10753 ;;		_CRC_Start
 10754 ;;		_DATAEE_WriteByte
 10755 ;; This function is called by:
 10756 ;;		_current_sensor_cal
 10757 ;; This function uses a reentrant model
 10758 ;;
 10759                           
 10760                           	psect	text30
 10761  01A2C6                     __ptext30:
 10762                           	opt callstack 0
 10763  01A2C6                     _write_cal_data:
 10764                           	opt callstack 0
 10765                           
 10766                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10767  01A2C6  0E06               	movlw	6
 10768  01A2C8  26E1               	addwf	fsr1l,f,c
 10769  01A2CA  0E00               	movlw	0
 10770  01A2CC  22E2               	addwfc	fsr1h,f,c
 10771                           
 10772                           ;daq.c: 390:  uint16_t x = 0, y;
 10773                           ;stkvar	_x @ sp[(-6)+0]
 10774                           
 10775                           ;incstack = 0
 10776  01A2CE  0EFA               	movlw	-6
 10777  01A2D0  6AE3               	clrf	plusw1,c
 10778  01A2D2  0EFB               	movlw	-5
 10779  01A2D4  6AE3               	clrf	plusw1,c
 10780                           
 10781                           ;daq.c: 391:  uint8_t *r_cal_ptr, crcVal;;daq.c: 393:  y = sizeof(R);
 10782  01A2D6  0E39               	movlw	57
 10783  01A2D8  6E0B               	movwf	(btemp+10)^0,c
 10784  01A2DA  0E00               	movlw	0
 10785  01A2DC  6E0C               	movwf	(btemp+11)^0,c
 10786                           
 10787                           ;stkvar	_y @ sp[(-6)+2]
 10788  01A2DE  0EFC               	movlw	-4
 10789  01A2E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10790  01A2E6  0EFD               	movlw	-3
 10791  01A2E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 10792                           
 10793                           ;daq.c: 394:  R.crc = 0x42;
 10794  01A2EE  0E42               	movlw	66
 10795  01A2F0  0100               	movlb	0	; () banked
 10796  01A2F2  6FE6               	movwf	(_R+56)& (0+255),b	;volatile
 10797                           
 10798                           ; BSR set to: 0
 10799                           ;daq.c: 395:  r_cal_ptr = (uint8_t*) & R;
 10800                           ;stkvar	_r_cal_ptr @ sp[(-6)+4]
 10801  01A2F4  0EAE               	movlw	low _R
 10802  01A2F6  6E01               	movwf	btemp^0,c
 10803  01A2F8  0EFE               	movlw	-2
 10804  01A2FA  0060  F007  FFE3   	movff	btemp,plusw1
 10805                           
 10806                           ; BSR set to: 0
 10807                           ;daq.c: 396:  R.checkmark = 0x1957;
 10808  01A300  0E19               	movlw	25
 10809  01A302  6FE5               	movwf	(_R+55)& (0+255),b	;volatile
 10810  01A304  0E57               	movlw	87
 10811  01A306  6FE4               	movwf	(_R+54)& (0+255),b	;volatile
 10812                           
 10813                           ; BSR set to: 0
 10814                           ;daq.c: 398:  CRC_Initialize();
 10815  01A308  EC30  F0DD         	call	_CRC_Initialize	;wreg free
 10816                           
 10817                           ; BSR set to: 0
 10818                           ;daq.c: 401:  CRC_Start();
 10819  01A30C  ECE5  F0E9         	call	_CRC_Start	;wreg free
 10820  01A310                     l11366:
 10821                           
 10822                           ;daq.c: 404:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 10823                           ;stkvar	_x @ sp[(-6)+0]
 10824  01A310  0EFA               	movlw	-6
 10825  01A312  006F FF8C  F00C    	movff	plusw1,btemp+11
 10826                           
 10827                           ;stkvar	_r_cal_ptr @ sp[(-6)+4]
 10828  01A318  0EFE               	movlw	-2
 10829  01A31A  50E3               	movf	plusw1,w,c
 10830  01A31C  240C               	addwf	(btemp+11)^0,w,c
 10831  01A31E  6ED9               	movwf	fsr2l,c
 10832  01A320  6ADA               	clrf	fsr2h,c
 10833  01A322  50DF               	movf	indf2,w,c
 10834  01A324  6EE6               	movwf	postinc1,c
 10835                           
 10836                           ;stkvar	_x @ sp[(-7)+0]
 10837  01A326  0EF9               	movlw	-7
 10838  01A328  006F FF8F FFE6     	movff	plusw1,postinc1
 10839  01A32E  006F FF8F FFE6     	movff	plusw1,postinc1
 10840  01A334  EC59  F0E0         	call	_DATAEE_WriteByte	;wreg free
 10841                           
 10842                           ;daq.c: 405:   CRC_8BitDataWrite(r_cal_ptr[x]);
 10843                           ;stkvar	_x @ sp[(-6)+0]
 10844  01A338  0EFA               	movlw	-6
 10845  01A33A  006F FF8C  F00C    	movff	plusw1,btemp+11
 10846                           
 10847                           ;stkvar	_r_cal_ptr @ sp[(-6)+4]
 10848  01A340  0EFE               	movlw	-2
 10849  01A342  50E3               	movf	plusw1,w,c
 10850  01A344  240C               	addwf	(btemp+11)^0,w,c
 10851  01A346  6ED9               	movwf	fsr2l,c
 10852  01A348  6ADA               	clrf	fsr2h,c
 10853  01A34A  50DF               	movf	indf2,w,c
 10854  01A34C  6EE6               	movwf	postinc1,c
 10855  01A34E  EC57  F0E9         	call	_CRC_8BitDataWrite	;wreg free
 10856  01A352                     l11370:
 10857  01A352  EC79  F0E9         	call	_CRC_IsBusy	;wreg free
 10858  01A356  5001               	movf	btemp^0,w,c
 10859  01A358  A4D8               	btfss	status,2,c
 10860  01A35A  D7FB               	goto	l11370
 10861                           
 10862                           ;daq.c: 407:  } while (++x < y);
 10863                           ;stkvar	_y @ sp[(-6)+2]
 10864  01A35C  0EFC               	movlw	-4
 10865  01A35E  006F FF8C  F00B    	movff	plusw1,btemp+10
 10866  01A364  0EFD               	movlw	-3
 10867  01A366  006F FF8C  F00C    	movff	plusw1,btemp+11
 10868                           
 10869                           ;stkvar	_x @ sp[(-6)+0]
 10870  01A36C  0EFA               	movlw	-6
 10871  01A36E  50E3               	movf	plusw1,w,c
 10872  01A370  0F01               	addlw	1
 10873  01A372  6E01               	movwf	btemp^0,c
 10874  01A374  0EFA               	movlw	-6
 10875  01A376  0060  F007  FFE3   	movff	btemp,plusw1
 10876  01A37C  6A01               	clrf	btemp^0,c
 10877  01A37E  0EFB               	movlw	-5
 10878  01A380  50E3               	movf	plusw1,w,c
 10879  01A382  2001               	addwfc	btemp^0,w,c
 10880  01A384  6E01               	movwf	btemp^0,c
 10881  01A386  0EFB               	movlw	-5
 10882  01A388  0060  F007  FFE3   	movff	btemp,plusw1
 10883  01A38E  0EFA               	movlw	-6
 10884  01A390  006F FF8C  F009    	movff	plusw1,btemp+8
 10885  01A396  0EFB               	movlw	-5
 10886  01A398  006F FF8C  F00A    	movff	plusw1,btemp+9
 10887  01A39E  500B               	movf	(btemp+10)^0,w,c
 10888  01A3A0  5C09               	subwf	(btemp+8)^0,w,c
 10889  01A3A2  500C               	movf	(btemp+11)^0,w,c
 10890  01A3A4  580A               	subwfb	(btemp+9)^0,w,c
 10891  01A3A6  A0D8               	btfss	status,0,c
 10892  01A3A8  D7B3               	goto	l11366
 10893                           
 10894                           ;daq.c: 409:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 10895  01A3AA  0E00               	movlw	0
 10896  01A3AC  6EE6               	movwf	postinc1,c
 10897  01A3AE  0E00               	movlw	0
 10898  01A3B0  6EE6               	movwf	postinc1,c
 10899  01A3B2  0E00               	movlw	0
 10900  01A3B4  6EE6               	movwf	postinc1,c
 10901  01A3B6  EC0B  F0CC         	call	_CRC_CalculatedResultGet	;wreg free
 10902                           
 10903                           ;stkvar	_crcVal @ sp[(-6)+5]
 10904  01A3BA  0EFF               	movlw	-1
 10905  01A3BC  0060  F007  FFE3   	movff	btemp,plusw1
 10906                           
 10907                           ;daq.c: 411:  DATAEE_WriteByte(crcVal, r_cal_ptr[x - 1]);
 10908                           ;stkvar	_x @ sp[(-6)+0]
 10909  01A3C2  0EFA               	movlw	-6
 10910  01A3C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 10911                           
 10912                           ;stkvar	_r_cal_ptr @ sp[(-6)+4]
 10913  01A3CA  0EFE               	movlw	-2
 10914  01A3CC  50E3               	movf	plusw1,w,c
 10915  01A3CE  240C               	addwf	(btemp+11)^0,w,c
 10916  01A3D0  6ED9               	movwf	fsr2l,c
 10917  01A3D2  6ADA               	clrf	fsr2h,c
 10918  01A3D4  0EFF               	movlw	255
 10919  01A3D6  26D9               	addwf	fsr2l,f,c
 10920  01A3D8  50DF               	movf	indf2,w,c
 10921  01A3DA  6EE6               	movwf	postinc1,c
 10922                           
 10923                           ;stkvar	_crcVal @ sp[(-7)+5]
 10924  01A3DC  0EFE               	movlw	-2
 10925  01A3DE  50E3               	movf	plusw1,w,c
 10926  01A3E0  6EE6               	movwf	postinc1,c
 10927  01A3E2  0E00               	movlw	0
 10928  01A3E4  6EE6               	movwf	postinc1,c
 10929  01A3E6  EC59  F0E0         	call	_DATAEE_WriteByte	;wreg free
 10930                           
 10931                           ; _write_cal_data: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10932  01A3EA  0EFA               	movlw	250
 10933  01A3EC  26E1               	addwf	fsr1l,f,c
 10934  01A3EE  0EFF               	movlw	255
 10935  01A3F0  22E2               	addwfc	fsr1h,f,c
 10936  01A3F2  0012               	return		;funcret
 10937  01A3F4                     __end_of_write_cal_data:
 10938                           	opt callstack 0
 10939                           
 10940 ;; *************** function _DATAEE_WriteByte *****************
 10941 ;; Defined at:
 10942 ;;		line 172 in file "mcc_generated_files/memory.c"
 10943 ;; Parameters:    Size  Location     Type
 10944 ;;  bAdd            2  [STACK] unsigned short 
 10945 ;;  bData           1  [STACK] unsigned char 
 10946 ;; Auto vars:     Size  Location     Type
 10947 ;;  GIEBitValue     1  [STACK] unsigned char 
 10948 ;; Return value:  Size  Location     Type
 10949 ;;                  1  [STACK] void 
 10950 ;; Registers used:
 10951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 10952 ;; Tracked objects:
 10953 ;;		On entry : 0/39
 10954 ;;		On exit  : 0/0
 10955 ;;		Unchanged: 0/0
 10956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10961 ;;Total ram usage:        0 bytes
 10962 ;; Hardware stack levels used:    1
 10963 ;; Hardware stack levels required when called:   15
 10964 ;; This function calls:
 10965 ;;		Nothing
 10966 ;; This function is called by:
 10967 ;;		_write_cal_data
 10968 ;; This function uses a reentrant model
 10969 ;;
 10970                           
 10971                           	psect	text31
 10972  01C0B2                     __ptext31:
 10973                           	opt callstack 0
 10974  01C0B2                     _DATAEE_WriteByte:
 10975                           	opt callstack 0
 10976                           
 10977                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10978  01C0B2  52E6               	movf	postinc1,f,c
 10979                           
 10980                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 10981                           
 10982                           ;incstack = 0
 10983  01C0B4  AED2               	btfss	210,7,c	;volatile
 10984  01C0B6  D003               	goto	u9770
 10985  01C0B8  6A0C               	clrf	(btemp+11)^0,c
 10986  01C0BA  2A0C               	incf	(btemp+11)^0,f,c
 10987  01C0BC  D001               	goto	u9778
 10988  01C0BE                     u9770:
 10989  01C0BE  6A0C               	clrf	(btemp+11)^0,c
 10990  01C0C0                     u9778:
 10991                           
 10992                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 10993  01C0C0  0EFF               	movlw	-1
 10994  01C0C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10995                           
 10996                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 10997                           ;stkvar	_bAdd @ sp[(-1)+-2]
 10998  01C0C8  0EFE               	movlw	254
 10999  01C0CA  24E1               	addwf	fsr1l,w,c
 11000  01C0CC  6ED9               	movwf	fsr2l,c
 11001  01C0CE  0EFF               	movlw	255
 11002  01C0D0  20E2               	addwfc	fsr1h,w,c
 11003  01C0D2  6EDA               	movwf	fsr2h,c
 11004  01C0D4  50DF               	movf	indf2,w,c
 11005  01C0D6  0B03               	andlw	3
 11006  01C0D8  0139               	movlb	57	; () banked
 11007  01C0DA  6FE1               	movwf	225,b	;volatile
 11008                           
 11009                           ; BSR set to: 57
 11010                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 11011                           ;stkvar	_bAdd @ sp[(-1)+-2]
 11012  01C0DC  0EFD               	movlw	-3
 11013  01C0DE  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 11014                           
 11015                           ; BSR set to: 57
 11016                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 11017                           ;stkvar	_bData @ sp[(-1)+-3]
 11018  01C0E4  0EFC               	movlw	-4
 11019  01C0E6  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 11020                           
 11021                           ; BSR set to: 57
 11022                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 11023  01C0EC  0E3F               	movlw	-193
 11024  01C0EE  17E5               	andwf	229,f,b	;volsfr
 11025                           
 11026                           ; BSR set to: 57
 11027                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 11028  01C0F0  85E5               	bsf	229,2,b	;volsfr
 11029                           
 11030                           ; BSR set to: 57
 11031                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 11032  01C0F2  9ED2               	bcf	210,7,c	;volatile
 11033                           
 11034                           ; BSR set to: 57
 11035                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 11036  01C0F4  0E55               	movlw	85
 11037  01C0F6  6FE6               	movwf	230,b	;volsfr
 11038                           
 11039                           ; BSR set to: 57
 11040                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 11041  01C0F8  0EAA               	movlw	170
 11042  01C0FA  6FE6               	movwf	230,b	;volsfr
 11043                           
 11044                           ; BSR set to: 57
 11045                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 11046  01C0FC  83E5               	bsf	229,1,b	;volsfr
 11047  01C0FE                     l942:
 11048                           
 11049                           ; BSR set to: 57
 11050                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 11051  01C0FE  B3E5               	btfsc	229,1,b	;volsfr
 11052  01C100  D7FE               	goto	l942
 11053                           
 11054                           ; BSR set to: 57
 11055                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 11056  01C102  95E5               	bcf	229,2,b	;volsfr
 11057                           
 11058                           ; BSR set to: 57
 11059                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 11060                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 11061  01C104  0EFF               	movlw	-1
 11062  01C106  B0E3               	btfsc	plusw1,0,c
 11063  01C108  D002               	bra	u9795
 11064  01C10A  9ED2               	bcf	210,7,c	;volatile
 11065  01C10C  D001               	bra	u9796
 11066  01C10E                     u9795:
 11067  01C10E  8ED2               	bsf	210,7,c	;volatile
 11068  01C110                     u9796:
 11069                           
 11070                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 11071  01C110  52E5               	movf	postdec1,f,c
 11072  01C112  52E5               	movf	postdec1,f,c
 11073  01C114  52E5               	movf	postdec1,f,c
 11074  01C116  52E5               	movf	postdec1,f,c
 11075  01C118  0012               	return		;funcret
 11076  01C11A                     __end_of_DATAEE_WriteByte:
 11077                           	opt callstack 0
 11078                           
 11079 ;; *************** function _CRC_Start *****************
 11080 ;; Defined at:
 11081 ;;		line 119 in file "mcc_generated_files/crc.c"
 11082 ;; Parameters:    Size  Location     Type
 11083 ;;		None
 11084 ;; Auto vars:     Size  Location     Type
 11085 ;;		None
 11086 ;; Return value:  Size  Location     Type
 11087 ;;                  1  [STACK] void 
 11088 ;; Registers used:
 11089 ;;		None
 11090 ;; Tracked objects:
 11091 ;;		On entry : 3F/0
 11092 ;;		On exit  : 3F/39
 11093 ;;		Unchanged: 0/0
 11094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11099 ;;Total ram usage:        0 bytes
 11100 ;; Hardware stack levels used:    1
 11101 ;; Hardware stack levels required when called:   15
 11102 ;; This function calls:
 11103 ;;		Nothing
 11104 ;; This function is called by:
 11105 ;;		_read_cal_data
 11106 ;;		_write_cal_data
 11107 ;; This function uses a reentrant model
 11108 ;;
 11109                           
 11110                           	psect	text32
 11111  01D3CA                     __ptext32:
 11112                           	opt callstack 0
 11113  01D3CA                     _CRC_Start:
 11114                           	opt callstack 14
 11115                           
 11116                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 11117                           
 11118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11119                           ;incstack = 0
 11120  01D3CA  0139               	movlb	57	; () banked
 11121  01D3CC  8D68               	bsf	104,6,b	;volatile
 11122                           
 11123                           ; BSR set to: 57
 11124                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 11125  01D3CE  0012               	return		;funcret
 11126  01D3D0                     __end_of_CRC_Start:
 11127                           	opt callstack 0
 11128                           
 11129 ;; *************** function _CRC_IsBusy *****************
 11130 ;; Defined at:
 11131 ;;		line 201 in file "mcc_generated_files/crc.c"
 11132 ;; Parameters:    Size  Location     Type
 11133 ;;		None
 11134 ;; Auto vars:     Size  Location     Type
 11135 ;;		None
 11136 ;; Return value:  Size  Location     Type
 11137 ;;                  1  [STACK] _Bool 
 11138 ;; Registers used:
 11139 ;;		btemp
 11140 ;; Tracked objects:
 11141 ;;		On entry : 0/39
 11142 ;;		On exit  : 0/0
 11143 ;;		Unchanged: 0/0
 11144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11149 ;;Total ram usage:        0 bytes
 11150 ;; Hardware stack levels used:    1
 11151 ;; Hardware stack levels required when called:   15
 11152 ;; This function calls:
 11153 ;;		Nothing
 11154 ;; This function is called by:
 11155 ;;		_read_cal_data
 11156 ;;		_write_cal_data
 11157 ;; This function uses a reentrant model
 11158 ;;
 11159                           
 11160                           	psect	text33
 11161  01D2F2                     __ptext33:
 11162                           	opt callstack 0
 11163  01D2F2                     _CRC_IsBusy:
 11164                           	opt callstack 14
 11165                           
 11166                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 11167                           
 11168                           ; BSR set to: 57
 11169                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11170                           ;incstack = 0
 11171  01D2F2  0139               	movlb	57	; () banked
 11172  01D2F4  AB68               	btfss	104,5,b	;volatile
 11173  01D2F6  D003               	goto	u9990
 11174  01D2F8  6A01               	clrf	btemp^0,c
 11175  01D2FA  2A01               	incf	btemp^0,f,c
 11176  01D2FC  0012               	return	
 11177  01D2FE                     u9990:
 11178  01D2FE  6A01               	clrf	btemp^0,c
 11179                           
 11180                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 11181  01D300  0012               	return		;funcret
 11182  01D302                     __end_of_CRC_IsBusy:
 11183                           	opt callstack 0
 11184                           
 11185 ;; *************** function _CRC_CalculatedResultGet *****************
 11186 ;; Defined at:
 11187 ;;		line 159 in file "mcc_generated_files/crc.c"
 11188 ;; Parameters:    Size  Location     Type
 11189 ;;  reverse         1  [STACK] _Bool 
 11190 ;;  xorValue        2  [STACK] unsigned short 
 11191 ;; Auto vars:     Size  Location     Type
 11192 ;;  result          2  [STACK] unsigned short 
 11193 ;;  mask            2  [STACK] unsigned short 
 11194 ;; Return value:  Size  Location     Type
 11195 ;;                  2  [STACK] unsigned short 
 11196 ;; Registers used:
 11197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 11198 ;; Tracked objects:
 11199 ;;		On entry : 0/39
 11200 ;;		On exit  : 0/0
 11201 ;;		Unchanged: 0/0
 11202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11207 ;;Total ram usage:        0 bytes
 11208 ;; Hardware stack levels used:    1
 11209 ;; Hardware stack levels required when called:   16
 11210 ;; This function calls:
 11211 ;;		_CRC_ReverseValue
 11212 ;; This function is called by:
 11213 ;;		_read_cal_data
 11214 ;;		_write_cal_data
 11215 ;; This function uses a reentrant model
 11216 ;;
 11217                           
 11218                           	psect	text34
 11219  019816                     __ptext34:
 11220                           	opt callstack 0
 11221  019816                     _CRC_CalculatedResultGet:
 11222                           	opt callstack 0
 11223                           
 11224                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11225  019816  52E6               	movf	postinc1,f,c
 11226  019818  52E6               	movf	postinc1,f,c
 11227  01981A  52E6               	movf	postinc1,f,c
 11228  01981C  52E6               	movf	postinc1,f,c
 11229                           
 11230                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 11231                           
 11232                           ;incstack = 0
 11233  01981E  0139               	movlb	57	; () banked
 11234  019820  9D68               	bcf	104,6,b	;volatile
 11235                           
 11236                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 11237  019822  9DA0               	bcf	160,6,b	;volatile
 11238                           
 11239                           ; BSR set to: 57
 11240                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 11241  019824  5169               	movf	105,w,b	;volatile
 11242  019826  0B0F               	andlw	15
 11243  019828  6E0C               	movwf	(btemp+11)^0,c
 11244  01982A  3A0C               	swapf	(btemp+11)^0,f,c
 11245  01982C  5169               	movf	105,w,b	;volatile
 11246  01982E  180C               	xorwf	(btemp+11)^0,w,c
 11247  019830  0B0F               	andlw	-241
 11248  019832  180C               	xorwf	(btemp+11)^0,w,c
 11249  019834  6F69               	movwf	105,b	;volatile
 11250                           
 11251                           ; BSR set to: 57
 11252                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 11253  019836  0E08               	movlw	8
 11254  019838  0100               	movlb	0	; () banked
 11255  01983A  65AC               	cpfsgt	(_crcObj+1)& (0+255),b
 11256  01983C  D003               	goto	l2327
 11257                           
 11258                           ; BSR set to: 0
 11259                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 11260  01983E  0139               	movlb	57	; () banked
 11261  019840  6B61               	clrf	97,b	;volatile
 11262  019842  D001               	goto	L9
 11263  019844                     l2327:
 11264                           
 11265                           ; BSR set to: 0
 11266                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 11267  019844  0139               	movlb	57	; () banked
 11268  019846                     L9:
 11269  019846  6B60               	clrf	96,b	;volatile
 11270                           
 11271                           ; BSR set to: 57
 11272                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 11273                           
 11274                           ;mcc_generated_files/crc.c: 176:      }
 11275  019848  8D68               	bsf	104,6,b	;volatile
 11276  01984A                     l2329:
 11277                           
 11278                           ; BSR set to: 57
 11279  01984A  ADA0               	btfss	160,6,b	;volatile
 11280  01984C  D7FE               	goto	l2329
 11281                           
 11282                           ; BSR set to: 57
 11283                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 11284  01984E  9DA0               	bcf	160,6,b	;volatile
 11285                           
 11286                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 11287  019850  9D68               	bcf	104,6,b	;volatile
 11288                           
 11289                           ; BSR set to: 57
 11290                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 11291  019852  0060  F2AC  F00C   	movff	_crcObj,btemp+11
 11292  019858  0EFF               	movlw	255
 11293  01985A  260C               	addwf	(btemp+11)^0,f,c
 11294  01985C  3A0C               	swapf	(btemp+11)^0,f,c
 11295  01985E  5169               	movf	105,w,b	;volatile
 11296  019860  180C               	xorwf	(btemp+11)^0,w,c
 11297  019862  0B0F               	andlw	-241
 11298  019864  180C               	xorwf	(btemp+11)^0,w,c
 11299  019866  6F69               	movwf	105,b	;volatile
 11300                           
 11301                           ; BSR set to: 57
 11302                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 11303  019868  5162               	movf	98,w,b	;volatile
 11304  01986A  006E F58C  F001    	movff	14691,btemp	;volatile
 11305  019870  6A02               	clrf	(btemp+1)^0,c
 11306  019872  0060  F004  F002   	movff	btemp,btemp+1
 11307  019878  6A01               	clrf	btemp^0,c
 11308  01987A  1201               	iorwf	btemp^0,f,c
 11309  01987C  0E00               	movlw	0
 11310  01987E  1202               	iorwf	(btemp+1)^0,f,c
 11311                           
 11312                           ;stkvar	_result @ sp[(-4)+0]
 11313  019880  0EFC               	movlw	-4
 11314  019882  0060  F007  FFE3   	movff	btemp,plusw1
 11315  019888  0EFD               	movlw	-3
 11316  01988A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11317                           
 11318                           ; BSR set to: 57
 11319                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 11320  019890  0E10               	movlw	16
 11321  019892  0100               	movlb	0	; () banked
 11322  019894  61AC               	cpfslt	(_crcObj+1)& (0+255),b
 11323  019896  D03A               	goto	l10828
 11324                           
 11325                           ; BSR set to: 0
 11326                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 11327  019898  0EFF               	movlw	255
 11328  01989A  6E0B               	movwf	(btemp+10)^0,c
 11329  01989C  0EFF               	movlw	255
 11330  01989E  6E0C               	movwf	(btemp+11)^0,c
 11331  0198A0  0060  F2B0  F00A   	movff	_crcObj+1,btemp+9
 11332  0198A6  0E01               	movlw	1
 11333  0198A8  6E07               	movwf	(btemp+6)^0,c
 11334  0198AA  0E00               	movlw	0
 11335  0198AC  6E08               	movwf	(btemp+7)^0,c
 11336  0198AE  2A0A               	incf	(btemp+9)^0,f,c
 11337  0198B0  D003               	goto	u10034
 11338  0198B2                     u10035:
 11339  0198B2  90D8               	bcf	status,0,c
 11340  0198B4  3607               	rlcf	(btemp+6)^0,f,c
 11341  0198B6  3608               	rlcf	(btemp+7)^0,f,c
 11342  0198B8                     u10034:
 11343  0198B8  2E0A               	decfsz	(btemp+9)^0,f,c
 11344  0198BA  D7FB               	goto	u10035
 11345  0198BC  500B               	movf	(btemp+10)^0,w,c
 11346  0198BE  2607               	addwf	(btemp+6)^0,f,c
 11347  0198C0  500C               	movf	(btemp+11)^0,w,c
 11348  0198C2  2208               	addwfc	(btemp+7)^0,f,c
 11349                           
 11350                           ;stkvar	_mask @ sp[(-4)+2]
 11351  0198C4  0EFE               	movlw	-2
 11352  0198C6  0060  F01F  FFE3   	movff	btemp+6,plusw1
 11353  0198CC  0EFF               	movlw	-1
 11354  0198CE  0060  F023  FFE3   	movff	btemp+7,plusw1
 11355                           
 11356                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 11357                           ;stkvar	_mask @ sp[(-4)+2]
 11358  0198D4  0EFE               	movlw	-2
 11359  0198D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 11360  0198DC  0EFF               	movlw	-1
 11361  0198DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11362                           
 11363                           ;stkvar	_result @ sp[(-4)+0]
 11364  0198E4  0EFC               	movlw	-4
 11365  0198E6  006F FF8C  F001    	movff	plusw1,btemp
 11366  0198EC  500B               	movf	(btemp+10)^0,w,c
 11367  0198EE  1601               	andwf	btemp^0,f,c
 11368  0198F0  0EFC               	movlw	-4
 11369  0198F2  0060  F007  FFE3   	movff	btemp,plusw1
 11370  0198F8  0EFD               	movlw	-3
 11371  0198FA  006F FF8C  F001    	movff	plusw1,btemp
 11372  019900  500C               	movf	(btemp+11)^0,w,c
 11373  019902  1601               	andwf	btemp^0,f,c
 11374  019904  0EFD               	movlw	-3
 11375  019906  0060  F007  FFE3   	movff	btemp,plusw1
 11376  01990C                     l10828:
 11377                           
 11378                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 11379                           ;stkvar	_reverse @ sp[(-4)+-1]
 11380  01990C  0EFB               	movlw	-5
 11381  01990E  50E3               	movf	plusw1,w,c
 11382  019910  B4D8               	btfsc	status,2,c
 11383  019912  D011               	goto	l10832
 11384                           
 11385                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 11386                           ;stkvar	_result @ sp[(-4)+0]
 11387  019914  0EFC               	movlw	-4
 11388  019916  006F FF8F FFE6     	movff	plusw1,postinc1
 11389  01991C  006F FF8F FFE6     	movff	plusw1,postinc1
 11390  019922  EC7B  F0D8         	call	_CRC_ReverseValue	;wreg free
 11391                           
 11392                           ;stkvar	_result @ sp[(-4)+0]
 11393  019926  0EFC               	movlw	-4
 11394  019928  0060  F007  FFE3   	movff	btemp,plusw1
 11395  01992E  0EFD               	movlw	-3
 11396  019930  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11397  019936                     l10832:
 11398                           
 11399                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 11400                           ;stkvar	_xorValue @ sp[(-4)+-3]
 11401  019936  0EF9               	movlw	-7
 11402  019938  006F FF8C  F00B    	movff	plusw1,btemp+10
 11403  01993E  0EFA               	movlw	-6
 11404  019940  006F FF8C  F00C    	movff	plusw1,btemp+11
 11405                           
 11406                           ;stkvar	_result @ sp[(-4)+0]
 11407  019946  0EFC               	movlw	-4
 11408  019948  006F FF8C  F001    	movff	plusw1,btemp
 11409  01994E  500B               	movf	(btemp+10)^0,w,c
 11410  019950  1A01               	xorwf	btemp^0,f,c
 11411  019952  0EFC               	movlw	-4
 11412  019954  0060  F007  FFE3   	movff	btemp,plusw1
 11413  01995A  0EFD               	movlw	-3
 11414  01995C  006F FF8C  F001    	movff	plusw1,btemp
 11415  019962  500C               	movf	(btemp+11)^0,w,c
 11416  019964  1A01               	xorwf	btemp^0,f,c
 11417  019966  0EFD               	movlw	-3
 11418  019968  0060  F007  FFE3   	movff	btemp,plusw1
 11419                           
 11420                           ;mcc_generated_files/crc.c: 198:     return result;
 11421                           ;stkvar	_result @ sp[(-4)+0]
 11422  01996E  0EFC               	movlw	-4
 11423  019970  006F FF8C  F001    	movff	plusw1,btemp
 11424  019976  0EFD               	movlw	-3
 11425  019978  006F FF8C  F002    	movff	plusw1,btemp+1
 11426                           
 11427                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 11428  01997E  0EF9               	movlw	249
 11429  019980  26E1               	addwf	fsr1l,f,c
 11430  019982  0EFF               	movlw	255
 11431  019984  22E2               	addwfc	fsr1h,f,c
 11432  019986  0012               	return		;funcret
 11433  019988                     __end_of_CRC_CalculatedResultGet:
 11434                           	opt callstack 0
 11435                           
 11436 ;; *************** function _CRC_ReverseValue *****************
 11437 ;; Defined at:
 11438 ;;		line 138 in file "mcc_generated_files/crc.c"
 11439 ;; Parameters:    Size  Location     Type
 11440 ;;  crc             2  [STACK] unsigned short 
 11441 ;; Auto vars:     Size  Location     Type
 11442 ;;  mask            2  [STACK] unsigned short 
 11443 ;;  reverse         2  [STACK] unsigned short 
 11444 ;; Return value:  Size  Location     Type
 11445 ;;                  2  [STACK] unsigned short 
 11446 ;; Registers used:
 11447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 11448 ;; Tracked objects:
 11449 ;;		On entry : 0/0
 11450 ;;		On exit  : 0/0
 11451 ;;		Unchanged: 0/0
 11452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11457 ;;Total ram usage:        0 bytes
 11458 ;; Hardware stack levels used:    1
 11459 ;; Hardware stack levels required when called:   15
 11460 ;; This function calls:
 11461 ;;		Nothing
 11462 ;; This function is called by:
 11463 ;;		_CRC_CalculatedResultGet
 11464 ;; This function uses a reentrant model
 11465 ;;
 11466                           
 11467                           	psect	text35
 11468  01B0F6                     __ptext35:
 11469                           	opt callstack 0
 11470  01B0F6                     _CRC_ReverseValue:
 11471                           	opt callstack 0
 11472                           
 11473                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11474  01B0F6  52E6               	movf	postinc1,f,c
 11475  01B0F8  52E6               	movf	postinc1,f,c
 11476  01B0FA  52E6               	movf	postinc1,f,c
 11477  01B0FC  52E6               	movf	postinc1,f,c
 11478                           
 11479                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 11480                           
 11481                           ;incstack = 0
 11482  01B0FE  0E01               	movlw	1
 11483  01B100  6E0B               	movwf	(btemp+10)^0,c
 11484  01B102  0E00               	movlw	0
 11485  01B104  6E0C               	movwf	(btemp+11)^0,c
 11486                           
 11487                           ;stkvar	_mask @ sp[(-4)+0]
 11488  01B106  0EFC               	movlw	-4
 11489  01B108  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11490  01B10E  0EFD               	movlw	-3
 11491  01B110  0060  F033  FFE3   	movff	btemp+11,plusw1
 11492                           
 11493                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 11494  01B116  0060  F2B0  F00C   	movff	_crcObj+1,btemp+11
 11495  01B11C  0EFF               	movlw	255
 11496  01B11E  260C               	addwf	(btemp+11)^0,f,c
 11497                           
 11498                           ;stkvar	_mask @ sp[(-4)+0]
 11499  01B120  50E1               	movf	fsr1l,w,c
 11500  01B122  0FFC               	addlw	-4
 11501  01B124  6ED9               	movwf	fsr2l,c
 11502  01B126  50E2               	movf	fsr1h,w,c
 11503  01B128  6EDA               	movwf	fsr2h,c
 11504  01B12A  0EFF               	movlw	255
 11505  01B12C  22DA               	addwfc	fsr2h,f,c
 11506  01B12E  280C               	incf	(btemp+11)^0,w,c
 11507  01B130  D003               	goto	u9720
 11508  01B132                     u9725:
 11509  01B132  90D8               	bcf	status,0,c
 11510  01B134  36DE               	rlcf	postinc2,f,c
 11511  01B136  36DD               	rlcf	postdec2,f,c
 11512  01B138                     u9720:
 11513  01B138  2EE8               	decfsz	wreg,f,c
 11514  01B13A  D7FB               	goto	u9725
 11515                           
 11516                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 11517                           ;stkvar	_reverse @ sp[(-4)+2]
 11518  01B13C  0EFE               	movlw	-2
 11519  01B13E  6AE3               	clrf	plusw1,c
 11520  01B140  0EFF               	movlw	-1
 11521  01B142  6AE3               	clrf	plusw1,c
 11522                           
 11523                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11524  01B144  D029               	goto	l10524
 11525  01B146                     l10516:
 11526                           
 11527                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 11528                           ;stkvar	_crc @ sp[(-4)+-2]
 11529  01B146  0EFA               	movlw	-6
 11530  01B148  A0E3               	btfss	plusw1,0,c
 11531  01B14A  D01C               	goto	l10520
 11532                           
 11533                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 11534                           ;stkvar	_mask @ sp[(-4)+0]
 11535  01B14C  0EFC               	movlw	-4
 11536  01B14E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11537  01B154  0EFD               	movlw	-3
 11538  01B156  006F FF8C  F00C    	movff	plusw1,btemp+11
 11539                           
 11540                           ;stkvar	_reverse @ sp[(-4)+2]
 11541  01B15C  0EFE               	movlw	-2
 11542  01B15E  006F FF8C  F001    	movff	plusw1,btemp
 11543  01B164  500B               	movf	(btemp+10)^0,w,c
 11544  01B166  1201               	iorwf	btemp^0,f,c
 11545  01B168  0EFE               	movlw	-2
 11546  01B16A  0060  F007  FFE3   	movff	btemp,plusw1
 11547  01B170  0EFF               	movlw	-1
 11548  01B172  006F FF8C  F001    	movff	plusw1,btemp
 11549  01B178  500C               	movf	(btemp+11)^0,w,c
 11550  01B17A  1201               	iorwf	btemp^0,f,c
 11551  01B17C  0EFF               	movlw	-1
 11552  01B17E  0060  F007  FFE3   	movff	btemp,plusw1
 11553  01B184                     l10520:
 11554                           
 11555                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 11556                           ;stkvar	_mask @ sp[(-4)+0]
 11557  01B184  90D8               	bcf	status,0,c
 11558  01B186  0EFD               	movlw	-3
 11559  01B188  32E3               	rrcf	plusw1,f,c
 11560  01B18A  0EFC               	movlw	-4
 11561  01B18C  32E3               	rrcf	plusw1,f,c
 11562                           
 11563                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 11564                           ;stkvar	_crc @ sp[(-4)+-2]
 11565  01B18E  90D8               	bcf	status,0,c
 11566  01B190  0EFB               	movlw	-5
 11567  01B192  32E3               	rrcf	plusw1,f,c
 11568  01B194  0EFA               	movlw	-6
 11569  01B196  32E3               	rrcf	plusw1,f,c
 11570  01B198                     l10524:
 11571                           
 11572                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11573                           ;stkvar	_crc @ sp[(-4)+-2]
 11574  01B198  0EFA               	movlw	-6
 11575  01B19A  006F FF8C  F001    	movff	plusw1,btemp
 11576  01B1A0  0EFB               	movlw	-5
 11577  01B1A2  50E3               	movf	plusw1,w,c
 11578  01B1A4  1001               	iorwf	btemp^0,w,c
 11579  01B1A6  A4D8               	btfss	status,2,c
 11580  01B1A8  D7CE               	goto	l10516
 11581                           
 11582                           ;mcc_generated_files/crc.c: 156:     return reverse;
 11583                           ;stkvar	_reverse @ sp[(-4)+2]
 11584  01B1AA  0EFE               	movlw	-2
 11585  01B1AC  006F FF8C  F001    	movff	plusw1,btemp
 11586  01B1B2  0EFF               	movlw	-1
 11587  01B1B4  006F FF8C  F002    	movff	plusw1,btemp+1
 11588                           
 11589                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 11590  01B1BA  0EFA               	movlw	250
 11591  01B1BC  26E1               	addwf	fsr1l,f,c
 11592  01B1BE  0EFF               	movlw	255
 11593  01B1C0  22E2               	addwfc	fsr1h,f,c
 11594  01B1C2  0012               	return		;funcret
 11595  01B1C4                     __end_of_CRC_ReverseValue:
 11596                           	opt callstack 0
 11597                           
 11598 ;; *************** function _CRC_8BitDataWrite *****************
 11599 ;; Defined at:
 11600 ;;		line 125 in file "mcc_generated_files/crc.c"
 11601 ;; Parameters:    Size  Location     Type
 11602 ;;  data            1  [STACK] unsigned char 
 11603 ;; Auto vars:     Size  Location     Type
 11604 ;;		None
 11605 ;; Return value:  Size  Location     Type
 11606 ;;                  1  [STACK] _Bool 
 11607 ;; Registers used:
 11608 ;;		fsr1l, fsr1h
 11609 ;; Tracked objects:
 11610 ;;		On entry : 0/2
 11611 ;;		On exit  : 3F/39
 11612 ;;		Unchanged: 0/0
 11613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11618 ;;Total ram usage:        0 bytes
 11619 ;; Hardware stack levels used:    1
 11620 ;; Hardware stack levels required when called:   15
 11621 ;; This function calls:
 11622 ;;		Nothing
 11623 ;; This function is called by:
 11624 ;;		_read_cal_data
 11625 ;;		_write_cal_data
 11626 ;; This function uses a reentrant model
 11627 ;;
 11628                           
 11629                           	psect	text36
 11630  01D2AE                     __ptext36:
 11631                           	opt callstack 0
 11632  01D2AE                     _CRC_8BitDataWrite:
 11633                           	opt callstack 14
 11634                           
 11635                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 11636                           
 11637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11638                           ;incstack = 0
 11639  01D2AE  0139               	movlb	57	; () banked
 11640  01D2B0  B168               	btfsc	104,0,b	;volatile
 11641  01D2B2  D004               	goto	l2316
 11642                           
 11643                           ; BSR set to: 57
 11644                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 11645                           ;stkvar	_data @ sp[(0)+-1]
 11646  01D2B4  0EFF               	movlw	-1
 11647  01D2B6  006F FF8F F960     	movff	plusw1,14688	;volatile
 11648  01D2BC                     l2316:
 11649                           
 11650                           ; BSR set to: 57
 11651                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 11652  01D2BC  52E5               	movf	postdec1,f,c
 11653  01D2BE  0012               	return		;funcret
 11654  01D2C0                     __end_of_CRC_8BitDataWrite:
 11655                           	opt callstack 0
 11656                           
 11657 ;; *************** function _start_adc_scan *****************
 11658 ;; Defined at:
 11659 ;;		line 65 in file "daq.c"
 11660 ;; Parameters:    Size  Location     Type
 11661 ;;		None
 11662 ;; Auto vars:     Size  Location     Type
 11663 ;;		None
 11664 ;; Return value:  Size  Location     Type
 11665 ;;                  1  [STACK] _Bool 
 11666 ;; Registers used:
 11667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 11668 ;; Tracked objects:
 11669 ;;		On entry : 0/0
 11670 ;;		On exit  : 1/0
 11671 ;;		Unchanged: 0/0
 11672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11677 ;;Total ram usage:        0 bytes
 11678 ;; Hardware stack levels used:    1
 11679 ;; Hardware stack levels required when called:   16
 11680 ;; This function calls:
 11681 ;;		_ADCC_DischargeSampleCapacitor
 11682 ;;		_ADCC_SetADIInterruptHandler
 11683 ;;		_ADCC_SetADTIInterruptHandler
 11684 ;;		_ADCC_StartConversion
 11685 ;; This function is called by:
 11686 ;;		_main
 11687 ;;		_current_sensor_cal
 11688 ;;		_update_adc_result
 11689 ;; This function uses a reentrant model
 11690 ;;
 11691                           
 11692                           	psect	text37
 11693  01C1E6                     __ptext37:
 11694                           	opt callstack 0
 11695  01C1E6                     _start_adc_scan:
 11696                           	opt callstack 14
 11697                           
 11698                           ;daq.c: 67:  if (R.done)
 11699                           
 11700                           ; BSR set to: 57
 11701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11702                           ;incstack = 0
 11703  01C1E6  0100               	movlb	0	; () banked
 11704  01C1E8  51E3               	movf	(_R+53)& (0+255),w,b	;volatile
 11705  01C1EA  A4D8               	btfss	status,2,c
 11706  01C1EC  0012               	return	
 11707                           
 11708                           ; BSR set to: 0
 11709                           ;daq.c: 70:  R.scan_index = 0;
 11710  01C1EE  6BE0               	clrf	(_R+50)& (0+255),b	;volatile
 11711                           
 11712                           ; BSR set to: 0
 11713                           ;daq.c: 71:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 11714  01C1F0  013A               	movlb	58	; () banked
 11715  01C1F2  5140               	movf	64,w,b	;volatile
 11716  01C1F4  006E F940  F001    	movff	14928,btemp	;volatile
 11717  01C1FA  6A02               	clrf	(btemp+1)^0,c
 11718  01C1FC  0060  F004  F002   	movff	btemp,btemp+1
 11719  01C202  6A01               	clrf	btemp^0,c
 11720  01C204  2601               	addwf	btemp^0,f,c
 11721  01C206  0E00               	movlw	0
 11722  01C208  2202               	addwfc	(btemp+1)^0,f,c
 11723  01C20A  0E77               	movlw	119
 11724  01C20C  1401               	andwf	btemp^0,w,c
 11725  01C20E  0100               	movlb	0	; () banked
 11726  01C210  6FE1               	movwf	(_R+51)& (0+255),b	;volatile
 11727  01C212  0E3C               	movlw	60
 11728  01C214  1402               	andwf	(btemp+1)^0,w,c
 11729  01C216  6FE2               	movwf	(_R+52)& (0+255),b	;volatile
 11730                           
 11731                           ; BSR set to: 0
 11732                           ;daq.c: 72:  ADCC_SetADIInterruptHandler(adc_int_handler);
 11733  01C218  0EF6               	movlw	low _adc_int_handler
 11734  01C21A  6EE6               	movwf	postinc1,c
 11735  01C21C  0ED3               	movlw	high _adc_int_handler
 11736  01C21E  6EE6               	movwf	postinc1,c
 11737  01C220  0E01               	movlw	low (_adc_int_handler shr (0+16))
 11738  01C222  6EE6               	movwf	postinc1,c
 11739  01C224  EC93  F0E7         	call	_ADCC_SetADIInterruptHandler	;wreg free
 11740                           
 11741                           ;daq.c: 73:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 11742  01C228  0E90               	movlw	low _adc_int_t_handler
 11743  01C22A  6EE6               	movwf	postinc1,c
 11744  01C22C  0EBD               	movlw	high _adc_int_t_handler
 11745  01C22E  6EE6               	movwf	postinc1,c
 11746  01C230  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
 11747  01C232  6EE6               	movwf	postinc1,c
 11748  01C234  EC7F  F0E7         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 11749                           
 11750                           ;daq.c: 74:  ADCC_DischargeSampleCapacitor();
 11751  01C238  ECD5  F0E9         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 11752                           
 11753                           ; BSR set to: 62
 11754                           ;daq.c: 75:  ADCC_StartConversion(R.scan_index & 0xf);
 11755  01C23C  0100               	movlb	0	; () banked
 11756  01C23E  51E0               	movf	(_R+50)& (0+255),w,b	;volatile
 11757  01C240  0B0F               	andlw	15
 11758  01C242  6EE6               	movwf	postinc1,c
 11759  01C244  EC60  F0E9         	call	_ADCC_StartConversion	;wreg free
 11760                           
 11761                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11762  01C248  0012               	return		;funcret
 11763  01C24A                     __end_of_start_adc_scan:
 11764                           	opt callstack 0
 11765                           
 11766 ;; *************** function _ADCC_StartConversion *****************
 11767 ;; Defined at:
 11768 ;;		line 128 in file "mcc_generated_files/adcc.c"
 11769 ;; Parameters:    Size  Location     Type
 11770 ;;  channel         1  [STACK] enum E16136
 11771 ;; Auto vars:     Size  Location     Type
 11772 ;;		None
 11773 ;; Return value:  Size  Location     Type
 11774 ;;                  1  [STACK] void 
 11775 ;; Registers used:
 11776 ;;		fsr1l, fsr1h
 11777 ;; Tracked objects:
 11778 ;;		On entry : 3F/0
 11779 ;;		On exit  : 3F/3E
 11780 ;;		Unchanged: 0/0
 11781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11786 ;;Total ram usage:        0 bytes
 11787 ;; Hardware stack levels used:    1
 11788 ;; Hardware stack levels required when called:   15
 11789 ;; This function calls:
 11790 ;;		Nothing
 11791 ;; This function is called by:
 11792 ;;		_start_adc_scan
 11793 ;;		_adc_int_t_handler
 11794 ;; This function uses a reentrant model
 11795 ;;
 11796                           
 11797                           	psect	text38
 11798  01D2C0                     __ptext38:
 11799                           	opt callstack 0
 11800  01D2C0                     _ADCC_StartConversion:
 11801                           	opt callstack 0
 11802                           
 11803                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 11804                           ;stkvar	_channel @ sp[(0)+-1]
 11805                           
 11806                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11807                           ;incstack = 0
 11808 ;; hardware stack exceeded
 11809  01D2C0  0EFF               	movlw	-1
 11810  01D2C2  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 11811                           
 11812                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 11813  01D2C8  013E               	movlb	62	; () banked
 11814  01D2CA  8FF8               	bsf	248,7,b	;volatile
 11815                           
 11816                           ; BSR set to: 62
 11817                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 11818  01D2CC  81F8               	bsf	248,0,b	;volatile
 11819                           
 11820                           ; BSR set to: 62
 11821                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 11822  01D2CE  52E5               	movf	postdec1,f,c
 11823  01D2D0  0012               	return		;funcret
 11824  01D2D2                     __end_of_ADCC_StartConversion:
 11825                           	opt callstack 0
 11826                           
 11827 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 11828 ;; Defined at:
 11829 ;;		line 189 in file "mcc_generated_files/adcc.c"
 11830 ;; Parameters:    Size  Location     Type
 11831 ;;		None
 11832 ;; Auto vars:     Size  Location     Type
 11833 ;;		None
 11834 ;; Return value:  Size  Location     Type
 11835 ;;                  1  [STACK] void 
 11836 ;; Registers used:
 11837 ;;		wreg, status,2
 11838 ;; Tracked objects:
 11839 ;;		On entry : 0/0
 11840 ;;		On exit  : 3F/3E
 11841 ;;		Unchanged: 0/0
 11842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11847 ;;Total ram usage:        0 bytes
 11848 ;; Hardware stack levels used:    1
 11849 ;; Hardware stack levels required when called:   15
 11850 ;; This function calls:
 11851 ;;		Nothing
 11852 ;; This function is called by:
 11853 ;;		_start_adc_scan
 11854 ;;		_adc_int_t_handler
 11855 ;; This function uses a reentrant model
 11856 ;;
 11857                           
 11858                           	psect	text39
 11859  01D3AA                     __ptext39:
 11860                           	opt callstack 0
 11861  01D3AA                     _ADCC_DischargeSampleCapacitor:
 11862                           	opt callstack 0
 11863                           
 11864                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 11865                           
 11866                           ; BSR set to: 62
 11867                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11868                           ;incstack = 0
 11869 ;; hardware stack exceeded
 11870  01D3AA  0E3B               	movlw	59
 11871  01D3AC  013E               	movlb	62	; () banked
 11872  01D3AE  6FF1               	movwf	241,b	;volatile
 11873                           
 11874                           ; BSR set to: 62
 11875                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 11876  01D3B0  0012               	return		;funcret
 11877  01D3B2                     __end_of_ADCC_DischargeSampleCapacitor:
 11878                           	opt callstack 0
 11879                           
 11880 ;; *************** function _spinners *****************
 11881 ;; Defined at:
 11882 ;;		line 146 in file "mbmc.c"
 11883 ;; Parameters:    Size  Location     Type
 11884 ;;  shape           1  [STACK] unsigned char 
 11885 ;;  reset           1  [STACK] const unsigned char 
 11886 ;; Auto vars:     Size  Location     Type
 11887 ;;  c               1  [STACK] unsigned char 
 11888 ;; Return value:  Size  Location     Type
 11889 ;;                  1  [STACK] unsigned char 
 11890 ;; Registers used:
 11891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11892 ;; Tracked objects:
 11893 ;;		On entry : 0/0
 11894 ;;		On exit  : 0/0
 11895 ;;		Unchanged: 0/0
 11896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11901 ;;Total ram usage:        0 bytes
 11902 ;; Hardware stack levels used:    1
 11903 ;; Hardware stack levels required when called:   16
 11904 ;; This function calls:
 11905 ;;		_strlen
 11906 ;; This function is called by:
 11907 ;;		_main
 11908 ;;		_current_sensor_cal
 11909 ;; This function uses a reentrant model
 11910 ;;
 11911                           
 11912                           	psect	text40
 11913  01ABA4                     __ptext40:
 11914                           	opt callstack 0
 11915  01ABA4                     _spinners:
 11916                           	opt callstack 0
 11917                           
 11918                           ; BSR set to: 62
 11919                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11920  01ABA4  52E6               	movf	postinc1,f,c
 11921                           
 11922                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
 11923                           ;stkvar	_shape @ sp[(-1)+-1]
 11924                           
 11925                           ;incstack = 0
 11926  01ABA6  0EFE               	movlw	-2
 11927  01ABA8  006F FF8C  F001    	movff	plusw1,btemp
 11928  01ABAE  0E05               	movlw	5
 11929  01ABB0  6401               	cpfsgt	btemp^0,c
 11930  01ABB2  D002               	goto	l2044
 11931                           
 11932                           ;mbmc.c: 152:   shape = 0;
 11933                           ;stkvar	_shape @ sp[(-1)+-1]
 11934  01ABB4  0EFE               	movlw	-2
 11935  01ABB6  6AE3               	clrf	plusw1,c
 11936  01ABB8                     l2044:
 11937                           
 11938                           ;mbmc.c: 153:  if (reset)
 11939                           ;stkvar	_reset @ sp[(-1)+-2]
 11940  01ABB8  0EFD               	movlw	-3
 11941  01ABBA  50E3               	movf	plusw1,w,c
 11942  01ABBC  B4D8               	btfsc	status,2,c
 11943  01ABBE  D00C               	goto	l11286
 11944                           
 11945                           ;mbmc.c: 154:   s[shape] = 0;
 11946                           ;stkvar	_shape @ sp[(-1)+-1]
 11947  01ABC0  0EFE               	movlw	-2
 11948  01ABC2  50E3               	movf	plusw1,w,c
 11949  01ABC4  6E0B               	movwf	(btemp+10)^0,c
 11950  01ABC6  6A0C               	clrf	(btemp+11)^0,c
 11951  01ABC8  0EE4               	movlw	low spinners@s
 11952  01ABCA  240B               	addwf	(btemp+10)^0,w,c
 11953  01ABCC  6ED9               	movwf	fsr2l,c
 11954  01ABCE  0E01               	movlw	high spinners@s
 11955  01ABD0  200C               	addwfc	(btemp+11)^0,w,c
 11956  01ABD2  6EDA               	movwf	fsr2h,c
 11957  01ABD4  0E00               	movlw	0
 11958  01ABD6  6EDF               	movwf	indf2,c
 11959  01ABD8                     l11286:
 11960                           
 11961                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
 11962                           ;stkvar	_shape @ sp[(-1)+-1]
 11963  01ABD8  0EFE               	movlw	-2
 11964  01ABDA  50E3               	movf	plusw1,w,c
 11965  01ABDC  0D14               	mullw	20
 11966  01ABDE  0E43               	movlw	low _spin
 11967  01ABE0  6E0B               	movwf	(btemp+10)^0,c
 11968  01ABE2  0EFA               	movlw	high _spin
 11969  01ABE4  6E0C               	movwf	(btemp+11)^0,c
 11970  01ABE6  50F3               	movf	243,w,c
 11971  01ABE8  260B               	addwf	(btemp+10)^0,f,c
 11972  01ABEA  50F4               	movf	244,w,c
 11973  01ABEC  220C               	addwfc	(btemp+11)^0,f,c
 11974                           
 11975                           ;stkvar	_shape @ sp[(-1)+-1]
 11976  01ABEE  0EFE               	movlw	-2
 11977  01ABF0  50E3               	movf	plusw1,w,c
 11978  01ABF2  6E09               	movwf	(btemp+8)^0,c
 11979  01ABF4  6A0A               	clrf	(btemp+9)^0,c
 11980  01ABF6  0EE4               	movlw	low spinners@s
 11981  01ABF8  2409               	addwf	(btemp+8)^0,w,c
 11982  01ABFA  6ED9               	movwf	fsr2l,c
 11983  01ABFC  0E01               	movlw	high spinners@s
 11984  01ABFE  200A               	addwfc	(btemp+9)^0,w,c
 11985  01AC00  6EDA               	movwf	fsr2h,c
 11986  01AC02  50DF               	movf	indf2,w,c
 11987  01AC04  260B               	addwf	(btemp+10)^0,f,c
 11988  01AC06  0E00               	movlw	0
 11989  01AC08  220C               	addwfc	(btemp+11)^0,f,c
 11990  01AC0A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11991  01AC10  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11992  01AC16                     	if	0	;tblptru may be non-zero
 11993  01AC16                     	endif
 11994  01AC16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11995  01AC16  0E00               	movlw	low (__mediumconst shr (0+16))
 11996  01AC18  6EF8               	movwf	tblptru,c
 11997  01AC1A                     	endif
 11998                           
 11999                           ;stkvar	_c @ sp[(-1)+0]
 12000  01AC1A  0008               	tblrd		*
 12001  01AC1C  0EFF               	movlw	-1
 12002  01AC1E  006F FFD7 FFE3     	movff	tablat,plusw1
 12003                           
 12004                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
 12005                           ;stkvar	_shape @ sp[(-1)+-1]
 12006  01AC24  0EFE               	movlw	-2
 12007  01AC26  50E3               	movf	plusw1,w,c
 12008  01AC28  0D14               	mullw	20
 12009  01AC2A  0E43               	movlw	low _spin
 12010  01AC2C  6E0B               	movwf	(btemp+10)^0,c
 12011  01AC2E  0EFA               	movlw	high _spin
 12012  01AC30  6E0C               	movwf	(btemp+11)^0,c
 12013  01AC32  50F3               	movf	243,w,c
 12014  01AC34  260B               	addwf	(btemp+10)^0,f,c
 12015  01AC36  50F4               	movf	244,w,c
 12016  01AC38  220C               	addwfc	(btemp+11)^0,f,c
 12017  01AC3A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12018  01AC40  0060  F033  FFE6   	movff	btemp+11,postinc1
 12019  01AC46  EC01  F0DC         	call	_strlen	;wreg free
 12020                           
 12021                           ;stkvar	_shape @ sp[(-1)+-1]
 12022  01AC4A  0EFE               	movlw	-2
 12023  01AC4C  50E3               	movf	plusw1,w,c
 12024  01AC4E  6E0B               	movwf	(btemp+10)^0,c
 12025  01AC50  6A0C               	clrf	(btemp+11)^0,c
 12026  01AC52  0EE4               	movlw	low spinners@s
 12027  01AC54  240B               	addwf	(btemp+10)^0,w,c
 12028  01AC56  6ED9               	movwf	fsr2l,c
 12029  01AC58  0E01               	movlw	high spinners@s
 12030  01AC5A  200C               	addwfc	(btemp+11)^0,w,c
 12031  01AC5C  6EDA               	movwf	fsr2h,c
 12032  01AC5E  2ADF               	incf	indf2,f,c
 12033  01AC60  50DF               	movf	indf2,w,c
 12034  01AC62  6E0B               	movwf	(btemp+10)^0,c
 12035  01AC64  6A0C               	clrf	(btemp+11)^0,c
 12036  01AC66  5001               	movf	btemp^0,w,c
 12037  01AC68  5C0B               	subwf	(btemp+10)^0,w,c
 12038  01AC6A  5002               	movf	(btemp+1)^0,w,c
 12039  01AC6C  580C               	subwfb	(btemp+11)^0,w,c
 12040  01AC6E  A0D8               	btfss	status,0,c
 12041  01AC70  D00C               	goto	l11292
 12042                           
 12043                           ;mbmc.c: 157:   s[shape] = 0;
 12044                           ;stkvar	_shape @ sp[(-1)+-1]
 12045  01AC72  0EFE               	movlw	-2
 12046  01AC74  50E3               	movf	plusw1,w,c
 12047  01AC76  6E0B               	movwf	(btemp+10)^0,c
 12048  01AC78  6A0C               	clrf	(btemp+11)^0,c
 12049  01AC7A  0EE4               	movlw	low spinners@s
 12050  01AC7C  240B               	addwf	(btemp+10)^0,w,c
 12051  01AC7E  6ED9               	movwf	fsr2l,c
 12052  01AC80  0E01               	movlw	high spinners@s
 12053  01AC82  200C               	addwfc	(btemp+11)^0,w,c
 12054  01AC84  6EDA               	movwf	fsr2h,c
 12055  01AC86  0E00               	movlw	0
 12056  01AC88  6EDF               	movwf	indf2,c
 12057  01AC8A                     l11292:
 12058                           
 12059                           ;mbmc.c: 158:  return c;
 12060                           ;stkvar	_c @ sp[(-1)+0]
 12061  01AC8A  0EFF               	movlw	-1
 12062  01AC8C  006F FF8C  F001    	movff	plusw1,btemp
 12063                           
 12064                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 12065  01AC92  52E5               	movf	postdec1,f,c
 12066  01AC94  52E5               	movf	postdec1,f,c
 12067  01AC96  52E5               	movf	postdec1,f,c
 12068  01AC98  0012               	return		;funcret
 12069  01AC9A                     __end_of_spinners:
 12070                           	opt callstack 0
 12071                           
 12072 ;; *************** function _get_switch *****************
 12073 ;; Defined at:
 12074 ;;		line 18 in file "dio.c"
 12075 ;; Parameters:    Size  Location     Type
 12076 ;;  i               1  [STACK] const unsigned char 
 12077 ;; Auto vars:     Size  Location     Type
 12078 ;;		None
 12079 ;; Return value:  Size  Location     Type
 12080 ;;                  1  [STACK] enum E17036
 12081 ;; Registers used:
 12082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 12083 ;; Tracked objects:
 12084 ;;		On entry : 0/0
 12085 ;;		On exit  : 0/0
 12086 ;;		Unchanged: 0/0
 12087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12092 ;;Total ram usage:        0 bytes
 12093 ;; Hardware stack levels used:    1
 12094 ;; Hardware stack levels required when called:   15
 12095 ;; This function calls:
 12096 ;;		Nothing
 12097 ;; This function is called by:
 12098 ;;		_main
 12099 ;;		_current_sensor_cal
 12100 ;;		_hid_input
 12101 ;; This function uses a reentrant model
 12102 ;;
 12103                           
 12104                           	psect	text41
 12105  01CCC0                     __ptext41:
 12106                           	opt callstack 0
 12107  01CCC0                     _get_switch:
 12108                           	opt callstack 13
 12109                           
 12110                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 12111                           ;stkvar	_i @ sp[(0)+-1]
 12112                           
 12113                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12114                           ;incstack = 0
 12115  01CCC0  0EFF               	movlw	-1
 12116  01CCC2  006F FF8C  F001    	movff	plusw1,btemp
 12117  01CCC8  0E05               	movlw	5
 12118  01CCCA  6401               	cpfsgt	btemp^0,c
 12119  01CCCC  D002               	goto	l10728
 12120                           
 12121                           ;dio.c: 21:   return SW_OFF;
 12122  01CCCE  0E00               	movlw	0
 12123  01CCD0  D00A               	goto	L10
 12124  01CCD2                     l10728:
 12125                           
 12126                           ;dio.c: 23:  return S.button[i].sw;
 12127                           ;stkvar	_i @ sp[(0)+-1]
 12128  01CCD2  0EFF               	movlw	-1
 12129  01CCD4  50E3               	movf	plusw1,w,c
 12130  01CCD6  0D05               	mullw	5
 12131  01CCD8  0E00               	movlw	low _S
 12132  01CCDA  24F3               	addwf	243,w,c
 12133  01CCDC  6ED9               	movwf	fsr2l,c
 12134  01CCDE  0E02               	movlw	high _S
 12135  01CCE0  20F4               	addwfc	prodh,w,c
 12136  01CCE2  6EDA               	movwf	fsr2h,c
 12137  01CCE4  50DF               	movf	indf2,w,c
 12138  01CCE6                     L10:
 12139  01CCE6  6E01               	movwf	btemp^0,c
 12140                           
 12141                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 12142  01CCE8  52E5               	movf	postdec1,f,c
 12143  01CCEA  0012               	return		;funcret
 12144  01CCEC                     __end_of_get_switch:
 12145                           	opt callstack 0
 12146                           
 12147 ;; *************** function _clear_adc_scan *****************
 12148 ;; Defined at:
 12149 ;;		line 96 in file "daq.c"
 12150 ;; Parameters:    Size  Location     Type
 12151 ;;		None
 12152 ;; Auto vars:     Size  Location     Type
 12153 ;;		None
 12154 ;; Return value:  Size  Location     Type
 12155 ;;                  1  [STACK] void 
 12156 ;; Registers used:
 12157 ;;		None
 12158 ;; Tracked objects:
 12159 ;;		On entry : 0/0
 12160 ;;		On exit  : 3F/0
 12161 ;;		Unchanged: 0/0
 12162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12167 ;;Total ram usage:        0 bytes
 12168 ;; Hardware stack levels used:    1
 12169 ;; Hardware stack levels required when called:   15
 12170 ;; This function calls:
 12171 ;;		Nothing
 12172 ;; This function is called by:
 12173 ;;		_main
 12174 ;;		_current_sensor_cal
 12175 ;;		_update_adc_result
 12176 ;; This function uses a reentrant model
 12177 ;;
 12178                           
 12179                           	psect	text42
 12180  01D3D0                     __ptext42:
 12181                           	opt callstack 0
 12182  01D3D0                     _clear_adc_scan:
 12183                           	opt callstack 13
 12184                           
 12185                           ;daq.c: 98:  R.done = 0;
 12186                           
 12187                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12188                           ;incstack = 0
 12189  01D3D0  0100               	movlb	0	; () banked
 12190  01D3D2  6BE3               	clrf	(_R+53)& (0+255),b	;volatile
 12191                           
 12192                           ; BSR set to: 0
 12193                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12194  01D3D4  0012               	return		;funcret
 12195  01D3D6                     __end_of_clear_adc_scan:
 12196                           	opt callstack 0
 12197                           
 12198 ;; *************** function _cal_current_zero *****************
 12199 ;; Defined at:
 12200 ;;		line 322 in file "daq.c"
 12201 ;; Parameters:    Size  Location     Type
 12202 ;;  mode            1  [STACK] _Bool 
 12203 ;;  cb              2  [STACK] short 
 12204 ;;  cp              2  [STACK] short 
 12205 ;; Auto vars:     Size  Location     Type
 12206 ;;		None
 12207 ;; Return value:  Size  Location     Type
 12208 ;;                  1  [STACK] _Bool 
 12209 ;; Registers used:
 12210 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 12211 ;; Tracked objects:
 12212 ;;		On entry : 0/0
 12213 ;;		On exit  : 0/0
 12214 ;;		Unchanged: 0/0
 12215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12220 ;;Total ram usage:        0 bytes
 12221 ;; Hardware stack levels used:    1
 12222 ;; Hardware stack levels required when called:   16
 12223 ;; This function calls:
 12224 ;;		_check_range
 12225 ;; This function is called by:
 12226 ;;		_current_sensor_cal
 12227 ;; This function uses a reentrant model
 12228 ;;
 12229                           
 12230                           	psect	text43
 12231  01BAF2                     __ptext43:
 12232                           	opt callstack 0
 12233  01BAF2                     _cal_current_zero:
 12234                           	opt callstack 13
 12235                           
 12236                           ;daq.c: 322: _Bool cal_current_zero(_Bool mode, int16_t cb, int16_t cp);daq.c: 323: {;da
      +                          q.c: 325:  if (!check_range(cb, 100, 4000))
 12237                           
 12238                           ; BSR set to: 0
 12239                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12240                           ;incstack = 0
 12241  01BAF2  0EA0               	movlw	160
 12242  01BAF4  6EE6               	movwf	postinc1,c
 12243  01BAF6  0E0F               	movlw	15
 12244  01BAF8  6EE6               	movwf	postinc1,c
 12245  01BAFA  0E64               	movlw	100
 12246  01BAFC  6EE6               	movwf	postinc1,c
 12247  01BAFE  0E00               	movlw	0
 12248  01BB00  6EE6               	movwf	postinc1,c
 12249                           
 12250                           ;stkvar	_cb @ sp[(-4)+-3]
 12251  01BB02  0EF9               	movlw	-7
 12252  01BB04  006F FF8F FFE6     	movff	plusw1,postinc1
 12253  01BB0A  006F FF8F FFE6     	movff	plusw1,postinc1
 12254  01BB10  EC88  F0DE         	call	_check_range	;wreg free
 12255  01BB14  5001               	movf	btemp^0,w,c
 12256  01BB16  A4D8               	btfss	status,2,c
 12257  01BB18  D002               	goto	l11334
 12258  01BB1A                     u10240:
 12259                           
 12260                           ;daq.c: 326:   return 0;
 12261  01BB1A  0E00               	movlw	0
 12262  01BB1C  D019               	goto	L11
 12263  01BB1E                     l11334:
 12264                           
 12265                           ;daq.c: 328:  if (!check_range(cp, 100, 4000))
 12266  01BB1E  0EA0               	movlw	160
 12267  01BB20  6EE6               	movwf	postinc1,c
 12268  01BB22  0E0F               	movlw	15
 12269  01BB24  6EE6               	movwf	postinc1,c
 12270  01BB26  0E64               	movlw	100
 12271  01BB28  6EE6               	movwf	postinc1,c
 12272  01BB2A  0E00               	movlw	0
 12273  01BB2C  6EE6               	movwf	postinc1,c
 12274                           
 12275                           ;stkvar	_cp @ sp[(-4)+-5]
 12276  01BB2E  0EF7               	movlw	-9
 12277  01BB30  006F FF8F FFE6     	movff	plusw1,postinc1
 12278  01BB36  006F FF8F FFE6     	movff	plusw1,postinc1
 12279  01BB3C  EC88  F0DE         	call	_check_range	;wreg free
 12280  01BB40  5001               	movf	btemp^0,w,c
 12281  01BB42  B4D8               	btfsc	status,2,c
 12282  01BB44  D7EA               	goto	u10240
 12283                           
 12284                           ;daq.c: 331:  if (!mode)
 12285                           ;stkvar	_mode @ sp[(0)+-1]
 12286  01BB46  0EFF               	movlw	-1
 12287  01BB48  50E3               	movf	plusw1,w,c
 12288  01BB4A  A4D8               	btfss	status,2,c
 12289  01BB4C  D003               	goto	l11346
 12290  01BB4E                     u10260:
 12291                           
 12292                           ;daq.c: 332:   return 1;
 12293  01BB4E  0E01               	movlw	1
 12294  01BB50                     L11:
 12295  01BB50  6E01               	movwf	btemp^0,c
 12296  01BB52  D011               	goto	l1938
 12297  01BB54                     l11346:
 12298                           
 12299                           ;daq.c: 334:  R.n_offset[0] = cb;
 12300                           ;stkvar	_cb @ sp[(0)+-3]
 12301  01BB54  0EFD               	movlw	-3
 12302  01BB56  006F FF8C  F0D4    	movff	plusw1,_R+38	;volatile
 12303  01BB5C  0EFE               	movlw	-2
 12304  01BB5E  006F FF8C  F0D5    	movff	plusw1,_R+39	;volatile
 12305                           
 12306                           ;daq.c: 335:  R.n_offset[1] = cp;
 12307                           ;stkvar	_cp @ sp[(0)+-5]
 12308  01BB64  0EFB               	movlw	-5
 12309  01BB66  006F FF8C  F0D6    	movff	plusw1,_R+40	;volatile
 12310  01BB6C  0EFC               	movlw	-4
 12311  01BB6E  006F FF8C  F0D7    	movff	plusw1,_R+41	;volatile
 12312  01BB74  D7EC               	goto	u10260
 12313  01BB76                     l1938:
 12314                           
 12315                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 12316  01BB76  0EFB               	movlw	251
 12317  01BB78  26E1               	addwf	fsr1l,f,c
 12318  01BB7A  0EFF               	movlw	255
 12319  01BB7C  22E2               	addwfc	fsr1h,f,c
 12320  01BB7E  0012               	return		;funcret
 12321  01BB80                     __end_of_cal_current_zero:
 12322                           	opt callstack 0
 12323                           
 12324 ;; *************** function _check_range *****************
 12325 ;; Defined at:
 12326 ;;		line 310 in file "daq.c"
 12327 ;; Parameters:    Size  Location     Type
 12328 ;;  value           2  [STACK] short 
 12329 ;;  window          2  [STACK] short 
 12330 ;;  standard        2  [STACK] short 
 12331 ;; Auto vars:     Size  Location     Type
 12332 ;;		None
 12333 ;; Return value:  Size  Location     Type
 12334 ;;                  1  [STACK] _Bool 
 12335 ;; Registers used:
 12336 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 12337 ;; Tracked objects:
 12338 ;;		On entry : 0/0
 12339 ;;		On exit  : 0/0
 12340 ;;		Unchanged: 0/0
 12341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12346 ;;Total ram usage:        0 bytes
 12347 ;; Hardware stack levels used:    1
 12348 ;; Hardware stack levels required when called:   15
 12349 ;; This function calls:
 12350 ;;		Nothing
 12351 ;; This function is called by:
 12352 ;;		_cal_current_zero
 12353 ;; This function uses a reentrant model
 12354 ;;
 12355                           
 12356                           	psect	text44
 12357  01BD10                     __ptext44:
 12358                           	opt callstack 0
 12359  01BD10                     _check_range:
 12360                           	opt callstack 13
 12361                           
 12362                           ;daq.c: 310: static _Bool check_range(int16_t value, int16_t window, int16_t standard);d
      +                          aq.c: 311: {;daq.c: 312:  if (value > (standard + window))
 12363                           ;stkvar	_value @ sp[(0)+-2]
 12364                           ;stkvar	_window @ sp[(0)+-4]
 12365                           ;stkvar	_standard @ sp[(0)+-6]
 12366                           
 12367                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12368                           ;incstack = 0
 12369  01BD10  0EFA               	movlw	-6
 12370  01BD12  006F FF8C  F00B    	movff	plusw1,btemp+10
 12371  01BD18  0EFB               	movlw	-5
 12372  01BD1A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12373  01BD20  0EFC               	movlw	-4
 12374  01BD22  50E3               	movf	plusw1,w,c
 12375  01BD24  260B               	addwf	(btemp+10)^0,f,c
 12376  01BD26  0EFD               	movlw	-3
 12377  01BD28  50E3               	movf	plusw1,w,c
 12378  01BD2A  220C               	addwfc	(btemp+11)^0,f,c
 12379  01BD2C  0EFE               	movlw	-2
 12380  01BD2E  50E3               	movf	plusw1,w,c
 12381  01BD30  5C0B               	subwf	(btemp+10)^0,w,c
 12382  01BD32  500C               	movf	(btemp+11)^0,w,c
 12383  01BD34  0A80               	xorlw	128
 12384  01BD36  6E01               	movwf	btemp^0,c
 12385  01BD38  0EFF               	movlw	-1
 12386  01BD3A  50E3               	movf	plusw1,w,c
 12387  01BD3C  0A80               	xorlw	128
 12388  01BD3E  5801               	subwfb	btemp^0,w,c
 12389  01BD40  B0D8               	btfsc	status,0,c
 12390  01BD42  D002               	goto	l10786
 12391  01BD44                     u9960:
 12392                           
 12393                           ;daq.c: 313:   return 0;
 12394  01BD44  0E00               	movlw	0
 12395  01BD46  D01E               	goto	L12
 12396  01BD48                     l10786:
 12397                           
 12398                           ;daq.c: 314:  if (value < (standard - window))
 12399                           ;stkvar	_window @ sp[(0)+-4]
 12400                           ;stkvar	_standard @ sp[(0)+-6]
 12401  01BD48  0EFA               	movlw	-6
 12402  01BD4A  006F FF8C  F00B    	movff	plusw1,btemp+10
 12403  01BD50  0EFB               	movlw	-5
 12404  01BD52  006F FF8C  F00C    	movff	plusw1,btemp+11
 12405  01BD58  0EFC               	movlw	-4
 12406  01BD5A  50E3               	movf	plusw1,w,c
 12407  01BD5C  5E0B               	subwf	(btemp+10)^0,f,c
 12408  01BD5E  0EFD               	movlw	-3
 12409  01BD60  50E3               	movf	plusw1,w,c
 12410  01BD62  5A0C               	subwfb	(btemp+11)^0,f,c
 12411                           
 12412                           ;stkvar	_value @ sp[(0)+-2]
 12413  01BD64  0EFE               	movlw	-2
 12414  01BD66  006F FF8C  F001    	movff	plusw1,btemp
 12415  01BD6C  500B               	movf	(btemp+10)^0,w,c
 12416  01BD6E  5C01               	subwf	btemp^0,w,c
 12417  01BD70  0EFF               	movlw	-1
 12418  01BD72  50E3               	movf	plusw1,w,c
 12419  01BD74  0A80               	xorlw	128
 12420  01BD76  6E01               	movwf	btemp^0,c
 12421  01BD78  500C               	movf	(btemp+11)^0,w,c
 12422  01BD7A  0A80               	xorlw	128
 12423  01BD7C  5801               	subwfb	btemp^0,w,c
 12424  01BD7E  A0D8               	btfss	status,0,c
 12425  01BD80  D7E1               	goto	u9960
 12426                           
 12427                           ;daq.c: 316:  return 1;
 12428  01BD82  0E01               	movlw	1
 12429  01BD84                     L12:
 12430  01BD84  6E01               	movwf	btemp^0,c
 12431                           
 12432                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 12433  01BD86  0EFA               	movlw	250
 12434  01BD88  26E1               	addwf	fsr1l,f,c
 12435  01BD8A  0EFF               	movlw	255
 12436  01BD8C  22E2               	addwfc	fsr1h,f,c
 12437  01BD8E  0012               	return		;funcret
 12438  01BD90                     __end_of_check_range:
 12439                           	opt callstack 0
 12440                           
 12441 ;; *************** function _convert_adc_data *****************
 12442 ;; Defined at:
 12443 ;;		line 51 in file "mbmc.c"
 12444 ;; Parameters:    Size  Location     Type
 12445 ;;		None
 12446 ;; Auto vars:     Size  Location     Type
 12447 ;;  i               1  [STACK] unsigned char 
 12448 ;; Return value:  Size  Location     Type
 12449 ;;                  1  [STACK] void 
 12450 ;; Registers used:
 12451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 12452 ;; Tracked objects:
 12453 ;;		On entry : 0/1
 12454 ;;		On exit  : 0/0
 12455 ;;		Unchanged: 0/0
 12456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12461 ;;Total ram usage:        0 bytes
 12462 ;; Hardware stack levels used:    1
 12463 ;; Hardware stack levels required when called:   18
 12464 ;; This function calls:
 12465 ;;		_conv_raw_result
 12466 ;;		_lp_filter
 12467 ;; This function is called by:
 12468 ;;		_main
 12469 ;; This function uses a reentrant model
 12470 ;;
 12471                           
 12472                           	psect	text45
 12473  01B342                     __ptext45:
 12474                           	opt callstack 0
 12475  01B342                     _convert_adc_data:
 12476                           	opt callstack 0
 12477                           
 12478                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12479  01B342  52E6               	movf	postinc1,f,c
 12480                           
 12481                           ;mbmc.c: 53:  uint8_t i = 0;
 12482                           ;stkvar	_i @ sp[(-1)+0]
 12483                           
 12484                           ;incstack = 0
 12485  01B344  0EFF               	movlw	-1
 12486  01B346  6AE3               	clrf	plusw1,c
 12487  01B348                     l12140:
 12488                           
 12489                           ;mbmc.c: 56:   if (V.calib) {
 12490  01B348  0101               	movlb	1	; () banked
 12491  01B34A  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 12492  01B34C  B4D8               	btfsc	status,2,c
 12493  01B34E  D01B               	goto	l12144
 12494                           
 12495                           ; BSR set to: 1
 12496                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 12497  01B350  0E01               	movlw	1
 12498  01B352  6EE6               	movwf	postinc1,c
 12499                           
 12500                           ;stkvar	_i @ sp[(-2)+0]
 12501  01B354  0EFE               	movlw	-2
 12502  01B356  50E3               	movf	plusw1,w,c
 12503  01B358  6EE6               	movwf	postinc1,c
 12504  01B35A  0E01               	movlw	1
 12505  01B35C  6EE6               	movwf	postinc1,c
 12506                           
 12507                           ;stkvar	_i @ sp[(-4)+0]
 12508  01B35E  0EFC               	movlw	-4
 12509  01B360  50E3               	movf	plusw1,w,c
 12510  01B362  6EE6               	movwf	postinc1,c
 12511  01B364  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 12512  01B368  0060  F007  FFE6   	movff	btemp,postinc1
 12513  01B36E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12514  01B374  0060  F00F  FFE6   	movff	btemp+2,postinc1
 12515  01B37A  0060  F013  FFE6   	movff	btemp+3,postinc1
 12516  01B380  EC0F  F0C8         	call	_lp_filter	;wreg free
 12517  01B384  D01A               	goto	L13
 12518  01B386                     l12144:
 12519                           
 12520                           ; BSR set to: 1
 12521                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 12522  01B386  0E00               	movlw	0
 12523  01B388  6EE6               	movwf	postinc1,c
 12524                           
 12525                           ;stkvar	_i @ sp[(-2)+0]
 12526  01B38A  0EFE               	movlw	-2
 12527  01B38C  50E3               	movf	plusw1,w,c
 12528  01B38E  6EE6               	movwf	postinc1,c
 12529  01B390  0E00               	movlw	0
 12530  01B392  6EE6               	movwf	postinc1,c
 12531                           
 12532                           ;stkvar	_i @ sp[(-4)+0]
 12533  01B394  0EFC               	movlw	-4
 12534  01B396  50E3               	movf	plusw1,w,c
 12535  01B398  6EE6               	movwf	postinc1,c
 12536  01B39A  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 12537  01B39E  0060  F007  FFE6   	movff	btemp,postinc1
 12538  01B3A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12539  01B3AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 12540  01B3B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 12541  01B3B6  EC0F  F0C8         	call	_lp_filter	;wreg free
 12542  01B3BA                     L13:
 12543                           
 12544                           ;stkvar	_i @ sp[(-1)+0]
 12545  01B3BA  0EFF               	movlw	-1
 12546  01B3BC  50E3               	movf	plusw1,w,c
 12547  01B3BE  0D04               	mullw	4
 12548  01B3C0  0EFF               	movlw	low _C
 12549  01B3C2  24F3               	addwf	243,w,c
 12550  01B3C4  6ED9               	movwf	fsr2l,c
 12551  01B3C6  0E07               	movlw	high _C
 12552  01B3C8  20F4               	addwfc	prodh,w,c
 12553  01B3CA  6EDA               	movwf	fsr2h,c
 12554  01B3CC  0060  F007  FFDE   	movff	btemp,postinc2
 12555  01B3D2  0060  F00B  FFDE   	movff	btemp+1,postinc2
 12556  01B3D8  0060  F00F  FFDE   	movff	btemp+2,postinc2
 12557  01B3DE  0060  F013  FFDE   	movff	btemp+3,postinc2
 12558                           
 12559                           ;mbmc.c: 61:  } while (++i < 16);
 12560                           ;stkvar	_i @ sp[(-1)+0]
 12561  01B3E4  0EFF               	movlw	-1
 12562  01B3E6  2AE3               	incf	plusw1,f,c
 12563  01B3E8  0EFF               	movlw	-1
 12564  01B3EA  006F FF8C  F001    	movff	plusw1,btemp
 12565  01B3F0  0E0F               	movlw	15
 12566  01B3F2  6401               	cpfsgt	btemp^0,c
 12567  01B3F4  D7A9               	goto	l12140
 12568                           
 12569                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12570  01B3F6  52E5               	movf	postdec1,f,c
 12571  01B3F8  0012               	return		;funcret
 12572  01B3FA                     __end_of_convert_adc_data:
 12573                           	opt callstack 0
 12574                           
 12575 ;; *************** function _clear_hid_pflags *****************
 12576 ;; Defined at:
 12577 ;;		line 67 in file "hid.c"
 12578 ;; Parameters:    Size  Location     Type
 12579 ;;  h               2  [STACK] PTR struct H_data
 12580 ;;		 -> H(9), 
 12581 ;; Auto vars:     Size  Location     Type
 12582 ;;		None
 12583 ;; Return value:  Size  Location     Type
 12584 ;;                  1  [STACK] void 
 12585 ;; Registers used:
 12586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 12587 ;; Tracked objects:
 12588 ;;		On entry : 3E/0
 12589 ;;		On exit  : 0/0
 12590 ;;		Unchanged: 0/0
 12591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12596 ;;Total ram usage:        0 bytes
 12597 ;; Hardware stack levels used:    1
 12598 ;; Hardware stack levels required when called:   15
 12599 ;; This function calls:
 12600 ;;		Nothing
 12601 ;; This function is called by:
 12602 ;;		_main
 12603 ;; This function uses a reentrant model
 12604 ;;
 12605                           
 12606                           	psect	text46
 12607  01C11A                     __ptext46:
 12608                           	opt callstack 0
 12609  01C11A                     _clear_hid_pflags:
 12610                           	opt callstack 15
 12611                           
 12612                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 12613                           ;stkvar	_h @ sp[(0)+-2]
 12614                           
 12615                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12616                           ;incstack = 0
 12617  01C11A  0EFE               	movlw	-2
 12618  01C11C  006F FF8C  F00B    	movff	plusw1,btemp+10
 12619  01C122  0EFF               	movlw	-1
 12620  01C124  006F FF8C  F00C    	movff	plusw1,btemp+11
 12621  01C12A  0E03               	movlw	3
 12622  01C12C  240B               	addwf	(btemp+10)^0,w,c
 12623  01C12E  6ED9               	movwf	fsr2l,c
 12624  01C130  0E00               	movlw	0
 12625  01C132  200C               	addwfc	(btemp+11)^0,w,c
 12626  01C134  6EDA               	movwf	fsr2h,c
 12627  01C136  0E00               	movlw	0
 12628  01C138  6EDF               	movwf	indf2,c
 12629                           
 12630                           ;hid.c: 70:  h->enter_p = SW_OFF;
 12631                           ;stkvar	_h @ sp[(0)+-2]
 12632  01C13A  0EFE               	movlw	-2
 12633  01C13C  006F FF8C  F00B    	movff	plusw1,btemp+10
 12634  01C142  0EFF               	movlw	-1
 12635  01C144  006F FF8C  F00C    	movff	plusw1,btemp+11
 12636  01C14A  0E05               	movlw	5
 12637  01C14C  240B               	addwf	(btemp+10)^0,w,c
 12638  01C14E  6ED9               	movwf	fsr2l,c
 12639  01C150  0E00               	movlw	0
 12640  01C152  200C               	addwfc	(btemp+11)^0,w,c
 12641  01C154  6EDA               	movwf	fsr2h,c
 12642  01C156  0E00               	movlw	0
 12643  01C158  6EDF               	movwf	indf2,c
 12644                           
 12645                           ;hid.c: 71:  h->calib_p = SW_OFF;
 12646                           ;stkvar	_h @ sp[(0)+-2]
 12647  01C15A  0EFE               	movlw	-2
 12648  01C15C  006F FF8C  F00B    	movff	plusw1,btemp+10
 12649  01C162  0EFF               	movlw	-1
 12650  01C164  006F FF8C  F00C    	movff	plusw1,btemp+11
 12651  01C16A  0E07               	movlw	7
 12652  01C16C  240B               	addwf	(btemp+10)^0,w,c
 12653  01C16E  6ED9               	movwf	fsr2l,c
 12654  01C170  0E00               	movlw	0
 12655  01C172  200C               	addwfc	(btemp+11)^0,w,c
 12656  01C174  6EDA               	movwf	fsr2h,c
 12657  01C176  0E00               	movlw	0
 12658  01C178  6EDF               	movwf	indf2,c
 12659                           
 12660                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 12661  01C17A  52E5               	movf	postdec1,f,c
 12662  01C17C  52E5               	movf	postdec1,f,c
 12663  01C17E  0012               	return		;funcret
 12664  01C180                     __end_of_clear_hid_pflags:
 12665                           	opt callstack 0
 12666                           
 12667 ;; *************** function _check_help *****************
 12668 ;; Defined at:
 12669 ;;		line 40 in file "mconfig.c"
 12670 ;; Parameters:    Size  Location     Type
 12671 ;;  flipper         1  [STACK] const _Bool 
 12672 ;; Auto vars:     Size  Location     Type
 12673 ;;  estatus         1    0        _Bool 
 12674 ;; Return value:  Size  Location     Type
 12675 ;;                  1  [STACK] _Bool 
 12676 ;; Registers used:
 12677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12678 ;; Tracked objects:
 12679 ;;		On entry : 3F/1
 12680 ;;		On exit  : 0/0
 12681 ;;		Unchanged: 0/0
 12682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12687 ;;Total ram usage:        0 bytes
 12688 ;; Hardware stack levels used:    1
 12689 ;; Hardware stack levels required when called:   28
 12690 ;; This function calls:
 12691 ;;		_StartTimer
 12692 ;;		_TimerDone
 12693 ;;		_display_help
 12694 ;;		_display_info
 12695 ;;		_get_vterm_ptr
 12696 ;;		_help_button
 12697 ;;		_mode_lamp_bright
 12698 ;;		_mode_lamp_dim
 12699 ;;		_set_display_info
 12700 ;;		_set_temp_display_help
 12701 ;;		_set_vterm
 12702 ;;		_sprintf
 12703 ;;		_update_lcd
 12704 ;;		_vterm_dump
 12705 ;; This function is called by:
 12706 ;;		_main
 12707 ;; This function uses a reentrant model
 12708 ;;
 12709                           
 12710                           	psect	text47
 12711  018A46                     __ptext47:
 12712                           	opt callstack 0
 12713  018A46                     _check_help:
 12714                           	opt callstack 2
 12715                           
 12716                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 12717                           
 12718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12719                           ;incstack = 0
 12720  018A46  EC15  F0E5         	call	_help_button	;wreg free
 12721  018A4A  5001               	movf	btemp^0,w,c
 12722  018A4C  B4D8               	btfsc	status,2,c
 12723  018A4E  D0D0               	goto	l14336
 12724  018A50  ECD9  F0E9         	call	_display_info	;wreg free
 12725  018A54  0401               	decf	btemp^0,w,c
 12726  018A56  B4D8               	btfsc	status,2,c
 12727  018A58  D0CB               	goto	l14336
 12728                           
 12729                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 12730  018A5A  0EDC               	movlw	220
 12731  018A5C  6EE6               	movwf	postinc1,c
 12732  018A5E  0E05               	movlw	5
 12733  018A60  6EE6               	movwf	postinc1,c
 12734  018A62  0E0B               	movlw	11
 12735  018A64  6EE6               	movwf	postinc1,c
 12736  018A66  EC5C  F0E4         	call	_StartTimer	;wreg free
 12737                           
 12738                           ;mconfig.c: 48:   if (V.debug)
 12739  018A6A  0101               	movlb	1	; () banked
 12740  018A6C  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
 12741                           
 12742                           ; BSR set to: 1
 12743                           ;mconfig.c: 49:    vterm_dump();
 12744  018A6E  ECFA  F0D1         	call	_vterm_dump	;wreg free
 12745                           
 12746                           ;mconfig.c: 51:   set_vterm(1);
 12747  018A72  0E01               	movlw	1
 12748  018A74  6EE6               	movwf	postinc1,c
 12749  018A76  ECC1  F0E8         	call	_set_vterm	;wreg free
 12750                           
 12751                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 12752  018A7A  ECD9  F0E9         	call	_display_info	;wreg free
 12753  018A7E  5001               	movf	btemp^0,w,c
 12754  018A80  6EE6               	movwf	postinc1,c
 12755  018A82  EC81  F0E9         	call	_set_temp_display_help	;wreg free
 12756                           
 12757                           ; BSR set to: 1
 12758                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 12759  018A86  0E01               	movlw	1
 12760  018A88  6EE6               	movwf	postinc1,c
 12761  018A8A  ECD0  F0E8         	call	_set_display_info	;wreg free
 12762                           
 12763                           ;mconfig.c: 54:   if (flipper) {
 12764                           ;stkvar	_flipper @ sp[(0)+-1]
 12765  018A8E  0EFF               	movlw	-1
 12766  018A90  50E3               	movf	plusw1,w,c
 12767  018A92  B4D8               	btfsc	status,2,c
 12768  018A94  D019               	goto	l14322
 12769                           
 12770                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 12771  018A96  0EB3               	movlw	low STR_62
 12772  018A98  6EE6               	movwf	postinc1,c
 12773  018A9A  0EFF               	movlw	high STR_62
 12774  018A9C  6EE6               	movwf	postinc1,c
 12775  018A9E  0E5D               	movlw	low STR_64
 12776  018AA0  6EE6               	movwf	postinc1,c
 12777  018AA2  0EFF               	movlw	high STR_64
 12778  018AA4  6EE6               	movwf	postinc1,c
 12779  018AA6  0E01               	movlw	1
 12780  018AA8  6EE6               	movwf	postinc1,c
 12781  018AAA  0E00               	movlw	0
 12782  018AAC  6EE6               	movwf	postinc1,c
 12783  018AAE  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 12784  018AB2  0060  F007  FFE6   	movff	btemp,postinc1
 12785  018AB8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12786  018ABE  0E06               	movlw	6
 12787  018AC0  6EE6               	movwf	postinc1,c
 12788  018AC2  EC4D  F0D5         	call	_sprintf	;wreg free
 12789                           
 12790                           ;mconfig.c: 56:   } else {
 12791  018AC6  D018               	goto	l1709
 12792  018AC8                     l14322:
 12793                           
 12794                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 12795  018AC8  0EC9               	movlw	low STR_63
 12796  018ACA  6EE6               	movwf	postinc1,c
 12797  018ACC  0EFF               	movlw	high STR_63
 12798  018ACE  6EE6               	movwf	postinc1,c
 12799  018AD0  0E5D               	movlw	low STR_64
 12800  018AD2  6EE6               	movwf	postinc1,c
 12801  018AD4  0EFF               	movlw	high STR_64
 12802  018AD6  6EE6               	movwf	postinc1,c
 12803  018AD8  0E01               	movlw	1
 12804  018ADA  6EE6               	movwf	postinc1,c
 12805  018ADC  0E00               	movlw	0
 12806  018ADE  6EE6               	movwf	postinc1,c
 12807  018AE0  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 12808  018AE4  0060  F007  FFE6   	movff	btemp,postinc1
 12809  018AEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12810  018AF0  0E06               	movlw	6
 12811  018AF2  6EE6               	movwf	postinc1,c
 12812  018AF4  EC4D  F0D5         	call	_sprintf	;wreg free
 12813  018AF8                     l1709:
 12814                           
 12815                           ; BSR set to: 0
 12816                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 12817  018AF8  0101               	movlb	1	; () banked
 12818  018AFA  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 12819  018AFC  32E8               	rrcf	wreg,f,c
 12820  018AFE  32E8               	rrcf	wreg,f,c
 12821  018B00  0B03               	andlw	3
 12822  018B02  0D24               	mullw	36
 12823  018B04  0E12               	movlw	18
 12824  018B06  26F3               	addwf	243,f,c
 12825  018B08  0E00               	movlw	0
 12826  018B0A  22F4               	addwfc	244,f,c
 12827  018B0C  0EB3               	movlw	low _T
 12828  018B0E  6E0B               	movwf	(btemp+10)^0,c
 12829  018B10  0EF9               	movlw	high _T
 12830  018B12  6E0C               	movwf	(btemp+11)^0,c
 12831  018B14  50F3               	movf	243,w,c
 12832  018B16  260B               	addwf	(btemp+10)^0,f,c
 12833  018B18  50F4               	movf	244,w,c
 12834  018B1A  220C               	addwfc	(btemp+11)^0,f,c
 12835  018B1C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12836  018B22  0060  F033  FFE6   	movff	btemp+11,postinc1
 12837  018B28  0EBF               	movlw	low STR_66
 12838  018B2A  6EE6               	movwf	postinc1,c
 12839  018B2C  0EFF               	movlw	high STR_66
 12840  018B2E  6EE6               	movwf	postinc1,c
 12841  018B30  0E01               	movlw	1
 12842  018B32  6EE6               	movwf	postinc1,c
 12843  018B34  0E01               	movlw	1
 12844  018B36  6EE6               	movwf	postinc1,c
 12845  018B38  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 12846  018B3C  0060  F007  FFE6   	movff	btemp,postinc1
 12847  018B42  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12848  018B48  0E06               	movlw	6
 12849  018B4A  6EE6               	movwf	postinc1,c
 12850  018B4C  EC4D  F0D5         	call	_sprintf	;wreg free
 12851                           
 12852                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 12853  018B50  0101               	movlb	1	; () banked
 12854  018B52  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 12855  018B54  32E8               	rrcf	wreg,f,c
 12856  018B56  32E8               	rrcf	wreg,f,c
 12857  018B58  0B03               	andlw	3
 12858  018B5A  0D24               	mullw	36
 12859  018B5C  0EB3               	movlw	low _T
 12860  018B5E  6E0B               	movwf	(btemp+10)^0,c
 12861  018B60  0EF9               	movlw	high _T
 12862  018B62  6E0C               	movwf	(btemp+11)^0,c
 12863  018B64  50F3               	movf	243,w,c
 12864  018B66  260B               	addwf	(btemp+10)^0,f,c
 12865  018B68  50F4               	movf	244,w,c
 12866  018B6A  220C               	addwfc	(btemp+11)^0,f,c
 12867  018B6C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12868  018B72  0060  F033  FFE6   	movff	btemp+11,postinc1
 12869  018B78  0EBF               	movlw	low STR_66
 12870  018B7A  6EE6               	movwf	postinc1,c
 12871  018B7C  0EFF               	movlw	high STR_66
 12872  018B7E  6EE6               	movwf	postinc1,c
 12873  018B80  0E01               	movlw	1
 12874  018B82  6EE6               	movwf	postinc1,c
 12875  018B84  0E02               	movlw	2
 12876  018B86  6EE6               	movwf	postinc1,c
 12877  018B88  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 12878  018B8C  0060  F007  FFE6   	movff	btemp,postinc1
 12879  018B92  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12880  018B98  0E06               	movlw	6
 12881  018B9A  6EE6               	movwf	postinc1,c
 12882  018B9C  EC4D  F0D5         	call	_sprintf	;wreg free
 12883                           
 12884                           ; BSR set to: 0
 12885                           ;mconfig.c: 61:   V.help_id++;
 12886  018BA0  EE20  F1A2         	lfsr	2,_V+155	;volatile
 12887  018BA4  38DF               	swapf	223,w,c
 12888  018BA6  6E0C               	movwf	(btemp+11)^0,c
 12889  018BA8  320C               	rrcf	(btemp+11)^0,f,c
 12890  018BAA  300C               	rrcf	(btemp+11)^0,w,c
 12891  018BAC  0B03               	andlw	3
 12892  018BAE  6E0C               	movwf	(btemp+11)^0,c
 12893  018BB0  2A0C               	incf	(btemp+11)^0,f,c
 12894  018BB2  3A0C               	swapf	(btemp+11)^0,f,c
 12895  018BB4  360C               	rlcf	(btemp+11)^0,f,c
 12896  018BB6  360C               	rlcf	(btemp+11)^0,f,c
 12897  018BB8  50DF               	movf	223,w,c
 12898  018BBA  180C               	xorwf	(btemp+11)^0,w,c
 12899  018BBC  0B3F               	andlw	-193
 12900  018BBE  180C               	xorwf	(btemp+11)^0,w,c
 12901  018BC0  6EDF               	movwf	223,c
 12902                           
 12903                           ; BSR set to: 0
 12904                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 12905  018BC2  0EB8               	movlw	184
 12906  018BC4  6EE6               	movwf	postinc1,c
 12907  018BC6  0E0B               	movlw	11
 12908  018BC8  6EE6               	movwf	postinc1,c
 12909  018BCA  0E09               	movlw	9
 12910  018BCC  6EE6               	movwf	postinc1,c
 12911  018BCE  EC5C  F0E4         	call	_StartTimer	;wreg free
 12912                           
 12913                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 12914  018BD2  0EB8               	movlw	184
 12915  018BD4  6EE6               	movwf	postinc1,c
 12916  018BD6  0E0B               	movlw	11
 12917  018BD8  6EE6               	movwf	postinc1,c
 12918  018BDA  0E07               	movlw	7
 12919  018BDC  6EE6               	movwf	postinc1,c
 12920  018BDE  EC5C  F0E4         	call	_StartTimer	;wreg free
 12921                           
 12922                           ;mconfig.c: 64:   mode_lamp_bright();
 12923  018BE2  EC98  F0E9         	call	_mode_lamp_bright	;wreg free
 12924                           
 12925                           ;mconfig.c: 65:   update_lcd(1);
 12926  018BE6  0E01               	movlw	1
 12927  018BE8  6EE6               	movwf	postinc1,c
 12928  018BEA  ECC5  F0D4         	call	_update_lcd	;wreg free
 12929                           
 12930                           ;mconfig.c: 67:  } else {
 12931  018BEE  D032               	goto	l1710
 12932  018BF0                     l14336:
 12933                           
 12934                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 12935  018BF0  0E09               	movlw	9
 12936  018BF2  6EE6               	movwf	postinc1,c
 12937  018BF4  ECCB  F0E6         	call	_TimerDone	;wreg free
 12938  018BF8  5001               	movf	btemp^0,w,c
 12939  018BFA  B4D8               	btfsc	status,2,c
 12940  018BFC  D02B               	goto	l1710
 12941                           
 12942                           ;mconfig.c: 69:    set_vterm(0);
 12943  018BFE  0E00               	movlw	0
 12944  018C00  6EE6               	movwf	postinc1,c
 12945  018C02  ECC1  F0E8         	call	_set_vterm	;wreg free
 12946                           
 12947                           ;mconfig.c: 70:    V.help = 0;
 12948  018C06  0101               	movlb	1	; () banked
 12949  018C08  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 12950                           
 12951                           ; BSR set to: 1
 12952                           ;mconfig.c: 71:    set_display_info(display_help());
 12953  018C0A  ECDD  F0E9         	call	_display_help	;wreg free
 12954  018C0E  5001               	movf	btemp^0,w,c
 12955  018C10  6EE6               	movwf	postinc1,c
 12956  018C12  ECD0  F0E8         	call	_set_display_info	;wreg free
 12957                           
 12958                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 12959  018C16  0060  F673  FFE6   	movff	_V+149,postinc1
 12960  018C1C  0060  F677  FFE6   	movff	_V+150,postinc1
 12961  018C22  EC09  F0E9         	call	_mode_lamp_dim	;wreg free
 12962                           
 12963                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 12964  018C26  0E0B               	movlw	11
 12965  018C28  6EE6               	movwf	postinc1,c
 12966  018C2A  ECCB  F0E6         	call	_TimerDone	;wreg free
 12967  018C2E  5001               	movf	btemp^0,w,c
 12968  018C30  B4D8               	btfsc	status,2,c
 12969  018C32  D010               	goto	l1710
 12970                           
 12971                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 12972  018C34  0101               	movlb	1	; () banked
 12973  018C36  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 12974  018C38  A4D8               	btfss	status,2,c
 12975  018C3A  D002               	goto	u13670
 12976  018C3C  0E01               	movlw	1
 12977  018C3E  D001               	goto	u13680
 12978  018C40                     u13670:
 12979  018C40  0E00               	movlw	0
 12980  018C42                     u13680:
 12981  018C42  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 12982                           
 12983                           ; BSR set to: 1
 12984                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 12985  018C44  0EDC               	movlw	220
 12986  018C46  6EE6               	movwf	postinc1,c
 12987  018C48  0E05               	movlw	5
 12988  018C4A  6EE6               	movwf	postinc1,c
 12989  018C4C  0E0B               	movlw	11
 12990  018C4E  6EE6               	movwf	postinc1,c
 12991  018C50  EC5C  F0E4         	call	_StartTimer	;wreg free
 12992  018C54                     l1710:
 12993                           
 12994                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 12995  018C54  52E5               	movf	postdec1,f,c
 12996  018C56  0012               	return		;funcret
 12997  018C58                     __end_of_check_help:
 12998                           	opt callstack 0
 12999                           
 13000 ;; *************** function _vterm_dump *****************
 13001 ;; Defined at:
 13002 ;;		line 121 in file "mconfig.c"
 13003 ;; Parameters:    Size  Location     Type
 13004 ;;		None
 13005 ;; Auto vars:     Size  Location     Type
 13006 ;;		None
 13007 ;; Return value:  Size  Location     Type
 13008 ;;                  1  [STACK] void 
 13009 ;; Registers used:
 13010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13011 ;; Tracked objects:
 13012 ;;		On entry : 3F/1
 13013 ;;		On exit  : 0/0
 13014 ;;		Unchanged: 0/0
 13015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13020 ;;Total ram usage:        0 bytes
 13021 ;; Hardware stack levels used:    1
 13022 ;; Hardware stack levels required when called:   27
 13023 ;; This function calls:
 13024 ;;		_WaitMs
 13025 ;;		_eaDogM_WriteStringAtPos
 13026 ;;		_get_vterm_ptr
 13027 ;;		_sprintf
 13028 ;;		_wait_lcd_done
 13029 ;; This function is called by:
 13030 ;;		_check_help
 13031 ;; This function uses a reentrant model
 13032 ;;
 13033                           
 13034                           	psect	text48
 13035  01A3F4                     __ptext48:
 13036                           	opt callstack 0
 13037  01A3F4                     _vterm_dump:
 13038                           	opt callstack 2
 13039                           
 13040                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 13041                           
 13042                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13043                           ;incstack = 0
 13044  01A3F4  0E01               	movlw	1
 13045  01A3F6  6EE6               	movwf	postinc1,c
 13046  01A3F8  0E00               	movlw	0
 13047  01A3FA  6EE6               	movwf	postinc1,c
 13048  01A3FC  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 13049  01A400  0060  F007  FFE6   	movff	btemp,postinc1
 13050  01A406  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13051  01A40C  0E00               	movlw	0
 13052  01A40E  6EE6               	movwf	postinc1,c
 13053  01A410  0E00               	movlw	0
 13054  01A412  6EE6               	movwf	postinc1,c
 13055  01A414  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 13056  01A418  0060  F007  FFE6   	movff	btemp,postinc1
 13057  01A41E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13058  01A424  0EA4               	movlw	low STR_68
 13059  01A426  6EE6               	movwf	postinc1,c
 13060  01A428  0EFF               	movlw	high STR_68
 13061  01A42A  6EE6               	movwf	postinc1,c
 13062  01A42C  0E08               	movlw	low (_V+1)
 13063  01A42E  6EE6               	movwf	postinc1,c
 13064  01A430  0E01               	movlw	high (_V+1)
 13065  01A432  6EE6               	movwf	postinc1,c
 13066  01A434  0E08               	movlw	8
 13067  01A436  6EE6               	movwf	postinc1,c
 13068  01A438  EC4D  F0D5         	call	_sprintf	;wreg free
 13069                           
 13070                           ; BSR set to: 0
 13071                           ;mconfig.c: 124:  wait_lcd_done();
 13072  01A43C  EC50  F0E8         	call	_wait_lcd_done	;wreg free
 13073                           
 13074                           ; BSR set to: 0
 13075                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 13076  01A440  0E08               	movlw	low (_V+1)
 13077  01A442  6EE6               	movwf	postinc1,c
 13078  01A444  0E01               	movlw	high (_V+1)
 13079  01A446  6EE6               	movwf	postinc1,c
 13080  01A448  0E00               	movlw	0
 13081  01A44A  6EE6               	movwf	postinc1,c
 13082  01A44C  0E00               	movlw	0
 13083  01A44E  6EE6               	movwf	postinc1,c
 13084  01A450  EC5A  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13085                           
 13086                           ; BSR set to: 59
 13087                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 13088  01A454  0E01               	movlw	1
 13089  01A456  6EE6               	movwf	postinc1,c
 13090  01A458  0E01               	movlw	1
 13091  01A45A  6EE6               	movwf	postinc1,c
 13092  01A45C  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 13093  01A460  0060  F007  FFE6   	movff	btemp,postinc1
 13094  01A466  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13095  01A46C  0E00               	movlw	0
 13096  01A46E  6EE6               	movwf	postinc1,c
 13097  01A470  0E01               	movlw	1
 13098  01A472  6EE6               	movwf	postinc1,c
 13099  01A474  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 13100  01A478  0060  F007  FFE6   	movff	btemp,postinc1
 13101  01A47E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13102  01A484  0EA4               	movlw	low STR_68
 13103  01A486  6EE6               	movwf	postinc1,c
 13104  01A488  0EFF               	movlw	high STR_68
 13105  01A48A  6EE6               	movwf	postinc1,c
 13106  01A48C  0E08               	movlw	low (_V+1)
 13107  01A48E  6EE6               	movwf	postinc1,c
 13108  01A490  0E01               	movlw	high (_V+1)
 13109  01A492  6EE6               	movwf	postinc1,c
 13110  01A494  0E08               	movlw	8
 13111  01A496  6EE6               	movwf	postinc1,c
 13112  01A498  EC4D  F0D5         	call	_sprintf	;wreg free
 13113                           
 13114                           ; BSR set to: 0
 13115                           ;mconfig.c: 127:  wait_lcd_done();
 13116  01A49C  EC50  F0E8         	call	_wait_lcd_done	;wreg free
 13117                           
 13118                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 13119  01A4A0  0E08               	movlw	low (_V+1)
 13120  01A4A2  6EE6               	movwf	postinc1,c
 13121  01A4A4  0E01               	movlw	high (_V+1)
 13122  01A4A6  6EE6               	movwf	postinc1,c
 13123  01A4A8  0E00               	movlw	0
 13124  01A4AA  6EE6               	movwf	postinc1,c
 13125  01A4AC  0E01               	movlw	1
 13126  01A4AE  6EE6               	movwf	postinc1,c
 13127  01A4B0  EC5A  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13128                           
 13129                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 13130  01A4B4  0E01               	movlw	1
 13131  01A4B6  6EE6               	movwf	postinc1,c
 13132  01A4B8  0E02               	movlw	2
 13133  01A4BA  6EE6               	movwf	postinc1,c
 13134  01A4BC  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 13135  01A4C0  0060  F007  FFE6   	movff	btemp,postinc1
 13136  01A4C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13137  01A4CC  0E00               	movlw	0
 13138  01A4CE  6EE6               	movwf	postinc1,c
 13139  01A4D0  0E02               	movlw	2
 13140  01A4D2  6EE6               	movwf	postinc1,c
 13141  01A4D4  EC49  F0E6         	call	_get_vterm_ptr	;wreg free
 13142  01A4D8  0060  F007  FFE6   	movff	btemp,postinc1
 13143  01A4DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13144  01A4E4  0EA4               	movlw	low STR_68
 13145  01A4E6  6EE6               	movwf	postinc1,c
 13146  01A4E8  0EFF               	movlw	high STR_68
 13147  01A4EA  6EE6               	movwf	postinc1,c
 13148  01A4EC  0E08               	movlw	low (_V+1)
 13149  01A4EE  6EE6               	movwf	postinc1,c
 13150  01A4F0  0E01               	movlw	high (_V+1)
 13151  01A4F2  6EE6               	movwf	postinc1,c
 13152  01A4F4  0E08               	movlw	8
 13153  01A4F6  6EE6               	movwf	postinc1,c
 13154  01A4F8  EC4D  F0D5         	call	_sprintf	;wreg free
 13155                           
 13156                           ; BSR set to: 0
 13157                           ;mconfig.c: 130:  wait_lcd_done();
 13158  01A4FC  EC50  F0E8         	call	_wait_lcd_done	;wreg free
 13159                           
 13160                           ; BSR set to: 0
 13161                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 13162  01A500  0E08               	movlw	low (_V+1)
 13163  01A502  6EE6               	movwf	postinc1,c
 13164  01A504  0E01               	movlw	high (_V+1)
 13165  01A506  6EE6               	movwf	postinc1,c
 13166  01A508  0E00               	movlw	0
 13167  01A50A  6EE6               	movwf	postinc1,c
 13168  01A50C  0E02               	movlw	2
 13169  01A50E  6EE6               	movwf	postinc1,c
 13170  01A510  EC5A  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13171                           
 13172                           ; BSR set to: 59
 13173                           ;mconfig.c: 132:  WaitMs(3000);
 13174  01A514  0EB8               	movlw	184
 13175  01A516  6EE6               	movwf	postinc1,c
 13176  01A518  0E0B               	movlw	11
 13177  01A51A  6EE6               	movwf	postinc1,c
 13178  01A51C  EC4D  F0E5         	call	_WaitMs	;wreg free
 13179                           
 13180                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 13181  01A520  0012               	return		;funcret
 13182  01A522                     __end_of_vterm_dump:
 13183                           	opt callstack 0
 13184                           
 13185 ;; *************** function _sprintf *****************
 13186 ;; Defined at:
 13187 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 13188 ;; Parameters:    Size  Location     Type
 13189 ;;  s               2  [STACK] PTR unsigned char 
 13190 ;;		 -> D.lcd(480), D(482), port_data(512), V(192), 
 13191 ;;  fmt             2  [STACK] PTR const unsigned char 
 13192 ;;		 -> STR_81(127), STR_79(3), STR_78(3), STR_77(19), 
 13193 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 13194 ;;		 -> STR_72(19), STR_71(24), STR_70(15), STR_69(15), 
 13195 ;;		 -> STR_68(15), STR_67(10), STR_66(10), STR_65(19), 
 13196 ;;		 -> STR_64(19), STR_59(21), STR_58(21), STR_57(21), 
 13197 ;;		 -> STR_56(21), STR_55(21), STR_54(21), STR_53(21), 
 13198 ;;		 -> STR_52(21), STR_51(21), STR_50(20), STR_49(20), 
 13199 ;;		 -> STR_48(21), STR_47(21), STR_46(21), STR_45(22), 
 13200 ;;		 -> STR_44(22), STR_43(22), STR_42(23), STR_41(23), 
 13201 ;;		 -> STR_40(23), STR_39(29), STR_38(23), STR_37(23), 
 13202 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 13203 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 13204 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 13205 ;;		 -> STR_24(17), STR_23(16), STR_22(16), STR_21(26), 
 13206 ;;		 -> STR_20(26), STR_19(22), STR_18(21), STR_17(21), 
 13207 ;;		 -> STR_16(21), STR_15(21), STR_14(22), STR_13(22), 
 13208 ;;		 -> STR_12(22), STR_11(26), STR_10(21), STR_9(21), 
 13209 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 13210 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 13211 ;; Auto vars:     Size  Location     Type
 13212 ;;  f               6  [STACK] struct _IO_FILE
 13213 ;;  ap              2  [STACK] PTR void [1]
 13214 ;;		 -> ?_printf(2), ?_sprintf(2), 
 13215 ;;  ret             2    0        int 
 13216 ;; Return value:  Size  Location     Type
 13217 ;;                  2  [STACK] int 
 13218 ;; Registers used:
 13219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13220 ;; Tracked objects:
 13221 ;;		On entry : 0/2
 13222 ;;		On exit  : 3F/0
 13223 ;;		Unchanged: 0/0
 13224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13229 ;;Total ram usage:        0 bytes
 13230 ;; Hardware stack levels used:    1
 13231 ;; Hardware stack levels required when called:   23
 13232 ;; This function calls:
 13233 ;;		_vfprintf
 13234 ;; This function is called by:
 13235 ;;		_main
 13236 ;;		_current_sensor_cal
 13237 ;;		_check_help
 13238 ;;		_vterm_dump
 13239 ;;		_calc_bsoc
 13240 ;; This function uses a reentrant model
 13241 ;;
 13242                           
 13243                           	psect	text49
 13244  01AA9A                     __ptext49:
 13245                           	opt callstack 0
 13246  01AA9A                     _sprintf:
 13247                           	opt callstack 0
 13248                           
 13249                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13250  01AA9A  0E08               	movlw	8
 13251  01AA9C  26E1               	addwf	fsr1l,f,c
 13252  01AA9E  0E00               	movlw	0
 13253  01AAA0  22E2               	addwfc	fsr1h,f,c
 13254                           
 13255                           ;incstack = 0
 13256 ;; hardware stack exceeded
 13257  01AAA2  0EFE               	movlw	254
 13258  01AAA4  6E0B               	movwf	(btemp+10)^0,c
 13259  01AAA6  0EFF               	movlw	255
 13260  01AAA8  6E0C               	movwf	(btemp+11)^0,c
 13261                           
 13262                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 13263  01AAAA  0EF5               	movlw	245
 13264  01AAAC  24E1               	addwf	fsr1l,w,c
 13265  01AAAE  6E09               	movwf	(btemp+8)^0,c
 13266  01AAB0  0EFF               	movlw	255
 13267  01AAB2  20E2               	addwfc	fsr1h,w,c
 13268  01AAB4  6E0A               	movwf	(btemp+9)^0,c
 13269  01AAB6  500B               	movf	(btemp+10)^0,w,c
 13270  01AAB8  2609               	addwf	(btemp+8)^0,f,c
 13271  01AABA  500C               	movf	(btemp+11)^0,w,c
 13272  01AABC  220A               	addwfc	(btemp+9)^0,f,c
 13273                           
 13274                           ;stkvar	_ap @ sp[(-8)+6]
 13275  01AABE  0EFF               	movlw	-1
 13276  01AAC0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13277  01AAC6  0EFE               	movlw	-2
 13278  01AAC8  0060  F027  FFE3   	movff	btemp+8,plusw1
 13279                           
 13280                           ;stkvar	_s @ sp[(-8)+-3]
 13281  01AACE  0EF5               	movlw	-11
 13282  01AAD0  006F FF8C  F00B    	movff	plusw1,btemp+10
 13283  01AAD6  0EF6               	movlw	-10
 13284  01AAD8  006F FF8C  F00C    	movff	plusw1,btemp+11
 13285                           
 13286                           ;stkvar	_f @ sp[(-8)+0]
 13287  01AADE  0EF9               	movlw	-7
 13288  01AAE0  0060  F033  FFE3   	movff	btemp+11,plusw1
 13289  01AAE6  0EF8               	movlw	-8
 13290  01AAE8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13291                           
 13292                           ;stkvar	_f @ sp[(-8)+0]
 13293  01AAEE  0EFA               	movlw	250
 13294  01AAF0  24E1               	addwf	fsr1l,w,c
 13295  01AAF2  6ED9               	movwf	fsr2l,c
 13296  01AAF4  0EFF               	movlw	255
 13297  01AAF6  20E2               	addwfc	fsr1h,w,c
 13298  01AAF8  6EDA               	movwf	fsr2h,c
 13299  01AAFA  0E00               	movlw	0
 13300  01AAFC  6EDE               	movwf	postinc2,c
 13301  01AAFE  0E00               	movlw	0
 13302  01AB00  6EDD               	movwf	postdec2,c
 13303                           
 13304                           ;stkvar	_f @ sp[(-8)+0]
 13305  01AB02  0EFC               	movlw	252
 13306  01AB04  24E1               	addwf	fsr1l,w,c
 13307  01AB06  6ED9               	movwf	fsr2l,c
 13308  01AB08  0EFF               	movlw	255
 13309  01AB0A  20E2               	addwfc	fsr1h,w,c
 13310  01AB0C  6EDA               	movwf	fsr2h,c
 13311  01AB0E  0E00               	movlw	0
 13312  01AB10  6EDE               	movwf	postinc2,c
 13313  01AB12  0E00               	movlw	0
 13314  01AB14  6EDD               	movwf	postdec2,c
 13315                           
 13316                           ;stkvar	_ap @ sp[(-8)+6]
 13317  01AB16  0EFE               	movlw	254
 13318  01AB18  24E1               	addwf	fsr1l,w,c
 13319  01AB1A  6E01               	movwf	btemp^0,c
 13320  01AB1C  0EFF               	movlw	255
 13321  01AB1E  20E2               	addwfc	fsr1h,w,c
 13322  01AB20  6E02               	movwf	(btemp+1)^0,c
 13323  01AB22  0060  F007  FFE6   	movff	btemp,postinc1
 13324  01AB28  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13325                           
 13326                           ;stkvar	_fmt @ sp[(-10)+-5]
 13327  01AB2E  0EF1               	movlw	-15
 13328  01AB30  006F FF8F FFE6     	movff	plusw1,postinc1
 13329  01AB36  006F FF8F FFE6     	movff	plusw1,postinc1
 13330                           
 13331                           ;stkvar	_f @ sp[(-12)+0]
 13332  01AB3C  0EF4               	movlw	244
 13333  01AB3E  24E1               	addwf	fsr1l,w,c
 13334  01AB40  6E01               	movwf	btemp^0,c
 13335  01AB42  0EFF               	movlw	255
 13336  01AB44  20E2               	addwfc	fsr1h,w,c
 13337  01AB46  6E02               	movwf	(btemp+1)^0,c
 13338  01AB48  0060  F007  FFE6   	movff	btemp,postinc1
 13339  01AB4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13340  01AB54  ECAF  F0DA         	call	_vfprintf	;wreg free
 13341                           
 13342                           ; BSR set to: 0
 13343                           ;stkvar	_f @ sp[(-8)+0]
 13344  01AB58  0EFA               	movlw	250
 13345  01AB5A  24E1               	addwf	fsr1l,w,c
 13346  01AB5C  6ED9               	movwf	fsr2l,c
 13347  01AB5E  0EFF               	movlw	255
 13348  01AB60  20E2               	addwfc	fsr1h,w,c
 13349  01AB62  6EDA               	movwf	fsr2h,c
 13350  01AB64  006F FF78  F00B    	movff	postinc2,btemp+10
 13351  01AB6A  006F FF74  F00C    	movff	postdec2,btemp+11
 13352                           
 13353                           ;stkvar	_s @ sp[(-8)+-3]
 13354  01AB70  0EF5               	movlw	-11
 13355  01AB72  006F FF8C  F009    	movff	plusw1,btemp+8
 13356  01AB78  0EF6               	movlw	-10
 13357  01AB7A  006F FF8C  F00A    	movff	plusw1,btemp+9
 13358  01AB80  500B               	movf	(btemp+10)^0,w,c
 13359  01AB82  2409               	addwf	(btemp+8)^0,w,c
 13360  01AB84  6ED9               	movwf	fsr2l,c
 13361  01AB86  500C               	movf	(btemp+11)^0,w,c
 13362  01AB88  200A               	addwfc	(btemp+9)^0,w,c
 13363  01AB8A  6EDA               	movwf	fsr2h,c
 13364  01AB8C  0E00               	movlw	0
 13365  01AB8E  6EDF               	movwf	indf2,c
 13366                           
 13367                           ; BSR set to: 0
 13368                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 13369  01AB90  0EF8               	movlw	248
 13370  01AB92  26E1               	addwf	fsr1l,f,c
 13371  01AB94  0EFF               	movlw	255
 13372  01AB96  22E2               	addwfc	fsr1h,f,c
 13373  01AB98  52E5               	movf	postdec1,f,c
 13374  01AB9A  50E7               	movf	indf1,w,c
 13375  01AB9C  5EE1               	subwf	fsr1l,f,c
 13376  01AB9E  0E00               	movlw	0
 13377  01ABA0  5AE2               	subwfb	fsr1h,f,c
 13378  01ABA2  0012               	return		;funcret
 13379  01ABA4                     __end_of_sprintf:
 13380                           	opt callstack 0
 13381                           
 13382 ;; *************** function _get_vterm_ptr *****************
 13383 ;; Defined at:
 13384 ;;		line 116 in file "mconfig.c"
 13385 ;; Parameters:    Size  Location     Type
 13386 ;;  line            1  [STACK] const unsigned char 
 13387 ;;  vterm           1  [STACK] const unsigned char 
 13388 ;; Auto vars:     Size  Location     Type
 13389 ;;		None
 13390 ;; Return value:  Size  Location     Type
 13391 ;;                  2  [STACK] PTR unsigned char 
 13392 ;; Registers used:
 13393 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 13394 ;; Tracked objects:
 13395 ;;		On entry : 0/2
 13396 ;;		On exit  : 0/0
 13397 ;;		Unchanged: 0/0
 13398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13403 ;;Total ram usage:        0 bytes
 13404 ;; Hardware stack levels used:    1
 13405 ;; Hardware stack levels required when called:   15
 13406 ;; This function calls:
 13407 ;;		Nothing
 13408 ;; This function is called by:
 13409 ;;		_main
 13410 ;;		_current_sensor_cal
 13411 ;;		_check_help
 13412 ;;		_vterm_dump
 13413 ;; This function uses a reentrant model
 13414 ;;
 13415                           
 13416                           	psect	text50
 13417  01CC92                     __ptext50:
 13418                           	opt callstack 0
 13419  01CC92                     _get_vterm_ptr:
 13420                           	opt callstack 15
 13421                           
 13422                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 13423                           ;stkvar	_vterm @ sp[(0)+-2]
 13424                           
 13425                           ; BSR set to: 0
 13426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13427                           ;incstack = 0
 13428  01CC92  0EFE               	movlw	-2
 13429  01CC94  50E3               	movf	plusw1,w,c
 13430  01CC96  0B03               	andlw	3
 13431  01CC98  0D78               	mullw	120
 13432  01CC9A  0E2A               	movlw	low _D
 13433  01CC9C  6E01               	movwf	btemp^0,c
 13434  01CC9E  0E09               	movlw	high _D
 13435  01CCA0  6E02               	movwf	(btemp+1)^0,c
 13436  01CCA2  50F3               	movf	243,w,c
 13437  01CCA4  2601               	addwf	btemp^0,f,c
 13438  01CCA6  50F4               	movf	244,w,c
 13439  01CCA8  2202               	addwfc	(btemp+1)^0,f,c
 13440                           
 13441                           ;stkvar	_line @ sp[(0)+-1]
 13442  01CCAA  0EFF               	movlw	-1
 13443  01CCAC  50E3               	movf	plusw1,w,c
 13444  01CCAE  0B03               	andlw	3
 13445  01CCB0  0D28               	mullw	40
 13446  01CCB2  50F3               	movf	243,w,c
 13447  01CCB4  2601               	addwf	btemp^0,f,c
 13448  01CCB6  50F4               	movf	244,w,c
 13449  01CCB8  2202               	addwfc	(btemp+1)^0,f,c
 13450                           
 13451                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 13452  01CCBA  52E5               	movf	postdec1,f,c
 13453  01CCBC  52E5               	movf	postdec1,f,c
 13454  01CCBE  0012               	return		;funcret
 13455  01CCC0                     __end_of_get_vterm_ptr:
 13456                           	opt callstack 0
 13457                           
 13458 ;; *************** function _WaitMs *****************
 13459 ;; Defined at:
 13460 ;;		line 32 in file "timers.c"
 13461 ;; Parameters:    Size  Location     Type
 13462 ;;  numMilliseco    2  [STACK] const unsigned short 
 13463 ;; Auto vars:     Size  Location     Type
 13464 ;;		None
 13465 ;; Return value:  Size  Location     Type
 13466 ;;                  1  [STACK] void 
 13467 ;; Registers used:
 13468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 13469 ;; Tracked objects:
 13470 ;;		On entry : 0/1
 13471 ;;		On exit  : 0/0
 13472 ;;		Unchanged: 0/0
 13473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13478 ;;Total ram usage:        0 bytes
 13479 ;; Hardware stack levels used:    1
 13480 ;; Hardware stack levels required when called:   16
 13481 ;; This function calls:
 13482 ;;		_StartTimer
 13483 ;;		_TimerDone
 13484 ;; This function is called by:
 13485 ;;		_main
 13486 ;;		_current_sensor_cal
 13487 ;;		_vterm_dump
 13488 ;; This function uses a reentrant model
 13489 ;;
 13490                           
 13491                           	psect	text51
 13492  01CA9A                     __ptext51:
 13493                           	opt callstack 0
 13494  01CA9A                     _WaitMs:
 13495                           	opt callstack 13
 13496                           
 13497                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 13498                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 13499                           
 13500                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13501                           ;incstack = 0
 13502  01CA9A  0EFE               	movlw	-2
 13503  01CA9C  006F FF8F FFE6     	movff	plusw1,postinc1
 13504  01CAA2  006F FF8F FFE6     	movff	plusw1,postinc1
 13505  01CAA8  0E00               	movlw	0
 13506  01CAAA  6EE6               	movwf	postinc1,c
 13507  01CAAC  EC5C  F0E4         	call	_StartTimer	;wreg free
 13508                           
 13509                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 13510  01CAB0  D005               	goto	l10674
 13511  01CAB2                     l1641:
 13512                           
 13513                           ;timers.c: 36:   __nop();
 13514  01CAB2  F000               	nop	
 13515                           
 13516                           ;timers.c: 37:   __nop();
 13517  01CAB4  F000               	nop	
 13518                           
 13519                           ;timers.c: 38:   __nop();
 13520  01CAB6  F000               	nop	
 13521                           
 13522                           ;timers.c: 39:   __nop();
 13523  01CAB8  F000               	nop	
 13524  01CABA  0004               	clrwdt		;# 
 13525  01CABC                     l10674:
 13526                           
 13527                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 13528  01CABC  0E00               	movlw	0
 13529  01CABE  6EE6               	movwf	postinc1,c
 13530  01CAC0  ECCB  F0E6         	call	_TimerDone	;wreg free
 13531  01CAC4  5001               	movf	btemp^0,w,c
 13532  01CAC6  B4D8               	btfsc	status,2,c
 13533  01CAC8  D7F4               	goto	l1641
 13534                           
 13535                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 13536  01CACA  52E5               	movf	postdec1,f,c
 13537  01CACC  52E5               	movf	postdec1,f,c
 13538  01CACE  0012               	return		;funcret
 13539  01CAD0                     __end_of_WaitMs:
 13540                           	opt callstack 0
 13541                           
 13542 ;; *************** function _update_lcd *****************
 13543 ;; Defined at:
 13544 ;;		line 85 in file "mconfig.c"
 13545 ;; Parameters:    Size  Location     Type
 13546 ;;  vterm           1  [STACK] unsigned char 
 13547 ;; Auto vars:     Size  Location     Type
 13548 ;;		None
 13549 ;; Return value:  Size  Location     Type
 13550 ;;                  1  [STACK] unsigned char 
 13551 ;; Registers used:
 13552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13553 ;; Tracked objects:
 13554 ;;		On entry : 0/0
 13555 ;;		On exit  : 0/0
 13556 ;;		Unchanged: 0/0
 13557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13562 ;;Total ram usage:        0 bytes
 13563 ;; Hardware stack levels used:    1
 13564 ;; Hardware stack levels required when called:   27
 13565 ;; This function calls:
 13566 ;;		_eaDogM_WriteStringAtPos
 13567 ;;		_wait_lcd_done
 13568 ;; This function is called by:
 13569 ;;		_main
 13570 ;;		_current_sensor_cal
 13571 ;;		_check_help
 13572 ;; This function uses a reentrant model
 13573 ;;
 13574                           
 13575                           	psect	text52
 13576  01A98A                     __ptext52:
 13577                           	opt callstack 0
 13578  01A98A                     _update_lcd:
 13579                           	opt callstack 3
 13580                           
 13581                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 13582                           ;stkvar	_vterm @ sp[(0)+-1]
 13583                           
 13584                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13585                           ;incstack = 0
 13586  01A98A  0EFF               	movlw	-1
 13587  01A98C  006F FF8C  F001    	movff	plusw1,btemp
 13588  01A992  0E03               	movlw	3
 13589  01A994  1601               	andwf	btemp^0,f,c
 13590  01A996  0EFF               	movlw	-1
 13591  01A998  0060  F007  FFE3   	movff	btemp,plusw1
 13592                           
 13593                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 13594  01A99E  EE22  F30A         	lfsr	2,_D+480
 13595  01A9A2  A0DF               	btfss	indf2,0,c
 13596  01A9A4  D004               	goto	l13968
 13597                           
 13598                           ;stkvar	_vterm @ sp[(0)+-1]
 13599  01A9A6  0EFF               	movlw	-1
 13600  01A9A8  50E3               	movf	plusw1,w,c
 13601  01A9AA  B4D8               	btfsc	status,2,c
 13602  01A9AC  D074               	goto	l1717
 13603  01A9AE                     l13968:
 13604                           
 13605                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 13606                           ;stkvar	_vterm @ sp[(0)+-1]
 13607  01A9AE  0EFF               	movlw	-1
 13608  01A9B0  50E3               	movf	plusw1,w,c
 13609  01A9B2  0D78               	mullw	120
 13610  01A9B4  0E3E               	movlw	low (_D+20)
 13611  01A9B6  24F3               	addwf	243,w,c
 13612  01A9B8  6ED9               	movwf	fsr2l,c
 13613  01A9BA  0E09               	movlw	high (_D+20)
 13614  01A9BC  20F4               	addwfc	prodh,w,c
 13615  01A9BE  6EDA               	movwf	fsr2h,c
 13616  01A9C0  0E00               	movlw	0
 13617  01A9C2  6EDF               	movwf	indf2,c
 13618                           
 13619                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 13620                           ;stkvar	_vterm @ sp[(0)+-1]
 13621  01A9C4  0EFF               	movlw	-1
 13622  01A9C6  50E3               	movf	plusw1,w,c
 13623  01A9C8  0D78               	mullw	120
 13624  01A9CA  0E66               	movlw	low (_D+60)
 13625  01A9CC  24F3               	addwf	243,w,c
 13626  01A9CE  6ED9               	movwf	fsr2l,c
 13627  01A9D0  0E09               	movlw	high (_D+60)
 13628  01A9D2  20F4               	addwfc	prodh,w,c
 13629  01A9D4  6EDA               	movwf	fsr2h,c
 13630  01A9D6  0E00               	movlw	0
 13631  01A9D8  6EDF               	movwf	indf2,c
 13632                           
 13633                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 13634                           ;stkvar	_vterm @ sp[(0)+-1]
 13635  01A9DA  0EFF               	movlw	-1
 13636  01A9DC  50E3               	movf	plusw1,w,c
 13637  01A9DE  0D78               	mullw	120
 13638  01A9E0  0E8E               	movlw	low (_D+100)
 13639  01A9E2  24F3               	addwf	243,w,c
 13640  01A9E4  6ED9               	movwf	fsr2l,c
 13641  01A9E6  0E09               	movlw	high (_D+100)
 13642  01A9E8  20F4               	addwfc	prodh,w,c
 13643  01A9EA  6EDA               	movwf	fsr2h,c
 13644  01A9EC  0E00               	movlw	0
 13645  01A9EE  6EDF               	movwf	indf2,c
 13646                           
 13647                           ;mconfig.c: 95:  wait_lcd_done();
 13648  01A9F0  EC50  F0E8         	call	_wait_lcd_done	;wreg free
 13649                           
 13650                           ; BSR set to: 0
 13651                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 13652                           ;stkvar	_vterm @ sp[(0)+-1]
 13653  01A9F4  0EFF               	movlw	-1
 13654  01A9F6  50E3               	movf	plusw1,w,c
 13655  01A9F8  0D78               	mullw	120
 13656  01A9FA  0E2A               	movlw	low _D
 13657  01A9FC  6E0B               	movwf	(btemp+10)^0,c
 13658  01A9FE  0E09               	movlw	high _D
 13659  01AA00  6E0C               	movwf	(btemp+11)^0,c
 13660  01AA02  50F3               	movf	243,w,c
 13661  01AA04  260B               	addwf	(btemp+10)^0,f,c
 13662  01AA06  50F4               	movf	244,w,c
 13663  01AA08  220C               	addwfc	(btemp+11)^0,f,c
 13664  01AA0A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13665  01AA10  0060  F033  FFE6   	movff	btemp+11,postinc1
 13666  01AA16  0E00               	movlw	0
 13667  01AA18  6EE6               	movwf	postinc1,c
 13668  01AA1A  0E00               	movlw	0
 13669  01AA1C  6EE6               	movwf	postinc1,c
 13670  01AA1E  EC5A  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13671                           
 13672                           ; BSR set to: 59
 13673                           ;mconfig.c: 97:  wait_lcd_done();
 13674  01AA22  EC50  F0E8         	call	_wait_lcd_done	;wreg free
 13675                           
 13676                           ; BSR set to: 0
 13677                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 13678                           ;stkvar	_vterm @ sp[(0)+-1]
 13679  01AA26  0EFF               	movlw	-1
 13680  01AA28  50E3               	movf	plusw1,w,c
 13681  01AA2A  0D78               	mullw	120
 13682  01AA2C  0E2A               	movlw	low _D
 13683  01AA2E  6E0B               	movwf	(btemp+10)^0,c
 13684  01AA30  0E09               	movlw	high _D
 13685  01AA32  6E0C               	movwf	(btemp+11)^0,c
 13686  01AA34  0E28               	movlw	40
 13687  01AA36  260B               	addwf	(btemp+10)^0,f,c
 13688  01AA38  0E00               	movlw	0
 13689  01AA3A  220C               	addwfc	(btemp+11)^0,f,c
 13690  01AA3C  50F3               	movf	243,w,c
 13691  01AA3E  260B               	addwf	(btemp+10)^0,f,c
 13692  01AA40  50F4               	movf	244,w,c
 13693  01AA42  220C               	addwfc	(btemp+11)^0,f,c
 13694  01AA44  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13695  01AA4A  0060  F033  FFE6   	movff	btemp+11,postinc1
 13696  01AA50  0E00               	movlw	0
 13697  01AA52  6EE6               	movwf	postinc1,c
 13698  01AA54  0E01               	movlw	1
 13699  01AA56  6EE6               	movwf	postinc1,c
 13700  01AA58  EC5A  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13701                           
 13702                           ; BSR set to: 59
 13703                           ;mconfig.c: 99:  wait_lcd_done();
 13704  01AA5C  EC50  F0E8         	call	_wait_lcd_done	;wreg free
 13705                           
 13706                           ; BSR set to: 0
 13707                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 13708                           ;stkvar	_vterm @ sp[(0)+-1]
 13709  01AA60  0EFF               	movlw	-1
 13710  01AA62  50E3               	movf	plusw1,w,c
 13711  01AA64  0D78               	mullw	120
 13712  01AA66  0E2A               	movlw	low _D
 13713  01AA68  6E0B               	movwf	(btemp+10)^0,c
 13714  01AA6A  0E09               	movlw	high _D
 13715  01AA6C  6E0C               	movwf	(btemp+11)^0,c
 13716  01AA6E  0E50               	movlw	80
 13717  01AA70  260B               	addwf	(btemp+10)^0,f,c
 13718  01AA72  0E00               	movlw	0
 13719  01AA74  220C               	addwfc	(btemp+11)^0,f,c
 13720  01AA76  50F3               	movf	243,w,c
 13721  01AA78  260B               	addwf	(btemp+10)^0,f,c
 13722  01AA7A  50F4               	movf	244,w,c
 13723  01AA7C  220C               	addwfc	(btemp+11)^0,f,c
 13724  01AA7E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13725  01AA84  0060  F033  FFE6   	movff	btemp+11,postinc1
 13726  01AA8A  0E00               	movlw	0
 13727  01AA8C  6EE6               	movwf	postinc1,c
 13728  01AA8E  0E02               	movlw	2
 13729  01AA90  6EE6               	movwf	postinc1,c
 13730  01AA92  EC5A  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13731  01AA96                     l1717:
 13732                           
 13733                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 13734  01AA96  52E5               	movf	postdec1,f,c
 13735  01AA98  0012               	return		;funcret
 13736  01AA9A                     __end_of_update_lcd:
 13737                           	opt callstack 0
 13738                           
 13739 ;; *************** function _eaDogM_WriteStringAtPos *****************
 13740 ;; Defined at:
 13741 ;;		line 195 in file "eadog.c"
 13742 ;; Parameters:    Size  Location     Type
 13743 ;;  r               1  [STACK] const unsigned char 
 13744 ;;  c               1  [STACK] const unsigned char 
 13745 ;;  strPtr          2  [STACK] PTR unsigned char 
 13746 ;;		 -> D.lcd(480), D(482), V(192), 
 13747 ;; Auto vars:     Size  Location     Type
 13748 ;;  row             1  [STACK] unsigned char 
 13749 ;; Return value:  Size  Location     Type
 13750 ;;                  1  [STACK] void 
 13751 ;; Registers used:
 13752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13753 ;; Tracked objects:
 13754 ;;		On entry : 3F/0
 13755 ;;		On exit  : 3F/3B
 13756 ;;		Unchanged: 0/0
 13757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13762 ;;Total ram usage:        0 bytes
 13763 ;; Hardware stack levels used:    1
 13764 ;; Hardware stack levels required when called:   26
 13765 ;; This function calls:
 13766 ;;		_eaDogM_WriteString
 13767 ;;		_send_lcd_cmd_dma
 13768 ;;		_send_lcd_data_dma
 13769 ;;		_wait_lcd_done
 13770 ;;		_wdtdelay
 13771 ;; This function is called by:
 13772 ;;		_update_lcd
 13773 ;;		_vterm_dump
 13774 ;; This function uses a reentrant model
 13775 ;;
 13776                           
 13777                           	psect	text53
 13778  01B6B4                     __ptext53:
 13779                           	opt callstack 0
 13780  01B6B4                     _eaDogM_WriteStringAtPos:
 13781                           	opt callstack 0
 13782                           
 13783                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13784  01B6B4  52E6               	movf	postinc1,f,c
 13785                           
 13786                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 13787                           
 13788                           ;incstack = 0
 13789  01B6B6  D014               	goto	l13944
 13790  01B6B8                     l13932:
 13791                           
 13792                           ;eadog.c: 201:   row = 0x40;
 13793                           ;stkvar	_row @ sp[(-1)+0]
 13794  01B6B8  0EFF               	movlw	-1
 13795  01B6BA  6AE3               	clrf	plusw1,c
 13796  01B6BC  8CE3               	bsf	plusw1,6,c
 13797                           
 13798                           ;eadog.c: 202:   break;
 13799  01B6BE  D026               	goto	l13946
 13800  01B6C0                     l13934:
 13801                           
 13802                           ;eadog.c: 204:   row = 0x14;
 13803                           ;stkvar	_row @ sp[(-1)+0]
 13804  01B6C0  0EFF               	movlw	-1
 13805  01B6C2  6AE3               	clrf	plusw1,c
 13806  01B6C4  84E3               	bsf	plusw1,2,c
 13807  01B6C6  88E3               	bsf	plusw1,4,c	;indir
 13808                           
 13809                           ;eadog.c: 205:   break;
 13810  01B6C8  D021               	goto	l13946
 13811  01B6CA                     l13936:
 13812                           
 13813                           ;eadog.c: 207:   row = 0x54;
 13814  01B6CA  0E54               	movlw	84
 13815  01B6CC  6E0C               	movwf	(btemp+11)^0,c
 13816                           
 13817                           ;stkvar	_row @ sp[(-1)+0]
 13818  01B6CE  0EFF               	movlw	-1
 13819  01B6D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 13820                           
 13821                           ;eadog.c: 208:   break;
 13822  01B6D6  D01A               	goto	l13946
 13823  01B6D8                     l13938:
 13824                           
 13825                           ;eadog.c: 210:   row = 0x1;
 13826                           ;stkvar	_row @ sp[(-1)+0]
 13827  01B6D8  0EFF               	movlw	-1
 13828  01B6DA  6AE3               	clrf	plusw1,c
 13829  01B6DC  2AE3               	incf	plusw1,f,c
 13830                           
 13831                           ;eadog.c: 211:   break;
 13832  01B6DE  D016               	goto	l13946
 13833  01B6E0                     l13944:
 13834                           
 13835                           ;stkvar	_r @ sp[(-1)+-1]
 13836  01B6E0  0EFE               	movlw	-2
 13837  01B6E2  50E3               	movf	plusw1,w,c
 13838  01B6E4  6E0B               	movwf	(btemp+10)^0,c
 13839  01B6E6  6A0C               	clrf	(btemp+11)^0,c
 13840                           
 13841                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13842                           ; Switch size 1, requested type "simple"
 13843                           ; Number of cases is 1, Range of values is 0 to 0
 13844                           ; switch strategies available:
 13845                           ; Name         Instructions Cycles
 13846                           ; simple_byte            4     3 (average)
 13847                           ;	Chosen strategy is simple_byte
 13848  01B6E8  500C               	movf	(btemp+11)^0,w,c
 13849  01B6EA  0A00               	xorlw	0	; case 0
 13850  01B6EC  A4D8               	btfss	status,2,c
 13851  01B6EE  D7E4               	goto	l13932
 13852                           
 13853                           ; Switch size 1, requested type "simple"
 13854                           ; Number of cases is 4, Range of values is 0 to 3
 13855                           ; switch strategies available:
 13856                           ; Name         Instructions Cycles
 13857                           ; simple_byte           13     7 (average)
 13858                           ;	Chosen strategy is simple_byte
 13859  01B6F0  500B               	movf	(btemp+10)^0,w,c
 13860  01B6F2  0A00               	xorlw	0	; case 0
 13861  01B6F4  B4D8               	btfsc	status,2,c
 13862  01B6F6  D7E0               	goto	l13932
 13863  01B6F8  0A01               	xorlw	1	; case 1
 13864  01B6FA  B4D8               	btfsc	status,2,c
 13865  01B6FC  D7E1               	goto	l13934
 13866  01B6FE  0A03               	xorlw	3	; case 2
 13867  01B700  B4D8               	btfsc	status,2,c
 13868  01B702  D7E3               	goto	l13936
 13869  01B704  0A01               	xorlw	1	; case 3
 13870  01B706  B4D8               	btfsc	status,2,c
 13871  01B708  D7E7               	goto	l13938
 13872  01B70A  D7D6               	goto	l13932
 13873  01B70C                     l13946:
 13874                           
 13875                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 13876  01B70C  0E45               	movlw	69
 13877  01B70E  6EE6               	movwf	postinc1,c
 13878  01B710  ECB2  F0E8         	call	_send_lcd_cmd_dma	;wreg free
 13879                           
 13880                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 13881                           ;stkvar	_c @ sp[(-1)+-2]
 13882  01B714  0EFD               	movlw	-3
 13883  01B716  006F FF8C  F00C    	movff	plusw1,btemp+11
 13884                           
 13885                           ;stkvar	_row @ sp[(-1)+0]
 13886  01B71C  0EFF               	movlw	-1
 13887  01B71E  50E3               	movf	plusw1,w,c
 13888  01B720  240C               	addwf	(btemp+11)^0,w,c
 13889  01B722  6EE6               	movwf	postinc1,c
 13890  01B724  ECDE  F0E2         	call	_send_lcd_data_dma	;wreg free
 13891                           
 13892                           ; BSR set to: 59
 13893                           ;eadog.c: 218:  wait_lcd_done();
 13894  01B728  EC50  F0E8         	call	_wait_lcd_done	;wreg free
 13895                           
 13896                           ; BSR set to: 0
 13897                           ;eadog.c: 219:  wdtdelay(8);
 13898  01B72C  0E08               	movlw	8
 13899  01B72E  6EE6               	movwf	postinc1,c
 13900  01B730  0E00               	movlw	0
 13901  01B732  6EE6               	movwf	postinc1,c
 13902  01B734  0E00               	movlw	0
 13903  01B736  6EE6               	movwf	postinc1,c
 13904  01B738  0E00               	movlw	0
 13905  01B73A  6EE6               	movwf	postinc1,c
 13906  01B73C  ECE4  F0E1         	call	_wdtdelay	;wreg free
 13907                           
 13908                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 13909                           ;stkvar	_strPtr @ sp[(-1)+-4]
 13910  01B740  0EFB               	movlw	-5
 13911  01B742  006F FF8F FFE6     	movff	plusw1,postinc1
 13912  01B748  006F FF8F FFE6     	movff	plusw1,postinc1
 13913  01B74E  ECAE  F0DB         	call	_eaDogM_WriteString	;wreg free
 13914                           
 13915                           ; BSR set to: 59
 13916                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 13917  01B752  0EFB               	movlw	251
 13918  01B754  26E1               	addwf	fsr1l,f,c
 13919  01B756  0EFF               	movlw	255
 13920  01B758  22E2               	addwfc	fsr1h,f,c
 13921  01B75A  0012               	return		;funcret
 13922  01B75C                     __end_of_eaDogM_WriteStringAtPos:
 13923                           	opt callstack 0
 13924                           
 13925 ;; *************** function _send_lcd_cmd_dma *****************
 13926 ;; Defined at:
 13927 ;;		line 171 in file "eadog.c"
 13928 ;; Parameters:    Size  Location     Type
 13929 ;;  strPtr          1  [STACK] const unsigned char 
 13930 ;; Auto vars:     Size  Location     Type
 13931 ;;		None
 13932 ;; Return value:  Size  Location     Type
 13933 ;;                  1  [STACK] void 
 13934 ;; Registers used:
 13935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13936 ;; Tracked objects:
 13937 ;;		On entry : 0/3D
 13938 ;;		On exit  : 3F/0
 13939 ;;		Unchanged: 0/0
 13940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13945 ;;Total ram usage:        0 bytes
 13946 ;; Hardware stack levels used:    1
 13947 ;; Hardware stack levels required when called:   25
 13948 ;; This function calls:
 13949 ;;		_send_lcd_data_dma
 13950 ;;		_wait_lcd_done
 13951 ;; This function is called by:
 13952 ;;		_eaDogM_WriteStringAtPos
 13953 ;;		_eaDogM_WriteCommand
 13954 ;; This function uses a reentrant model
 13955 ;;
 13956                           
 13957                           	psect	text54
 13958  01D164                     __ptext54:
 13959                           	opt callstack 0
 13960  01D164                     _send_lcd_cmd_dma:
 13961                           	opt callstack 3
 13962                           
 13963                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 13964                           
 13965                           ; BSR set to: 59
 13966                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13967                           ;incstack = 0
 13968  01D164  0EFE               	movlw	254
 13969  01D166  6EE6               	movwf	postinc1,c
 13970  01D168  ECDE  F0E2         	call	_send_lcd_data_dma	;wreg free
 13971                           
 13972                           ; BSR set to: 59
 13973                           ;eadog.c: 174:  wait_lcd_done();
 13974  01D16C  EC50  F0E8         	call	_wait_lcd_done	;wreg free
 13975                           
 13976                           ; BSR set to: 0
 13977                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 13978                           ;stkvar	_strPtr @ sp[(0)+-1]
 13979  01D170  0EFF               	movlw	-1
 13980  01D172  50E3               	movf	plusw1,w,c
 13981  01D174  6EE6               	movwf	postinc1,c
 13982  01D176  ECDE  F0E2         	call	_send_lcd_data_dma	;wreg free
 13983                           
 13984                           ;eadog.c: 176:  wait_lcd_done();
 13985  01D17A  EC50  F0E8         	call	_wait_lcd_done	;wreg free
 13986                           
 13987                           ; BSR set to: 0
 13988                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 13989  01D17E  52E5               	movf	postdec1,f,c
 13990  01D180  0012               	return		;funcret
 13991  01D182                     __end_of_send_lcd_cmd_dma:
 13992                           	opt callstack 0
 13993                           
 13994 ;; *************** function _wait_lcd_done *****************
 13995 ;; Defined at:
 13996 ;;		line 444 in file "eadog.c"
 13997 ;; Parameters:    Size  Location     Type
 13998 ;;		None
 13999 ;; Auto vars:     Size  Location     Type
 14000 ;;		None
 14001 ;; Return value:  Size  Location     Type
 14002 ;;                  1  [STACK] void 
 14003 ;; Registers used:
 14004 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 14005 ;; Tracked objects:
 14006 ;;		On entry : 0/1
 14007 ;;		On exit  : 3F/0
 14008 ;;		Unchanged: 0/0
 14009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14014 ;;Total ram usage:        0 bytes
 14015 ;; Hardware stack levels used:    1
 14016 ;; Hardware stack levels required when called:   16
 14017 ;; This function calls:
 14018 ;;		_wdtdelay
 14019 ;; This function is called by:
 14020 ;;		_main
 14021 ;;		_send_lcd_cmd_dma
 14022 ;;		_eaDogM_WriteStringAtPos
 14023 ;;		_update_lcd
 14024 ;;		_vterm_dump
 14025 ;; This function uses a reentrant model
 14026 ;;
 14027                           
 14028                           	psect	text55
 14029  01D0A0                     __ptext55:
 14030                           	opt callstack 0
 14031  01D0A0                     _wait_lcd_done:
 14032                           	opt callstack 14
 14033                           
 14034                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 14035                           
 14036                           ; BSR set to: 0
 14037                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14038                           ;incstack = 0
 14039  01D0A0  0101               	movlb	1	; () banked
 14040  01D0A2  B7D0               	btfsc	_spi_link& (0+255),3,b	;volatile
 14041  01D0A4  D7FD               	goto	_wait_lcd_done
 14042  01D0A6                     u9140:
 14043  01D0A6  013D               	movlb	61	; () banked
 14044  01D0A8  AB17               	btfss	23,5,b	;volatile
 14045  01D0AA  D7FD               	goto	u9140
 14046                           
 14047                           ; BSR set to: 61
 14048                           ;eadog.c: 448:  wdtdelay(50);
 14049  01D0AC  0E32               	movlw	50
 14050  01D0AE  6EE6               	movwf	postinc1,c
 14051  01D0B0  0E00               	movlw	0
 14052  01D0B2  6EE6               	movwf	postinc1,c
 14053  01D0B4  0E00               	movlw	0
 14054  01D0B6  6EE6               	movwf	postinc1,c
 14055  01D0B8  0E00               	movlw	0
 14056  01D0BA  6EE6               	movwf	postinc1,c
 14057  01D0BC  ECE4  F0E1         	call	_wdtdelay	;wreg free
 14058                           
 14059                           ; BSR set to: 0
 14060                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 14061  01D0C0  0012               	return		;funcret
 14062  01D0C2                     __end_of_wait_lcd_done:
 14063                           	opt callstack 0
 14064                           
 14065 ;; *************** function _wdtdelay *****************
 14066 ;; Defined at:
 14067 ;;		line 23 in file "eadog.c"
 14068 ;; Parameters:    Size  Location     Type
 14069 ;;  delay           4  [STACK] const unsigned long 
 14070 ;; Auto vars:     Size  Location     Type
 14071 ;;		None
 14072 ;; Return value:  Size  Location     Type
 14073 ;;                  1  [STACK] void 
 14074 ;; Registers used:
 14075 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 14076 ;; Tracked objects:
 14077 ;;		On entry : 2/3D
 14078 ;;		On exit  : 3F/0
 14079 ;;		Unchanged: 0/0
 14080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14085 ;;Total ram usage:        0 bytes
 14086 ;; Hardware stack levels used:    1
 14087 ;; Hardware stack levels required when called:   15
 14088 ;; This function calls:
 14089 ;;		Nothing
 14090 ;; This function is called by:
 14091 ;;		_init_display
 14092 ;;		_send_lcd_data
 14093 ;;		_send_lcd_cmd
 14094 ;;		_send_lcd_cmd_long
 14095 ;;		_eaDogM_WriteStringAtPos
 14096 ;;		_wait_lcd_done
 14097 ;; This function uses a reentrant model
 14098 ;;
 14099                           
 14100                           	psect	text56
 14101  01C3C8                     __ptext56:
 14102                           	opt callstack 0
 14103  01C3C8                     _wdtdelay:
 14104                           	opt callstack 14
 14105                           
 14106                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 14107                           
 14108                           ; BSR set to: 0
 14109                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14110                           ;incstack = 0
 14111  01C3C8  0100               	movlb	0	; () banked
 14112  01C3CA  6B74               	clrf	wdtdelay@dcount& (0+255),b
 14113  01C3CC  6B75               	clrf	(wdtdelay@dcount+1)& (0+255),b
 14114  01C3CE  6B76               	clrf	(wdtdelay@dcount+2)& (0+255),b
 14115  01C3D0  6B77               	clrf	(wdtdelay@dcount+3)& (0+255),b
 14116  01C3D2                     l1494:
 14117                           
 14118                           ; BSR set to: 0
 14119                           ;eadog.c: 28:   __nop();
 14120  01C3D2  F000               	nop	
 14121  01C3D4  0004               	clrwdt		;# 
 14122                           
 14123                           ;eadog.c: 30:  };
 14124  01C3D6  0E01               	movlw	1
 14125  01C3D8  0100               	movlb	0	; () banked
 14126  01C3DA  2774               	addwf	wdtdelay@dcount& (0+255),f,b
 14127  01C3DC  0E00               	movlw	0
 14128  01C3DE  2375               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 14129  01C3E0  2376               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 14130  01C3E2  2377               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 14131                           
 14132                           ; BSR set to: 0
 14133                           ;stkvar	_delay @ sp[(0)+-4]
 14134  01C3E4  0EFC               	movlw	-4
 14135  01C3E6  006F FF8C  F001    	movff	plusw1,btemp
 14136  01C3EC  5174               	movf	wdtdelay@dcount& (0+255),w,b
 14137  01C3EE  5C01               	subwf	btemp^0,w,c
 14138  01C3F0  0EFD               	movlw	-3
 14139  01C3F2  006F FF8C  F001    	movff	plusw1,btemp
 14140  01C3F8  5175               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 14141  01C3FA  5801               	subwfb	btemp^0,w,c
 14142  01C3FC  0EFE               	movlw	-2
 14143  01C3FE  006F FF8C  F001    	movff	plusw1,btemp
 14144  01C404  5176               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 14145  01C406  5801               	subwfb	btemp^0,w,c
 14146  01C408  0EFF               	movlw	-1
 14147  01C40A  006F FF8C  F001    	movff	plusw1,btemp
 14148  01C410  5177               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 14149  01C412  5801               	subwfb	btemp^0,w,c
 14150  01C414  B0D8               	btfsc	status,0,c
 14151  01C416  D7DD               	goto	l1494
 14152                           
 14153                           ; BSR set to: 0
 14154                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 14155  01C418  52E5               	movf	postdec1,f,c
 14156  01C41A  52E5               	movf	postdec1,f,c
 14157  01C41C  52E5               	movf	postdec1,f,c
 14158  01C41E  52E5               	movf	postdec1,f,c
 14159  01C420  0012               	return		;funcret
 14160  01C422                     __end_of_wdtdelay:
 14161                           	opt callstack 0
 14162                           
 14163 ;; *************** function _send_lcd_data_dma *****************
 14164 ;; Defined at:
 14165 ;;		line 182 in file "eadog.c"
 14166 ;; Parameters:    Size  Location     Type
 14167 ;;  strPtr          1  [STACK] const unsigned char 
 14168 ;; Auto vars:     Size  Location     Type
 14169 ;;		None
 14170 ;; Return value:  Size  Location     Type
 14171 ;;                  1  [STACK] void 
 14172 ;; Registers used:
 14173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14174 ;; Tracked objects:
 14175 ;;		On entry : 0/0
 14176 ;;		On exit  : 3F/3B
 14177 ;;		Unchanged: 0/0
 14178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14183 ;;Total ram usage:        0 bytes
 14184 ;; Hardware stack levels used:    1
 14185 ;; Hardware stack levels required when called:   24
 14186 ;; This function calls:
 14187 ;;		_printf
 14188 ;;		_ringBufS_flush
 14189 ;;		_start_lcd
 14190 ;;		_wait_lcd_set
 14191 ;; This function is called by:
 14192 ;;		_send_lcd_cmd_dma
 14193 ;;		_eaDogM_WriteStringAtPos
 14194 ;; This function uses a reentrant model
 14195 ;;
 14196                           
 14197                           	psect	text57
 14198  01C5BC                     __ptext57:
 14199                           	opt callstack 0
 14200  01C5BC                     _send_lcd_data_dma:
 14201                           	opt callstack 4
 14202                           
 14203                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 14204                           
 14205                           ; BSR set to: 0
 14206                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14207                           ;incstack = 0
 14208  01C5BC  ECEB  F0E9         	call	_wait_lcd_set	;wreg free
 14209                           
 14210                           ; BSR set to: 1
 14211                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 14212  01C5C0  0E00               	movlw	0
 14213  01C5C2  6EE6               	movwf	postinc1,c
 14214  01C5C4  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 14215  01C5CA  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 14216  01C5D0  EC9E  F0DC         	call	_ringBufS_flush	;wreg free
 14217  01C5D4  94BC               	bcf	188,2,c	;volatile
 14218                           
 14219                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 14220  01C5D6  013B               	movlb	59	; () banked
 14221  01C5D8  9FFC               	bcf	252,7,b	;volatile
 14222                           
 14223                           ; BSR set to: 59
 14224                           ;eadog.c: 189:  DMA1SSZ = 1;
 14225  01C5DA  0E00               	movlw	0
 14226  01C5DC  6FF8               	movwf	248,b	;volatile
 14227  01C5DE  0E01               	movlw	1
 14228  01C5E0  6FF7               	movwf	247,b	;volatile
 14229                           
 14230                           ; BSR set to: 59
 14231                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 14232  01C5E2  8FFC               	bsf	252,7,b	;volatile
 14233                           
 14234                           ; BSR set to: 59
 14235                           ;eadog.c: 191:  printf("%c", strPtr);
 14236                           ;stkvar	_strPtr @ sp[(0)+-1]
 14237  01C5E4  0EFF               	movlw	-1
 14238  01C5E6  50E3               	movf	plusw1,w,c
 14239  01C5E8  6EE6               	movwf	postinc1,c
 14240  01C5EA  0E00               	movlw	0
 14241  01C5EC  6EE6               	movwf	postinc1,c
 14242  01C5EE  0EF9               	movlw	low STR_61
 14243  01C5F0  6EE6               	movwf	postinc1,c
 14244  01C5F2  0EFF               	movlw	high STR_61
 14245  01C5F4  6EE6               	movwf	postinc1,c
 14246  01C5F6  0E04               	movlw	4
 14247  01C5F8  6EE6               	movwf	postinc1,c
 14248  01C5FA  EC25  F0E1         	call	_printf	;wreg free
 14249                           
 14250                           ; BSR set to: 0
 14251                           ;eadog.c: 192:  start_lcd();
 14252  01C5FE  ECEE  F0E9         	call	_start_lcd	;wreg free
 14253                           
 14254                           ; BSR set to: 59
 14255                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 14256  01C602  52E5               	movf	postdec1,f,c
 14257  01C604  0012               	return		;funcret
 14258  01C606                     __end_of_send_lcd_data_dma:
 14259                           	opt callstack 0
 14260                           
 14261 ;; *************** function _eaDogM_WriteString *****************
 14262 ;; Defined at:
 14263 ;;		line 151 in file "eadog.c"
 14264 ;; Parameters:    Size  Location     Type
 14265 ;;  strPtr          2  [STACK] PTR unsigned char 
 14266 ;;		 -> D.lcd(480), D(482), V(192), 
 14267 ;; Auto vars:     Size  Location     Type
 14268 ;;		None
 14269 ;; Return value:  Size  Location     Type
 14270 ;;                  1  [STACK] void 
 14271 ;; Registers used:
 14272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14273 ;; Tracked objects:
 14274 ;;		On entry : 3F/0
 14275 ;;		On exit  : 3F/3B
 14276 ;;		Unchanged: 0/0
 14277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14282 ;;Total ram usage:        0 bytes
 14283 ;; Hardware stack levels used:    1
 14284 ;; Hardware stack levels required when called:   24
 14285 ;; This function calls:
 14286 ;;		_printf
 14287 ;;		_ringBufS_flush
 14288 ;;		_start_lcd
 14289 ;;		_strlen
 14290 ;;		_wait_lcd_set
 14291 ;; This function is called by:
 14292 ;;		_eaDogM_WriteStringAtPos
 14293 ;; This function uses a reentrant model
 14294 ;;
 14295                           
 14296                           	psect	text58
 14297  01B75C                     __ptext58:
 14298                           	opt callstack 0
 14299  01B75C                     _eaDogM_WriteString:
 14300                           	opt callstack 4
 14301                           
 14302                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 14303                           
 14304                           ; BSR set to: 59
 14305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14306                           ;incstack = 0
 14307  01B75C  ECEB  F0E9         	call	_wait_lcd_set	;wreg free
 14308                           
 14309                           ; BSR set to: 1
 14310                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 14311  01B760  0E00               	movlw	0
 14312  01B762  6EE6               	movwf	postinc1,c
 14313  01B764  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 14314  01B76A  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 14315  01B770  EC9E  F0DC         	call	_ringBufS_flush	;wreg free
 14316  01B774  94BC               	bcf	188,2,c	;volatile
 14317                           
 14318                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 14319                           ;stkvar	_strPtr @ sp[(0)+-2]
 14320  01B776  0EFE               	movlw	-2
 14321  01B778  006F FF8F FFE6     	movff	plusw1,postinc1
 14322  01B77E  006F FF8F FFE6     	movff	plusw1,postinc1
 14323  01B784  EC01  F0DC         	call	_strlen	;wreg free
 14324  01B788  5002               	movf	(btemp+1)^0,w,c
 14325  01B78A  E104               	bnz	u13220
 14326  01B78C  0E41               	movlw	65
 14327  01B78E  5C01               	subwf	btemp^0,w,c
 14328  01B790  A0D8               	btfss	status,0,c
 14329  01B792  D010               	goto	l13888
 14330  01B794                     u13220:
 14331                           
 14332                           ;stkvar	_strPtr @ sp[(0)+-2]
 14333  01B794  0EFE               	movlw	-2
 14334  01B796  006F FF8C  F00B    	movff	plusw1,btemp+10
 14335  01B79C  0EFF               	movlw	-1
 14336  01B79E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14337  01B7A4  0E40               	movlw	64
 14338  01B7A6  240B               	addwf	(btemp+10)^0,w,c
 14339  01B7A8  6ED9               	movwf	fsr2l,c
 14340  01B7AA  0E00               	movlw	0
 14341  01B7AC  200C               	addwfc	(btemp+11)^0,w,c
 14342  01B7AE  6EDA               	movwf	fsr2h,c
 14343  01B7B0  0E00               	movlw	0
 14344  01B7B2  6EDF               	movwf	indf2,c
 14345  01B7B4                     l13888:
 14346                           
 14347                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 14348  01B7B4  013B               	movlb	59	; () banked
 14349  01B7B6  9FFC               	bcf	252,7,b	;volatile
 14350                           
 14351                           ; BSR set to: 59
 14352                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 14353                           ;stkvar	_strPtr @ sp[(0)+-2]
 14354  01B7B8  0EFE               	movlw	-2
 14355  01B7BA  006F FF8F FFE6     	movff	plusw1,postinc1
 14356  01B7C0  006F FF8F FFE6     	movff	plusw1,postinc1
 14357  01B7C6  EC01  F0DC         	call	_strlen	;wreg free
 14358  01B7CA  0060  F007  FBF7   	movff	btemp,15351	;volatile
 14359  01B7D0  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 14360                           
 14361                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 14362  01B7D6  013B               	movlb	59	; () banked
 14363  01B7D8  8FFC               	bsf	252,7,b	;volatile
 14364                           
 14365                           ; BSR set to: 59
 14366                           ;eadog.c: 161:  printf("%s", strPtr);
 14367                           ;stkvar	_strPtr @ sp[(0)+-2]
 14368  01B7DA  0EFE               	movlw	-2
 14369  01B7DC  006F FF8F FFE6     	movff	plusw1,postinc1
 14370  01B7E2  006F FF8F FFE6     	movff	plusw1,postinc1
 14371  01B7E8  0EFC               	movlw	low STR_60
 14372  01B7EA  6EE6               	movwf	postinc1,c
 14373  01B7EC  0EFF               	movlw	high STR_60
 14374  01B7EE  6EE6               	movwf	postinc1,c
 14375  01B7F0  0E04               	movlw	4
 14376  01B7F2  6EE6               	movwf	postinc1,c
 14377  01B7F4  EC25  F0E1         	call	_printf	;wreg free
 14378                           
 14379                           ; BSR set to: 0
 14380                           ;eadog.c: 162:  start_lcd();
 14381  01B7F8  ECEE  F0E9         	call	_start_lcd	;wreg free
 14382                           
 14383                           ; BSR set to: 59
 14384                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 14385  01B7FC  52E5               	movf	postdec1,f,c
 14386  01B7FE  52E5               	movf	postdec1,f,c
 14387  01B800  0012               	return		;funcret
 14388  01B802                     __end_of_eaDogM_WriteString:
 14389                           	opt callstack 0
 14390                           
 14391 ;; *************** function _wait_lcd_set *****************
 14392 ;; Defined at:
 14393 ;;		line 434 in file "eadog.c"
 14394 ;; Parameters:    Size  Location     Type
 14395 ;;		None
 14396 ;; Auto vars:     Size  Location     Type
 14397 ;;		None
 14398 ;; Return value:  Size  Location     Type
 14399 ;;                  1  [STACK] void 
 14400 ;; Registers used:
 14401 ;;		None
 14402 ;; Tracked objects:
 14403 ;;		On entry : 0/0
 14404 ;;		On exit  : 3F/1
 14405 ;;		Unchanged: 0/0
 14406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14411 ;;Total ram usage:        0 bytes
 14412 ;; Hardware stack levels used:    1
 14413 ;; Hardware stack levels required when called:   15
 14414 ;; This function calls:
 14415 ;;		Nothing
 14416 ;; This function is called by:
 14417 ;;		_eaDogM_WriteString
 14418 ;;		_send_lcd_data_dma
 14419 ;; This function uses a reentrant model
 14420 ;;
 14421                           
 14422                           	psect	text59
 14423  01D3D6                     __ptext59:
 14424                           	opt callstack 0
 14425  01D3D6                     _wait_lcd_set:
 14426                           	opt callstack 12
 14427                           
 14428                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 14429                           
 14430                           ; BSR set to: 59
 14431                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14432                           ;incstack = 0
 14433  01D3D6  0101               	movlb	1	; () banked
 14434  01D3D8  87D0               	bsf	_spi_link& (0+255),3,b	;volatile
 14435                           
 14436                           ; BSR set to: 1
 14437                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 14438  01D3DA  0012               	return		;funcret
 14439  01D3DC                     __end_of_wait_lcd_set:
 14440                           	opt callstack 0
 14441                           
 14442 ;; *************** function _start_lcd *****************
 14443 ;; Defined at:
 14444 ;;		line 429 in file "eadog.c"
 14445 ;; Parameters:    Size  Location     Type
 14446 ;;		None
 14447 ;; Auto vars:     Size  Location     Type
 14448 ;;		None
 14449 ;; Return value:  Size  Location     Type
 14450 ;;                  1  [STACK] void 
 14451 ;; Registers used:
 14452 ;;		None
 14453 ;; Tracked objects:
 14454 ;;		On entry : 3F/0
 14455 ;;		On exit  : 3F/3B
 14456 ;;		Unchanged: 0/0
 14457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14462 ;;Total ram usage:        0 bytes
 14463 ;; Hardware stack levels used:    1
 14464 ;; Hardware stack levels required when called:   15
 14465 ;; This function calls:
 14466 ;;		Nothing
 14467 ;; This function is called by:
 14468 ;;		_eaDogM_WriteString
 14469 ;;		_send_lcd_data_dma
 14470 ;; This function uses a reentrant model
 14471 ;;
 14472                           
 14473                           	psect	text60
 14474  01D3DC                     __ptext60:
 14475                           	opt callstack 0
 14476  01D3DC                     _start_lcd:
 14477                           	opt callstack 12
 14478                           
 14479                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 14480                           
 14481                           ; BSR set to: 1
 14482                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14483                           ;incstack = 0
 14484  01D3DC  013B               	movlb	59	; () banked
 14485  01D3DE  8DFC               	bsf	252,6,b	;volatile
 14486                           
 14487                           ; BSR set to: 59
 14488                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 14489  01D3E0  0012               	return		;funcret
 14490  01D3E2                     __end_of_start_lcd:
 14491                           	opt callstack 0
 14492                           
 14493 ;; *************** function _ringBufS_flush *****************
 14494 ;; Defined at:
 14495 ;;		line 76 in file "ringbufs.c"
 14496 ;; Parameters:    Size  Location     Type
 14497 ;;  _this           2  [STACK] PTR struct ringBufS_t
 14498 ;;		 -> ring_buf1(67), 
 14499 ;;  clearBuffer     1  [STACK] const char 
 14500 ;; Auto vars:     Size  Location     Type
 14501 ;;		None
 14502 ;; Return value:  Size  Location     Type
 14503 ;;                  1  [STACK] void 
 14504 ;; Registers used:
 14505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 14506 ;; Tracked objects:
 14507 ;;		On entry : 3F/1
 14508 ;;		On exit  : 0/0
 14509 ;;		Unchanged: 0/0
 14510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14515 ;;Total ram usage:        0 bytes
 14516 ;; Hardware stack levels used:    1
 14517 ;; Hardware stack levels required when called:   16
 14518 ;; This function calls:
 14519 ;;		_memset
 14520 ;; This function is called by:
 14521 ;;		_eaDogM_WriteString
 14522 ;;		_send_lcd_data_dma
 14523 ;; This function uses a reentrant model
 14524 ;;
 14525                           
 14526                           	psect	text61
 14527  01B93C                     __ptext61:
 14528                           	opt callstack 0
 14529  01B93C                     _ringBufS_flush:
 14530                           	opt callstack 11
 14531                           
 14532                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 14533                           ;stkvar	__this @ sp[(0)+-2]
 14534                           
 14535                           ; BSR set to: 59
 14536                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14537                           ;incstack = 0
 14538  01B93C  0EFE               	movlw	-2
 14539  01B93E  006F FF8C  F00B    	movff	plusw1,btemp+10
 14540  01B944  0EFF               	movlw	-1
 14541  01B946  006F FF8C  F00C    	movff	plusw1,btemp+11
 14542  01B94C  0E42               	movlw	66
 14543  01B94E  240B               	addwf	(btemp+10)^0,w,c
 14544  01B950  6ED9               	movwf	fsr2l,c
 14545  01B952  0E00               	movlw	0
 14546  01B954  200C               	addwfc	(btemp+11)^0,w,c
 14547  01B956  6EDA               	movwf	fsr2h,c
 14548  01B958  0E00               	movlw	0
 14549  01B95A  6EDF               	movwf	indf2,c
 14550                           
 14551                           ;ringbufs.c: 79:  _this->head = 0;
 14552                           ;stkvar	__this @ sp[(0)+-2]
 14553  01B95C  0EFE               	movlw	-2
 14554  01B95E  006F FF8C  F00B    	movff	plusw1,btemp+10
 14555  01B964  0EFF               	movlw	-1
 14556  01B966  006F FF8C  F00C    	movff	plusw1,btemp+11
 14557  01B96C  0E40               	movlw	64
 14558  01B96E  240B               	addwf	(btemp+10)^0,w,c
 14559  01B970  6ED9               	movwf	fsr2l,c
 14560  01B972  0E00               	movlw	0
 14561  01B974  200C               	addwfc	(btemp+11)^0,w,c
 14562  01B976  6EDA               	movwf	fsr2h,c
 14563  01B978  0E00               	movlw	0
 14564  01B97A  6EDF               	movwf	indf2,c
 14565                           
 14566                           ;ringbufs.c: 80:  _this->tail = 0;
 14567                           ;stkvar	__this @ sp[(0)+-2]
 14568  01B97C  0EFE               	movlw	-2
 14569  01B97E  006F FF8C  F00B    	movff	plusw1,btemp+10
 14570  01B984  0EFF               	movlw	-1
 14571  01B986  006F FF8C  F00C    	movff	plusw1,btemp+11
 14572  01B98C  0E41               	movlw	65
 14573  01B98E  240B               	addwf	(btemp+10)^0,w,c
 14574  01B990  6ED9               	movwf	fsr2l,c
 14575  01B992  0E00               	movlw	0
 14576  01B994  200C               	addwfc	(btemp+11)^0,w,c
 14577  01B996  6EDA               	movwf	fsr2h,c
 14578  01B998  0E00               	movlw	0
 14579  01B99A  6EDF               	movwf	indf2,c
 14580                           
 14581                           ;ringbufs.c: 81:  if (clearBuffer) {
 14582                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 14583  01B99C  0EFD               	movlw	-3
 14584  01B99E  50E3               	movf	plusw1,w,c
 14585  01B9A0  B4D8               	btfsc	status,2,c
 14586  01B9A2  D011               	goto	l1626
 14587                           
 14588                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 14589  01B9A4  0E40               	movlw	64
 14590  01B9A6  6EE6               	movwf	postinc1,c
 14591  01B9A8  0E00               	movlw	0
 14592  01B9AA  6EE6               	movwf	postinc1,c
 14593  01B9AC  0E00               	movlw	0
 14594  01B9AE  6EE6               	movwf	postinc1,c
 14595  01B9B0  0E00               	movlw	0
 14596  01B9B2  6EE6               	movwf	postinc1,c
 14597                           
 14598                           ;stkvar	__this @ sp[(-4)+-2]
 14599  01B9B4  0EFA               	movlw	-6
 14600  01B9B6  006F FF8F FFE6     	movff	plusw1,postinc1
 14601  01B9BC  006F FF8F FFE6     	movff	plusw1,postinc1
 14602  01B9C2  EC07  F0BA         	call	_memset	;wreg free
 14603  01B9C6                     l1626:
 14604                           
 14605                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 14606  01B9C6  52E5               	movf	postdec1,f,c
 14607  01B9C8  52E5               	movf	postdec1,f,c
 14608  01B9CA  52E5               	movf	postdec1,f,c
 14609  01B9CC  0012               	return		;funcret
 14610  01B9CE                     __end_of_ringBufS_flush:
 14611                           	opt callstack 0
 14612                           
 14613 ;; *************** function _memset *****************
 14614 ;; Defined at:
 14615 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 14616 ;; Parameters:    Size  Location     Type
 14617 ;;  dest            2  [STACK] PTR void 
 14618 ;;		 -> ring_buf2(67), ring_buf1(67), 
 14619 ;;  c               2  [STACK] int 
 14620 ;;  n               2  [STACK] unsigned int 
 14621 ;; Auto vars:     Size  Location     Type
 14622 ;;  s               2  [STACK] PTR unsigned char 
 14623 ;;		 -> ring_buf2(67), ring_buf1(67), 
 14624 ;;  k               2  [STACK] unsigned int 
 14625 ;; Return value:  Size  Location     Type
 14626 ;;                  2  [STACK] PTR void 
 14627 ;; Registers used:
 14628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 14629 ;; Tracked objects:
 14630 ;;		On entry : 0/1
 14631 ;;		On exit  : 0/0
 14632 ;;		Unchanged: 0/0
 14633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14638 ;;Total ram usage:        0 bytes
 14639 ;; Hardware stack levels used:    1
 14640 ;; Hardware stack levels required when called:   15
 14641 ;; This function calls:
 14642 ;;		Nothing
 14643 ;; This function is called by:
 14644 ;;		_ringBufS_init
 14645 ;;		_ringBufS_flush
 14646 ;; This function uses a reentrant model
 14647 ;;
 14648                           
 14649                           	psect	text62
 14650  01740E                     __ptext62:
 14651                           	opt callstack 0
 14652  01740E                     _memset:
 14653                           	opt callstack 0
 14654                           
 14655                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14656  01740E  52E6               	movf	postinc1,f,c
 14657  017410  52E6               	movf	postinc1,f,c
 14658  017412  52E6               	movf	postinc1,f,c
 14659  017414  52E6               	movf	postinc1,f,c
 14660                           
 14661                           ;stkvar	_dest @ sp[(-4)+-2]
 14662                           
 14663                           ;incstack = 0
 14664  017416  0EFA               	movlw	-6
 14665  017418  006F FF8C  F00B    	movff	plusw1,btemp+10
 14666  01741E  0EFB               	movlw	-5
 14667  017420  006F FF8C  F00C    	movff	plusw1,btemp+11
 14668                           
 14669                           ;stkvar	_s @ sp[(-4)+0]
 14670  017426  0EFD               	movlw	-3
 14671  017428  0060  F033  FFE3   	movff	btemp+11,plusw1
 14672  01742E  0EFC               	movlw	-4
 14673  017430  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14674                           
 14675                           ;stkvar	_n @ sp[(-4)+-6]
 14676  017436  0EF6               	movlw	-10
 14677  017438  006F FF8C  F001    	movff	plusw1,btemp
 14678  01743E  0EF7               	movlw	-9
 14679  017440  50E3               	movf	plusw1,w,c
 14680  017442  1001               	iorwf	btemp^0,w,c
 14681  017444  B4D8               	btfsc	status,2,c
 14682  017446  D154               	goto	u11770
 14683                           
 14684                           ;stkvar	_c @ sp[(-4)+-4]
 14685                           ;stkvar	_s @ sp[(-4)+0]
 14686  017448  0EFC               	movlw	-4
 14687  01744A  006F FF8F FFD9     	movff	plusw1,fsr2l
 14688  017450  0EFD               	movlw	-3
 14689  017452  006F FF8F FFDA     	movff	plusw1,fsr2h
 14690  017458  0EF8               	movlw	-8
 14691  01745A  006F FF8F FFDF     	movff	plusw1,indf2
 14692                           
 14693                           ;stkvar	_c @ sp[(-4)+-4]
 14694                           ;stkvar	_n @ sp[(-4)+-6]
 14695                           ;stkvar	_s @ sp[(-4)+0]
 14696  017460  0EFC               	movlw	-4
 14697  017462  006F FF8C  F00B    	movff	plusw1,btemp+10
 14698  017468  0EFD               	movlw	-3
 14699  01746A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14700  017470  0EF6               	movlw	-10
 14701  017472  50E3               	movf	plusw1,w,c
 14702  017474  260B               	addwf	(btemp+10)^0,f,c
 14703  017476  0EF7               	movlw	-9
 14704  017478  50E3               	movf	plusw1,w,c
 14705  01747A  220C               	addwfc	(btemp+11)^0,f,c
 14706  01747C  0EFF               	movlw	255
 14707  01747E  240B               	addwf	(btemp+10)^0,w,c
 14708  017480  6ED9               	movwf	fsr2l,c
 14709  017482  0EFF               	movlw	255
 14710  017484  200C               	addwfc	(btemp+11)^0,w,c
 14711  017486  6EDA               	movwf	fsr2h,c
 14712  017488  0EF8               	movlw	-8
 14713  01748A  006F FF8F FFDF     	movff	plusw1,indf2
 14714                           
 14715                           ;stkvar	_n @ sp[(-4)+-6]
 14716  017490  0EF7               	movlw	-9
 14717  017492  50E3               	movf	plusw1,w,c
 14718  017494  E108               	bnz	l13040
 14719  017496  0EF6               	movlw	-10
 14720  017498  006F FF8C  F001    	movff	plusw1,btemp
 14721  01749E  0E03               	movlw	3
 14722  0174A0  5E01               	subwf	btemp^0,f,c
 14723  0174A2  A0D8               	btfss	status,0,c
 14724  0174A4  D125               	goto	u11770
 14725  0174A6                     l13040:
 14726                           
 14727                           ;stkvar	_c @ sp[(-4)+-4]
 14728                           ;stkvar	_s @ sp[(-4)+0]
 14729  0174A6  0EFC               	movlw	-4
 14730  0174A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 14731  0174AE  0EFD               	movlw	-3
 14732  0174B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 14733  0174B6  0E01               	movlw	1
 14734  0174B8  240B               	addwf	(btemp+10)^0,w,c
 14735  0174BA  6ED9               	movwf	fsr2l,c
 14736  0174BC  0E00               	movlw	0
 14737  0174BE  200C               	addwfc	(btemp+11)^0,w,c
 14738  0174C0  6EDA               	movwf	fsr2h,c
 14739  0174C2  0EF8               	movlw	-8
 14740  0174C4  006F FF8F FFDF     	movff	plusw1,indf2
 14741                           
 14742                           ;stkvar	_c @ sp[(-4)+-4]
 14743                           ;stkvar	_s @ sp[(-4)+0]
 14744  0174CA  0EFC               	movlw	-4
 14745  0174CC  006F FF8C  F00B    	movff	plusw1,btemp+10
 14746  0174D2  0EFD               	movlw	-3
 14747  0174D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 14748  0174DA  0E02               	movlw	2
 14749  0174DC  240B               	addwf	(btemp+10)^0,w,c
 14750  0174DE  6ED9               	movwf	fsr2l,c
 14751  0174E0  0E00               	movlw	0
 14752  0174E2  200C               	addwfc	(btemp+11)^0,w,c
 14753  0174E4  6EDA               	movwf	fsr2h,c
 14754  0174E6  0EF8               	movlw	-8
 14755  0174E8  006F FF8F FFDF     	movff	plusw1,indf2
 14756                           
 14757                           ;stkvar	_c @ sp[(-4)+-4]
 14758                           ;stkvar	_n @ sp[(-4)+-6]
 14759                           ;stkvar	_s @ sp[(-4)+0]
 14760  0174EE  0EFC               	movlw	-4
 14761  0174F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 14762  0174F6  0EFD               	movlw	-3
 14763  0174F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 14764  0174FE  0EF6               	movlw	-10
 14765  017500  50E3               	movf	plusw1,w,c
 14766  017502  260B               	addwf	(btemp+10)^0,f,c
 14767  017504  0EF7               	movlw	-9
 14768  017506  50E3               	movf	plusw1,w,c
 14769  017508  220C               	addwfc	(btemp+11)^0,f,c
 14770  01750A  0EFE               	movlw	254
 14771  01750C  240B               	addwf	(btemp+10)^0,w,c
 14772  01750E  6ED9               	movwf	fsr2l,c
 14773  017510  0EFF               	movlw	255
 14774  017512  200C               	addwfc	(btemp+11)^0,w,c
 14775  017514  6EDA               	movwf	fsr2h,c
 14776  017516  0EF8               	movlw	-8
 14777  017518  006F FF8F FFDF     	movff	plusw1,indf2
 14778                           
 14779                           ;stkvar	_c @ sp[(-4)+-4]
 14780                           ;stkvar	_n @ sp[(-4)+-6]
 14781                           ;stkvar	_s @ sp[(-4)+0]
 14782  01751E  0EFC               	movlw	-4
 14783  017520  006F FF8C  F00B    	movff	plusw1,btemp+10
 14784  017526  0EFD               	movlw	-3
 14785  017528  006F FF8C  F00C    	movff	plusw1,btemp+11
 14786  01752E  0EF6               	movlw	-10
 14787  017530  50E3               	movf	plusw1,w,c
 14788  017532  260B               	addwf	(btemp+10)^0,f,c
 14789  017534  0EF7               	movlw	-9
 14790  017536  50E3               	movf	plusw1,w,c
 14791  017538  220C               	addwfc	(btemp+11)^0,f,c
 14792  01753A  0EFD               	movlw	253
 14793  01753C  240B               	addwf	(btemp+10)^0,w,c
 14794  01753E  6ED9               	movwf	fsr2l,c
 14795  017540  0EFF               	movlw	255
 14796  017542  200C               	addwfc	(btemp+11)^0,w,c
 14797  017544  6EDA               	movwf	fsr2h,c
 14798  017546  0EF8               	movlw	-8
 14799  017548  006F FF8F FFDF     	movff	plusw1,indf2
 14800                           
 14801                           ;stkvar	_n @ sp[(-4)+-6]
 14802  01754E  0EF7               	movlw	-9
 14803  017550  50E3               	movf	plusw1,w,c
 14804  017552  E108               	bnz	l13046
 14805  017554  0EF6               	movlw	-10
 14806  017556  006F FF8C  F001    	movff	plusw1,btemp
 14807  01755C  0E07               	movlw	7
 14808  01755E  5E01               	subwf	btemp^0,f,c
 14809  017560  A0D8               	btfss	status,0,c
 14810  017562  D0C6               	goto	u11770
 14811  017564                     l13046:
 14812                           
 14813                           ;stkvar	_c @ sp[(-4)+-4]
 14814                           ;stkvar	_s @ sp[(-4)+0]
 14815  017564  0EFC               	movlw	-4
 14816  017566  006F FF8C  F00B    	movff	plusw1,btemp+10
 14817  01756C  0EFD               	movlw	-3
 14818  01756E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14819  017574  0E03               	movlw	3
 14820  017576  240B               	addwf	(btemp+10)^0,w,c
 14821  017578  6ED9               	movwf	fsr2l,c
 14822  01757A  0E00               	movlw	0
 14823  01757C  200C               	addwfc	(btemp+11)^0,w,c
 14824  01757E  6EDA               	movwf	fsr2h,c
 14825  017580  0EF8               	movlw	-8
 14826  017582  006F FF8F FFDF     	movff	plusw1,indf2
 14827                           
 14828                           ;stkvar	_c @ sp[(-4)+-4]
 14829                           ;stkvar	_n @ sp[(-4)+-6]
 14830                           ;stkvar	_s @ sp[(-4)+0]
 14831  017588  0EFC               	movlw	-4
 14832  01758A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14833  017590  0EFD               	movlw	-3
 14834  017592  006F FF8C  F00C    	movff	plusw1,btemp+11
 14835  017598  0EF6               	movlw	-10
 14836  01759A  50E3               	movf	plusw1,w,c
 14837  01759C  260B               	addwf	(btemp+10)^0,f,c
 14838  01759E  0EF7               	movlw	-9
 14839  0175A0  50E3               	movf	plusw1,w,c
 14840  0175A2  220C               	addwfc	(btemp+11)^0,f,c
 14841  0175A4  0EFC               	movlw	252
 14842  0175A6  240B               	addwf	(btemp+10)^0,w,c
 14843  0175A8  6ED9               	movwf	fsr2l,c
 14844  0175AA  0EFF               	movlw	255
 14845  0175AC  200C               	addwfc	(btemp+11)^0,w,c
 14846  0175AE  6EDA               	movwf	fsr2h,c
 14847  0175B0  0EF8               	movlw	-8
 14848  0175B2  006F FF8F FFDF     	movff	plusw1,indf2
 14849                           
 14850                           ;stkvar	_n @ sp[(-4)+-6]
 14851  0175B8  0EF7               	movlw	-9
 14852  0175BA  50E3               	movf	plusw1,w,c
 14853  0175BC  E108               	bnz	l13052
 14854  0175BE  0EF6               	movlw	-10
 14855  0175C0  006F FF8C  F001    	movff	plusw1,btemp
 14856  0175C6  0E09               	movlw	9
 14857  0175C8  5E01               	subwf	btemp^0,f,c
 14858  0175CA  A0D8               	btfss	status,0,c
 14859  0175CC  D091               	goto	u11770
 14860  0175CE                     l13052:
 14861                           
 14862                           ;stkvar	_s @ sp[(-4)+0]
 14863  0175CE  0EFC               	movlw	-4
 14864  0175D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 14865  0175D6  1E0B               	comf	(btemp+10)^0,f,c
 14866  0175D8  0EFD               	movlw	-3
 14867  0175DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 14868  0175E0  1E0C               	comf	(btemp+11)^0,f,c
 14869  0175E2  2A0B               	incf	(btemp+10)^0,f,c
 14870  0175E4  B4D8               	btfsc	status,2,c
 14871  0175E6  2A0C               	incf	(btemp+11)^0,f,c
 14872  0175E8  0E03               	movlw	3
 14873  0175EA  160B               	andwf	(btemp+10)^0,f,c
 14874  0175EC  0E00               	movlw	0
 14875  0175EE  160C               	andwf	(btemp+11)^0,f,c
 14876                           
 14877                           ;stkvar	_k @ sp[(-4)+2]
 14878  0175F0  0EFE               	movlw	-2
 14879  0175F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14880  0175F8  0EFF               	movlw	-1
 14881  0175FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14882                           
 14883                           ;stkvar	_k @ sp[(-4)+2]
 14884                           ;stkvar	_s @ sp[(-4)+0]
 14885  017600  0EFC               	movlw	-4
 14886  017602  50E3               	movf	plusw1,w,c
 14887  017604  6E01               	movwf	btemp^0,c
 14888  017606  0EFE               	movlw	-2
 14889  017608  50E3               	movf	plusw1,w,c
 14890  01760A  2601               	addwf	btemp^0,f,c
 14891  01760C  0EFC               	movlw	-4
 14892  01760E  0060  F007  FFE3   	movff	btemp,plusw1
 14893  017614  0EFD               	movlw	-3
 14894  017616  50E3               	movf	plusw1,w,c
 14895  017618  6E01               	movwf	btemp^0,c
 14896  01761A  0EFF               	movlw	-1
 14897  01761C  50E3               	movf	plusw1,w,c
 14898  01761E  2201               	addwfc	btemp^0,f,c
 14899  017620  0EFD               	movlw	-3
 14900  017622  0060  F007  FFE3   	movff	btemp,plusw1
 14901                           
 14902                           ;stkvar	_k @ sp[(-4)+2]
 14903                           ;stkvar	_n @ sp[(-4)+-6]
 14904  017628  0EF6               	movlw	-10
 14905  01762A  50E3               	movf	plusw1,w,c
 14906  01762C  6E01               	movwf	btemp^0,c
 14907  01762E  0EFE               	movlw	-2
 14908  017630  50E3               	movf	plusw1,w,c
 14909  017632  5E01               	subwf	btemp^0,f,c
 14910  017634  0EF6               	movlw	-10
 14911  017636  0060  F007  FFE3   	movff	btemp,plusw1
 14912  01763C  0EF7               	movlw	-9
 14913  01763E  50E3               	movf	plusw1,w,c
 14914  017640  6E01               	movwf	btemp^0,c
 14915  017642  0EFF               	movlw	-1
 14916  017644  50E3               	movf	plusw1,w,c
 14917  017646  5A01               	subwfb	btemp^0,f,c
 14918  017648  0EF7               	movlw	-9
 14919  01764A  0060  F007  FFE3   	movff	btemp,plusw1
 14920  017650  0EFC               	movlw	252
 14921  017652  6E0B               	movwf	(btemp+10)^0,c
 14922  017654  0EFF               	movlw	255
 14923  017656  6E0C               	movwf	(btemp+11)^0,c
 14924                           
 14925                           ;stkvar	_n @ sp[(-4)+-6]
 14926  017658  0EF6               	movlw	-10
 14927  01765A  006F FF8C  F001    	movff	plusw1,btemp
 14928  017660  500B               	movf	(btemp+10)^0,w,c
 14929  017662  1601               	andwf	btemp^0,f,c
 14930  017664  0EF6               	movlw	-10
 14931  017666  0060  F007  FFE3   	movff	btemp,plusw1
 14932  01766C  0EF7               	movlw	-9
 14933  01766E  006F FF8C  F001    	movff	plusw1,btemp
 14934  017674  500C               	movf	(btemp+11)^0,w,c
 14935  017676  1601               	andwf	btemp^0,f,c
 14936  017678  0EF7               	movlw	-9
 14937  01767A  D02E               	goto	L14
 14938  01767C                     l13060:
 14939                           
 14940                           ;stkvar	_c @ sp[(-4)+-4]
 14941                           ;stkvar	_s @ sp[(-4)+0]
 14942  01767C  0EFC               	movlw	-4
 14943  01767E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14944  017684  0EFD               	movlw	-3
 14945  017686  006F FF8F FFDA     	movff	plusw1,fsr2h
 14946  01768C  0EF8               	movlw	-8
 14947  01768E  006F FF8F FFDF     	movff	plusw1,indf2
 14948                           
 14949                           ;stkvar	_n @ sp[(-4)+-6]
 14950  017694  0EF6               	movlw	-10
 14951  017696  006F FF8C  F001    	movff	plusw1,btemp
 14952  01769C  0E01               	movlw	1
 14953  01769E  5E01               	subwf	btemp^0,f,c
 14954  0176A0  0EF6               	movlw	-10
 14955  0176A2  0060  F007  FFE3   	movff	btemp,plusw1
 14956  0176A8  0EF7               	movlw	-9
 14957  0176AA  006F FF8C  F001    	movff	plusw1,btemp
 14958  0176B0  0E00               	movlw	0
 14959  0176B2  5A01               	subwfb	btemp^0,f,c
 14960  0176B4  0EF7               	movlw	-9
 14961  0176B6  0060  F007  FFE3   	movff	btemp,plusw1
 14962                           
 14963                           ;stkvar	_s @ sp[(-4)+0]
 14964  0176BC  0EFC               	movlw	-4
 14965  0176BE  50E3               	movf	plusw1,w,c
 14966  0176C0  0F01               	addlw	1
 14967  0176C2  6E01               	movwf	btemp^0,c
 14968  0176C4  0EFC               	movlw	-4
 14969  0176C6  0060  F007  FFE3   	movff	btemp,plusw1
 14970  0176CC  6A01               	clrf	btemp^0,c
 14971  0176CE  0EFD               	movlw	-3
 14972  0176D0  50E3               	movf	plusw1,w,c
 14973  0176D2  2001               	addwfc	btemp^0,w,c
 14974  0176D4  6E01               	movwf	btemp^0,c
 14975  0176D6  0EFD               	movlw	-3
 14976  0176D8                     L14:
 14977  0176D8  0060  F007  FFE3   	movff	btemp,plusw1
 14978                           
 14979                           ;stkvar	_n @ sp[(-4)+-6]
 14980  0176DE  0EF6               	movlw	-10
 14981  0176E0  006F FF8C  F001    	movff	plusw1,btemp
 14982  0176E6  0EF7               	movlw	-9
 14983  0176E8  50E3               	movf	plusw1,w,c
 14984  0176EA  1001               	iorwf	btemp^0,w,c
 14985  0176EC  A4D8               	btfss	status,2,c
 14986  0176EE  D7C6               	goto	l13060
 14987  0176F0                     u11770:
 14988                           
 14989                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 14990  0176F0  0EF6               	movlw	246
 14991  0176F2  26E1               	addwf	fsr1l,f,c
 14992  0176F4  0EFF               	movlw	255
 14993  0176F6  22E2               	addwfc	fsr1h,f,c
 14994  0176F8  0012               	return		;funcret
 14995  0176FA                     __end_of_memset:
 14996                           	opt callstack 0
 14997                           
 14998 ;; *************** function _printf *****************
 14999 ;; Defined at:
 15000 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 15001 ;; Parameters:    Size  Location     Type
 15002 ;;  fmt             2  [STACK] PTR const unsigned char 
 15003 ;;		 -> STR_61(3), STR_60(3), 
 15004 ;; Auto vars:     Size  Location     Type
 15005 ;;  ap              2  [STACK] PTR void [1]
 15006 ;;		 -> ?_printf(2), ?_sprintf(2), 
 15007 ;;  ret             2    0        int 
 15008 ;; Return value:  Size  Location     Type
 15009 ;;                  2  [STACK] int 
 15010 ;; Registers used:
 15011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15012 ;; Tracked objects:
 15013 ;;		On entry : 3F/3B
 15014 ;;		On exit  : 3F/0
 15015 ;;		Unchanged: 0/0
 15016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15021 ;;Total ram usage:        0 bytes
 15022 ;; Hardware stack levels used:    1
 15023 ;; Hardware stack levels required when called:   23
 15024 ;; This function calls:
 15025 ;;		_vfprintf
 15026 ;; This function is called by:
 15027 ;;		_eaDogM_WriteString
 15028 ;;		_send_lcd_data_dma
 15029 ;; This function uses a reentrant model
 15030 ;;
 15031                           
 15032                           	psect	text63
 15033  01C24A                     __ptext63:
 15034                           	opt callstack 0
 15035  01C24A                     _printf:
 15036                           	opt callstack 0
 15037                           
 15038                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15039  01C24A  52E6               	movf	postinc1,f,c
 15040  01C24C  52E6               	movf	postinc1,f,c
 15041                           
 15042                           ;stkvar	?_printf @ sp[(-2)+-3]
 15043                           
 15044                           ;incstack = 0
 15045  01C24E  0EFB               	movlw	251
 15046  01C250  24E1               	addwf	fsr1l,w,c
 15047  01C252  6E0B               	movwf	(btemp+10)^0,c
 15048  01C254  0EFF               	movlw	255
 15049  01C256  20E2               	addwfc	fsr1h,w,c
 15050  01C258  6E0C               	movwf	(btemp+11)^0,c
 15051                           
 15052                           ;stkvar	_ap @ sp[(-2)+0]
 15053  01C25A  0EFF               	movlw	-1
 15054  01C25C  0060  F033  FFE3   	movff	btemp+11,plusw1
 15055  01C262  0EFE               	movlw	-2
 15056  01C264  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15057                           
 15058                           ;stkvar	_ap @ sp[(-2)+0]
 15059  01C26A  0EFE               	movlw	254
 15060  01C26C  24E1               	addwf	fsr1l,w,c
 15061  01C26E  6E01               	movwf	btemp^0,c
 15062  01C270  0EFF               	movlw	255
 15063  01C272  20E2               	addwfc	fsr1h,w,c
 15064  01C274  6E02               	movwf	(btemp+1)^0,c
 15065  01C276  0060  F007  FFE6   	movff	btemp,postinc1
 15066  01C27C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15067                           
 15068                           ;stkvar	_fmt @ sp[(-4)+-3]
 15069  01C282  0EF9               	movlw	-7
 15070  01C284  006F FF8F FFE6     	movff	plusw1,postinc1
 15071  01C28A  006F FF8F FFE6     	movff	plusw1,postinc1
 15072  01C290  0E00               	movlw	0
 15073  01C292  6EE6               	movwf	postinc1,c
 15074  01C294  0E00               	movlw	0
 15075  01C296  6EE6               	movwf	postinc1,c
 15076  01C298  ECAF  F0DA         	call	_vfprintf	;wreg free
 15077                           
 15078                           ; BSR set to: 0
 15079                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 15080  01C29C  52E5               	movf	postdec1,f,c
 15081  01C29E  52E5               	movf	postdec1,f,c
 15082  01C2A0  52E5               	movf	postdec1,f,c
 15083  01C2A2  50E7               	movf	indf1,w,c
 15084  01C2A4  5EE1               	subwf	fsr1l,f,c
 15085  01C2A6  0E00               	movlw	0
 15086  01C2A8  5AE2               	subwfb	fsr1h,f,c
 15087  01C2AA  0012               	return		;funcret
 15088  01C2AC                     __end_of_printf:
 15089                           	opt callstack 0
 15090                           
 15091 ;; *************** function _vfprintf *****************
 15092 ;; Defined at:
 15093 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15094 ;; Parameters:    Size  Location     Type
 15095 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15096 ;;		 -> f(6), NULL(0), 
 15097 ;;  fmt             2  [STACK] PTR const unsigned char 
 15098 ;;		 -> STR_81(127), STR_79(3), STR_78(3), STR_77(19), 
 15099 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 15100 ;;		 -> STR_72(19), STR_71(24), STR_70(15), STR_69(15), 
 15101 ;;		 -> STR_68(15), STR_67(10), STR_66(10), STR_65(19), 
 15102 ;;		 -> STR_64(19), STR_61(3), STR_60(3), STR_59(21), 
 15103 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 15104 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 15105 ;;		 -> STR_50(20), STR_49(20), STR_48(21), STR_47(21), 
 15106 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 15107 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 15108 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 15109 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 15110 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15111 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 15112 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 15113 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 15114 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 15115 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 15116 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15117 ;;		 -> STR_1(21), 
 15118 ;;  ap              2  [STACK] PTR PTR void 
 15119 ;;		 -> ap(2), ap(2), 
 15120 ;; Auto vars:     Size  Location     Type
 15121 ;;  cfmt            2  [STACK] PTR unsigned char 
 15122 ;;		 -> STR_81(127), STR_79(3), STR_78(3), STR_77(19), 
 15123 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 15124 ;;		 -> STR_72(19), STR_71(24), STR_70(15), STR_69(15), 
 15125 ;;		 -> STR_68(15), STR_67(10), STR_66(10), STR_65(19), 
 15126 ;;		 -> STR_64(19), STR_61(3), STR_60(3), STR_59(21), 
 15127 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 15128 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 15129 ;;		 -> STR_50(20), STR_49(20), STR_48(21), STR_47(21), 
 15130 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 15131 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 15132 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 15133 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 15134 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15135 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 15136 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 15137 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 15138 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 15139 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 15140 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15141 ;;		 -> STR_1(21), 
 15142 ;; Return value:  Size  Location     Type
 15143 ;;                  2  [STACK] int 
 15144 ;; Registers used:
 15145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15146 ;; Tracked objects:
 15147 ;;		On entry : 0/2
 15148 ;;		On exit  : 3F/0
 15149 ;;		Unchanged: 0/0
 15150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15155 ;;Total ram usage:        0 bytes
 15156 ;; Hardware stack levels used:    1
 15157 ;; Hardware stack levels required when called:   22
 15158 ;; This function calls:
 15159 ;;		_vfpfcnvrt
 15160 ;; This function is called by:
 15161 ;;		_sprintf
 15162 ;;		_printf
 15163 ;; This function uses a reentrant model
 15164 ;;
 15165                           
 15166                           	psect	text64
 15167  01B55E                     __ptext64:
 15168                           	opt callstack 0
 15169  01B55E                     _vfprintf:
 15170                           	opt callstack 0
 15171                           
 15172                           ; BSR set to: 0
 15173                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15174  01B55E  52E6               	movf	postinc1,f,c
 15175  01B560  52E6               	movf	postinc1,f,c
 15176                           
 15177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 15178                           ;stkvar	_fmt @ sp[(-2)+-4]
 15179                           
 15180                           ;incstack = 0
 15181 ;; hardware stack exceeded
 15182  01B562  0EFA               	movlw	-6
 15183  01B564  006F FF8C  F00B    	movff	plusw1,btemp+10
 15184  01B56A  0EFB               	movlw	-5
 15185  01B56C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15186                           
 15187                           ;stkvar	_cfmt @ sp[(-2)+0]
 15188  01B572  0EFF               	movlw	-1
 15189  01B574  0060  F033  FFE3   	movff	btemp+11,plusw1
 15190  01B57A  0EFE               	movlw	-2
 15191  01B57C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15192                           
 15193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 15194  01B582  0100               	movlb	0	; () banked
 15195  01B584  6B96               	clrf	_nout& (0+255),b
 15196  01B586  6B97               	clrf	(_nout+1)& (0+255),b
 15197                           
 15198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 15199  01B588  D021               	goto	l13910
 15200  01B58A                     l13908:
 15201                           
 15202                           ; BSR set to: 0
 15203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 15204                           ;stkvar	_ap @ sp[(-2)+-6]
 15205  01B58A  0EF8               	movlw	-8
 15206  01B58C  006F FF8F FFE6     	movff	plusw1,postinc1
 15207  01B592  006F FF8F FFE6     	movff	plusw1,postinc1
 15208                           
 15209                           ;stkvar	_cfmt @ sp[(-4)+0]
 15210  01B598  0EFC               	movlw	252
 15211  01B59A  24E1               	addwf	fsr1l,w,c
 15212  01B59C  6E01               	movwf	btemp^0,c
 15213  01B59E  0EFF               	movlw	255
 15214  01B5A0  20E2               	addwfc	fsr1h,w,c
 15215  01B5A2  6E02               	movwf	(btemp+1)^0,c
 15216  01B5A4  0060  F007  FFE6   	movff	btemp,postinc1
 15217  01B5AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15218                           
 15219                           ;stkvar	_fp @ sp[(-6)+-2]
 15220  01B5B0  0EF8               	movlw	-8
 15221  01B5B2  006F FF8F FFE6     	movff	plusw1,postinc1
 15222  01B5B8  006F FF8F FFE6     	movff	plusw1,postinc1
 15223  01B5BE  EC61  F092         	call	_vfpfcnvrt	;wreg free
 15224  01B5C2  5001               	movf	btemp^0,w,c
 15225  01B5C4  0100               	movlb	0	; () banked
 15226  01B5C6  2796               	addwf	_nout& (0+255),f,b
 15227  01B5C8  5002               	movf	(btemp+1)^0,w,c
 15228  01B5CA  2397               	addwfc	(_nout+1)& (0+255),f,b
 15229  01B5CC                     l13910:
 15230                           
 15231                           ; BSR set to: 0
 15232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 15233                           ;stkvar	_cfmt @ sp[(-2)+0]
 15234  01B5CC  50E1               	movf	fsr1l,w,c
 15235  01B5CE  0FFE               	addlw	-2
 15236  01B5D0  6ED9               	movwf	fsr2l,c
 15237  01B5D2  50E2               	movf	fsr1h,w,c
 15238  01B5D4  6EDA               	movwf	fsr2h,c
 15239  01B5D6  0EFF               	movlw	255
 15240  01B5D8  22DA               	addwfc	fsr2h,f,c
 15241  01B5DA  006F FF7B FFF6     	movff	postinc2,tblptrl
 15242  01B5E0  006F FF77 FFF7     	movff	postdec2,tblptrh
 15243  01B5E6                     	if	0	;tblptru may be non-zero
 15244  01B5E6                     	endif
 15245  01B5E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15246  01B5E6  0E00               	movlw	low (__mediumconst shr (0+16))
 15247  01B5E8  6EF8               	movwf	tblptru,c
 15248  01B5EA                     	endif
 15249  01B5EA  0008               	tblrd		*
 15250  01B5EC  50F5               	movf	tablat,w,c
 15251  01B5EE  0900               	iorlw	0
 15252  01B5F0  A4D8               	btfss	status,2,c
 15253  01B5F2  D7CB               	goto	l13908
 15254                           
 15255                           ; BSR set to: 0
 15256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 15257  01B5F4  0060  F258  F001   	movff	_nout,btemp
 15258  01B5FA  0060  F25C  F002   	movff	_nout+1,btemp+1
 15259                           
 15260                           ; BSR set to: 0
 15261                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 15262  01B600  0EF8               	movlw	248
 15263  01B602  26E1               	addwf	fsr1l,f,c
 15264  01B604  0EFF               	movlw	255
 15265  01B606  22E2               	addwfc	fsr1h,f,c
 15266  01B608  0012               	return		;funcret
 15267  01B60A                     __end_of_vfprintf:
 15268                           	opt callstack 0
 15269                           
 15270 ;; *************** function _vfpfcnvrt *****************
 15271 ;; Defined at:
 15272 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15273 ;; Parameters:    Size  Location     Type
 15274 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15275 ;;		 -> f(6), NULL(0), 
 15276 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 15277 ;;		 -> cfmt(2), 
 15278 ;;  ap              2  [STACK] PTR PTR void 
 15279 ;;		 -> ap(2), ap(2), 
 15280 ;; Auto vars:     Size  Location     Type
 15281 ;;  llu             8  [STACK] unsigned long long 
 15282 ;;  ll              8  [STACK] long long 
 15283 ;;  f               4  [STACK] long long 
 15284 ;;  ct              3  [STACK] unsigned char [3]
 15285 ;;  vp              3    0        PTR void 
 15286 ;;  cp              2  [STACK] PTR unsigned char 
 15287 ;;		 -> ?_printf(2), ?_sprintf(2), STR_63(9), STR_62(12), 
 15288 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 15289 ;;		 -> V(192), 
 15290 ;;  i               2    0        int 
 15291 ;;  done            2    0        int 
 15292 ;;  c               1  [STACK] unsigned char 
 15293 ;; Return value:  Size  Location     Type
 15294 ;;                  2  [STACK] int 
 15295 ;; Registers used:
 15296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15297 ;; Tracked objects:
 15298 ;;		On entry : 0/0
 15299 ;;		On exit  : 0/0
 15300 ;;		Unchanged: 0/0
 15301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15306 ;;Total ram usage:        0 bytes
 15307 ;; Hardware stack levels used:    1
 15308 ;; Hardware stack levels required when called:   21
 15309 ;; This function calls:
 15310 ;;		_atoi
 15311 ;;		_ctoa
 15312 ;;		_dtoa
 15313 ;;		_efgtoa
 15314 ;;		_fputc
 15315 ;;		_isdigit
 15316 ;;		_isupper
 15317 ;;		_stoa
 15318 ;;		_strncmp
 15319 ;;		_tolower
 15320 ;;		_utoa
 15321 ;;		_xtoa
 15322 ;; This function is called by:
 15323 ;;		_vfprintf
 15324 ;; This function uses a reentrant model
 15325 ;;
 15326                           
 15327                           	psect	text65
 15328  0124C2                     __ptext65:
 15329                           	opt callstack 0
 15330  0124C2                     _vfpfcnvrt:
 15331                           	opt callstack 0
 15332                           
 15333                           ; BSR set to: 0
 15334                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15335  0124C2  0E20               	movlw	32
 15336  0124C4  26E1               	addwf	fsr1l,f,c
 15337  0124C6  0E00               	movlw	0
 15338  0124C8  22E2               	addwfc	fsr1h,f,c
 15339                           
 15340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 15341                           ;stkvar	_fmt @ sp[(-32)+-4]
 15342                           
 15343                           ;incstack = 0
 15344 ;; hardware stack exceeded
 15345  0124CA  0EDC               	movlw	-36
 15346  0124CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 15347  0124D2  0EDD               	movlw	-35
 15348  0124D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 15349  0124DA  006F FF7B FFF6     	movff	postinc2,tblptrl
 15350  0124E0  006F FF77 FFF7     	movff	postdec2,tblptrh
 15351  0124E6                     	if	0	;tblptru may be non-zero
 15352  0124E6                     	endif
 15353  0124E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15354  0124E6  0E00               	movlw	low (__mediumconst shr (0+16))
 15355  0124E8  6EF8               	movwf	tblptru,c
 15356  0124EA                     	endif
 15357  0124EA  0008               	tblrd		*
 15358  0124EC  50F5               	movf	tablat,w,c
 15359  0124EE  0A25               	xorlw	37
 15360  0124F0  A4D8               	btfss	status,2,c
 15361  0124F2  EF08  F09A         	goto	l13870
 15362                           
 15363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 15364                           ;stkvar	_fmt @ sp[(-32)+-4]
 15365  0124F6  0EDC               	movlw	-36
 15366  0124F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15367  0124FE  0EDD               	movlw	-35
 15368  012500  006F FF8F FFDA     	movff	plusw1,fsr2h
 15369  012506  2ADE               	incf	postinc2,f,c
 15370  012508  0E00               	movlw	0
 15371  01250A  22DD               	addwfc	postdec2,f,c
 15372                           
 15373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 15374  01250C  6A3A               	clrf	_width^0,c
 15375  01250E  6A3B               	clrf	(_width+1)^0,c
 15376  012510  6A3E               	clrf	_flags^0,c
 15377  012512  6A3F               	clrf	(_flags+1)^0,c
 15378                           
 15379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 15380  012514  683C               	setf	_prec^0,c
 15381  012516  683D               	setf	(_prec+1)^0,c
 15382                           
 15383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 15384                           ;stkvar	_fmt @ sp[(-32)+-4]
 15385  012518  0EDC               	movlw	-36
 15386  01251A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15387  012520  0EDD               	movlw	-35
 15388  012522  006F FF8F FFDA     	movff	plusw1,fsr2h
 15389  012528  006F FF7B FFF6     	movff	postinc2,tblptrl
 15390  01252E  006F FF77 FFF7     	movff	postdec2,tblptrh
 15391  012534                     	if	0	;tblptru may be non-zero
 15392  012534                     	endif
 15393  012534                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15394  012534  0E00               	movlw	low (__mediumconst shr (0+16))
 15395  012536  6EF8               	movwf	tblptru,c
 15396  012538                     	endif
 15397  012538  0008               	tblrd		*
 15398  01253A  50F5               	movf	tablat,w,c
 15399  01253C  0A2A               	xorlw	42
 15400  01253E  A4D8               	btfss	status,2,c
 15401  012540  D031               	goto	l13688
 15402                           
 15403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 15404                           ;stkvar	_fmt @ sp[(-32)+-4]
 15405  012542  0EDC               	movlw	-36
 15406  012544  006F FF8F FFD9     	movff	plusw1,fsr2l
 15407  01254A  0EDD               	movlw	-35
 15408  01254C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15409  012552  2ADE               	incf	postinc2,f,c
 15410  012554  0E00               	movlw	0
 15411  012556  22DD               	addwfc	postdec2,f,c
 15412                           
 15413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 15414                           ;stkvar	_ap @ sp[(-32)+-6]
 15415  012558  0EDA               	movlw	-38
 15416  01255A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15417  012560  0EDB               	movlw	-37
 15418  012562  006F FF8F FFDA     	movff	plusw1,fsr2h
 15419  012568  0E02               	movlw	2
 15420  01256A  5EDE               	subwf	postinc2,f,c
 15421  01256C  0E00               	movlw	0
 15422  01256E  5ADD               	subwfb	postdec2,f,c
 15423  012570  006F FF78  F00B    	movff	postinc2,btemp+10
 15424  012576  006F FF74  F00C    	movff	postdec2,btemp+11
 15425  01257C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15426  012582  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15427  012588  006F FF78  F03A    	movff	postinc2,_width
 15428  01258E  006F FF74  F03B    	movff	postdec2,_width+1
 15429                           
 15430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 15431  012594  AE3B               	btfss	(_width+1)^0,7,c
 15432  012596  D066               	goto	u12960
 15433                           
 15434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 15435  012598  803E               	bsf	_flags^0,0,c
 15436                           
 15437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 15438  01259A  6C3A               	negf	_width^0,c
 15439  01259C  1E3B               	comf	(_width+1)^0,f,c
 15440  01259E  B0D8               	btfsc	status,0,c
 15441  0125A0  2A3B               	incf	(_width+1)^0,f,c
 15442  0125A2  D060               	goto	u12960
 15443  0125A4                     l13688:
 15444                           
 15445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 15446                           ;stkvar	_fmt @ sp[(-32)+-4]
 15447  0125A4  0EDC               	movlw	-36
 15448  0125A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 15449  0125AC  0EDD               	movlw	-35
 15450  0125AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 15451  0125B4  006F FF78  F00B    	movff	postinc2,btemp+10
 15452  0125BA  006F FF74  F00C    	movff	postdec2,btemp+11
 15453  0125C0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15454  0125C6  0060  F033  FFE6   	movff	btemp+11,postinc1
 15455  0125CC  EC88  F0BF         	call	_atoi	;wreg free
 15456  0125D0  0060  F004  F03A   	movff	btemp,_width
 15457  0125D6  0060  F008  F03B   	movff	btemp+1,_width+1
 15458                           
 15459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15460  0125DC  D00B               	goto	l13692
 15461  0125DE                     l13690:
 15462                           
 15463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 15464                           ;stkvar	_fmt @ sp[(-32)+-4]
 15465  0125DE  0EDC               	movlw	-36
 15466  0125E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15467  0125E6  0EDD               	movlw	-35
 15468  0125E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15469  0125EE  2ADE               	incf	postinc2,f,c
 15470  0125F0  0E00               	movlw	0
 15471  0125F2  22DD               	addwfc	postdec2,f,c
 15472  0125F4                     l13692:
 15473  0125F4  0ED0               	movlw	208
 15474  0125F6  6E0B               	movwf	(btemp+10)^0,c
 15475  0125F8  0EFF               	movlw	255
 15476  0125FA  6E0C               	movwf	(btemp+11)^0,c
 15477                           
 15478                           ;stkvar	_fmt @ sp[(-32)+-4]
 15479  0125FC  0EDC               	movlw	-36
 15480  0125FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15481  012604  0EDD               	movlw	-35
 15482  012606  006F FF8F FFDA     	movff	plusw1,fsr2h
 15483  01260C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15484  012612  006F FF77 FFF7     	movff	postdec2,tblptrh
 15485  012618                     	if	0	;tblptru may be non-zero
 15486  012618                     	endif
 15487  012618                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15488  012618  0E00               	movlw	low (__mediumconst shr (0+16))
 15489  01261A  6EF8               	movwf	tblptru,c
 15490  01261C                     	endif
 15491  01261C  0008               	tblrd		*
 15492  01261E  50F5               	movf	tablat,w,c
 15493  012620  6E09               	movwf	(btemp+8)^0,c
 15494  012622  6A0A               	clrf	(btemp+9)^0,c
 15495  012624  500B               	movf	(btemp+10)^0,w,c
 15496  012626  2609               	addwf	(btemp+8)^0,f,c
 15497  012628  500C               	movf	(btemp+11)^0,w,c
 15498  01262A  220A               	addwfc	(btemp+9)^0,f,c
 15499  01262C  500A               	movf	(btemp+9)^0,w,c
 15500  01262E  E106               	bnz	u12940
 15501  012630  0E0A               	movlw	10
 15502  012632  5C09               	subwf	(btemp+8)^0,w,c
 15503  012634  B0D8               	btfsc	status,0,c
 15504  012636  D002               	goto	u12940
 15505  012638  0E01               	movlw	1
 15506  01263A  D001               	goto	u12950
 15507  01263C                     u12940:
 15508  01263C  0E00               	movlw	0
 15509  01263E                     u12950:
 15510  01263E  6E0B               	movwf	(btemp+10)^0,c
 15511  012640  6A0C               	clrf	(btemp+11)^0,c
 15512                           
 15513                           ;stkvar	_vfpfcnvrt$6219 @ sp[(-32)+4]
 15514  012642  0EE4               	movlw	-28
 15515  012644  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15516  01264A  0EE5               	movlw	-27
 15517  01264C  0060  F033  FFE3   	movff	btemp+11,plusw1
 15518                           
 15519                           ;stkvar	_vfpfcnvrt$6219 @ sp[(-32)+4]
 15520  012652  0EE4               	movlw	-28
 15521  012654  006F FF8C  F001    	movff	plusw1,btemp
 15522  01265A  0EE5               	movlw	-27
 15523  01265C  50E3               	movf	plusw1,w,c
 15524  01265E  1001               	iorwf	btemp^0,w,c
 15525  012660  A4D8               	btfss	status,2,c
 15526  012662  D7BD               	goto	l13690
 15527  012664                     u12960:
 15528                           
 15529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 15530                           ;stkvar	_fmt @ sp[(-32)+-4]
 15531  012664  0EDC               	movlw	-36
 15532  012666  006F FF8F FFD9     	movff	plusw1,fsr2l
 15533  01266C  0EDD               	movlw	-35
 15534  01266E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15535  012674  006F FF7B FFF6     	movff	postinc2,tblptrl
 15536  01267A  006F FF77 FFF7     	movff	postdec2,tblptrh
 15537  012680                     	if	0	;tblptru may be non-zero
 15538  012680                     	endif
 15539  012680                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15540  012680  0E00               	movlw	low (__mediumconst shr (0+16))
 15541  012682  6EF8               	movwf	tblptru,c
 15542  012684                     	endif
 15543  012684  0008               	tblrd		*
 15544  012686  50F5               	movf	tablat,w,c
 15545  012688  0A2E               	xorlw	46
 15546  01268A  A4D8               	btfss	status,2,c
 15547  01268C  D0AC               	goto	u13010
 15548                           
 15549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 15550  01268E  6A3C               	clrf	_prec^0,c
 15551  012690  6A3D               	clrf	(_prec+1)^0,c
 15552                           
 15553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 15554                           ;stkvar	_fmt @ sp[(-32)+-4]
 15555  012692  0EDC               	movlw	-36
 15556  012694  006F FF8F FFD9     	movff	plusw1,fsr2l
 15557  01269A  0EDD               	movlw	-35
 15558  01269C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15559  0126A2  2ADE               	incf	postinc2,f,c
 15560  0126A4  0E00               	movlw	0
 15561  0126A6  22DD               	addwfc	postdec2,f,c
 15562                           
 15563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 15564                           ;stkvar	_fmt @ sp[(-32)+-4]
 15565  0126A8  0EDC               	movlw	-36
 15566  0126AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15567  0126B0  0EDD               	movlw	-35
 15568  0126B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15569  0126B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 15570  0126BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 15571  0126C4                     	if	0	;tblptru may be non-zero
 15572  0126C4                     	endif
 15573  0126C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15574  0126C4  0E00               	movlw	low (__mediumconst shr (0+16))
 15575  0126C6  6EF8               	movwf	tblptru,c
 15576  0126C8                     	endif
 15577  0126C8  0008               	tblrd		*
 15578  0126CA  50F5               	movf	tablat,w,c
 15579  0126CC  0A2A               	xorlw	42
 15580  0126CE  A4D8               	btfss	status,2,c
 15581  0126D0  D02A               	goto	l13710
 15582                           
 15583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 15584                           ;stkvar	_fmt @ sp[(-32)+-4]
 15585  0126D2  0EDC               	movlw	-36
 15586  0126D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 15587  0126DA  0EDD               	movlw	-35
 15588  0126DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 15589  0126E2  2ADE               	incf	postinc2,f,c
 15590  0126E4  0E00               	movlw	0
 15591  0126E6  22DD               	addwfc	postdec2,f,c
 15592                           
 15593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 15594                           ;stkvar	_ap @ sp[(-32)+-6]
 15595  0126E8  0EDA               	movlw	-38
 15596  0126EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15597  0126F0  0EDB               	movlw	-37
 15598  0126F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15599  0126F8  0E02               	movlw	2
 15600  0126FA  5EDE               	subwf	postinc2,f,c
 15601  0126FC  0E00               	movlw	0
 15602  0126FE  5ADD               	subwfb	postdec2,f,c
 15603  012700  006F FF78  F00B    	movff	postinc2,btemp+10
 15604  012706  006F FF74  F00C    	movff	postdec2,btemp+11
 15605  01270C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15606  012712  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15607  012718  006F FF78  F03C    	movff	postinc2,_prec
 15608  01271E  006F FF74  F03D    	movff	postdec2,_prec+1
 15609                           
 15610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 15611  012724  D060               	goto	u13010
 15612  012726                     l13710:
 15613                           
 15614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 15615                           ;stkvar	_fmt @ sp[(-32)+-4]
 15616  012726  0EDC               	movlw	-36
 15617  012728  006F FF8F FFD9     	movff	plusw1,fsr2l
 15618  01272E  0EDD               	movlw	-35
 15619  012730  006F FF8F FFDA     	movff	plusw1,fsr2h
 15620  012736  006F FF78  F00B    	movff	postinc2,btemp+10
 15621  01273C  006F FF74  F00C    	movff	postdec2,btemp+11
 15622  012742  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15623  012748  0060  F033  FFE6   	movff	btemp+11,postinc1
 15624  01274E  EC88  F0BF         	call	_atoi	;wreg free
 15625  012752  0060  F004  F03C   	movff	btemp,_prec
 15626  012758  0060  F008  F03D   	movff	btemp+1,_prec+1
 15627                           
 15628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15629  01275E  D00B               	goto	l13714
 15630  012760                     l13712:
 15631                           
 15632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 15633                           ;stkvar	_fmt @ sp[(-32)+-4]
 15634  012760  0EDC               	movlw	-36
 15635  012762  006F FF8F FFD9     	movff	plusw1,fsr2l
 15636  012768  0EDD               	movlw	-35
 15637  01276A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15638  012770  2ADE               	incf	postinc2,f,c
 15639  012772  0E00               	movlw	0
 15640  012774  22DD               	addwfc	postdec2,f,c
 15641  012776                     l13714:
 15642  012776  0ED0               	movlw	208
 15643  012778  6E0B               	movwf	(btemp+10)^0,c
 15644  01277A  0EFF               	movlw	255
 15645  01277C  6E0C               	movwf	(btemp+11)^0,c
 15646                           
 15647                           ;stkvar	_fmt @ sp[(-32)+-4]
 15648  01277E  0EDC               	movlw	-36
 15649  012780  006F FF8F FFD9     	movff	plusw1,fsr2l
 15650  012786  0EDD               	movlw	-35
 15651  012788  006F FF8F FFDA     	movff	plusw1,fsr2h
 15652  01278E  006F FF7B FFF6     	movff	postinc2,tblptrl
 15653  012794  006F FF77 FFF7     	movff	postdec2,tblptrh
 15654  01279A                     	if	0	;tblptru may be non-zero
 15655  01279A                     	endif
 15656  01279A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15657  01279A  0E00               	movlw	low (__mediumconst shr (0+16))
 15658  01279C  6EF8               	movwf	tblptru,c
 15659  01279E                     	endif
 15660  01279E  0008               	tblrd		*
 15661  0127A0  50F5               	movf	tablat,w,c
 15662  0127A2  6E09               	movwf	(btemp+8)^0,c
 15663  0127A4  6A0A               	clrf	(btemp+9)^0,c
 15664  0127A6  500B               	movf	(btemp+10)^0,w,c
 15665  0127A8  2609               	addwf	(btemp+8)^0,f,c
 15666  0127AA  500C               	movf	(btemp+11)^0,w,c
 15667  0127AC  220A               	addwfc	(btemp+9)^0,f,c
 15668  0127AE  500A               	movf	(btemp+9)^0,w,c
 15669  0127B0  E106               	bnz	u12990
 15670  0127B2  0E0A               	movlw	10
 15671  0127B4  5C09               	subwf	(btemp+8)^0,w,c
 15672  0127B6  B0D8               	btfsc	status,0,c
 15673  0127B8  D002               	goto	u12990
 15674  0127BA  0E01               	movlw	1
 15675  0127BC  D001               	goto	u13000
 15676  0127BE                     u12990:
 15677  0127BE  0E00               	movlw	0
 15678  0127C0                     u13000:
 15679  0127C0  6E0B               	movwf	(btemp+10)^0,c
 15680  0127C2  6A0C               	clrf	(btemp+11)^0,c
 15681                           
 15682                           ;stkvar	_vfpfcnvrt$6220 @ sp[(-32)+0]
 15683  0127C4  0EE0               	movlw	-32
 15684  0127C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15685  0127CC  0EE1               	movlw	-31
 15686  0127CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 15687                           
 15688                           ;stkvar	_vfpfcnvrt$6220 @ sp[(-32)+0]
 15689  0127D4  0EE0               	movlw	-32
 15690  0127D6  006F FF8C  F001    	movff	plusw1,btemp
 15691  0127DC  0EE1               	movlw	-31
 15692  0127DE  50E3               	movf	plusw1,w,c
 15693  0127E0  1001               	iorwf	btemp^0,w,c
 15694  0127E2  A4D8               	btfss	status,2,c
 15695  0127E4  D7BD               	goto	l13712
 15696  0127E6                     u13010:
 15697                           
 15698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 15699                           ;stkvar	_fmt @ sp[(-32)+-4]
 15700  0127E6  0EDC               	movlw	-36
 15701  0127E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15702  0127EE  0EDD               	movlw	-35
 15703  0127F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 15704  0127F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 15705  0127FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 15706  012802                     	if	0	;tblptru may be non-zero
 15707  012802                     	endif
 15708  012802                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15709  012802  0E00               	movlw	low (__mediumconst shr (0+16))
 15710  012804  6EF8               	movwf	tblptru,c
 15711  012806                     	endif
 15712  012806  0008               	tblrd		*
 15713  012808  50F5               	movf	tablat,w,c
 15714  01280A  6EE6               	movwf	postinc1,c
 15715  01280C  0E00               	movlw	0
 15716  01280E  6EE6               	movwf	postinc1,c
 15717  012810  EC46  F0DE         	call	_tolower	;wreg free
 15718                           
 15719                           ;stkvar	_ct @ sp[(-32)+26]
 15720  012814  0EFA               	movlw	-6
 15721  012816  0060  F007  FFE3   	movff	btemp,plusw1
 15722                           
 15723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 15724                           ;stkvar	_ct @ sp[(-32)+26]
 15725  01281C  0EFA               	movlw	-6
 15726  01281E  50E3               	movf	plusw1,w,c
 15727  012820  B4D8               	btfsc	status,2,c
 15728  012822  D05B               	goto	l13730
 15729                           
 15730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 15731                           ;stkvar	_ct @ sp[(-32)+26]
 15732  012824  0EFB               	movlw	251
 15733  012826  24E1               	addwf	fsr1l,w,c
 15734  012828  6ED9               	movwf	fsr2l,c
 15735  01282A  0EFF               	movlw	255
 15736  01282C  20E2               	addwfc	fsr1h,w,c
 15737  01282E  6EDA               	movwf	fsr2h,c
 15738                           
 15739                           ;stkvar	_fmt @ sp[(-32)+-4]
 15740  012830  0EDC               	movlw	-36
 15741  012832  006F FF8F FFE9     	movff	plusw1,fsr0l
 15742  012838  0EDD               	movlw	-35
 15743  01283A  006F FF8F FFEA     	movff	plusw1,fsr0h
 15744  012840  006F FFB8  F00B    	movff	postinc0,btemp+10
 15745  012846  006F FFB4  F00C    	movff	postdec0,btemp+11
 15746  01284C  0E01               	movlw	1
 15747  01284E  260B               	addwf	(btemp+10)^0,f,c
 15748  012850  0E00               	movlw	0
 15749  012852  220C               	addwfc	(btemp+11)^0,f,c
 15750  012854  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 15751  01285A  0060  F033  FFF7   	movff	btemp+11,tblptrh
 15752  012860                     	if	0	;tblptru may be non-zero
 15753  012860                     	endif
 15754  012860                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15755  012860  0E00               	movlw	low (__mediumconst shr (0+16))
 15756  012862  6EF8               	movwf	tblptru,c
 15757  012864                     	endif
 15758  012864  0008               	tblrd		*
 15759  012866  50F5               	movf	tablat,w,c
 15760  012868  6EE6               	movwf	postinc1,c
 15761  01286A  0E00               	movlw	0
 15762  01286C  6EE6               	movwf	postinc1,c
 15763  01286E  EC46  F0DE         	call	_tolower	;wreg free
 15764  012872  5001               	movf	btemp^0,w,c
 15765  012874  6EDF               	movwf	indf2,c
 15766                           
 15767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 15768                           ;stkvar	_ct @ sp[(-32)+26]
 15769  012876  0EFB               	movlw	251
 15770  012878  24E1               	addwf	fsr1l,w,c
 15771  01287A  6ED9               	movwf	fsr2l,c
 15772  01287C  0EFF               	movlw	255
 15773  01287E  20E2               	addwfc	fsr1h,w,c
 15774  012880  6EDA               	movwf	fsr2h,c
 15775  012882  50DF               	movf	indf2,w,c
 15776  012884  B4D8               	btfsc	status,2,c
 15777  012886  D029               	goto	l13730
 15778                           
 15779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 15780                           ;stkvar	_ct @ sp[(-32)+26]
 15781  012888  0EFC               	movlw	252
 15782  01288A  24E1               	addwf	fsr1l,w,c
 15783  01288C  6ED9               	movwf	fsr2l,c
 15784  01288E  0EFF               	movlw	255
 15785  012890  20E2               	addwfc	fsr1h,w,c
 15786  012892  6EDA               	movwf	fsr2h,c
 15787                           
 15788                           ;stkvar	_fmt @ sp[(-32)+-4]
 15789  012894  0EDC               	movlw	-36
 15790  012896  006F FF8F FFE9     	movff	plusw1,fsr0l
 15791  01289C  0EDD               	movlw	-35
 15792  01289E  006F FF8F FFEA     	movff	plusw1,fsr0h
 15793  0128A4  006F FFB8  F00B    	movff	postinc0,btemp+10
 15794  0128AA  006F FFB4  F00C    	movff	postdec0,btemp+11
 15795  0128B0  0E02               	movlw	2
 15796  0128B2  260B               	addwf	(btemp+10)^0,f,c
 15797  0128B4  0E00               	movlw	0
 15798  0128B6  220C               	addwfc	(btemp+11)^0,f,c
 15799  0128B8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 15800  0128BE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 15801  0128C4                     	if	0	;tblptru may be non-zero
 15802  0128C4                     	endif
 15803  0128C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15804  0128C4  0E00               	movlw	low (__mediumconst shr (0+16))
 15805  0128C6  6EF8               	movwf	tblptru,c
 15806  0128C8                     	endif
 15807  0128C8  0008               	tblrd		*
 15808  0128CA  50F5               	movf	tablat,w,c
 15809  0128CC  6EE6               	movwf	postinc1,c
 15810  0128CE  0E00               	movlw	0
 15811  0128D0  6EE6               	movwf	postinc1,c
 15812  0128D2  EC46  F0DE         	call	_tolower	;wreg free
 15813  0128D6  5001               	movf	btemp^0,w,c
 15814  0128D8  6EDF               	movwf	indf2,c
 15815  0128DA                     l13730:
 15816                           
 15817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 15818                           ;stkvar	_fmt @ sp[(-32)+-4]
 15819  0128DA  0EDC               	movlw	-36
 15820  0128DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 15821  0128E2  0EDD               	movlw	-35
 15822  0128E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 15823  0128EA  006F FF7B FFF6     	movff	postinc2,tblptrl
 15824  0128F0  006F FF77 FFF7     	movff	postdec2,tblptrh
 15825  0128F6                     	if	0	;tblptru may be non-zero
 15826  0128F6                     	endif
 15827  0128F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15828  0128F6  0E00               	movlw	low (__mediumconst shr (0+16))
 15829  0128F8  6EF8               	movwf	tblptru,c
 15830  0128FA                     	endif
 15831  0128FA  0008               	tblrd		*
 15832  0128FC  50F5               	movf	tablat,w,c
 15833  0128FE  0A63               	xorlw	99
 15834  012900  A4D8               	btfss	status,2,c
 15835  012902  D037               	goto	l13740
 15836                           
 15837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 15838                           ;stkvar	_fmt @ sp[(-32)+-4]
 15839  012904  0EDC               	movlw	-36
 15840  012906  006F FF8F FFD9     	movff	plusw1,fsr2l
 15841  01290C  0EDD               	movlw	-35
 15842  01290E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15843  012914  2ADE               	incf	postinc2,f,c
 15844  012916  0E00               	movlw	0
 15845  012918  22DD               	addwfc	postdec2,f,c
 15846                           
 15847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 15848                           ;stkvar	_ap @ sp[(-32)+-6]
 15849  01291A  0EDA               	movlw	-38
 15850  01291C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15851  012922  0EDB               	movlw	-37
 15852  012924  006F FF8F FFDA     	movff	plusw1,fsr2h
 15853  01292A  0E02               	movlw	2
 15854  01292C  5EDE               	subwf	postinc2,f,c
 15855  01292E  0E00               	movlw	0
 15856  012930  5ADD               	subwfb	postdec2,f,c
 15857  012932  006F FF78  F00B    	movff	postinc2,btemp+10
 15858  012938  006F FF74  F00C    	movff	postdec2,btemp+11
 15859  01293E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15860  012944  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15861  01294A  50DF               	movf	indf2,w,c
 15862  01294C  6E0C               	movwf	(btemp+11)^0,c
 15863                           
 15864                           ;stkvar	_c @ sp[(-32)+31]
 15865  01294E  0EFF               	movlw	-1
 15866  012950  0060  F033  FFE3   	movff	btemp+11,plusw1
 15867                           
 15868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 15869                           ;stkvar	_c @ sp[(-32)+31]
 15870  012956  0EFF               	movlw	-1
 15871  012958  50E3               	movf	plusw1,w,c
 15872  01295A  6EE6               	movwf	postinc1,c
 15873                           
 15874                           ;stkvar	_fp @ sp[(-33)+-2]
 15875  01295C  0EDD               	movlw	-35
 15876  01295E  006F FF8F FFE6     	movff	plusw1,postinc1
 15877  012964  006F FF8F FFE6     	movff	plusw1,postinc1
 15878  01296A  ECC0  F0DD         	call	_ctoa	;wreg free
 15879  01296E  EF32  F09A         	goto	l2626
 15880  012972                     l13740:
 15881                           
 15882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 15883                           ;stkvar	_fmt @ sp[(-32)+-4]
 15884  012972  0EDC               	movlw	-36
 15885  012974  006F FF8F FFD9     	movff	plusw1,fsr2l
 15886  01297A  0EDD               	movlw	-35
 15887  01297C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15888  012982  006F FF7B FFF6     	movff	postinc2,tblptrl
 15889  012988  006F FF77 FFF7     	movff	postdec2,tblptrh
 15890  01298E                     	if	0	;tblptru may be non-zero
 15891  01298E                     	endif
 15892  01298E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15893  01298E  0E00               	movlw	low (__mediumconst shr (0+16))
 15894  012990  6EF8               	movwf	tblptru,c
 15895  012992                     	endif
 15896  012992  0008               	tblrd		*
 15897  012994  50F5               	movf	tablat,w,c
 15898  012996  0A64               	xorlw	100
 15899  012998  B4D8               	btfsc	status,2,c
 15900  01299A  D015               	goto	u13060
 15901                           
 15902                           ;stkvar	_fmt @ sp[(-32)+-4]
 15903  01299C  0EDC               	movlw	-36
 15904  01299E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15905  0129A4  0EDD               	movlw	-35
 15906  0129A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15907  0129AC  006F FF7B FFF6     	movff	postinc2,tblptrl
 15908  0129B2  006F FF77 FFF7     	movff	postdec2,tblptrh
 15909  0129B8                     	if	0	;tblptru may be non-zero
 15910  0129B8                     	endif
 15911  0129B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15912  0129B8  0E00               	movlw	low (__mediumconst shr (0+16))
 15913  0129BA  6EF8               	movwf	tblptru,c
 15914  0129BC                     	endif
 15915  0129BC  0008               	tblrd		*
 15916  0129BE  50F5               	movf	tablat,w,c
 15917  0129C0  0A69               	xorlw	105
 15918  0129C2  A4D8               	btfss	status,2,c
 15919  0129C4  D076               	goto	l13752
 15920  0129C6                     u13060:
 15921                           
 15922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 15923                           ;stkvar	_fmt @ sp[(-32)+-4]
 15924  0129C6  0EDC               	movlw	-36
 15925  0129C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15926  0129CE  0EDD               	movlw	-35
 15927  0129D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 15928  0129D6  2ADE               	incf	postinc2,f,c
 15929  0129D8  0E00               	movlw	0
 15930  0129DA  22DD               	addwfc	postdec2,f,c
 15931                           
 15932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 15933                           ;stkvar	_ap @ sp[(-32)+-6]
 15934  0129DC  0EDA               	movlw	-38
 15935  0129DE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15936  0129E4  0EDB               	movlw	-37
 15937  0129E6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15938  0129EC  0E02               	movlw	2
 15939  0129EE  5EDE               	subwf	postinc2,f,c
 15940  0129F0  0E00               	movlw	0
 15941  0129F2  5ADD               	subwfb	postdec2,f,c
 15942  0129F4  006F FF78  F00B    	movff	postinc2,btemp+10
 15943  0129FA  006F FF74  F00C    	movff	postdec2,btemp+11
 15944  012A00  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15945  012A06  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15946  012A0C  006F FF78  F00B    	movff	postinc2,btemp+10
 15947  012A12  006F FF74  F00C    	movff	postdec2,btemp+11
 15948                           
 15949                           ;stkvar	_ll @ sp[(-32)+14]
 15950  012A18  0EEE               	movlw	-18
 15951  012A1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15952  012A20  0EEF               	movlw	-17
 15953  012A22  0060  F033  FFE3   	movff	btemp+11,plusw1
 15954  012A28  6A01               	clrf	btemp^0,c
 15955  012A2A  BEE3               	btfsc	plusw1,7,c
 15956  012A2C  6801               	setf	btemp^0,c
 15957  012A2E  0EF0               	movlw	-16
 15958  012A30  0060  F007  FFE3   	movff	btemp,plusw1
 15959  012A36  0EF1               	movlw	-15
 15960  012A38  0060  F007  FFE3   	movff	btemp,plusw1
 15961  012A3E  0EF2               	movlw	-14
 15962  012A40  0060  F007  FFE3   	movff	btemp,plusw1
 15963  012A46  0EF3               	movlw	-13
 15964  012A48  0060  F007  FFE3   	movff	btemp,plusw1
 15965  012A4E  0EF4               	movlw	-12
 15966  012A50  0060  F007  FFE3   	movff	btemp,plusw1
 15967  012A56  0EF5               	movlw	-11
 15968  012A58  0060  F007  FFE3   	movff	btemp,plusw1
 15969  012A5E                     l13748:
 15970                           
 15971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 15972                           ;stkvar	_ll @ sp[(-32)+14]
 15973  012A5E  50E1               	movf	fsr1l,w,c
 15974  012A60  0FEE               	addlw	-18
 15975  012A62  6ED9               	movwf	fsr2l,c
 15976  012A64  50E2               	movf	fsr1h,w,c
 15977  012A66  6EDA               	movwf	fsr2h,c
 15978  012A68  0EFF               	movlw	255
 15979  012A6A  22DA               	addwfc	fsr2h,f,c
 15980  012A6C  006F FF7B FFE6     	movff	postinc2,postinc1
 15981  012A72  006F FF7B FFE6     	movff	postinc2,postinc1
 15982  012A78  006F FF7B FFE6     	movff	postinc2,postinc1
 15983  012A7E  006F FF7B FFE6     	movff	postinc2,postinc1
 15984  012A84  006F FF7B FFE6     	movff	postinc2,postinc1
 15985  012A8A  006F FF7B FFE6     	movff	postinc2,postinc1
 15986  012A90  006F FF7B FFE6     	movff	postinc2,postinc1
 15987  012A96  006F FF7B FFE6     	movff	postinc2,postinc1
 15988                           
 15989                           ;stkvar	_fp @ sp[(-40)+-2]
 15990  012A9C  0ED6               	movlw	-42
 15991  012A9E  006F FF8F FFE6     	movff	plusw1,postinc1
 15992  012AA4  006F FF8F FFE6     	movff	plusw1,postinc1
 15993  012AAA  ECD8  F0AE         	call	_dtoa	;wreg free
 15994  012AAE  EF32  F09A         	goto	l2626
 15995  012AB2                     l13752:
 15996                           
 15997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 15998  012AB2  0E02               	movlw	2
 15999  012AB4  6EE6               	movwf	postinc1,c
 16000  012AB6  0E00               	movlw	0
 16001  012AB8  6EE6               	movwf	postinc1,c
 16002  012ABA  0EEA               	movlw	low STR_90
 16003  012ABC  6EE6               	movwf	postinc1,c
 16004  012ABE  0EFF               	movlw	high STR_90
 16005  012AC0  6EE6               	movwf	postinc1,c
 16006                           
 16007                           ;stkvar	_fmt @ sp[(-36)+-4]
 16008  012AC2  0ED8               	movlw	-40
 16009  012AC4  006F FF8F FFD9     	movff	plusw1,fsr2l
 16010  012ACA  0ED9               	movlw	-39
 16011  012ACC  006F FF8F FFDA     	movff	plusw1,fsr2h
 16012  012AD2  006F FF78  F00B    	movff	postinc2,btemp+10
 16013  012AD8  006F FF74  F00C    	movff	postdec2,btemp+11
 16014  012ADE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16015  012AE4  0060  F033  FFE6   	movff	btemp+11,postinc1
 16016  012AEA  EC05  F0C3         	call	_strncmp	;wreg free
 16017  012AEE  5001               	movf	btemp^0,w,c
 16018  012AF0  1002               	iorwf	(btemp+1)^0,w,c
 16019  012AF2  B4D8               	btfsc	status,2,c
 16020  012AF4  D022               	goto	u13080
 16021  012AF6  0E02               	movlw	2
 16022  012AF8  6EE6               	movwf	postinc1,c
 16023  012AFA  0E00               	movlw	0
 16024  012AFC  6EE6               	movwf	postinc1,c
 16025  012AFE  0EF0               	movlw	low STR_94
 16026  012B00  6EE6               	movwf	postinc1,c
 16027  012B02  0EFF               	movlw	high STR_94
 16028  012B04  6EE6               	movwf	postinc1,c
 16029                           
 16030                           ;stkvar	_fmt @ sp[(-36)+-4]
 16031  012B06  0ED8               	movlw	-40
 16032  012B08  006F FF8F FFD9     	movff	plusw1,fsr2l
 16033  012B0E  0ED9               	movlw	-39
 16034  012B10  006F FF8F FFDA     	movff	plusw1,fsr2h
 16035  012B16  006F FF78  F00B    	movff	postinc2,btemp+10
 16036  012B1C  006F FF74  F00C    	movff	postdec2,btemp+11
 16037  012B22  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16038  012B28  0060  F033  FFE6   	movff	btemp+11,postinc1
 16039  012B2E  EC05  F0C3         	call	_strncmp	;wreg free
 16040  012B32  5001               	movf	btemp^0,w,c
 16041  012B34  1002               	iorwf	(btemp+1)^0,w,c
 16042  012B36  A4D8               	btfss	status,2,c
 16043  012B38  D069               	goto	l13764
 16044  012B3A                     u13080:
 16045                           
 16046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 16047                           ;stkvar	_fmt @ sp[(-32)+-4]
 16048  012B3A  0EDC               	movlw	-36
 16049  012B3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16050  012B42  0EDD               	movlw	-35
 16051  012B44  006F FF8F FFDA     	movff	plusw1,fsr2h
 16052  012B4A  0E02               	movlw	2
 16053  012B4C  26DE               	addwf	postinc2,f,c
 16054  012B4E  0E00               	movlw	0
 16055  012B50  22DD               	addwfc	postdec2,f,c
 16056                           
 16057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 16058                           ;stkvar	_ap @ sp[(-32)+-6]
 16059  012B52  0EDA               	movlw	-38
 16060  012B54  006F FF8F FFD9     	movff	plusw1,fsr2l
 16061  012B5A  0EDB               	movlw	-37
 16062  012B5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16063  012B62  0E04               	movlw	4
 16064  012B64  5EDE               	subwf	postinc2,f,c
 16065  012B66  0E00               	movlw	0
 16066  012B68  5ADD               	subwfb	postdec2,f,c
 16067  012B6A  006F FF78  F00B    	movff	postinc2,btemp+10
 16068  012B70  006F FF74  F00C    	movff	postdec2,btemp+11
 16069  012B76  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16070  012B7C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16071  012B82  006F FF78  F009    	movff	postinc2,btemp+8
 16072  012B88  006F FF78  F00A    	movff	postinc2,btemp+9
 16073  012B8E  006F FF78  F00B    	movff	postinc2,btemp+10
 16074  012B94  006F FF78  F00C    	movff	postinc2,btemp+11
 16075  012B9A  0060  F024  F011   	movff	btemp+8,btemp+16
 16076  012BA0  0060  F028  F012   	movff	btemp+9,btemp+17
 16077  012BA6  0060  F02C  F013   	movff	btemp+10,btemp+18
 16078  012BAC  0060  F030  F014   	movff	btemp+11,btemp+19
 16079  012BB2  6A15               	clrf	(btemp+20)^0,c
 16080  012BB4  BE14               	btfsc	(btemp+19)^0,7,c
 16081  012BB6  6815               	setf	(btemp+20)^0,c
 16082  012BB8  0060  F054  F016   	movff	btemp+20,btemp+21
 16083  012BBE  0060  F054  F017   	movff	btemp+20,btemp+22
 16084  012BC4  0060  F054  F018   	movff	btemp+20,btemp+23
 16085                           
 16086                           ;stkvar	_ll @ sp[(-32)+14]
 16087  012BCA  0EEE               	movlw	-18
 16088  012BCC  0060  F047  FFE3   	movff	btemp+16,plusw1
 16089  012BD2  0EEF               	movlw	-17
 16090  012BD4  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16091  012BDA  0EF0               	movlw	-16
 16092  012BDC  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16093  012BE2  0EF1               	movlw	-15
 16094  012BE4  0060  F053  FFE3   	movff	btemp+19,plusw1
 16095  012BEA  0EF2               	movlw	-14
 16096  012BEC  0060  F057  FFE3   	movff	btemp+20,plusw1
 16097  012BF2  0EF3               	movlw	-13
 16098  012BF4  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16099  012BFA  0EF4               	movlw	-12
 16100  012BFC  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16101  012C02  0EF5               	movlw	-11
 16102  012C04  0060  F063  FFE3   	movff	btemp+23,plusw1
 16103  012C0A  D729               	goto	l13748
 16104  012C0C                     l13764:
 16105                           
 16106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 16107                           ;stkvar	_ct @ sp[(-32)+26]
 16108  012C0C  0EFA               	movlw	-6
 16109  012C0E  006F FF8C  F001    	movff	plusw1,btemp
 16110  012C14  0E66               	movlw	102
 16111  012C16  1801               	xorwf	btemp^0,w,c
 16112  012C18  A4D8               	btfss	status,2,c
 16113  012C1A  D06E               	goto	l13776
 16114                           
 16115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 16116                           ;stkvar	_fmt @ sp[(-32)+-4]
 16117  012C1C  0EDC               	movlw	-36
 16118  012C1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16119  012C24  0EDD               	movlw	-35
 16120  012C26  006F FF8F FFDA     	movff	plusw1,fsr2h
 16121  012C2C  006F FF7B FFF6     	movff	postinc2,tblptrl
 16122  012C32  006F FF77 FFF7     	movff	postdec2,tblptrh
 16123  012C38                     	if	0	;tblptru may be non-zero
 16124  012C38                     	endif
 16125  012C38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16126  012C38  0E00               	movlw	low (__mediumconst shr (0+16))
 16127  012C3A  6EF8               	movwf	tblptru,c
 16128  012C3C                     	endif
 16129                           
 16130                           ;stkvar	_c @ sp[(-32)+31]
 16131  012C3C  0008               	tblrd		*
 16132  012C3E  0EFF               	movlw	-1
 16133  012C40  006F FFD7 FFE3     	movff	tablat,plusw1
 16134                           
 16135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 16136                           ;stkvar	_fmt @ sp[(-32)+-4]
 16137  012C46  0EDC               	movlw	-36
 16138  012C48  006F FF8F FFD9     	movff	plusw1,fsr2l
 16139  012C4E  0EDD               	movlw	-35
 16140  012C50  006F FF8F FFDA     	movff	plusw1,fsr2h
 16141  012C56  2ADE               	incf	postinc2,f,c
 16142  012C58  0E00               	movlw	0
 16143  012C5A  22DD               	addwfc	postdec2,f,c
 16144                           
 16145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 16146                           ;stkvar	_ap @ sp[(-32)+-6]
 16147  012C5C  0EDA               	movlw	-38
 16148  012C5E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16149  012C64  0EDB               	movlw	-37
 16150  012C66  006F FF8F FFDA     	movff	plusw1,fsr2h
 16151  012C6C  0E04               	movlw	4
 16152  012C6E  5EDE               	subwf	postinc2,f,c
 16153  012C70  0E00               	movlw	0
 16154  012C72  5ADD               	subwfb	postdec2,f,c
 16155  012C74  006F FF78  F00B    	movff	postinc2,btemp+10
 16156  012C7A  006F FF74  F00C    	movff	postdec2,btemp+11
 16157  012C80  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16158  012C86  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16159  012C8C  006F FF78  F009    	movff	postinc2,btemp+8
 16160  012C92  006F FF78  F00A    	movff	postinc2,btemp+9
 16161  012C98  006F FF78  F00B    	movff	postinc2,btemp+10
 16162  012C9E  006F FF78  F00C    	movff	postinc2,btemp+11
 16163                           
 16164                           ;stkvar	_f @ sp[(-32)+22]
 16165  012CA4  0EF6               	movlw	-10
 16166  012CA6  0060  F027  FFE3   	movff	btemp+8,plusw1
 16167  012CAC  0EF7               	movlw	-9
 16168  012CAE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16169  012CB4  0EF8               	movlw	-8
 16170  012CB6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16171  012CBC  0EF9               	movlw	-7
 16172  012CBE  0060  F033  FFE3   	movff	btemp+11,plusw1
 16173  012CC4                     l13772:
 16174                           
 16175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 16176                           ;stkvar	_c @ sp[(-32)+31]
 16177  012CC4  0EFF               	movlw	-1
 16178  012CC6  50E3               	movf	plusw1,w,c
 16179  012CC8  6EE6               	movwf	postinc1,c
 16180                           
 16181                           ;stkvar	_f @ sp[(-33)+22]
 16182  012CCA  0EF5               	movlw	-11
 16183  012CCC  006F FF8F FFE6     	movff	plusw1,postinc1
 16184  012CD2  006F FF8F FFE6     	movff	plusw1,postinc1
 16185  012CD8  006F FF8F FFE6     	movff	plusw1,postinc1
 16186  012CDE  006F FF8F FFE6     	movff	plusw1,postinc1
 16187                           
 16188                           ;stkvar	_fp @ sp[(-37)+-2]
 16189  012CE4  0ED9               	movlw	-39
 16190  012CE6  006F FF8F FFE6     	movff	plusw1,postinc1
 16191  012CEC  006F FF8F FFE6     	movff	plusw1,postinc1
 16192  012CF2  EC3F  F089         	call	_efgtoa	;wreg free
 16193  012CF6  D3B6               	goto	l2626
 16194  012CF8                     l13776:
 16195                           
 16196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 16197  012CF8  0E02               	movlw	2
 16198  012CFA  6EE6               	movwf	postinc1,c
 16199  012CFC  0E00               	movlw	0
 16200  012CFE  6EE6               	movwf	postinc1,c
 16201  012D00  0EED               	movlw	low STR_99
 16202  012D02  6EE6               	movwf	postinc1,c
 16203  012D04  0EFF               	movlw	high STR_99
 16204  012D06  6EE6               	movwf	postinc1,c
 16205                           
 16206                           ;stkvar	_ct @ sp[(-36)+26]
 16207  012D08  0EF6               	movlw	246
 16208  012D0A  24E1               	addwf	fsr1l,w,c
 16209  012D0C  6E01               	movwf	btemp^0,c
 16210  012D0E  0EFF               	movlw	255
 16211  012D10  20E2               	addwfc	fsr1h,w,c
 16212  012D12  6E02               	movwf	(btemp+1)^0,c
 16213  012D14  0060  F007  FFE6   	movff	btemp,postinc1
 16214  012D1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16215  012D20  EC05  F0C3         	call	_strncmp	;wreg free
 16216  012D24  5001               	movf	btemp^0,w,c
 16217  012D26  1002               	iorwf	(btemp+1)^0,w,c
 16218  012D28  A4D8               	btfss	status,2,c
 16219  012D2A  D096               	goto	l13796
 16220                           
 16221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 16222                           ;stkvar	_fmt @ sp[(-32)+-4]
 16223  012D2C  0EDC               	movlw	-36
 16224  012D2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16225  012D34  0EDD               	movlw	-35
 16226  012D36  006F FF8F FFDA     	movff	plusw1,fsr2h
 16227  012D3C  006F FF78  F00B    	movff	postinc2,btemp+10
 16228  012D42  006F FF74  F00C    	movff	postdec2,btemp+11
 16229  012D48  0E01               	movlw	1
 16230  012D4A  260B               	addwf	(btemp+10)^0,f,c
 16231  012D4C  0E00               	movlw	0
 16232  012D4E  220C               	addwfc	(btemp+11)^0,f,c
 16233  012D50  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16234  012D56  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16235  012D5C                     	if	0	;tblptru may be non-zero
 16236  012D5C                     	endif
 16237  012D5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16238  012D5C  0E00               	movlw	low (__mediumconst shr (0+16))
 16239  012D5E  6EF8               	movwf	tblptru,c
 16240  012D60                     	endif
 16241                           
 16242                           ;stkvar	_c @ sp[(-32)+31]
 16243  012D60  0008               	tblrd		*
 16244  012D62  0EFF               	movlw	-1
 16245  012D64  006F FFD7 FFE3     	movff	tablat,plusw1
 16246  012D6A  0EBF               	movlw	191
 16247  012D6C  6E0B               	movwf	(btemp+10)^0,c
 16248  012D6E  0EFF               	movlw	255
 16249  012D70  6E0C               	movwf	(btemp+11)^0,c
 16250                           
 16251                           ;stkvar	_fmt @ sp[(-32)+-4]
 16252  012D72  0EDC               	movlw	-36
 16253  012D74  006F FF8F FFD9     	movff	plusw1,fsr2l
 16254  012D7A  0EDD               	movlw	-35
 16255  012D7C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16256  012D82  006F FF7B FFF6     	movff	postinc2,tblptrl
 16257  012D88  006F FF77 FFF7     	movff	postdec2,tblptrh
 16258  012D8E                     	if	0	;tblptru may be non-zero
 16259  012D8E                     	endif
 16260  012D8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16261  012D8E  0E00               	movlw	low (__mediumconst shr (0+16))
 16262  012D90  6EF8               	movwf	tblptru,c
 16263  012D92                     	endif
 16264  012D92  0008               	tblrd		*
 16265  012D94  50F5               	movf	tablat,w,c
 16266  012D96  6E09               	movwf	(btemp+8)^0,c
 16267  012D98  6A0A               	clrf	(btemp+9)^0,c
 16268  012D9A  500B               	movf	(btemp+10)^0,w,c
 16269  012D9C  2609               	addwf	(btemp+8)^0,f,c
 16270  012D9E  500C               	movf	(btemp+11)^0,w,c
 16271  012DA0  220A               	addwfc	(btemp+9)^0,f,c
 16272  012DA2  500A               	movf	(btemp+9)^0,w,c
 16273  012DA4  E106               	bnz	u13110
 16274  012DA6  0E1A               	movlw	26
 16275  012DA8  5C09               	subwf	(btemp+8)^0,w,c
 16276  012DAA  B0D8               	btfsc	status,0,c
 16277  012DAC  D002               	goto	u13110
 16278  012DAE  0E01               	movlw	1
 16279  012DB0  D001               	goto	u13120
 16280  012DB2                     u13110:
 16281  012DB2  0E00               	movlw	0
 16282  012DB4                     u13120:
 16283  012DB4  6E0B               	movwf	(btemp+10)^0,c
 16284  012DB6  6A0C               	clrf	(btemp+11)^0,c
 16285                           
 16286                           ;stkvar	_vfpfcnvrt$6231 @ sp[(-32)+2]
 16287  012DB8  0EE2               	movlw	-30
 16288  012DBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16289  012DC0  0EE3               	movlw	-29
 16290  012DC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16291                           
 16292                           ;stkvar	_vfpfcnvrt$6231 @ sp[(-32)+2]
 16293  012DC8  0EE2               	movlw	-30
 16294  012DCA  006F FF8C  F001    	movff	plusw1,btemp
 16295  012DD0  0EE3               	movlw	-29
 16296  012DD2  50E3               	movf	plusw1,w,c
 16297  012DD4  1001               	iorwf	btemp^0,w,c
 16298                           
 16299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 16300                           ;stkvar	_ap @ sp[(-32)+-6]
 16301                           
 16302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 16303                           
 16304                           ;stkvar	_f @ sp[(-32)+22]
 16305                           
 16306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 16307                           ;stkvar	_ap @ sp[(-32)+-6]
 16308  012DD6  0EDA               	movlw	-38
 16309  012DD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16310  012DDE  0EDB               	movlw	-37
 16311  012DE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16312  012DE6  0E04               	movlw	4
 16313  012DE8  5EDE               	subwf	postinc2,f,c
 16314  012DEA  0E00               	movlw	0
 16315  012DEC  5ADD               	subwfb	postdec2,f,c
 16316  012DEE  006F FF78  F00B    	movff	postinc2,btemp+10
 16317  012DF4  006F FF74  F00C    	movff	postdec2,btemp+11
 16318  012DFA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16319  012E00  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16320  012E06  006F FF78  F009    	movff	postinc2,btemp+8
 16321  012E0C  006F FF78  F00A    	movff	postinc2,btemp+9
 16322  012E12  006F FF78  F00B    	movff	postinc2,btemp+10
 16323  012E18  006F FF78  F00C    	movff	postinc2,btemp+11
 16324                           
 16325                           ;stkvar	_f @ sp[(-32)+22]
 16326  012E1E  0EF6               	movlw	-10
 16327  012E20  0060  F027  FFE3   	movff	btemp+8,plusw1
 16328  012E26  0EF7               	movlw	-9
 16329  012E28  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16330  012E2E  0EF8               	movlw	-8
 16331  012E30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16332  012E36  0EF9               	movlw	-7
 16333  012E38  0060  F033  FFE3   	movff	btemp+11,plusw1
 16334                           
 16335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 16336                           ;stkvar	_fmt @ sp[(-32)+-4]
 16337  012E3E  0EDC               	movlw	-36
 16338  012E40  006F FF8F FFD9     	movff	plusw1,fsr2l
 16339  012E46  0EDD               	movlw	-35
 16340  012E48  006F FF8F FFDA     	movff	plusw1,fsr2h
 16341  012E4E  0E02               	movlw	2
 16342  012E50  26DE               	addwf	postinc2,f,c
 16343  012E52  0E00               	movlw	0
 16344  012E54  22DD               	addwfc	postdec2,f,c
 16345  012E56  D736               	goto	l13772
 16346  012E58                     l13796:
 16347                           
 16348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 16349                           ;stkvar	_fmt @ sp[(-32)+-4]
 16350  012E58  0EDC               	movlw	-36
 16351  012E5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16352  012E60  0EDD               	movlw	-35
 16353  012E62  006F FF8F FFDA     	movff	plusw1,fsr2h
 16354  012E68  006F FF7B FFF6     	movff	postinc2,tblptrl
 16355  012E6E  006F FF77 FFF7     	movff	postdec2,tblptrh
 16356  012E74                     	if	0	;tblptru may be non-zero
 16357  012E74                     	endif
 16358  012E74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16359  012E74  0E00               	movlw	low (__mediumconst shr (0+16))
 16360  012E76  6EF8               	movwf	tblptru,c
 16361  012E78                     	endif
 16362  012E78  0008               	tblrd		*
 16363  012E7A  50F5               	movf	tablat,w,c
 16364  012E7C  0A73               	xorlw	115
 16365  012E7E  A4D8               	btfss	status,2,c
 16366  012E80  D042               	goto	l13806
 16367                           
 16368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 16369                           ;stkvar	_fmt @ sp[(-32)+-4]
 16370  012E82  0EDC               	movlw	-36
 16371  012E84  006F FF8F FFD9     	movff	plusw1,fsr2l
 16372  012E8A  0EDD               	movlw	-35
 16373  012E8C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16374  012E92  2ADE               	incf	postinc2,f,c
 16375  012E94  0E00               	movlw	0
 16376  012E96  22DD               	addwfc	postdec2,f,c
 16377                           
 16378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 16379                           ;stkvar	_ap @ sp[(-32)+-6]
 16380  012E98  0EDA               	movlw	-38
 16381  012E9A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16382  012EA0  0EDB               	movlw	-37
 16383  012EA2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16384  012EA8  0E02               	movlw	2
 16385  012EAA  5EDE               	subwf	postinc2,f,c
 16386  012EAC  0E00               	movlw	0
 16387  012EAE  5ADD               	subwfb	postdec2,f,c
 16388  012EB0  006F FF78  F00B    	movff	postinc2,btemp+10
 16389  012EB6  006F FF74  F00C    	movff	postdec2,btemp+11
 16390  012EBC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16391  012EC2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16392  012EC8  006F FF78  F00B    	movff	postinc2,btemp+10
 16393  012ECE  006F FF74  F00C    	movff	postdec2,btemp+11
 16394                           
 16395                           ;stkvar	_cp @ sp[(-32)+29]
 16396  012ED4  0EFE               	movlw	-2
 16397  012ED6  0060  F033  FFE3   	movff	btemp+11,plusw1
 16398  012EDC  0EFD               	movlw	-3
 16399  012EDE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16400                           
 16401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 16402                           ;stkvar	_cp @ sp[(-32)+29]
 16403  012EE4  0EFD               	movlw	-3
 16404  012EE6  006F FF8F FFE6     	movff	plusw1,postinc1
 16405  012EEC  006F FF8F FFE6     	movff	plusw1,postinc1
 16406                           
 16407                           ;stkvar	_fp @ sp[(-34)+-2]
 16408  012EF2  0EDC               	movlw	-36
 16409  012EF4  006F FF8F FFE6     	movff	plusw1,postinc1
 16410  012EFA  006F FF8F FFE6     	movff	plusw1,postinc1
 16411  012F00  ECE9  F0BC         	call	_stoa	;wreg free
 16412  012F04  D2AF               	goto	l2626
 16413  012F06                     l13806:
 16414                           
 16415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 16416                           ;stkvar	_fmt @ sp[(-32)+-4]
 16417  012F06  0EDC               	movlw	-36
 16418  012F08  006F FF8F FFD9     	movff	plusw1,fsr2l
 16419  012F0E  0EDD               	movlw	-35
 16420  012F10  006F FF8F FFDA     	movff	plusw1,fsr2h
 16421  012F16  006F FF7B FFF6     	movff	postinc2,tblptrl
 16422  012F1C  006F FF77 FFF7     	movff	postdec2,tblptrh
 16423  012F22                     	if	0	;tblptru may be non-zero
 16424  012F22                     	endif
 16425  012F22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16426  012F22  0E00               	movlw	low (__mediumconst shr (0+16))
 16427  012F24  6EF8               	movwf	tblptru,c
 16428  012F26                     	endif
 16429  012F26  0008               	tblrd		*
 16430  012F28  50F5               	movf	tablat,w,c
 16431  012F2A  0A75               	xorlw	117
 16432  012F2C  A4D8               	btfss	status,2,c
 16433  012F2E  D07C               	goto	l13816
 16434                           
 16435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 16436                           ;stkvar	_fmt @ sp[(-32)+-4]
 16437  012F30  0EDC               	movlw	-36
 16438  012F32  006F FF8F FFD9     	movff	plusw1,fsr2l
 16439  012F38  0EDD               	movlw	-35
 16440  012F3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16441  012F40  2ADE               	incf	postinc2,f,c
 16442  012F42  0E00               	movlw	0
 16443  012F44  22DD               	addwfc	postdec2,f,c
 16444                           
 16445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 16446                           ;stkvar	_ap @ sp[(-32)+-6]
 16447  012F46  0EDA               	movlw	-38
 16448  012F48  006F FF8F FFD9     	movff	plusw1,fsr2l
 16449  012F4E  0EDB               	movlw	-37
 16450  012F50  006F FF8F FFDA     	movff	plusw1,fsr2h
 16451  012F56  0E02               	movlw	2
 16452  012F58  5EDE               	subwf	postinc2,f,c
 16453  012F5A  0E00               	movlw	0
 16454  012F5C  5ADD               	subwfb	postdec2,f,c
 16455  012F5E  006F FF78  F00B    	movff	postinc2,btemp+10
 16456  012F64  006F FF74  F00C    	movff	postdec2,btemp+11
 16457  012F6A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16458  012F70  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16459  012F76  006F FF78  F00B    	movff	postinc2,btemp+10
 16460  012F7C  006F FF74  F00C    	movff	postdec2,btemp+11
 16461  012F82  500B               	movf	(btemp+10)^0,w,c
 16462  012F84  6E11               	movwf	(btemp+16)^0,c
 16463  012F86  500C               	movf	(btemp+11)^0,w,c
 16464  012F88  6E12               	movwf	(btemp+17)^0,c
 16465  012F8A  6A13               	clrf	(btemp+18)^0,c
 16466  012F8C  6A14               	clrf	(btemp+19)^0,c
 16467  012F8E  6A15               	clrf	(btemp+20)^0,c
 16468  012F90  6A16               	clrf	(btemp+21)^0,c
 16469  012F92  6A17               	clrf	(btemp+22)^0,c
 16470  012F94  6A18               	clrf	(btemp+23)^0,c
 16471                           
 16472                           ;stkvar	_llu @ sp[(-32)+6]
 16473  012F96  0EE6               	movlw	-26
 16474  012F98  0060  F047  FFE3   	movff	btemp+16,plusw1
 16475  012F9E  0EE7               	movlw	-25
 16476  012FA0  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16477  012FA6  0EE8               	movlw	-24
 16478  012FA8  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16479  012FAE  0EE9               	movlw	-23
 16480  012FB0  0060  F053  FFE3   	movff	btemp+19,plusw1
 16481  012FB6  0EEA               	movlw	-22
 16482  012FB8  0060  F057  FFE3   	movff	btemp+20,plusw1
 16483  012FBE  0EEB               	movlw	-21
 16484  012FC0  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16485  012FC6  0EEC               	movlw	-20
 16486  012FC8  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16487  012FCE  0EED               	movlw	-19
 16488  012FD0  0060  F063  FFE3   	movff	btemp+23,plusw1
 16489                           
 16490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 16491                           ;stkvar	_llu @ sp[(-32)+6]
 16492  012FD6  50E1               	movf	fsr1l,w,c
 16493  012FD8  0FE6               	addlw	-26
 16494  012FDA  6ED9               	movwf	fsr2l,c
 16495  012FDC  50E2               	movf	fsr1h,w,c
 16496  012FDE  6EDA               	movwf	fsr2h,c
 16497  012FE0  0EFF               	movlw	255
 16498  012FE2  22DA               	addwfc	fsr2h,f,c
 16499  012FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 16500  012FEA  006F FF7B FFE6     	movff	postinc2,postinc1
 16501  012FF0  006F FF7B FFE6     	movff	postinc2,postinc1
 16502  012FF6  006F FF7B FFE6     	movff	postinc2,postinc1
 16503  012FFC  006F FF7B FFE6     	movff	postinc2,postinc1
 16504  013002  006F FF7B FFE6     	movff	postinc2,postinc1
 16505  013008  006F FF7B FFE6     	movff	postinc2,postinc1
 16506  01300E  006F FF7B FFE6     	movff	postinc2,postinc1
 16507                           
 16508                           ;stkvar	_fp @ sp[(-40)+-2]
 16509  013014  0ED6               	movlw	-42
 16510  013016  006F FF8F FFE6     	movff	plusw1,postinc1
 16511  01301C  006F FF8F FFE6     	movff	plusw1,postinc1
 16512  013022  ECD1  F0B6         	call	_utoa	;wreg free
 16513  013026  D21E               	goto	l2626
 16514  013028                     l13816:
 16515                           
 16516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 16517  013028  0E02               	movlw	2
 16518  01302A  6EE6               	movwf	postinc1,c
 16519  01302C  0E00               	movlw	0
 16520  01302E  6EE6               	movwf	postinc1,c
 16521  013030  0EF3               	movlw	low STR_104
 16522  013032  6EE6               	movwf	postinc1,c
 16523  013034  0EFF               	movlw	high STR_104
 16524  013036  6EE6               	movwf	postinc1,c
 16525                           
 16526                           ;stkvar	_fmt @ sp[(-36)+-4]
 16527  013038  0ED8               	movlw	-40
 16528  01303A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16529  013040  0ED9               	movlw	-39
 16530  013042  006F FF8F FFDA     	movff	plusw1,fsr2h
 16531  013048  006F FF78  F00B    	movff	postinc2,btemp+10
 16532  01304E  006F FF74  F00C    	movff	postdec2,btemp+11
 16533  013054  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16534  01305A  0060  F033  FFE6   	movff	btemp+11,postinc1
 16535  013060  EC05  F0C3         	call	_strncmp	;wreg free
 16536  013064  5001               	movf	btemp^0,w,c
 16537  013066  1002               	iorwf	(btemp+1)^0,w,c
 16538  013068  A4D8               	btfss	status,2,c
 16539  01306A  D039               	goto	l13826
 16540                           
 16541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 16542                           ;stkvar	_fmt @ sp[(-32)+-4]
 16543  01306C  0EDC               	movlw	-36
 16544  01306E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16545  013074  0EDD               	movlw	-35
 16546  013076  006F FF8F FFDA     	movff	plusw1,fsr2h
 16547  01307C  0E02               	movlw	2
 16548  01307E  26DE               	addwf	postinc2,f,c
 16549  013080  0E00               	movlw	0
 16550  013082  22DD               	addwfc	postdec2,f,c
 16551                           
 16552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 16553                           ;stkvar	_ap @ sp[(-32)+-6]
 16554  013084  0EDA               	movlw	-38
 16555  013086  006F FF8F FFD9     	movff	plusw1,fsr2l
 16556  01308C  0EDB               	movlw	-37
 16557  01308E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16558  013094  0E04               	movlw	4
 16559  013096  5EDE               	subwf	postinc2,f,c
 16560  013098  0E00               	movlw	0
 16561  01309A  5ADD               	subwfb	postdec2,f,c
 16562  01309C  006F FF78  F00B    	movff	postinc2,btemp+10
 16563  0130A2  006F FF74  F00C    	movff	postdec2,btemp+11
 16564  0130A8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16565  0130AE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16566  0130B4  006F FF78  F009    	movff	postinc2,btemp+8
 16567  0130BA  006F FF78  F00A    	movff	postinc2,btemp+9
 16568  0130C0  006F FF78  F00B    	movff	postinc2,btemp+10
 16569  0130C6  006F FF78  F00C    	movff	postinc2,btemp+11
 16570  0130CC  5009               	movf	(btemp+8)^0,w,c
 16571  0130CE  6E11               	movwf	(btemp+16)^0,c
 16572  0130D0  500A               	movf	(btemp+9)^0,w,c
 16573  0130D2  6E12               	movwf	(btemp+17)^0,c
 16574  0130D4  500B               	movf	(btemp+10)^0,w,c
 16575  0130D6  6E13               	movwf	(btemp+18)^0,c
 16576  0130D8  500C               	movf	(btemp+11)^0,w,c
 16577  0130DA  6E14               	movwf	(btemp+19)^0,c
 16578  0130DC  D758               	goto	L15
 16579  0130DE                     l13826:
 16580                           
 16581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 16582                           ;stkvar	_fmt @ sp[(-32)+-4]
 16583  0130DE  0EDC               	movlw	-36
 16584  0130E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16585  0130E6  0EDD               	movlw	-35
 16586  0130E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16587  0130EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 16588  0130F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 16589  0130FA                     	if	0	;tblptru may be non-zero
 16590  0130FA                     	endif
 16591  0130FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16592  0130FA  0E00               	movlw	low (__mediumconst shr (0+16))
 16593  0130FC  6EF8               	movwf	tblptru,c
 16594  0130FE                     	endif
 16595  0130FE  0008               	tblrd		*
 16596  013100  50F5               	movf	tablat,w,c
 16597  013102  0A78               	xorlw	120
 16598  013104  B4D8               	btfsc	status,2,c
 16599  013106  D015               	goto	u13180
 16600                           
 16601                           ;stkvar	_fmt @ sp[(-32)+-4]
 16602  013108  0EDC               	movlw	-36
 16603  01310A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16604  013110  0EDD               	movlw	-35
 16605  013112  006F FF8F FFDA     	movff	plusw1,fsr2h
 16606  013118  006F FF7B FFF6     	movff	postinc2,tblptrl
 16607  01311E  006F FF77 FFF7     	movff	postdec2,tblptrh
 16608  013124                     	if	0	;tblptru may be non-zero
 16609  013124                     	endif
 16610  013124                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16611  013124  0E00               	movlw	low (__mediumconst shr (0+16))
 16612  013126  6EF8               	movwf	tblptru,c
 16613  013128                     	endif
 16614  013128  0008               	tblrd		*
 16615  01312A  50F5               	movf	tablat,w,c
 16616  01312C  0A58               	xorlw	88
 16617  01312E  A4D8               	btfss	status,2,c
 16618  013130  D094               	goto	l13840
 16619  013132                     u13180:
 16620                           
 16621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 16622                           ;stkvar	_fmt @ sp[(-32)+-4]
 16623  013132  0EDC               	movlw	-36
 16624  013134  006F FF8F FFD9     	movff	plusw1,fsr2l
 16625  01313A  0EDD               	movlw	-35
 16626  01313C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16627  013142  006F FF7B FFF6     	movff	postinc2,tblptrl
 16628  013148  006F FF77 FFF7     	movff	postdec2,tblptrh
 16629  01314E                     	if	0	;tblptru may be non-zero
 16630  01314E                     	endif
 16631  01314E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16632  01314E  0E00               	movlw	low (__mediumconst shr (0+16))
 16633  013150  6EF8               	movwf	tblptru,c
 16634  013152                     	endif
 16635                           
 16636                           ;stkvar	_c @ sp[(-32)+31]
 16637  013152  0008               	tblrd		*
 16638  013154  0EFF               	movlw	-1
 16639  013156  006F FFD7 FFE3     	movff	tablat,plusw1
 16640                           
 16641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 16642                           ;stkvar	_fmt @ sp[(-32)+-4]
 16643  01315C  0EDC               	movlw	-36
 16644  01315E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16645  013164  0EDD               	movlw	-35
 16646  013166  006F FF8F FFDA     	movff	plusw1,fsr2h
 16647  01316C  2ADE               	incf	postinc2,f,c
 16648  01316E  0E00               	movlw	0
 16649  013170  22DD               	addwfc	postdec2,f,c
 16650                           
 16651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 16652                           ;stkvar	_ap @ sp[(-32)+-6]
 16653  013172  0EDA               	movlw	-38
 16654  013174  006F FF8F FFD9     	movff	plusw1,fsr2l
 16655  01317A  0EDB               	movlw	-37
 16656  01317C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16657  013182  0E02               	movlw	2
 16658  013184  5EDE               	subwf	postinc2,f,c
 16659  013186  0E00               	movlw	0
 16660  013188  5ADD               	subwfb	postdec2,f,c
 16661  01318A  006F FF78  F00B    	movff	postinc2,btemp+10
 16662  013190  006F FF74  F00C    	movff	postdec2,btemp+11
 16663  013196  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16664  01319C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16665  0131A2  006F FF78  F00B    	movff	postinc2,btemp+10
 16666  0131A8  006F FF74  F00C    	movff	postdec2,btemp+11
 16667  0131AE  500B               	movf	(btemp+10)^0,w,c
 16668  0131B0  6E11               	movwf	(btemp+16)^0,c
 16669  0131B2  500C               	movf	(btemp+11)^0,w,c
 16670  0131B4  6E12               	movwf	(btemp+17)^0,c
 16671  0131B6  6A13               	clrf	(btemp+18)^0,c
 16672  0131B8  6A14               	clrf	(btemp+19)^0,c
 16673  0131BA  6A15               	clrf	(btemp+20)^0,c
 16674  0131BC  6A16               	clrf	(btemp+21)^0,c
 16675  0131BE  6A17               	clrf	(btemp+22)^0,c
 16676  0131C0  6A18               	clrf	(btemp+23)^0,c
 16677                           
 16678                           ;stkvar	_llu @ sp[(-32)+6]
 16679  0131C2  0EE6               	movlw	-26
 16680  0131C4  0060  F047  FFE3   	movff	btemp+16,plusw1
 16681  0131CA  0EE7               	movlw	-25
 16682  0131CC  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16683  0131D2  0EE8               	movlw	-24
 16684  0131D4  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16685  0131DA  0EE9               	movlw	-23
 16686  0131DC  0060  F053  FFE3   	movff	btemp+19,plusw1
 16687  0131E2  0EEA               	movlw	-22
 16688  0131E4  0060  F057  FFE3   	movff	btemp+20,plusw1
 16689  0131EA  0EEB               	movlw	-21
 16690  0131EC  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16691  0131F2  0EEC               	movlw	-20
 16692  0131F4  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16693  0131FA  0EED               	movlw	-19
 16694  0131FC  0060  F063  FFE3   	movff	btemp+23,plusw1
 16695                           
 16696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 16697                           ;stkvar	_c @ sp[(-32)+31]
 16698  013202  0EFF               	movlw	-1
 16699  013204  50E3               	movf	plusw1,w,c
 16700  013206  6EE6               	movwf	postinc1,c
 16701                           
 16702                           ;stkvar	_llu @ sp[(-33)+6]
 16703  013208  50E1               	movf	fsr1l,w,c
 16704  01320A  0FE5               	addlw	-27
 16705  01320C  6ED9               	movwf	fsr2l,c
 16706  01320E  50E2               	movf	fsr1h,w,c
 16707  013210  6EDA               	movwf	fsr2h,c
 16708  013212  0EFF               	movlw	255
 16709  013214  22DA               	addwfc	fsr2h,f,c
 16710  013216  006F FF7B FFE6     	movff	postinc2,postinc1
 16711  01321C  006F FF7B FFE6     	movff	postinc2,postinc1
 16712  013222  006F FF7B FFE6     	movff	postinc2,postinc1
 16713  013228  006F FF7B FFE6     	movff	postinc2,postinc1
 16714  01322E  006F FF7B FFE6     	movff	postinc2,postinc1
 16715  013234  006F FF7B FFE6     	movff	postinc2,postinc1
 16716  01323A  006F FF7B FFE6     	movff	postinc2,postinc1
 16717  013240  006F FF7B FFE6     	movff	postinc2,postinc1
 16718                           
 16719                           ;stkvar	_fp @ sp[(-41)+-2]
 16720  013246  0ED5               	movlw	-43
 16721  013248  006F FF8F FFE6     	movff	plusw1,postinc1
 16722  01324E  006F FF8F FFE6     	movff	plusw1,postinc1
 16723  013254  EC3E  F0B3         	call	_xtoa	;wreg free
 16724  013258  D105               	goto	l2626
 16725  01325A                     l13840:
 16726                           
 16727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 16728  01325A  0E02               	movlw	2
 16729  01325C  6EE6               	movwf	postinc1,c
 16730  01325E  0E00               	movlw	0
 16731  013260  6EE6               	movwf	postinc1,c
 16732  013262  0EF6               	movlw	low STR_109
 16733  013264  6EE6               	movwf	postinc1,c
 16734  013266  0EFF               	movlw	high STR_109
 16735  013268  6EE6               	movwf	postinc1,c
 16736                           
 16737                           ;stkvar	_fmt @ sp[(-36)+-4]
 16738  01326A  0ED8               	movlw	-40
 16739  01326C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16740  013272  0ED9               	movlw	-39
 16741  013274  006F FF8F FFDA     	movff	plusw1,fsr2h
 16742  01327A  006F FF78  F00B    	movff	postinc2,btemp+10
 16743  013280  006F FF74  F00C    	movff	postdec2,btemp+11
 16744  013286  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16745  01328C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16746  013292  EC05  F0C3         	call	_strncmp	;wreg free
 16747  013296  5001               	movf	btemp^0,w,c
 16748  013298  1002               	iorwf	(btemp+1)^0,w,c
 16749  01329A  B4D8               	btfsc	status,2,c
 16750  01329C  D022               	goto	u13200
 16751  01329E  0E02               	movlw	2
 16752  0132A0  6EE6               	movwf	postinc1,c
 16753  0132A2  0E00               	movlw	0
 16754  0132A4  6EE6               	movwf	postinc1,c
 16755  0132A6  0EE7               	movlw	low STR_113
 16756  0132A8  6EE6               	movwf	postinc1,c
 16757  0132AA  0EFF               	movlw	high STR_113
 16758  0132AC  6EE6               	movwf	postinc1,c
 16759                           
 16760                           ;stkvar	_fmt @ sp[(-36)+-4]
 16761  0132AE  0ED8               	movlw	-40
 16762  0132B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16763  0132B6  0ED9               	movlw	-39
 16764  0132B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16765  0132BE  006F FF78  F00B    	movff	postinc2,btemp+10
 16766  0132C4  006F FF74  F00C    	movff	postdec2,btemp+11
 16767  0132CA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16768  0132D0  0060  F033  FFE6   	movff	btemp+11,postinc1
 16769  0132D6  EC05  F0C3         	call	_strncmp	;wreg free
 16770  0132DA  5001               	movf	btemp^0,w,c
 16771  0132DC  1002               	iorwf	(btemp+1)^0,w,c
 16772  0132DE  A4D8               	btfss	status,2,c
 16773  0132E0  D058               	goto	l13854
 16774  0132E2                     u13200:
 16775                           
 16776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 16777                           ;stkvar	_fmt @ sp[(-32)+-4]
 16778  0132E2  0EDC               	movlw	-36
 16779  0132E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 16780  0132EA  0EDD               	movlw	-35
 16781  0132EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 16782  0132F2  006F FF78  F00B    	movff	postinc2,btemp+10
 16783  0132F8  006F FF74  F00C    	movff	postdec2,btemp+11
 16784  0132FE  0E01               	movlw	1
 16785  013300  260B               	addwf	(btemp+10)^0,f,c
 16786  013302  0E00               	movlw	0
 16787  013304  220C               	addwfc	(btemp+11)^0,f,c
 16788  013306  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16789  01330C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16790  013312                     	if	0	;tblptru may be non-zero
 16791  013312                     	endif
 16792  013312                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16793  013312  0E00               	movlw	low (__mediumconst shr (0+16))
 16794  013314  6EF8               	movwf	tblptru,c
 16795  013316                     	endif
 16796                           
 16797                           ;stkvar	_c @ sp[(-32)+31]
 16798  013316  0008               	tblrd		*
 16799  013318  0EFF               	movlw	-1
 16800  01331A  006F FFD7 FFE3     	movff	tablat,plusw1
 16801                           
 16802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 16803                           ;stkvar	_fmt @ sp[(-32)+-4]
 16804  013320  0EDC               	movlw	-36
 16805  013322  006F FF8F FFD9     	movff	plusw1,fsr2l
 16806  013328  0EDD               	movlw	-35
 16807  01332A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16808  013330  0E02               	movlw	2
 16809  013332  26DE               	addwf	postinc2,f,c
 16810  013334  0E00               	movlw	0
 16811  013336  22DD               	addwfc	postdec2,f,c
 16812                           
 16813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 16814                           ;stkvar	_ap @ sp[(-32)+-6]
 16815  013338  0EDA               	movlw	-38
 16816  01333A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16817  013340  0EDB               	movlw	-37
 16818  013342  006F FF8F FFDA     	movff	plusw1,fsr2h
 16819  013348  0E04               	movlw	4
 16820  01334A  5EDE               	subwf	postinc2,f,c
 16821  01334C  0E00               	movlw	0
 16822  01334E  5ADD               	subwfb	postdec2,f,c
 16823  013350  006F FF78  F00B    	movff	postinc2,btemp+10
 16824  013356  006F FF74  F00C    	movff	postdec2,btemp+11
 16825  01335C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16826  013362  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16827  013368  006F FF78  F009    	movff	postinc2,btemp+8
 16828  01336E  006F FF78  F00A    	movff	postinc2,btemp+9
 16829  013374  006F FF78  F00B    	movff	postinc2,btemp+10
 16830  01337A  006F FF78  F00C    	movff	postinc2,btemp+11
 16831  013380  5009               	movf	(btemp+8)^0,w,c
 16832  013382  6E11               	movwf	(btemp+16)^0,c
 16833  013384  500A               	movf	(btemp+9)^0,w,c
 16834  013386  6E12               	movwf	(btemp+17)^0,c
 16835  013388  500B               	movf	(btemp+10)^0,w,c
 16836  01338A  6E13               	movwf	(btemp+18)^0,c
 16837  01338C  500C               	movf	(btemp+11)^0,w,c
 16838  01338E  6E14               	movwf	(btemp+19)^0,c
 16839  013390  D714               	goto	L16
 16840  013392                     l13854:
 16841                           
 16842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 16843                           ;stkvar	_fmt @ sp[(-32)+-4]
 16844  013392  0EDC               	movlw	-36
 16845  013394  006F FF8F FFD9     	movff	plusw1,fsr2l
 16846  01339A  0EDD               	movlw	-35
 16847  01339C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16848  0133A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 16849  0133A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 16850  0133AE                     	if	0	;tblptru may be non-zero
 16851  0133AE                     	endif
 16852  0133AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16853  0133AE  0E00               	movlw	low (__mediumconst shr (0+16))
 16854  0133B0  6EF8               	movwf	tblptru,c
 16855  0133B2                     	endif
 16856  0133B2  0008               	tblrd		*
 16857  0133B4  50F5               	movf	tablat,w,c
 16858  0133B6  0A25               	xorlw	37
 16859  0133B8  A4D8               	btfss	status,2,c
 16860  0133BA  D01A               	goto	l13864
 16861                           
 16862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 16863                           ;stkvar	_fmt @ sp[(-32)+-4]
 16864  0133BC  0EDC               	movlw	-36
 16865  0133BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 16866  0133C4  0EDD               	movlw	-35
 16867  0133C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 16868  0133CC  2ADE               	incf	postinc2,f,c
 16869  0133CE  0E00               	movlw	0
 16870  0133D0  22DD               	addwfc	postdec2,f,c
 16871                           
 16872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 16873                           ;stkvar	_fp @ sp[(-32)+-2]
 16874  0133D2  0EDE               	movlw	-34
 16875  0133D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16876  0133DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16877  0133E0  0E25               	movlw	37
 16878  0133E2  6EE6               	movwf	postinc1,c
 16879  0133E4  0E00               	movlw	0
 16880  0133E6  6EE6               	movwf	postinc1,c
 16881  0133E8  EC91  F0D2         	call	_fputc	;wreg free
 16882  0133EC                     l13860:
 16883                           
 16884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 16885  0133EC  0E01               	movlw	1
 16886  0133EE  D00C               	goto	L17
 16887  0133F0                     l13864:
 16888                           
 16889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 16890                           ;stkvar	_fmt @ sp[(-32)+-4]
 16891  0133F0  0EDC               	movlw	-36
 16892  0133F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16893  0133F8  0EDD               	movlw	-35
 16894  0133FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16895  013400  2ADE               	incf	postinc2,f,c
 16896  013402  0E00               	movlw	0
 16897  013404  22DD               	addwfc	postdec2,f,c
 16898                           
 16899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 16900  013406  0E00               	movlw	0
 16901  013408                     L17:
 16902  013408  6E01               	movwf	btemp^0,c
 16903  01340A  0E00               	movlw	0
 16904  01340C  6E02               	movwf	(btemp+1)^0,c
 16905  01340E  D02A               	goto	l2626
 16906  013410                     l13870:
 16907                           
 16908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 16909                           ;stkvar	_fp @ sp[(-32)+-2]
 16910  013410  0EDE               	movlw	-34
 16911  013412  006F FF8F FFE6     	movff	plusw1,postinc1
 16912  013418  006F FF8F FFE6     	movff	plusw1,postinc1
 16913                           
 16914                           ;stkvar	_fmt @ sp[(-34)+-4]
 16915  01341E  0EDA               	movlw	-38
 16916  013420  006F FF8F FFD9     	movff	plusw1,fsr2l
 16917  013426  0EDB               	movlw	-37
 16918  013428  006F FF8F FFDA     	movff	plusw1,fsr2h
 16919  01342E  006F FF7B FFF6     	movff	postinc2,tblptrl
 16920  013434  006F FF77 FFF7     	movff	postdec2,tblptrh
 16921  01343A                     	if	0	;tblptru may be non-zero
 16922  01343A                     	endif
 16923  01343A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16924  01343A  0E00               	movlw	low (__mediumconst shr (0+16))
 16925  01343C  6EF8               	movwf	tblptru,c
 16926  01343E                     	endif
 16927  01343E  0008               	tblrd		*
 16928  013440  50F5               	movf	tablat,w,c
 16929  013442  6EE6               	movwf	postinc1,c
 16930  013444  0E00               	movlw	0
 16931  013446  6EE6               	movwf	postinc1,c
 16932  013448  EC91  F0D2         	call	_fputc	;wreg free
 16933                           
 16934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 16935                           ;stkvar	_fmt @ sp[(-32)+-4]
 16936  01344C  0EDC               	movlw	-36
 16937  01344E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16938  013454  0EDD               	movlw	-35
 16939  013456  006F FF8F FFDA     	movff	plusw1,fsr2h
 16940  01345C  2ADE               	incf	postinc2,f,c
 16941  01345E  0E00               	movlw	0
 16942  013460  22DD               	addwfc	postdec2,f,c
 16943  013462  D7C4               	goto	l13860
 16944  013464                     l2626:
 16945                           
 16946                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 16947  013464  0EDA               	movlw	218
 16948  013466  26E1               	addwf	fsr1l,f,c
 16949  013468  0EFF               	movlw	255
 16950  01346A  22E2               	addwfc	fsr1h,f,c
 16951  01346C  0012               	return		;funcret
 16952  01346E                     __end_of_vfpfcnvrt:
 16953                           	opt callstack 0
 16954                           
 16955 ;; *************** function _xtoa *****************
 16956 ;; Defined at:
 16957 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16958 ;; Parameters:    Size  Location     Type
 16959 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16960 ;;		 -> f(6), NULL(0), 
 16961 ;;  d               8  [STACK] unsigned long long 
 16962 ;;  x               1  [STACK] unsigned char 
 16963 ;; Auto vars:     Size  Location     Type
 16964 ;;  n               8  [STACK] unsigned long long 
 16965 ;;  c               2  [STACK] int 
 16966 ;;  i               2  [STACK] int 
 16967 ;;  w               2  [STACK] int 
 16968 ;;  p               2  [STACK] int 
 16969 ;; Return value:  Size  Location     Type
 16970 ;;                  2  [STACK] int 
 16971 ;; Registers used:
 16972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 16973 ;; Tracked objects:
 16974 ;;		On entry : 0/0
 16975 ;;		On exit  : 0/0
 16976 ;;		Unchanged: 0/0
 16977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16982 ;;Total ram usage:        0 bytes
 16983 ;; Hardware stack levels used:    1
 16984 ;; Hardware stack levels required when called:   20
 16985 ;; This function calls:
 16986 ;;		_isalpha
 16987 ;;		_isupper
 16988 ;;		_pad
 16989 ;;		_toupper
 16990 ;; This function is called by:
 16991 ;;		_vfpfcnvrt
 16992 ;; This function uses a reentrant model
 16993 ;;
 16994                           
 16995                           	psect	text66
 16996  01667C                     __ptext66:
 16997                           	opt callstack 0
 16998  01667C                     _xtoa:
 16999                           	opt callstack 0
 17000                           
 17001                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17002  01667C  0E14               	movlw	20
 17003  01667E  26E1               	addwf	fsr1l,f,c
 17004  016680  0E00               	movlw	0
 17005  016682  22E2               	addwfc	fsr1h,f,c
 17006                           
 17007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 17008                           
 17009                           ;incstack = 0
 17010 ;; hardware stack exceeded
 17011  016684  AE3D               	btfss	(_prec+1)^0,7,c
 17012                           
 17013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 17014  016686  923E               	bcf	_flags^0,1,c
 17015                           
 17016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 17017  016688  BE3D               	btfsc	(_prec+1)^0,7,c
 17018  01668A  D005               	goto	u12740
 17019  01668C  503D               	movf	(_prec+1)^0,w,c
 17020  01668E  E110               	bnz	l13590
 17021  016690  043C               	decf	_prec^0,w,c
 17022  016692  B0D8               	btfsc	status,0,c
 17023  016694  D00D               	goto	l13590
 17024  016696                     u12740:
 17025  016696  0E01               	movlw	1
 17026  016698  6E0B               	movwf	(btemp+10)^0,c
 17027  01669A  0E00               	movlw	0
 17028  01669C  6E0C               	movwf	(btemp+11)^0,c
 17029                           
 17030                           ;stkvar	_p @ sp[(-20)+18]
 17031  01669E  0EFE               	movlw	-2
 17032  0166A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17033  0166A6  0EFF               	movlw	-1
 17034  0166A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17035  0166AE  D008               	goto	l2576
 17036  0166B0                     l13590:
 17037                           
 17038                           ;stkvar	_p @ sp[(-20)+18]
 17039  0166B0  0EFE               	movlw	-2
 17040  0166B2  0060  F0F3  FFE3   	movff	_prec,plusw1
 17041  0166B8  0EFF               	movlw	-1
 17042  0166BA  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17043  0166C0                     l2576:
 17044                           
 17045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 17046                           ;stkvar	_w @ sp[(-20)+16]
 17047  0166C0  0EFC               	movlw	-4
 17048  0166C2  0060  F0EB  FFE3   	movff	_width,plusw1
 17049  0166C8  0EFD               	movlw	-3
 17050  0166CA  0060  F0EF  FFE3   	movff	_width+1,plusw1
 17051                           
 17052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 17053  0166D0  A83E               	btfss	_flags^0,4,c
 17054  0166D2  D00B               	goto	l13596
 17055                           
 17056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 17057                           ;stkvar	_w @ sp[(-20)+16]
 17058  0166D4  50E1               	movf	fsr1l,w,c
 17059  0166D6  0FFC               	addlw	-4
 17060  0166D8  6ED9               	movwf	fsr2l,c
 17061  0166DA  50E2               	movf	fsr1h,w,c
 17062  0166DC  6EDA               	movwf	fsr2h,c
 17063  0166DE  0EFF               	movlw	255
 17064  0166E0  22DA               	addwfc	fsr2h,f,c
 17065  0166E2  0EFE               	movlw	254
 17066  0166E4  26DE               	addwf	postinc2,f,c
 17067  0166E6  0EFF               	movlw	255
 17068  0166E8  22DD               	addwfc	postdec2,f,c
 17069  0166EA                     l13596:
 17070                           
 17071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 17072                           ;stkvar	_d @ sp[(-20)+-10]
 17073  0166EA  0EE2               	movlw	226
 17074  0166EC  24E1               	addwf	fsr1l,w,c
 17075  0166EE  6ED9               	movwf	fsr2l,c
 17076  0166F0  0EFF               	movlw	255
 17077  0166F2  20E2               	addwfc	fsr1h,w,c
 17078  0166F4  6EDA               	movwf	fsr2h,c
 17079                           
 17080                           ;stkvar	_n @ sp[(-20)+4]
 17081  0166F6  0E08               	movlw	8
 17082  0166F8  6E01               	movwf	btemp^0,c
 17083  0166FA  0EF0               	movlw	-16
 17084  0166FC                     us1276999:
 17085  0166FC  006F FF7B FFE3     	movff	postinc2,plusw1
 17086  016702  28E8               	incf	wreg,w,c
 17087  016704  2E01               	decfsz	btemp^0,f,c
 17088  016706  D7FA               	bra	us1276999
 17089                           
 17090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 17091  016708  0E4F               	movlw	79
 17092  01670A  6E0B               	movwf	(btemp+10)^0,c
 17093  01670C  0E00               	movlw	0
 17094  01670E  6E0C               	movwf	(btemp+11)^0,c
 17095                           
 17096                           ;stkvar	_i @ sp[(-20)+14]
 17097  016710  0EFA               	movlw	-6
 17098  016712  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17099  016718  0EFB               	movlw	-5
 17100  01671A  0060  F033  FFE3   	movff	btemp+11,plusw1
 17101                           
 17102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 17103  016720  0102               	movlb	2	; () banked
 17104  016722  6B92               	clrf	(_dbuf+79)& (0+255),b
 17105                           
 17106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17107  016724  D0EE               	goto	l13634
 17108  016726                     l13602:
 17109                           
 17110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 17111                           ;stkvar	_i @ sp[(-20)+14]
 17112  016726  50E1               	movf	fsr1l,w,c
 17113  016728  0FFA               	addlw	-6
 17114  01672A  6ED9               	movwf	fsr2l,c
 17115  01672C  50E2               	movf	fsr1h,w,c
 17116  01672E  6EDA               	movwf	fsr2h,c
 17117  016730  0EFF               	movlw	255
 17118  016732  22DA               	addwfc	fsr2h,f,c
 17119  016734  06DE               	decf	postinc2,f,c
 17120  016736  0E00               	movlw	0
 17121  016738  5ADD               	subwfb	postdec2,f,c
 17122                           
 17123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 17124                           ;stkvar	_n @ sp[(-20)+4]
 17125  01673A  0EF0               	movlw	-16
 17126  01673C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17127  016742  0EF1               	movlw	-15
 17128  016744  006F FF8C  F00C    	movff	plusw1,btemp+11
 17129  01674A  0E0F               	movlw	15
 17130  01674C  160B               	andwf	(btemp+10)^0,f,c
 17131  01674E  0E00               	movlw	0
 17132  016750  160C               	andwf	(btemp+11)^0,f,c
 17133                           
 17134                           ;stkvar	_c @ sp[(-20)+12]
 17135  016752  0EF8               	movlw	-8
 17136  016754  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17137  01675A  0EF9               	movlw	-7
 17138  01675C  0060  F033  FFE3   	movff	btemp+11,plusw1
 17139                           
 17140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 17141                           ;stkvar	_c @ sp[(-20)+12]
 17142  016762  0EF9               	movlw	-7
 17143  016764  BEE3               	btfsc	plusw1,7,c
 17144  016766  D00F               	goto	l13610
 17145  016768  0EF9               	movlw	-7
 17146  01676A  50E3               	movf	plusw1,w,c
 17147  01676C  E108               	bnz	u12770
 17148  01676E  0EF8               	movlw	-8
 17149  016770  006F FF8C  F001    	movff	plusw1,btemp
 17150  016776  0E0A               	movlw	10
 17151  016778  5E01               	subwf	btemp^0,f,c
 17152  01677A  A0D8               	btfss	status,0,c
 17153  01677C  D004               	goto	l13610
 17154  01677E                     u12770:
 17155                           
 17156                           ;stkvar	_c @ sp[(-20)+12]
 17157  01677E  0EF8               	movlw	-8
 17158  016780  50E3               	movf	plusw1,w,c
 17159  016782  0F57               	addlw	87
 17160  016784  D003               	goto	L18
 17161  016786                     l13610:
 17162                           
 17163                           ;stkvar	_c @ sp[(-20)+12]
 17164  016786  0EF8               	movlw	-8
 17165  016788  50E3               	movf	plusw1,w,c
 17166  01678A  0F30               	addlw	48
 17167  01678C                     L18:
 17168  01678C  6E0B               	movwf	(btemp+10)^0,c
 17169  01678E  0EF9               	movlw	-7
 17170  016790  006F FF8C  F00C    	movff	plusw1,btemp+11
 17171  016796  0E00               	movlw	0
 17172  016798  220C               	addwfc	(btemp+11)^0,f,c
 17173                           
 17174                           ;stkvar	_c @ sp[(-20)+12]
 17175  01679A  0EF8               	movlw	-8
 17176  01679C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17177  0167A2  0EF9               	movlw	-7
 17178  0167A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17179  0167AA  0EBF               	movlw	191
 17180  0167AC  6E0B               	movwf	(btemp+10)^0,c
 17181  0167AE  0EFF               	movlw	255
 17182  0167B0  6E0C               	movwf	(btemp+11)^0,c
 17183                           
 17184                           ;stkvar	_x @ sp[(-20)+-11]
 17185  0167B2  0EE1               	movlw	-31
 17186  0167B4  50E3               	movf	plusw1,w,c
 17187  0167B6  6E09               	movwf	(btemp+8)^0,c
 17188  0167B8  6A0A               	clrf	(btemp+9)^0,c
 17189  0167BA  500B               	movf	(btemp+10)^0,w,c
 17190  0167BC  2609               	addwf	(btemp+8)^0,f,c
 17191  0167BE  500C               	movf	(btemp+11)^0,w,c
 17192  0167C0  220A               	addwfc	(btemp+9)^0,f,c
 17193  0167C2  500A               	movf	(btemp+9)^0,w,c
 17194  0167C4  E106               	bnz	u12780
 17195  0167C6  0E1A               	movlw	26
 17196  0167C8  5C09               	subwf	(btemp+8)^0,w,c
 17197  0167CA  B0D8               	btfsc	status,0,c
 17198  0167CC  D002               	goto	u12780
 17199  0167CE  0E01               	movlw	1
 17200  0167D0  D001               	goto	u12790
 17201  0167D2                     u12780:
 17202  0167D2  0E00               	movlw	0
 17203  0167D4                     u12790:
 17204  0167D4  6E0B               	movwf	(btemp+10)^0,c
 17205  0167D6  6A0C               	clrf	(btemp+11)^0,c
 17206                           
 17207                           ;stkvar	_xtoa$6204 @ sp[(-20)+2]
 17208  0167D8  0EEE               	movlw	-18
 17209  0167DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17210  0167E0  0EEF               	movlw	-17
 17211  0167E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17212                           
 17213                           ;stkvar	_xtoa$6204 @ sp[(-20)+2]
 17214  0167E8  0EEE               	movlw	-18
 17215  0167EA  006F FF8C  F001    	movff	plusw1,btemp
 17216  0167F0  0EEF               	movlw	-17
 17217  0167F2  50E3               	movf	plusw1,w,c
 17218  0167F4  1001               	iorwf	btemp^0,w,c
 17219  0167F6  B4D8               	btfsc	status,2,c
 17220  0167F8  D041               	goto	l13626
 17221  0167FA  0E9F               	movlw	159
 17222  0167FC  6E0B               	movwf	(btemp+10)^0,c
 17223  0167FE  0EFF               	movlw	255
 17224  016800  6E0C               	movwf	(btemp+11)^0,c
 17225                           
 17226                           ;stkvar	_c @ sp[(-20)+12]
 17227  016802  0EF8               	movlw	-8
 17228  016804  006F FF8C  F009    	movff	plusw1,btemp+8
 17229  01680A  0EF9               	movlw	-7
 17230  01680C  006F FF8C  F00A    	movff	plusw1,btemp+9
 17231  016812  0E20               	movlw	32
 17232  016814  1209               	iorwf	(btemp+8)^0,f,c
 17233  016816  0E00               	movlw	0
 17234  016818  120A               	iorwf	(btemp+9)^0,f,c
 17235  01681A  500B               	movf	(btemp+10)^0,w,c
 17236  01681C  2609               	addwf	(btemp+8)^0,f,c
 17237  01681E  500C               	movf	(btemp+11)^0,w,c
 17238  016820  220A               	addwfc	(btemp+9)^0,f,c
 17239  016822  500A               	movf	(btemp+9)^0,w,c
 17240  016824  E106               	bnz	u12810
 17241  016826  0E1A               	movlw	26
 17242  016828  5C09               	subwf	(btemp+8)^0,w,c
 17243  01682A  B0D8               	btfsc	status,0,c
 17244  01682C  D002               	goto	u12810
 17245  01682E  0E01               	movlw	1
 17246  016830  D001               	goto	u12820
 17247  016832                     u12810:
 17248  016832  0E00               	movlw	0
 17249  016834                     u12820:
 17250  016834  6E0B               	movwf	(btemp+10)^0,c
 17251  016836  6A0C               	clrf	(btemp+11)^0,c
 17252                           
 17253                           ;stkvar	_xtoa$6205 @ sp[(-20)+0]
 17254  016838  0EEC               	movlw	-20
 17255  01683A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17256  016840  0EED               	movlw	-19
 17257  016842  0060  F033  FFE3   	movff	btemp+11,plusw1
 17258                           
 17259                           ;stkvar	_xtoa$6205 @ sp[(-20)+0]
 17260  016848  0EEC               	movlw	-20
 17261  01684A  006F FF8C  F001    	movff	plusw1,btemp
 17262  016850  0EED               	movlw	-19
 17263  016852  50E3               	movf	plusw1,w,c
 17264  016854  1001               	iorwf	btemp^0,w,c
 17265  016856  B4D8               	btfsc	status,2,c
 17266  016858  D011               	goto	l13626
 17267                           
 17268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 17269                           ;stkvar	_c @ sp[(-20)+12]
 17270  01685A  0EF8               	movlw	-8
 17271  01685C  006F FF8F FFE6     	movff	plusw1,postinc1
 17272  016862  006F FF8F FFE6     	movff	plusw1,postinc1
 17273  016868  EC04  F0DE         	call	_toupper	;wreg free
 17274                           
 17275                           ;stkvar	_c @ sp[(-20)+12]
 17276  01686C  0EF8               	movlw	-8
 17277  01686E  0060  F007  FFE3   	movff	btemp,plusw1
 17278  016874  0EF9               	movlw	-7
 17279  016876  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17280  01687C                     l13626:
 17281                           
 17282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 17283                           ;stkvar	_c @ sp[(-20)+12]
 17284                           ;stkvar	_i @ sp[(-20)+14]
 17285  01687C  0EFA               	movlw	-6
 17286  01687E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17287  016884  0EFB               	movlw	-5
 17288  016886  006F FF8C  F00C    	movff	plusw1,btemp+11
 17289  01688C  0E43               	movlw	low _dbuf
 17290  01688E  240B               	addwf	(btemp+10)^0,w,c
 17291  016890  6ED9               	movwf	fsr2l,c
 17292  016892  0E02               	movlw	high _dbuf
 17293  016894  200C               	addwfc	(btemp+11)^0,w,c
 17294  016896  6EDA               	movwf	fsr2h,c
 17295  016898  0EF8               	movlw	-8
 17296  01689A  006F FF8F FFDF     	movff	plusw1,indf2
 17297                           
 17298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 17299                           ;stkvar	_p @ sp[(-20)+18]
 17300  0168A0  50E1               	movf	fsr1l,w,c
 17301  0168A2  0FFE               	addlw	-2
 17302  0168A4  6ED9               	movwf	fsr2l,c
 17303  0168A6  50E2               	movf	fsr1h,w,c
 17304  0168A8  6EDA               	movwf	fsr2h,c
 17305  0168AA  0EFF               	movlw	255
 17306  0168AC  22DA               	addwfc	fsr2h,f,c
 17307  0168AE  06DE               	decf	postinc2,f,c
 17308  0168B0  0E00               	movlw	0
 17309  0168B2  5ADD               	subwfb	postdec2,f,c
 17310                           
 17311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 17312                           ;stkvar	_w @ sp[(-20)+16]
 17313  0168B4  50E1               	movf	fsr1l,w,c
 17314  0168B6  0FFC               	addlw	-4
 17315  0168B8  6ED9               	movwf	fsr2l,c
 17316  0168BA  50E2               	movf	fsr1h,w,c
 17317  0168BC  6EDA               	movwf	fsr2h,c
 17318  0168BE  0EFF               	movlw	255
 17319  0168C0  22DA               	addwfc	fsr2h,f,c
 17320  0168C2  06DE               	decf	postinc2,f,c
 17321  0168C4  0E00               	movlw	0
 17322  0168C6  5ADD               	subwfb	postdec2,f,c
 17323                           
 17324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 17325  0168C8  0E04               	movlw	4
 17326  0168CA  6E0C               	movwf	(btemp+11)^0,c
 17327                           
 17328                           ;stkvar	_n @ sp[(-20)+4]
 17329  0168CC  50E1               	movf	fsr1l,w,c
 17330  0168CE  0FF0               	addlw	-16
 17331  0168D0  6ED9               	movwf	fsr2l,c
 17332  0168D2  50E2               	movf	fsr1h,w,c
 17333  0168D4  6EDA               	movwf	fsr2h,c
 17334  0168D6  0EFF               	movlw	255
 17335  0168D8  22DA               	addwfc	fsr2h,f,c
 17336  0168DA  280C               	incf	(btemp+11)^0,w,c
 17337  0168DC  52DE               	movf	postinc2,f,c
 17338  0168DE  D00F               	goto	u12840
 17339  0168E0                     u12845:
 17340  0168E0  52DE               	movf	postinc2,f,c
 17341  0168E2  52DE               	movf	postinc2,f,c
 17342  0168E4  52DE               	movf	postinc2,f,c
 17343  0168E6  52DE               	movf	postinc2,f,c
 17344  0168E8  52DE               	movf	postinc2,f,c
 17345  0168EA  52DE               	movf	postinc2,f,c
 17346  0168EC  90D8               	bcf	status,0,c
 17347  0168EE  32DD               	rrcf	postdec2,f,c
 17348  0168F0  32DD               	rrcf	postdec2,f,c
 17349  0168F2  32DD               	rrcf	postdec2,f,c
 17350  0168F4  32DD               	rrcf	postdec2,f,c
 17351  0168F6  32DD               	rrcf	postdec2,f,c
 17352  0168F8  32DD               	rrcf	postdec2,f,c
 17353  0168FA  32DD               	rrcf	postdec2,f,c
 17354  0168FC  32DE               	rrcf	postinc2,f,c
 17355  0168FE                     u12840:
 17356  0168FE  2EE8               	decfsz	wreg,f,c
 17357  016900  D7EF               	goto	u12845
 17358  016902                     l13634:
 17359                           
 17360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17361                           ;stkvar	_i @ sp[(-20)+14]
 17362  016902  0EFB               	movlw	-5
 17363  016904  BEE3               	btfsc	plusw1,7,c
 17364  016906  D03A               	goto	u12890
 17365  016908  0EFB               	movlw	-5
 17366  01690A  50E3               	movf	plusw1,w,c
 17367  01690C  E108               	bnz	u12850
 17368  01690E  0EFA               	movlw	-6
 17369  016910  006F FF8C  F001    	movff	plusw1,btemp
 17370  016916  0E02               	movlw	2
 17371  016918  5E01               	subwf	btemp^0,f,c
 17372  01691A  A0D8               	btfss	status,0,c
 17373  01691C  D02F               	goto	u12890
 17374  01691E                     u12850:
 17375                           
 17376                           ;stkvar	_n @ sp[(-20)+4]
 17377  01691E  0EF0               	movlw	-16
 17378  016920  50E3               	movf	plusw1,w,c
 17379  016922  E115               	bnz	u12861
 17380  016924  0EF1               	movlw	-15
 17381  016926  50E3               	movf	plusw1,w,c
 17382  016928  E112               	bnz	u12861
 17383  01692A  0EF2               	movlw	-14
 17384  01692C  50E3               	movf	plusw1,w,c
 17385  01692E  E10F               	bnz	u12861
 17386  016930  0EF3               	movlw	-13
 17387  016932  50E3               	movf	plusw1,w,c
 17388  016934  E10C               	bnz	u12861
 17389  016936  0EF4               	movlw	-12
 17390  016938  50E3               	movf	plusw1,w,c
 17391  01693A  E109               	bnz	u12861
 17392  01693C  0EF5               	movlw	-11
 17393  01693E  50E3               	movf	plusw1,w,c
 17394  016940  E106               	bnz	u12861
 17395  016942  0EF6               	movlw	-10
 17396  016944  50E3               	movf	plusw1,w,c
 17397  016946  E103               	bnz	u12861
 17398  016948  0EF7               	movlw	-9
 17399  01694A  50E3               	movf	plusw1,w,c
 17400  01694C  A4D8               	btfss	status,2,c
 17401  01694E                     u12861:
 17402  01694E  D6EB               	goto	l13602
 17403                           
 17404                           ;stkvar	_p @ sp[(-20)+18]
 17405  016950  0EFF               	movlw	-1
 17406  016952  BEE3               	btfsc	plusw1,7,c
 17407  016954  D007               	goto	u12870
 17408  016956  0EFF               	movlw	-1
 17409  016958  50E3               	movf	plusw1,w,c
 17410  01695A  E103               	bnz	u12871
 17411  01695C  0EFE               	movlw	-2
 17412  01695E  04E3               	decf	plusw1,w,c
 17413  016960  B0D8               	btfsc	status,0,c
 17414  016962                     u12871:
 17415  016962  D6E1               	goto	l13602
 17416  016964                     u12870:
 17417                           
 17418                           ;stkvar	_w @ sp[(-20)+16]
 17419  016964  0EFD               	movlw	-3
 17420  016966  BEE3               	btfsc	plusw1,7,c
 17421  016968  D009               	goto	u12890
 17422  01696A  0EFD               	movlw	-3
 17423  01696C  50E3               	movf	plusw1,w,c
 17424  01696E  E104               	bnz	u12880
 17425  016970  0EFC               	movlw	-4
 17426  016972  04E3               	decf	plusw1,w,c
 17427  016974  A0D8               	btfss	status,0,c
 17428  016976  D002               	goto	u12890
 17429  016978                     u12880:
 17430  016978  B23E               	btfsc	_flags^0,1,c
 17431  01697A  D6D5               	goto	l13602
 17432  01697C                     u12890:
 17433                           
 17434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 17435  01697C  A83E               	btfss	_flags^0,4,c
 17436  01697E  D036               	goto	l13650
 17437                           
 17438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 17439                           ;stkvar	_i @ sp[(-20)+14]
 17440  016980  50E1               	movf	fsr1l,w,c
 17441  016982  0FFA               	addlw	-6
 17442  016984  6ED9               	movwf	fsr2l,c
 17443  016986  50E2               	movf	fsr1h,w,c
 17444  016988  6EDA               	movwf	fsr2h,c
 17445  01698A  0EFF               	movlw	255
 17446  01698C  22DA               	addwfc	fsr2h,f,c
 17447  01698E  06DE               	decf	postinc2,f,c
 17448  016990  0E00               	movlw	0
 17449  016992  5ADD               	subwfb	postdec2,f,c
 17450                           
 17451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 17452                           ;stkvar	_x @ sp[(-20)+-11]
 17453                           ;stkvar	_i @ sp[(-20)+14]
 17454  016994  0EFA               	movlw	-6
 17455  016996  006F FF8C  F00B    	movff	plusw1,btemp+10
 17456  01699C  0EFB               	movlw	-5
 17457  01699E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17458  0169A4  0E43               	movlw	low _dbuf
 17459  0169A6  240B               	addwf	(btemp+10)^0,w,c
 17460  0169A8  6ED9               	movwf	fsr2l,c
 17461  0169AA  0E02               	movlw	high _dbuf
 17462  0169AC  200C               	addwfc	(btemp+11)^0,w,c
 17463  0169AE  6EDA               	movwf	fsr2h,c
 17464  0169B0  0EE1               	movlw	-31
 17465  0169B2  006F FF8F FFDF     	movff	plusw1,indf2
 17466                           
 17467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 17468                           ;stkvar	_i @ sp[(-20)+14]
 17469  0169B8  50E1               	movf	fsr1l,w,c
 17470  0169BA  0FFA               	addlw	-6
 17471  0169BC  6ED9               	movwf	fsr2l,c
 17472  0169BE  50E2               	movf	fsr1h,w,c
 17473  0169C0  6EDA               	movwf	fsr2h,c
 17474  0169C2  0EFF               	movlw	255
 17475  0169C4  22DA               	addwfc	fsr2h,f,c
 17476  0169C6  06DE               	decf	postinc2,f,c
 17477  0169C8  0E00               	movlw	0
 17478  0169CA  5ADD               	subwfb	postdec2,f,c
 17479                           
 17480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 17481                           ;stkvar	_i @ sp[(-20)+14]
 17482  0169CC  0EFA               	movlw	-6
 17483  0169CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 17484  0169D4  0EFB               	movlw	-5
 17485  0169D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 17486  0169DC  0E43               	movlw	low _dbuf
 17487  0169DE  240B               	addwf	(btemp+10)^0,w,c
 17488  0169E0  6ED9               	movwf	fsr2l,c
 17489  0169E2  0E02               	movlw	high _dbuf
 17490  0169E4  200C               	addwfc	(btemp+11)^0,w,c
 17491  0169E6  6EDA               	movwf	fsr2h,c
 17492  0169E8  0E30               	movlw	48
 17493  0169EA  6EDF               	movwf	indf2,c
 17494  0169EC                     l13650:
 17495                           
 17496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 17497                           ;stkvar	_w @ sp[(-20)+16]
 17498  0169EC  0EFC               	movlw	-4
 17499  0169EE  006F FF8F FFE6     	movff	plusw1,postinc1
 17500  0169F4  006F FF8F FFE6     	movff	plusw1,postinc1
 17501                           
 17502                           ;stkvar	_i @ sp[(-22)+14]
 17503  0169FA  0E43               	movlw	low _dbuf
 17504  0169FC  6E0B               	movwf	(btemp+10)^0,c
 17505  0169FE  0E02               	movlw	high _dbuf
 17506  016A00  6E0C               	movwf	(btemp+11)^0,c
 17507  016A02  0EF8               	movlw	-8
 17508  016A04  50E3               	movf	plusw1,w,c
 17509  016A06  260B               	addwf	(btemp+10)^0,f,c
 17510  016A08  0EF9               	movlw	-7
 17511  016A0A  50E3               	movf	plusw1,w,c
 17512  016A0C  220C               	addwfc	(btemp+11)^0,f,c
 17513  016A0E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17514  016A14  0060  F033  FFE6   	movff	btemp+11,postinc1
 17515                           
 17516                           ;stkvar	_fp @ sp[(-24)+-2]
 17517  016A1A  0EE6               	movlw	-26
 17518  016A1C  006F FF8F FFE6     	movff	plusw1,postinc1
 17519  016A22  006F FF8F FFE6     	movff	plusw1,postinc1
 17520  016A28  EC3B  F0D4         	call	_pad	;wreg free
 17521                           
 17522                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 17523  016A2C  0EE1               	movlw	225
 17524  016A2E  26E1               	addwf	fsr1l,f,c
 17525  016A30  0EFF               	movlw	255
 17526  016A32  22E2               	addwfc	fsr1h,f,c
 17527  016A34  0012               	return		;funcret
 17528  016A36                     __end_of_xtoa:
 17529                           	opt callstack 0
 17530                           
 17531 ;; *************** function _toupper *****************
 17532 ;; Defined at:
 17533 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 17534 ;; Parameters:    Size  Location     Type
 17535 ;;  c               2  [STACK] int 
 17536 ;; Auto vars:     Size  Location     Type
 17537 ;;		None
 17538 ;; Return value:  Size  Location     Type
 17539 ;;                  2  [STACK] int 
 17540 ;; Registers used:
 17541 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17542 ;; Tracked objects:
 17543 ;;		On entry : 0/2
 17544 ;;		On exit  : 0/0
 17545 ;;		Unchanged: 0/0
 17546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17551 ;;Total ram usage:        0 bytes
 17552 ;; Hardware stack levels used:    1
 17553 ;; Hardware stack levels required when called:   16
 17554 ;; This function calls:
 17555 ;;		_islower
 17556 ;; This function is called by:
 17557 ;;		_xtoa
 17558 ;; This function uses a reentrant model
 17559 ;;
 17560                           
 17561                           	psect	text67
 17562  01BC08                     __ptext67:
 17563                           	opt callstack 0
 17564  01BC08                     _toupper:
 17565                           	opt callstack 0
 17566                           
 17567                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17568  01BC08  52E6               	movf	postinc1,f,c
 17569  01BC0A  52E6               	movf	postinc1,f,c
 17570                           
 17571                           ;stkvar	_c @ sp[(-2)+-2]
 17572                           
 17573                           ;incstack = 0
 17574 ;; hardware stack exceeded
 17575  01BC0C  0EFC               	movlw	-4
 17576  01BC0E  50E3               	movf	plusw1,w,c
 17577  01BC10  0F9F               	addlw	159
 17578  01BC12  6E0B               	movwf	(btemp+10)^0,c
 17579  01BC14  0EFD               	movlw	-3
 17580  01BC16  006F FF8C  F00C    	movff	plusw1,btemp+11
 17581  01BC1C  0EFF               	movlw	255
 17582  01BC1E  220C               	addwfc	(btemp+11)^0,f,c
 17583  01BC20  500C               	movf	(btemp+11)^0,w,c
 17584  01BC22  E106               	bnz	u6720
 17585  01BC24  0E1A               	movlw	26
 17586  01BC26  5C0B               	subwf	(btemp+10)^0,w,c
 17587  01BC28  B0D8               	btfsc	status,0,c
 17588  01BC2A  D002               	goto	u6720
 17589  01BC2C  0E01               	movlw	1
 17590  01BC2E  D001               	goto	u6730
 17591  01BC30                     u6720:
 17592  01BC30  0E00               	movlw	0
 17593  01BC32                     u6730:
 17594  01BC32  6E0B               	movwf	(btemp+10)^0,c
 17595  01BC34  6A0C               	clrf	(btemp+11)^0,c
 17596                           
 17597                           ;stkvar	_toupper$7011 @ sp[(-2)+0]
 17598  01BC36  0EFE               	movlw	-2
 17599  01BC38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17600  01BC3E  0EFF               	movlw	-1
 17601  01BC40  0060  F033  FFE3   	movff	btemp+11,plusw1
 17602                           
 17603                           ;stkvar	_toupper$7011 @ sp[(-2)+0]
 17604  01BC46  0EFE               	movlw	-2
 17605  01BC48  006F FF8C  F001    	movff	plusw1,btemp
 17606  01BC4E  0EFF               	movlw	-1
 17607  01BC50  50E3               	movf	plusw1,w,c
 17608  01BC52  1001               	iorwf	btemp^0,w,c
 17609  01BC54  B4D8               	btfsc	status,2,c
 17610  01BC56  D00D               	goto	l8830
 17611                           
 17612                           ;stkvar	_c @ sp[(-2)+-2]
 17613  01BC58  0EFC               	movlw	-4
 17614  01BC5A  006F FF8C  F001    	movff	plusw1,btemp
 17615  01BC60  0EFD               	movlw	-3
 17616  01BC62  006F FF8C  F002    	movff	plusw1,btemp+1
 17617  01BC68  0E5F               	movlw	95
 17618  01BC6A  1601               	andwf	btemp^0,f,c
 17619  01BC6C  0E00               	movlw	0
 17620  01BC6E  1602               	andwf	(btemp+1)^0,f,c
 17621  01BC70  D008               	goto	l3743
 17622  01BC72                     l8830:
 17623                           
 17624                           ;stkvar	_c @ sp[(-2)+-2]
 17625  01BC72  0EFC               	movlw	-4
 17626  01BC74  006F FF8C  F001    	movff	plusw1,btemp
 17627  01BC7A  0EFD               	movlw	-3
 17628  01BC7C  006F FF8C  F002    	movff	plusw1,btemp+1
 17629  01BC82                     l3743:
 17630                           
 17631                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17632  01BC82  52E5               	movf	postdec1,f,c
 17633  01BC84  52E5               	movf	postdec1,f,c
 17634  01BC86  52E5               	movf	postdec1,f,c
 17635  01BC88  52E5               	movf	postdec1,f,c
 17636  01BC8A  0012               	return		;funcret
 17637  01BC8C                     __end_of_toupper:
 17638                           	opt callstack 0
 17639                           
 17640 ;; *************** function _islower *****************
 17641 ;; Defined at:
 17642 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 17643 ;; Parameters:    Size  Location     Type
 17644 ;;  c               2  [STACK] int 
 17645 ;; Auto vars:     Size  Location     Type
 17646 ;;		None
 17647 ;; Return value:  Size  Location     Type
 17648 ;;                  2  [STACK] int 
 17649 ;; Registers used:
 17650 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17651 ;; Tracked objects:
 17652 ;;		On entry : 0/0
 17653 ;;		On exit  : 0/0
 17654 ;;		Unchanged: 0/0
 17655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17660 ;;Total ram usage:        0 bytes
 17661 ;; Hardware stack levels used:    1
 17662 ;; Hardware stack levels required when called:   15
 17663 ;; This function calls:
 17664 ;;		Nothing
 17665 ;; This function is called by:
 17666 ;;		_toupper
 17667 ;; This function uses a reentrant model
 17668 ;;
 17669                           
 17670                           	psect	text68
 17671  01CC02                     __ptext68:
 17672                           	opt callstack 0
 17673  01CC02                     _islower:
 17674                           	opt callstack 0
 17675                           
 17676                           ;stkvar	_c @ sp[(0)+-2]
 17677                           
 17678                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17679                           ;incstack = 0
 17680 ;; hardware stack exceeded
 17681  01CC02  0EFE               	movlw	-2
 17682  01CC04  50E3               	movf	plusw1,w,c
 17683  01CC06  0F9F               	addlw	159
 17684  01CC08  6E0B               	movwf	(btemp+10)^0,c
 17685  01CC0A  0EFF               	movlw	-1
 17686  01CC0C  006F FF8C  F00C    	movff	plusw1,btemp+11
 17687  01CC12  0EFF               	movlw	255
 17688  01CC14  220C               	addwfc	(btemp+11)^0,f,c
 17689  01CC16  500C               	movf	(btemp+11)^0,w,c
 17690  01CC18  E106               	bnz	u6360
 17691  01CC1A  0E1A               	movlw	26
 17692  01CC1C  5C0B               	subwf	(btemp+10)^0,w,c
 17693  01CC1E  B0D8               	btfsc	status,0,c
 17694  01CC20  D002               	goto	u6360
 17695  01CC22  0E01               	movlw	1
 17696  01CC24  D001               	goto	u6370
 17697  01CC26                     u6360:
 17698  01CC26  0E00               	movlw	0
 17699  01CC28                     u6370:
 17700  01CC28  6E01               	movwf	btemp^0,c
 17701  01CC2A  6A02               	clrf	(btemp+1)^0,c
 17702                           
 17703                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17704  01CC2C  52E5               	movf	postdec1,f,c
 17705  01CC2E  52E5               	movf	postdec1,f,c
 17706  01CC30  0012               	return		;funcret
 17707  01CC32                     __end_of_islower:
 17708                           	opt callstack 0
 17709                           
 17710 ;; *************** function _isalpha *****************
 17711 ;; Defined at:
 17712 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 17713 ;; Parameters:    Size  Location     Type
 17714 ;;  c               2  [STACK] int 
 17715 ;; Auto vars:     Size  Location     Type
 17716 ;;		None
 17717 ;; Return value:  Size  Location     Type
 17718 ;;                  2  [STACK] int 
 17719 ;; Registers used:
 17720 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 17721 ;; Tracked objects:
 17722 ;;		On entry : 0/0
 17723 ;;		On exit  : 0/0
 17724 ;;		Unchanged: 0/0
 17725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17730 ;;Total ram usage:        0 bytes
 17731 ;; Hardware stack levels used:    1
 17732 ;; Hardware stack levels required when called:   15
 17733 ;; This function calls:
 17734 ;;		Nothing
 17735 ;; This function is called by:
 17736 ;;		_xtoa
 17737 ;; This function uses a reentrant model
 17738 ;;
 17739                           
 17740                           	psect	text69
 17741  01C7B2                     __ptext69:
 17742                           	opt callstack 0
 17743  01C7B2                     _isalpha:
 17744                           	opt callstack 0
 17745                           
 17746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17747                           ;incstack = 0
 17748 ;; hardware stack exceeded
 17749  01C7B2  0E9F               	movlw	159
 17750  01C7B4  6E0B               	movwf	(btemp+10)^0,c
 17751  01C7B6  0EFF               	movlw	255
 17752  01C7B8  6E0C               	movwf	(btemp+11)^0,c
 17753                           
 17754                           ;stkvar	_c @ sp[(0)+-2]
 17755  01C7BA  0EFE               	movlw	-2
 17756  01C7BC  006F FF8C  F009    	movff	plusw1,btemp+8
 17757  01C7C2  0EFF               	movlw	-1
 17758  01C7C4  006F FF8C  F00A    	movff	plusw1,btemp+9
 17759  01C7CA  0E20               	movlw	32
 17760  01C7CC  1209               	iorwf	(btemp+8)^0,f,c
 17761  01C7CE  0E00               	movlw	0
 17762  01C7D0  120A               	iorwf	(btemp+9)^0,f,c
 17763  01C7D2  500B               	movf	(btemp+10)^0,w,c
 17764  01C7D4  2609               	addwf	(btemp+8)^0,f,c
 17765  01C7D6  500C               	movf	(btemp+11)^0,w,c
 17766  01C7D8  220A               	addwfc	(btemp+9)^0,f,c
 17767  01C7DA  500A               	movf	(btemp+9)^0,w,c
 17768  01C7DC  E106               	bnz	u6700
 17769  01C7DE  0E1A               	movlw	26
 17770  01C7E0  5C09               	subwf	(btemp+8)^0,w,c
 17771  01C7E2  B0D8               	btfsc	status,0,c
 17772  01C7E4  D002               	goto	u6700
 17773  01C7E6  0E01               	movlw	1
 17774  01C7E8  D001               	goto	u6710
 17775  01C7EA                     u6700:
 17776  01C7EA  0E00               	movlw	0
 17777  01C7EC                     u6710:
 17778  01C7EC  6E01               	movwf	btemp^0,c
 17779  01C7EE  6A02               	clrf	(btemp+1)^0,c
 17780                           
 17781                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17782  01C7F0  52E5               	movf	postdec1,f,c
 17783  01C7F2  52E5               	movf	postdec1,f,c
 17784  01C7F4  0012               	return		;funcret
 17785  01C7F6                     __end_of_isalpha:
 17786                           	opt callstack 0
 17787                           
 17788 ;; *************** function _utoa *****************
 17789 ;; Defined at:
 17790 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17791 ;; Parameters:    Size  Location     Type
 17792 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17793 ;;		 -> f(6), NULL(0), 
 17794 ;;  d               8  [STACK] unsigned long long 
 17795 ;; Auto vars:     Size  Location     Type
 17796 ;;  n               8  [STACK] unsigned long long 
 17797 ;;  i               2  [STACK] int 
 17798 ;;  w               2  [STACK] int 
 17799 ;;  p               2  [STACK] int 
 17800 ;; Return value:  Size  Location     Type
 17801 ;;                  2  [STACK] int 
 17802 ;; Registers used:
 17803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17804 ;; Tracked objects:
 17805 ;;		On entry : 0/0
 17806 ;;		On exit  : 0/0
 17807 ;;		Unchanged: 0/0
 17808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17813 ;;Total ram usage:        0 bytes
 17814 ;; Hardware stack levels used:    1
 17815 ;; Hardware stack levels required when called:   20
 17816 ;; This function calls:
 17817 ;;		___lodiv
 17818 ;;		___lomod
 17819 ;;		_pad
 17820 ;; This function is called by:
 17821 ;;		_vfpfcnvrt
 17822 ;; This function uses a reentrant model
 17823 ;;
 17824                           
 17825                           	psect	text70
 17826  016DA2                     __ptext70:
 17827                           	opt callstack 0
 17828  016DA2                     _utoa:
 17829                           	opt callstack 0
 17830                           
 17831                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17832  016DA2  0E0E               	movlw	14
 17833  016DA4  26E1               	addwf	fsr1l,f,c
 17834  016DA6  0E00               	movlw	0
 17835  016DA8  22E2               	addwfc	fsr1h,f,c
 17836                           
 17837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 17838                           
 17839                           ;incstack = 0
 17840 ;; hardware stack exceeded
 17841  016DAA  AE3D               	btfss	(_prec+1)^0,7,c
 17842                           
 17843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 17844  016DAC  923E               	bcf	_flags^0,1,c
 17845                           
 17846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 17847  016DAE  BE3D               	btfsc	(_prec+1)^0,7,c
 17848  016DB0  D005               	goto	u12660
 17849  016DB2  503D               	movf	(_prec+1)^0,w,c
 17850  016DB4  E110               	bnz	l13550
 17851  016DB6  043C               	decf	_prec^0,w,c
 17852  016DB8  B0D8               	btfsc	status,0,c
 17853  016DBA  D00D               	goto	l13550
 17854  016DBC                     u12660:
 17855  016DBC  0E01               	movlw	1
 17856  016DBE  6E0B               	movwf	(btemp+10)^0,c
 17857  016DC0  0E00               	movlw	0
 17858  016DC2  6E0C               	movwf	(btemp+11)^0,c
 17859                           
 17860                           ;stkvar	_p @ sp[(-14)+12]
 17861  016DC4  0EFE               	movlw	-2
 17862  016DC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17863  016DCC  0EFF               	movlw	-1
 17864  016DCE  0060  F033  FFE3   	movff	btemp+11,plusw1
 17865  016DD4  D008               	goto	l2561
 17866  016DD6                     l13550:
 17867                           
 17868                           ;stkvar	_p @ sp[(-14)+12]
 17869  016DD6  0EFE               	movlw	-2
 17870  016DD8  0060  F0F3  FFE3   	movff	_prec,plusw1
 17871  016DDE  0EFF               	movlw	-1
 17872  016DE0  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17873  016DE6                     l2561:
 17874                           
 17875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 17876                           ;stkvar	_w @ sp[(-14)+10]
 17877  016DE6  0EFC               	movlw	-4
 17878  016DE8  0060  F0EB  FFE3   	movff	_width,plusw1
 17879  016DEE  0EFD               	movlw	-3
 17880  016DF0  0060  F0EF  FFE3   	movff	_width+1,plusw1
 17881                           
 17882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 17883                           ;stkvar	_d @ sp[(-14)+-10]
 17884  016DF6  0EE8               	movlw	232
 17885  016DF8  24E1               	addwf	fsr1l,w,c
 17886  016DFA  6ED9               	movwf	fsr2l,c
 17887  016DFC  0EFF               	movlw	255
 17888  016DFE  20E2               	addwfc	fsr1h,w,c
 17889  016E00  6EDA               	movwf	fsr2h,c
 17890                           
 17891                           ;stkvar	_n @ sp[(-14)+0]
 17892  016E02  0E08               	movlw	8
 17893  016E04  6E01               	movwf	btemp^0,c
 17894  016E06  0EF2               	movlw	-14
 17895  016E08                     us1267999:
 17896  016E08  006F FF7B FFE3     	movff	postinc2,plusw1
 17897  016E0E  28E8               	incf	wreg,w,c
 17898  016E10  2E01               	decfsz	btemp^0,f,c
 17899  016E12  D7FA               	bra	us1267999
 17900                           
 17901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 17902  016E14  0E4F               	movlw	79
 17903  016E16  6E0B               	movwf	(btemp+10)^0,c
 17904  016E18  0E00               	movlw	0
 17905  016E1A  6E0C               	movwf	(btemp+11)^0,c
 17906                           
 17907                           ;stkvar	_i @ sp[(-14)+8]
 17908  016E1C  0EFA               	movlw	-6
 17909  016E1E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17910  016E24  0EFB               	movlw	-5
 17911  016E26  0060  F033  FFE3   	movff	btemp+11,plusw1
 17912                           
 17913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 17914  016E2C  0102               	movlb	2	; () banked
 17915  016E2E  6B92               	clrf	(_dbuf+79)& (0+255),b
 17916                           
 17917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 17918  016E30  D0FB               	goto	l13568
 17919  016E32                     l13558:
 17920                           
 17921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 17922                           ;stkvar	_i @ sp[(-14)+8]
 17923  016E32  50E1               	movf	fsr1l,w,c
 17924  016E34  0FFA               	addlw	-6
 17925  016E36  6ED9               	movwf	fsr2l,c
 17926  016E38  50E2               	movf	fsr1h,w,c
 17927  016E3A  6EDA               	movwf	fsr2h,c
 17928  016E3C  0EFF               	movlw	255
 17929  016E3E  22DA               	addwfc	fsr2h,f,c
 17930  016E40  06DE               	decf	postinc2,f,c
 17931  016E42  0E00               	movlw	0
 17932  016E44  5ADD               	subwfb	postdec2,f,c
 17933                           
 17934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 17935  016E46  0E0A               	movlw	10
 17936  016E48  6EE6               	movwf	postinc1,c
 17937  016E4A  0E00               	movlw	0
 17938  016E4C  6EE6               	movwf	postinc1,c
 17939  016E4E  0E00               	movlw	0
 17940  016E50  6EE6               	movwf	postinc1,c
 17941  016E52  0E00               	movlw	0
 17942  016E54  6EE6               	movwf	postinc1,c
 17943  016E56  0E00               	movlw	0
 17944  016E58  6EE6               	movwf	postinc1,c
 17945  016E5A  0E00               	movlw	0
 17946  016E5C  6EE6               	movwf	postinc1,c
 17947  016E5E  0E00               	movlw	0
 17948  016E60  6EE6               	movwf	postinc1,c
 17949  016E62  0E00               	movlw	0
 17950  016E64  6EE6               	movwf	postinc1,c
 17951                           
 17952                           ;stkvar	_n @ sp[(-22)+0]
 17953  016E66  50E1               	movf	fsr1l,w,c
 17954  016E68  0FEA               	addlw	-22
 17955  016E6A  6ED9               	movwf	fsr2l,c
 17956  016E6C  50E2               	movf	fsr1h,w,c
 17957  016E6E  6EDA               	movwf	fsr2h,c
 17958  016E70  0EFF               	movlw	255
 17959  016E72  22DA               	addwfc	fsr2h,f,c
 17960  016E74  006F FF7B FFE6     	movff	postinc2,postinc1
 17961  016E7A  006F FF7B FFE6     	movff	postinc2,postinc1
 17962  016E80  006F FF7B FFE6     	movff	postinc2,postinc1
 17963  016E86  006F FF7B FFE6     	movff	postinc2,postinc1
 17964  016E8C  006F FF7B FFE6     	movff	postinc2,postinc1
 17965  016E92  006F FF7B FFE6     	movff	postinc2,postinc1
 17966  016E98  006F FF7B FFE6     	movff	postinc2,postinc1
 17967  016E9E  006F FF7B FFE6     	movff	postinc2,postinc1
 17968  016EA4  EC27  F0D0         	call	___lomod	;wreg free
 17969  016EA8  52E5               	movf	postdec1,f,c
 17970  016EAA  006F FF9C  F018    	movff	indf1,btemp+23
 17971  016EB0  52E5               	movf	postdec1,f,c
 17972  016EB2  006F FF9C  F017    	movff	indf1,btemp+22
 17973  016EB8  52E5               	movf	postdec1,f,c
 17974  016EBA  006F FF9C  F016    	movff	indf1,btemp+21
 17975  016EC0  52E5               	movf	postdec1,f,c
 17976  016EC2  006F FF9C  F015    	movff	indf1,btemp+20
 17977  016EC8  52E5               	movf	postdec1,f,c
 17978  016ECA  006F FF9C  F014    	movff	indf1,btemp+19
 17979  016ED0  52E5               	movf	postdec1,f,c
 17980  016ED2  006F FF9C  F013    	movff	indf1,btemp+18
 17981  016ED8  52E5               	movf	postdec1,f,c
 17982  016EDA  006F FF9C  F012    	movff	indf1,btemp+17
 17983  016EE0  52E5               	movf	postdec1,f,c
 17984  016EE2  006F FF9C  F011    	movff	indf1,btemp+16
 17985  016EE8  0EF8               	movlw	248
 17986  016EEA  26E1               	addwf	fsr1l,f,c
 17987  016EEC  0EFF               	movlw	255
 17988  016EEE  22E2               	addwfc	fsr1h,f,c
 17989  016EF0  0E30               	movlw	48
 17990  016EF2  2611               	addwf	(btemp+16)^0,f,c
 17991                           
 17992                           ;stkvar	_i @ sp[(-14)+8]
 17993  016EF4  0EFA               	movlw	-6
 17994  016EF6  006F FF8C  F00B    	movff	plusw1,btemp+10
 17995  016EFC  0EFB               	movlw	-5
 17996  016EFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 17997  016F04  0E43               	movlw	low _dbuf
 17998  016F06  240B               	addwf	(btemp+10)^0,w,c
 17999  016F08  6ED9               	movwf	fsr2l,c
 18000  016F0A  0E02               	movlw	high _dbuf
 18001  016F0C  200C               	addwfc	(btemp+11)^0,w,c
 18002  016F0E  6EDA               	movwf	fsr2h,c
 18003  016F10  0060  F047  FFDF   	movff	btemp+16,indf2
 18004                           
 18005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 18006                           ;stkvar	_p @ sp[(-14)+12]
 18007  016F16  50E1               	movf	fsr1l,w,c
 18008  016F18  0FFE               	addlw	-2
 18009  016F1A  6ED9               	movwf	fsr2l,c
 18010  016F1C  50E2               	movf	fsr1h,w,c
 18011  016F1E  6EDA               	movwf	fsr2h,c
 18012  016F20  0EFF               	movlw	255
 18013  016F22  22DA               	addwfc	fsr2h,f,c
 18014  016F24  06DE               	decf	postinc2,f,c
 18015  016F26  0E00               	movlw	0
 18016  016F28  5ADD               	subwfb	postdec2,f,c
 18017                           
 18018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 18019                           ;stkvar	_w @ sp[(-14)+10]
 18020  016F2A  50E1               	movf	fsr1l,w,c
 18021  016F2C  0FFC               	addlw	-4
 18022  016F2E  6ED9               	movwf	fsr2l,c
 18023  016F30  50E2               	movf	fsr1h,w,c
 18024  016F32  6EDA               	movwf	fsr2h,c
 18025  016F34  0EFF               	movlw	255
 18026  016F36  22DA               	addwfc	fsr2h,f,c
 18027  016F38  06DE               	decf	postinc2,f,c
 18028  016F3A  0E00               	movlw	0
 18029  016F3C  5ADD               	subwfb	postdec2,f,c
 18030                           
 18031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 18032  016F3E  0E0A               	movlw	10
 18033  016F40  6EE6               	movwf	postinc1,c
 18034  016F42  0E00               	movlw	0
 18035  016F44  6EE6               	movwf	postinc1,c
 18036  016F46  0E00               	movlw	0
 18037  016F48  6EE6               	movwf	postinc1,c
 18038  016F4A  0E00               	movlw	0
 18039  016F4C  6EE6               	movwf	postinc1,c
 18040  016F4E  0E00               	movlw	0
 18041  016F50  6EE6               	movwf	postinc1,c
 18042  016F52  0E00               	movlw	0
 18043  016F54  6EE6               	movwf	postinc1,c
 18044  016F56  0E00               	movlw	0
 18045  016F58  6EE6               	movwf	postinc1,c
 18046  016F5A  0E00               	movlw	0
 18047  016F5C  6EE6               	movwf	postinc1,c
 18048                           
 18049                           ;stkvar	_n @ sp[(-22)+0]
 18050  016F5E  50E1               	movf	fsr1l,w,c
 18051  016F60  0FEA               	addlw	-22
 18052  016F62  6ED9               	movwf	fsr2l,c
 18053  016F64  50E2               	movf	fsr1h,w,c
 18054  016F66  6EDA               	movwf	fsr2h,c
 18055  016F68  0EFF               	movlw	255
 18056  016F6A  22DA               	addwfc	fsr2h,f,c
 18057  016F6C  006F FF7B FFE6     	movff	postinc2,postinc1
 18058  016F72  006F FF7B FFE6     	movff	postinc2,postinc1
 18059  016F78  006F FF7B FFE6     	movff	postinc2,postinc1
 18060  016F7E  006F FF7B FFE6     	movff	postinc2,postinc1
 18061  016F84  006F FF7B FFE6     	movff	postinc2,postinc1
 18062  016F8A  006F FF7B FFE6     	movff	postinc2,postinc1
 18063  016F90  006F FF7B FFE6     	movff	postinc2,postinc1
 18064  016F96  006F FF7B FFE6     	movff	postinc2,postinc1
 18065  016F9C  EC4B  F0CB         	call	___lodiv	;wreg free
 18066  016FA0  52E5               	movf	postdec1,f,c
 18067  016FA2  006F FF9C  F018    	movff	indf1,btemp+23
 18068  016FA8  52E5               	movf	postdec1,f,c
 18069  016FAA  006F FF9C  F017    	movff	indf1,btemp+22
 18070  016FB0  52E5               	movf	postdec1,f,c
 18071  016FB2  006F FF9C  F016    	movff	indf1,btemp+21
 18072  016FB8  52E5               	movf	postdec1,f,c
 18073  016FBA  006F FF9C  F015    	movff	indf1,btemp+20
 18074  016FC0  52E5               	movf	postdec1,f,c
 18075  016FC2  006F FF9C  F014    	movff	indf1,btemp+19
 18076  016FC8  52E5               	movf	postdec1,f,c
 18077  016FCA  006F FF9C  F013    	movff	indf1,btemp+18
 18078  016FD0  52E5               	movf	postdec1,f,c
 18079  016FD2  006F FF9C  F012    	movff	indf1,btemp+17
 18080  016FD8  52E5               	movf	postdec1,f,c
 18081  016FDA  006F FF9C  F011    	movff	indf1,btemp+16
 18082  016FE0  0EF8               	movlw	248
 18083  016FE2  26E1               	addwf	fsr1l,f,c
 18084  016FE4  0EFF               	movlw	255
 18085  016FE6  22E2               	addwfc	fsr1h,f,c
 18086                           
 18087                           ;stkvar	_n @ sp[(-14)+0]
 18088  016FE8  0EF2               	movlw	-14
 18089  016FEA  0060  F047  FFE3   	movff	btemp+16,plusw1
 18090  016FF0  0EF3               	movlw	-13
 18091  016FF2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 18092  016FF8  0EF4               	movlw	-12
 18093  016FFA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 18094  017000  0EF5               	movlw	-11
 18095  017002  0060  F053  FFE3   	movff	btemp+19,plusw1
 18096  017008  0EF6               	movlw	-10
 18097  01700A  0060  F057  FFE3   	movff	btemp+20,plusw1
 18098  017010  0EF7               	movlw	-9
 18099  017012  0060  F05B  FFE3   	movff	btemp+21,plusw1
 18100  017018  0EF8               	movlw	-8
 18101  01701A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 18102  017020  0EF9               	movlw	-7
 18103  017022  0060  F063  FFE3   	movff	btemp+23,plusw1
 18104  017028                     l13568:
 18105                           
 18106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 18107                           ;stkvar	_i @ sp[(-14)+8]
 18108  017028  0EFA               	movlw	-6
 18109  01702A  006F FF8C  F001    	movff	plusw1,btemp
 18110  017030  0EFB               	movlw	-5
 18111  017032  50E3               	movf	plusw1,w,c
 18112  017034  1001               	iorwf	btemp^0,w,c
 18113  017036  B4D8               	btfsc	status,2,c
 18114  017038  D02F               	goto	u12720
 18115                           
 18116                           ;stkvar	_n @ sp[(-14)+0]
 18117  01703A  0EF2               	movlw	-14
 18118  01703C  50E3               	movf	plusw1,w,c
 18119  01703E  E115               	bnz	u12691
 18120  017040  0EF3               	movlw	-13
 18121  017042  50E3               	movf	plusw1,w,c
 18122  017044  E112               	bnz	u12691
 18123  017046  0EF4               	movlw	-12
 18124  017048  50E3               	movf	plusw1,w,c
 18125  01704A  E10F               	bnz	u12691
 18126  01704C  0EF5               	movlw	-11
 18127  01704E  50E3               	movf	plusw1,w,c
 18128  017050  E10C               	bnz	u12691
 18129  017052  0EF6               	movlw	-10
 18130  017054  50E3               	movf	plusw1,w,c
 18131  017056  E109               	bnz	u12691
 18132  017058  0EF7               	movlw	-9
 18133  01705A  50E3               	movf	plusw1,w,c
 18134  01705C  E106               	bnz	u12691
 18135  01705E  0EF8               	movlw	-8
 18136  017060  50E3               	movf	plusw1,w,c
 18137  017062  E103               	bnz	u12691
 18138  017064  0EF9               	movlw	-7
 18139  017066  50E3               	movf	plusw1,w,c
 18140  017068  A4D8               	btfss	status,2,c
 18141  01706A                     u12691:
 18142  01706A  D6E3               	goto	l13558
 18143                           
 18144                           ;stkvar	_p @ sp[(-14)+12]
 18145  01706C  0EFF               	movlw	-1
 18146  01706E  BEE3               	btfsc	plusw1,7,c
 18147  017070  D007               	goto	u12700
 18148  017072  0EFF               	movlw	-1
 18149  017074  50E3               	movf	plusw1,w,c
 18150  017076  E103               	bnz	u12701
 18151  017078  0EFE               	movlw	-2
 18152  01707A  04E3               	decf	plusw1,w,c
 18153  01707C  B0D8               	btfsc	status,0,c
 18154  01707E                     u12701:
 18155  01707E  D6D9               	goto	l13558
 18156  017080                     u12700:
 18157                           
 18158                           ;stkvar	_w @ sp[(-14)+10]
 18159  017080  0EFD               	movlw	-3
 18160  017082  BEE3               	btfsc	plusw1,7,c
 18161  017084  D009               	goto	u12720
 18162  017086  0EFD               	movlw	-3
 18163  017088  50E3               	movf	plusw1,w,c
 18164  01708A  E104               	bnz	u12710
 18165  01708C  0EFC               	movlw	-4
 18166  01708E  04E3               	decf	plusw1,w,c
 18167  017090  A0D8               	btfss	status,0,c
 18168  017092  D002               	goto	u12720
 18169  017094                     u12710:
 18170  017094  B23E               	btfsc	_flags^0,1,c
 18171  017096  D6CD               	goto	l13558
 18172  017098                     u12720:
 18173                           
 18174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 18175                           ;stkvar	_w @ sp[(-14)+10]
 18176  017098  0EFC               	movlw	-4
 18177  01709A  006F FF8F FFE6     	movff	plusw1,postinc1
 18178  0170A0  006F FF8F FFE6     	movff	plusw1,postinc1
 18179                           
 18180                           ;stkvar	_i @ sp[(-16)+8]
 18181  0170A6  0E43               	movlw	low _dbuf
 18182  0170A8  6E0B               	movwf	(btemp+10)^0,c
 18183  0170AA  0E02               	movlw	high _dbuf
 18184  0170AC  6E0C               	movwf	(btemp+11)^0,c
 18185  0170AE  0EF8               	movlw	-8
 18186  0170B0  50E3               	movf	plusw1,w,c
 18187  0170B2  260B               	addwf	(btemp+10)^0,f,c
 18188  0170B4  0EF9               	movlw	-7
 18189  0170B6  50E3               	movf	plusw1,w,c
 18190  0170B8  220C               	addwfc	(btemp+11)^0,f,c
 18191  0170BA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18192  0170C0  0060  F033  FFE6   	movff	btemp+11,postinc1
 18193                           
 18194                           ;stkvar	_fp @ sp[(-18)+-2]
 18195  0170C6  0EEC               	movlw	-20
 18196  0170C8  006F FF8F FFE6     	movff	plusw1,postinc1
 18197  0170CE  006F FF8F FFE6     	movff	plusw1,postinc1
 18198  0170D4  EC3B  F0D4         	call	_pad	;wreg free
 18199                           
 18200                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 18201  0170D8  0EE8               	movlw	232
 18202  0170DA  26E1               	addwf	fsr1l,f,c
 18203  0170DC  0EFF               	movlw	255
 18204  0170DE  22E2               	addwfc	fsr1h,f,c
 18205  0170E0  0012               	return		;funcret
 18206  0170E2                     __end_of_utoa:
 18207                           	opt callstack 0
 18208                           
 18209 ;; *************** function ___lomod *****************
 18210 ;; Defined at:
 18211 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 18212 ;; Parameters:    Size  Location     Type
 18213 ;;  dividend        8  [STACK] unsigned long long 
 18214 ;;  divisor         8  [STACK] unsigned long long 
 18215 ;; Auto vars:     Size  Location     Type
 18216 ;;  counter         1  [STACK] unsigned char 
 18217 ;; Return value:  Size  Location     Type
 18218 ;;                  8  [STACK] unsigned long long 
 18219 ;; Registers used:
 18220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18221 ;; Tracked objects:
 18222 ;;		On entry : 0/2
 18223 ;;		On exit  : 0/0
 18224 ;;		Unchanged: 0/0
 18225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18230 ;;Total ram usage:        0 bytes
 18231 ;; Hardware stack levels used:    1
 18232 ;; Hardware stack levels required when called:   15
 18233 ;; This function calls:
 18234 ;;		Nothing
 18235 ;; This function is called by:
 18236 ;;		_utoa
 18237 ;; This function uses a reentrant model
 18238 ;;
 18239                           
 18240                           	psect	text71
 18241  01A04E                     __ptext71:
 18242                           	opt callstack 0
 18243  01A04E                     ___lomod:
 18244                           	opt callstack 0
 18245                           
 18246                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18247  01A04E  52E6               	movf	postinc1,f,c
 18248                           
 18249                           ;stkvar	_divisor @ sp[(-1)+-16]
 18250                           
 18251                           ;incstack = 0
 18252 ;; hardware stack exceeded
 18253  01A050  0EEF               	movlw	-17
 18254  01A052  50E3               	movf	plusw1,w,c
 18255  01A054  E116               	bnz	u7850
 18256  01A056  0EF0               	movlw	-16
 18257  01A058  50E3               	movf	plusw1,w,c
 18258  01A05A  E113               	bnz	u7850
 18259  01A05C  0EF1               	movlw	-15
 18260  01A05E  50E3               	movf	plusw1,w,c
 18261  01A060  E110               	bnz	u7850
 18262  01A062  0EF2               	movlw	-14
 18263  01A064  50E3               	movf	plusw1,w,c
 18264  01A066  E10D               	bnz	u7850
 18265  01A068  0EF3               	movlw	-13
 18266  01A06A  50E3               	movf	plusw1,w,c
 18267  01A06C  E10A               	bnz	u7850
 18268  01A06E  0EF4               	movlw	-12
 18269  01A070  50E3               	movf	plusw1,w,c
 18270  01A072  E107               	bnz	u7850
 18271  01A074  0EF5               	movlw	-11
 18272  01A076  50E3               	movf	plusw1,w,c
 18273  01A078  E104               	bnz	u7850
 18274  01A07A  0EF6               	movlw	-10
 18275  01A07C  50E3               	movf	plusw1,w,c
 18276  01A07E  B4D8               	btfsc	status,2,c
 18277  01A080  D075               	goto	u7880
 18278  01A082                     u7850:
 18279                           
 18280                           ;stkvar	_counter @ sp[(-1)+0]
 18281  01A082  0EFF               	movlw	-1
 18282  01A084  6AE3               	clrf	plusw1,c
 18283  01A086  D012               	goto	L19
 18284  01A088                     l9440:
 18285                           
 18286                           ;stkvar	_divisor @ sp[(-1)+-16]
 18287  01A088  90D8               	bcf	status,0,c
 18288  01A08A  0EEF               	movlw	-17
 18289  01A08C  36E3               	rlcf	plusw1,f,c
 18290  01A08E  0EF0               	movlw	-16
 18291  01A090  36E3               	rlcf	plusw1,f,c
 18292  01A092  0EF1               	movlw	-15
 18293  01A094  36E3               	rlcf	plusw1,f,c
 18294  01A096  0EF2               	movlw	-14
 18295  01A098  36E3               	rlcf	plusw1,f,c
 18296  01A09A  0EF3               	movlw	-13
 18297  01A09C  36E3               	rlcf	plusw1,f,c
 18298  01A09E  0EF4               	movlw	-12
 18299  01A0A0  36E3               	rlcf	plusw1,f,c
 18300  01A0A2  0EF5               	movlw	-11
 18301  01A0A4  36E3               	rlcf	plusw1,f,c
 18302  01A0A6  0EF6               	movlw	-10
 18303  01A0A8  36E3               	rlcf	plusw1,f,c
 18304                           
 18305                           ;stkvar	_counter @ sp[(-1)+0]
 18306  01A0AA  0EFF               	movlw	-1
 18307  01A0AC                     L19:
 18308  01A0AC  2AE3               	incf	plusw1,f,c
 18309                           
 18310                           ;stkvar	_divisor @ sp[(-1)+-16]
 18311  01A0AE  0EF6               	movlw	-10
 18312  01A0B0  AEE3               	btfss	plusw1,7,c
 18313  01A0B2  D7EA               	goto	l9440
 18314  01A0B4                     u7860:
 18315                           
 18316                           ;stkvar	_divisor @ sp[(-1)+-16]
 18317                           ;stkvar	_dividend @ sp[(-1)+-8]
 18318  01A0B4  50E1               	movf	fsr1l,w,c
 18319  01A0B6  0FF7               	addlw	-9
 18320  01A0B8  6ED9               	movwf	fsr2l,c
 18321  01A0BA  50E2               	movf	fsr1h,w,c
 18322  01A0BC  6EDA               	movwf	fsr2h,c
 18323  01A0BE  0EFF               	movlw	255
 18324  01A0C0  22DA               	addwfc	fsr2h,f,c
 18325  01A0C2  0EEF               	movlw	-17
 18326  01A0C4  50E3               	movf	plusw1,w,c
 18327  01A0C6  5CDE               	subwf	postinc2,w,c
 18328  01A0C8  0EF0               	movlw	-16
 18329  01A0CA  50E3               	movf	plusw1,w,c
 18330  01A0CC  58DE               	subwfb	postinc2,w,c
 18331  01A0CE  0EF1               	movlw	-15
 18332  01A0D0  50E3               	movf	plusw1,w,c
 18333  01A0D2  58DE               	subwfb	postinc2,w,c
 18334  01A0D4  0EF2               	movlw	-14
 18335  01A0D6  50E3               	movf	plusw1,w,c
 18336  01A0D8  58DE               	subwfb	postinc2,w,c
 18337  01A0DA  0EF3               	movlw	-13
 18338  01A0DC  50E3               	movf	plusw1,w,c
 18339  01A0DE  58DE               	subwfb	postinc2,w,c
 18340  01A0E0  0EF4               	movlw	-12
 18341  01A0E2  50E3               	movf	plusw1,w,c
 18342  01A0E4  58DE               	subwfb	postinc2,w,c
 18343  01A0E6  0EF5               	movlw	-11
 18344  01A0E8  50E3               	movf	plusw1,w,c
 18345  01A0EA  58DE               	subwfb	postinc2,w,c
 18346  01A0EC  0EF6               	movlw	-10
 18347  01A0EE  50E3               	movf	plusw1,w,c
 18348  01A0F0  58DE               	subwfb	postinc2,w,c
 18349  01A0F2  A0D8               	btfss	status,0,c
 18350  01A0F4  D01F               	goto	l9448
 18351                           
 18352                           ;stkvar	_divisor @ sp[(-1)+-16]
 18353                           ;stkvar	_dividend @ sp[(-1)+-8]
 18354  01A0F6  50E1               	movf	fsr1l,w,c
 18355  01A0F8  0FF7               	addlw	-9
 18356  01A0FA  6ED9               	movwf	fsr2l,c
 18357  01A0FC  50E2               	movf	fsr1h,w,c
 18358  01A0FE  6EDA               	movwf	fsr2h,c
 18359  01A100  0EFF               	movlw	255
 18360  01A102  22DA               	addwfc	fsr2h,f,c
 18361  01A104  0EEF               	movlw	-17
 18362  01A106  50E3               	movf	plusw1,w,c
 18363  01A108  5EDE               	subwf	postinc2,f,c
 18364  01A10A  0EF0               	movlw	-16
 18365  01A10C  50E3               	movf	plusw1,w,c
 18366  01A10E  5ADE               	subwfb	postinc2,f,c
 18367  01A110  0EF1               	movlw	-15
 18368  01A112  50E3               	movf	plusw1,w,c
 18369  01A114  5ADE               	subwfb	postinc2,f,c
 18370  01A116  0EF2               	movlw	-14
 18371  01A118  50E3               	movf	plusw1,w,c
 18372  01A11A  5ADE               	subwfb	postinc2,f,c
 18373  01A11C  0EF3               	movlw	-13
 18374  01A11E  50E3               	movf	plusw1,w,c
 18375  01A120  5ADE               	subwfb	postinc2,f,c
 18376  01A122  0EF4               	movlw	-12
 18377  01A124  50E3               	movf	plusw1,w,c
 18378  01A126  5ADE               	subwfb	postinc2,f,c
 18379  01A128  0EF5               	movlw	-11
 18380  01A12A  50E3               	movf	plusw1,w,c
 18381  01A12C  5ADE               	subwfb	postinc2,f,c
 18382  01A12E  0EF6               	movlw	-10
 18383  01A130  50E3               	movf	plusw1,w,c
 18384  01A132  5ADE               	subwfb	postinc2,f,c
 18385  01A134                     l9448:
 18386                           
 18387                           ;stkvar	_divisor @ sp[(-1)+-16]
 18388  01A134  90D8               	bcf	status,0,c
 18389  01A136  0EF6               	movlw	-10
 18390  01A138  32E3               	rrcf	plusw1,f,c
 18391  01A13A  0EF5               	movlw	-11
 18392  01A13C  32E3               	rrcf	plusw1,f,c
 18393  01A13E  0EF4               	movlw	-12
 18394  01A140  32E3               	rrcf	plusw1,f,c
 18395  01A142  0EF3               	movlw	-13
 18396  01A144  32E3               	rrcf	plusw1,f,c
 18397  01A146  0EF2               	movlw	-14
 18398  01A148  32E3               	rrcf	plusw1,f,c
 18399  01A14A  0EF1               	movlw	-15
 18400  01A14C  32E3               	rrcf	plusw1,f,c
 18401  01A14E  0EF0               	movlw	-16
 18402  01A150  32E3               	rrcf	plusw1,f,c
 18403  01A152  0EEF               	movlw	-17
 18404  01A154  32E3               	rrcf	plusw1,f,c
 18405                           
 18406                           ;stkvar	_counter @ sp[(-1)+0]
 18407  01A156  0EFF               	movlw	-1
 18408  01A158  50E3               	movf	plusw1,w,c
 18409  01A15A  6E01               	movwf	btemp^0,c
 18410  01A15C  0E01               	movlw	1
 18411  01A15E  5E01               	subwf	btemp^0,f,c
 18412  01A160  0EFF               	movlw	-1
 18413  01A162  0060  F007  FFE3   	movff	btemp,plusw1
 18414  01A168  A4D8               	btfss	status,2,c
 18415  01A16A  D7A4               	goto	u7860
 18416  01A16C                     u7880:
 18417                           
 18418                           ;stkvar	_dividend @ sp[(-1)+-8]
 18419  01A16C  0EF7               	movlw	247
 18420  01A16E  24E1               	addwf	fsr1l,w,c
 18421  01A170  6ED9               	movwf	fsr2l,c
 18422  01A172  0EFF               	movlw	255
 18423  01A174  20E2               	addwfc	fsr1h,w,c
 18424  01A176  6EDA               	movwf	fsr2h,c
 18425                           
 18426                           ;stkvar	?___lomod @ sp[(-1)+-8]
 18427  01A178  0E08               	movlw	8
 18428  01A17A  6E01               	movwf	btemp^0,c
 18429  01A17C  0EF7               	movlw	-9
 18430  01A17E                     us789999:
 18431  01A17E  006F FF7B FFE3     	movff	postinc2,plusw1
 18432  01A184  28E8               	incf	wreg,w,c
 18433  01A186  2E01               	decfsz	btemp^0,f,c
 18434  01A188  D7FA               	bra	us789999
 18435                           
 18436                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18437  01A18A  52E5               	movf	postdec1,f,c
 18438  01A18C  0012               	return		;funcret
 18439  01A18E                     __end_of___lomod:
 18440                           	opt callstack 0
 18441                           
 18442 ;; *************** function ___lodiv *****************
 18443 ;; Defined at:
 18444 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 18445 ;; Parameters:    Size  Location     Type
 18446 ;;  dividend        8  [STACK] unsigned long long 
 18447 ;;  divisor         8  [STACK] unsigned long long 
 18448 ;; Auto vars:     Size  Location     Type
 18449 ;;  quotient        8  [STACK] unsigned long long 
 18450 ;;  counter         1  [STACK] unsigned char 
 18451 ;; Return value:  Size  Location     Type
 18452 ;;                  8  [STACK] unsigned long long 
 18453 ;; Registers used:
 18454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18455 ;; Tracked objects:
 18456 ;;		On entry : 0/2
 18457 ;;		On exit  : 0/0
 18458 ;;		Unchanged: 0/0
 18459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18464 ;;Total ram usage:        0 bytes
 18465 ;; Hardware stack levels used:    1
 18466 ;; Hardware stack levels required when called:   15
 18467 ;; This function calls:
 18468 ;;		Nothing
 18469 ;; This function is called by:
 18470 ;;		_utoa
 18471 ;; This function uses a reentrant model
 18472 ;;
 18473                           
 18474                           	psect	text72
 18475  019696                     __ptext72:
 18476                           	opt callstack 0
 18477  019696                     ___lodiv:
 18478                           	opt callstack 0
 18479                           
 18480                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18481  019696  0E09               	movlw	9
 18482  019698  26E1               	addwf	fsr1l,f,c
 18483  01969A  0E00               	movlw	0
 18484  01969C  22E2               	addwfc	fsr1h,f,c
 18485                           
 18486                           ;stkvar	_quotient @ sp[(-9)+0]
 18487                           
 18488                           ;incstack = 0
 18489 ;; hardware stack exceeded
 18490  01969E  0E07               	movlw	7
 18491  0196A0  6E01               	movwf	btemp^0,c
 18492  0196A2  0EF7               	movlw	-9
 18493  0196A4                     u7791:
 18494  0196A4  6AE3               	clrf	plusw1,c
 18495  0196A6  2AE8               	incf	wreg,f,c
 18496  0196A8  0601               	decf	btemp^0,f,c
 18497  0196AA  E2FC               	bc	u7791
 18498                           
 18499                           ;stkvar	_divisor @ sp[(-9)+-16]
 18500  0196AC  0EE7               	movlw	-25
 18501  0196AE  50E3               	movf	plusw1,w,c
 18502  0196B0  E116               	bnz	u7800
 18503  0196B2  0EE8               	movlw	-24
 18504  0196B4  50E3               	movf	plusw1,w,c
 18505  0196B6  E113               	bnz	u7800
 18506  0196B8  0EE9               	movlw	-23
 18507  0196BA  50E3               	movf	plusw1,w,c
 18508  0196BC  E110               	bnz	u7800
 18509  0196BE  0EEA               	movlw	-22
 18510  0196C0  50E3               	movf	plusw1,w,c
 18511  0196C2  E10D               	bnz	u7800
 18512  0196C4  0EEB               	movlw	-21
 18513  0196C6  50E3               	movf	plusw1,w,c
 18514  0196C8  E10A               	bnz	u7800
 18515  0196CA  0EEC               	movlw	-20
 18516  0196CC  50E3               	movf	plusw1,w,c
 18517  0196CE  E107               	bnz	u7800
 18518  0196D0  0EED               	movlw	-19
 18519  0196D2  50E3               	movf	plusw1,w,c
 18520  0196D4  E104               	bnz	u7800
 18521  0196D6  0EEE               	movlw	-18
 18522  0196D8  50E3               	movf	plusw1,w,c
 18523  0196DA  B4D8               	btfsc	status,2,c
 18524  0196DC  D088               	goto	u7830
 18525  0196DE                     u7800:
 18526                           
 18527                           ;stkvar	_counter @ sp[(-9)+8]
 18528  0196DE  0EFF               	movlw	-1
 18529  0196E0  6AE3               	clrf	plusw1,c
 18530  0196E2  D012               	goto	L20
 18531  0196E4                     l9416:
 18532                           
 18533                           ;stkvar	_divisor @ sp[(-9)+-16]
 18534  0196E4  90D8               	bcf	status,0,c
 18535  0196E6  0EE7               	movlw	-25
 18536  0196E8  36E3               	rlcf	plusw1,f,c
 18537  0196EA  0EE8               	movlw	-24
 18538  0196EC  36E3               	rlcf	plusw1,f,c
 18539  0196EE  0EE9               	movlw	-23
 18540  0196F0  36E3               	rlcf	plusw1,f,c
 18541  0196F2  0EEA               	movlw	-22
 18542  0196F4  36E3               	rlcf	plusw1,f,c
 18543  0196F6  0EEB               	movlw	-21
 18544  0196F8  36E3               	rlcf	plusw1,f,c
 18545  0196FA  0EEC               	movlw	-20
 18546  0196FC  36E3               	rlcf	plusw1,f,c
 18547  0196FE  0EED               	movlw	-19
 18548  019700  36E3               	rlcf	plusw1,f,c
 18549  019702  0EEE               	movlw	-18
 18550  019704  36E3               	rlcf	plusw1,f,c
 18551                           
 18552                           ;stkvar	_counter @ sp[(-9)+8]
 18553  019706  0EFF               	movlw	-1
 18554  019708                     L20:
 18555  019708  2AE3               	incf	plusw1,f,c
 18556                           
 18557                           ;stkvar	_divisor @ sp[(-9)+-16]
 18558  01970A  0EEE               	movlw	-18
 18559  01970C  AEE3               	btfss	plusw1,7,c
 18560  01970E  D7EA               	goto	l9416
 18561  019710                     u7810:
 18562                           
 18563                           ;stkvar	_quotient @ sp[(-9)+0]
 18564  019710  90D8               	bcf	status,0,c
 18565  019712  0EF7               	movlw	-9
 18566  019714  36E3               	rlcf	plusw1,f,c
 18567  019716  0EF8               	movlw	-8
 18568  019718  36E3               	rlcf	plusw1,f,c
 18569  01971A  0EF9               	movlw	-7
 18570  01971C  36E3               	rlcf	plusw1,f,c
 18571  01971E  0EFA               	movlw	-6
 18572  019720  36E3               	rlcf	plusw1,f,c
 18573  019722  0EFB               	movlw	-5
 18574  019724  36E3               	rlcf	plusw1,f,c
 18575  019726  0EFC               	movlw	-4
 18576  019728  36E3               	rlcf	plusw1,f,c
 18577  01972A  0EFD               	movlw	-3
 18578  01972C  36E3               	rlcf	plusw1,f,c
 18579  01972E  0EFE               	movlw	-2
 18580  019730  36E3               	rlcf	plusw1,f,c
 18581                           
 18582                           ;stkvar	_divisor @ sp[(-9)+-16]
 18583                           ;stkvar	_dividend @ sp[(-9)+-8]
 18584  019732  50E1               	movf	fsr1l,w,c
 18585  019734  0FEF               	addlw	-17
 18586  019736  6ED9               	movwf	fsr2l,c
 18587  019738  50E2               	movf	fsr1h,w,c
 18588  01973A  6EDA               	movwf	fsr2h,c
 18589  01973C  0EFF               	movlw	255
 18590  01973E  22DA               	addwfc	fsr2h,f,c
 18591  019740  0EE7               	movlw	-25
 18592  019742  50E3               	movf	plusw1,w,c
 18593  019744  5CDE               	subwf	postinc2,w,c
 18594  019746  0EE8               	movlw	-24
 18595  019748  50E3               	movf	plusw1,w,c
 18596  01974A  58DE               	subwfb	postinc2,w,c
 18597  01974C  0EE9               	movlw	-23
 18598  01974E  50E3               	movf	plusw1,w,c
 18599  019750  58DE               	subwfb	postinc2,w,c
 18600  019752  0EEA               	movlw	-22
 18601  019754  50E3               	movf	plusw1,w,c
 18602  019756  58DE               	subwfb	postinc2,w,c
 18603  019758  0EEB               	movlw	-21
 18604  01975A  50E3               	movf	plusw1,w,c
 18605  01975C  58DE               	subwfb	postinc2,w,c
 18606  01975E  0EEC               	movlw	-20
 18607  019760  50E3               	movf	plusw1,w,c
 18608  019762  58DE               	subwfb	postinc2,w,c
 18609  019764  0EED               	movlw	-19
 18610  019766  50E3               	movf	plusw1,w,c
 18611  019768  58DE               	subwfb	postinc2,w,c
 18612  01976A  0EEE               	movlw	-18
 18613  01976C  50E3               	movf	plusw1,w,c
 18614  01976E  58DE               	subwfb	postinc2,w,c
 18615  019770  A0D8               	btfss	status,0,c
 18616  019772  D021               	goto	l9428
 18617                           
 18618                           ;stkvar	_divisor @ sp[(-9)+-16]
 18619                           ;stkvar	_dividend @ sp[(-9)+-8]
 18620  019774  50E1               	movf	fsr1l,w,c
 18621  019776  0FEF               	addlw	-17
 18622  019778  6ED9               	movwf	fsr2l,c
 18623  01977A  50E2               	movf	fsr1h,w,c
 18624  01977C  6EDA               	movwf	fsr2h,c
 18625  01977E  0EFF               	movlw	255
 18626  019780  22DA               	addwfc	fsr2h,f,c
 18627  019782  0EE7               	movlw	-25
 18628  019784  50E3               	movf	plusw1,w,c
 18629  019786  5EDE               	subwf	postinc2,f,c
 18630  019788  0EE8               	movlw	-24
 18631  01978A  50E3               	movf	plusw1,w,c
 18632  01978C  5ADE               	subwfb	postinc2,f,c
 18633  01978E  0EE9               	movlw	-23
 18634  019790  50E3               	movf	plusw1,w,c
 18635  019792  5ADE               	subwfb	postinc2,f,c
 18636  019794  0EEA               	movlw	-22
 18637  019796  50E3               	movf	plusw1,w,c
 18638  019798  5ADE               	subwfb	postinc2,f,c
 18639  01979A  0EEB               	movlw	-21
 18640  01979C  50E3               	movf	plusw1,w,c
 18641  01979E  5ADE               	subwfb	postinc2,f,c
 18642  0197A0  0EEC               	movlw	-20
 18643  0197A2  50E3               	movf	plusw1,w,c
 18644  0197A4  5ADE               	subwfb	postinc2,f,c
 18645  0197A6  0EED               	movlw	-19
 18646  0197A8  50E3               	movf	plusw1,w,c
 18647  0197AA  5ADE               	subwfb	postinc2,f,c
 18648  0197AC  0EEE               	movlw	-18
 18649  0197AE  50E3               	movf	plusw1,w,c
 18650  0197B0  5ADE               	subwfb	postinc2,f,c
 18651                           
 18652                           ;stkvar	_quotient @ sp[(-9)+0]
 18653  0197B2  0EF7               	movlw	-9
 18654  0197B4  80E3               	bsf	plusw1,0,c
 18655  0197B6                     l9428:
 18656                           
 18657                           ;stkvar	_divisor @ sp[(-9)+-16]
 18658  0197B6  90D8               	bcf	status,0,c
 18659  0197B8  0EEE               	movlw	-18
 18660  0197BA  32E3               	rrcf	plusw1,f,c
 18661  0197BC  0EED               	movlw	-19
 18662  0197BE  32E3               	rrcf	plusw1,f,c
 18663  0197C0  0EEC               	movlw	-20
 18664  0197C2  32E3               	rrcf	plusw1,f,c
 18665  0197C4  0EEB               	movlw	-21
 18666  0197C6  32E3               	rrcf	plusw1,f,c
 18667  0197C8  0EEA               	movlw	-22
 18668  0197CA  32E3               	rrcf	plusw1,f,c
 18669  0197CC  0EE9               	movlw	-23
 18670  0197CE  32E3               	rrcf	plusw1,f,c
 18671  0197D0  0EE8               	movlw	-24
 18672  0197D2  32E3               	rrcf	plusw1,f,c
 18673  0197D4  0EE7               	movlw	-25
 18674  0197D6  32E3               	rrcf	plusw1,f,c
 18675                           
 18676                           ;stkvar	_counter @ sp[(-9)+8]
 18677  0197D8  0EFF               	movlw	-1
 18678  0197DA  50E3               	movf	plusw1,w,c
 18679  0197DC  6E01               	movwf	btemp^0,c
 18680  0197DE  0E01               	movlw	1
 18681  0197E0  5E01               	subwf	btemp^0,f,c
 18682  0197E2  0EFF               	movlw	-1
 18683  0197E4  0060  F007  FFE3   	movff	btemp,plusw1
 18684  0197EA  A4D8               	btfss	status,2,c
 18685  0197EC  D791               	goto	u7810
 18686  0197EE                     u7830:
 18687                           
 18688                           ;stkvar	_quotient @ sp[(-9)+0]
 18689  0197EE  0EF7               	movlw	247
 18690  0197F0  24E1               	addwf	fsr1l,w,c
 18691  0197F2  6ED9               	movwf	fsr2l,c
 18692  0197F4  0EFF               	movlw	255
 18693  0197F6  20E2               	addwfc	fsr1h,w,c
 18694  0197F8  6EDA               	movwf	fsr2h,c
 18695                           
 18696                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 18697  0197FA  0E08               	movlw	8
 18698  0197FC  6E01               	movwf	btemp^0,c
 18699  0197FE  0EEF               	movlw	-17
 18700  019800                     us784999:
 18701  019800  006F FF7B FFE3     	movff	postinc2,plusw1
 18702  019806  28E8               	incf	wreg,w,c
 18703  019808  2E01               	decfsz	btemp^0,f,c
 18704  01980A  D7FA               	bra	us784999
 18705                           
 18706                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18707  01980C  0EF7               	movlw	247
 18708  01980E  26E1               	addwf	fsr1l,f,c
 18709  019810  0EFF               	movlw	255
 18710  019812  22E2               	addwfc	fsr1h,f,c
 18711  019814  0012               	return		;funcret
 18712  019816                     __end_of___lodiv:
 18713                           	opt callstack 0
 18714                           
 18715 ;; *************** function _strncmp *****************
 18716 ;; Defined at:
 18717 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 18718 ;; Parameters:    Size  Location     Type
 18719 ;;  _l              2  [STACK] PTR const unsigned char 
 18720 ;;		 -> ct(3), STR_81(127), STR_79(3), STR_78(3), 
 18721 ;;		 -> STR_77(19), STR_76(19), STR_75(19), STR_74(19), 
 18722 ;;		 -> STR_73(19), STR_72(19), STR_71(24), STR_70(15), 
 18723 ;;		 -> STR_69(15), STR_68(15), STR_67(10), STR_66(10), 
 18724 ;;		 -> STR_65(19), STR_64(19), STR_61(3), STR_60(3), 
 18725 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 18726 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 18727 ;;		 -> STR_51(21), STR_50(20), STR_49(20), STR_48(21), 
 18728 ;;		 -> STR_47(21), STR_46(21), STR_45(22), STR_44(22), 
 18729 ;;		 -> STR_43(22), STR_42(23), STR_41(23), STR_40(23), 
 18730 ;;		 -> STR_39(29), STR_38(23), STR_37(23), STR_36(22), 
 18731 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 18732 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 18733 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(17), 
 18734 ;;		 -> STR_23(16), STR_22(16), STR_21(26), STR_20(26), 
 18735 ;;		 -> STR_19(22), STR_18(21), STR_17(21), STR_16(21), 
 18736 ;;		 -> STR_15(21), STR_14(22), STR_13(22), STR_12(22), 
 18737 ;;		 -> STR_11(26), STR_10(21), STR_9(21), STR_8(21), 
 18738 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 18739 ;;		 -> STR_2(21), STR_1(21), 
 18740 ;;  _r              2  [STACK] PTR const unsigned char 
 18741 ;;		 -> STR_115(3), STR_111(3), STR_106(3), STR_101(3), 
 18742 ;;		 -> STR_96(3), STR_92(3), 
 18743 ;;  n               2  [STACK] unsigned int 
 18744 ;; Auto vars:     Size  Location     Type
 18745 ;;  r               2  [STACK] PTR const unsigned char 
 18746 ;;		 -> STR_115(3), STR_111(3), STR_106(3), STR_101(3), 
 18747 ;;		 -> STR_96(3), STR_92(3), 
 18748 ;;  l               2  [STACK] PTR const unsigned char 
 18749 ;;		 -> ct(3), STR_81(127), STR_79(3), STR_78(3), 
 18750 ;;		 -> STR_77(19), STR_76(19), STR_75(19), STR_74(19), 
 18751 ;;		 -> STR_73(19), STR_72(19), STR_71(24), STR_70(15), 
 18752 ;;		 -> STR_69(15), STR_68(15), STR_67(10), STR_66(10), 
 18753 ;;		 -> STR_65(19), STR_64(19), STR_61(3), STR_60(3), 
 18754 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 18755 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 18756 ;;		 -> STR_51(21), STR_50(20), STR_49(20), STR_48(21), 
 18757 ;;		 -> STR_47(21), STR_46(21), STR_45(22), STR_44(22), 
 18758 ;;		 -> STR_43(22), STR_42(23), STR_41(23), STR_40(23), 
 18759 ;;		 -> STR_39(29), STR_38(23), STR_37(23), STR_36(22), 
 18760 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 18761 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 18762 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(17), 
 18763 ;;		 -> STR_23(16), STR_22(16), STR_21(26), STR_20(26), 
 18764 ;;		 -> STR_19(22), STR_18(21), STR_17(21), STR_16(21), 
 18765 ;;		 -> STR_15(21), STR_14(22), STR_13(22), STR_12(22), 
 18766 ;;		 -> STR_11(26), STR_10(21), STR_9(21), STR_8(21), 
 18767 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 18768 ;;		 -> STR_2(21), STR_1(21), 
 18769 ;; Return value:  Size  Location     Type
 18770 ;;                  2  [STACK] int 
 18771 ;; Registers used:
 18772 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 18773 ;; Tracked objects:
 18774 ;;		On entry : 0/0
 18775 ;;		On exit  : 0/0
 18776 ;;		Unchanged: 0/0
 18777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18782 ;;Total ram usage:        0 bytes
 18783 ;; Hardware stack levels used:    1
 18784 ;; Hardware stack levels required when called:   15
 18785 ;; This function calls:
 18786 ;;		Nothing
 18787 ;; This function is called by:
 18788 ;;		_vfpfcnvrt
 18789 ;; This function uses a reentrant model
 18790 ;;
 18791                           
 18792                           	psect	text73
 18793  01860A                     __ptext73:
 18794                           	opt callstack 0
 18795  01860A                     _strncmp:
 18796                           	opt callstack 0
 18797                           
 18798                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18799  01860A  52E6               	movf	postinc1,f,c
 18800  01860C  52E6               	movf	postinc1,f,c
 18801  01860E  52E6               	movf	postinc1,f,c
 18802  018610  52E6               	movf	postinc1,f,c
 18803                           
 18804                           ;stkvar	__l @ sp[(-4)+-2]
 18805                           
 18806                           ;incstack = 0
 18807 ;; hardware stack exceeded
 18808  018612  0EFA               	movlw	-6
 18809  018614  006F FF8C  F00B    	movff	plusw1,btemp+10
 18810  01861A  0EFB               	movlw	-5
 18811  01861C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18812                           
 18813                           ;stkvar	_l @ sp[(-4)+2]
 18814  018622  0EFF               	movlw	-1
 18815  018624  0060  F033  FFE3   	movff	btemp+11,plusw1
 18816  01862A  0EFE               	movlw	-2
 18817  01862C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18818                           
 18819                           ;stkvar	__r @ sp[(-4)+-4]
 18820  018632  0EF8               	movlw	-8
 18821  018634  006F FF8C  F00B    	movff	plusw1,btemp+10
 18822  01863A  0EF9               	movlw	-7
 18823  01863C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18824                           
 18825                           ;stkvar	_r @ sp[(-4)+0]
 18826  018642  0EFD               	movlw	-3
 18827  018644  0060  F033  FFE3   	movff	btemp+11,plusw1
 18828  01864A  0EFC               	movlw	-4
 18829  01864C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18830                           
 18831                           ;stkvar	_n @ sp[(-4)+-6]
 18832  018652  0EF6               	movlw	-10
 18833  018654  006F FF8C  F001    	movff	plusw1,btemp
 18834  01865A  0E01               	movlw	1
 18835  01865C  5E01               	subwf	btemp^0,f,c
 18836  01865E  0EF6               	movlw	-10
 18837  018660  0060  F007  FFE3   	movff	btemp,plusw1
 18838  018666  0EF7               	movlw	-9
 18839  018668  006F FF8C  F001    	movff	plusw1,btemp
 18840  01866E  0E00               	movlw	0
 18841  018670  5A01               	subwfb	btemp^0,f,c
 18842  018672  0EF7               	movlw	-9
 18843  018674  0060  F007  FFE3   	movff	btemp,plusw1
 18844  01867A  0EF6               	movlw	-10
 18845  01867C  28E3               	incf	plusw1,w,c
 18846  01867E  E13F               	bnz	l10098
 18847  018680  0EF7               	movlw	-9
 18848  018682  28E3               	incf	plusw1,w,c
 18849  018684  A4D8               	btfss	status,2,c
 18850  018686  D03B               	goto	l10098
 18851  018688  0E00               	movlw	0
 18852  01868A  6E01               	movwf	btemp^0,c
 18853  01868C  0E00               	movlw	0
 18854  01868E  6E02               	movwf	(btemp+1)^0,c
 18855  018690  D0C7               	goto	l3715
 18856  018692                     l10096:
 18857                           
 18858                           ;stkvar	_l @ sp[(-4)+2]
 18859  018692  0EFE               	movlw	-2
 18860  018694  50E3               	movf	plusw1,w,c
 18861  018696  0F01               	addlw	1
 18862  018698  6E01               	movwf	btemp^0,c
 18863  01869A  0EFE               	movlw	-2
 18864  01869C  0060  F007  FFE3   	movff	btemp,plusw1
 18865  0186A2  6A01               	clrf	btemp^0,c
 18866  0186A4  0EFF               	movlw	-1
 18867  0186A6  50E3               	movf	plusw1,w,c
 18868  0186A8  2001               	addwfc	btemp^0,w,c
 18869  0186AA  6E01               	movwf	btemp^0,c
 18870  0186AC  0EFF               	movlw	-1
 18871  0186AE  0060  F007  FFE3   	movff	btemp,plusw1
 18872                           
 18873                           ;stkvar	_r @ sp[(-4)+0]
 18874  0186B4  0EFC               	movlw	-4
 18875  0186B6  50E3               	movf	plusw1,w,c
 18876  0186B8  0F01               	addlw	1
 18877  0186BA  6E01               	movwf	btemp^0,c
 18878  0186BC  0EFC               	movlw	-4
 18879  0186BE  0060  F007  FFE3   	movff	btemp,plusw1
 18880  0186C4  6A01               	clrf	btemp^0,c
 18881  0186C6  0EFD               	movlw	-3
 18882  0186C8  50E3               	movf	plusw1,w,c
 18883  0186CA  2001               	addwfc	btemp^0,w,c
 18884  0186CC  6E01               	movwf	btemp^0,c
 18885  0186CE  0EFD               	movlw	-3
 18886  0186D0  0060  F007  FFE3   	movff	btemp,plusw1
 18887                           
 18888                           ;stkvar	_n @ sp[(-4)+-6]
 18889  0186D6  0EF6               	movlw	-10
 18890  0186D8  006F FF8C  F001    	movff	plusw1,btemp
 18891  0186DE  0E01               	movlw	1
 18892  0186E0  5E01               	subwf	btemp^0,f,c
 18893  0186E2  0EF6               	movlw	-10
 18894  0186E4  0060  F007  FFE3   	movff	btemp,plusw1
 18895  0186EA  0EF7               	movlw	-9
 18896  0186EC  006F FF8C  F001    	movff	plusw1,btemp
 18897  0186F2  0E00               	movlw	0
 18898  0186F4  5A01               	subwfb	btemp^0,f,c
 18899  0186F6  0EF7               	movlw	-9
 18900  0186F8  0060  F007  FFE3   	movff	btemp,plusw1
 18901  0186FE                     l10098:
 18902                           
 18903                           ;stkvar	_l @ sp[(-4)+2]
 18904  0186FE  0EFE               	movlw	-2
 18905  018700  006F FF8F FFF6     	movff	plusw1,tblptrl
 18906  018706  0EFF               	movlw	-1
 18907  018708  006F FF8F FFF7     	movff	plusw1,tblptrh
 18908  01870E  0E00               	movlw	low (__mediumconst shr (0+16))
 18909  018710  6EF8               	movwf	tblptru,c
 18910  018712  0E1F               	movlw	(high __ramtop+-1)
 18911  018714  64F7               	cpfsgt	tblptrh,c
 18912  018716  D003               	bra	u9087
 18913  018718  0008               	tblrd		*
 18914  01871A  50F5               	movf	tablat,w,c
 18915  01871C  D007               	bra	u9080
 18916  01871E                     u9087:
 18917  01871E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18918  018724  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18919  01872A  50EF               	movf	indf0,w,c
 18920  01872C                     u9080:
 18921  01872C  0900               	iorlw	0
 18922  01872E  B4D8               	btfsc	status,2,c
 18923  018730  D04A               	goto	u9120
 18924                           
 18925                           ;stkvar	_r @ sp[(-4)+0]
 18926  018732  50E1               	movf	fsr1l,w,c
 18927  018734  0FFC               	addlw	-4
 18928  018736  6ED9               	movwf	fsr2l,c
 18929  018738  50E2               	movf	fsr1h,w,c
 18930  01873A  6EDA               	movwf	fsr2h,c
 18931  01873C  0EFF               	movlw	255
 18932  01873E  22DA               	addwfc	fsr2h,f,c
 18933  018740  006F FF7B FFF6     	movff	postinc2,tblptrl
 18934  018746  006F FF77 FFF7     	movff	postdec2,tblptrh
 18935  01874C                     	if	0	;tblptru may be non-zero
 18936  01874C                     	endif
 18937  01874C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18938  01874C  0E00               	movlw	low (__mediumconst shr (0+16))
 18939  01874E  6EF8               	movwf	tblptru,c
 18940  018750                     	endif
 18941  018750  0008               	tblrd		*
 18942  018752  50F5               	movf	tablat,w,c
 18943  018754  0900               	iorlw	0
 18944  018756  B4D8               	btfsc	status,2,c
 18945  018758  D036               	goto	u9120
 18946                           
 18947                           ;stkvar	_n @ sp[(-4)+-6]
 18948  01875A  0EF6               	movlw	-10
 18949  01875C  006F FF8C  F001    	movff	plusw1,btemp
 18950  018762  0EF7               	movlw	-9
 18951  018764  50E3               	movf	plusw1,w,c
 18952  018766  1001               	iorwf	btemp^0,w,c
 18953  018768  B4D8               	btfsc	status,2,c
 18954  01876A  D02D               	goto	u9120
 18955                           
 18956                           ;stkvar	_r @ sp[(-4)+0]
 18957  01876C  50E1               	movf	fsr1l,w,c
 18958  01876E  0FFC               	addlw	-4
 18959  018770  6ED9               	movwf	fsr2l,c
 18960  018772  50E2               	movf	fsr1h,w,c
 18961  018774  6EDA               	movwf	fsr2h,c
 18962  018776  0EFF               	movlw	255
 18963  018778  22DA               	addwfc	fsr2h,f,c
 18964  01877A  006F FF7B FFF6     	movff	postinc2,tblptrl
 18965  018780  006F FF77 FFF7     	movff	postdec2,tblptrh
 18966  018786                     	if	0	;tblptru may be non-zero
 18967  018786                     	endif
 18968  018786                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18969  018786  0E00               	movlw	low (__mediumconst shr (0+16))
 18970  018788  6EF8               	movwf	tblptru,c
 18971  01878A                     	endif
 18972  01878A  0008               	tblrd		*
 18973  01878C  006F FFD4  F00C    	movff	tablat,btemp+11
 18974                           
 18975                           ;stkvar	_l @ sp[(-4)+2]
 18976  018792  0EFE               	movlw	-2
 18977  018794  006F FF8F FFF6     	movff	plusw1,tblptrl
 18978  01879A  0EFF               	movlw	-1
 18979  01879C  006F FF8F FFF7     	movff	plusw1,tblptrh
 18980  0187A2  0E00               	movlw	low (__mediumconst shr (0+16))
 18981  0187A4  6EF8               	movwf	tblptru,c
 18982  0187A6  0E1F               	movlw	(high __ramtop+-1)
 18983  0187A8  64F7               	cpfsgt	tblptrh,c
 18984  0187AA  D003               	bra	u9127
 18985  0187AC  0008               	tblrd		*
 18986  0187AE  50F5               	movf	tablat,w,c
 18987  0187B0  D007               	bra	u9125
 18988  0187B2                     u9127:
 18989  0187B2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18990  0187B8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18991  0187BE  50EF               	movf	indf0,w,c
 18992  0187C0                     u9125:
 18993  0187C0  180C               	xorwf	(btemp+11)^0,w,c
 18994  0187C2  B4D8               	btfsc	status,2,c
 18995  0187C4  D766               	goto	l10096
 18996  0187C6                     u9120:
 18997                           
 18998                           ;stkvar	_l @ sp[(-4)+2]
 18999  0187C6  0EFE               	movlw	-2
 19000  0187C8  006F FF8F FFF6     	movff	plusw1,tblptrl
 19001  0187CE  0EFF               	movlw	-1
 19002  0187D0  006F FF8F FFF7     	movff	plusw1,tblptrh
 19003  0187D6  0E00               	movlw	low (__mediumconst shr (0+16))
 19004  0187D8  6EF8               	movwf	tblptru,c
 19005  0187DA  0E1F               	movlw	(high __ramtop+-1)
 19006  0187DC  64F7               	cpfsgt	tblptrh,c
 19007  0187DE  D003               	bra	u9137
 19008  0187E0  0008               	tblrd		*
 19009  0187E2  50F5               	movf	tablat,w,c
 19010  0187E4  D007               	bra	u9130
 19011  0187E6                     u9137:
 19012  0187E6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19013  0187EC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19014  0187F2  50EF               	movf	indf0,w,c
 19015  0187F4                     u9130:
 19016  0187F4  6E01               	movwf	btemp^0,c
 19017  0187F6  6A02               	clrf	(btemp+1)^0,c
 19018                           
 19019                           ;stkvar	_r @ sp[(-4)+0]
 19020  0187F8  50E1               	movf	fsr1l,w,c
 19021  0187FA  0FFC               	addlw	-4
 19022  0187FC  6ED9               	movwf	fsr2l,c
 19023  0187FE  50E2               	movf	fsr1h,w,c
 19024  018800  6EDA               	movwf	fsr2h,c
 19025  018802  0EFF               	movlw	255
 19026  018804  22DA               	addwfc	fsr2h,f,c
 19027  018806  006F FF7B FFF6     	movff	postinc2,tblptrl
 19028  01880C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19029  018812                     	if	0	;tblptru may be non-zero
 19030  018812                     	endif
 19031  018812                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19032  018812  0E00               	movlw	low (__mediumconst shr (0+16))
 19033  018814  6EF8               	movwf	tblptru,c
 19034  018816                     	endif
 19035  018816  0008               	tblrd		*
 19036  018818  50F5               	movf	tablat,w,c
 19037  01881A  5E01               	subwf	btemp^0,f,c
 19038  01881C  0E00               	movlw	0
 19039  01881E  5A02               	subwfb	(btemp+1)^0,f,c
 19040  018820                     l3715:
 19041                           
 19042                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 19043  018820  0EF6               	movlw	246
 19044  018822  26E1               	addwf	fsr1l,f,c
 19045  018824  0EFF               	movlw	255
 19046  018826  22E2               	addwfc	fsr1h,f,c
 19047  018828  0012               	return		;funcret
 19048  01882A                     __end_of_strncmp:
 19049                           	opt callstack 0
 19050                           
 19051 ;; *************** function _stoa *****************
 19052 ;; Defined at:
 19053 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19054 ;; Parameters:    Size  Location     Type
 19055 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19056 ;;		 -> f(6), NULL(0), 
 19057 ;;  s               2  [STACK] PTR unsigned char 
 19058 ;;		 -> ?_printf(2), ?_sprintf(2), STR_63(9), STR_62(12), 
 19059 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 19060 ;;		 -> V(192), 
 19061 ;; Auto vars:     Size  Location     Type
 19062 ;;  nuls            7  [STACK] unsigned char [7]
 19063 ;;  l               2  [STACK] int 
 19064 ;;  p               2  [STACK] int 
 19065 ;;  cp              2  [STACK] PTR unsigned char 
 19066 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_63(9), 
 19067 ;;		 -> STR_62(12), D.lcd(480), D(482), T(144), 
 19068 ;;		 -> STR_3(5), V(192), 
 19069 ;;  w               2  [STACK] int 
 19070 ;;  i               2  [STACK] int 
 19071 ;; Return value:  Size  Location     Type
 19072 ;;                  2  [STACK] int 
 19073 ;; Registers used:
 19074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19075 ;; Tracked objects:
 19076 ;;		On entry : 0/0
 19077 ;;		On exit  : 0/0
 19078 ;;		Unchanged: 0/0
 19079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19084 ;;Total ram usage:        0 bytes
 19085 ;; Hardware stack levels used:    1
 19086 ;; Hardware stack levels required when called:   18
 19087 ;; This function calls:
 19088 ;;		_fputc
 19089 ;;		_strlen
 19090 ;; This function is called by:
 19091 ;;		_vfpfcnvrt
 19092 ;; This function uses a reentrant model
 19093 ;;
 19094                           
 19095                           	psect	text74
 19096  0179D2                     __ptext74:
 19097                           	opt callstack 0
 19098  0179D2                     _stoa:
 19099                           	opt callstack 0
 19100                           
 19101                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19102  0179D2  0E11               	movlw	17
 19103  0179D4  26E1               	addwf	fsr1l,f,c
 19104  0179D6  0E00               	movlw	0
 19105  0179D8  22E2               	addwfc	fsr1h,f,c
 19106                           
 19107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 19108                           
 19109                           ;incstack = 0
 19110 ;; hardware stack exceeded
 19111  0179DA  EE20  F100         	lfsr	2,stoa@F1166
 19112                           
 19113                           ;stkvar	_nuls @ sp[(-17)+0]
 19114  0179DE  0E07               	movlw	7
 19115  0179E0  6E01               	movwf	btemp^0,c
 19116  0179E2  0EEF               	movlw	-17
 19117  0179E4                     us1255999:
 19118  0179E4  006F FF7B FFE3     	movff	postinc2,plusw1
 19119  0179EA  28E8               	incf	wreg,w,c
 19120  0179EC  2E01               	decfsz	btemp^0,f,c
 19121  0179EE  D7FA               	bra	us1255999
 19122                           
 19123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 19124                           ;stkvar	_s @ sp[(-17)+-4]
 19125  0179F0  0EEB               	movlw	-21
 19126  0179F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 19127  0179F8  0EEC               	movlw	-20
 19128  0179FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19129                           
 19130                           ;stkvar	_cp @ sp[(-17)+11]
 19131  017A00  0EFB               	movlw	-5
 19132  017A02  0060  F033  FFE3   	movff	btemp+11,plusw1
 19133  017A08  0EFA               	movlw	-6
 19134  017A0A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19135                           
 19136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 19137                           ;stkvar	_cp @ sp[(-17)+11]
 19138  017A10  0EFA               	movlw	-6
 19139  017A12  006F FF8C  F001    	movff	plusw1,btemp
 19140  017A18  0EFB               	movlw	-5
 19141  017A1A  50E3               	movf	plusw1,w,c
 19142  017A1C  1001               	iorwf	btemp^0,w,c
 19143  017A1E  A4D8               	btfss	status,2,c
 19144  017A20  D00E               	goto	l13498
 19145                           
 19146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 19147                           ;stkvar	_nuls @ sp[(-17)+0]
 19148  017A22  0EEF               	movlw	239
 19149  017A24  24E1               	addwf	fsr1l,w,c
 19150  017A26  6E0B               	movwf	(btemp+10)^0,c
 19151  017A28  0EFF               	movlw	255
 19152  017A2A  20E2               	addwfc	fsr1h,w,c
 19153  017A2C  6E0C               	movwf	(btemp+11)^0,c
 19154                           
 19155                           ;stkvar	_cp @ sp[(-17)+11]
 19156  017A2E  0EFB               	movlw	-5
 19157  017A30  0060  F033  FFE3   	movff	btemp+11,plusw1
 19158  017A36  0EFA               	movlw	-6
 19159  017A38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19160  017A3E                     l13498:
 19161                           
 19162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 19163                           ;stkvar	_cp @ sp[(-17)+11]
 19164  017A3E  0EFA               	movlw	-6
 19165  017A40  006F FF8F FFE6     	movff	plusw1,postinc1
 19166  017A46  006F FF8F FFE6     	movff	plusw1,postinc1
 19167  017A4C  EC01  F0DC         	call	_strlen	;wreg free
 19168                           
 19169                           ;stkvar	_l @ sp[(-17)+7]
 19170  017A50  0EF6               	movlw	-10
 19171  017A52  0060  F007  FFE3   	movff	btemp,plusw1
 19172  017A58  0EF7               	movlw	-9
 19173  017A5A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19174                           
 19175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 19176                           ;stkvar	_p @ sp[(-17)+9]
 19177  017A60  0EF8               	movlw	-8
 19178  017A62  0060  F0F3  FFE3   	movff	_prec,plusw1
 19179  017A68  0EF9               	movlw	-7
 19180  017A6A  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 19181                           
 19182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 19183                           ;stkvar	_p @ sp[(-17)+9]
 19184  017A70  0EF9               	movlw	-7
 19185  017A72  BEE3               	btfsc	plusw1,7,c
 19186  017A74  D023               	goto	l2540
 19187                           
 19188                           ;stkvar	_l @ sp[(-17)+7]
 19189                           ;stkvar	_p @ sp[(-17)+9]
 19190  017A76  50E1               	movf	fsr1l,w,c
 19191  017A78  0FF8               	addlw	-8
 19192  017A7A  6ED9               	movwf	fsr2l,c
 19193  017A7C  50E2               	movf	fsr1h,w,c
 19194  017A7E  6EDA               	movwf	fsr2h,c
 19195  017A80  0EFF               	movlw	255
 19196  017A82  22DA               	addwfc	fsr2h,f,c
 19197  017A84  0EF6               	movlw	-10
 19198  017A86  50E3               	movf	plusw1,w,c
 19199  017A88  5CDE               	subwf	postinc2,w,c
 19200  017A8A  50DE               	movf	postinc2,w,c
 19201  017A8C  0A80               	xorlw	128
 19202  017A8E  6E01               	movwf	btemp^0,c
 19203  017A90  0EF7               	movlw	-9
 19204  017A92  50E3               	movf	plusw1,w,c
 19205  017A94  0A80               	xorlw	128
 19206  017A96  5801               	subwfb	btemp^0,w,c
 19207  017A98  B0D8               	btfsc	status,0,c
 19208  017A9A  D010               	goto	l2540
 19209                           
 19210                           ;stkvar	_p @ sp[(-17)+9]
 19211                           ;stkvar	_l @ sp[(-17)+7]
 19212  017A9C  0EF8               	movlw	-8
 19213  017A9E  006F FF8C  F001    	movff	plusw1,btemp
 19214  017AA4  0EF6               	movlw	-10
 19215  017AA6  0060  F007  FFE3   	movff	btemp,plusw1
 19216  017AAC  0EF9               	movlw	-7
 19217  017AAE  006F FF8C  F001    	movff	plusw1,btemp
 19218  017AB4  0EF7               	movlw	-9
 19219  017AB6  0060  F007  FFE3   	movff	btemp,plusw1
 19220  017ABC                     l2540:
 19221                           
 19222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 19223                           ;stkvar	_l @ sp[(-17)+7]
 19224                           ;stkvar	_p @ sp[(-17)+9]
 19225  017ABC  0EF6               	movlw	-10
 19226  017ABE  006F FF8C  F001    	movff	plusw1,btemp
 19227  017AC4  0EF8               	movlw	-8
 19228  017AC6  0060  F007  FFE3   	movff	btemp,plusw1
 19229  017ACC  0EF7               	movlw	-9
 19230  017ACE  006F FF8C  F001    	movff	plusw1,btemp
 19231  017AD4  0EF9               	movlw	-7
 19232  017AD6  0060  F007  FFE3   	movff	btemp,plusw1
 19233                           
 19234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 19235                           ;stkvar	_w @ sp[(-17)+13]
 19236  017ADC  0EFC               	movlw	-4
 19237  017ADE  0060  F0EB  FFE3   	movff	_width,plusw1
 19238  017AE4  0EFD               	movlw	-3
 19239  017AE6  0060  F0EF  FFE3   	movff	_width+1,plusw1
 19240                           
 19241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 19242  017AEC  A03E               	btfss	_flags^0,0,c
 19243  017AEE  D01F               	goto	l13518
 19244  017AF0  D031               	goto	u12600
 19245  017AF2                     l13514:
 19246                           
 19247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 19248                           ;stkvar	_fp @ sp[(-17)+-2]
 19249  017AF2  0EED               	movlw	-19
 19250  017AF4  006F FF8F FFE6     	movff	plusw1,postinc1
 19251  017AFA  006F FF8F FFE6     	movff	plusw1,postinc1
 19252  017B00  0E20               	movlw	32
 19253  017B02  6EE6               	movwf	postinc1,c
 19254  017B04  0E00               	movlw	0
 19255  017B06  6EE6               	movwf	postinc1,c
 19256  017B08  EC91  F0D2         	call	_fputc	;wreg free
 19257                           
 19258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 19259                           ;stkvar	_l @ sp[(-17)+7]
 19260  017B0C  0EF6               	movlw	-10
 19261  017B0E  50E3               	movf	plusw1,w,c
 19262  017B10  0F01               	addlw	1
 19263  017B12  6E01               	movwf	btemp^0,c
 19264  017B14  0EF6               	movlw	-10
 19265  017B16  0060  F007  FFE3   	movff	btemp,plusw1
 19266  017B1C  6A01               	clrf	btemp^0,c
 19267  017B1E  0EF7               	movlw	-9
 19268  017B20  50E3               	movf	plusw1,w,c
 19269  017B22  2001               	addwfc	btemp^0,w,c
 19270  017B24  6E01               	movwf	btemp^0,c
 19271  017B26  0EF7               	movlw	-9
 19272  017B28  0060  F007  FFE3   	movff	btemp,plusw1
 19273  017B2E                     l13518:
 19274                           
 19275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 19276                           ;stkvar	_w @ sp[(-17)+13]
 19277                           ;stkvar	_l @ sp[(-17)+7]
 19278  017B2E  50E1               	movf	fsr1l,w,c
 19279  017B30  0FF6               	addlw	-10
 19280  017B32  6ED9               	movwf	fsr2l,c
 19281  017B34  50E2               	movf	fsr1h,w,c
 19282  017B36  6EDA               	movwf	fsr2h,c
 19283  017B38  0EFF               	movlw	255
 19284  017B3A  22DA               	addwfc	fsr2h,f,c
 19285  017B3C  0EFC               	movlw	-4
 19286  017B3E  50E3               	movf	plusw1,w,c
 19287  017B40  5CDE               	subwf	postinc2,w,c
 19288  017B42  50DE               	movf	postinc2,w,c
 19289  017B44  0A80               	xorlw	128
 19290  017B46  6E01               	movwf	btemp^0,c
 19291  017B48  0EFD               	movlw	-3
 19292  017B4A  50E3               	movf	plusw1,w,c
 19293  017B4C  0A80               	xorlw	128
 19294  017B4E  5801               	subwfb	btemp^0,w,c
 19295  017B50  A0D8               	btfss	status,0,c
 19296  017B52  D7CF               	goto	l13514
 19297  017B54                     u12600:
 19298                           
 19299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 19300                           ;stkvar	_i @ sp[(-17)+15]
 19301  017B54  0EFE               	movlw	-2
 19302  017B56  6AE3               	clrf	plusw1,c
 19303  017B58  0EFF               	movlw	-1
 19304  017B5A  6AE3               	clrf	plusw1,c
 19305                           
 19306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 19307  017B5C  D045               	goto	l13528
 19308  017B5E                     l13522:
 19309                           
 19310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 19311                           ;stkvar	_fp @ sp[(-17)+-2]
 19312  017B5E  0EED               	movlw	-19
 19313  017B60  006F FF8F FFE6     	movff	plusw1,postinc1
 19314  017B66  006F FF8F FFE6     	movff	plusw1,postinc1
 19315                           
 19316                           ;stkvar	_cp @ sp[(-19)+11]
 19317  017B6C  0EF8               	movlw	-8
 19318  017B6E  006F FF8F FFF6     	movff	plusw1,tblptrl
 19319  017B74  0EF9               	movlw	-7
 19320  017B76  006F FF8F FFF7     	movff	plusw1,tblptrh
 19321  017B7C  0E00               	movlw	low (__mediumconst shr (0+16))
 19322  017B7E  6EF8               	movwf	tblptru,c
 19323  017B80  0E1F               	movlw	(high __ramtop+-1)
 19324  017B82  64F7               	cpfsgt	tblptrh,c
 19325  017B84  D003               	bra	u12617
 19326  017B86  0008               	tblrd		*
 19327  017B88  50F5               	movf	tablat,w,c
 19328  017B8A  D007               	bra	u12610
 19329  017B8C                     u12617:
 19330  017B8C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19331  017B92  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19332  017B98  50EF               	movf	indf0,w,c
 19333  017B9A                     u12610:
 19334  017B9A  6EE6               	movwf	postinc1,c
 19335  017B9C  0E00               	movlw	0
 19336  017B9E  6EE6               	movwf	postinc1,c
 19337  017BA0  EC91  F0D2         	call	_fputc	;wreg free
 19338                           
 19339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 19340                           ;stkvar	_cp @ sp[(-17)+11]
 19341  017BA4  0EFA               	movlw	-6
 19342  017BA6  50E3               	movf	plusw1,w,c
 19343  017BA8  0F01               	addlw	1
 19344  017BAA  6E01               	movwf	btemp^0,c
 19345  017BAC  0EFA               	movlw	-6
 19346  017BAE  0060  F007  FFE3   	movff	btemp,plusw1
 19347  017BB4  6A01               	clrf	btemp^0,c
 19348  017BB6  0EFB               	movlw	-5
 19349  017BB8  50E3               	movf	plusw1,w,c
 19350  017BBA  2001               	addwfc	btemp^0,w,c
 19351  017BBC  6E01               	movwf	btemp^0,c
 19352  017BBE  0EFB               	movlw	-5
 19353  017BC0  0060  F007  FFE3   	movff	btemp,plusw1
 19354                           
 19355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 19356                           ;stkvar	_i @ sp[(-17)+15]
 19357  017BC6  0EFE               	movlw	-2
 19358  017BC8  50E3               	movf	plusw1,w,c
 19359  017BCA  0F01               	addlw	1
 19360  017BCC  6E01               	movwf	btemp^0,c
 19361  017BCE  0EFE               	movlw	-2
 19362  017BD0  0060  F007  FFE3   	movff	btemp,plusw1
 19363  017BD6  6A01               	clrf	btemp^0,c
 19364  017BD8  0EFF               	movlw	-1
 19365  017BDA  50E3               	movf	plusw1,w,c
 19366  017BDC  2001               	addwfc	btemp^0,w,c
 19367  017BDE  6E01               	movwf	btemp^0,c
 19368  017BE0  0EFF               	movlw	-1
 19369  017BE2  0060  F007  FFE3   	movff	btemp,plusw1
 19370  017BE8                     l13528:
 19371                           
 19372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 19373                           ;stkvar	_p @ sp[(-17)+9]
 19374                           ;stkvar	_i @ sp[(-17)+15]
 19375  017BE8  50E1               	movf	fsr1l,w,c
 19376  017BEA  0FFE               	addlw	-2
 19377  017BEC  6ED9               	movwf	fsr2l,c
 19378  017BEE  50E2               	movf	fsr1h,w,c
 19379  017BF0  6EDA               	movwf	fsr2h,c
 19380  017BF2  0EFF               	movlw	255
 19381  017BF4  22DA               	addwfc	fsr2h,f,c
 19382  017BF6  0EF8               	movlw	-8
 19383  017BF8  50E3               	movf	plusw1,w,c
 19384  017BFA  5CDE               	subwf	postinc2,w,c
 19385  017BFC  50DE               	movf	postinc2,w,c
 19386  017BFE  0A80               	xorlw	128
 19387  017C00  6E01               	movwf	btemp^0,c
 19388  017C02  0EF9               	movlw	-7
 19389  017C04  50E3               	movf	plusw1,w,c
 19390  017C06  0A80               	xorlw	128
 19391  017C08  5801               	subwfb	btemp^0,w,c
 19392  017C0A  A0D8               	btfss	status,0,c
 19393  017C0C  D7A8               	goto	l13522
 19394                           
 19395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 19396  017C0E  B03E               	btfsc	_flags^0,0,c
 19397  017C10  D01F               	goto	l13536
 19398  017C12  D031               	goto	u12640
 19399  017C14                     l13532:
 19400                           
 19401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 19402                           ;stkvar	_fp @ sp[(-17)+-2]
 19403  017C14  0EED               	movlw	-19
 19404  017C16  006F FF8F FFE6     	movff	plusw1,postinc1
 19405  017C1C  006F FF8F FFE6     	movff	plusw1,postinc1
 19406  017C22  0E20               	movlw	32
 19407  017C24  6EE6               	movwf	postinc1,c
 19408  017C26  0E00               	movlw	0
 19409  017C28  6EE6               	movwf	postinc1,c
 19410  017C2A  EC91  F0D2         	call	_fputc	;wreg free
 19411                           
 19412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 19413                           ;stkvar	_l @ sp[(-17)+7]
 19414  017C2E  0EF6               	movlw	-10
 19415  017C30  50E3               	movf	plusw1,w,c
 19416  017C32  0F01               	addlw	1
 19417  017C34  6E01               	movwf	btemp^0,c
 19418  017C36  0EF6               	movlw	-10
 19419  017C38  0060  F007  FFE3   	movff	btemp,plusw1
 19420  017C3E  6A01               	clrf	btemp^0,c
 19421  017C40  0EF7               	movlw	-9
 19422  017C42  50E3               	movf	plusw1,w,c
 19423  017C44  2001               	addwfc	btemp^0,w,c
 19424  017C46  6E01               	movwf	btemp^0,c
 19425  017C48  0EF7               	movlw	-9
 19426  017C4A  0060  F007  FFE3   	movff	btemp,plusw1
 19427  017C50                     l13536:
 19428                           
 19429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 19430                           ;stkvar	_w @ sp[(-17)+13]
 19431                           ;stkvar	_l @ sp[(-17)+7]
 19432  017C50  50E1               	movf	fsr1l,w,c
 19433  017C52  0FF6               	addlw	-10
 19434  017C54  6ED9               	movwf	fsr2l,c
 19435  017C56  50E2               	movf	fsr1h,w,c
 19436  017C58  6EDA               	movwf	fsr2h,c
 19437  017C5A  0EFF               	movlw	255
 19438  017C5C  22DA               	addwfc	fsr2h,f,c
 19439  017C5E  0EFC               	movlw	-4
 19440  017C60  50E3               	movf	plusw1,w,c
 19441  017C62  5CDE               	subwf	postinc2,w,c
 19442  017C64  50DE               	movf	postinc2,w,c
 19443  017C66  0A80               	xorlw	128
 19444  017C68  6E01               	movwf	btemp^0,c
 19445  017C6A  0EFD               	movlw	-3
 19446  017C6C  50E3               	movf	plusw1,w,c
 19447  017C6E  0A80               	xorlw	128
 19448  017C70  5801               	subwfb	btemp^0,w,c
 19449  017C72  A0D8               	btfss	status,0,c
 19450  017C74  D7CF               	goto	l13532
 19451  017C76                     u12640:
 19452                           
 19453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 19454                           ;stkvar	_l @ sp[(-17)+7]
 19455  017C76  0EF6               	movlw	-10
 19456  017C78  006F FF8C  F001    	movff	plusw1,btemp
 19457  017C7E  0EF7               	movlw	-9
 19458  017C80  006F FF8C  F002    	movff	plusw1,btemp+1
 19459                           
 19460                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19461  017C86  0EEB               	movlw	235
 19462  017C88  26E1               	addwf	fsr1l,f,c
 19463  017C8A  0EFF               	movlw	255
 19464  017C8C  22E2               	addwfc	fsr1h,f,c
 19465  017C8E  0012               	return		;funcret
 19466  017C90                     __end_of_stoa:
 19467                           	opt callstack 0
 19468                           
 19469 ;; *************** function _efgtoa *****************
 19470 ;; Defined at:
 19471 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19472 ;; Parameters:    Size  Location     Type
 19473 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19474 ;;		 -> f(6), NULL(0), 
 19475 ;;  f               4  [STACK] PTR struct _IO_FILE
 19476 ;;  c               1  [STACK] unsigned char 
 19477 ;; Auto vars:     Size  Location     Type
 19478 ;;  u               4  [STACK] unsigned char 
 19479 ;;  g               4  [STACK] unsigned char 
 19480 ;;  l               4  [STACK] unsigned char 
 19481 ;;  h               4  [STACK] unsigned char 
 19482 ;;  ou              4  [STACK] unsigned char 
 19483 ;;  n               2  [STACK] int 
 19484 ;;  e               2  [STACK] int 
 19485 ;;  i               2  [STACK] int 
 19486 ;;  w               2  [STACK] int 
 19487 ;;  p               2  [STACK] int 
 19488 ;;  sign            2  [STACK] int 
 19489 ;;  d               2  [STACK] int 
 19490 ;;  ne              2  [STACK] int 
 19491 ;;  m               2  [STACK] int 
 19492 ;;  pp              2  [STACK] int 
 19493 ;;  t               2  [STACK] int 
 19494 ;;  mode            1  [STACK] unsigned char 
 19495 ;;  nmode           1  [STACK] unsigned char 
 19496 ;; Return value:  Size  Location     Type
 19497 ;;                  2  [STACK] int 
 19498 ;; Registers used:
 19499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 19500 ;; Tracked objects:
 19501 ;;		On entry : 0/0
 19502 ;;		On exit  : 0/0
 19503 ;;		Unchanged: 0/0
 19504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19509 ;;Total ram usage:        0 bytes
 19510 ;; Hardware stack levels used:    1
 19511 ;; Hardware stack levels required when called:   20
 19512 ;; This function calls:
 19513 ;;		___awdiv
 19514 ;;		___awmod
 19515 ;;		___fladd
 19516 ;;		___fldiv
 19517 ;;		___fleq
 19518 ;;		___flge
 19519 ;;		___flmul
 19520 ;;		___flneg
 19521 ;;		___flsub
 19522 ;;		___fltol
 19523 ;;		___fpclassifyf
 19524 ;;		_floorf
 19525 ;;		_isupper
 19526 ;;		_pad
 19527 ;;		_strcpy
 19528 ;;		_tolower
 19529 ;; This function is called by:
 19530 ;;		_vfpfcnvrt
 19531 ;; This function uses a reentrant model
 19532 ;;
 19533                           
 19534                           	psect	text75
 19535  01127E                     __ptext75:
 19536                           	opt callstack 0
 19537  01127E                     _efgtoa:
 19538                           	opt callstack 0
 19539                           
 19540                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19541  01127E  0E38               	movlw	56
 19542  011280  26E1               	addwf	fsr1l,f,c
 19543  011282  0E00               	movlw	0
 19544  011284  22E2               	addwfc	fsr1h,f,c
 19545                           
 19546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 19547                           ;stkvar	_sign @ sp[(-56)+42]
 19548                           
 19549                           ;incstack = 0
 19550 ;; hardware stack exceeded
 19551  011286  0EF2               	movlw	-14
 19552  011288  6AE3               	clrf	plusw1,c
 19553  01128A  0EF3               	movlw	-13
 19554  01128C  6AE3               	clrf	plusw1,c
 19555                           
 19556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 19557                           ;stkvar	_f @ sp[(-56)+-6]
 19558  01128E  0EC2               	movlw	-62
 19559  011290  006F FF8C  F009    	movff	plusw1,btemp+8
 19560  011296  0EC3               	movlw	-61
 19561  011298  006F FF8C  F00A    	movff	plusw1,btemp+9
 19562  01129E  0EC4               	movlw	-60
 19563  0112A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 19564  0112A6  0EC5               	movlw	-59
 19565  0112A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 19566                           
 19567                           ;stkvar	_g @ sp[(-56)+16]
 19568  0112AE  0ED8               	movlw	-40
 19569  0112B0  0060  F027  FFE3   	movff	btemp+8,plusw1
 19570  0112B6  0ED9               	movlw	-39
 19571  0112B8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19572  0112BE  0EDA               	movlw	-38
 19573  0112C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19574  0112C6  0EDB               	movlw	-37
 19575  0112C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 19576                           
 19577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 19578                           ;stkvar	_g @ sp[(-56)+16]
 19579  0112CE  0EDB               	movlw	-37
 19580  0112D0  AEE3               	btfss	plusw1,7,c
 19581  0112D2  D02B               	goto	l13196
 19582                           
 19583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 19584  0112D4  0E01               	movlw	1
 19585  0112D6  6E0B               	movwf	(btemp+10)^0,c
 19586  0112D8  0E00               	movlw	0
 19587  0112DA  6E0C               	movwf	(btemp+11)^0,c
 19588                           
 19589                           ;stkvar	_sign @ sp[(-56)+42]
 19590  0112DC  0EF2               	movlw	-14
 19591  0112DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19592  0112E4  0EF3               	movlw	-13
 19593  0112E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 19594                           
 19595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 19596                           ;stkvar	_g @ sp[(-56)+16]
 19597  0112EC  0ED8               	movlw	-40
 19598  0112EE  006F FF8F FFE6     	movff	plusw1,postinc1
 19599  0112F4  006F FF8F FFE6     	movff	plusw1,postinc1
 19600  0112FA  006F FF8F FFE6     	movff	plusw1,postinc1
 19601  011300  006F FF8F FFE6     	movff	plusw1,postinc1
 19602  011306  EC03  F0E3         	call	___flneg	;wreg free
 19603                           
 19604                           ;stkvar	_g @ sp[(-56)+16]
 19605  01130A  0ED8               	movlw	-40
 19606  01130C  0060  F007  FFE3   	movff	btemp,plusw1
 19607  011312  0ED9               	movlw	-39
 19608  011314  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19609  01131A  0EDA               	movlw	-38
 19610  01131C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19611  011322  0EDB               	movlw	-37
 19612  011324  0060  F013  FFE3   	movff	btemp+3,plusw1
 19613  01132A                     l13196:
 19614                           
 19615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 19616                           ;stkvar	_n @ sp[(-56)+32]
 19617  01132A  0EE8               	movlw	-24
 19618  01132C  6AE3               	clrf	plusw1,c
 19619  01132E  0EE9               	movlw	-23
 19620  011330  6AE3               	clrf	plusw1,c
 19621                           
 19622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 19623                           ;stkvar	_w @ sp[(-56)+38]
 19624  011332  0EEE               	movlw	-18
 19625  011334  0060  F0EB  FFE3   	movff	_width,plusw1
 19626  01133A  0EEF               	movlw	-17
 19627  01133C  0060  F0EF  FFE3   	movff	_width+1,plusw1
 19628                           
 19629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 19630                           ;stkvar	_sign @ sp[(-56)+42]
 19631  011342  0EF2               	movlw	-14
 19632  011344  006F FF8C  F001    	movff	plusw1,btemp
 19633  01134A  0EF3               	movlw	-13
 19634  01134C  50E3               	movf	plusw1,w,c
 19635  01134E  1001               	iorwf	btemp^0,w,c
 19636  011350  A4D8               	btfss	status,2,c
 19637  011352  D002               	goto	u12050
 19638  011354  A43E               	btfss	_flags^0,2,c
 19639  011356  D036               	goto	l13216
 19640  011358                     u12050:
 19641                           
 19642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 19643                           ;stkvar	_sign @ sp[(-56)+42]
 19644  011358  0EF2               	movlw	-14
 19645  01135A  006F FF8C  F001    	movff	plusw1,btemp
 19646  011360  0EF3               	movlw	-13
 19647  011362  50E3               	movf	plusw1,w,c
 19648  011364  1001               	iorwf	btemp^0,w,c
 19649  011366  A4D8               	btfss	status,2,c
 19650  011368  D002               	goto	l13208
 19651  01136A  0E2B               	movlw	43
 19652  01136C  D001               	goto	L21
 19653  01136E                     l13208:
 19654  01136E  0E2D               	movlw	45
 19655  011370                     L21:
 19656  011370  6E0B               	movwf	(btemp+10)^0,c
 19657  011372  0E00               	movlw	0
 19658  011374  6E0C               	movwf	(btemp+11)^0,c
 19659                           
 19660                           ;stkvar	_efgtoa$6166 @ sp[(-56)+10]
 19661  011376  0ED2               	movlw	-46
 19662  011378  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19663  01137E  0ED3               	movlw	-45
 19664  011380  0060  F033  FFE3   	movff	btemp+11,plusw1
 19665                           
 19666                           ;stkvar	_efgtoa$6166 @ sp[(-56)+10]
 19667  011386  0ED2               	movlw	-46
 19668  011388  006F FF8C  F243    	movff	plusw1,_dbuf
 19669                           
 19670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 19671                           ;stkvar	_n @ sp[(-56)+32]
 19672  01138E  0EE8               	movlw	-24
 19673  011390  50E3               	movf	plusw1,w,c
 19674  011392  0F01               	addlw	1
 19675  011394  6E01               	movwf	btemp^0,c
 19676  011396  0EE8               	movlw	-24
 19677  011398  0060  F007  FFE3   	movff	btemp,plusw1
 19678  01139E  6A01               	clrf	btemp^0,c
 19679  0113A0  0EE9               	movlw	-23
 19680  0113A2  50E3               	movf	plusw1,w,c
 19681  0113A4  2001               	addwfc	btemp^0,w,c
 19682  0113A6  6E01               	movwf	btemp^0,c
 19683  0113A8  0EE9               	movlw	-23
 19684  0113AA  0060  F007  FFE3   	movff	btemp,plusw1
 19685                           
 19686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 19687                           ;stkvar	_w @ sp[(-56)+38]
 19688  0113B0  50E1               	movf	fsr1l,w,c
 19689  0113B2  0FEE               	addlw	-18
 19690  0113B4  6ED9               	movwf	fsr2l,c
 19691  0113B6  50E2               	movf	fsr1h,w,c
 19692  0113B8  6EDA               	movwf	fsr2h,c
 19693  0113BA  0EFF               	movlw	255
 19694  0113BC  22DA               	addwfc	fsr2h,f,c
 19695  0113BE  06DE               	decf	postinc2,f,c
 19696  0113C0  0E00               	movlw	0
 19697  0113C2  5ADD               	subwfb	postdec2,f,c
 19698  0113C4                     l13216:
 19699                           
 19700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 19701                           ;stkvar	_g @ sp[(-56)+16]
 19702  0113C4  0ED8               	movlw	-40
 19703  0113C6  006F FF8F FFE6     	movff	plusw1,postinc1
 19704  0113CC  006F FF8F FFE6     	movff	plusw1,postinc1
 19705  0113D2  006F FF8F FFE6     	movff	plusw1,postinc1
 19706  0113D8  006F FF8F FFE6     	movff	plusw1,postinc1
 19707  0113DE  ECBD  F0C9         	call	___fpclassifyf	;wreg free
 19708  0113E2  0401               	decf	btemp^0,w,c
 19709  0113E4  1002               	iorwf	(btemp+1)^0,w,c
 19710  0113E6  A4D8               	btfss	status,2,c
 19711  0113E8  D076               	goto	l13234
 19712  0113EA  0EBF               	movlw	191
 19713  0113EC  6E0B               	movwf	(btemp+10)^0,c
 19714  0113EE  0EFF               	movlw	255
 19715  0113F0  6E0C               	movwf	(btemp+11)^0,c
 19716                           
 19717                           ;stkvar	_c @ sp[(-56)+-7]
 19718  0113F2  0EC1               	movlw	-63
 19719  0113F4  50E3               	movf	plusw1,w,c
 19720  0113F6  6E09               	movwf	(btemp+8)^0,c
 19721  0113F8  6A0A               	clrf	(btemp+9)^0,c
 19722  0113FA  500B               	movf	(btemp+10)^0,w,c
 19723  0113FC  2609               	addwf	(btemp+8)^0,f,c
 19724  0113FE  500C               	movf	(btemp+11)^0,w,c
 19725  011400  220A               	addwfc	(btemp+9)^0,f,c
 19726  011402  500A               	movf	(btemp+9)^0,w,c
 19727  011404  E106               	bnz	u12080
 19728  011406  0E1A               	movlw	26
 19729  011408  5C09               	subwf	(btemp+8)^0,w,c
 19730  01140A  B0D8               	btfsc	status,0,c
 19731  01140C  D002               	goto	u12080
 19732  01140E  0E01               	movlw	1
 19733  011410  D001               	goto	u12090
 19734  011412                     u12080:
 19735  011412  0E00               	movlw	0
 19736  011414                     u12090:
 19737  011414  6E0B               	movwf	(btemp+10)^0,c
 19738  011416  6A0C               	clrf	(btemp+11)^0,c
 19739                           
 19740                           ;stkvar	_efgtoa$6167 @ sp[(-56)+8]
 19741  011418  0ED0               	movlw	-48
 19742  01141A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19743  011420  0ED1               	movlw	-47
 19744  011422  0060  F033  FFE3   	movff	btemp+11,plusw1
 19745                           
 19746                           ;stkvar	_efgtoa$6167 @ sp[(-56)+8]
 19747  011428  0ED0               	movlw	-48
 19748  01142A  006F FF8C  F001    	movff	plusw1,btemp
 19749  011430  0ED1               	movlw	-47
 19750  011432  50E3               	movf	plusw1,w,c
 19751  011434  1001               	iorwf	btemp^0,w,c
 19752  011436  B4D8               	btfsc	status,2,c
 19753  011438  D017               	goto	l13226
 19754                           
 19755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 19756  01143A  0ED7               	movlw	low STR_82
 19757  01143C  6EE6               	movwf	postinc1,c
 19758  01143E  0EFF               	movlw	high STR_82
 19759  011440  6EE6               	movwf	postinc1,c
 19760                           
 19761                           ;stkvar	_n @ sp[(-58)+32]
 19762  011442  0E43               	movlw	low _dbuf
 19763  011444  6E0B               	movwf	(btemp+10)^0,c
 19764  011446  0E02               	movlw	high _dbuf
 19765  011448  6E0C               	movwf	(btemp+11)^0,c
 19766  01144A  0EE6               	movlw	-26
 19767  01144C  50E3               	movf	plusw1,w,c
 19768  01144E  260B               	addwf	(btemp+10)^0,f,c
 19769  011450  0EE7               	movlw	-25
 19770  011452  50E3               	movf	plusw1,w,c
 19771  011454  220C               	addwfc	(btemp+11)^0,f,c
 19772  011456  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19773  01145C  0060  F033  FFE6   	movff	btemp+11,postinc1
 19774  011462  ECA9  F0D7         	call	_strcpy	;wreg free
 19775                           
 19776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 19777  011466  D016               	goto	l13228
 19778  011468                     l13226:
 19779                           
 19780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 19781  011468  0EDF               	movlw	low STR_83
 19782  01146A  6EE6               	movwf	postinc1,c
 19783  01146C  0EFF               	movlw	high STR_83
 19784  01146E  6EE6               	movwf	postinc1,c
 19785                           
 19786                           ;stkvar	_n @ sp[(-58)+32]
 19787  011470  0E43               	movlw	low _dbuf
 19788  011472  6E0B               	movwf	(btemp+10)^0,c
 19789  011474  0E02               	movlw	high _dbuf
 19790  011476  6E0C               	movwf	(btemp+11)^0,c
 19791  011478  0EE6               	movlw	-26
 19792  01147A  50E3               	movf	plusw1,w,c
 19793  01147C  260B               	addwf	(btemp+10)^0,f,c
 19794  01147E  0EE7               	movlw	-25
 19795  011480  50E3               	movf	plusw1,w,c
 19796  011482  220C               	addwfc	(btemp+11)^0,f,c
 19797  011484  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19798  01148A  0060  F033  FFE6   	movff	btemp+11,postinc1
 19799  011490  ECA9  F0D7         	call	_strcpy	;wreg free
 19800  011494                     l13228:
 19801                           
 19802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 19803                           ;stkvar	_w @ sp[(-56)+38]
 19804  011494  50E1               	movf	fsr1l,w,c
 19805  011496  0FEE               	addlw	-18
 19806  011498  6ED9               	movwf	fsr2l,c
 19807  01149A  50E2               	movf	fsr1h,w,c
 19808  01149C  6EDA               	movwf	fsr2h,c
 19809  01149E  0EFF               	movlw	255
 19810  0114A0  22DA               	addwfc	fsr2h,f,c
 19811  0114A2  0EFD               	movlw	253
 19812  0114A4  26DE               	addwf	postinc2,f,c
 19813  0114A6  0EFF               	movlw	255
 19814  0114A8  22DD               	addwfc	postdec2,f,c
 19815  0114AA                     l13230:
 19816                           
 19817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 19818                           ;stkvar	_w @ sp[(-56)+38]
 19819  0114AA  0EEE               	movlw	-18
 19820  0114AC  006F FF8F FFE6     	movff	plusw1,postinc1
 19821  0114B2  006F FF8F FFE6     	movff	plusw1,postinc1
 19822  0114B8  0E43               	movlw	low _dbuf
 19823  0114BA  6EE6               	movwf	postinc1,c
 19824  0114BC  0E02               	movlw	high _dbuf
 19825  0114BE  6EE6               	movwf	postinc1,c
 19826                           
 19827                           ;stkvar	_fp @ sp[(-60)+-2]
 19828  0114C0  0EC2               	movlw	-62
 19829  0114C2  006F FF8F FFE6     	movff	plusw1,postinc1
 19830  0114C8  006F FF8F FFE6     	movff	plusw1,postinc1
 19831  0114CE  EC3B  F0D4         	call	_pad	;wreg free
 19832  0114D2  EF5C  F092         	goto	l2458
 19833  0114D6                     l13234:
 19834                           
 19835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 19836                           ;stkvar	_g @ sp[(-56)+16]
 19837  0114D6  0ED8               	movlw	-40
 19838  0114D8  006F FF8F FFE6     	movff	plusw1,postinc1
 19839  0114DE  006F FF8F FFE6     	movff	plusw1,postinc1
 19840  0114E4  006F FF8F FFE6     	movff	plusw1,postinc1
 19841  0114EA  006F FF8F FFE6     	movff	plusw1,postinc1
 19842  0114F0  ECBD  F0C9         	call	___fpclassifyf	;wreg free
 19843  0114F4  5001               	movf	btemp^0,w,c
 19844  0114F6  1002               	iorwf	(btemp+1)^0,w,c
 19845  0114F8  A4D8               	btfss	status,2,c
 19846  0114FA  D056               	goto	l13252
 19847  0114FC  0EBF               	movlw	191
 19848  0114FE  6E0B               	movwf	(btemp+10)^0,c
 19849  011500  0EFF               	movlw	255
 19850  011502  6E0C               	movwf	(btemp+11)^0,c
 19851                           
 19852                           ;stkvar	_c @ sp[(-56)+-7]
 19853  011504  0EC1               	movlw	-63
 19854  011506  50E3               	movf	plusw1,w,c
 19855  011508  6E09               	movwf	(btemp+8)^0,c
 19856  01150A  6A0A               	clrf	(btemp+9)^0,c
 19857  01150C  500B               	movf	(btemp+10)^0,w,c
 19858  01150E  2609               	addwf	(btemp+8)^0,f,c
 19859  011510  500C               	movf	(btemp+11)^0,w,c
 19860  011512  220A               	addwfc	(btemp+9)^0,f,c
 19861  011514  500A               	movf	(btemp+9)^0,w,c
 19862  011516  E106               	bnz	u12120
 19863  011518  0E1A               	movlw	26
 19864  01151A  5C09               	subwf	(btemp+8)^0,w,c
 19865  01151C  B0D8               	btfsc	status,0,c
 19866  01151E  D002               	goto	u12120
 19867  011520  0E01               	movlw	1
 19868  011522  D001               	goto	u12130
 19869  011524                     u12120:
 19870  011524  0E00               	movlw	0
 19871  011526                     u12130:
 19872  011526  6E0B               	movwf	(btemp+10)^0,c
 19873  011528  6A0C               	clrf	(btemp+11)^0,c
 19874                           
 19875                           ;stkvar	_efgtoa$6171 @ sp[(-56)+6]
 19876  01152A  0ECE               	movlw	-50
 19877  01152C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19878  011532  0ECF               	movlw	-49
 19879  011534  0060  F033  FFE3   	movff	btemp+11,plusw1
 19880                           
 19881                           ;stkvar	_efgtoa$6171 @ sp[(-56)+6]
 19882  01153A  0ECE               	movlw	-50
 19883  01153C  006F FF8C  F001    	movff	plusw1,btemp
 19884  011542  0ECF               	movlw	-49
 19885  011544  50E3               	movf	plusw1,w,c
 19886  011546  1001               	iorwf	btemp^0,w,c
 19887  011548  B4D8               	btfsc	status,2,c
 19888  01154A  D017               	goto	l13244
 19889                           
 19890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 19891  01154C  0EDB               	movlw	low STR_86
 19892  01154E  6EE6               	movwf	postinc1,c
 19893  011550  0EFF               	movlw	high STR_86
 19894  011552  6EE6               	movwf	postinc1,c
 19895                           
 19896                           ;stkvar	_n @ sp[(-58)+32]
 19897  011554  0E43               	movlw	low _dbuf
 19898  011556  6E0B               	movwf	(btemp+10)^0,c
 19899  011558  0E02               	movlw	high _dbuf
 19900  01155A  6E0C               	movwf	(btemp+11)^0,c
 19901  01155C  0EE6               	movlw	-26
 19902  01155E  50E3               	movf	plusw1,w,c
 19903  011560  260B               	addwf	(btemp+10)^0,f,c
 19904  011562  0EE7               	movlw	-25
 19905  011564  50E3               	movf	plusw1,w,c
 19906  011566  220C               	addwfc	(btemp+11)^0,f,c
 19907  011568  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19908  01156E  0060  F033  FFE6   	movff	btemp+11,postinc1
 19909  011574  ECA9  F0D7         	call	_strcpy	;wreg free
 19910                           
 19911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 19912  011578  D78D               	goto	l13228
 19913  01157A                     l13244:
 19914                           
 19915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 19916  01157A  0EE3               	movlw	low STR_87
 19917  01157C  6EE6               	movwf	postinc1,c
 19918  01157E  0EFF               	movlw	high STR_87
 19919  011580  6EE6               	movwf	postinc1,c
 19920                           
 19921                           ;stkvar	_n @ sp[(-58)+32]
 19922  011582  0E43               	movlw	low _dbuf
 19923  011584  6E0B               	movwf	(btemp+10)^0,c
 19924  011586  0E02               	movlw	high _dbuf
 19925  011588  6E0C               	movwf	(btemp+11)^0,c
 19926  01158A  0EE6               	movlw	-26
 19927  01158C  50E3               	movf	plusw1,w,c
 19928  01158E  260B               	addwf	(btemp+10)^0,f,c
 19929  011590  0EE7               	movlw	-25
 19930  011592  50E3               	movf	plusw1,w,c
 19931  011594  220C               	addwfc	(btemp+11)^0,f,c
 19932  011596  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19933  01159C  0060  F033  FFE6   	movff	btemp+11,postinc1
 19934  0115A2  ECA9  F0D7         	call	_strcpy	;wreg free
 19935  0115A6  D776               	goto	l13228
 19936  0115A8                     l13252:
 19937                           
 19938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 19939  0115A8  0E00               	movlw	0
 19940  0115AA  6E09               	movwf	(btemp+8)^0,c
 19941  0115AC  0E00               	movlw	0
 19942  0115AE  6E0A               	movwf	(btemp+9)^0,c
 19943  0115B0  0E80               	movlw	128
 19944  0115B2  6E0B               	movwf	(btemp+10)^0,c
 19945  0115B4  0E3F               	movlw	63
 19946  0115B6  6E0C               	movwf	(btemp+11)^0,c
 19947                           
 19948                           ;stkvar	_u @ sp[(-56)+12]
 19949  0115B8  0ED4               	movlw	-44
 19950  0115BA  0060  F027  FFE3   	movff	btemp+8,plusw1
 19951  0115C0  0ED5               	movlw	-43
 19952  0115C2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19953  0115C8  0ED6               	movlw	-42
 19954  0115CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19955  0115D0  0ED7               	movlw	-41
 19956  0115D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 19957                           
 19958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 19959                           ;stkvar	_e @ sp[(-56)+34]
 19960  0115D8  0EEA               	movlw	-22
 19961  0115DA  6AE3               	clrf	plusw1,c
 19962  0115DC  0EEB               	movlw	-21
 19963  0115DE  6AE3               	clrf	plusw1,c
 19964                           
 19965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 19966  0115E0  0E00               	movlw	0
 19967  0115E2  6EE6               	movwf	postinc1,c
 19968  0115E4  0E00               	movlw	0
 19969  0115E6  6EE6               	movwf	postinc1,c
 19970  0115E8  0E00               	movlw	0
 19971  0115EA  6EE6               	movwf	postinc1,c
 19972  0115EC  0E00               	movlw	0
 19973  0115EE  6EE6               	movwf	postinc1,c
 19974                           
 19975                           ;stkvar	_g @ sp[(-60)+16]
 19976  0115F0  0ED4               	movlw	-44
 19977  0115F2  006F FF8F FFE6     	movff	plusw1,postinc1
 19978  0115F8  006F FF8F FFE6     	movff	plusw1,postinc1
 19979  0115FE  006F FF8F FFE6     	movff	plusw1,postinc1
 19980  011604  006F FF8F FFE6     	movff	plusw1,postinc1
 19981  01160A  ECE2  F0D8         	call	___fleq	;wreg free
 19982  01160E  A001               	btfss	btemp& (0+255),0,c
 19983  011610  D039               	goto	l13264
 19984  011612  D0BC               	goto	u12170
 19985  011614                     l13260:
 19986                           
 19987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 19988  011614  0E00               	movlw	0
 19989  011616  6EE6               	movwf	postinc1,c
 19990  011618  0E00               	movlw	0
 19991  01161A  6EE6               	movwf	postinc1,c
 19992  01161C  0E20               	movlw	32
 19993  01161E  6EE6               	movwf	postinc1,c
 19994  011620  0E41               	movlw	65
 19995  011622  6EE6               	movwf	postinc1,c
 19996                           
 19997                           ;stkvar	_u @ sp[(-60)+12]
 19998  011624  0ED0               	movlw	-48
 19999  011626  006F FF8F FFE6     	movff	plusw1,postinc1
 20000  01162C  006F FF8F FFE6     	movff	plusw1,postinc1
 20001  011632  006F FF8F FFE6     	movff	plusw1,postinc1
 20002  011638  006F FF8F FFE6     	movff	plusw1,postinc1
 20003  01163E  EC6E  F09F         	call	___flmul	;wreg free
 20004                           
 20005                           ;stkvar	_u @ sp[(-56)+12]
 20006  011642  0ED4               	movlw	-44
 20007  011644  0060  F007  FFE3   	movff	btemp,plusw1
 20008  01164A  0ED5               	movlw	-43
 20009  01164C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20010  011652  0ED6               	movlw	-42
 20011  011654  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20012  01165A  0ED7               	movlw	-41
 20013  01165C  0060  F013  FFE3   	movff	btemp+3,plusw1
 20014                           
 20015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 20016                           ;stkvar	_e @ sp[(-56)+34]
 20017  011662  0EEA               	movlw	-22
 20018  011664  50E3               	movf	plusw1,w,c
 20019  011666  0F01               	addlw	1
 20020  011668  6E01               	movwf	btemp^0,c
 20021  01166A  0EEA               	movlw	-22
 20022  01166C  0060  F007  FFE3   	movff	btemp,plusw1
 20023  011672  6A01               	clrf	btemp^0,c
 20024  011674  0EEB               	movlw	-21
 20025  011676  50E3               	movf	plusw1,w,c
 20026  011678  2001               	addwfc	btemp^0,w,c
 20027  01167A  6E01               	movwf	btemp^0,c
 20028  01167C  0EEB               	movlw	-21
 20029  01167E  0060  F007  FFE3   	movff	btemp,plusw1
 20030  011684                     l13264:
 20031                           
 20032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 20033  011684  0E00               	movlw	0
 20034  011686  6EE6               	movwf	postinc1,c
 20035  011688  0E00               	movlw	0
 20036  01168A  6EE6               	movwf	postinc1,c
 20037  01168C  0E20               	movlw	32
 20038  01168E  6EE6               	movwf	postinc1,c
 20039  011690  0E41               	movlw	65
 20040  011692  6EE6               	movwf	postinc1,c
 20041                           
 20042                           ;stkvar	_u @ sp[(-60)+12]
 20043  011694  0ED0               	movlw	-48
 20044  011696  006F FF8F FFE6     	movff	plusw1,postinc1
 20045  01169C  006F FF8F FFE6     	movff	plusw1,postinc1
 20046  0116A2  006F FF8F FFE6     	movff	plusw1,postinc1
 20047  0116A8  006F FF8F FFE6     	movff	plusw1,postinc1
 20048  0116AE  EC6E  F09F         	call	___flmul	;wreg free
 20049  0116B2  0060  F007  FFE6   	movff	btemp,postinc1
 20050  0116B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20051  0116BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20052  0116C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 20053                           
 20054                           ;stkvar	_g @ sp[(-60)+16]
 20055  0116CA  0ED4               	movlw	-44
 20056  0116CC  006F FF8F FFE6     	movff	plusw1,postinc1
 20057  0116D2  006F FF8F FFE6     	movff	plusw1,postinc1
 20058  0116D8  006F FF8F FFE6     	movff	plusw1,postinc1
 20059  0116DE  006F FF8F FFE6     	movff	plusw1,postinc1
 20060  0116E4  EC7D  F0CD         	call	___flge	;wreg free
 20061  0116E8  A001               	btfss	btemp& (0+255),0,c
 20062  0116EA  D032               	goto	l13270
 20063  0116EC  D793               	goto	l13260
 20064  0116EE                     l13266:
 20065                           
 20066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 20067  0116EE  0E00               	movlw	0
 20068  0116F0  6EE6               	movwf	postinc1,c
 20069  0116F2  0E00               	movlw	0
 20070  0116F4  6EE6               	movwf	postinc1,c
 20071  0116F6  0E20               	movlw	32
 20072  0116F8  6EE6               	movwf	postinc1,c
 20073  0116FA  0E41               	movlw	65
 20074  0116FC  6EE6               	movwf	postinc1,c
 20075                           
 20076                           ;stkvar	_u @ sp[(-60)+12]
 20077  0116FE  0ED0               	movlw	-48
 20078  011700  006F FF8F FFE6     	movff	plusw1,postinc1
 20079  011706  006F FF8F FFE6     	movff	plusw1,postinc1
 20080  01170C  006F FF8F FFE6     	movff	plusw1,postinc1
 20081  011712  006F FF8F FFE6     	movff	plusw1,postinc1
 20082  011718  EC61  F0A7         	call	___fldiv	;wreg free
 20083                           
 20084                           ;stkvar	_u @ sp[(-56)+12]
 20085  01171C  0ED4               	movlw	-44
 20086  01171E  0060  F007  FFE3   	movff	btemp,plusw1
 20087  011724  0ED5               	movlw	-43
 20088  011726  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20089  01172C  0ED6               	movlw	-42
 20090  01172E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20091  011734  0ED7               	movlw	-41
 20092  011736  0060  F013  FFE3   	movff	btemp+3,plusw1
 20093                           
 20094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 20095                           ;stkvar	_e @ sp[(-56)+34]
 20096  01173C  50E1               	movf	fsr1l,w,c
 20097  01173E  0FEA               	addlw	-22
 20098  011740  6ED9               	movwf	fsr2l,c
 20099  011742  50E2               	movf	fsr1h,w,c
 20100  011744  6EDA               	movwf	fsr2h,c
 20101  011746  0EFF               	movlw	255
 20102  011748  22DA               	addwfc	fsr2h,f,c
 20103  01174A  06DE               	decf	postinc2,f,c
 20104  01174C  0E00               	movlw	0
 20105  01174E  5ADD               	subwfb	postdec2,f,c
 20106  011750                     l13270:
 20107                           
 20108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 20109                           ;stkvar	_u @ sp[(-56)+12]
 20110  011750  0ED4               	movlw	-44
 20111  011752  006F FF8F FFE6     	movff	plusw1,postinc1
 20112  011758  006F FF8F FFE6     	movff	plusw1,postinc1
 20113  01175E  006F FF8F FFE6     	movff	plusw1,postinc1
 20114  011764  006F FF8F FFE6     	movff	plusw1,postinc1
 20115                           
 20116                           ;stkvar	_g @ sp[(-60)+16]
 20117  01176A  0ED4               	movlw	-44
 20118  01176C  006F FF8F FFE6     	movff	plusw1,postinc1
 20119  011772  006F FF8F FFE6     	movff	plusw1,postinc1
 20120  011778  006F FF8F FFE6     	movff	plusw1,postinc1
 20121  01177E  006F FF8F FFE6     	movff	plusw1,postinc1
 20122  011784  EC7D  F0CD         	call	___flge	;wreg free
 20123  011788  A001               	btfss	btemp& (0+255),0,c
 20124  01178A  D7B1               	goto	l13266
 20125  01178C                     u12170:
 20126                           
 20127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 20128                           ;stkvar	_c @ sp[(-56)+-7]
 20129  01178C  0EC1               	movlw	-63
 20130  01178E  50E3               	movf	plusw1,w,c
 20131  011790  6EE6               	movwf	postinc1,c
 20132  011792  0E00               	movlw	0
 20133  011794  6EE6               	movwf	postinc1,c
 20134  011796  EC46  F0DE         	call	_tolower	;wreg free
 20135                           
 20136                           ;stkvar	_mode @ sp[(-56)+54]
 20137  01179A  0EFE               	movlw	-2
 20138  01179C  0060  F007  FFE3   	movff	btemp,plusw1
 20139                           
 20140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 20141                           ;stkvar	_mode @ sp[(-56)+54]
 20142                           ;stkvar	_nmode @ sp[(-56)+55]
 20143  0117A2  0EFE               	movlw	-2
 20144  0117A4  006F FF8C  F001    	movff	plusw1,btemp
 20145  0117AA  0EFF               	movlw	-1
 20146  0117AC  0060  F007  FFE3   	movff	btemp,plusw1
 20147                           
 20148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 20149                           ;stkvar	_mode @ sp[(-56)+54]
 20150  0117B2  0EFE               	movlw	-2
 20151  0117B4  006F FF8C  F001    	movff	plusw1,btemp
 20152  0117BA  0E67               	movlw	103
 20153  0117BC  1801               	xorwf	btemp^0,w,c
 20154  0117BE  A4D8               	btfss	status,2,c
 20155  0117C0  D025               	goto	l13288
 20156                           
 20157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 20158  0117C2  503C               	movf	_prec^0,w,c
 20159  0117C4  103D               	iorwf	(_prec+1)^0,w,c
 20160  0117C6  A4D8               	btfss	status,2,c
 20161  0117C8  D004               	goto	l13282
 20162                           
 20163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 20164  0117CA  0E00               	movlw	0
 20165  0117CC  6E3D               	movwf	(_prec+1)^0,c
 20166  0117CE  0E01               	movlw	1
 20167  0117D0  6E3C               	movwf	_prec^0,c
 20168  0117D2                     l13282:
 20169                           
 20170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 20171  0117D2  BE3D               	btfsc	(_prec+1)^0,7,c
 20172  0117D4  D005               	goto	u12200
 20173  0117D6  503D               	movf	(_prec+1)^0,w,c
 20174  0117D8  E110               	bnz	l13286
 20175  0117DA  043C               	decf	_prec^0,w,c
 20176  0117DC  B0D8               	btfsc	status,0,c
 20177  0117DE  D00D               	goto	l13286
 20178  0117E0                     u12200:
 20179  0117E0  0E06               	movlw	6
 20180  0117E2  6E0B               	movwf	(btemp+10)^0,c
 20181  0117E4  0E00               	movlw	0
 20182  0117E6  6E0C               	movwf	(btemp+11)^0,c
 20183                           
 20184                           ;stkvar	_p @ sp[(-56)+40]
 20185  0117E8  0EF0               	movlw	-16
 20186  0117EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20187  0117F0  0EF1               	movlw	-15
 20188  0117F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 20189  0117F8  D00C               	goto	l13294
 20190  0117FA                     l13286:
 20191                           
 20192                           ;stkvar	_p @ sp[(-56)+40]
 20193  0117FA  0EF0               	movlw	-16
 20194  0117FC  0060  F0F3  FFE3   	movff	_prec,plusw1
 20195  011802  0EF1               	movlw	-15
 20196  011804  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20197  01180A  D003               	goto	l13294
 20198  01180C                     l13288:
 20199                           
 20200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 20201  01180C  AE3D               	btfss	(_prec+1)^0,7,c
 20202  01180E  D7F5               	goto	l13286
 20203  011810  D7E7               	goto	u12200
 20204  011812                     l13294:
 20205                           
 20206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 20207                           ;stkvar	_mode @ sp[(-56)+54]
 20208  011812  0EFE               	movlw	-2
 20209  011814  006F FF8C  F001    	movff	plusw1,btemp
 20210  01181A  0E67               	movlw	103
 20211  01181C  1801               	xorwf	btemp^0,w,c
 20212  01181E  A4D8               	btfss	status,2,c
 20213  011820  D02F               	goto	l13304
 20214                           
 20215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 20216                           ;stkvar	_e @ sp[(-56)+34]
 20217  011822  0EEB               	movlw	-21
 20218  011824  AEE3               	btfss	plusw1,7,c
 20219  011826  D00E               	goto	u12230
 20220  011828  0EEA               	movlw	-22
 20221  01182A  006F FF8C  F001    	movff	plusw1,btemp
 20222  011830  0EFC               	movlw	252
 20223  011832  5E01               	subwf	btemp^0,f,c
 20224  011834  0EEB               	movlw	-21
 20225  011836  006F FF8C  F001    	movff	plusw1,btemp
 20226  01183C  0EFF               	movlw	255
 20227  01183E  5A01               	subwfb	btemp^0,f,c
 20228  011840  A0D8               	btfss	status,0,c
 20229  011842  D018               	goto	l13302
 20230  011844                     u12230:
 20231                           
 20232                           ;stkvar	_e @ sp[(-56)+34]
 20233                           ;stkvar	_p @ sp[(-56)+40]
 20234  011844  0EF0               	movlw	-16
 20235  011846  50E3               	movf	plusw1,w,c
 20236  011848  0FFF               	addlw	255
 20237  01184A  6E0B               	movwf	(btemp+10)^0,c
 20238  01184C  0EF1               	movlw	-15
 20239  01184E  006F FF8C  F00C    	movff	plusw1,btemp+11
 20240  011854  0EFF               	movlw	255
 20241  011856  220C               	addwfc	(btemp+11)^0,f,c
 20242  011858  0EEA               	movlw	-22
 20243  01185A  50E3               	movf	plusw1,w,c
 20244  01185C  5C0B               	subwf	(btemp+10)^0,w,c
 20245  01185E  500C               	movf	(btemp+11)^0,w,c
 20246  011860  0A80               	xorlw	128
 20247  011862  6E01               	movwf	btemp^0,c
 20248  011864  0EEB               	movlw	-21
 20249  011866  50E3               	movf	plusw1,w,c
 20250  011868  0A80               	xorlw	128
 20251  01186A  5801               	subwfb	btemp^0,w,c
 20252  01186C  A0D8               	btfss	status,0,c
 20253  01186E  D002               	goto	l13302
 20254                           
 20255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 20256  011870  0E66               	movlw	102
 20257  011872  D001               	goto	L22
 20258  011874                     l13302:
 20259                           
 20260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 20261  011874  0E65               	movlw	101
 20262  011876                     L22:
 20263  011876  6E0C               	movwf	(btemp+11)^0,c
 20264                           
 20265                           ;stkvar	_nmode @ sp[(-56)+55]
 20266  011878  0EFF               	movlw	-1
 20267  01187A  0060  F033  FFE3   	movff	btemp+11,plusw1
 20268  011880                     l13304:
 20269                           
 20270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 20271                           ;stkvar	_p @ sp[(-56)+40]
 20272                           ;stkvar	_m @ sp[(-56)+48]
 20273  011880  0EF0               	movlw	-16
 20274  011882  006F FF8C  F001    	movff	plusw1,btemp
 20275  011888  0EF8               	movlw	-8
 20276  01188A  0060  F007  FFE3   	movff	btemp,plusw1
 20277  011890  0EF1               	movlw	-15
 20278  011892  006F FF8C  F001    	movff	plusw1,btemp
 20279  011898  0EF9               	movlw	-7
 20280  01189A  0060  F007  FFE3   	movff	btemp,plusw1
 20281                           
 20282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 20283                           ;stkvar	_mode @ sp[(-56)+54]
 20284  0118A0  0EFE               	movlw	-2
 20285  0118A2  006F FF8C  F001    	movff	plusw1,btemp
 20286  0118A8  0E67               	movlw	103
 20287  0118AA  1801               	xorwf	btemp^0,w,c
 20288  0118AC  A4D8               	btfss	status,2,c
 20289  0118AE  D00B               	goto	u12270
 20290                           
 20291                           ;stkvar	_nmode @ sp[(-56)+55]
 20292  0118B0  0EFF               	movlw	-1
 20293  0118B2  006F FF8C  F001    	movff	plusw1,btemp
 20294  0118B8  0E66               	movlw	102
 20295  0118BA  1801               	xorwf	btemp^0,w,c
 20296  0118BC  A4D8               	btfss	status,2,c
 20297  0118BE  D014               	goto	l2487
 20298                           
 20299                           ;stkvar	_e @ sp[(-56)+34]
 20300  0118C0  0EEB               	movlw	-21
 20301  0118C2  AEE3               	btfss	plusw1,7,c
 20302  0118C4  D011               	goto	l2487
 20303  0118C6                     u12270:
 20304                           
 20305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 20306                           ;stkvar	_m @ sp[(-56)+48]
 20307  0118C6  0EF8               	movlw	-8
 20308  0118C8  50E3               	movf	plusw1,w,c
 20309  0118CA  0F01               	addlw	1
 20310  0118CC  6E01               	movwf	btemp^0,c
 20311  0118CE  0EF8               	movlw	-8
 20312  0118D0  0060  F007  FFE3   	movff	btemp,plusw1
 20313  0118D6  6A01               	clrf	btemp^0,c
 20314  0118D8  0EF9               	movlw	-7
 20315  0118DA  50E3               	movf	plusw1,w,c
 20316  0118DC  2001               	addwfc	btemp^0,w,c
 20317  0118DE  6E01               	movwf	btemp^0,c
 20318  0118E0  0EF9               	movlw	-7
 20319  0118E2  0060  F007  FFE3   	movff	btemp,plusw1
 20320  0118E8                     l2487:
 20321                           
 20322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 20323                           ;stkvar	_nmode @ sp[(-56)+55]
 20324  0118E8  0EFF               	movlw	-1
 20325  0118EA  006F FF8C  F001    	movff	plusw1,btemp
 20326  0118F0  0E66               	movlw	102
 20327  0118F2  1801               	xorwf	btemp^0,w,c
 20328  0118F4  A4D8               	btfss	status,2,c
 20329  0118F6  D03B               	goto	l13324
 20330                           
 20331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 20332                           ;stkvar	_e @ sp[(-56)+34]
 20333  0118F8  0EEB               	movlw	-21
 20334  0118FA  AEE3               	btfss	plusw1,7,c
 20335  0118FC  D01C               	goto	l13320
 20336                           
 20337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 20338  0118FE  0E00               	movlw	0
 20339  011900  6E09               	movwf	(btemp+8)^0,c
 20340  011902  0E00               	movlw	0
 20341  011904  6E0A               	movwf	(btemp+9)^0,c
 20342  011906  0E80               	movlw	128
 20343  011908  6E0B               	movwf	(btemp+10)^0,c
 20344  01190A  0E3F               	movlw	63
 20345  01190C  6E0C               	movwf	(btemp+11)^0,c
 20346                           
 20347                           ;stkvar	_u @ sp[(-56)+12]
 20348  01190E  0ED4               	movlw	-44
 20349  011910  0060  F027  FFE3   	movff	btemp+8,plusw1
 20350  011916  0ED5               	movlw	-43
 20351  011918  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20352  01191E  0ED6               	movlw	-42
 20353  011920  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20354  011926  0ED7               	movlw	-41
 20355  011928  0060  F033  FFE3   	movff	btemp+11,plusw1
 20356                           
 20357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 20358                           ;stkvar	_e @ sp[(-56)+34]
 20359  01192E  0EEA               	movlw	-22
 20360  011930  6AE3               	clrf	plusw1,c
 20361  011932  0EEB               	movlw	-21
 20362  011934  6AE3               	clrf	plusw1,c
 20363  011936                     l13320:
 20364                           
 20365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 20366                           ;stkvar	_mode @ sp[(-56)+54]
 20367  011936  0EFE               	movlw	-2
 20368  011938  006F FF8C  F001    	movff	plusw1,btemp
 20369  01193E  0E67               	movlw	103
 20370  011940  1801               	xorwf	btemp^0,w,c
 20371  011942  B4D8               	btfsc	status,2,c
 20372  011944  D014               	goto	l13324
 20373                           
 20374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 20375                           ;stkvar	_e @ sp[(-56)+34]
 20376                           ;stkvar	_m @ sp[(-56)+48]
 20377  011946  0EF8               	movlw	-8
 20378  011948  50E3               	movf	plusw1,w,c
 20379  01194A  6E01               	movwf	btemp^0,c
 20380  01194C  0EEA               	movlw	-22
 20381  01194E  50E3               	movf	plusw1,w,c
 20382  011950  2601               	addwf	btemp^0,f,c
 20383  011952  0EF8               	movlw	-8
 20384  011954  0060  F007  FFE3   	movff	btemp,plusw1
 20385  01195A  0EF9               	movlw	-7
 20386  01195C  50E3               	movf	plusw1,w,c
 20387  01195E  6E01               	movwf	btemp^0,c
 20388  011960  0EEB               	movlw	-21
 20389  011962  50E3               	movf	plusw1,w,c
 20390  011964  2201               	addwfc	btemp^0,f,c
 20391  011966  0EF9               	movlw	-7
 20392  011968  0060  F007  FFE3   	movff	btemp,plusw1
 20393  01196E                     l13324:
 20394                           
 20395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 20396                           ;stkvar	_i @ sp[(-56)+36]
 20397  01196E  0EEC               	movlw	-20
 20398  011970  6AE3               	clrf	plusw1,c
 20399  011972  0EED               	movlw	-19
 20400  011974  6AE3               	clrf	plusw1,c
 20401                           
 20402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 20403                           ;stkvar	_g @ sp[(-56)+16]
 20404  011976  0ED8               	movlw	-40
 20405  011978  006F FF8C  F009    	movff	plusw1,btemp+8
 20406  01197E  0ED9               	movlw	-39
 20407  011980  006F FF8C  F00A    	movff	plusw1,btemp+9
 20408  011986  0EDA               	movlw	-38
 20409  011988  006F FF8C  F00B    	movff	plusw1,btemp+10
 20410  01198E  0EDB               	movlw	-37
 20411  011990  006F FF8C  F00C    	movff	plusw1,btemp+11
 20412                           
 20413                           ;stkvar	_h @ sp[(-56)+24]
 20414  011996  0EE0               	movlw	-32
 20415  011998  0060  F027  FFE3   	movff	btemp+8,plusw1
 20416  01199E  0EE1               	movlw	-31
 20417  0119A0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20418  0119A6  0EE2               	movlw	-30
 20419  0119A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20420  0119AE  0EE3               	movlw	-29
 20421  0119B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20422                           
 20423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 20424                           ;stkvar	_u @ sp[(-56)+12]
 20425  0119B6  0ED4               	movlw	-44
 20426  0119B8  006F FF8C  F009    	movff	plusw1,btemp+8
 20427  0119BE  0ED5               	movlw	-43
 20428  0119C0  006F FF8C  F00A    	movff	plusw1,btemp+9
 20429  0119C6  0ED6               	movlw	-42
 20430  0119C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 20431  0119CE  0ED7               	movlw	-41
 20432  0119D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 20433                           
 20434                           ;stkvar	_ou @ sp[(-56)+28]
 20435  0119D6  0EE4               	movlw	-28
 20436  0119D8  0060  F027  FFE3   	movff	btemp+8,plusw1
 20437  0119DE  0EE5               	movlw	-27
 20438  0119E0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20439  0119E6  0EE6               	movlw	-26
 20440  0119E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20441  0119EE  0EE7               	movlw	-25
 20442  0119F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20443                           
 20444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 20445  0119F6  D0D6               	goto	l13340
 20446  0119F8                     l13330:
 20447                           
 20448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 20449                           ;stkvar	_u @ sp[(-56)+12]
 20450  0119F8  0ED4               	movlw	-44
 20451  0119FA  006F FF8F FFE6     	movff	plusw1,postinc1
 20452  011A00  006F FF8F FFE6     	movff	plusw1,postinc1
 20453  011A06  006F FF8F FFE6     	movff	plusw1,postinc1
 20454  011A0C  006F FF8F FFE6     	movff	plusw1,postinc1
 20455                           
 20456                           ;stkvar	_h @ sp[(-60)+24]
 20457  011A12  0EDC               	movlw	-36
 20458  011A14  006F FF8F FFE6     	movff	plusw1,postinc1
 20459  011A1A  006F FF8F FFE6     	movff	plusw1,postinc1
 20460  011A20  006F FF8F FFE6     	movff	plusw1,postinc1
 20461  011A26  006F FF8F FFE6     	movff	plusw1,postinc1
 20462  011A2C  EC61  F0A7         	call	___fldiv	;wreg free
 20463  011A30  0060  F007  FFE6   	movff	btemp,postinc1
 20464  011A36  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20465  011A3C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20466  011A42  0060  F013  FFE6   	movff	btemp+3,postinc1
 20467  011A48  EC1B  F0B5         	call	_floorf	;wreg free
 20468                           
 20469                           ;stkvar	_l @ sp[(-56)+20]
 20470  011A4C  0EDC               	movlw	-36
 20471  011A4E  0060  F007  FFE3   	movff	btemp,plusw1
 20472  011A54  0EDD               	movlw	-35
 20473  011A56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20474  011A5C  0EDE               	movlw	-34
 20475  011A5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20476  011A64  0EDF               	movlw	-33
 20477  011A66  0060  F013  FFE3   	movff	btemp+3,plusw1
 20478                           
 20479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 20480                           ;stkvar	_l @ sp[(-56)+20]
 20481  011A6C  0EDC               	movlw	-36
 20482  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 20483  011A74  006F FF8F FFE6     	movff	plusw1,postinc1
 20484  011A7A  006F FF8F FFE6     	movff	plusw1,postinc1
 20485  011A80  006F FF8F FFE6     	movff	plusw1,postinc1
 20486  011A86  ECC4  F0CC         	call	___fltol	;wreg free
 20487  011A8A  0060  F004  F00B   	movff	btemp,btemp+10
 20488  011A90  0060  F008  F00C   	movff	btemp+1,btemp+11
 20489                           
 20490                           ;stkvar	_d @ sp[(-56)+44]
 20491  011A96  0EF4               	movlw	-12
 20492  011A98  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20493  011A9E  0EF5               	movlw	-11
 20494  011AA0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20495                           
 20496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 20497                           ;stkvar	_u @ sp[(-56)+12]
 20498  011AA6  0ED4               	movlw	-44
 20499  011AA8  006F FF8F FFE6     	movff	plusw1,postinc1
 20500  011AAE  006F FF8F FFE6     	movff	plusw1,postinc1
 20501  011AB4  006F FF8F FFE6     	movff	plusw1,postinc1
 20502  011ABA  006F FF8F FFE6     	movff	plusw1,postinc1
 20503                           
 20504                           ;stkvar	_l @ sp[(-60)+20]
 20505  011AC0  0ED8               	movlw	-40
 20506  011AC2  006F FF8F FFE6     	movff	plusw1,postinc1
 20507  011AC8  006F FF8F FFE6     	movff	plusw1,postinc1
 20508  011ACE  006F FF8F FFE6     	movff	plusw1,postinc1
 20509  011AD4  006F FF8F FFE6     	movff	plusw1,postinc1
 20510  011ADA  EC6E  F09F         	call	___flmul	;wreg free
 20511  011ADE  0060  F007  FFE6   	movff	btemp,postinc1
 20512  011AE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20513  011AEA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20514  011AF0  0060  F013  FFE6   	movff	btemp+3,postinc1
 20515                           
 20516                           ;stkvar	_h @ sp[(-60)+24]
 20517  011AF6  0EDC               	movlw	-36
 20518  011AF8  006F FF8F FFE6     	movff	plusw1,postinc1
 20519  011AFE  006F FF8F FFE6     	movff	plusw1,postinc1
 20520  011B04  006F FF8F FFE6     	movff	plusw1,postinc1
 20521  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
 20522  011B10  ECB6  F0E3         	call	___flsub	;wreg free
 20523                           
 20524                           ;stkvar	_h @ sp[(-56)+24]
 20525  011B14  0EE0               	movlw	-32
 20526  011B16  0060  F007  FFE3   	movff	btemp,plusw1
 20527  011B1C  0EE1               	movlw	-31
 20528  011B1E  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20529  011B24  0EE2               	movlw	-30
 20530  011B26  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20531  011B2C  0EE3               	movlw	-29
 20532  011B2E  0060  F013  FFE3   	movff	btemp+3,plusw1
 20533                           
 20534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 20535  011B34  0E00               	movlw	0
 20536  011B36  6EE6               	movwf	postinc1,c
 20537  011B38  0E00               	movlw	0
 20538  011B3A  6EE6               	movwf	postinc1,c
 20539  011B3C  0E20               	movlw	32
 20540  011B3E  6EE6               	movwf	postinc1,c
 20541  011B40  0E41               	movlw	65
 20542  011B42  6EE6               	movwf	postinc1,c
 20543                           
 20544                           ;stkvar	_u @ sp[(-60)+12]
 20545  011B44  0ED0               	movlw	-48
 20546  011B46  006F FF8F FFE6     	movff	plusw1,postinc1
 20547  011B4C  006F FF8F FFE6     	movff	plusw1,postinc1
 20548  011B52  006F FF8F FFE6     	movff	plusw1,postinc1
 20549  011B58  006F FF8F FFE6     	movff	plusw1,postinc1
 20550  011B5E  EC61  F0A7         	call	___fldiv	;wreg free
 20551                           
 20552                           ;stkvar	_u @ sp[(-56)+12]
 20553  011B62  0ED4               	movlw	-44
 20554  011B64  0060  F007  FFE3   	movff	btemp,plusw1
 20555  011B6A  0ED5               	movlw	-43
 20556  011B6C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20557  011B72  0ED6               	movlw	-42
 20558  011B74  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20559  011B7A  0ED7               	movlw	-41
 20560  011B7C  0060  F013  FFE3   	movff	btemp+3,plusw1
 20561                           
 20562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 20563                           ;stkvar	_i @ sp[(-56)+36]
 20564  011B82  0EEC               	movlw	-20
 20565  011B84  50E3               	movf	plusw1,w,c
 20566  011B86  0F01               	addlw	1
 20567  011B88  6E01               	movwf	btemp^0,c
 20568  011B8A  0EEC               	movlw	-20
 20569  011B8C  0060  F007  FFE3   	movff	btemp,plusw1
 20570  011B92  6A01               	clrf	btemp^0,c
 20571  011B94  0EED               	movlw	-19
 20572  011B96  50E3               	movf	plusw1,w,c
 20573  011B98  2001               	addwfc	btemp^0,w,c
 20574  011B9A  6E01               	movwf	btemp^0,c
 20575  011B9C  0EED               	movlw	-19
 20576  011B9E  0060  F007  FFE3   	movff	btemp,plusw1
 20577  011BA4                     l13340:
 20578                           
 20579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 20580                           ;stkvar	_m @ sp[(-56)+48]
 20581                           ;stkvar	_i @ sp[(-56)+36]
 20582  011BA4  50E1               	movf	fsr1l,w,c
 20583  011BA6  0FEC               	addlw	-20
 20584  011BA8  6ED9               	movwf	fsr2l,c
 20585  011BAA  50E2               	movf	fsr1h,w,c
 20586  011BAC  6EDA               	movwf	fsr2h,c
 20587  011BAE  0EFF               	movlw	255
 20588  011BB0  22DA               	addwfc	fsr2h,f,c
 20589  011BB2  0EF8               	movlw	-8
 20590  011BB4  50E3               	movf	plusw1,w,c
 20591  011BB6  5CDE               	subwf	postinc2,w,c
 20592  011BB8  50DE               	movf	postinc2,w,c
 20593  011BBA  0A80               	xorlw	128
 20594  011BBC  6E01               	movwf	btemp^0,c
 20595  011BBE  0EF9               	movlw	-7
 20596  011BC0  50E3               	movf	plusw1,w,c
 20597  011BC2  0A80               	xorlw	128
 20598  011BC4  5801               	subwfb	btemp^0,w,c
 20599  011BC6  A0D8               	btfss	status,0,c
 20600  011BC8  D717               	goto	l13330
 20601                           
 20602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 20603  011BCA  0E00               	movlw	0
 20604  011BCC  6EE6               	movwf	postinc1,c
 20605  011BCE  0E00               	movlw	0
 20606  011BD0  6EE6               	movwf	postinc1,c
 20607  011BD2  0EA0               	movlw	160
 20608  011BD4  6EE6               	movwf	postinc1,c
 20609  011BD6  0E40               	movlw	64
 20610  011BD8  6EE6               	movwf	postinc1,c
 20611                           
 20612                           ;stkvar	_u @ sp[(-60)+12]
 20613  011BDA  0ED0               	movlw	-48
 20614  011BDC  006F FF8F FFE6     	movff	plusw1,postinc1
 20615  011BE2  006F FF8F FFE6     	movff	plusw1,postinc1
 20616  011BE8  006F FF8F FFE6     	movff	plusw1,postinc1
 20617  011BEE  006F FF8F FFE6     	movff	plusw1,postinc1
 20618  011BF4  EC6E  F09F         	call	___flmul	;wreg free
 20619                           
 20620                           ;stkvar	_l @ sp[(-56)+20]
 20621  011BF8  0EDC               	movlw	-36
 20622  011BFA  0060  F007  FFE3   	movff	btemp,plusw1
 20623  011C00  0EDD               	movlw	-35
 20624  011C02  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20625  011C08  0EDE               	movlw	-34
 20626  011C0A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20627  011C10  0EDF               	movlw	-33
 20628  011C12  0060  F013  FFE3   	movff	btemp+3,plusw1
 20629                           
 20630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 20631                           ;stkvar	_l @ sp[(-56)+20]
 20632  011C18  0EDC               	movlw	-36
 20633  011C1A  006F FF8F FFE6     	movff	plusw1,postinc1
 20634  011C20  006F FF8F FFE6     	movff	plusw1,postinc1
 20635  011C26  006F FF8F FFE6     	movff	plusw1,postinc1
 20636  011C2C  006F FF8F FFE6     	movff	plusw1,postinc1
 20637                           
 20638                           ;stkvar	_h @ sp[(-60)+24]
 20639  011C32  0EDC               	movlw	-36
 20640  011C34  006F FF8F FFE6     	movff	plusw1,postinc1
 20641  011C3A  006F FF8F FFE6     	movff	plusw1,postinc1
 20642  011C40  006F FF8F FFE6     	movff	plusw1,postinc1
 20643  011C46  006F FF8F FFE6     	movff	plusw1,postinc1
 20644  011C4C  EC7D  F0CD         	call	___flge	;wreg free
 20645  011C50  A001               	btfss	btemp& (0+255),0,c
 20646  011C52  D021               	goto	u12340
 20647                           
 20648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 20649                           ;stkvar	_l @ sp[(-56)+20]
 20650                           
 20651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 20652                           
 20653                           ;stkvar	_l @ sp[(-56)+20]
 20654                           
 20655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 20656  011C54  0EDC               	movlw	-36
 20657  011C56  006F FF8F FFE6     	movff	plusw1,postinc1
 20658  011C5C  006F FF8F FFE6     	movff	plusw1,postinc1
 20659  011C62  006F FF8F FFE6     	movff	plusw1,postinc1
 20660  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
 20661                           
 20662                           ;stkvar	_h @ sp[(-60)+24]
 20663  011C6E  0EDC               	movlw	-36
 20664  011C70  006F FF8F FFE6     	movff	plusw1,postinc1
 20665  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 20666  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 20667  011C82  006F FF8F FFE6     	movff	plusw1,postinc1
 20668  011C88  ECE2  F0D8         	call	___fleq	;wreg free
 20669  011C8C  A001               	btfss	btemp& (0+255),0,c
 20670  011C8E  D01B               	goto	l13354
 20671                           
 20672                           ;stkvar	_d @ sp[(-56)+44]
 20673  011C90  0EF4               	movlw	-12
 20674  011C92  B0E3               	btfsc	plusw1,0,c
 20675  011C94  D018               	goto	l13354
 20676  011C96                     u12340:
 20677                           
 20678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 20679  011C96  0E00               	movlw	0
 20680  011C98  6E09               	movwf	(btemp+8)^0,c
 20681  011C9A  0E00               	movlw	0
 20682  011C9C  6E0A               	movwf	(btemp+9)^0,c
 20683  011C9E  0E00               	movlw	0
 20684  011CA0  6E0B               	movwf	(btemp+10)^0,c
 20685  011CA2  0E00               	movlw	0
 20686  011CA4  6E0C               	movwf	(btemp+11)^0,c
 20687                           
 20688                           ;stkvar	_l @ sp[(-56)+20]
 20689  011CA6  0EDC               	movlw	-36
 20690  011CA8  0060  F027  FFE3   	movff	btemp+8,plusw1
 20691  011CAE  0EDD               	movlw	-35
 20692  011CB0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20693  011CB6  0EDE               	movlw	-34
 20694  011CB8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20695  011CBE  0EDF               	movlw	-33
 20696  011CC0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20697  011CC6                     l13354:
 20698                           
 20699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 20700                           ;stkvar	_l @ sp[(-56)+20]
 20701  011CC6  0EDC               	movlw	-36
 20702  011CC8  006F FF8F FFE6     	movff	plusw1,postinc1
 20703  011CCE  006F FF8F FFE6     	movff	plusw1,postinc1
 20704  011CD4  006F FF8F FFE6     	movff	plusw1,postinc1
 20705  011CDA  006F FF8F FFE6     	movff	plusw1,postinc1
 20706                           
 20707                           ;stkvar	_g @ sp[(-60)+16]
 20708  011CE0  0ED4               	movlw	-44
 20709  011CE2  006F FF8F FFE6     	movff	plusw1,postinc1
 20710  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
 20711  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
 20712  011CF4  006F FF8F FFE6     	movff	plusw1,postinc1
 20713  011CFA  EC83  F0A3         	call	___fladd	;wreg free
 20714                           
 20715                           ;stkvar	_h @ sp[(-56)+24]
 20716  011CFE  0EE0               	movlw	-32
 20717  011D00  0060  F007  FFE3   	movff	btemp,plusw1
 20718  011D06  0EE1               	movlw	-31
 20719  011D08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20720  011D0E  0EE2               	movlw	-30
 20721  011D10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20722  011D16  0EE3               	movlw	-29
 20723  011D18  0060  F013  FFE3   	movff	btemp+3,plusw1
 20724                           
 20725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 20726                           ;stkvar	_ou @ sp[(-56)+28]
 20727  011D1E  0EE4               	movlw	-28
 20728  011D20  006F FF8C  F009    	movff	plusw1,btemp+8
 20729  011D26  0EE5               	movlw	-27
 20730  011D28  006F FF8C  F00A    	movff	plusw1,btemp+9
 20731  011D2E  0EE6               	movlw	-26
 20732  011D30  006F FF8C  F00B    	movff	plusw1,btemp+10
 20733  011D36  0EE7               	movlw	-25
 20734  011D38  006F FF8C  F00C    	movff	plusw1,btemp+11
 20735                           
 20736                           ;stkvar	_u @ sp[(-56)+12]
 20737  011D3E  0ED4               	movlw	-44
 20738  011D40  0060  F027  FFE3   	movff	btemp+8,plusw1
 20739  011D46  0ED5               	movlw	-43
 20740  011D48  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20741  011D4E  0ED6               	movlw	-42
 20742  011D50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20743  011D56  0ED7               	movlw	-41
 20744  011D58  0060  F033  FFE3   	movff	btemp+11,plusw1
 20745                           
 20746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 20747                           ;stkvar	_nmode @ sp[(-56)+55]
 20748  011D5E  0EFF               	movlw	-1
 20749  011D60  006F FF8C  F001    	movff	plusw1,btemp
 20750  011D66  0E65               	movlw	101
 20751  011D68  1801               	xorwf	btemp^0,w,c
 20752  011D6A  B4D8               	btfsc	status,2,c
 20753  011D6C  D011               	goto	l13362
 20754                           
 20755                           ;stkvar	_e @ sp[(-56)+34]
 20756                           ;stkvar	_ne @ sp[(-56)+46]
 20757  011D6E  0EEA               	movlw	-22
 20758  011D70  006F FF8C  F001    	movff	plusw1,btemp
 20759  011D76  0EF6               	movlw	-10
 20760  011D78  0060  F007  FFE3   	movff	btemp,plusw1
 20761  011D7E  0EEB               	movlw	-21
 20762  011D80  006F FF8C  F001    	movff	plusw1,btemp
 20763  011D86  0EF7               	movlw	-9
 20764  011D88  0060  F007  FFE3   	movff	btemp,plusw1
 20765  011D8E  D004               	goto	l2502
 20766  011D90                     l13362:
 20767                           
 20768                           ;stkvar	_ne @ sp[(-56)+46]
 20769  011D90  0EF6               	movlw	-10
 20770  011D92  6AE3               	clrf	plusw1,c
 20771  011D94  0EF7               	movlw	-9
 20772  011D96  6AE3               	clrf	plusw1,c
 20773  011D98                     l2502:
 20774                           
 20775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 20776                           ;stkvar	_pp @ sp[(-56)+50]
 20777  011D98  0EFA               	movlw	-6
 20778  011D9A  6AE3               	clrf	plusw1,c
 20779  011D9C  0EFB               	movlw	-5
 20780  011D9E  6AE3               	clrf	plusw1,c
 20781                           
 20782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 20783                           ;stkvar	_t @ sp[(-56)+52]
 20784  011DA0  0EFC               	movlw	-4
 20785  011DA2  6AE3               	clrf	plusw1,c
 20786  011DA4  0EFD               	movlw	-3
 20787  011DA6  6AE3               	clrf	plusw1,c
 20788                           
 20789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 20790                           ;stkvar	_i @ sp[(-56)+36]
 20791  011DA8  0EEC               	movlw	-20
 20792  011DAA  6AE3               	clrf	plusw1,c
 20793  011DAC  0EED               	movlw	-19
 20794  011DAE  6AE3               	clrf	plusw1,c
 20795                           
 20796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 20797  011DB0  D1B7               	goto	l13414
 20798  011DB2                     l13364:
 20799                           
 20800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 20801                           ;stkvar	_u @ sp[(-56)+12]
 20802  011DB2  0ED4               	movlw	-44
 20803  011DB4  006F FF8F FFE6     	movff	plusw1,postinc1
 20804  011DBA  006F FF8F FFE6     	movff	plusw1,postinc1
 20805  011DC0  006F FF8F FFE6     	movff	plusw1,postinc1
 20806  011DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 20807                           
 20808                           ;stkvar	_h @ sp[(-60)+24]
 20809  011DCC  0EDC               	movlw	-36
 20810  011DCE  006F FF8F FFE6     	movff	plusw1,postinc1
 20811  011DD4  006F FF8F FFE6     	movff	plusw1,postinc1
 20812  011DDA  006F FF8F FFE6     	movff	plusw1,postinc1
 20813  011DE0  006F FF8F FFE6     	movff	plusw1,postinc1
 20814  011DE6  EC61  F0A7         	call	___fldiv	;wreg free
 20815  011DEA  0060  F007  FFE6   	movff	btemp,postinc1
 20816  011DF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20817  011DF6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20818  011DFC  0060  F013  FFE6   	movff	btemp+3,postinc1
 20819  011E02  EC1B  F0B5         	call	_floorf	;wreg free
 20820                           
 20821                           ;stkvar	_l @ sp[(-56)+20]
 20822  011E06  0EDC               	movlw	-36
 20823  011E08  0060  F007  FFE3   	movff	btemp,plusw1
 20824  011E0E  0EDD               	movlw	-35
 20825  011E10  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20826  011E16  0EDE               	movlw	-34
 20827  011E18  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20828  011E1E  0EDF               	movlw	-33
 20829  011E20  0060  F013  FFE3   	movff	btemp+3,plusw1
 20830                           
 20831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 20832                           ;stkvar	_l @ sp[(-56)+20]
 20833  011E26  0EDC               	movlw	-36
 20834  011E28  006F FF8F FFE6     	movff	plusw1,postinc1
 20835  011E2E  006F FF8F FFE6     	movff	plusw1,postinc1
 20836  011E34  006F FF8F FFE6     	movff	plusw1,postinc1
 20837  011E3A  006F FF8F FFE6     	movff	plusw1,postinc1
 20838  011E40  ECC4  F0CC         	call	___fltol	;wreg free
 20839  011E44  0060  F004  F00B   	movff	btemp,btemp+10
 20840  011E4A  0060  F008  F00C   	movff	btemp+1,btemp+11
 20841                           
 20842                           ;stkvar	_d @ sp[(-56)+44]
 20843  011E50  0EF4               	movlw	-12
 20844  011E52  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20845  011E58  0EF5               	movlw	-11
 20846  011E5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 20847                           
 20848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 20849  011E60  B83E               	btfsc	_flags^0,4,c
 20850  011E62  D026               	goto	l13378
 20851                           
 20852                           ;stkvar	_d @ sp[(-56)+44]
 20853  011E64  0EF4               	movlw	-12
 20854  011E66  006F FF8C  F001    	movff	plusw1,btemp
 20855  011E6C  0EF5               	movlw	-11
 20856  011E6E  50E3               	movf	plusw1,w,c
 20857  011E70  1001               	iorwf	btemp^0,w,c
 20858  011E72  A4D8               	btfss	status,2,c
 20859  011E74  D01D               	goto	l13378
 20860                           
 20861                           ;stkvar	_mode @ sp[(-56)+54]
 20862  011E76  0EFE               	movlw	-2
 20863  011E78  006F FF8C  F001    	movff	plusw1,btemp
 20864  011E7E  0E67               	movlw	103
 20865  011E80  1801               	xorwf	btemp^0,w,c
 20866  011E82  A4D8               	btfss	status,2,c
 20867  011E84  D015               	goto	l13378
 20868                           
 20869                           ;stkvar	_ne @ sp[(-56)+46]
 20870  011E86  0EF7               	movlw	-9
 20871  011E88  AEE3               	btfss	plusw1,7,c
 20872  011E8A  D012               	goto	l13378
 20873                           
 20874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 20875                           ;stkvar	_t @ sp[(-56)+52]
 20876  011E8C  0EFC               	movlw	-4
 20877  011E8E  50E3               	movf	plusw1,w,c
 20878  011E90  0F01               	addlw	1
 20879  011E92  6E01               	movwf	btemp^0,c
 20880  011E94  0EFC               	movlw	-4
 20881  011E96  0060  F007  FFE3   	movff	btemp,plusw1
 20882  011E9C  6A01               	clrf	btemp^0,c
 20883  011E9E  0EFD               	movlw	-3
 20884  011EA0  50E3               	movf	plusw1,w,c
 20885  011EA2  2001               	addwfc	btemp^0,w,c
 20886  011EA4  6E01               	movwf	btemp^0,c
 20887  011EA6  0EFD               	movlw	-3
 20888  011EA8  0060  F007  FFE3   	movff	btemp,plusw1
 20889                           
 20890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 20891  011EAE  D0AF               	goto	l13406
 20892  011EB0                     l13378:
 20893                           
 20894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 20895                           ;stkvar	_pp @ sp[(-56)+50]
 20896  011EB0  0EFA               	movlw	-6
 20897  011EB2  006F FF8C  F001    	movff	plusw1,btemp
 20898  011EB8  0EFB               	movlw	-5
 20899  011EBA  50E3               	movf	plusw1,w,c
 20900  011EBC  1001               	iorwf	btemp^0,w,c
 20901  011EBE  A4D8               	btfss	status,2,c
 20902  011EC0  D070               	goto	l13398
 20903                           
 20904                           ;stkvar	_ne @ sp[(-56)+46]
 20905  011EC2  0EF7               	movlw	-9
 20906  011EC4  AEE3               	btfss	plusw1,7,c
 20907  011EC6  D06D               	goto	l13398
 20908                           
 20909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 20910                           ;stkvar	_n @ sp[(-56)+32]
 20911  011EC8  0EE8               	movlw	-24
 20912  011ECA  006F FF8C  F00B    	movff	plusw1,btemp+10
 20913  011ED0  0EE9               	movlw	-23
 20914  011ED2  006F FF8C  F00C    	movff	plusw1,btemp+11
 20915  011ED8  0E43               	movlw	low _dbuf
 20916  011EDA  240B               	addwf	(btemp+10)^0,w,c
 20917  011EDC  6ED9               	movwf	fsr2l,c
 20918  011EDE  0E02               	movlw	high _dbuf
 20919  011EE0  200C               	addwfc	(btemp+11)^0,w,c
 20920  011EE2  6EDA               	movwf	fsr2h,c
 20921  011EE4  0E2E               	movlw	46
 20922  011EE6  6EDF               	movwf	indf2,c
 20923                           
 20924                           ;stkvar	_n @ sp[(-56)+32]
 20925  011EE8  0EE8               	movlw	-24
 20926  011EEA  50E3               	movf	plusw1,w,c
 20927  011EEC  0F01               	addlw	1
 20928  011EEE  6E01               	movwf	btemp^0,c
 20929  011EF0  0EE8               	movlw	-24
 20930  011EF2  0060  F007  FFE3   	movff	btemp,plusw1
 20931  011EF8  6A01               	clrf	btemp^0,c
 20932  011EFA  0EE9               	movlw	-23
 20933  011EFC  50E3               	movf	plusw1,w,c
 20934  011EFE  2001               	addwfc	btemp^0,w,c
 20935  011F00  6E01               	movwf	btemp^0,c
 20936  011F02  0EE9               	movlw	-23
 20937  011F04  0060  F007  FFE3   	movff	btemp,plusw1
 20938                           
 20939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 20940                           ;stkvar	_w @ sp[(-56)+38]
 20941  011F0A  50E1               	movf	fsr1l,w,c
 20942  011F0C  0FEE               	addlw	-18
 20943  011F0E  6ED9               	movwf	fsr2l,c
 20944  011F10  50E2               	movf	fsr1h,w,c
 20945  011F12  6EDA               	movwf	fsr2h,c
 20946  011F14  0EFF               	movlw	255
 20947  011F16  22DA               	addwfc	fsr2h,f,c
 20948  011F18  06DE               	decf	postinc2,f,c
 20949  011F1A  0E00               	movlw	0
 20950  011F1C  5ADD               	subwfb	postdec2,f,c
 20951                           
 20952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 20953  011F1E  0E01               	movlw	1
 20954  011F20  6E0B               	movwf	(btemp+10)^0,c
 20955  011F22  0E00               	movlw	0
 20956  011F24  6E0C               	movwf	(btemp+11)^0,c
 20957                           
 20958                           ;stkvar	_pp @ sp[(-56)+50]
 20959  011F26  0EFA               	movlw	-6
 20960  011F28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20961  011F2E  0EFB               	movlw	-5
 20962  011F30  0060  F033  FFE3   	movff	btemp+11,plusw1
 20963  011F36  D035               	goto	l13398
 20964  011F38                     l13390:
 20965                           
 20966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 20967                           ;stkvar	_n @ sp[(-56)+32]
 20968  011F38  0EE8               	movlw	-24
 20969  011F3A  006F FF8C  F00B    	movff	plusw1,btemp+10
 20970  011F40  0EE9               	movlw	-23
 20971  011F42  006F FF8C  F00C    	movff	plusw1,btemp+11
 20972  011F48  0E43               	movlw	low _dbuf
 20973  011F4A  240B               	addwf	(btemp+10)^0,w,c
 20974  011F4C  6ED9               	movwf	fsr2l,c
 20975  011F4E  0E02               	movlw	high _dbuf
 20976  011F50  200C               	addwfc	(btemp+11)^0,w,c
 20977  011F52  6EDA               	movwf	fsr2h,c
 20978  011F54  0E30               	movlw	48
 20979  011F56  6EDF               	movwf	indf2,c
 20980                           
 20981                           ;stkvar	_n @ sp[(-56)+32]
 20982  011F58  0EE8               	movlw	-24
 20983  011F5A  50E3               	movf	plusw1,w,c
 20984  011F5C  0F01               	addlw	1
 20985  011F5E  6E01               	movwf	btemp^0,c
 20986  011F60  0EE8               	movlw	-24
 20987  011F62  0060  F007  FFE3   	movff	btemp,plusw1
 20988  011F68  6A01               	clrf	btemp^0,c
 20989  011F6A  0EE9               	movlw	-23
 20990  011F6C  50E3               	movf	plusw1,w,c
 20991  011F6E  2001               	addwfc	btemp^0,w,c
 20992  011F70  6E01               	movwf	btemp^0,c
 20993  011F72  0EE9               	movlw	-23
 20994  011F74  0060  F007  FFE3   	movff	btemp,plusw1
 20995                           
 20996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 20997                           ;stkvar	_w @ sp[(-56)+38]
 20998  011F7A  50E1               	movf	fsr1l,w,c
 20999  011F7C  0FEE               	addlw	-18
 21000  011F7E  6ED9               	movwf	fsr2l,c
 21001  011F80  50E2               	movf	fsr1h,w,c
 21002  011F82  6EDA               	movwf	fsr2h,c
 21003  011F84  0EFF               	movlw	255
 21004  011F86  22DA               	addwfc	fsr2h,f,c
 21005  011F88  06DE               	decf	postinc2,f,c
 21006  011F8A  0E00               	movlw	0
 21007  011F8C  5ADD               	subwfb	postdec2,f,c
 21008                           
 21009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 21010                           ;stkvar	_t @ sp[(-56)+52]
 21011  011F8E  50E1               	movf	fsr1l,w,c
 21012  011F90  0FFC               	addlw	-4
 21013  011F92  6ED9               	movwf	fsr2l,c
 21014  011F94  50E2               	movf	fsr1h,w,c
 21015  011F96  6EDA               	movwf	fsr2h,c
 21016  011F98  0EFF               	movlw	255
 21017  011F9A  22DA               	addwfc	fsr2h,f,c
 21018  011F9C  06DE               	decf	postinc2,f,c
 21019  011F9E  0E00               	movlw	0
 21020  011FA0  5ADD               	subwfb	postdec2,f,c
 21021  011FA2                     l13398:
 21022                           
 21023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 21024                           ;stkvar	_t @ sp[(-56)+52]
 21025  011FA2  0EFC               	movlw	-4
 21026  011FA4  006F FF8C  F001    	movff	plusw1,btemp
 21027  011FAA  0EFD               	movlw	-3
 21028  011FAC  50E3               	movf	plusw1,w,c
 21029  011FAE  1001               	iorwf	btemp^0,w,c
 21030  011FB0  A4D8               	btfss	status,2,c
 21031  011FB2  D7C2               	goto	l13390
 21032                           
 21033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 21034                           ;stkvar	_n @ sp[(-56)+32]
 21035  011FB4  0EE8               	movlw	-24
 21036  011FB6  006F FF8C  F00B    	movff	plusw1,btemp+10
 21037  011FBC  0EE9               	movlw	-23
 21038  011FBE  006F FF8C  F00C    	movff	plusw1,btemp+11
 21039  011FC4  0E43               	movlw	low _dbuf
 21040  011FC6  240B               	addwf	(btemp+10)^0,w,c
 21041  011FC8  6ED9               	movwf	fsr2l,c
 21042  011FCA  0E02               	movlw	high _dbuf
 21043  011FCC  200C               	addwfc	(btemp+11)^0,w,c
 21044  011FCE  6EDA               	movwf	fsr2h,c
 21045                           
 21046                           ;stkvar	_d @ sp[(-56)+44]
 21047  011FD0  0EF4               	movlw	-12
 21048  011FD2  50E3               	movf	plusw1,w,c
 21049  011FD4  0F30               	addlw	48
 21050  011FD6  6EDF               	movwf	indf2,c
 21051                           
 21052                           ;stkvar	_n @ sp[(-56)+32]
 21053  011FD8  0EE8               	movlw	-24
 21054  011FDA  50E3               	movf	plusw1,w,c
 21055  011FDC  0F01               	addlw	1
 21056  011FDE  6E01               	movwf	btemp^0,c
 21057  011FE0  0EE8               	movlw	-24
 21058  011FE2  0060  F007  FFE3   	movff	btemp,plusw1
 21059  011FE8  6A01               	clrf	btemp^0,c
 21060  011FEA  0EE9               	movlw	-23
 21061  011FEC  50E3               	movf	plusw1,w,c
 21062  011FEE  2001               	addwfc	btemp^0,w,c
 21063  011FF0  6E01               	movwf	btemp^0,c
 21064  011FF2  0EE9               	movlw	-23
 21065  011FF4  0060  F007  FFE3   	movff	btemp,plusw1
 21066                           
 21067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 21068                           ;stkvar	_w @ sp[(-56)+38]
 21069  011FFA  50E1               	movf	fsr1l,w,c
 21070  011FFC  0FEE               	addlw	-18
 21071  011FFE  6ED9               	movwf	fsr2l,c
 21072  012000  50E2               	movf	fsr1h,w,c
 21073  012002  6EDA               	movwf	fsr2h,c
 21074  012004  0EFF               	movlw	255
 21075  012006  22DA               	addwfc	fsr2h,f,c
 21076  012008  06DE               	decf	postinc2,f,c
 21077  01200A  0E00               	movlw	0
 21078  01200C  5ADD               	subwfb	postdec2,f,c
 21079  01200E                     l13406:
 21080                           
 21081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 21082                           ;stkvar	_u @ sp[(-56)+12]
 21083  01200E  0ED4               	movlw	-44
 21084  012010  006F FF8F FFE6     	movff	plusw1,postinc1
 21085  012016  006F FF8F FFE6     	movff	plusw1,postinc1
 21086  01201C  006F FF8F FFE6     	movff	plusw1,postinc1
 21087  012022  006F FF8F FFE6     	movff	plusw1,postinc1
 21088                           
 21089                           ;stkvar	_l @ sp[(-60)+20]
 21090  012028  0ED8               	movlw	-40
 21091  01202A  006F FF8F FFE6     	movff	plusw1,postinc1
 21092  012030  006F FF8F FFE6     	movff	plusw1,postinc1
 21093  012036  006F FF8F FFE6     	movff	plusw1,postinc1
 21094  01203C  006F FF8F FFE6     	movff	plusw1,postinc1
 21095  012042  EC6E  F09F         	call	___flmul	;wreg free
 21096  012046  0060  F007  FFE6   	movff	btemp,postinc1
 21097  01204C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21098  012052  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21099  012058  0060  F013  FFE6   	movff	btemp+3,postinc1
 21100                           
 21101                           ;stkvar	_h @ sp[(-60)+24]
 21102  01205E  0EDC               	movlw	-36
 21103  012060  006F FF8F FFE6     	movff	plusw1,postinc1
 21104  012066  006F FF8F FFE6     	movff	plusw1,postinc1
 21105  01206C  006F FF8F FFE6     	movff	plusw1,postinc1
 21106  012072  006F FF8F FFE6     	movff	plusw1,postinc1
 21107  012078  ECB6  F0E3         	call	___flsub	;wreg free
 21108                           
 21109                           ;stkvar	_h @ sp[(-56)+24]
 21110  01207C  0EE0               	movlw	-32
 21111  01207E  0060  F007  FFE3   	movff	btemp,plusw1
 21112  012084  0EE1               	movlw	-31
 21113  012086  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21114  01208C  0EE2               	movlw	-30
 21115  01208E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21116  012094  0EE3               	movlw	-29
 21117  012096  0060  F013  FFE3   	movff	btemp+3,plusw1
 21118                           
 21119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 21120  01209C  0E00               	movlw	0
 21121  01209E  6EE6               	movwf	postinc1,c
 21122  0120A0  0E00               	movlw	0
 21123  0120A2  6EE6               	movwf	postinc1,c
 21124  0120A4  0E20               	movlw	32
 21125  0120A6  6EE6               	movwf	postinc1,c
 21126  0120A8  0E41               	movlw	65
 21127  0120AA  6EE6               	movwf	postinc1,c
 21128                           
 21129                           ;stkvar	_u @ sp[(-60)+12]
 21130  0120AC  0ED0               	movlw	-48
 21131  0120AE  006F FF8F FFE6     	movff	plusw1,postinc1
 21132  0120B4  006F FF8F FFE6     	movff	plusw1,postinc1
 21133  0120BA  006F FF8F FFE6     	movff	plusw1,postinc1
 21134  0120C0  006F FF8F FFE6     	movff	plusw1,postinc1
 21135  0120C6  EC61  F0A7         	call	___fldiv	;wreg free
 21136                           
 21137                           ;stkvar	_u @ sp[(-56)+12]
 21138  0120CA  0ED4               	movlw	-44
 21139  0120CC  0060  F007  FFE3   	movff	btemp,plusw1
 21140  0120D2  0ED5               	movlw	-43
 21141  0120D4  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21142  0120DA  0ED6               	movlw	-42
 21143  0120DC  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21144  0120E2  0ED7               	movlw	-41
 21145  0120E4  0060  F013  FFE3   	movff	btemp+3,plusw1
 21146                           
 21147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 21148                           ;stkvar	_ne @ sp[(-56)+46]
 21149  0120EA  50E1               	movf	fsr1l,w,c
 21150  0120EC  0FF6               	addlw	-10
 21151  0120EE  6ED9               	movwf	fsr2l,c
 21152  0120F0  50E2               	movf	fsr1h,w,c
 21153  0120F2  6EDA               	movwf	fsr2h,c
 21154  0120F4  0EFF               	movlw	255
 21155  0120F6  22DA               	addwfc	fsr2h,f,c
 21156  0120F8  06DE               	decf	postinc2,f,c
 21157  0120FA  0E00               	movlw	0
 21158  0120FC  5ADD               	subwfb	postdec2,f,c
 21159                           
 21160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 21161                           ;stkvar	_i @ sp[(-56)+36]
 21162  0120FE  0EEC               	movlw	-20
 21163  012100  50E3               	movf	plusw1,w,c
 21164  012102  0F01               	addlw	1
 21165  012104  6E01               	movwf	btemp^0,c
 21166  012106  0EEC               	movlw	-20
 21167  012108  0060  F007  FFE3   	movff	btemp,plusw1
 21168  01210E  6A01               	clrf	btemp^0,c
 21169  012110  0EED               	movlw	-19
 21170  012112  50E3               	movf	plusw1,w,c
 21171  012114  2001               	addwfc	btemp^0,w,c
 21172  012116  6E01               	movwf	btemp^0,c
 21173  012118  0EED               	movlw	-19
 21174  01211A  0060  F007  FFE3   	movff	btemp,plusw1
 21175  012120                     l13414:
 21176                           
 21177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 21178                           ;stkvar	_m @ sp[(-56)+48]
 21179                           ;stkvar	_i @ sp[(-56)+36]
 21180  012120  50E1               	movf	fsr1l,w,c
 21181  012122  0FEC               	addlw	-20
 21182  012124  6ED9               	movwf	fsr2l,c
 21183  012126  50E2               	movf	fsr1h,w,c
 21184  012128  6EDA               	movwf	fsr2h,c
 21185  01212A  0EFF               	movlw	255
 21186  01212C  22DA               	addwfc	fsr2h,f,c
 21187  01212E  0EF8               	movlw	-8
 21188  012130  50E3               	movf	plusw1,w,c
 21189  012132  5CDE               	subwf	postinc2,w,c
 21190  012134  50DE               	movf	postinc2,w,c
 21191  012136  0A80               	xorlw	128
 21192  012138  6E01               	movwf	btemp^0,c
 21193  01213A  0EF9               	movlw	-7
 21194  01213C  50E3               	movf	plusw1,w,c
 21195  01213E  0A80               	xorlw	128
 21196  012140  5801               	subwfb	btemp^0,w,c
 21197  012142  B0D8               	btfsc	status,0,c
 21198  012144  D00E               	goto	u12440
 21199                           
 21200                           ;stkvar	_n @ sp[(-56)+32]
 21201  012146  0EE9               	movlw	-23
 21202  012148  BEE3               	btfsc	plusw1,7,c
 21203  01214A  D633               	goto	l13364
 21204  01214C  0EE9               	movlw	-23
 21205  01214E  50E3               	movf	plusw1,w,c
 21206  012150  E108               	bnz	u12440
 21207  012152  0EE8               	movlw	-24
 21208  012154  006F FF8C  F001    	movff	plusw1,btemp
 21209  01215A  0E4B               	movlw	75
 21210  01215C  5E01               	subwf	btemp^0,f,c
 21211  01215E  A0D8               	btfss	status,0,c
 21212  012160  D628               	goto	l13364
 21213  012162                     u12440:
 21214                           
 21215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 21216                           ;stkvar	_pp @ sp[(-56)+50]
 21217  012162  0EFA               	movlw	-6
 21218  012164  006F FF8C  F001    	movff	plusw1,btemp
 21219  01216A  0EFB               	movlw	-5
 21220  01216C  50E3               	movf	plusw1,w,c
 21221  01216E  1001               	iorwf	btemp^0,w,c
 21222  012170  B4D8               	btfsc	status,2,c
 21223  012172  A83E               	btfss	_flags^0,4,c
 21224  012174  D021               	goto	l13426
 21225                           
 21226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 21227                           ;stkvar	_n @ sp[(-56)+32]
 21228  012176  0EE8               	movlw	-24
 21229  012178  006F FF8C  F00B    	movff	plusw1,btemp+10
 21230  01217E  0EE9               	movlw	-23
 21231  012180  006F FF8C  F00C    	movff	plusw1,btemp+11
 21232  012186  0E43               	movlw	low _dbuf
 21233  012188  240B               	addwf	(btemp+10)^0,w,c
 21234  01218A  6ED9               	movwf	fsr2l,c
 21235  01218C  0E02               	movlw	high _dbuf
 21236  01218E  200C               	addwfc	(btemp+11)^0,w,c
 21237  012190  6EDA               	movwf	fsr2h,c
 21238  012192  0E2E               	movlw	46
 21239  012194  6EDF               	movwf	indf2,c
 21240                           
 21241                           ;stkvar	_n @ sp[(-56)+32]
 21242  012196  0EE8               	movlw	-24
 21243  012198  50E3               	movf	plusw1,w,c
 21244  01219A  0F01               	addlw	1
 21245  01219C  6E01               	movwf	btemp^0,c
 21246  01219E  0EE8               	movlw	-24
 21247  0121A0  0060  F007  FFE3   	movff	btemp,plusw1
 21248  0121A6  6A01               	clrf	btemp^0,c
 21249  0121A8  0EE9               	movlw	-23
 21250  0121AA  50E3               	movf	plusw1,w,c
 21251  0121AC  2001               	addwfc	btemp^0,w,c
 21252  0121AE  6E01               	movwf	btemp^0,c
 21253  0121B0  0EE9               	movlw	-23
 21254  0121B2  0060  F007  FFE3   	movff	btemp,plusw1
 21255  0121B8                     l13426:
 21256                           
 21257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 21258                           ;stkvar	_n @ sp[(-56)+32]
 21259  0121B8  0EE8               	movlw	-24
 21260  0121BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 21261  0121C0  0EE9               	movlw	-23
 21262  0121C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 21263  0121C8  0E43               	movlw	low _dbuf
 21264  0121CA  240B               	addwf	(btemp+10)^0,w,c
 21265  0121CC  6ED9               	movwf	fsr2l,c
 21266  0121CE  0E02               	movlw	high _dbuf
 21267  0121D0  200C               	addwfc	(btemp+11)^0,w,c
 21268  0121D2  6EDA               	movwf	fsr2h,c
 21269  0121D4  0E00               	movlw	0
 21270  0121D6  6EDF               	movwf	indf2,c
 21271                           
 21272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 21273                           ;stkvar	_nmode @ sp[(-56)+55]
 21274  0121D8  0EFF               	movlw	-1
 21275  0121DA  006F FF8C  F001    	movff	plusw1,btemp
 21276  0121E0  0E65               	movlw	101
 21277  0121E2  1801               	xorwf	btemp^0,w,c
 21278  0121E4  A4D8               	btfss	status,2,c
 21279  0121E6  EF55  F08A         	goto	l13230
 21280                           
 21281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 21282  0121EA  0E4F               	movlw	79
 21283  0121EC  6E0B               	movwf	(btemp+10)^0,c
 21284  0121EE  0E00               	movlw	0
 21285  0121F0  6E0C               	movwf	(btemp+11)^0,c
 21286                           
 21287                           ;stkvar	_i @ sp[(-56)+36]
 21288  0121F2  0EEC               	movlw	-20
 21289  0121F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21290  0121FA  0EED               	movlw	-19
 21291  0121FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 21292                           
 21293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 21294                           ;stkvar	_i @ sp[(-56)+36]
 21295  012202  0EEC               	movlw	-20
 21296  012204  006F FF8C  F00B    	movff	plusw1,btemp+10
 21297  01220A  0EED               	movlw	-19
 21298  01220C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21299  012212  0E43               	movlw	low _dbuf
 21300  012214  240B               	addwf	(btemp+10)^0,w,c
 21301  012216  6ED9               	movwf	fsr2l,c
 21302  012218  0E02               	movlw	high _dbuf
 21303  01221A  200C               	addwfc	(btemp+11)^0,w,c
 21304  01221C  6EDA               	movwf	fsr2h,c
 21305  01221E  0E00               	movlw	0
 21306  012220  6EDF               	movwf	indf2,c
 21307                           
 21308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 21309                           ;stkvar	_sign @ sp[(-56)+42]
 21310  012222  0EF2               	movlw	-14
 21311  012224  6AE3               	clrf	plusw1,c
 21312  012226  0EF3               	movlw	-13
 21313  012228  6AE3               	clrf	plusw1,c
 21314                           
 21315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 21316                           ;stkvar	_e @ sp[(-56)+34]
 21317  01222A  0EEB               	movlw	-21
 21318  01222C  AEE3               	btfss	plusw1,7,c
 21319  01222E  D012               	goto	l13440
 21320                           
 21321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 21322  012230  0E01               	movlw	1
 21323  012232  6E0B               	movwf	(btemp+10)^0,c
 21324  012234  0E00               	movlw	0
 21325  012236  6E0C               	movwf	(btemp+11)^0,c
 21326                           
 21327                           ;stkvar	_sign @ sp[(-56)+42]
 21328  012238  0EF2               	movlw	-14
 21329  01223A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21330  012240  0EF3               	movlw	-13
 21331  012242  0060  F033  FFE3   	movff	btemp+11,plusw1
 21332                           
 21333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 21334                           ;stkvar	_e @ sp[(-56)+34]
 21335                           ;stkvar	_e @ sp[(-56)+34]
 21336  012248  0EEA               	movlw	-22
 21337  01224A  6CE3               	negf	plusw1,c
 21338  01224C  0EEB               	movlw	-21
 21339  01224E  1EE3               	comf	plusw1,f,c
 21340  012250  B0D8               	btfsc	status,0,c
 21341  012252  2AE3               	incf	plusw1,f,c
 21342  012254                     l13440:
 21343                           
 21344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 21345  012254  0E02               	movlw	2
 21346  012256  6E0B               	movwf	(btemp+10)^0,c
 21347  012258  0E00               	movlw	0
 21348  01225A  6E0C               	movwf	(btemp+11)^0,c
 21349                           
 21350                           ;stkvar	_p @ sp[(-56)+40]
 21351  01225C  0EF0               	movlw	-16
 21352  01225E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21353  012264  0EF1               	movlw	-15
 21354  012266  0060  F033  FFE3   	movff	btemp+11,plusw1
 21355                           
 21356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 21357  01226C  D051               	goto	l13452
 21358  01226E                     l13442:
 21359                           
 21360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 21361                           ;stkvar	_i @ sp[(-56)+36]
 21362  01226E  50E1               	movf	fsr1l,w,c
 21363  012270  0FEC               	addlw	-20
 21364  012272  6ED9               	movwf	fsr2l,c
 21365  012274  50E2               	movf	fsr1h,w,c
 21366  012276  6EDA               	movwf	fsr2h,c
 21367  012278  0EFF               	movlw	255
 21368  01227A  22DA               	addwfc	fsr2h,f,c
 21369  01227C  06DE               	decf	postinc2,f,c
 21370  01227E  0E00               	movlw	0
 21371  012280  5ADD               	subwfb	postdec2,f,c
 21372                           
 21373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 21374                           ;stkvar	_i @ sp[(-56)+36]
 21375  012282  0EEC               	movlw	-20
 21376  012284  006F FF8C  F00B    	movff	plusw1,btemp+10
 21377  01228A  0EED               	movlw	-19
 21378  01228C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21379  012292  0E43               	movlw	low _dbuf
 21380  012294  240B               	addwf	(btemp+10)^0,w,c
 21381  012296  6ED9               	movwf	fsr2l,c
 21382  012298  0E02               	movlw	high _dbuf
 21383  01229A  200C               	addwfc	(btemp+11)^0,w,c
 21384  01229C  6EDA               	movwf	fsr2h,c
 21385  01229E  0E0A               	movlw	10
 21386  0122A0  6EE6               	movwf	postinc1,c
 21387  0122A2  0E00               	movlw	0
 21388  0122A4  6EE6               	movwf	postinc1,c
 21389                           
 21390                           ;stkvar	_e @ sp[(-58)+34]
 21391  0122A6  0EE8               	movlw	-24
 21392  0122A8  006F FF8F FFE6     	movff	plusw1,postinc1
 21393  0122AE  006F FF8F FFE6     	movff	plusw1,postinc1
 21394  0122B4  ECAF  F0D3         	call	___awmod	;wreg free
 21395  0122B8  5001               	movf	btemp^0,w,c
 21396  0122BA  0F30               	addlw	48
 21397  0122BC  6EDF               	movwf	indf2,c
 21398                           
 21399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 21400  0122BE  0E0A               	movlw	10
 21401  0122C0  6EE6               	movwf	postinc1,c
 21402  0122C2  0E00               	movlw	0
 21403  0122C4  6EE6               	movwf	postinc1,c
 21404                           
 21405                           ;stkvar	_e @ sp[(-58)+34]
 21406  0122C6  0EE8               	movlw	-24
 21407  0122C8  006F FF8F FFE6     	movff	plusw1,postinc1
 21408  0122CE  006F FF8F FFE6     	movff	plusw1,postinc1
 21409  0122D4  ECDF  F0CE         	call	___awdiv	;wreg free
 21410                           
 21411                           ;stkvar	_e @ sp[(-56)+34]
 21412  0122D8  0EEA               	movlw	-22
 21413  0122DA  0060  F007  FFE3   	movff	btemp,plusw1
 21414  0122E0  0EEB               	movlw	-21
 21415  0122E2  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21416                           
 21417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 21418                           ;stkvar	_p @ sp[(-56)+40]
 21419  0122E8  50E1               	movf	fsr1l,w,c
 21420  0122EA  0FF0               	addlw	-16
 21421  0122EC  6ED9               	movwf	fsr2l,c
 21422  0122EE  50E2               	movf	fsr1h,w,c
 21423  0122F0  6EDA               	movwf	fsr2h,c
 21424  0122F2  0EFF               	movlw	255
 21425  0122F4  22DA               	addwfc	fsr2h,f,c
 21426  0122F6  06DE               	decf	postinc2,f,c
 21427  0122F8  0E00               	movlw	0
 21428  0122FA  5ADD               	subwfb	postdec2,f,c
 21429                           
 21430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 21431                           ;stkvar	_w @ sp[(-56)+38]
 21432  0122FC  50E1               	movf	fsr1l,w,c
 21433  0122FE  0FEE               	addlw	-18
 21434  012300  6ED9               	movwf	fsr2l,c
 21435  012302  50E2               	movf	fsr1h,w,c
 21436  012304  6EDA               	movwf	fsr2h,c
 21437  012306  0EFF               	movlw	255
 21438  012308  22DA               	addwfc	fsr2h,f,c
 21439  01230A  06DE               	decf	postinc2,f,c
 21440  01230C  0E00               	movlw	0
 21441  01230E  5ADD               	subwfb	postdec2,f,c
 21442  012310                     l13452:
 21443                           
 21444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 21445                           ;stkvar	_e @ sp[(-56)+34]
 21446  012310  0EEA               	movlw	-22
 21447  012312  006F FF8C  F001    	movff	plusw1,btemp
 21448  012318  0EEB               	movlw	-21
 21449  01231A  50E3               	movf	plusw1,w,c
 21450  01231C  1001               	iorwf	btemp^0,w,c
 21451  01231E  A4D8               	btfss	status,2,c
 21452  012320  D7A6               	goto	l13442
 21453                           
 21454                           ;stkvar	_p @ sp[(-56)+40]
 21455  012322  0EF1               	movlw	-15
 21456  012324  BEE3               	btfsc	plusw1,7,c
 21457  012326  D007               	goto	u12500
 21458  012328  0EF1               	movlw	-15
 21459  01232A  50E3               	movf	plusw1,w,c
 21460  01232C  E1A0               	bnz	l13442
 21461  01232E  0EF0               	movlw	-16
 21462  012330  04E3               	decf	plusw1,w,c
 21463  012332  B0D8               	btfsc	status,0,c
 21464  012334  D79C               	goto	l13442
 21465  012336                     u12500:
 21466                           
 21467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 21468                           ;stkvar	_i @ sp[(-56)+36]
 21469  012336  50E1               	movf	fsr1l,w,c
 21470  012338  0FEC               	addlw	-20
 21471  01233A  6ED9               	movwf	fsr2l,c
 21472  01233C  50E2               	movf	fsr1h,w,c
 21473  01233E  6EDA               	movwf	fsr2h,c
 21474  012340  0EFF               	movlw	255
 21475  012342  22DA               	addwfc	fsr2h,f,c
 21476  012344  06DE               	decf	postinc2,f,c
 21477  012346  0E00               	movlw	0
 21478  012348  5ADD               	subwfb	postdec2,f,c
 21479                           
 21480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 21481                           ;stkvar	_sign @ sp[(-56)+42]
 21482  01234A  0EF2               	movlw	-14
 21483  01234C  006F FF8C  F001    	movff	plusw1,btemp
 21484  012352  0EF3               	movlw	-13
 21485  012354  50E3               	movf	plusw1,w,c
 21486  012356  1001               	iorwf	btemp^0,w,c
 21487  012358  A4D8               	btfss	status,2,c
 21488  01235A  D002               	goto	l13462
 21489  01235C  0E2B               	movlw	43
 21490  01235E  D001               	goto	L23
 21491  012360                     l13462:
 21492  012360  0E2D               	movlw	45
 21493  012362                     L23:
 21494  012362  6E0B               	movwf	(btemp+10)^0,c
 21495  012364  0E00               	movlw	0
 21496  012366  6E0C               	movwf	(btemp+11)^0,c
 21497                           
 21498                           ;stkvar	_efgtoa$6175 @ sp[(-56)+4]
 21499  012368  0ECC               	movlw	-52
 21500  01236A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21501  012370  0ECD               	movlw	-51
 21502  012372  0060  F033  FFE3   	movff	btemp+11,plusw1
 21503                           
 21504                           ;stkvar	_efgtoa$6175 @ sp[(-56)+4]
 21505                           ;stkvar	_i @ sp[(-56)+36]
 21506  012378  0EEC               	movlw	-20
 21507  01237A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21508  012380  0EED               	movlw	-19
 21509  012382  006F FF8C  F00C    	movff	plusw1,btemp+11
 21510  012388  0E43               	movlw	low _dbuf
 21511  01238A  240B               	addwf	(btemp+10)^0,w,c
 21512  01238C  6ED9               	movwf	fsr2l,c
 21513  01238E  0E02               	movlw	high _dbuf
 21514  012390  200C               	addwfc	(btemp+11)^0,w,c
 21515  012392  6EDA               	movwf	fsr2h,c
 21516  012394  0ECC               	movlw	-52
 21517  012396  006F FF8F FFDF     	movff	plusw1,indf2
 21518                           
 21519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 21520                           ;stkvar	_w @ sp[(-56)+38]
 21521  01239C  50E1               	movf	fsr1l,w,c
 21522  01239E  0FEE               	addlw	-18
 21523  0123A0  6ED9               	movwf	fsr2l,c
 21524  0123A2  50E2               	movf	fsr1h,w,c
 21525  0123A4  6EDA               	movwf	fsr2h,c
 21526  0123A6  0EFF               	movlw	255
 21527  0123A8  22DA               	addwfc	fsr2h,f,c
 21528  0123AA  06DE               	decf	postinc2,f,c
 21529  0123AC  0E00               	movlw	0
 21530  0123AE  5ADD               	subwfb	postdec2,f,c
 21531                           
 21532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 21533                           ;stkvar	_i @ sp[(-56)+36]
 21534  0123B0  50E1               	movf	fsr1l,w,c
 21535  0123B2  0FEC               	addlw	-20
 21536  0123B4  6ED9               	movwf	fsr2l,c
 21537  0123B6  50E2               	movf	fsr1h,w,c
 21538  0123B8  6EDA               	movwf	fsr2h,c
 21539  0123BA  0EFF               	movlw	255
 21540  0123BC  22DA               	addwfc	fsr2h,f,c
 21541  0123BE  06DE               	decf	postinc2,f,c
 21542  0123C0  0E00               	movlw	0
 21543  0123C2  5ADD               	subwfb	postdec2,f,c
 21544  0123C4  0EBF               	movlw	191
 21545  0123C6  6E0B               	movwf	(btemp+10)^0,c
 21546  0123C8  0EFF               	movlw	255
 21547  0123CA  6E0C               	movwf	(btemp+11)^0,c
 21548                           
 21549                           ;stkvar	_c @ sp[(-56)+-7]
 21550  0123CC  0EC1               	movlw	-63
 21551  0123CE  50E3               	movf	plusw1,w,c
 21552  0123D0  6E09               	movwf	(btemp+8)^0,c
 21553  0123D2  6A0A               	clrf	(btemp+9)^0,c
 21554  0123D4  500B               	movf	(btemp+10)^0,w,c
 21555  0123D6  2609               	addwf	(btemp+8)^0,f,c
 21556  0123D8  500C               	movf	(btemp+11)^0,w,c
 21557  0123DA  220A               	addwfc	(btemp+9)^0,f,c
 21558  0123DC  500A               	movf	(btemp+9)^0,w,c
 21559  0123DE  E106               	bnz	u12520
 21560  0123E0  0E1A               	movlw	26
 21561  0123E2  5C09               	subwf	(btemp+8)^0,w,c
 21562  0123E4  B0D8               	btfsc	status,0,c
 21563  0123E6  D002               	goto	u12520
 21564  0123E8  0E01               	movlw	1
 21565  0123EA  D001               	goto	u12530
 21566  0123EC                     u12520:
 21567  0123EC  0E00               	movlw	0
 21568  0123EE                     u12530:
 21569  0123EE  6E0B               	movwf	(btemp+10)^0,c
 21570  0123F0  6A0C               	clrf	(btemp+11)^0,c
 21571                           
 21572                           ;stkvar	_efgtoa$6177 @ sp[(-56)+0]
 21573  0123F2  0EC8               	movlw	-56
 21574  0123F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21575  0123FA  0EC9               	movlw	-55
 21576  0123FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 21577                           
 21578                           ;stkvar	_efgtoa$6177 @ sp[(-56)+0]
 21579  012402  0EC8               	movlw	-56
 21580  012404  006F FF8C  F001    	movff	plusw1,btemp
 21581  01240A  0EC9               	movlw	-55
 21582  01240C  50E3               	movf	plusw1,w,c
 21583  01240E  1001               	iorwf	btemp^0,w,c
 21584  012410  A4D8               	btfss	status,2,c
 21585  012412  D002               	goto	l13478
 21586  012414  0E65               	movlw	101
 21587  012416  D001               	goto	L24
 21588  012418                     l13478:
 21589  012418  0E45               	movlw	69
 21590  01241A                     L24:
 21591  01241A  6E0B               	movwf	(btemp+10)^0,c
 21592  01241C  0E00               	movlw	0
 21593  01241E  6E0C               	movwf	(btemp+11)^0,c
 21594                           
 21595                           ;stkvar	_efgtoa$6176 @ sp[(-56)+2]
 21596  012420  0ECA               	movlw	-54
 21597  012422  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21598  012428  0ECB               	movlw	-53
 21599  01242A  0060  F033  FFE3   	movff	btemp+11,plusw1
 21600                           
 21601                           ;stkvar	_efgtoa$6176 @ sp[(-56)+2]
 21602                           ;stkvar	_i @ sp[(-56)+36]
 21603  012430  0EEC               	movlw	-20
 21604  012432  006F FF8C  F00B    	movff	plusw1,btemp+10
 21605  012438  0EED               	movlw	-19
 21606  01243A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21607  012440  0E43               	movlw	low _dbuf
 21608  012442  240B               	addwf	(btemp+10)^0,w,c
 21609  012444  6ED9               	movwf	fsr2l,c
 21610  012446  0E02               	movlw	high _dbuf
 21611  012448  200C               	addwfc	(btemp+11)^0,w,c
 21612  01244A  6EDA               	movwf	fsr2h,c
 21613  01244C  0ECA               	movlw	-54
 21614  01244E  006F FF8F FFDF     	movff	plusw1,indf2
 21615                           
 21616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 21617                           ;stkvar	_w @ sp[(-56)+38]
 21618  012454  50E1               	movf	fsr1l,w,c
 21619  012456  0FEE               	addlw	-18
 21620  012458  6ED9               	movwf	fsr2l,c
 21621  01245A  50E2               	movf	fsr1h,w,c
 21622  01245C  6EDA               	movwf	fsr2h,c
 21623  01245E  0EFF               	movlw	255
 21624  012460  22DA               	addwfc	fsr2h,f,c
 21625  012462  06DE               	decf	postinc2,f,c
 21626  012464  0E00               	movlw	0
 21627  012466  5ADD               	subwfb	postdec2,f,c
 21628                           
 21629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 21630                           ;stkvar	_i @ sp[(-56)+36]
 21631  012468  0EEC               	movlw	-20
 21632  01246A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21633  012470  0EED               	movlw	-19
 21634  012472  006F FF8C  F00C    	movff	plusw1,btemp+11
 21635  012478  0E43               	movlw	low _dbuf
 21636  01247A  240B               	addwf	(btemp+10)^0,w,c
 21637  01247C  6E09               	movwf	(btemp+8)^0,c
 21638  01247E  0E02               	movlw	high _dbuf
 21639  012480  200C               	addwfc	(btemp+11)^0,w,c
 21640  012482  6E0A               	movwf	(btemp+9)^0,c
 21641  012484  0060  F027  FFE6   	movff	btemp+8,postinc1
 21642  01248A  0060  F02B  FFE6   	movff	btemp+9,postinc1
 21643                           
 21644                           ;stkvar	_n @ sp[(-58)+32]
 21645  012490  0E43               	movlw	low _dbuf
 21646  012492  6E0B               	movwf	(btemp+10)^0,c
 21647  012494  0E02               	movlw	high _dbuf
 21648  012496  6E0C               	movwf	(btemp+11)^0,c
 21649  012498  0EE6               	movlw	-26
 21650  01249A  50E3               	movf	plusw1,w,c
 21651  01249C  260B               	addwf	(btemp+10)^0,f,c
 21652  01249E  0EE7               	movlw	-25
 21653  0124A0  50E3               	movf	plusw1,w,c
 21654  0124A2  220C               	addwfc	(btemp+11)^0,f,c
 21655  0124A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21656  0124AA  0060  F033  FFE6   	movff	btemp+11,postinc1
 21657  0124B0  ECA9  F0D7         	call	_strcpy	;wreg free
 21658  0124B4  EF55  F08A         	goto	l13230
 21659  0124B8                     l2458:
 21660                           
 21661                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 21662  0124B8  0EC1               	movlw	193
 21663  0124BA  26E1               	addwf	fsr1l,f,c
 21664  0124BC  0EFF               	movlw	255
 21665  0124BE  22E2               	addwfc	fsr1h,f,c
 21666  0124C0  0012               	return		;funcret
 21667  0124C2                     __end_of_efgtoa:
 21668                           	opt callstack 0
 21669                           
 21670 ;; *************** function _tolower *****************
 21671 ;; Defined at:
 21672 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 21673 ;; Parameters:    Size  Location     Type
 21674 ;;  c               2  [STACK] int 
 21675 ;; Auto vars:     Size  Location     Type
 21676 ;;		None
 21677 ;; Return value:  Size  Location     Type
 21678 ;;                  2  [STACK] int 
 21679 ;; Registers used:
 21680 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 21681 ;; Tracked objects:
 21682 ;;		On entry : 0/0
 21683 ;;		On exit  : 0/0
 21684 ;;		Unchanged: 0/0
 21685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21690 ;;Total ram usage:        0 bytes
 21691 ;; Hardware stack levels used:    1
 21692 ;; Hardware stack levels required when called:   16
 21693 ;; This function calls:
 21694 ;;		_isupper
 21695 ;; This function is called by:
 21696 ;;		_efgtoa
 21697 ;;		_vfpfcnvrt
 21698 ;; This function uses a reentrant model
 21699 ;;
 21700                           
 21701                           	psect	text76
 21702  01BC8C                     __ptext76:
 21703                           	opt callstack 0
 21704  01BC8C                     _tolower:
 21705                           	opt callstack 0
 21706                           
 21707                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21708  01BC8C  52E6               	movf	postinc1,f,c
 21709  01BC8E  52E6               	movf	postinc1,f,c
 21710                           
 21711                           ;stkvar	_c @ sp[(-2)+-2]
 21712                           
 21713                           ;incstack = 0
 21714 ;; hardware stack exceeded
 21715  01BC90  0EFC               	movlw	-4
 21716  01BC92  50E3               	movf	plusw1,w,c
 21717  01BC94  0FBF               	addlw	191
 21718  01BC96  6E0B               	movwf	(btemp+10)^0,c
 21719  01BC98  0EFD               	movlw	-3
 21720  01BC9A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21721  01BCA0  0EFF               	movlw	255
 21722  01BCA2  220C               	addwfc	(btemp+11)^0,f,c
 21723  01BCA4  500C               	movf	(btemp+11)^0,w,c
 21724  01BCA6  E106               	bnz	u6570
 21725  01BCA8  0E1A               	movlw	26
 21726  01BCAA  5C0B               	subwf	(btemp+10)^0,w,c
 21727  01BCAC  B0D8               	btfsc	status,0,c
 21728  01BCAE  D002               	goto	u6570
 21729  01BCB0  0E01               	movlw	1
 21730  01BCB2  D001               	goto	u6580
 21731  01BCB4                     u6570:
 21732  01BCB4  0E00               	movlw	0
 21733  01BCB6                     u6580:
 21734  01BCB6  6E0B               	movwf	(btemp+10)^0,c
 21735  01BCB8  6A0C               	clrf	(btemp+11)^0,c
 21736                           
 21737                           ;stkvar	_tolower$6996 @ sp[(-2)+0]
 21738  01BCBA  0EFE               	movlw	-2
 21739  01BCBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21740  01BCC2  0EFF               	movlw	-1
 21741  01BCC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 21742                           
 21743                           ;stkvar	_tolower$6996 @ sp[(-2)+0]
 21744  01BCCA  0EFE               	movlw	-2
 21745  01BCCC  006F FF8C  F001    	movff	plusw1,btemp
 21746  01BCD2  0EFF               	movlw	-1
 21747  01BCD4  50E3               	movf	plusw1,w,c
 21748  01BCD6  1001               	iorwf	btemp^0,w,c
 21749  01BCD8  B4D8               	btfsc	status,2,c
 21750  01BCDA  D00D               	goto	l8774
 21751                           
 21752                           ;stkvar	_c @ sp[(-2)+-2]
 21753  01BCDC  0EFC               	movlw	-4
 21754  01BCDE  006F FF8C  F001    	movff	plusw1,btemp
 21755  01BCE4  0EFD               	movlw	-3
 21756  01BCE6  006F FF8C  F002    	movff	plusw1,btemp+1
 21757  01BCEC  0E20               	movlw	32
 21758  01BCEE  1201               	iorwf	btemp^0,f,c
 21759  01BCF0  0E00               	movlw	0
 21760  01BCF2  1202               	iorwf	(btemp+1)^0,f,c
 21761  01BCF4  D008               	goto	l3730
 21762  01BCF6                     l8774:
 21763                           
 21764                           ;stkvar	_c @ sp[(-2)+-2]
 21765  01BCF6  0EFC               	movlw	-4
 21766  01BCF8  006F FF8C  F001    	movff	plusw1,btemp
 21767  01BCFE  0EFD               	movlw	-3
 21768  01BD00  006F FF8C  F002    	movff	plusw1,btemp+1
 21769  01BD06                     l3730:
 21770                           
 21771                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21772  01BD06  52E5               	movf	postdec1,f,c
 21773  01BD08  52E5               	movf	postdec1,f,c
 21774  01BD0A  52E5               	movf	postdec1,f,c
 21775  01BD0C  52E5               	movf	postdec1,f,c
 21776  01BD0E  0012               	return		;funcret
 21777  01BD10                     __end_of_tolower:
 21778                           	opt callstack 0
 21779                           
 21780 ;; *************** function _isupper *****************
 21781 ;; Defined at:
 21782 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 21783 ;; Parameters:    Size  Location     Type
 21784 ;;  c               2  [STACK] int 
 21785 ;; Auto vars:     Size  Location     Type
 21786 ;;		None
 21787 ;; Return value:  Size  Location     Type
 21788 ;;                  2  [STACK] int 
 21789 ;; Registers used:
 21790 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21791 ;; Tracked objects:
 21792 ;;		On entry : 0/0
 21793 ;;		On exit  : 0/0
 21794 ;;		Unchanged: 0/0
 21795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21800 ;;Total ram usage:        0 bytes
 21801 ;; Hardware stack levels used:    1
 21802 ;; Hardware stack levels required when called:   15
 21803 ;; This function calls:
 21804 ;;		Nothing
 21805 ;; This function is called by:
 21806 ;;		_efgtoa
 21807 ;;		_xtoa
 21808 ;;		_vfpfcnvrt
 21809 ;;		_tolower
 21810 ;; This function uses a reentrant model
 21811 ;;
 21812                           
 21813                           	psect	text77
 21814  01CC32                     __ptext77:
 21815                           	opt callstack 0
 21816  01CC32                     _isupper:
 21817                           	opt callstack 0
 21818                           
 21819                           ;stkvar	_c @ sp[(0)+-2]
 21820                           
 21821                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21822                           ;incstack = 0
 21823 ;; hardware stack exceeded
 21824  01CC32  0EFE               	movlw	-2
 21825  01CC34  50E3               	movf	plusw1,w,c
 21826  01CC36  0FBF               	addlw	191
 21827  01CC38  6E0B               	movwf	(btemp+10)^0,c
 21828  01CC3A  0EFF               	movlw	-1
 21829  01CC3C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21830  01CC42  0EFF               	movlw	255
 21831  01CC44  220C               	addwfc	(btemp+11)^0,f,c
 21832  01CC46  500C               	movf	(btemp+11)^0,w,c
 21833  01CC48  E106               	bnz	u5920
 21834  01CC4A  0E1A               	movlw	26
 21835  01CC4C  5C0B               	subwf	(btemp+10)^0,w,c
 21836  01CC4E  B0D8               	btfsc	status,0,c
 21837  01CC50  D002               	goto	u5920
 21838  01CC52  0E01               	movlw	1
 21839  01CC54  D001               	goto	u5930
 21840  01CC56                     u5920:
 21841  01CC56  0E00               	movlw	0
 21842  01CC58                     u5930:
 21843  01CC58  6E01               	movwf	btemp^0,c
 21844  01CC5A  6A02               	clrf	(btemp+1)^0,c
 21845                           
 21846                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21847  01CC5C  52E5               	movf	postdec1,f,c
 21848  01CC5E  52E5               	movf	postdec1,f,c
 21849  01CC60  0012               	return		;funcret
 21850  01CC62                     __end_of_isupper:
 21851                           	opt callstack 0
 21852                           
 21853 ;; *************** function _strcpy *****************
 21854 ;; Defined at:
 21855 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 21856 ;; Parameters:    Size  Location     Type
 21857 ;;  dest            2  [STACK] PTR unsigned char 
 21858 ;;		 -> dbuf(80), 
 21859 ;;  src             2  [STACK] PTR const unsigned char 
 21860 ;;		 -> STR_87(4), STR_86(4), STR_83(4), STR_82(4), 
 21861 ;;		 -> dbuf(80), 
 21862 ;; Auto vars:     Size  Location     Type
 21863 ;;  d               2  [STACK] PTR unsigned char 
 21864 ;;		 -> dbuf(80), 
 21865 ;;  s               2  [STACK] PTR const unsigned char 
 21866 ;;		 -> STR_87(4), STR_86(4), STR_83(4), STR_82(4), 
 21867 ;;		 -> dbuf(80), 
 21868 ;; Return value:  Size  Location     Type
 21869 ;;                  2  [STACK] PTR unsigned char 
 21870 ;; Registers used:
 21871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 21872 ;; Tracked objects:
 21873 ;;		On entry : 0/0
 21874 ;;		On exit  : 0/0
 21875 ;;		Unchanged: 0/0
 21876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21881 ;;Total ram usage:        0 bytes
 21882 ;; Hardware stack levels used:    1
 21883 ;; Hardware stack levels required when called:   15
 21884 ;; This function calls:
 21885 ;;		Nothing
 21886 ;; This function is called by:
 21887 ;;		_efgtoa
 21888 ;; This function uses a reentrant model
 21889 ;;
 21890                           
 21891                           	psect	text78
 21892  01AF52                     __ptext78:
 21893                           	opt callstack 0
 21894  01AF52                     _strcpy:
 21895                           	opt callstack 0
 21896                           
 21897                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21898  01AF52  52E6               	movf	postinc1,f,c
 21899  01AF54  52E6               	movf	postinc1,f,c
 21900  01AF56  52E6               	movf	postinc1,f,c
 21901  01AF58  52E6               	movf	postinc1,f,c
 21902                           
 21903                           ;stkvar	_src @ sp[(-4)+-4]
 21904                           
 21905                           ;incstack = 0
 21906 ;; hardware stack exceeded
 21907  01AF5A  0EF8               	movlw	-8
 21908  01AF5C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21909  01AF62  0EF9               	movlw	-7
 21910  01AF64  006F FF8C  F00C    	movff	plusw1,btemp+11
 21911                           
 21912                           ;stkvar	_s @ sp[(-4)+2]
 21913  01AF6A  0EFF               	movlw	-1
 21914  01AF6C  0060  F033  FFE3   	movff	btemp+11,plusw1
 21915  01AF72  0EFE               	movlw	-2
 21916  01AF74  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21917                           
 21918                           ;stkvar	_dest @ sp[(-4)+-2]
 21919  01AF7A  0EFA               	movlw	-6
 21920  01AF7C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21921  01AF82  0EFB               	movlw	-5
 21922  01AF84  006F FF8C  F00C    	movff	plusw1,btemp+11
 21923                           
 21924                           ;stkvar	_d @ sp[(-4)+0]
 21925  01AF8A  0EFD               	movlw	-3
 21926  01AF8C  0060  F033  FFE3   	movff	btemp+11,plusw1
 21927  01AF92  0EFC               	movlw	-4
 21928  01AF94  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21929  01AF9A                     l13092:
 21930                           
 21931                           ;stkvar	_s @ sp[(-4)+2]
 21932  01AF9A  50E1               	movf	fsr1l,w,c
 21933  01AF9C  0FFE               	addlw	-2
 21934  01AF9E  6ED9               	movwf	fsr2l,c
 21935  01AFA0  50E2               	movf	fsr1h,w,c
 21936  01AFA2  6EDA               	movwf	fsr2h,c
 21937  01AFA4  0EFF               	movlw	255
 21938  01AFA6  22DA               	addwfc	fsr2h,f,c
 21939  01AFA8  006F FF7C  F00B    	movff	indf2,btemp+10
 21940  01AFAE  0E01               	movlw	1
 21941  01AFB0  26DE               	addwf	postinc2,f,c
 21942  01AFB2  006F FF7C  F00C    	movff	indf2,btemp+11
 21943  01AFB8  0E00               	movlw	0
 21944  01AFBA  22DD               	addwfc	postdec2,f,c
 21945  01AFBC  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 21946  01AFC2  0060  F033  FFF7   	movff	btemp+11,tblptrh
 21947  01AFC8  0E00               	movlw	low (__mediumconst shr (0+16))
 21948  01AFCA  6EF8               	movwf	tblptru,c
 21949                           
 21950                           ;stkvar	_d @ sp[(-4)+0]
 21951  01AFCC  50E1               	movf	fsr1l,w,c
 21952  01AFCE  0FFC               	addlw	-4
 21953  01AFD0  6ED9               	movwf	fsr2l,c
 21954  01AFD2  50E2               	movf	fsr1h,w,c
 21955  01AFD4  6EDA               	movwf	fsr2h,c
 21956  01AFD6  0EFF               	movlw	255
 21957  01AFD8  22DA               	addwfc	fsr2h,f,c
 21958  01AFDA  006F FF7C  F00B    	movff	indf2,btemp+10
 21959  01AFE0  0E01               	movlw	1
 21960  01AFE2  26DE               	addwf	postinc2,f,c
 21961  01AFE4  006F FF7C  F00C    	movff	indf2,btemp+11
 21962  01AFEA  0E00               	movlw	0
 21963  01AFEC  22DD               	addwfc	postdec2,f,c
 21964  01AFEE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 21965  01AFF4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 21966  01AFFA  0E1F               	movlw	(high __ramtop+-1)
 21967  01AFFC  64F7               	cpfsgt	tblptrh,c
 21968  01AFFE  D003               	bra	u11827
 21969  01B000  0008               	tblrd		*
 21970  01B002  50F5               	movf	tablat,w,c
 21971  01B004  D007               	bra	u11820
 21972  01B006                     u11827:
 21973  01B006  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21974  01B00C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21975  01B012  50EF               	movf	indf0,w,c
 21976  01B014                     u11820:
 21977  01B014  6EDF               	movwf	indf2,c
 21978  01B016  50DF               	movf	indf2,w,c
 21979  01B018  A4D8               	btfss	status,2,c
 21980  01B01A  D7BF               	goto	l13092
 21981                           
 21982                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 21983  01B01C  0EF8               	movlw	248
 21984  01B01E  26E1               	addwf	fsr1l,f,c
 21985  01B020  0EFF               	movlw	255
 21986  01B022  22E2               	addwfc	fsr1h,f,c
 21987  01B024  0012               	return		;funcret
 21988  01B026                     __end_of_strcpy:
 21989                           	opt callstack 0
 21990                           
 21991 ;; *************** function _floorf *****************
 21992 ;; Defined at:
 21993 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 21994 ;; Parameters:    Size  Location     Type
 21995 ;;  x               4  [STACK] float 
 21996 ;; Auto vars:     Size  Location     Type
 21997 ;;  u               4  [STACK] struct .
 21998 ;;  m               4  [STACK] unsigned long 
 21999 ;;  e               2  [STACK] int 
 22000 ;; Return value:  Size  Location     Type
 22001 ;;                  4  [STACK] float 
 22002 ;; Registers used:
 22003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 22004 ;; Tracked objects:
 22005 ;;		On entry : 0/0
 22006 ;;		On exit  : 0/0
 22007 ;;		Unchanged: 0/0
 22008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22013 ;;Total ram usage:        0 bytes
 22014 ;; Hardware stack levels used:    1
 22015 ;; Hardware stack levels required when called:   15
 22016 ;; This function calls:
 22017 ;;		Nothing
 22018 ;; This function is called by:
 22019 ;;		_efgtoa
 22020 ;; This function uses a reentrant model
 22021 ;;
 22022                           
 22023                           	psect	text79
 22024  016A36                     __ptext79:
 22025                           	opt callstack 0
 22026  016A36                     _floorf:
 22027                           	opt callstack 0
 22028                           
 22029                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 22030  016A36  0E0A               	movlw	10
 22031  016A38  26E1               	addwf	fsr1l,f,c
 22032  016A3A  0E00               	movlw	0
 22033  016A3C  22E2               	addwfc	fsr1h,f,c
 22034                           
 22035                           ;incstack = 0
 22036 ;; hardware stack exceeded
 22037  016A3E  0060  F7A8  F009   	movff	floorf@F524,btemp+8
 22038  016A44  0060  F7AC  F00A   	movff	floorf@F524+1,btemp+9
 22039  016A4A  0060  F7B0  F00B   	movff	floorf@F524+2,btemp+10
 22040  016A50  0060  F7B4  F00C   	movff	floorf@F524+3,btemp+11
 22041                           
 22042                           ;stkvar	_u @ sp[(-10)+0]
 22043  016A56  0EF6               	movlw	-10
 22044  016A58  0060  F027  FFE3   	movff	btemp+8,plusw1
 22045  016A5E  0EF7               	movlw	-9
 22046  016A60  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22047  016A66  0EF8               	movlw	-8
 22048  016A68  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22049  016A6E  0EF9               	movlw	-7
 22050  016A70  0060  F033  FFE3   	movff	btemp+11,plusw1
 22051                           
 22052                           ;stkvar	_x @ sp[(-10)+-4]
 22053  016A76  0EF2               	movlw	-14
 22054  016A78  006F FF8C  F009    	movff	plusw1,btemp+8
 22055  016A7E  0EF3               	movlw	-13
 22056  016A80  006F FF8C  F00A    	movff	plusw1,btemp+9
 22057  016A86  0EF4               	movlw	-12
 22058  016A88  006F FF8C  F00B    	movff	plusw1,btemp+10
 22059  016A8E  0EF5               	movlw	-11
 22060  016A90  006F FF8C  F00C    	movff	plusw1,btemp+11
 22061                           
 22062                           ;stkvar	_u @ sp[(-10)+0]
 22063  016A96  0EF6               	movlw	-10
 22064  016A98  0060  F027  FFE3   	movff	btemp+8,plusw1
 22065  016A9E  0EF7               	movlw	-9
 22066  016AA0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22067  016AA6  0EF8               	movlw	-8
 22068  016AA8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22069  016AAE  0EF9               	movlw	-7
 22070  016AB0  0060  F033  FFE3   	movff	btemp+11,plusw1
 22071  016AB6  0E81               	movlw	129
 22072  016AB8  6E0B               	movwf	(btemp+10)^0,c
 22073  016ABA  0EFF               	movlw	255
 22074  016ABC  6E0C               	movwf	(btemp+11)^0,c
 22075                           
 22076                           ;stkvar	_u @ sp[(-10)+0]
 22077  016ABE  0EF6               	movlw	-10
 22078  016AC0  006F FF8C  F005    	movff	plusw1,btemp+4
 22079  016AC6  0EF7               	movlw	-9
 22080  016AC8  006F FF8C  F006    	movff	plusw1,btemp+5
 22081  016ACE  0EF8               	movlw	-8
 22082  016AD0  006F FF8C  F007    	movff	plusw1,btemp+6
 22083  016AD6  0EF9               	movlw	-7
 22084  016AD8  006F FF8C  F008    	movff	plusw1,btemp+7
 22085  016ADE  0E18               	movlw	24
 22086  016AE0  D005               	goto	u6600
 22087  016AE2                     u6605:
 22088  016AE2  90D8               	bcf	status,0,c
 22089  016AE4  3208               	rrcf	(btemp+7)^0,f,c
 22090  016AE6  3207               	rrcf	(btemp+6)^0,f,c
 22091  016AE8  3206               	rrcf	(btemp+5)^0,f,c
 22092  016AEA  3205               	rrcf	(btemp+4)^0,f,c
 22093  016AEC                     u6600:
 22094  016AEC  2EE8               	decfsz	wreg,f,c
 22095  016AEE  D7F9               	goto	u6605
 22096  016AF0  0060  F014  F009   	movff	btemp+4,btemp+8
 22097  016AF6  0060  F018  F00A   	movff	btemp+5,btemp+9
 22098  016AFC  0EFF               	movlw	255
 22099  016AFE  1609               	andwf	(btemp+8)^0,f,c
 22100  016B00  0E00               	movlw	0
 22101  016B02  160A               	andwf	(btemp+9)^0,f,c
 22102  016B04  500B               	movf	(btemp+10)^0,w,c
 22103  016B06  2609               	addwf	(btemp+8)^0,f,c
 22104  016B08  500C               	movf	(btemp+11)^0,w,c
 22105  016B0A  220A               	addwfc	(btemp+9)^0,f,c
 22106                           
 22107                           ;stkvar	_e @ sp[(-10)+8]
 22108  016B0C  0EFE               	movlw	-2
 22109  016B0E  0060  F027  FFE3   	movff	btemp+8,plusw1
 22110  016B14  0EFF               	movlw	-1
 22111  016B16  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22112                           
 22113                           ;stkvar	_e @ sp[(-10)+8]
 22114  016B1C  0EFF               	movlw	-1
 22115  016B1E  BEE3               	btfsc	plusw1,7,c
 22116  016B20  D019               	goto	l8788
 22117  016B22  0EFF               	movlw	-1
 22118  016B24  50E3               	movf	plusw1,w,c
 22119  016B26  E108               	bnz	u6610
 22120  016B28  0EFE               	movlw	-2
 22121  016B2A  006F FF8C  F001    	movff	plusw1,btemp
 22122  016B30  0E17               	movlw	23
 22123  016B32  5E01               	subwf	btemp^0,f,c
 22124  016B34  A0D8               	btfss	status,0,c
 22125  016B36  D00E               	goto	l8788
 22126  016B38                     u6610:
 22127                           
 22128                           ;stkvar	_x @ sp[(-10)+-4]
 22129  016B38  0EF2               	movlw	-14
 22130  016B3A  006F FF8C  F001    	movff	plusw1,btemp
 22131  016B40  0EF3               	movlw	-13
 22132  016B42  006F FF8C  F002    	movff	plusw1,btemp+1
 22133  016B48  0EF4               	movlw	-12
 22134  016B4A  006F FF8C  F003    	movff	plusw1,btemp+2
 22135  016B50  0EF5               	movlw	-11
 22136  016B52  D11F               	goto	L25
 22137  016B54                     l8788:
 22138                           
 22139                           ;stkvar	_e @ sp[(-10)+8]
 22140  016B54  0EFF               	movlw	-1
 22141  016B56  BEE3               	btfsc	plusw1,7,c
 22142  016B58  D0B4               	goto	l8804
 22143                           
 22144                           ;stkvar	_e @ sp[(-10)+8]
 22145  016B5A  0EFE               	movlw	-2
 22146  016B5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22147  016B62  0EFF               	movlw	255
 22148  016B64  6E05               	movwf	(btemp+4)^0,c
 22149  016B66  0EFF               	movlw	255
 22150  016B68  6E06               	movwf	(btemp+5)^0,c
 22151  016B6A  0E7F               	movlw	127
 22152  016B6C  6E07               	movwf	(btemp+6)^0,c
 22153  016B6E  0E00               	movlw	0
 22154  016B70  6E08               	movwf	(btemp+7)^0,c
 22155  016B72                     u6635:
 22156  016B72  660C               	tstfsz	(btemp+11)^0,c
 22157  016B74  D001               	goto	u6636
 22158  016B76  D007               	goto	u6637
 22159  016B78                     u6636:
 22160  016B78  3408               	rlcf	(btemp+7)^0,w,c
 22161  016B7A  3208               	rrcf	(btemp+7)^0,f,c
 22162  016B7C  3207               	rrcf	(btemp+6)^0,f,c
 22163  016B7E  3206               	rrcf	(btemp+5)^0,f,c
 22164  016B80  3205               	rrcf	(btemp+4)^0,f,c
 22165  016B82  2E0C               	decfsz	(btemp+11)^0,f,c
 22166  016B84  D7F6               	goto	u6635
 22167  016B86                     u6637:
 22168                           
 22169                           ;stkvar	_m @ sp[(-10)+4]
 22170  016B86  0EFA               	movlw	-6
 22171  016B88  0060  F017  FFE3   	movff	btemp+4,plusw1
 22172  016B8E  0EFB               	movlw	-5
 22173  016B90  0060  F01B  FFE3   	movff	btemp+5,plusw1
 22174  016B96  0EFC               	movlw	-4
 22175  016B98  0060  F01F  FFE3   	movff	btemp+6,plusw1
 22176  016B9E  0EFD               	movlw	-3
 22177  016BA0  0060  F023  FFE3   	movff	btemp+7,plusw1
 22178                           
 22179                           ;stkvar	_m @ sp[(-10)+4]
 22180                           ;stkvar	_u @ sp[(-10)+0]
 22181  016BA6  0EF6               	movlw	-10
 22182  016BA8  006F FF8C  F009    	movff	plusw1,btemp+8
 22183  016BAE  0EF7               	movlw	-9
 22184  016BB0  006F FF8C  F00A    	movff	plusw1,btemp+9
 22185  016BB6  0EF8               	movlw	-8
 22186  016BB8  006F FF8C  F00B    	movff	plusw1,btemp+10
 22187  016BBE  0EF9               	movlw	-7
 22188  016BC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22189  016BC6  0EFA               	movlw	-6
 22190  016BC8  50E3               	movf	plusw1,w,c
 22191  016BCA  1609               	andwf	(btemp+8)^0,f,c
 22192  016BCC  0EFB               	movlw	-5
 22193  016BCE  50E3               	movf	plusw1,w,c
 22194  016BD0  160A               	andwf	(btemp+9)^0,f,c
 22195  016BD2  0EFC               	movlw	-4
 22196  016BD4  50E3               	movf	plusw1,w,c
 22197  016BD6  160B               	andwf	(btemp+10)^0,f,c
 22198  016BD8  0EFD               	movlw	-3
 22199  016BDA  50E3               	movf	plusw1,w,c
 22200  016BDC  160C               	andwf	(btemp+11)^0,f,c
 22201  016BDE  5009               	movf	(btemp+8)^0,w,c
 22202  016BE0  100A               	iorwf	(btemp+9)^0,w,c
 22203  016BE2  100B               	iorwf	(btemp+10)^0,w,c
 22204  016BE4  100C               	iorwf	(btemp+11)^0,w,c
 22205  016BE6  B4D8               	btfsc	status,2,c
 22206  016BE8  D7A7               	goto	u6610
 22207                           
 22208                           ;stkvar	_u @ sp[(-10)+0]
 22209  016BEA  0EF6               	movlw	-10
 22210  016BEC  006F FF8C  F009    	movff	plusw1,btemp+8
 22211  016BF2  0EF7               	movlw	-9
 22212  016BF4  006F FF8C  F00A    	movff	plusw1,btemp+9
 22213  016BFA  0EF8               	movlw	-8
 22214  016BFC  006F FF8C  F00B    	movff	plusw1,btemp+10
 22215  016C02  0EF9               	movlw	-7
 22216  016C04  006F FF8C  F00C    	movff	plusw1,btemp+11
 22217  016C0A  0E20               	movlw	32
 22218  016C0C  D005               	goto	u6650
 22219  016C0E                     u6655:
 22220  016C0E  90D8               	bcf	status,0,c
 22221  016C10  320C               	rrcf	(btemp+11)^0,f,c
 22222  016C12  320B               	rrcf	(btemp+10)^0,f,c
 22223  016C14  320A               	rrcf	(btemp+9)^0,f,c
 22224  016C16  3209               	rrcf	(btemp+8)^0,f,c
 22225  016C18                     u6650:
 22226  016C18  2EE8               	decfsz	wreg,f,c
 22227  016C1A  D7F9               	goto	u6655
 22228  016C1C  5009               	movf	(btemp+8)^0,w,c
 22229  016C1E  B4D8               	btfsc	status,2,c
 22230  016C20  D028               	goto	l8802
 22231                           
 22232                           ;stkvar	_m @ sp[(-10)+4]
 22233                           ;stkvar	_u @ sp[(-10)+0]
 22234  016C22  0EF6               	movlw	-10
 22235  016C24  50E3               	movf	plusw1,w,c
 22236  016C26  6E01               	movwf	btemp^0,c
 22237  016C28  0EFA               	movlw	-6
 22238  016C2A  50E3               	movf	plusw1,w,c
 22239  016C2C  2601               	addwf	btemp^0,f,c
 22240  016C2E  0EF6               	movlw	-10
 22241  016C30  0060  F007  FFE3   	movff	btemp,plusw1
 22242  016C36  0EF7               	movlw	-9
 22243  016C38  50E3               	movf	plusw1,w,c
 22244  016C3A  6E01               	movwf	btemp^0,c
 22245  016C3C  0EFB               	movlw	-5
 22246  016C3E  50E3               	movf	plusw1,w,c
 22247  016C40  2201               	addwfc	btemp^0,f,c
 22248  016C42  0EF7               	movlw	-9
 22249  016C44  0060  F007  FFE3   	movff	btemp,plusw1
 22250  016C4A  0EF8               	movlw	-8
 22251  016C4C  50E3               	movf	plusw1,w,c
 22252  016C4E  6E01               	movwf	btemp^0,c
 22253  016C50  0EFC               	movlw	-4
 22254  016C52  50E3               	movf	plusw1,w,c
 22255  016C54  2201               	addwfc	btemp^0,f,c
 22256  016C56  0EF8               	movlw	-8
 22257  016C58  0060  F007  FFE3   	movff	btemp,plusw1
 22258  016C5E  0EF9               	movlw	-7
 22259  016C60  50E3               	movf	plusw1,w,c
 22260  016C62  6E01               	movwf	btemp^0,c
 22261  016C64  0EFD               	movlw	-3
 22262  016C66  50E3               	movf	plusw1,w,c
 22263  016C68  2201               	addwfc	btemp^0,f,c
 22264  016C6A  0EF9               	movlw	-7
 22265  016C6C  0060  F007  FFE3   	movff	btemp,plusw1
 22266  016C72                     l8802:
 22267                           
 22268                           ;stkvar	_m @ sp[(-10)+4]
 22269  016C72  0EFA               	movlw	-6
 22270  016C74  006F FF8C  F009    	movff	plusw1,btemp+8
 22271  016C7A  0EFB               	movlw	-5
 22272  016C7C  006F FF8C  F00A    	movff	plusw1,btemp+9
 22273  016C82  0EFC               	movlw	-4
 22274  016C84  006F FF8C  F00B    	movff	plusw1,btemp+10
 22275  016C8A  0EFD               	movlw	-3
 22276  016C8C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22277  016C92  1C09               	comf	(btemp+8)^0,w,c
 22278  016C94  6E05               	movwf	(btemp+4)^0,c
 22279  016C96  1C0A               	comf	(btemp+9)^0,w,c
 22280  016C98  6E06               	movwf	(btemp+5)^0,c
 22281  016C9A  1C0B               	comf	(btemp+10)^0,w,c
 22282  016C9C  6E07               	movwf	(btemp+6)^0,c
 22283  016C9E  1C0C               	comf	(btemp+11)^0,w,c
 22284  016CA0  6E08               	movwf	(btemp+7)^0,c
 22285                           
 22286                           ;stkvar	_u @ sp[(-10)+0]
 22287  016CA2  50E1               	movf	fsr1l,w,c
 22288  016CA4  0FF6               	addlw	-10
 22289  016CA6  6ED9               	movwf	fsr2l,c
 22290  016CA8  50E2               	movf	fsr1h,w,c
 22291  016CAA  6EDA               	movwf	fsr2h,c
 22292  016CAC  0EFF               	movlw	255
 22293  016CAE  22DA               	addwfc	fsr2h,f,c
 22294  016CB0  5005               	movf	(btemp+4)^0,w,c
 22295  016CB2  16DE               	andwf	postinc2,f,c
 22296  016CB4  5006               	movf	(btemp+5)^0,w,c
 22297  016CB6  16DE               	andwf	postinc2,f,c
 22298  016CB8  5007               	movf	(btemp+6)^0,w,c
 22299  016CBA  16DE               	andwf	postinc2,f,c
 22300  016CBC  5008               	movf	(btemp+7)^0,w,c
 22301  016CBE  16DE               	andwf	postinc2,f,c
 22302  016CC0  D05B               	goto	l8812
 22303  016CC2                     l8804:
 22304                           
 22305                           ;stkvar	_u @ sp[(-10)+0]
 22306  016CC2  0EF6               	movlw	-10
 22307  016CC4  006F FF8C  F009    	movff	plusw1,btemp+8
 22308  016CCA  0EF7               	movlw	-9
 22309  016CCC  006F FF8C  F00A    	movff	plusw1,btemp+9
 22310  016CD2  0EF8               	movlw	-8
 22311  016CD4  006F FF8C  F00B    	movff	plusw1,btemp+10
 22312  016CDA  0EF9               	movlw	-7
 22313  016CDC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22314  016CE2  0E20               	movlw	32
 22315  016CE4  D005               	goto	u6670
 22316  016CE6                     u6675:
 22317  016CE6  90D8               	bcf	status,0,c
 22318  016CE8  320C               	rrcf	(btemp+11)^0,f,c
 22319  016CEA  320B               	rrcf	(btemp+10)^0,f,c
 22320  016CEC  320A               	rrcf	(btemp+9)^0,f,c
 22321  016CEE  3209               	rrcf	(btemp+8)^0,f,c
 22322  016CF0                     u6670:
 22323  016CF0  2EE8               	decfsz	wreg,f,c
 22324  016CF2  D7F9               	goto	u6675
 22325  016CF4  6609               	tstfsz	(btemp+8)^0,c
 22326  016CF6  D009               	goto	l8808
 22327                           
 22328                           ;stkvar	_u @ sp[(-10)+0]
 22329  016CF8  0EF6               	movlw	-10
 22330  016CFA  6AE3               	clrf	plusw1,c
 22331  016CFC  0EF7               	movlw	-9
 22332  016CFE  6AE3               	clrf	plusw1,c
 22333  016D00  0EF8               	movlw	-8
 22334  016D02  6AE3               	clrf	plusw1,c
 22335  016D04  0EF9               	movlw	-7
 22336  016D06  6AE3               	clrf	plusw1,c
 22337  016D08  D037               	goto	l8812
 22338  016D0A                     l8808:
 22339                           
 22340                           ;stkvar	_u @ sp[(-10)+0]
 22341  016D0A  0EF6               	movlw	-10
 22342  016D0C  006F FF8C  F009    	movff	plusw1,btemp+8
 22343  016D12  0EF7               	movlw	-9
 22344  016D14  006F FF8C  F00A    	movff	plusw1,btemp+9
 22345  016D1A  0EF8               	movlw	-8
 22346  016D1C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22347  016D22  0EF9               	movlw	-7
 22348  016D24  006F FF8C  F00C    	movff	plusw1,btemp+11
 22349  016D2A  90D8               	bcf	status,0,c
 22350  016D2C  3409               	rlcf	(btemp+8)^0,w,c
 22351  016D2E  6E05               	movwf	(btemp+4)^0,c
 22352  016D30  340A               	rlcf	(btemp+9)^0,w,c
 22353  016D32  6E06               	movwf	(btemp+5)^0,c
 22354  016D34  340B               	rlcf	(btemp+10)^0,w,c
 22355  016D36  6E07               	movwf	(btemp+6)^0,c
 22356  016D38  340C               	rlcf	(btemp+11)^0,w,c
 22357  016D3A  6E08               	movwf	(btemp+7)^0,c
 22358  016D3C  5005               	movf	(btemp+4)^0,w,c
 22359  016D3E  1006               	iorwf	(btemp+5)^0,w,c
 22360  016D40  1007               	iorwf	(btemp+6)^0,w,c
 22361  016D42  1008               	iorwf	(btemp+7)^0,w,c
 22362  016D44  B4D8               	btfsc	status,2,c
 22363  016D46  D018               	goto	l8812
 22364  016D48  0E00               	movlw	0
 22365  016D4A  6E09               	movwf	(btemp+8)^0,c
 22366  016D4C  0E00               	movlw	0
 22367  016D4E  6E0A               	movwf	(btemp+9)^0,c
 22368  016D50  0E80               	movlw	128
 22369  016D52  6E0B               	movwf	(btemp+10)^0,c
 22370  016D54  0EBF               	movlw	191
 22371  016D56  6E0C               	movwf	(btemp+11)^0,c
 22372                           
 22373                           ;stkvar	_u @ sp[(-10)+0]
 22374  016D58  0EF6               	movlw	-10
 22375  016D5A  0060  F027  FFE3   	movff	btemp+8,plusw1
 22376  016D60  0EF7               	movlw	-9
 22377  016D62  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22378  016D68  0EF8               	movlw	-8
 22379  016D6A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22380  016D70  0EF9               	movlw	-7
 22381  016D72  0060  F033  FFE3   	movff	btemp+11,plusw1
 22382  016D78                     l8812:
 22383                           
 22384                           ;stkvar	_u @ sp[(-10)+0]
 22385  016D78  0EF6               	movlw	-10
 22386  016D7A  006F FF8C  F001    	movff	plusw1,btemp
 22387  016D80  0EF7               	movlw	-9
 22388  016D82  006F FF8C  F002    	movff	plusw1,btemp+1
 22389  016D88  0EF8               	movlw	-8
 22390  016D8A  006F FF8C  F003    	movff	plusw1,btemp+2
 22391  016D90  0EF9               	movlw	-7
 22392  016D92                     L25:
 22393  016D92  006F FF8C  F004    	movff	plusw1,btemp+3
 22394                           
 22395                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 22396  016D98  0EF2               	movlw	242
 22397  016D9A  26E1               	addwf	fsr1l,f,c
 22398  016D9C  0EFF               	movlw	255
 22399  016D9E  22E2               	addwfc	fsr1h,f,c
 22400  016DA0  0012               	return		;funcret
 22401  016DA2                     __end_of_floorf:
 22402                           	opt callstack 0
 22403                           
 22404 ;; *************** function ___fpclassifyf *****************
 22405 ;; Defined at:
 22406 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 22407 ;; Parameters:    Size  Location     Type
 22408 ;;  x               4  [STACK] float 
 22409 ;; Auto vars:     Size  Location     Type
 22410 ;;  u               4  [STACK] struct .
 22411 ;;  e               2  [STACK] int 
 22412 ;; Return value:  Size  Location     Type
 22413 ;;                  2  [STACK] int 
 22414 ;; Registers used:
 22415 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 22416 ;; Tracked objects:
 22417 ;;		On entry : 0/0
 22418 ;;		On exit  : 0/0
 22419 ;;		Unchanged: 0/0
 22420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22425 ;;Total ram usage:        0 bytes
 22426 ;; Hardware stack levels used:    1
 22427 ;; Hardware stack levels required when called:   15
 22428 ;; This function calls:
 22429 ;;		Nothing
 22430 ;; This function is called by:
 22431 ;;		_efgtoa
 22432 ;; This function uses a reentrant model
 22433 ;;
 22434                           
 22435                           	psect	text80
 22436  01937A                     __ptext80:
 22437                           	opt callstack 0
 22438  01937A                     ___fpclassifyf:
 22439                           	opt callstack 0
 22440                           
 22441                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22442  01937A  0E06               	movlw	6
 22443  01937C  26E1               	addwf	fsr1l,f,c
 22444  01937E  0E00               	movlw	0
 22445  019380  22E2               	addwfc	fsr1h,f,c
 22446                           
 22447                           ;incstack = 0
 22448 ;; hardware stack exceeded
 22449  019382  0060  F180  F009   	movff	___fpclassifyf@F463,btemp+8
 22450  019388  0060  F184  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 22451  01938E  0060  F188  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 22452  019394  0060  F18C  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 22453                           
 22454                           ;stkvar	_u @ sp[(-6)+0]
 22455  01939A  0EFA               	movlw	-6
 22456  01939C  0060  F027  FFE3   	movff	btemp+8,plusw1
 22457  0193A2  0EFB               	movlw	-5
 22458  0193A4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22459  0193AA  0EFC               	movlw	-4
 22460  0193AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22461  0193B2  0EFD               	movlw	-3
 22462  0193B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 22463                           
 22464                           ;stkvar	_x @ sp[(-6)+-4]
 22465  0193BA  0EF6               	movlw	-10
 22466  0193BC  006F FF8C  F009    	movff	plusw1,btemp+8
 22467  0193C2  0EF7               	movlw	-9
 22468  0193C4  006F FF8C  F00A    	movff	plusw1,btemp+9
 22469  0193CA  0EF8               	movlw	-8
 22470  0193CC  006F FF8C  F00B    	movff	plusw1,btemp+10
 22471  0193D2  0EF9               	movlw	-7
 22472  0193D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22473                           
 22474                           ;stkvar	_u @ sp[(-6)+0]
 22475  0193DA  0EFA               	movlw	-6
 22476  0193DC  0060  F027  FFE3   	movff	btemp+8,plusw1
 22477  0193E2  0EFB               	movlw	-5
 22478  0193E4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22479  0193EA  0EFC               	movlw	-4
 22480  0193EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22481  0193F2  0EFD               	movlw	-3
 22482  0193F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 22483                           
 22484                           ;stkvar	_u @ sp[(-6)+0]
 22485  0193FA  0EFA               	movlw	-6
 22486  0193FC  006F FF8C  F009    	movff	plusw1,btemp+8
 22487  019402  0EFB               	movlw	-5
 22488  019404  006F FF8C  F00A    	movff	plusw1,btemp+9
 22489  01940A  0EFC               	movlw	-4
 22490  01940C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22491  019412  0EFD               	movlw	-3
 22492  019414  006F FF8C  F00C    	movff	plusw1,btemp+11
 22493  01941A  0E18               	movlw	24
 22494  01941C  D005               	goto	u6480
 22495  01941E                     u6485:
 22496  01941E  90D8               	bcf	status,0,c
 22497  019420  320C               	rrcf	(btemp+11)^0,f,c
 22498  019422  320B               	rrcf	(btemp+10)^0,f,c
 22499  019424  320A               	rrcf	(btemp+9)^0,f,c
 22500  019426  3209               	rrcf	(btemp+8)^0,f,c
 22501  019428                     u6480:
 22502  019428  2EE8               	decfsz	wreg,f,c
 22503  01942A  D7F9               	goto	u6485
 22504  01942C  0060  F024  F007   	movff	btemp+8,btemp+6
 22505  019432  0060  F028  F008   	movff	btemp+9,btemp+7
 22506  019438  0EFF               	movlw	255
 22507  01943A  1607               	andwf	(btemp+6)^0,f,c
 22508  01943C  0E00               	movlw	0
 22509  01943E  1608               	andwf	(btemp+7)^0,f,c
 22510                           
 22511                           ;stkvar	_e @ sp[(-6)+4]
 22512  019440  0EFE               	movlw	-2
 22513  019442  0060  F01F  FFE3   	movff	btemp+6,plusw1
 22514  019448  0EFF               	movlw	-1
 22515  01944A  0060  F023  FFE3   	movff	btemp+7,plusw1
 22516                           
 22517                           ;stkvar	_e @ sp[(-6)+4]
 22518  019450  0EFE               	movlw	-2
 22519  019452  006F FF8C  F001    	movff	plusw1,btemp
 22520  019458  0EFF               	movlw	-1
 22521  01945A  50E3               	movf	plusw1,w,c
 22522  01945C  1001               	iorwf	btemp^0,w,c
 22523  01945E  A4D8               	btfss	status,2,c
 22524  019460  D023               	goto	l8750
 22525                           
 22526                           ;stkvar	_u @ sp[(-6)+0]
 22527  019462  0EFA               	movlw	-6
 22528  019464  006F FF8C  F009    	movff	plusw1,btemp+8
 22529  01946A  0EFB               	movlw	-5
 22530  01946C  006F FF8C  F00A    	movff	plusw1,btemp+9
 22531  019472  0EFC               	movlw	-4
 22532  019474  006F FF8C  F00B    	movff	plusw1,btemp+10
 22533  01947A  0EFD               	movlw	-3
 22534  01947C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22535  019482  90D8               	bcf	status,0,c
 22536  019484  3409               	rlcf	(btemp+8)^0,w,c
 22537  019486  6E05               	movwf	(btemp+4)^0,c
 22538  019488  340A               	rlcf	(btemp+9)^0,w,c
 22539  01948A  6E06               	movwf	(btemp+5)^0,c
 22540  01948C  340B               	rlcf	(btemp+10)^0,w,c
 22541  01948E  6E07               	movwf	(btemp+6)^0,c
 22542  019490  340C               	rlcf	(btemp+11)^0,w,c
 22543  019492  6E08               	movwf	(btemp+7)^0,c
 22544  019494  5005               	movf	(btemp+4)^0,w,c
 22545  019496  1006               	iorwf	(btemp+5)^0,w,c
 22546  019498  1007               	iorwf	(btemp+6)^0,w,c
 22547  01949A  1008               	iorwf	(btemp+7)^0,w,c
 22548  01949C  A4D8               	btfss	status,2,c
 22549  01949E  D002               	goto	l8746
 22550  0194A0  0E02               	movlw	2
 22551  0194A2  D02E               	goto	L26
 22552  0194A4                     l8746:
 22553  0194A4  0E03               	movlw	3
 22554  0194A6  D02C               	goto	L26
 22555  0194A8                     l8750:
 22556                           
 22557                           ;stkvar	_e @ sp[(-6)+4]
 22558  0194A8  0EFE               	movlw	-2
 22559  0194AA  28E3               	incf	plusw1,w,c
 22560  0194AC  E128               	bnz	l8756
 22561  0194AE  0EFF               	movlw	-1
 22562  0194B0  50E3               	movf	plusw1,w,c
 22563  0194B2  A4D8               	btfss	status,2,c
 22564  0194B4  D024               	goto	l8756
 22565                           
 22566                           ;stkvar	_u @ sp[(-6)+0]
 22567  0194B6  0EFA               	movlw	-6
 22568  0194B8  006F FF8C  F009    	movff	plusw1,btemp+8
 22569  0194BE  0EFB               	movlw	-5
 22570  0194C0  006F FF8C  F00A    	movff	plusw1,btemp+9
 22571  0194C6  0EFC               	movlw	-4
 22572  0194C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 22573  0194CE  0EFD               	movlw	-3
 22574  0194D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22575  0194D6  0E09               	movlw	9
 22576  0194D8                     u6525:
 22577  0194D8  90D8               	bcf	status,0,c
 22578  0194DA  3609               	rlcf	(btemp+8)^0,f,c
 22579  0194DC  360A               	rlcf	(btemp+9)^0,f,c
 22580  0194DE  360B               	rlcf	(btemp+10)^0,f,c
 22581  0194E0  360C               	rlcf	(btemp+11)^0,f,c
 22582  0194E2  2EE8               	decfsz	wreg,f,c
 22583  0194E4  D7F9               	goto	u6525
 22584  0194E6  5009               	movf	(btemp+8)^0,w,c
 22585  0194E8  100A               	iorwf	(btemp+9)^0,w,c
 22586  0194EA  100B               	iorwf	(btemp+10)^0,w,c
 22587  0194EC  100C               	iorwf	(btemp+11)^0,w,c
 22588  0194EE  A4D8               	btfss	status,2,c
 22589  0194F0  D002               	goto	u6530
 22590  0194F2  0E01               	movlw	1
 22591  0194F4  D001               	goto	u6540
 22592  0194F6                     u6530:
 22593  0194F6  0E00               	movlw	0
 22594  0194F8                     u6540:
 22595  0194F8  6E01               	movwf	btemp^0,c
 22596  0194FA  6A02               	clrf	(btemp+1)^0,c
 22597  0194FC  D004               	goto	l3340
 22598  0194FE                     l8756:
 22599  0194FE  0E04               	movlw	4
 22600  019500                     L26:
 22601  019500  6E01               	movwf	btemp^0,c
 22602  019502  0E00               	movlw	0
 22603  019504  6E02               	movwf	(btemp+1)^0,c
 22604  019506                     l3340:
 22605                           
 22606                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 22607  019506  0EF6               	movlw	246
 22608  019508  26E1               	addwf	fsr1l,f,c
 22609  01950A  0EFF               	movlw	255
 22610  01950C  22E2               	addwfc	fsr1h,f,c
 22611  01950E  0012               	return		;funcret
 22612  019510                     __end_of___fpclassifyf:
 22613                           	opt callstack 0
 22614                           
 22615 ;; *************** function ___fltol *****************
 22616 ;; Defined at:
 22617 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 22618 ;; Parameters:    Size  Location     Type
 22619 ;;  f1              4  [STACK] int 
 22620 ;; Auto vars:     Size  Location     Type
 22621 ;;  exp1            1  [STACK] unsigned char 
 22622 ;;  sign1           1  [STACK] unsigned char 
 22623 ;; Return value:  Size  Location     Type
 22624 ;;                  4  [STACK] long 
 22625 ;; Registers used:
 22626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 22627 ;; Tracked objects:
 22628 ;;		On entry : 0/0
 22629 ;;		On exit  : 0/0
 22630 ;;		Unchanged: 0/0
 22631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22636 ;;Total ram usage:        0 bytes
 22637 ;; Hardware stack levels used:    1
 22638 ;; Hardware stack levels required when called:   15
 22639 ;; This function calls:
 22640 ;;		Nothing
 22641 ;; This function is called by:
 22642 ;;		_main
 22643 ;;		_convert_dac_raw
 22644 ;;		_calc_bsoc
 22645 ;;		_init_bsoc
 22646 ;;		_efgtoa
 22647 ;; This function uses a reentrant model
 22648 ;;
 22649                           
 22650                           	psect	text81
 22651  019988                     __ptext81:
 22652                           	opt callstack 0
 22653  019988                     ___fltol:
 22654                           	opt callstack 0
 22655                           
 22656                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22657  019988  52E6               	movf	postinc1,f,c
 22658  01998A  52E6               	movf	postinc1,f,c
 22659                           
 22660                           ;stkvar	_f1 @ sp[(-2)+-4]
 22661                           
 22662                           ;incstack = 0
 22663 ;; hardware stack exceeded
 22664  01998C  0EFA               	movlw	-6
 22665  01998E  006F FF8C  F009    	movff	plusw1,btemp+8
 22666  019994  0EFB               	movlw	-5
 22667  019996  006F FF8C  F00A    	movff	plusw1,btemp+9
 22668  01999C  0EFC               	movlw	-4
 22669  01999E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22670  0199A4  0EFD               	movlw	-3
 22671  0199A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 22672  0199AC  0E18               	movlw	24
 22673  0199AE  D005               	goto	u7690
 22674  0199B0                     u7695:
 22675  0199B0  90D8               	bcf	status,0,c
 22676  0199B2  320C               	rrcf	(btemp+11)^0,f,c
 22677  0199B4  320B               	rrcf	(btemp+10)^0,f,c
 22678  0199B6  320A               	rrcf	(btemp+9)^0,f,c
 22679  0199B8  3209               	rrcf	(btemp+8)^0,f,c
 22680  0199BA                     u7690:
 22681  0199BA  2EE8               	decfsz	wreg,f,c
 22682  0199BC  D7F9               	goto	u7695
 22683                           
 22684                           ;stkvar	_exp1 @ sp[(-2)+0]
 22685  0199BE  0EFE               	movlw	-2
 22686  0199C0  0060  F027  FFE3   	movff	btemp+8,plusw1
 22687  0199C6  0EFE               	movlw	-2
 22688  0199C8  50E3               	movf	plusw1,w,c
 22689  0199CA  A4D8               	btfss	status,2,c
 22690  0199CC  D006               	goto	l9376
 22691  0199CE                     u7700:
 22692  0199CE  0E00               	movlw	0
 22693  0199D0  6E01               	movwf	btemp^0,c
 22694  0199D2  6A02               	clrf	(btemp+1)^0,c
 22695  0199D4  6A03               	clrf	(btemp+2)^0,c
 22696  0199D6  6A04               	clrf	(btemp+3)^0,c
 22697  0199D8  D08B               	goto	l2956
 22698  0199DA                     l9376:
 22699                           
 22700                           ;stkvar	_f1 @ sp[(-2)+-4]
 22701  0199DA  0EFA               	movlw	-6
 22702  0199DC  006F FF8C  F009    	movff	plusw1,btemp+8
 22703  0199E2  0EFB               	movlw	-5
 22704  0199E4  006F FF8C  F00A    	movff	plusw1,btemp+9
 22705  0199EA  0EFC               	movlw	-4
 22706  0199EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 22707  0199F2  0EFD               	movlw	-3
 22708  0199F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22709  0199FA  0E20               	movlw	32
 22710  0199FC  D005               	goto	u7710
 22711  0199FE                     u7715:
 22712  0199FE  90D8               	bcf	status,0,c
 22713  019A00  320C               	rrcf	(btemp+11)^0,f,c
 22714  019A02  320B               	rrcf	(btemp+10)^0,f,c
 22715  019A04  320A               	rrcf	(btemp+9)^0,f,c
 22716  019A06  3209               	rrcf	(btemp+8)^0,f,c
 22717  019A08                     u7710:
 22718  019A08  2EE8               	decfsz	wreg,f,c
 22719  019A0A  D7F9               	goto	u7715
 22720                           
 22721                           ;stkvar	_sign1 @ sp[(-2)+1]
 22722  019A0C  0EFF               	movlw	-1
 22723  019A0E  0060  F027  FFE3   	movff	btemp+8,plusw1
 22724                           
 22725                           ;stkvar	_f1 @ sp[(-2)+-4]
 22726  019A14  0EFC               	movlw	-4
 22727  019A16  8EE3               	bsf	plusw1,7,c
 22728                           
 22729                           ;stkvar	_f1 @ sp[(-2)+-4]
 22730  019A18  50E1               	movf	fsr1l,w,c
 22731  019A1A  0FFA               	addlw	-6
 22732  019A1C  6ED9               	movwf	fsr2l,c
 22733  019A1E  50E2               	movf	fsr1h,w,c
 22734  019A20  6EDA               	movwf	fsr2h,c
 22735  019A22  0EFF               	movlw	255
 22736  019A24  22DA               	addwfc	fsr2h,f,c
 22737  019A26  0EFF               	movlw	255
 22738  019A28  16DE               	andwf	postinc2,f,c
 22739  019A2A  0EFF               	movlw	255
 22740  019A2C  16DE               	andwf	postinc2,f,c
 22741  019A2E  0EFF               	movlw	255
 22742  019A30  16DE               	andwf	postinc2,f,c
 22743  019A32  0E00               	movlw	0
 22744  019A34  16DE               	andwf	postinc2,f,c
 22745                           
 22746                           ;stkvar	_exp1 @ sp[(-2)+0]
 22747  019A36  0EFE               	movlw	-2
 22748  019A38  006F FF8C  F001    	movff	plusw1,btemp
 22749  019A3E  0E96               	movlw	150
 22750  019A40  5E01               	subwf	btemp^0,f,c
 22751  019A42  0EFE               	movlw	-2
 22752  019A44  0060  F007  FFE3   	movff	btemp,plusw1
 22753                           
 22754                           ;stkvar	_exp1 @ sp[(-2)+0]
 22755  019A4A  0EFE               	movlw	-2
 22756  019A4C  AEE3               	btfss	plusw1,7,c
 22757  019A4E  D014               	goto	l9394
 22758                           
 22759                           ;stkvar	_exp1 @ sp[(-2)+0]
 22760  019A50  0EFE               	movlw	-2
 22761  019A52  50E3               	movf	plusw1,w,c
 22762  019A54  0A80               	xorlw	128
 22763  019A56  0F97               	addlw	151
 22764  019A58  A0D8               	btfss	status,0,c
 22765  019A5A  D7B9               	goto	u7700
 22766  019A5C                     l9392:
 22767                           
 22768                           ;stkvar	_f1 @ sp[(-2)+-4]
 22769  019A5C  90D8               	bcf	status,0,c
 22770  019A5E  0EFD               	movlw	-3
 22771  019A60  32E3               	rrcf	plusw1,f,c
 22772  019A62  0EFC               	movlw	-4
 22773  019A64  32E3               	rrcf	plusw1,f,c
 22774  019A66  0EFB               	movlw	-5
 22775  019A68  32E3               	rrcf	plusw1,f,c
 22776  019A6A  0EFA               	movlw	-6
 22777  019A6C  32E3               	rrcf	plusw1,f,c
 22778                           
 22779                           ;stkvar	_exp1 @ sp[(-2)+0]
 22780  019A6E  0EFE               	movlw	-2
 22781  019A70  2AE3               	incf	plusw1,f,c
 22782  019A72  B4D8               	btfsc	status,2,c
 22783  019A74  D018               	goto	u7760
 22784  019A76  D7F2               	goto	l9392
 22785  019A78                     l9394:
 22786                           
 22787                           ;stkvar	_exp1 @ sp[(-2)+0]
 22788  019A78  0EFE               	movlw	-2
 22789  019A7A  006F FF8C  F001    	movff	plusw1,btemp
 22790  019A80  0E1F               	movlw	31
 22791  019A82  6401               	cpfsgt	btemp^0,c
 22792  019A84  D00C               	goto	l9402
 22793  019A86  D7A3               	goto	u7700
 22794  019A88                     l9400:
 22795                           
 22796                           ;stkvar	_f1 @ sp[(-2)+-4]
 22797  019A88  90D8               	bcf	status,0,c
 22798  019A8A  0EFA               	movlw	-6
 22799  019A8C  36E3               	rlcf	plusw1,f,c
 22800  019A8E  0EFB               	movlw	-5
 22801  019A90  36E3               	rlcf	plusw1,f,c
 22802  019A92  0EFC               	movlw	-4
 22803  019A94  36E3               	rlcf	plusw1,f,c
 22804  019A96  0EFD               	movlw	-3
 22805  019A98  36E3               	rlcf	plusw1,f,c
 22806                           
 22807                           ;stkvar	_exp1 @ sp[(-2)+0]
 22808  019A9A  0EFE               	movlw	-2
 22809  019A9C  06E3               	decf	plusw1,f,c
 22810  019A9E                     l9402:
 22811                           
 22812                           ;stkvar	_exp1 @ sp[(-2)+0]
 22813  019A9E  0EFE               	movlw	-2
 22814  019AA0  50E3               	movf	plusw1,w,c
 22815  019AA2  A4D8               	btfss	status,2,c
 22816  019AA4  D7F1               	goto	l9400
 22817  019AA6                     u7760:
 22818                           
 22819                           ;stkvar	_sign1 @ sp[(-2)+1]
 22820  019AA6  0EFF               	movlw	-1
 22821  019AA8  50E3               	movf	plusw1,w,c
 22822  019AAA  B4D8               	btfsc	status,2,c
 22823  019AAC  D011               	goto	u7780
 22824                           
 22825                           ;stkvar	_f1 @ sp[(-2)+-4]
 22826                           ;stkvar	_f1 @ sp[(-2)+-4]
 22827  019AAE  0EFA               	movlw	-6
 22828  019AB0  6CE3               	negf	plusw1,c
 22829  019AB2  0EFB               	movlw	-5
 22830  019AB4  1EE3               	comf	plusw1,f,c
 22831  019AB6  0EFC               	movlw	-4
 22832  019AB8  1EE3               	comf	plusw1,f,c
 22833  019ABA  0EFD               	movlw	-3
 22834  019ABC  1EE3               	comf	plusw1,f,c
 22835  019ABE  E308               	bnc	u7780
 22836  019AC0  0EFB               	movlw	-5
 22837  019AC2  2AE3               	incf	plusw1,f,c
 22838  019AC4  E305               	bnc	u7780
 22839  019AC6  0EFC               	movlw	-4
 22840  019AC8  2AE3               	incf	plusw1,f,c
 22841  019ACA  E302               	bnc	u7780
 22842  019ACC  0EFD               	movlw	-3
 22843  019ACE  2AE3               	incf	plusw1,f,c
 22844  019AD0                     u7780:
 22845                           
 22846                           ;stkvar	_f1 @ sp[(-2)+-4]
 22847  019AD0  0EFA               	movlw	-6
 22848  019AD2  006F FF8C  F001    	movff	plusw1,btemp
 22849  019AD8  0EFB               	movlw	-5
 22850  019ADA  006F FF8C  F002    	movff	plusw1,btemp+1
 22851  019AE0  0EFC               	movlw	-4
 22852  019AE2  006F FF8C  F003    	movff	plusw1,btemp+2
 22853  019AE8  0EFD               	movlw	-3
 22854  019AEA  006F FF8C  F004    	movff	plusw1,btemp+3
 22855  019AF0                     l2956:
 22856                           
 22857                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 22858  019AF0  0EFA               	movlw	250
 22859  019AF2  26E1               	addwf	fsr1l,f,c
 22860  019AF4  0EFF               	movlw	255
 22861  019AF6  22E2               	addwfc	fsr1h,f,c
 22862  019AF8  0012               	return		;funcret
 22863  019AFA                     __end_of___fltol:
 22864                           	opt callstack 0
 22865                           
 22866 ;; *************** function ___flneg *****************
 22867 ;; Defined at:
 22868 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 22869 ;; Parameters:    Size  Location     Type
 22870 ;;  f1              4  [STACK] long 
 22871 ;; Auto vars:     Size  Location     Type
 22872 ;;		None
 22873 ;; Return value:  Size  Location     Type
 22874 ;;                  4  [STACK] long 
 22875 ;; Registers used:
 22876 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 22877 ;; Tracked objects:
 22878 ;;		On entry : 0/0
 22879 ;;		On exit  : 0/0
 22880 ;;		Unchanged: 0/0
 22881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22886 ;;Total ram usage:        0 bytes
 22887 ;; Hardware stack levels used:    1
 22888 ;; Hardware stack levels required when called:   15
 22889 ;; This function calls:
 22890 ;;		Nothing
 22891 ;; This function is called by:
 22892 ;;		_calc_bsoc
 22893 ;;		_efgtoa
 22894 ;; This function uses a reentrant model
 22895 ;;
 22896                           
 22897                           	psect	text82
 22898  01C606                     __ptext82:
 22899                           	opt callstack 0
 22900  01C606                     ___flneg:
 22901                           	opt callstack 0
 22902                           
 22903                           ;stkvar	_f1 @ sp[(0)+-4]
 22904                           
 22905                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22906                           ;incstack = 0
 22907 ;; hardware stack exceeded
 22908  01C606  0EFC               	movlw	-4
 22909  01C608  50E3               	movf	plusw1,w,c
 22910  01C60A  E10A               	bnz	u7680
 22911  01C60C  0EFD               	movlw	-3
 22912  01C60E  50E3               	movf	plusw1,w,c
 22913  01C610  E107               	bnz	u7680
 22914  01C612  0EFE               	movlw	-2
 22915  01C614  50E3               	movf	plusw1,w,c
 22916  01C616  E104               	bnz	u7680
 22917  01C618  0EFF               	movlw	-1
 22918  01C61A  50E3               	movf	plusw1,w,c
 22919  01C61C  B4D8               	btfsc	status,2,c
 22920  01C61E  D002               	goto	l9366
 22921  01C620                     u7680:
 22922                           
 22923                           ;stkvar	_f1 @ sp[(0)+-4]
 22924  01C620  0EFF               	movlw	-1
 22925  01C622  7EE3               	btg	plusw1,7,c
 22926  01C624                     l9366:
 22927                           
 22928                           ;stkvar	_f1 @ sp[(0)+-4]
 22929  01C624  0EFC               	movlw	-4
 22930  01C626  006F FF8C  F001    	movff	plusw1,btemp
 22931  01C62C  0EFD               	movlw	-3
 22932  01C62E  006F FF8C  F002    	movff	plusw1,btemp+1
 22933  01C634  0EFE               	movlw	-2
 22934  01C636  006F FF8C  F003    	movff	plusw1,btemp+2
 22935  01C63C  0EFF               	movlw	-1
 22936  01C63E  006F FF8C  F004    	movff	plusw1,btemp+3
 22937                           
 22938                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 22939  01C644  52E5               	movf	postdec1,f,c
 22940  01C646  52E5               	movf	postdec1,f,c
 22941  01C648  52E5               	movf	postdec1,f,c
 22942  01C64A  52E5               	movf	postdec1,f,c
 22943  01C64C  0012               	return		;funcret
 22944  01C64E                     __end_of___flneg:
 22945                           	opt callstack 0
 22946                           
 22947 ;; *************** function ___fleq *****************
 22948 ;; Defined at:
 22949 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 22950 ;; Parameters:    Size  Location     Type
 22951 ;;  ff1             4  [STACK] long 
 22952 ;;  ff2             4  [STACK] long 
 22953 ;; Auto vars:     Size  Location     Type
 22954 ;;		None
 22955 ;; Return value:  Size  Location     Type
 22956 ;;		None               void
 22957 ;; Registers used:
 22958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22959 ;; Tracked objects:
 22960 ;;		On entry : 0/0
 22961 ;;		On exit  : 0/0
 22962 ;;		Unchanged: 0/0
 22963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22968 ;;Total ram usage:        0 bytes
 22969 ;; Hardware stack levels used:    1
 22970 ;; Hardware stack levels required when called:   15
 22971 ;; This function calls:
 22972 ;;		Nothing
 22973 ;; This function is called by:
 22974 ;;		_efgtoa
 22975 ;; This function uses a reentrant model
 22976 ;;
 22977                           
 22978                           	psect	text83
 22979  01B1C4                     __ptext83:
 22980                           	opt callstack 0
 22981  01B1C4                     ___fleq:
 22982                           	opt callstack 0
 22983                           
 22984                           ;stkvar	_ff1 @ sp[(0)+-4]
 22985                           
 22986                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22987                           ;incstack = 0
 22988 ;; hardware stack exceeded
 22989  01B1C4  50E1               	movf	fsr1l,w,c
 22990  01B1C6  0FFC               	addlw	-4
 22991  01B1C8  6ED9               	movwf	fsr2l,c
 22992  01B1CA  50E2               	movf	fsr1h,w,c
 22993  01B1CC  6EDA               	movwf	fsr2h,c
 22994  01B1CE  0EFF               	movlw	255
 22995  01B1D0  22DA               	addwfc	fsr2h,f,c
 22996  01B1D2  0E00               	movlw	0
 22997  01B1D4  14DE               	andwf	postinc2,w,c
 22998  01B1D6  6E09               	movwf	(btemp+8)^0,c
 22999  01B1D8  0E00               	movlw	0
 23000  01B1DA  14DE               	andwf	postinc2,w,c
 23001  01B1DC  6E0A               	movwf	(btemp+9)^0,c
 23002  01B1DE  0E80               	movlw	128
 23003  01B1E0  14DE               	andwf	postinc2,w,c
 23004  01B1E2  6E0B               	movwf	(btemp+10)^0,c
 23005  01B1E4  0E7F               	movlw	127
 23006  01B1E6  14DE               	andwf	postinc2,w,c
 23007  01B1E8  6E0C               	movwf	(btemp+11)^0,c
 23008  01B1EA  5009               	movf	(btemp+8)^0,w,c
 23009  01B1EC  100A               	iorwf	(btemp+9)^0,w,c
 23010  01B1EE  100B               	iorwf	(btemp+10)^0,w,c
 23011  01B1F0  100C               	iorwf	(btemp+11)^0,w,c
 23012  01B1F2  A4D8               	btfss	status,2,c
 23013  01B1F4  D008               	goto	l9324
 23014                           
 23015                           ;stkvar	_ff1 @ sp[(0)+-4]
 23016  01B1F6  0EFC               	movlw	-4
 23017  01B1F8  6AE3               	clrf	plusw1,c
 23018  01B1FA  0EFD               	movlw	-3
 23019  01B1FC  6AE3               	clrf	plusw1,c
 23020  01B1FE  0EFE               	movlw	-2
 23021  01B200  6AE3               	clrf	plusw1,c
 23022  01B202  0EFF               	movlw	-1
 23023  01B204  6AE3               	clrf	plusw1,c
 23024  01B206                     l9324:
 23025                           
 23026                           ;stkvar	_ff2 @ sp[(0)+-8]
 23027  01B206  50E1               	movf	fsr1l,w,c
 23028  01B208  0FF8               	addlw	-8
 23029  01B20A  6ED9               	movwf	fsr2l,c
 23030  01B20C  50E2               	movf	fsr1h,w,c
 23031  01B20E  6EDA               	movwf	fsr2h,c
 23032  01B210  0EFF               	movlw	255
 23033  01B212  22DA               	addwfc	fsr2h,f,c
 23034  01B214  0E00               	movlw	0
 23035  01B216  14DE               	andwf	postinc2,w,c
 23036  01B218  6E09               	movwf	(btemp+8)^0,c
 23037  01B21A  0E00               	movlw	0
 23038  01B21C  14DE               	andwf	postinc2,w,c
 23039  01B21E  6E0A               	movwf	(btemp+9)^0,c
 23040  01B220  0E80               	movlw	128
 23041  01B222  14DE               	andwf	postinc2,w,c
 23042  01B224  6E0B               	movwf	(btemp+10)^0,c
 23043  01B226  0E7F               	movlw	127
 23044  01B228  14DE               	andwf	postinc2,w,c
 23045  01B22A  6E0C               	movwf	(btemp+11)^0,c
 23046  01B22C  5009               	movf	(btemp+8)^0,w,c
 23047  01B22E  100A               	iorwf	(btemp+9)^0,w,c
 23048  01B230  100B               	iorwf	(btemp+10)^0,w,c
 23049  01B232  100C               	iorwf	(btemp+11)^0,w,c
 23050  01B234  A4D8               	btfss	status,2,c
 23051  01B236  D008               	goto	l9328
 23052                           
 23053                           ;stkvar	_ff2 @ sp[(0)+-8]
 23054  01B238  0EF8               	movlw	-8
 23055  01B23A  6AE3               	clrf	plusw1,c
 23056  01B23C  0EF9               	movlw	-7
 23057  01B23E  6AE3               	clrf	plusw1,c
 23058  01B240  0EFA               	movlw	-6
 23059  01B242  6AE3               	clrf	plusw1,c
 23060  01B244  0EFB               	movlw	-5
 23061  01B246  6AE3               	clrf	plusw1,c
 23062  01B248                     l9328:
 23063                           
 23064                           ;stkvar	_ff2 @ sp[(0)+-8]
 23065                           ;stkvar	_ff1 @ sp[(0)+-4]
 23066  01B248  50E1               	movf	fsr1l,w,c
 23067  01B24A  0FFC               	addlw	-4
 23068  01B24C  6ED9               	movwf	fsr2l,c
 23069  01B24E  50E2               	movf	fsr1h,w,c
 23070  01B250  6EDA               	movwf	fsr2h,c
 23071  01B252  0EFF               	movlw	255
 23072  01B254  22DA               	addwfc	fsr2h,f,c
 23073  01B256  0EF8               	movlw	-8
 23074  01B258  50E3               	movf	plusw1,w,c
 23075  01B25A  18DE               	xorwf	postinc2,w,c
 23076  01B25C  E10D               	bnz	u7620
 23077  01B25E  0EF9               	movlw	-7
 23078  01B260  50E3               	movf	plusw1,w,c
 23079  01B262  18DE               	xorwf	postinc2,w,c
 23080  01B264  E109               	bnz	u7620
 23081  01B266  0EFA               	movlw	-6
 23082  01B268  50E3               	movf	plusw1,w,c
 23083  01B26A  18DE               	xorwf	postinc2,w,c
 23084  01B26C  E105               	bnz	u7620
 23085  01B26E  0EFB               	movlw	-5
 23086  01B270  50E3               	movf	plusw1,w,c
 23087  01B272  18DE               	xorwf	postinc2,w,c
 23088  01B274  B4D8               	btfsc	status,2,c
 23089  01B276  D002               	goto	l9332
 23090  01B278                     u7620:
 23091  01B278  9001               	bcf	btemp& (0+255),0,c
 23092  01B27A  D001               	goto	l2918
 23093  01B27C                     l9332:
 23094  01B27C  8001               	bsf	btemp& (0+255),0,c
 23095  01B27E                     l2918:
 23096                           
 23097                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 23098  01B27E  0EF8               	movlw	248
 23099  01B280  26E1               	addwf	fsr1l,f,c
 23100  01B282  0EFF               	movlw	255
 23101  01B284  22E2               	addwfc	fsr1h,f,c
 23102  01B286  0012               	return		;funcret
 23103  01B288                     __end_of___fleq:
 23104                           	opt callstack 0
 23105                           
 23106 ;; *************** function ___awmod *****************
 23107 ;; Defined at:
 23108 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 23109 ;; Parameters:    Size  Location     Type
 23110 ;;  dividend        2  [STACK] int 
 23111 ;;  divisor         2  [STACK] int 
 23112 ;; Auto vars:     Size  Location     Type
 23113 ;;  sign            1  [STACK] unsigned char 
 23114 ;;  counter         1  [STACK] unsigned char 
 23115 ;; Return value:  Size  Location     Type
 23116 ;;                  2  [STACK] int 
 23117 ;; Registers used:
 23118 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 23119 ;; Tracked objects:
 23120 ;;		On entry : 0/0
 23121 ;;		On exit  : 0/0
 23122 ;;		Unchanged: 0/0
 23123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23128 ;;Total ram usage:        0 bytes
 23129 ;; Hardware stack levels used:    1
 23130 ;; Hardware stack levels required when called:   15
 23131 ;; This function calls:
 23132 ;;		Nothing
 23133 ;; This function is called by:
 23134 ;;		_efgtoa
 23135 ;; This function uses a reentrant model
 23136 ;;
 23137                           
 23138                           	psect	text84
 23139  01A75E                     __ptext84:
 23140                           	opt callstack 0
 23141  01A75E                     ___awmod:
 23142                           	opt callstack 0
 23143                           
 23144                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23145  01A75E  52E6               	movf	postinc1,f,c
 23146  01A760  52E6               	movf	postinc1,f,c
 23147                           
 23148                           ;stkvar	_sign @ sp[(-2)+0]
 23149                           
 23150                           ;incstack = 0
 23151 ;; hardware stack exceeded
 23152  01A762  0EFE               	movlw	-2
 23153  01A764  6AE3               	clrf	plusw1,c
 23154                           
 23155                           ;stkvar	_dividend @ sp[(-2)+-2]
 23156  01A766  0EFD               	movlw	-3
 23157  01A768  AEE3               	btfss	plusw1,7,c
 23158  01A76A  D009               	goto	l9290
 23159                           
 23160                           ;stkvar	_dividend @ sp[(-2)+-2]
 23161                           ;stkvar	_dividend @ sp[(-2)+-2]
 23162  01A76C  0EFC               	movlw	-4
 23163  01A76E  6CE3               	negf	plusw1,c
 23164  01A770  0EFD               	movlw	-3
 23165  01A772  1EE3               	comf	plusw1,f,c
 23166  01A774  B0D8               	btfsc	status,0,c
 23167  01A776  2AE3               	incf	plusw1,f,c
 23168                           
 23169                           ;stkvar	_sign @ sp[(-2)+0]
 23170  01A778  0EFE               	movlw	-2
 23171  01A77A  6AE3               	clrf	plusw1,c
 23172  01A77C  2AE3               	incf	plusw1,f,c
 23173  01A77E                     l9290:
 23174                           
 23175                           ;stkvar	_divisor @ sp[(-2)+-4]
 23176  01A77E  0EFB               	movlw	-5
 23177  01A780  AEE3               	btfss	plusw1,7,c
 23178  01A782  D006               	goto	l9294
 23179                           
 23180                           ;stkvar	_divisor @ sp[(-2)+-4]
 23181                           ;stkvar	_divisor @ sp[(-2)+-4]
 23182  01A784  0EFA               	movlw	-6
 23183  01A786  6CE3               	negf	plusw1,c
 23184  01A788  0EFB               	movlw	-5
 23185  01A78A  1EE3               	comf	plusw1,f,c
 23186  01A78C  B0D8               	btfsc	status,0,c
 23187  01A78E  2AE3               	incf	plusw1,f,c
 23188  01A790                     l9294:
 23189                           
 23190                           ;stkvar	_divisor @ sp[(-2)+-4]
 23191  01A790  0EFA               	movlw	-6
 23192  01A792  006F FF8C  F001    	movff	plusw1,btemp
 23193  01A798  0EFB               	movlw	-5
 23194  01A79A  50E3               	movf	plusw1,w,c
 23195  01A79C  1001               	iorwf	btemp^0,w,c
 23196  01A79E  B4D8               	btfsc	status,2,c
 23197  01A7A0  D053               	goto	u7580
 23198                           
 23199                           ;stkvar	_counter @ sp[(-2)+1]
 23200  01A7A2  0EFF               	movlw	-1
 23201  01A7A4  6AE3               	clrf	plusw1,c
 23202  01A7A6  D012               	goto	L27
 23203  01A7A8                     l9298:
 23204                           
 23205                           ;stkvar	_divisor @ sp[(-2)+-4]
 23206  01A7A8  0EFA               	movlw	-6
 23207  01A7AA  50E3               	movf	plusw1,w,c
 23208  01A7AC  90D8               	bcf	status,0,c
 23209  01A7AE  34E8               	rlcf	wreg,w,c
 23210  01A7B0  6E01               	movwf	btemp^0,c
 23211  01A7B2  0EFA               	movlw	-6
 23212  01A7B4  0060  F007  FFE3   	movff	btemp,plusw1
 23213  01A7BA  0EFB               	movlw	-5
 23214  01A7BC  50E3               	movf	plusw1,w,c
 23215  01A7BE  34E8               	rlcf	wreg,w,c
 23216  01A7C0  6E01               	movwf	btemp^0,c
 23217  01A7C2  0EFB               	movlw	-5
 23218  01A7C4  0060  F007  FFE3   	movff	btemp,plusw1
 23219                           
 23220                           ;stkvar	_counter @ sp[(-2)+1]
 23221  01A7CA  0EFF               	movlw	-1
 23222  01A7CC                     L27:
 23223  01A7CC  2AE3               	incf	plusw1,f,c
 23224                           
 23225                           ;stkvar	_divisor @ sp[(-2)+-4]
 23226  01A7CE  0EFB               	movlw	-5
 23227  01A7D0  AEE3               	btfss	plusw1,7,c
 23228  01A7D2  D7EA               	goto	l9298
 23229  01A7D4                     u7560:
 23230                           
 23231                           ;stkvar	_divisor @ sp[(-2)+-4]
 23232  01A7D4  0EFA               	movlw	-6
 23233  01A7D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 23234  01A7DC  0EFB               	movlw	-5
 23235  01A7DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 23236                           
 23237                           ;stkvar	_dividend @ sp[(-2)+-2]
 23238  01A7E4  0EFC               	movlw	-4
 23239  01A7E6  006F FF8C  F009    	movff	plusw1,btemp+8
 23240  01A7EC  0EFD               	movlw	-3
 23241  01A7EE  006F FF8C  F00A    	movff	plusw1,btemp+9
 23242  01A7F4  500B               	movf	(btemp+10)^0,w,c
 23243  01A7F6  5C09               	subwf	(btemp+8)^0,w,c
 23244  01A7F8  500C               	movf	(btemp+11)^0,w,c
 23245  01A7FA  580A               	subwfb	(btemp+9)^0,w,c
 23246  01A7FC  A0D8               	btfss	status,0,c
 23247  01A7FE  D014               	goto	l9308
 23248                           
 23249                           ;stkvar	_divisor @ sp[(-2)+-4]
 23250                           ;stkvar	_dividend @ sp[(-2)+-2]
 23251  01A800  0EFC               	movlw	-4
 23252  01A802  50E3               	movf	plusw1,w,c
 23253  01A804  6E01               	movwf	btemp^0,c
 23254  01A806  0EFA               	movlw	-6
 23255  01A808  50E3               	movf	plusw1,w,c
 23256  01A80A  5E01               	subwf	btemp^0,f,c
 23257  01A80C  0EFC               	movlw	-4
 23258  01A80E  0060  F007  FFE3   	movff	btemp,plusw1
 23259  01A814  0EFD               	movlw	-3
 23260  01A816  50E3               	movf	plusw1,w,c
 23261  01A818  6E01               	movwf	btemp^0,c
 23262  01A81A  0EFB               	movlw	-5
 23263  01A81C  50E3               	movf	plusw1,w,c
 23264  01A81E  5A01               	subwfb	btemp^0,f,c
 23265  01A820  0EFD               	movlw	-3
 23266  01A822  0060  F007  FFE3   	movff	btemp,plusw1
 23267  01A828                     l9308:
 23268                           
 23269                           ;stkvar	_divisor @ sp[(-2)+-4]
 23270  01A828  90D8               	bcf	status,0,c
 23271  01A82A  0EFB               	movlw	-5
 23272  01A82C  32E3               	rrcf	plusw1,f,c
 23273  01A82E  0EFA               	movlw	-6
 23274  01A830  32E3               	rrcf	plusw1,f,c
 23275                           
 23276                           ;stkvar	_counter @ sp[(-2)+1]
 23277  01A832  0EFF               	movlw	-1
 23278  01A834  50E3               	movf	plusw1,w,c
 23279  01A836  6E01               	movwf	btemp^0,c
 23280  01A838  0E01               	movlw	1
 23281  01A83A  5E01               	subwf	btemp^0,f,c
 23282  01A83C  0EFF               	movlw	-1
 23283  01A83E  0060  F007  FFE3   	movff	btemp,plusw1
 23284  01A844  A4D8               	btfss	status,2,c
 23285  01A846  D7C6               	goto	u7560
 23286  01A848                     u7580:
 23287                           
 23288                           ;stkvar	_sign @ sp[(-2)+0]
 23289  01A848  0EFE               	movlw	-2
 23290  01A84A  50E3               	movf	plusw1,w,c
 23291  01A84C  B4D8               	btfsc	status,2,c
 23292  01A84E  D006               	goto	l9316
 23293                           
 23294                           ;stkvar	_dividend @ sp[(-2)+-2]
 23295                           ;stkvar	_dividend @ sp[(-2)+-2]
 23296  01A850  0EFC               	movlw	-4
 23297  01A852  6CE3               	negf	plusw1,c
 23298  01A854  0EFD               	movlw	-3
 23299  01A856  1EE3               	comf	plusw1,f,c
 23300  01A858  B0D8               	btfsc	status,0,c
 23301  01A85A  2AE3               	incf	plusw1,f,c
 23302  01A85C                     l9316:
 23303                           
 23304                           ;stkvar	_dividend @ sp[(-2)+-2]
 23305  01A85C  0EFC               	movlw	-4
 23306  01A85E  006F FF8C  F001    	movff	plusw1,btemp
 23307  01A864  0EFD               	movlw	-3
 23308  01A866  006F FF8C  F002    	movff	plusw1,btemp+1
 23309                           
 23310                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 23311  01A86C  0EFA               	movlw	250
 23312  01A86E  26E1               	addwf	fsr1l,f,c
 23313  01A870  0EFF               	movlw	255
 23314  01A872  22E2               	addwfc	fsr1h,f,c
 23315  01A874  0012               	return		;funcret
 23316  01A876                     __end_of___awmod:
 23317                           	opt callstack 0
 23318                           
 23319 ;; *************** function ___awdiv *****************
 23320 ;; Defined at:
 23321 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 23322 ;; Parameters:    Size  Location     Type
 23323 ;;  dividend        2  [STACK] int 
 23324 ;;  divisor         2  [STACK] int 
 23325 ;; Auto vars:     Size  Location     Type
 23326 ;;  quotient        2  [STACK] int 
 23327 ;;  sign            1  [STACK] unsigned char 
 23328 ;;  counter         1  [STACK] unsigned char 
 23329 ;; Return value:  Size  Location     Type
 23330 ;;                  2  [STACK] int 
 23331 ;; Registers used:
 23332 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 23333 ;; Tracked objects:
 23334 ;;		On entry : 0/0
 23335 ;;		On exit  : 0/0
 23336 ;;		Unchanged: 0/0
 23337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23342 ;;Total ram usage:        0 bytes
 23343 ;; Hardware stack levels used:    1
 23344 ;; Hardware stack levels required when called:   15
 23345 ;; This function calls:
 23346 ;;		Nothing
 23347 ;; This function is called by:
 23348 ;;		_efgtoa
 23349 ;; This function uses a reentrant model
 23350 ;;
 23351                           
 23352                           	psect	text85
 23353  019DBE                     __ptext85:
 23354                           	opt callstack 0
 23355  019DBE                     ___awdiv:
 23356                           	opt callstack 0
 23357                           
 23358                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23359  019DBE  52E6               	movf	postinc1,f,c
 23360  019DC0  52E6               	movf	postinc1,f,c
 23361  019DC2  52E6               	movf	postinc1,f,c
 23362  019DC4  52E6               	movf	postinc1,f,c
 23363                           
 23364                           ;stkvar	_sign @ sp[(-4)+2]
 23365                           
 23366                           ;incstack = 0
 23367 ;; hardware stack exceeded
 23368  019DC6  0EFE               	movlw	-2
 23369  019DC8  6AE3               	clrf	plusw1,c
 23370                           
 23371                           ;stkvar	_divisor @ sp[(-4)+-4]
 23372  019DCA  0EF9               	movlw	-7
 23373  019DCC  AEE3               	btfss	plusw1,7,c
 23374  019DCE  D009               	goto	l9244
 23375                           
 23376                           ;stkvar	_divisor @ sp[(-4)+-4]
 23377                           ;stkvar	_divisor @ sp[(-4)+-4]
 23378  019DD0  0EF8               	movlw	-8
 23379  019DD2  6CE3               	negf	plusw1,c
 23380  019DD4  0EF9               	movlw	-7
 23381  019DD6  1EE3               	comf	plusw1,f,c
 23382  019DD8  B0D8               	btfsc	status,0,c
 23383  019DDA  2AE3               	incf	plusw1,f,c
 23384                           
 23385                           ;stkvar	_sign @ sp[(-4)+2]
 23386  019DDC  0EFE               	movlw	-2
 23387  019DDE  6AE3               	clrf	plusw1,c
 23388  019DE0  2AE3               	incf	plusw1,f,c
 23389  019DE2                     l9244:
 23390                           
 23391                           ;stkvar	_dividend @ sp[(-4)+-2]
 23392  019DE2  0EFB               	movlw	-5
 23393  019DE4  AEE3               	btfss	plusw1,7,c
 23394  019DE6  D008               	goto	l9250
 23395                           
 23396                           ;stkvar	_dividend @ sp[(-4)+-2]
 23397                           ;stkvar	_dividend @ sp[(-4)+-2]
 23398  019DE8  0EFA               	movlw	-6
 23399  019DEA  6CE3               	negf	plusw1,c
 23400  019DEC  0EFB               	movlw	-5
 23401  019DEE  1EE3               	comf	plusw1,f,c
 23402  019DF0  B0D8               	btfsc	status,0,c
 23403  019DF2  2AE3               	incf	plusw1,f,c
 23404                           
 23405                           ;stkvar	_sign @ sp[(-4)+2]
 23406  019DF4  0EFE               	movlw	-2
 23407  019DF6  70E3               	btg	plusw1,0,c
 23408  019DF8                     l9250:
 23409                           
 23410                           ;stkvar	_quotient @ sp[(-4)+0]
 23411  019DF8  0EFC               	movlw	-4
 23412  019DFA  6AE3               	clrf	plusw1,c
 23413  019DFC  0EFD               	movlw	-3
 23414  019DFE  6AE3               	clrf	plusw1,c
 23415                           
 23416                           ;stkvar	_divisor @ sp[(-4)+-4]
 23417  019E00  0EF8               	movlw	-8
 23418  019E02  006F FF8C  F001    	movff	plusw1,btemp
 23419  019E08  0EF9               	movlw	-7
 23420  019E0A  50E3               	movf	plusw1,w,c
 23421  019E0C  1001               	iorwf	btemp^0,w,c
 23422  019E0E  B4D8               	btfsc	status,2,c
 23423  019E10  D066               	goto	u7510
 23424                           
 23425                           ;stkvar	_counter @ sp[(-4)+3]
 23426  019E12  0EFF               	movlw	-1
 23427  019E14  6AE3               	clrf	plusw1,c
 23428  019E16  D012               	goto	L28
 23429  019E18                     l9256:
 23430                           
 23431                           ;stkvar	_divisor @ sp[(-4)+-4]
 23432  019E18  0EF8               	movlw	-8
 23433  019E1A  50E3               	movf	plusw1,w,c
 23434  019E1C  90D8               	bcf	status,0,c
 23435  019E1E  34E8               	rlcf	wreg,w,c
 23436  019E20  6E01               	movwf	btemp^0,c
 23437  019E22  0EF8               	movlw	-8
 23438  019E24  0060  F007  FFE3   	movff	btemp,plusw1
 23439  019E2A  0EF9               	movlw	-7
 23440  019E2C  50E3               	movf	plusw1,w,c
 23441  019E2E  34E8               	rlcf	wreg,w,c
 23442  019E30  6E01               	movwf	btemp^0,c
 23443  019E32  0EF9               	movlw	-7
 23444  019E34  0060  F007  FFE3   	movff	btemp,plusw1
 23445                           
 23446                           ;stkvar	_counter @ sp[(-4)+3]
 23447  019E3A  0EFF               	movlw	-1
 23448  019E3C                     L28:
 23449  019E3C  2AE3               	incf	plusw1,f,c
 23450                           
 23451                           ;stkvar	_divisor @ sp[(-4)+-4]
 23452  019E3E  0EF9               	movlw	-7
 23453  019E40  AEE3               	btfss	plusw1,7,c
 23454  019E42  D7EA               	goto	l9256
 23455  019E44                     u7490:
 23456                           
 23457                           ;stkvar	_quotient @ sp[(-4)+0]
 23458  019E44  0EFC               	movlw	-4
 23459  019E46  50E3               	movf	plusw1,w,c
 23460  019E48  90D8               	bcf	status,0,c
 23461  019E4A  34E8               	rlcf	wreg,w,c
 23462  019E4C  6E01               	movwf	btemp^0,c
 23463  019E4E  0EFC               	movlw	-4
 23464  019E50  0060  F007  FFE3   	movff	btemp,plusw1
 23465  019E56  0EFD               	movlw	-3
 23466  019E58  50E3               	movf	plusw1,w,c
 23467  019E5A  34E8               	rlcf	wreg,w,c
 23468  019E5C  6E01               	movwf	btemp^0,c
 23469  019E5E  0EFD               	movlw	-3
 23470  019E60  0060  F007  FFE3   	movff	btemp,plusw1
 23471                           
 23472                           ;stkvar	_divisor @ sp[(-4)+-4]
 23473  019E66  0EF8               	movlw	-8
 23474  019E68  006F FF8C  F00B    	movff	plusw1,btemp+10
 23475  019E6E  0EF9               	movlw	-7
 23476  019E70  006F FF8C  F00C    	movff	plusw1,btemp+11
 23477                           
 23478                           ;stkvar	_dividend @ sp[(-4)+-2]
 23479  019E76  0EFA               	movlw	-6
 23480  019E78  006F FF8C  F009    	movff	plusw1,btemp+8
 23481  019E7E  0EFB               	movlw	-5
 23482  019E80  006F FF8C  F00A    	movff	plusw1,btemp+9
 23483  019E86  500B               	movf	(btemp+10)^0,w,c
 23484  019E88  5C09               	subwf	(btemp+8)^0,w,c
 23485  019E8A  500C               	movf	(btemp+11)^0,w,c
 23486  019E8C  580A               	subwfb	(btemp+9)^0,w,c
 23487  019E8E  A0D8               	btfss	status,0,c
 23488  019E90  D016               	goto	l9270
 23489                           
 23490                           ;stkvar	_divisor @ sp[(-4)+-4]
 23491                           ;stkvar	_dividend @ sp[(-4)+-2]
 23492  019E92  0EFA               	movlw	-6
 23493  019E94  50E3               	movf	plusw1,w,c
 23494  019E96  6E01               	movwf	btemp^0,c
 23495  019E98  0EF8               	movlw	-8
 23496  019E9A  50E3               	movf	plusw1,w,c
 23497  019E9C  5E01               	subwf	btemp^0,f,c
 23498  019E9E  0EFA               	movlw	-6
 23499  019EA0  0060  F007  FFE3   	movff	btemp,plusw1
 23500  019EA6  0EFB               	movlw	-5
 23501  019EA8  50E3               	movf	plusw1,w,c
 23502  019EAA  6E01               	movwf	btemp^0,c
 23503  019EAC  0EF9               	movlw	-7
 23504  019EAE  50E3               	movf	plusw1,w,c
 23505  019EB0  5A01               	subwfb	btemp^0,f,c
 23506  019EB2  0EFB               	movlw	-5
 23507  019EB4  0060  F007  FFE3   	movff	btemp,plusw1
 23508                           
 23509                           ;stkvar	_quotient @ sp[(-4)+0]
 23510  019EBA  0EFC               	movlw	-4
 23511  019EBC  80E3               	bsf	plusw1,0,c
 23512  019EBE                     l9270:
 23513                           
 23514                           ;stkvar	_divisor @ sp[(-4)+-4]
 23515  019EBE  90D8               	bcf	status,0,c
 23516  019EC0  0EF9               	movlw	-7
 23517  019EC2  32E3               	rrcf	plusw1,f,c
 23518  019EC4  0EF8               	movlw	-8
 23519  019EC6  32E3               	rrcf	plusw1,f,c
 23520                           
 23521                           ;stkvar	_counter @ sp[(-4)+3]
 23522  019EC8  0EFF               	movlw	-1
 23523  019ECA  50E3               	movf	plusw1,w,c
 23524  019ECC  6E01               	movwf	btemp^0,c
 23525  019ECE  0E01               	movlw	1
 23526  019ED0  5E01               	subwf	btemp^0,f,c
 23527  019ED2  0EFF               	movlw	-1
 23528  019ED4  0060  F007  FFE3   	movff	btemp,plusw1
 23529  019EDA  A4D8               	btfss	status,2,c
 23530  019EDC  D7B3               	goto	u7490
 23531  019EDE                     u7510:
 23532                           
 23533                           ;stkvar	_sign @ sp[(-4)+2]
 23534  019EDE  0EFE               	movlw	-2
 23535  019EE0  50E3               	movf	plusw1,w,c
 23536  019EE2  B4D8               	btfsc	status,2,c
 23537  019EE4  D006               	goto	l9278
 23538                           
 23539                           ;stkvar	_quotient @ sp[(-4)+0]
 23540                           ;stkvar	_quotient @ sp[(-4)+0]
 23541  019EE6  0EFC               	movlw	-4
 23542  019EE8  6CE3               	negf	plusw1,c
 23543  019EEA  0EFD               	movlw	-3
 23544  019EEC  1EE3               	comf	plusw1,f,c
 23545  019EEE  B0D8               	btfsc	status,0,c
 23546  019EF0  2AE3               	incf	plusw1,f,c
 23547  019EF2                     l9278:
 23548                           
 23549                           ;stkvar	_quotient @ sp[(-4)+0]
 23550  019EF2  0EFC               	movlw	-4
 23551  019EF4  006F FF8C  F001    	movff	plusw1,btemp
 23552  019EFA  0EFD               	movlw	-3
 23553  019EFC  006F FF8C  F002    	movff	plusw1,btemp+1
 23554                           
 23555                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 23556  019F02  0EF8               	movlw	248
 23557  019F04  26E1               	addwf	fsr1l,f,c
 23558  019F06  0EFF               	movlw	255
 23559  019F08  22E2               	addwfc	fsr1h,f,c
 23560  019F0A  0012               	return		;funcret
 23561  019F0C                     __end_of___awdiv:
 23562                           	opt callstack 0
 23563                           
 23564 ;; *************** function _dtoa *****************
 23565 ;; Defined at:
 23566 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23567 ;; Parameters:    Size  Location     Type
 23568 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23569 ;;		 -> f(6), NULL(0), 
 23570 ;;  d               8  [STACK] long long 
 23571 ;; Auto vars:     Size  Location     Type
 23572 ;;  n               8  [STACK] long long 
 23573 ;;  i               2  [STACK] int 
 23574 ;;  s               2  [STACK] int 
 23575 ;;  w               2  [STACK] int 
 23576 ;;  p               2  [STACK] int 
 23577 ;; Return value:  Size  Location     Type
 23578 ;;                  2  [STACK] int 
 23579 ;; Registers used:
 23580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 23581 ;; Tracked objects:
 23582 ;;		On entry : 0/0
 23583 ;;		On exit  : 0/0
 23584 ;;		Unchanged: 0/0
 23585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23590 ;;Total ram usage:        0 bytes
 23591 ;; Hardware stack levels used:    1
 23592 ;; Hardware stack levels required when called:   20
 23593 ;; This function calls:
 23594 ;;		___aodiv
 23595 ;;		___aomod
 23596 ;;		_abs
 23597 ;;		_pad
 23598 ;; This function is called by:
 23599 ;;		_vfpfcnvrt
 23600 ;; This function uses a reentrant model
 23601 ;;
 23602                           
 23603                           	psect	text86
 23604  015DB0                     __ptext86:
 23605                           	opt callstack 0
 23606  015DB0                     _dtoa:
 23607                           	opt callstack 0
 23608                           
 23609                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 23610  015DB0  0E12               	movlw	18
 23611  015DB2  26E1               	addwf	fsr1l,f,c
 23612  015DB4  0E00               	movlw	0
 23613  015DB6  22E2               	addwfc	fsr1h,f,c
 23614                           
 23615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 23616                           ;stkvar	_d @ sp[(-18)+-10]
 23617                           
 23618                           ;incstack = 0
 23619 ;; hardware stack exceeded
 23620  015DB8  0EE4               	movlw	228
 23621  015DBA  24E1               	addwf	fsr1l,w,c
 23622  015DBC  6ED9               	movwf	fsr2l,c
 23623  015DBE  0EFF               	movlw	255
 23624  015DC0  20E2               	addwfc	fsr1h,w,c
 23625  015DC2  6EDA               	movwf	fsr2h,c
 23626                           
 23627                           ;stkvar	_n @ sp[(-18)+2]
 23628  015DC4  0E08               	movlw	8
 23629  015DC6  6E01               	movwf	btemp^0,c
 23630  015DC8  0EF0               	movlw	-16
 23631  015DCA                     us1186999:
 23632  015DCA  006F FF7B FFE3     	movff	postinc2,plusw1
 23633  015DD0  28E8               	incf	wreg,w,c
 23634  015DD2  2E01               	decfsz	btemp^0,f,c
 23635  015DD4  D7FA               	bra	us1186999
 23636                           
 23637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 23638                           ;stkvar	_n @ sp[(-18)+2]
 23639  015DD6  0EF7               	movlw	-9
 23640  015DD8  AEE3               	btfss	plusw1,7,c
 23641  015DDA  D002               	goto	u11870
 23642  015DDC  0E01               	movlw	1
 23643  015DDE  D001               	goto	u11880
 23644  015DE0                     u11870:
 23645  015DE0  0E00               	movlw	0
 23646  015DE2                     u11880:
 23647  015DE2  6E0B               	movwf	(btemp+10)^0,c
 23648  015DE4  6A0C               	clrf	(btemp+11)^0,c
 23649                           
 23650                           ;stkvar	_s @ sp[(-18)+12]
 23651  015DE6  0EFA               	movlw	-6
 23652  015DE8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23653  015DEE  0EFB               	movlw	-5
 23654  015DF0  0060  F033  FFE3   	movff	btemp+11,plusw1
 23655                           
 23656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 23657                           ;stkvar	_s @ sp[(-18)+12]
 23658  015DF6  0EFA               	movlw	-6
 23659  015DF8  006F FF8C  F001    	movff	plusw1,btemp
 23660  015DFE  0EFB               	movlw	-5
 23661  015E00  50E3               	movf	plusw1,w,c
 23662  015E02  1001               	iorwf	btemp^0,w,c
 23663  015E04  B4D8               	btfsc	status,2,c
 23664  015E06  D025               	goto	u11900
 23665                           
 23666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 23667                           ;stkvar	_n @ sp[(-18)+2]
 23668                           ;stkvar	_n @ sp[(-18)+2]
 23669  015E08  0EF0               	movlw	-16
 23670  015E0A  6CE3               	negf	plusw1,c
 23671  015E0C  0EF1               	movlw	-15
 23672  015E0E  1EE3               	comf	plusw1,f,c
 23673  015E10  0EF2               	movlw	-14
 23674  015E12  1EE3               	comf	plusw1,f,c
 23675  015E14  0EF3               	movlw	-13
 23676  015E16  1EE3               	comf	plusw1,f,c
 23677  015E18  0EF4               	movlw	-12
 23678  015E1A  1EE3               	comf	plusw1,f,c
 23679  015E1C  0EF5               	movlw	-11
 23680  015E1E  1EE3               	comf	plusw1,f,c
 23681  015E20  0EF6               	movlw	-10
 23682  015E22  1EE3               	comf	plusw1,f,c
 23683  015E24  0EF7               	movlw	-9
 23684  015E26  1EE3               	comf	plusw1,f,c
 23685  015E28  E314               	bnc	u11900
 23686  015E2A  0EF1               	movlw	-15
 23687  015E2C  2AE3               	incf	plusw1,f,c
 23688  015E2E  E311               	bnc	u11900
 23689  015E30  0EF2               	movlw	-14
 23690  015E32  2AE3               	incf	plusw1,f,c
 23691  015E34  E30E               	bnc	u11900
 23692  015E36  0EF3               	movlw	-13
 23693  015E38  2AE3               	incf	plusw1,f,c
 23694  015E3A  E30B               	bnc	u11900
 23695  015E3C  0EF4               	movlw	-12
 23696  015E3E  2AE3               	incf	plusw1,f,c
 23697  015E40  E308               	bnc	u11900
 23698  015E42  0EF5               	movlw	-11
 23699  015E44  2AE3               	incf	plusw1,f,c
 23700  015E46  E305               	bnc	u11900
 23701  015E48  0EF6               	movlw	-10
 23702  015E4A  2AE3               	incf	plusw1,f,c
 23703  015E4C  E302               	bnc	u11900
 23704  015E4E  0EF7               	movlw	-9
 23705  015E50  2AE3               	incf	plusw1,f,c
 23706  015E52                     u11900:
 23707                           
 23708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 23709  015E52  AE3D               	btfss	(_prec+1)^0,7,c
 23710                           
 23711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 23712  015E54  923E               	bcf	_flags^0,1,c
 23713                           
 23714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 23715  015E56  BE3D               	btfsc	(_prec+1)^0,7,c
 23716  015E58  D005               	goto	u11920
 23717  015E5A  503D               	movf	(_prec+1)^0,w,c
 23718  015E5C  E110               	bnz	l13136
 23719  015E5E  043C               	decf	_prec^0,w,c
 23720  015E60  B0D8               	btfsc	status,0,c
 23721  015E62  D00D               	goto	l13136
 23722  015E64                     u11920:
 23723  015E64  0E01               	movlw	1
 23724  015E66  6E0B               	movwf	(btemp+10)^0,c
 23725  015E68  0E00               	movlw	0
 23726  015E6A  6E0C               	movwf	(btemp+11)^0,c
 23727                           
 23728                           ;stkvar	_p @ sp[(-18)+16]
 23729  015E6C  0EFE               	movlw	-2
 23730  015E6E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23731  015E74  0EFF               	movlw	-1
 23732  015E76  0060  F033  FFE3   	movff	btemp+11,plusw1
 23733  015E7C  D008               	goto	l2422
 23734  015E7E                     l13136:
 23735                           
 23736                           ;stkvar	_p @ sp[(-18)+16]
 23737  015E7E  0EFE               	movlw	-2
 23738  015E80  0060  F0F3  FFE3   	movff	_prec,plusw1
 23739  015E86  0EFF               	movlw	-1
 23740  015E88  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 23741  015E8E                     l2422:
 23742                           
 23743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 23744                           ;stkvar	_w @ sp[(-18)+14]
 23745  015E8E  0EFC               	movlw	-4
 23746  015E90  0060  F0EB  FFE3   	movff	_width,plusw1
 23747  015E96  0EFD               	movlw	-3
 23748  015E98  0060  F0EF  FFE3   	movff	_width+1,plusw1
 23749                           
 23750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 23751                           ;stkvar	_s @ sp[(-18)+12]
 23752  015E9E  0EFA               	movlw	-6
 23753  015EA0  006F FF8C  F001    	movff	plusw1,btemp
 23754  015EA6  0EFB               	movlw	-5
 23755  015EA8  50E3               	movf	plusw1,w,c
 23756  015EAA  1001               	iorwf	btemp^0,w,c
 23757  015EAC  A4D8               	btfss	status,2,c
 23758  015EAE  D002               	goto	u11940
 23759  015EB0  A43E               	btfss	_flags^0,2,c
 23760  015EB2  D00A               	goto	l13144
 23761  015EB4                     u11940:
 23762                           
 23763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 23764                           ;stkvar	_w @ sp[(-18)+14]
 23765  015EB4  50E1               	movf	fsr1l,w,c
 23766  015EB6  0FFC               	addlw	-4
 23767  015EB8  6ED9               	movwf	fsr2l,c
 23768  015EBA  50E2               	movf	fsr1h,w,c
 23769  015EBC  6EDA               	movwf	fsr2h,c
 23770  015EBE  0EFF               	movlw	255
 23771  015EC0  22DA               	addwfc	fsr2h,f,c
 23772  015EC2  06DE               	decf	postinc2,f,c
 23773  015EC4  0E00               	movlw	0
 23774  015EC6  5ADD               	subwfb	postdec2,f,c
 23775  015EC8                     l13144:
 23776                           
 23777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 23778  015EC8  0E4F               	movlw	79
 23779  015ECA  6E0B               	movwf	(btemp+10)^0,c
 23780  015ECC  0E00               	movlw	0
 23781  015ECE  6E0C               	movwf	(btemp+11)^0,c
 23782                           
 23783                           ;stkvar	_i @ sp[(-18)+10]
 23784  015ED0  0EF8               	movlw	-8
 23785  015ED2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23786  015ED8  0EF9               	movlw	-7
 23787  015EDA  0060  F033  FFE3   	movff	btemp+11,plusw1
 23788                           
 23789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 23790  015EE0  0102               	movlb	2	; () banked
 23791  015EE2  6B92               	clrf	(_dbuf+79)& (0+255),b
 23792                           
 23793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 23794  015EE4  D109               	goto	l13158
 23795  015EE6                     l13148:
 23796                           
 23797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 23798                           ;stkvar	_i @ sp[(-18)+10]
 23799  015EE6  50E1               	movf	fsr1l,w,c
 23800  015EE8  0FF8               	addlw	-8
 23801  015EEA  6ED9               	movwf	fsr2l,c
 23802  015EEC  50E2               	movf	fsr1h,w,c
 23803  015EEE  6EDA               	movwf	fsr2h,c
 23804  015EF0  0EFF               	movlw	255
 23805  015EF2  22DA               	addwfc	fsr2h,f,c
 23806  015EF4  06DE               	decf	postinc2,f,c
 23807  015EF6  0E00               	movlw	0
 23808  015EF8  5ADD               	subwfb	postdec2,f,c
 23809                           
 23810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 23811  015EFA  0E0A               	movlw	10
 23812  015EFC  6EE6               	movwf	postinc1,c
 23813  015EFE  0E00               	movlw	0
 23814  015F00  6EE6               	movwf	postinc1,c
 23815  015F02  0E00               	movlw	0
 23816  015F04  6EE6               	movwf	postinc1,c
 23817  015F06  0E00               	movlw	0
 23818  015F08  6EE6               	movwf	postinc1,c
 23819  015F0A  0E00               	movlw	0
 23820  015F0C  6EE6               	movwf	postinc1,c
 23821  015F0E  0E00               	movlw	0
 23822  015F10  6EE6               	movwf	postinc1,c
 23823  015F12  0E00               	movlw	0
 23824  015F14  6EE6               	movwf	postinc1,c
 23825  015F16  0E00               	movlw	0
 23826  015F18  6EE6               	movwf	postinc1,c
 23827                           
 23828                           ;stkvar	_n @ sp[(-26)+2]
 23829  015F1A  50E1               	movf	fsr1l,w,c
 23830  015F1C  0FE8               	addlw	-24
 23831  015F1E  6ED9               	movwf	fsr2l,c
 23832  015F20  50E2               	movf	fsr1h,w,c
 23833  015F22  6EDA               	movwf	fsr2h,c
 23834  015F24  0EFF               	movlw	255
 23835  015F26  22DA               	addwfc	fsr2h,f,c
 23836  015F28  006F FF7B FFE6     	movff	postinc2,postinc1
 23837  015F2E  006F FF7B FFE6     	movff	postinc2,postinc1
 23838  015F34  006F FF7B FFE6     	movff	postinc2,postinc1
 23839  015F3A  006F FF7B FFE6     	movff	postinc2,postinc1
 23840  015F40  006F FF7B FFE6     	movff	postinc2,postinc1
 23841  015F46  006F FF7B FFE6     	movff	postinc2,postinc1
 23842  015F4C  006F FF7B FFE6     	movff	postinc2,postinc1
 23843  015F52  006F FF7B FFE6     	movff	postinc2,postinc1
 23844  015F58  ECE5  F0C1         	call	___aomod	;wreg free
 23845  015F5C  52E5               	movf	postdec1,f,c
 23846  015F5E  006F FF9C  F018    	movff	indf1,btemp+23
 23847  015F64  52E5               	movf	postdec1,f,c
 23848  015F66  006F FF9C  F017    	movff	indf1,btemp+22
 23849  015F6C  52E5               	movf	postdec1,f,c
 23850  015F6E  006F FF9C  F016    	movff	indf1,btemp+21
 23851  015F74  52E5               	movf	postdec1,f,c
 23852  015F76  006F FF9C  F015    	movff	indf1,btemp+20
 23853  015F7C  52E5               	movf	postdec1,f,c
 23854  015F7E  006F FF9C  F014    	movff	indf1,btemp+19
 23855  015F84  52E5               	movf	postdec1,f,c
 23856  015F86  006F FF9C  F013    	movff	indf1,btemp+18
 23857  015F8C  52E5               	movf	postdec1,f,c
 23858  015F8E  006F FF9C  F012    	movff	indf1,btemp+17
 23859  015F94  52E5               	movf	postdec1,f,c
 23860  015F96  006F FF9C  F011    	movff	indf1,btemp+16
 23861  015F9C  0EF8               	movlw	248
 23862  015F9E  26E1               	addwf	fsr1l,f,c
 23863  015FA0  0EFF               	movlw	255
 23864  015FA2  22E2               	addwfc	fsr1h,f,c
 23865  015FA4  0060  F044  F00B   	movff	btemp+16,btemp+10
 23866  015FAA  0060  F048  F00C   	movff	btemp+17,btemp+11
 23867  015FB0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23868  015FB6  0060  F033  FFE6   	movff	btemp+11,postinc1
 23869  015FBC  EC93  F0E3         	call	_abs	;wreg free
 23870  015FC0  0E30               	movlw	48
 23871  015FC2  2601               	addwf	btemp^0,f,c
 23872                           
 23873                           ;stkvar	_i @ sp[(-18)+10]
 23874  015FC4  0EF8               	movlw	-8
 23875  015FC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 23876  015FCC  0EF9               	movlw	-7
 23877  015FCE  006F FF8C  F00C    	movff	plusw1,btemp+11
 23878  015FD4  0E43               	movlw	low _dbuf
 23879  015FD6  240B               	addwf	(btemp+10)^0,w,c
 23880  015FD8  6ED9               	movwf	fsr2l,c
 23881  015FDA  0E02               	movlw	high _dbuf
 23882  015FDC  200C               	addwfc	(btemp+11)^0,w,c
 23883  015FDE  6EDA               	movwf	fsr2h,c
 23884  015FE0  0060  F007  FFDF   	movff	btemp,indf2
 23885                           
 23886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 23887                           ;stkvar	_p @ sp[(-18)+16]
 23888  015FE6  50E1               	movf	fsr1l,w,c
 23889  015FE8  0FFE               	addlw	-2
 23890  015FEA  6ED9               	movwf	fsr2l,c
 23891  015FEC  50E2               	movf	fsr1h,w,c
 23892  015FEE  6EDA               	movwf	fsr2h,c
 23893  015FF0  0EFF               	movlw	255
 23894  015FF2  22DA               	addwfc	fsr2h,f,c
 23895  015FF4  06DE               	decf	postinc2,f,c
 23896  015FF6  0E00               	movlw	0
 23897  015FF8  5ADD               	subwfb	postdec2,f,c
 23898                           
 23899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 23900                           ;stkvar	_w @ sp[(-18)+14]
 23901  015FFA  50E1               	movf	fsr1l,w,c
 23902  015FFC  0FFC               	addlw	-4
 23903  015FFE  6ED9               	movwf	fsr2l,c
 23904  016000  50E2               	movf	fsr1h,w,c
 23905  016002  6EDA               	movwf	fsr2h,c
 23906  016004  0EFF               	movlw	255
 23907  016006  22DA               	addwfc	fsr2h,f,c
 23908  016008  06DE               	decf	postinc2,f,c
 23909  01600A  0E00               	movlw	0
 23910  01600C  5ADD               	subwfb	postdec2,f,c
 23911                           
 23912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 23913  01600E  0E0A               	movlw	10
 23914  016010  6EE6               	movwf	postinc1,c
 23915  016012  0E00               	movlw	0
 23916  016014  6EE6               	movwf	postinc1,c
 23917  016016  0E00               	movlw	0
 23918  016018  6EE6               	movwf	postinc1,c
 23919  01601A  0E00               	movlw	0
 23920  01601C  6EE6               	movwf	postinc1,c
 23921  01601E  0E00               	movlw	0
 23922  016020  6EE6               	movwf	postinc1,c
 23923  016022  0E00               	movlw	0
 23924  016024  6EE6               	movwf	postinc1,c
 23925  016026  0E00               	movlw	0
 23926  016028  6EE6               	movwf	postinc1,c
 23927  01602A  0E00               	movlw	0
 23928  01602C  6EE6               	movwf	postinc1,c
 23929                           
 23930                           ;stkvar	_n @ sp[(-26)+2]
 23931  01602E  50E1               	movf	fsr1l,w,c
 23932  016030  0FE8               	addlw	-24
 23933  016032  6ED9               	movwf	fsr2l,c
 23934  016034  50E2               	movf	fsr1h,w,c
 23935  016036  6EDA               	movwf	fsr2h,c
 23936  016038  0EFF               	movlw	255
 23937  01603A  22DA               	addwfc	fsr2h,f,c
 23938  01603C  006F FF7B FFE6     	movff	postinc2,postinc1
 23939  016042  006F FF7B FFE6     	movff	postinc2,postinc1
 23940  016048  006F FF7B FFE6     	movff	postinc2,postinc1
 23941  01604E  006F FF7B FFE6     	movff	postinc2,postinc1
 23942  016054  006F FF7B FFE6     	movff	postinc2,postinc1
 23943  01605A  006F FF7B FFE6     	movff	postinc2,postinc1
 23944  016060  006F FF7B FFE6     	movff	postinc2,postinc1
 23945  016066  006F FF7B FFE6     	movff	postinc2,postinc1
 23946  01606C  EC48  F0BE         	call	___aodiv	;wreg free
 23947  016070  52E5               	movf	postdec1,f,c
 23948  016072  006F FF9C  F018    	movff	indf1,btemp+23
 23949  016078  52E5               	movf	postdec1,f,c
 23950  01607A  006F FF9C  F017    	movff	indf1,btemp+22
 23951  016080  52E5               	movf	postdec1,f,c
 23952  016082  006F FF9C  F016    	movff	indf1,btemp+21
 23953  016088  52E5               	movf	postdec1,f,c
 23954  01608A  006F FF9C  F015    	movff	indf1,btemp+20
 23955  016090  52E5               	movf	postdec1,f,c
 23956  016092  006F FF9C  F014    	movff	indf1,btemp+19
 23957  016098  52E5               	movf	postdec1,f,c
 23958  01609A  006F FF9C  F013    	movff	indf1,btemp+18
 23959  0160A0  52E5               	movf	postdec1,f,c
 23960  0160A2  006F FF9C  F012    	movff	indf1,btemp+17
 23961  0160A8  52E5               	movf	postdec1,f,c
 23962  0160AA  006F FF9C  F011    	movff	indf1,btemp+16
 23963  0160B0  0EF8               	movlw	248
 23964  0160B2  26E1               	addwf	fsr1l,f,c
 23965  0160B4  0EFF               	movlw	255
 23966  0160B6  22E2               	addwfc	fsr1h,f,c
 23967                           
 23968                           ;stkvar	_n @ sp[(-18)+2]
 23969  0160B8  0EF0               	movlw	-16
 23970  0160BA  0060  F047  FFE3   	movff	btemp+16,plusw1
 23971  0160C0  0EF1               	movlw	-15
 23972  0160C2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 23973  0160C8  0EF2               	movlw	-14
 23974  0160CA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 23975  0160D0  0EF3               	movlw	-13
 23976  0160D2  0060  F053  FFE3   	movff	btemp+19,plusw1
 23977  0160D8  0EF4               	movlw	-12
 23978  0160DA  0060  F057  FFE3   	movff	btemp+20,plusw1
 23979  0160E0  0EF5               	movlw	-11
 23980  0160E2  0060  F05B  FFE3   	movff	btemp+21,plusw1
 23981  0160E8  0EF6               	movlw	-10
 23982  0160EA  0060  F05F  FFE3   	movff	btemp+22,plusw1
 23983  0160F0  0EF7               	movlw	-9
 23984  0160F2  0060  F063  FFE3   	movff	btemp+23,plusw1
 23985  0160F8                     l13158:
 23986                           
 23987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 23988                           ;stkvar	_i @ sp[(-18)+10]
 23989  0160F8  0EF9               	movlw	-7
 23990  0160FA  BEE3               	btfsc	plusw1,7,c
 23991  0160FC  D036               	goto	u11990
 23992  0160FE  0EF9               	movlw	-7
 23993  016100  50E3               	movf	plusw1,w,c
 23994  016102  E104               	bnz	u11950
 23995  016104  0EF8               	movlw	-8
 23996  016106  04E3               	decf	plusw1,w,c
 23997  016108  A0D8               	btfss	status,0,c
 23998  01610A  D02F               	goto	u11990
 23999  01610C                     u11950:
 24000                           
 24001                           ;stkvar	_n @ sp[(-18)+2]
 24002  01610C  0EF0               	movlw	-16
 24003  01610E  50E3               	movf	plusw1,w,c
 24004  016110  E115               	bnz	u11961
 24005  016112  0EF1               	movlw	-15
 24006  016114  50E3               	movf	plusw1,w,c
 24007  016116  E112               	bnz	u11961
 24008  016118  0EF2               	movlw	-14
 24009  01611A  50E3               	movf	plusw1,w,c
 24010  01611C  E10F               	bnz	u11961
 24011  01611E  0EF3               	movlw	-13
 24012  016120  50E3               	movf	plusw1,w,c
 24013  016122  E10C               	bnz	u11961
 24014  016124  0EF4               	movlw	-12
 24015  016126  50E3               	movf	plusw1,w,c
 24016  016128  E109               	bnz	u11961
 24017  01612A  0EF5               	movlw	-11
 24018  01612C  50E3               	movf	plusw1,w,c
 24019  01612E  E106               	bnz	u11961
 24020  016130  0EF6               	movlw	-10
 24021  016132  50E3               	movf	plusw1,w,c
 24022  016134  E103               	bnz	u11961
 24023  016136  0EF7               	movlw	-9
 24024  016138  50E3               	movf	plusw1,w,c
 24025  01613A  A4D8               	btfss	status,2,c
 24026  01613C                     u11961:
 24027  01613C  D6D4               	goto	l13148
 24028                           
 24029                           ;stkvar	_p @ sp[(-18)+16]
 24030  01613E  0EFF               	movlw	-1
 24031  016140  BEE3               	btfsc	plusw1,7,c
 24032  016142  D007               	goto	u11970
 24033  016144  0EFF               	movlw	-1
 24034  016146  50E3               	movf	plusw1,w,c
 24035  016148  E103               	bnz	u11971
 24036  01614A  0EFE               	movlw	-2
 24037  01614C  04E3               	decf	plusw1,w,c
 24038  01614E  B0D8               	btfsc	status,0,c
 24039  016150                     u11971:
 24040  016150  D6CA               	goto	l13148
 24041  016152                     u11970:
 24042                           
 24043                           ;stkvar	_w @ sp[(-18)+14]
 24044  016152  0EFD               	movlw	-3
 24045  016154  BEE3               	btfsc	plusw1,7,c
 24046  016156  D009               	goto	u11990
 24047  016158  0EFD               	movlw	-3
 24048  01615A  50E3               	movf	plusw1,w,c
 24049  01615C  E104               	bnz	u11980
 24050  01615E  0EFC               	movlw	-4
 24051  016160  04E3               	decf	plusw1,w,c
 24052  016162  A0D8               	btfss	status,0,c
 24053  016164  D002               	goto	u11990
 24054  016166                     u11980:
 24055  016166  B23E               	btfsc	_flags^0,1,c
 24056  016168  D6BE               	goto	l13148
 24057  01616A                     u11990:
 24058                           
 24059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 24060                           ;stkvar	_s @ sp[(-18)+12]
 24061  01616A  0EFA               	movlw	-6
 24062  01616C  006F FF8C  F001    	movff	plusw1,btemp
 24063  016172  0EFB               	movlw	-5
 24064  016174  50E3               	movf	plusw1,w,c
 24065  016176  1001               	iorwf	btemp^0,w,c
 24066  016178  A4D8               	btfss	status,2,c
 24067  01617A  D002               	goto	u12010
 24068  01617C  A43E               	btfss	_flags^0,2,c
 24069  01617E  D033               	goto	l13182
 24070  016180                     u12010:
 24071                           
 24072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 24073                           ;stkvar	_i @ sp[(-18)+10]
 24074  016180  50E1               	movf	fsr1l,w,c
 24075  016182  0FF8               	addlw	-8
 24076  016184  6ED9               	movwf	fsr2l,c
 24077  016186  50E2               	movf	fsr1h,w,c
 24078  016188  6EDA               	movwf	fsr2h,c
 24079  01618A  0EFF               	movlw	255
 24080  01618C  22DA               	addwfc	fsr2h,f,c
 24081  01618E  06DE               	decf	postinc2,f,c
 24082  016190  0E00               	movlw	0
 24083  016192  5ADD               	subwfb	postdec2,f,c
 24084                           
 24085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 24086                           ;stkvar	_s @ sp[(-18)+12]
 24087  016194  0EFA               	movlw	-6
 24088  016196  006F FF8C  F001    	movff	plusw1,btemp
 24089  01619C  0EFB               	movlw	-5
 24090  01619E  50E3               	movf	plusw1,w,c
 24091  0161A0  1001               	iorwf	btemp^0,w,c
 24092  0161A2  A4D8               	btfss	status,2,c
 24093  0161A4  D002               	goto	l13178
 24094  0161A6  0E2B               	movlw	43
 24095  0161A8  D001               	goto	L29
 24096  0161AA                     l13178:
 24097  0161AA  0E2D               	movlw	45
 24098  0161AC                     L29:
 24099  0161AC  6E0B               	movwf	(btemp+10)^0,c
 24100  0161AE  0E00               	movlw	0
 24101  0161B0  6E0C               	movwf	(btemp+11)^0,c
 24102                           
 24103                           ;stkvar	_dtoa$6143 @ sp[(-18)+0]
 24104  0161B2  0EEE               	movlw	-18
 24105  0161B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24106  0161BA  0EEF               	movlw	-17
 24107  0161BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 24108                           
 24109                           ;stkvar	_dtoa$6143 @ sp[(-18)+0]
 24110                           ;stkvar	_i @ sp[(-18)+10]
 24111  0161C2  0EF8               	movlw	-8
 24112  0161C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 24113  0161CA  0EF9               	movlw	-7
 24114  0161CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 24115  0161D2  0E43               	movlw	low _dbuf
 24116  0161D4  240B               	addwf	(btemp+10)^0,w,c
 24117  0161D6  6ED9               	movwf	fsr2l,c
 24118  0161D8  0E02               	movlw	high _dbuf
 24119  0161DA  200C               	addwfc	(btemp+11)^0,w,c
 24120  0161DC  6EDA               	movwf	fsr2h,c
 24121  0161DE  0EEE               	movlw	-18
 24122  0161E0  006F FF8F FFDF     	movff	plusw1,indf2
 24123  0161E6                     l13182:
 24124                           
 24125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 24126                           ;stkvar	_w @ sp[(-18)+14]
 24127  0161E6  0EFC               	movlw	-4
 24128  0161E8  006F FF8F FFE6     	movff	plusw1,postinc1
 24129  0161EE  006F FF8F FFE6     	movff	plusw1,postinc1
 24130                           
 24131                           ;stkvar	_i @ sp[(-20)+10]
 24132  0161F4  0E43               	movlw	low _dbuf
 24133  0161F6  6E0B               	movwf	(btemp+10)^0,c
 24134  0161F8  0E02               	movlw	high _dbuf
 24135  0161FA  6E0C               	movwf	(btemp+11)^0,c
 24136  0161FC  0EF6               	movlw	-10
 24137  0161FE  50E3               	movf	plusw1,w,c
 24138  016200  260B               	addwf	(btemp+10)^0,f,c
 24139  016202  0EF7               	movlw	-9
 24140  016204  50E3               	movf	plusw1,w,c
 24141  016206  220C               	addwfc	(btemp+11)^0,f,c
 24142  016208  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24143  01620E  0060  F033  FFE6   	movff	btemp+11,postinc1
 24144                           
 24145                           ;stkvar	_fp @ sp[(-22)+-2]
 24146  016214  0EE8               	movlw	-24
 24147  016216  006F FF8F FFE6     	movff	plusw1,postinc1
 24148  01621C  006F FF8F FFE6     	movff	plusw1,postinc1
 24149  016222  EC3B  F0D4         	call	_pad	;wreg free
 24150                           
 24151                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 24152  016226  0EE4               	movlw	228
 24153  016228  26E1               	addwf	fsr1l,f,c
 24154  01622A  0EFF               	movlw	255
 24155  01622C  22E2               	addwfc	fsr1h,f,c
 24156  01622E  0012               	return		;funcret
 24157  016230                     __end_of_dtoa:
 24158                           	opt callstack 0
 24159                           
 24160 ;; *************** function _abs *****************
 24161 ;; Defined at:
 24162 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 24163 ;; Parameters:    Size  Location     Type
 24164 ;;  a               2  [STACK] int 
 24165 ;; Auto vars:     Size  Location     Type
 24166 ;;		None
 24167 ;; Return value:  Size  Location     Type
 24168 ;;                  2  [STACK] int 
 24169 ;; Registers used:
 24170 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 24171 ;; Tracked objects:
 24172 ;;		On entry : 0/2
 24173 ;;		On exit  : 0/0
 24174 ;;		Unchanged: 0/0
 24175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24180 ;;Total ram usage:        0 bytes
 24181 ;; Hardware stack levels used:    1
 24182 ;; Hardware stack levels required when called:   15
 24183 ;; This function calls:
 24184 ;;		Nothing
 24185 ;; This function is called by:
 24186 ;;		_dtoa
 24187 ;; This function uses a reentrant model
 24188 ;;
 24189                           
 24190                           	psect	text87
 24191  01C726                     __ptext87:
 24192                           	opt callstack 0
 24193  01C726                     _abs:
 24194                           	opt callstack 0
 24195                           
 24196                           ;stkvar	_a @ sp[(0)+-2]
 24197                           
 24198                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24199                           ;incstack = 0
 24200 ;; hardware stack exceeded
 24201  01C726  0EFF               	movlw	-1
 24202  01C728  BEE3               	btfsc	plusw1,7,c
 24203  01C72A  D007               	goto	u6470
 24204  01C72C  0EFF               	movlw	-1
 24205  01C72E  50E3               	movf	plusw1,w,c
 24206  01C730  E112               	bnz	l8732
 24207  01C732  0EFE               	movlw	-2
 24208  01C734  04E3               	decf	plusw1,w,c
 24209  01C736  B0D8               	btfsc	status,0,c
 24210  01C738  D00E               	goto	l8732
 24211  01C73A                     u6470:
 24212                           
 24213                           ;stkvar	_a @ sp[(0)+-2]
 24214  01C73A  0EFE               	movlw	-2
 24215  01C73C  006F FF8C  F001    	movff	plusw1,btemp
 24216  01C742  1E01               	comf	btemp^0,f,c
 24217  01C744  0EFF               	movlw	-1
 24218  01C746  006F FF8C  F002    	movff	plusw1,btemp+1
 24219  01C74C  1E02               	comf	(btemp+1)^0,f,c
 24220  01C74E  2A01               	incf	btemp^0,f,c
 24221  01C750  B4D8               	btfsc	status,2,c
 24222  01C752  2A02               	incf	(btemp+1)^0,f,c
 24223  01C754  D008               	goto	l3348
 24224  01C756                     l8732:
 24225                           
 24226                           ;stkvar	_a @ sp[(0)+-2]
 24227  01C756  0EFE               	movlw	-2
 24228  01C758  006F FF8C  F001    	movff	plusw1,btemp
 24229  01C75E  0EFF               	movlw	-1
 24230  01C760  006F FF8C  F002    	movff	plusw1,btemp+1
 24231  01C766                     l3348:
 24232                           
 24233                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 24234  01C766  52E5               	movf	postdec1,f,c
 24235  01C768  52E5               	movf	postdec1,f,c
 24236  01C76A  0012               	return		;funcret
 24237  01C76C                     __end_of_abs:
 24238                           	opt callstack 0
 24239                           
 24240 ;; *************** function ___aomod *****************
 24241 ;; Defined at:
 24242 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 24243 ;; Parameters:    Size  Location     Type
 24244 ;;  dividend        8  [STACK] long long 
 24245 ;;  divisor         8  [STACK] long long 
 24246 ;; Auto vars:     Size  Location     Type
 24247 ;;  sign            1  [STACK] unsigned char 
 24248 ;;  counter         1  [STACK] unsigned char 
 24249 ;; Return value:  Size  Location     Type
 24250 ;;                  8  [STACK] long long 
 24251 ;; Registers used:
 24252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 24253 ;; Tracked objects:
 24254 ;;		On entry : 0/2
 24255 ;;		On exit  : 0/0
 24256 ;;		Unchanged: 0/0
 24257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24262 ;;Total ram usage:        0 bytes
 24263 ;; Hardware stack levels used:    1
 24264 ;; Hardware stack levels required when called:   15
 24265 ;; This function calls:
 24266 ;;		Nothing
 24267 ;; This function is called by:
 24268 ;;		_dtoa
 24269 ;; This function uses a reentrant model
 24270 ;;
 24271                           
 24272                           	psect	text88
 24273  0183CA                     __ptext88:
 24274                           	opt callstack 0
 24275  0183CA                     ___aomod:
 24276                           	opt callstack 0
 24277                           
 24278                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 24279  0183CA  52E6               	movf	postinc1,f,c
 24280  0183CC  52E6               	movf	postinc1,f,c
 24281                           
 24282                           ;stkvar	_sign @ sp[(-2)+0]
 24283                           
 24284                           ;incstack = 0
 24285 ;; hardware stack exceeded
 24286  0183CE  0EFE               	movlw	-2
 24287  0183D0  6AE3               	clrf	plusw1,c
 24288                           
 24289                           ;stkvar	_dividend @ sp[(-2)+-8]
 24290  0183D2  0EFD               	movlw	-3
 24291  0183D4  AEE3               	btfss	plusw1,7,c
 24292  0183D6  D028               	goto	l8890
 24293                           
 24294                           ;stkvar	_dividend @ sp[(-2)+-8]
 24295                           ;stkvar	_dividend @ sp[(-2)+-8]
 24296  0183D8  0EF6               	movlw	-10
 24297  0183DA  6CE3               	negf	plusw1,c
 24298  0183DC  0EF7               	movlw	-9
 24299  0183DE  1EE3               	comf	plusw1,f,c
 24300  0183E0  0EF8               	movlw	-8
 24301  0183E2  1EE3               	comf	plusw1,f,c
 24302  0183E4  0EF9               	movlw	-7
 24303  0183E6  1EE3               	comf	plusw1,f,c
 24304  0183E8  0EFA               	movlw	-6
 24305  0183EA  1EE3               	comf	plusw1,f,c
 24306  0183EC  0EFB               	movlw	-5
 24307  0183EE  1EE3               	comf	plusw1,f,c
 24308  0183F0  0EFC               	movlw	-4
 24309  0183F2  1EE3               	comf	plusw1,f,c
 24310  0183F4  0EFD               	movlw	-3
 24311  0183F6  1EE3               	comf	plusw1,f,c
 24312  0183F8  E314               	bnc	u6900
 24313  0183FA  0EF7               	movlw	-9
 24314  0183FC  2AE3               	incf	plusw1,f,c
 24315  0183FE  E311               	bnc	u6900
 24316  018400  0EF8               	movlw	-8
 24317  018402  2AE3               	incf	plusw1,f,c
 24318  018404  E30E               	bnc	u6900
 24319  018406  0EF9               	movlw	-7
 24320  018408  2AE3               	incf	plusw1,f,c
 24321  01840A  E30B               	bnc	u6900
 24322  01840C  0EFA               	movlw	-6
 24323  01840E  2AE3               	incf	plusw1,f,c
 24324  018410  E308               	bnc	u6900
 24325  018412  0EFB               	movlw	-5
 24326  018414  2AE3               	incf	plusw1,f,c
 24327  018416  E305               	bnc	u6900
 24328  018418  0EFC               	movlw	-4
 24329  01841A  2AE3               	incf	plusw1,f,c
 24330  01841C  E302               	bnc	u6900
 24331  01841E  0EFD               	movlw	-3
 24332  018420  2AE3               	incf	plusw1,f,c
 24333  018422                     u6900:
 24334                           
 24335                           ;stkvar	_sign @ sp[(-2)+0]
 24336  018422  0EFE               	movlw	-2
 24337  018424  6AE3               	clrf	plusw1,c
 24338  018426  2AE3               	incf	plusw1,f,c
 24339  018428                     l8890:
 24340                           
 24341                           ;stkvar	_divisor @ sp[(-2)+-16]
 24342  018428  0EF5               	movlw	-11
 24343  01842A  AEE3               	btfss	plusw1,7,c
 24344  01842C  D025               	goto	u6920
 24345                           
 24346                           ;stkvar	_divisor @ sp[(-2)+-16]
 24347                           ;stkvar	_divisor @ sp[(-2)+-16]
 24348  01842E  0EEE               	movlw	-18
 24349  018430  6CE3               	negf	plusw1,c
 24350  018432  0EEF               	movlw	-17
 24351  018434  1EE3               	comf	plusw1,f,c
 24352  018436  0EF0               	movlw	-16
 24353  018438  1EE3               	comf	plusw1,f,c
 24354  01843A  0EF1               	movlw	-15
 24355  01843C  1EE3               	comf	plusw1,f,c
 24356  01843E  0EF2               	movlw	-14
 24357  018440  1EE3               	comf	plusw1,f,c
 24358  018442  0EF3               	movlw	-13
 24359  018444  1EE3               	comf	plusw1,f,c
 24360  018446  0EF4               	movlw	-12
 24361  018448  1EE3               	comf	plusw1,f,c
 24362  01844A  0EF5               	movlw	-11
 24363  01844C  1EE3               	comf	plusw1,f,c
 24364  01844E  E314               	bnc	u6920
 24365  018450  0EEF               	movlw	-17
 24366  018452  2AE3               	incf	plusw1,f,c
 24367  018454  E311               	bnc	u6920
 24368  018456  0EF0               	movlw	-16
 24369  018458  2AE3               	incf	plusw1,f,c
 24370  01845A  E30E               	bnc	u6920
 24371  01845C  0EF1               	movlw	-15
 24372  01845E  2AE3               	incf	plusw1,f,c
 24373  018460  E30B               	bnc	u6920
 24374  018462  0EF2               	movlw	-14
 24375  018464  2AE3               	incf	plusw1,f,c
 24376  018466  E308               	bnc	u6920
 24377  018468  0EF3               	movlw	-13
 24378  01846A  2AE3               	incf	plusw1,f,c
 24379  01846C  E305               	bnc	u6920
 24380  01846E  0EF4               	movlw	-12
 24381  018470  2AE3               	incf	plusw1,f,c
 24382  018472  E302               	bnc	u6920
 24383  018474  0EF5               	movlw	-11
 24384  018476  2AE3               	incf	plusw1,f,c
 24385  018478                     u6920:
 24386                           
 24387                           ;stkvar	_divisor @ sp[(-2)+-16]
 24388  018478  0EEE               	movlw	-18
 24389  01847A  50E3               	movf	plusw1,w,c
 24390  01847C  E116               	bnz	u6930
 24391  01847E  0EEF               	movlw	-17
 24392  018480  50E3               	movf	plusw1,w,c
 24393  018482  E113               	bnz	u6930
 24394  018484  0EF0               	movlw	-16
 24395  018486  50E3               	movf	plusw1,w,c
 24396  018488  E110               	bnz	u6930
 24397  01848A  0EF1               	movlw	-15
 24398  01848C  50E3               	movf	plusw1,w,c
 24399  01848E  E10D               	bnz	u6930
 24400  018490  0EF2               	movlw	-14
 24401  018492  50E3               	movf	plusw1,w,c
 24402  018494  E10A               	bnz	u6930
 24403  018496  0EF3               	movlw	-13
 24404  018498  50E3               	movf	plusw1,w,c
 24405  01849A  E107               	bnz	u6930
 24406  01849C  0EF4               	movlw	-12
 24407  01849E  50E3               	movf	plusw1,w,c
 24408  0184A0  E104               	bnz	u6930
 24409  0184A2  0EF5               	movlw	-11
 24410  0184A4  50E3               	movf	plusw1,w,c
 24411  0184A6  B4D8               	btfsc	status,2,c
 24412  0184A8  D075               	goto	u6960
 24413  0184AA                     u6930:
 24414                           
 24415                           ;stkvar	_counter @ sp[(-2)+1]
 24416  0184AA  0EFF               	movlw	-1
 24417  0184AC  6AE3               	clrf	plusw1,c
 24418  0184AE  D012               	goto	L30
 24419  0184B0                     l8898:
 24420                           
 24421                           ;stkvar	_divisor @ sp[(-2)+-16]
 24422  0184B0  90D8               	bcf	status,0,c
 24423  0184B2  0EEE               	movlw	-18
 24424  0184B4  36E3               	rlcf	plusw1,f,c
 24425  0184B6  0EEF               	movlw	-17
 24426  0184B8  36E3               	rlcf	plusw1,f,c
 24427  0184BA  0EF0               	movlw	-16
 24428  0184BC  36E3               	rlcf	plusw1,f,c
 24429  0184BE  0EF1               	movlw	-15
 24430  0184C0  36E3               	rlcf	plusw1,f,c
 24431  0184C2  0EF2               	movlw	-14
 24432  0184C4  36E3               	rlcf	plusw1,f,c
 24433  0184C6  0EF3               	movlw	-13
 24434  0184C8  36E3               	rlcf	plusw1,f,c
 24435  0184CA  0EF4               	movlw	-12
 24436  0184CC  36E3               	rlcf	plusw1,f,c
 24437  0184CE  0EF5               	movlw	-11
 24438  0184D0  36E3               	rlcf	plusw1,f,c
 24439                           
 24440                           ;stkvar	_counter @ sp[(-2)+1]
 24441  0184D2  0EFF               	movlw	-1
 24442  0184D4                     L30:
 24443  0184D4  2AE3               	incf	plusw1,f,c
 24444                           
 24445                           ;stkvar	_divisor @ sp[(-2)+-16]
 24446  0184D6  0EF5               	movlw	-11
 24447  0184D8  AEE3               	btfss	plusw1,7,c
 24448  0184DA  D7EA               	goto	l8898
 24449  0184DC                     u6940:
 24450                           
 24451                           ;stkvar	_divisor @ sp[(-2)+-16]
 24452                           ;stkvar	_dividend @ sp[(-2)+-8]
 24453  0184DC  50E1               	movf	fsr1l,w,c
 24454  0184DE  0FF6               	addlw	-10
 24455  0184E0  6ED9               	movwf	fsr2l,c
 24456  0184E2  50E2               	movf	fsr1h,w,c
 24457  0184E4  6EDA               	movwf	fsr2h,c
 24458  0184E6  0EFF               	movlw	255
 24459  0184E8  22DA               	addwfc	fsr2h,f,c
 24460  0184EA  0EEE               	movlw	-18
 24461  0184EC  50E3               	movf	plusw1,w,c
 24462  0184EE  5CDE               	subwf	postinc2,w,c
 24463  0184F0  0EEF               	movlw	-17
 24464  0184F2  50E3               	movf	plusw1,w,c
 24465  0184F4  58DE               	subwfb	postinc2,w,c
 24466  0184F6  0EF0               	movlw	-16
 24467  0184F8  50E3               	movf	plusw1,w,c
 24468  0184FA  58DE               	subwfb	postinc2,w,c
 24469  0184FC  0EF1               	movlw	-15
 24470  0184FE  50E3               	movf	plusw1,w,c
 24471  018500  58DE               	subwfb	postinc2,w,c
 24472  018502  0EF2               	movlw	-14
 24473  018504  50E3               	movf	plusw1,w,c
 24474  018506  58DE               	subwfb	postinc2,w,c
 24475  018508  0EF3               	movlw	-13
 24476  01850A  50E3               	movf	plusw1,w,c
 24477  01850C  58DE               	subwfb	postinc2,w,c
 24478  01850E  0EF4               	movlw	-12
 24479  018510  50E3               	movf	plusw1,w,c
 24480  018512  58DE               	subwfb	postinc2,w,c
 24481  018514  0EF5               	movlw	-11
 24482  018516  50E3               	movf	plusw1,w,c
 24483  018518  58DE               	subwfb	postinc2,w,c
 24484  01851A  A0D8               	btfss	status,0,c
 24485  01851C  D01F               	goto	l8906
 24486                           
 24487                           ;stkvar	_divisor @ sp[(-2)+-16]
 24488                           ;stkvar	_dividend @ sp[(-2)+-8]
 24489  01851E  50E1               	movf	fsr1l,w,c
 24490  018520  0FF6               	addlw	-10
 24491  018522  6ED9               	movwf	fsr2l,c
 24492  018524  50E2               	movf	fsr1h,w,c
 24493  018526  6EDA               	movwf	fsr2h,c
 24494  018528  0EFF               	movlw	255
 24495  01852A  22DA               	addwfc	fsr2h,f,c
 24496  01852C  0EEE               	movlw	-18
 24497  01852E  50E3               	movf	plusw1,w,c
 24498  018530  5EDE               	subwf	postinc2,f,c
 24499  018532  0EEF               	movlw	-17
 24500  018534  50E3               	movf	plusw1,w,c
 24501  018536  5ADE               	subwfb	postinc2,f,c
 24502  018538  0EF0               	movlw	-16
 24503  01853A  50E3               	movf	plusw1,w,c
 24504  01853C  5ADE               	subwfb	postinc2,f,c
 24505  01853E  0EF1               	movlw	-15
 24506  018540  50E3               	movf	plusw1,w,c
 24507  018542  5ADE               	subwfb	postinc2,f,c
 24508  018544  0EF2               	movlw	-14
 24509  018546  50E3               	movf	plusw1,w,c
 24510  018548  5ADE               	subwfb	postinc2,f,c
 24511  01854A  0EF3               	movlw	-13
 24512  01854C  50E3               	movf	plusw1,w,c
 24513  01854E  5ADE               	subwfb	postinc2,f,c
 24514  018550  0EF4               	movlw	-12
 24515  018552  50E3               	movf	plusw1,w,c
 24516  018554  5ADE               	subwfb	postinc2,f,c
 24517  018556  0EF5               	movlw	-11
 24518  018558  50E3               	movf	plusw1,w,c
 24519  01855A  5ADE               	subwfb	postinc2,f,c
 24520  01855C                     l8906:
 24521                           
 24522                           ;stkvar	_divisor @ sp[(-2)+-16]
 24523  01855C  90D8               	bcf	status,0,c
 24524  01855E  0EF5               	movlw	-11
 24525  018560  32E3               	rrcf	plusw1,f,c
 24526  018562  0EF4               	movlw	-12
 24527  018564  32E3               	rrcf	plusw1,f,c
 24528  018566  0EF3               	movlw	-13
 24529  018568  32E3               	rrcf	plusw1,f,c
 24530  01856A  0EF2               	movlw	-14
 24531  01856C  32E3               	rrcf	plusw1,f,c
 24532  01856E  0EF1               	movlw	-15
 24533  018570  32E3               	rrcf	plusw1,f,c
 24534  018572  0EF0               	movlw	-16
 24535  018574  32E3               	rrcf	plusw1,f,c
 24536  018576  0EEF               	movlw	-17
 24537  018578  32E3               	rrcf	plusw1,f,c
 24538  01857A  0EEE               	movlw	-18
 24539  01857C  32E3               	rrcf	plusw1,f,c
 24540                           
 24541                           ;stkvar	_counter @ sp[(-2)+1]
 24542  01857E  0EFF               	movlw	-1
 24543  018580  50E3               	movf	plusw1,w,c
 24544  018582  6E01               	movwf	btemp^0,c
 24545  018584  0E01               	movlw	1
 24546  018586  5E01               	subwf	btemp^0,f,c
 24547  018588  0EFF               	movlw	-1
 24548  01858A  0060  F007  FFE3   	movff	btemp,plusw1
 24549  018590  A4D8               	btfss	status,2,c
 24550  018592  D7A4               	goto	u6940
 24551  018594                     u6960:
 24552                           
 24553                           ;stkvar	_sign @ sp[(-2)+0]
 24554  018594  0EFE               	movlw	-2
 24555  018596  50E3               	movf	plusw1,w,c
 24556  018598  B4D8               	btfsc	status,2,c
 24557  01859A  D025               	goto	u6980
 24558                           
 24559                           ;stkvar	_dividend @ sp[(-2)+-8]
 24560                           ;stkvar	_dividend @ sp[(-2)+-8]
 24561  01859C  0EF6               	movlw	-10
 24562  01859E  6CE3               	negf	plusw1,c
 24563  0185A0  0EF7               	movlw	-9
 24564  0185A2  1EE3               	comf	plusw1,f,c
 24565  0185A4  0EF8               	movlw	-8
 24566  0185A6  1EE3               	comf	plusw1,f,c
 24567  0185A8  0EF9               	movlw	-7
 24568  0185AA  1EE3               	comf	plusw1,f,c
 24569  0185AC  0EFA               	movlw	-6
 24570  0185AE  1EE3               	comf	plusw1,f,c
 24571  0185B0  0EFB               	movlw	-5
 24572  0185B2  1EE3               	comf	plusw1,f,c
 24573  0185B4  0EFC               	movlw	-4
 24574  0185B6  1EE3               	comf	plusw1,f,c
 24575  0185B8  0EFD               	movlw	-3
 24576  0185BA  1EE3               	comf	plusw1,f,c
 24577  0185BC  E314               	bnc	u6980
 24578  0185BE  0EF7               	movlw	-9
 24579  0185C0  2AE3               	incf	plusw1,f,c
 24580  0185C2  E311               	bnc	u6980
 24581  0185C4  0EF8               	movlw	-8
 24582  0185C6  2AE3               	incf	plusw1,f,c
 24583  0185C8  E30E               	bnc	u6980
 24584  0185CA  0EF9               	movlw	-7
 24585  0185CC  2AE3               	incf	plusw1,f,c
 24586  0185CE  E30B               	bnc	u6980
 24587  0185D0  0EFA               	movlw	-6
 24588  0185D2  2AE3               	incf	plusw1,f,c
 24589  0185D4  E308               	bnc	u6980
 24590  0185D6  0EFB               	movlw	-5
 24591  0185D8  2AE3               	incf	plusw1,f,c
 24592  0185DA  E305               	bnc	u6980
 24593  0185DC  0EFC               	movlw	-4
 24594  0185DE  2AE3               	incf	plusw1,f,c
 24595  0185E0  E302               	bnc	u6980
 24596  0185E2  0EFD               	movlw	-3
 24597  0185E4  2AE3               	incf	plusw1,f,c
 24598  0185E6                     u6980:
 24599                           
 24600                           ;stkvar	_dividend @ sp[(-2)+-8]
 24601  0185E6  0EF6               	movlw	246
 24602  0185E8  24E1               	addwf	fsr1l,w,c
 24603  0185EA  6ED9               	movwf	fsr2l,c
 24604  0185EC  0EFF               	movlw	255
 24605  0185EE  20E2               	addwfc	fsr1h,w,c
 24606  0185F0  6EDA               	movwf	fsr2h,c
 24607                           
 24608                           ;stkvar	?___aomod @ sp[(-2)+-8]
 24609  0185F2  0E08               	movlw	8
 24610  0185F4  6E01               	movwf	btemp^0,c
 24611  0185F6  0EF6               	movlw	-10
 24612  0185F8                     us699999:
 24613  0185F8  006F FF7B FFE3     	movff	postinc2,plusw1
 24614  0185FE  28E8               	incf	wreg,w,c
 24615  018600  2E01               	decfsz	btemp^0,f,c
 24616  018602  D7FA               	bra	us699999
 24617                           
 24618                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 24619  018604  52E5               	movf	postdec1,f,c
 24620  018606  52E5               	movf	postdec1,f,c
 24621  018608  0012               	return		;funcret
 24622  01860A                     __end_of___aomod:
 24623                           	opt callstack 0
 24624                           
 24625 ;; *************** function ___aodiv *****************
 24626 ;; Defined at:
 24627 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 24628 ;; Parameters:    Size  Location     Type
 24629 ;;  dividend        8  [STACK] long long 
 24630 ;;  divisor         8  [STACK] long long 
 24631 ;; Auto vars:     Size  Location     Type
 24632 ;;  quotient        8  [STACK] long long 
 24633 ;;  sign            1  [STACK] unsigned char 
 24634 ;;  counter         1  [STACK] unsigned char 
 24635 ;; Return value:  Size  Location     Type
 24636 ;;                  8  [STACK] long long 
 24637 ;; Registers used:
 24638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 24639 ;; Tracked objects:
 24640 ;;		On entry : 0/2
 24641 ;;		On exit  : 0/0
 24642 ;;		Unchanged: 0/0
 24643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24648 ;;Total ram usage:        0 bytes
 24649 ;; Hardware stack levels used:    1
 24650 ;; Hardware stack levels required when called:   15
 24651 ;; This function calls:
 24652 ;;		Nothing
 24653 ;; This function is called by:
 24654 ;;		_dtoa
 24655 ;; This function uses a reentrant model
 24656 ;;
 24657                           
 24658                           	psect	text89
 24659  017C90                     __ptext89:
 24660                           	opt callstack 0
 24661  017C90                     ___aodiv:
 24662                           	opt callstack 0
 24663                           
 24664                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 24665  017C90  0E0A               	movlw	10
 24666  017C92  26E1               	addwf	fsr1l,f,c
 24667  017C94  0E00               	movlw	0
 24668  017C96  22E2               	addwfc	fsr1h,f,c
 24669                           
 24670                           ;stkvar	_sign @ sp[(-10)+8]
 24671                           
 24672                           ;incstack = 0
 24673 ;; hardware stack exceeded
 24674  017C98  0EFE               	movlw	-2
 24675  017C9A  6AE3               	clrf	plusw1,c
 24676                           
 24677                           ;stkvar	_divisor @ sp[(-10)+-16]
 24678  017C9C  0EED               	movlw	-19
 24679  017C9E  AEE3               	btfss	plusw1,7,c
 24680  017CA0  D028               	goto	l8846
 24681                           
 24682                           ;stkvar	_divisor @ sp[(-10)+-16]
 24683                           ;stkvar	_divisor @ sp[(-10)+-16]
 24684  017CA2  0EE6               	movlw	-26
 24685  017CA4  6CE3               	negf	plusw1,c
 24686  017CA6  0EE7               	movlw	-25
 24687  017CA8  1EE3               	comf	plusw1,f,c
 24688  017CAA  0EE8               	movlw	-24
 24689  017CAC  1EE3               	comf	plusw1,f,c
 24690  017CAE  0EE9               	movlw	-23
 24691  017CB0  1EE3               	comf	plusw1,f,c
 24692  017CB2  0EEA               	movlw	-22
 24693  017CB4  1EE3               	comf	plusw1,f,c
 24694  017CB6  0EEB               	movlw	-21
 24695  017CB8  1EE3               	comf	plusw1,f,c
 24696  017CBA  0EEC               	movlw	-20
 24697  017CBC  1EE3               	comf	plusw1,f,c
 24698  017CBE  0EED               	movlw	-19
 24699  017CC0  1EE3               	comf	plusw1,f,c
 24700  017CC2  E314               	bnc	u6780
 24701  017CC4  0EE7               	movlw	-25
 24702  017CC6  2AE3               	incf	plusw1,f,c
 24703  017CC8  E311               	bnc	u6780
 24704  017CCA  0EE8               	movlw	-24
 24705  017CCC  2AE3               	incf	plusw1,f,c
 24706  017CCE  E30E               	bnc	u6780
 24707  017CD0  0EE9               	movlw	-23
 24708  017CD2  2AE3               	incf	plusw1,f,c
 24709  017CD4  E30B               	bnc	u6780
 24710  017CD6  0EEA               	movlw	-22
 24711  017CD8  2AE3               	incf	plusw1,f,c
 24712  017CDA  E308               	bnc	u6780
 24713  017CDC  0EEB               	movlw	-21
 24714  017CDE  2AE3               	incf	plusw1,f,c
 24715  017CE0  E305               	bnc	u6780
 24716  017CE2  0EEC               	movlw	-20
 24717  017CE4  2AE3               	incf	plusw1,f,c
 24718  017CE6  E302               	bnc	u6780
 24719  017CE8  0EED               	movlw	-19
 24720  017CEA  2AE3               	incf	plusw1,f,c
 24721  017CEC                     u6780:
 24722                           
 24723                           ;stkvar	_sign @ sp[(-10)+8]
 24724  017CEC  0EFE               	movlw	-2
 24725  017CEE  6AE3               	clrf	plusw1,c
 24726  017CF0  2AE3               	incf	plusw1,f,c
 24727  017CF2                     l8846:
 24728                           
 24729                           ;stkvar	_dividend @ sp[(-10)+-8]
 24730  017CF2  0EF5               	movlw	-11
 24731  017CF4  AEE3               	btfss	plusw1,7,c
 24732  017CF6  D027               	goto	l8852
 24733                           
 24734                           ;stkvar	_dividend @ sp[(-10)+-8]
 24735                           ;stkvar	_dividend @ sp[(-10)+-8]
 24736  017CF8  0EEE               	movlw	-18
 24737  017CFA  6CE3               	negf	plusw1,c
 24738  017CFC  0EEF               	movlw	-17
 24739  017CFE  1EE3               	comf	plusw1,f,c
 24740  017D00  0EF0               	movlw	-16
 24741  017D02  1EE3               	comf	plusw1,f,c
 24742  017D04  0EF1               	movlw	-15
 24743  017D06  1EE3               	comf	plusw1,f,c
 24744  017D08  0EF2               	movlw	-14
 24745  017D0A  1EE3               	comf	plusw1,f,c
 24746  017D0C  0EF3               	movlw	-13
 24747  017D0E  1EE3               	comf	plusw1,f,c
 24748  017D10  0EF4               	movlw	-12
 24749  017D12  1EE3               	comf	plusw1,f,c
 24750  017D14  0EF5               	movlw	-11
 24751  017D16  1EE3               	comf	plusw1,f,c
 24752  017D18  E314               	bnc	u6800
 24753  017D1A  0EEF               	movlw	-17
 24754  017D1C  2AE3               	incf	plusw1,f,c
 24755  017D1E  E311               	bnc	u6800
 24756  017D20  0EF0               	movlw	-16
 24757  017D22  2AE3               	incf	plusw1,f,c
 24758  017D24  E30E               	bnc	u6800
 24759  017D26  0EF1               	movlw	-15
 24760  017D28  2AE3               	incf	plusw1,f,c
 24761  017D2A  E30B               	bnc	u6800
 24762  017D2C  0EF2               	movlw	-14
 24763  017D2E  2AE3               	incf	plusw1,f,c
 24764  017D30  E308               	bnc	u6800
 24765  017D32  0EF3               	movlw	-13
 24766  017D34  2AE3               	incf	plusw1,f,c
 24767  017D36  E305               	bnc	u6800
 24768  017D38  0EF4               	movlw	-12
 24769  017D3A  2AE3               	incf	plusw1,f,c
 24770  017D3C  E302               	bnc	u6800
 24771  017D3E  0EF5               	movlw	-11
 24772  017D40  2AE3               	incf	plusw1,f,c
 24773  017D42                     u6800:
 24774                           
 24775                           ;stkvar	_sign @ sp[(-10)+8]
 24776  017D42  0EFE               	movlw	-2
 24777  017D44  70E3               	btg	plusw1,0,c
 24778  017D46                     l8852:
 24779                           
 24780                           ;stkvar	_quotient @ sp[(-10)+0]
 24781  017D46  0E07               	movlw	7
 24782  017D48  6E01               	movwf	btemp^0,c
 24783  017D4A  0EF6               	movlw	-10
 24784  017D4C                     u6811:
 24785  017D4C  6AE3               	clrf	plusw1,c
 24786  017D4E  2AE8               	incf	wreg,f,c
 24787  017D50  0601               	decf	btemp^0,f,c
 24788  017D52  E2FC               	bc	u6811
 24789                           
 24790                           ;stkvar	_divisor @ sp[(-10)+-16]
 24791  017D54  0EE6               	movlw	-26
 24792  017D56  50E3               	movf	plusw1,w,c
 24793  017D58  E116               	bnz	u6820
 24794  017D5A  0EE7               	movlw	-25
 24795  017D5C  50E3               	movf	plusw1,w,c
 24796  017D5E  E113               	bnz	u6820
 24797  017D60  0EE8               	movlw	-24
 24798  017D62  50E3               	movf	plusw1,w,c
 24799  017D64  E110               	bnz	u6820
 24800  017D66  0EE9               	movlw	-23
 24801  017D68  50E3               	movf	plusw1,w,c
 24802  017D6A  E10D               	bnz	u6820
 24803  017D6C  0EEA               	movlw	-22
 24804  017D6E  50E3               	movf	plusw1,w,c
 24805  017D70  E10A               	bnz	u6820
 24806  017D72  0EEB               	movlw	-21
 24807  017D74  50E3               	movf	plusw1,w,c
 24808  017D76  E107               	bnz	u6820
 24809  017D78  0EEC               	movlw	-20
 24810  017D7A  50E3               	movf	plusw1,w,c
 24811  017D7C  E104               	bnz	u6820
 24812  017D7E  0EED               	movlw	-19
 24813  017D80  50E3               	movf	plusw1,w,c
 24814  017D82  B4D8               	btfsc	status,2,c
 24815  017D84  D088               	goto	u6850
 24816  017D86                     u6820:
 24817                           
 24818                           ;stkvar	_counter @ sp[(-10)+9]
 24819  017D86  0EFF               	movlw	-1
 24820  017D88  6AE3               	clrf	plusw1,c
 24821  017D8A  D012               	goto	L31
 24822  017D8C                     l8858:
 24823                           
 24824                           ;stkvar	_divisor @ sp[(-10)+-16]
 24825  017D8C  90D8               	bcf	status,0,c
 24826  017D8E  0EE6               	movlw	-26
 24827  017D90  36E3               	rlcf	plusw1,f,c
 24828  017D92  0EE7               	movlw	-25
 24829  017D94  36E3               	rlcf	plusw1,f,c
 24830  017D96  0EE8               	movlw	-24
 24831  017D98  36E3               	rlcf	plusw1,f,c
 24832  017D9A  0EE9               	movlw	-23
 24833  017D9C  36E3               	rlcf	plusw1,f,c
 24834  017D9E  0EEA               	movlw	-22
 24835  017DA0  36E3               	rlcf	plusw1,f,c
 24836  017DA2  0EEB               	movlw	-21
 24837  017DA4  36E3               	rlcf	plusw1,f,c
 24838  017DA6  0EEC               	movlw	-20
 24839  017DA8  36E3               	rlcf	plusw1,f,c
 24840  017DAA  0EED               	movlw	-19
 24841  017DAC  36E3               	rlcf	plusw1,f,c
 24842                           
 24843                           ;stkvar	_counter @ sp[(-10)+9]
 24844  017DAE  0EFF               	movlw	-1
 24845  017DB0                     L31:
 24846  017DB0  2AE3               	incf	plusw1,f,c
 24847                           
 24848                           ;stkvar	_divisor @ sp[(-10)+-16]
 24849  017DB2  0EED               	movlw	-19
 24850  017DB4  AEE3               	btfss	plusw1,7,c
 24851  017DB6  D7EA               	goto	l8858
 24852  017DB8                     u6830:
 24853                           
 24854                           ;stkvar	_quotient @ sp[(-10)+0]
 24855  017DB8  90D8               	bcf	status,0,c
 24856  017DBA  0EF6               	movlw	-10
 24857  017DBC  36E3               	rlcf	plusw1,f,c
 24858  017DBE  0EF7               	movlw	-9
 24859  017DC0  36E3               	rlcf	plusw1,f,c
 24860  017DC2  0EF8               	movlw	-8
 24861  017DC4  36E3               	rlcf	plusw1,f,c
 24862  017DC6  0EF9               	movlw	-7
 24863  017DC8  36E3               	rlcf	plusw1,f,c
 24864  017DCA  0EFA               	movlw	-6
 24865  017DCC  36E3               	rlcf	plusw1,f,c
 24866  017DCE  0EFB               	movlw	-5
 24867  017DD0  36E3               	rlcf	plusw1,f,c
 24868  017DD2  0EFC               	movlw	-4
 24869  017DD4  36E3               	rlcf	plusw1,f,c
 24870  017DD6  0EFD               	movlw	-3
 24871  017DD8  36E3               	rlcf	plusw1,f,c
 24872                           
 24873                           ;stkvar	_divisor @ sp[(-10)+-16]
 24874                           ;stkvar	_dividend @ sp[(-10)+-8]
 24875  017DDA  50E1               	movf	fsr1l,w,c
 24876  017DDC  0FEE               	addlw	-18
 24877  017DDE  6ED9               	movwf	fsr2l,c
 24878  017DE0  50E2               	movf	fsr1h,w,c
 24879  017DE2  6EDA               	movwf	fsr2h,c
 24880  017DE4  0EFF               	movlw	255
 24881  017DE6  22DA               	addwfc	fsr2h,f,c
 24882  017DE8  0EE6               	movlw	-26
 24883  017DEA  50E3               	movf	plusw1,w,c
 24884  017DEC  5CDE               	subwf	postinc2,w,c
 24885  017DEE  0EE7               	movlw	-25
 24886  017DF0  50E3               	movf	plusw1,w,c
 24887  017DF2  58DE               	subwfb	postinc2,w,c
 24888  017DF4  0EE8               	movlw	-24
 24889  017DF6  50E3               	movf	plusw1,w,c
 24890  017DF8  58DE               	subwfb	postinc2,w,c
 24891  017DFA  0EE9               	movlw	-23
 24892  017DFC  50E3               	movf	plusw1,w,c
 24893  017DFE  58DE               	subwfb	postinc2,w,c
 24894  017E00  0EEA               	movlw	-22
 24895  017E02  50E3               	movf	plusw1,w,c
 24896  017E04  58DE               	subwfb	postinc2,w,c
 24897  017E06  0EEB               	movlw	-21
 24898  017E08  50E3               	movf	plusw1,w,c
 24899  017E0A  58DE               	subwfb	postinc2,w,c
 24900  017E0C  0EEC               	movlw	-20
 24901  017E0E  50E3               	movf	plusw1,w,c
 24902  017E10  58DE               	subwfb	postinc2,w,c
 24903  017E12  0EED               	movlw	-19
 24904  017E14  50E3               	movf	plusw1,w,c
 24905  017E16  58DE               	subwfb	postinc2,w,c
 24906  017E18  A0D8               	btfss	status,0,c
 24907  017E1A  D021               	goto	l8870
 24908                           
 24909                           ;stkvar	_divisor @ sp[(-10)+-16]
 24910                           ;stkvar	_dividend @ sp[(-10)+-8]
 24911  017E1C  50E1               	movf	fsr1l,w,c
 24912  017E1E  0FEE               	addlw	-18
 24913  017E20  6ED9               	movwf	fsr2l,c
 24914  017E22  50E2               	movf	fsr1h,w,c
 24915  017E24  6EDA               	movwf	fsr2h,c
 24916  017E26  0EFF               	movlw	255
 24917  017E28  22DA               	addwfc	fsr2h,f,c
 24918  017E2A  0EE6               	movlw	-26
 24919  017E2C  50E3               	movf	plusw1,w,c
 24920  017E2E  5EDE               	subwf	postinc2,f,c
 24921  017E30  0EE7               	movlw	-25
 24922  017E32  50E3               	movf	plusw1,w,c
 24923  017E34  5ADE               	subwfb	postinc2,f,c
 24924  017E36  0EE8               	movlw	-24
 24925  017E38  50E3               	movf	plusw1,w,c
 24926  017E3A  5ADE               	subwfb	postinc2,f,c
 24927  017E3C  0EE9               	movlw	-23
 24928  017E3E  50E3               	movf	plusw1,w,c
 24929  017E40  5ADE               	subwfb	postinc2,f,c
 24930  017E42  0EEA               	movlw	-22
 24931  017E44  50E3               	movf	plusw1,w,c
 24932  017E46  5ADE               	subwfb	postinc2,f,c
 24933  017E48  0EEB               	movlw	-21
 24934  017E4A  50E3               	movf	plusw1,w,c
 24935  017E4C  5ADE               	subwfb	postinc2,f,c
 24936  017E4E  0EEC               	movlw	-20
 24937  017E50  50E3               	movf	plusw1,w,c
 24938  017E52  5ADE               	subwfb	postinc2,f,c
 24939  017E54  0EED               	movlw	-19
 24940  017E56  50E3               	movf	plusw1,w,c
 24941  017E58  5ADE               	subwfb	postinc2,f,c
 24942                           
 24943                           ;stkvar	_quotient @ sp[(-10)+0]
 24944  017E5A  0EF6               	movlw	-10
 24945  017E5C  80E3               	bsf	plusw1,0,c
 24946  017E5E                     l8870:
 24947                           
 24948                           ;stkvar	_divisor @ sp[(-10)+-16]
 24949  017E5E  90D8               	bcf	status,0,c
 24950  017E60  0EED               	movlw	-19
 24951  017E62  32E3               	rrcf	plusw1,f,c
 24952  017E64  0EEC               	movlw	-20
 24953  017E66  32E3               	rrcf	plusw1,f,c
 24954  017E68  0EEB               	movlw	-21
 24955  017E6A  32E3               	rrcf	plusw1,f,c
 24956  017E6C  0EEA               	movlw	-22
 24957  017E6E  32E3               	rrcf	plusw1,f,c
 24958  017E70  0EE9               	movlw	-23
 24959  017E72  32E3               	rrcf	plusw1,f,c
 24960  017E74  0EE8               	movlw	-24
 24961  017E76  32E3               	rrcf	plusw1,f,c
 24962  017E78  0EE7               	movlw	-25
 24963  017E7A  32E3               	rrcf	plusw1,f,c
 24964  017E7C  0EE6               	movlw	-26
 24965  017E7E  32E3               	rrcf	plusw1,f,c
 24966                           
 24967                           ;stkvar	_counter @ sp[(-10)+9]
 24968  017E80  0EFF               	movlw	-1
 24969  017E82  50E3               	movf	plusw1,w,c
 24970  017E84  6E01               	movwf	btemp^0,c
 24971  017E86  0E01               	movlw	1
 24972  017E88  5E01               	subwf	btemp^0,f,c
 24973  017E8A  0EFF               	movlw	-1
 24974  017E8C  0060  F007  FFE3   	movff	btemp,plusw1
 24975  017E92  A4D8               	btfss	status,2,c
 24976  017E94  D791               	goto	u6830
 24977  017E96                     u6850:
 24978                           
 24979                           ;stkvar	_sign @ sp[(-10)+8]
 24980  017E96  0EFE               	movlw	-2
 24981  017E98  50E3               	movf	plusw1,w,c
 24982  017E9A  B4D8               	btfsc	status,2,c
 24983  017E9C  D025               	goto	u6870
 24984                           
 24985                           ;stkvar	_quotient @ sp[(-10)+0]
 24986                           ;stkvar	_quotient @ sp[(-10)+0]
 24987  017E9E  0EF6               	movlw	-10
 24988  017EA0  6CE3               	negf	plusw1,c
 24989  017EA2  0EF7               	movlw	-9
 24990  017EA4  1EE3               	comf	plusw1,f,c
 24991  017EA6  0EF8               	movlw	-8
 24992  017EA8  1EE3               	comf	plusw1,f,c
 24993  017EAA  0EF9               	movlw	-7
 24994  017EAC  1EE3               	comf	plusw1,f,c
 24995  017EAE  0EFA               	movlw	-6
 24996  017EB0  1EE3               	comf	plusw1,f,c
 24997  017EB2  0EFB               	movlw	-5
 24998  017EB4  1EE3               	comf	plusw1,f,c
 24999  017EB6  0EFC               	movlw	-4
 25000  017EB8  1EE3               	comf	plusw1,f,c
 25001  017EBA  0EFD               	movlw	-3
 25002  017EBC  1EE3               	comf	plusw1,f,c
 25003  017EBE  E314               	bnc	u6870
 25004  017EC0  0EF7               	movlw	-9
 25005  017EC2  2AE3               	incf	plusw1,f,c
 25006  017EC4  E311               	bnc	u6870
 25007  017EC6  0EF8               	movlw	-8
 25008  017EC8  2AE3               	incf	plusw1,f,c
 25009  017ECA  E30E               	bnc	u6870
 25010  017ECC  0EF9               	movlw	-7
 25011  017ECE  2AE3               	incf	plusw1,f,c
 25012  017ED0  E30B               	bnc	u6870
 25013  017ED2  0EFA               	movlw	-6
 25014  017ED4  2AE3               	incf	plusw1,f,c
 25015  017ED6  E308               	bnc	u6870
 25016  017ED8  0EFB               	movlw	-5
 25017  017EDA  2AE3               	incf	plusw1,f,c
 25018  017EDC  E305               	bnc	u6870
 25019  017EDE  0EFC               	movlw	-4
 25020  017EE0  2AE3               	incf	plusw1,f,c
 25021  017EE2  E302               	bnc	u6870
 25022  017EE4  0EFD               	movlw	-3
 25023  017EE6  2AE3               	incf	plusw1,f,c
 25024  017EE8                     u6870:
 25025                           
 25026                           ;stkvar	_quotient @ sp[(-10)+0]
 25027  017EE8  0EF6               	movlw	246
 25028  017EEA  24E1               	addwf	fsr1l,w,c
 25029  017EEC  6ED9               	movwf	fsr2l,c
 25030  017EEE  0EFF               	movlw	255
 25031  017EF0  20E2               	addwfc	fsr1h,w,c
 25032  017EF2  6EDA               	movwf	fsr2h,c
 25033                           
 25034                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 25035  017EF4  0E08               	movlw	8
 25036  017EF6  6E01               	movwf	btemp^0,c
 25037  017EF8  0EEE               	movlw	-18
 25038  017EFA                     us688999:
 25039  017EFA  006F FF7B FFE3     	movff	postinc2,plusw1
 25040  017F00  28E8               	incf	wreg,w,c
 25041  017F02  2E01               	decfsz	btemp^0,f,c
 25042  017F04  D7FA               	bra	us688999
 25043                           
 25044                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 25045  017F06  0EF6               	movlw	246
 25046  017F08  26E1               	addwf	fsr1l,f,c
 25047  017F0A  0EFF               	movlw	255
 25048  017F0C  22E2               	addwfc	fsr1h,f,c
 25049  017F0E  0012               	return		;funcret
 25050  017F10                     __end_of___aodiv:
 25051                           	opt callstack 0
 25052                           
 25053 ;; *************** function _ctoa *****************
 25054 ;; Defined at:
 25055 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25056 ;; Parameters:    Size  Location     Type
 25057 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25058 ;;		 -> f(6), NULL(0), 
 25059 ;;  c               1  [STACK] unsigned char 
 25060 ;; Auto vars:     Size  Location     Type
 25061 ;;  w               2  [STACK] int 
 25062 ;;  l               2    0        int 
 25063 ;; Return value:  Size  Location     Type
 25064 ;;                  2  [STACK] int 
 25065 ;; Registers used:
 25066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 25067 ;; Tracked objects:
 25068 ;;		On entry : 0/0
 25069 ;;		On exit  : 0/0
 25070 ;;		Unchanged: 0/0
 25071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25076 ;;Total ram usage:        0 bytes
 25077 ;; Hardware stack levels used:    1
 25078 ;; Hardware stack levels required when called:   20
 25079 ;; This function calls:
 25080 ;;		_pad
 25081 ;; This function is called by:
 25082 ;;		_vfpfcnvrt
 25083 ;; This function uses a reentrant model
 25084 ;;
 25085                           
 25086                           	psect	text90
 25087  01BB80                     __ptext90:
 25088                           	opt callstack 0
 25089  01BB80                     _ctoa:
 25090                           	opt callstack 0
 25091                           
 25092                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25093  01BB80  52E6               	movf	postinc1,f,c
 25094  01BB82  52E6               	movf	postinc1,f,c
 25095                           
 25096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 25097                           
 25098                           ;incstack = 0
 25099 ;; hardware stack exceeded
 25100  01BB84  503A               	movf	_width^0,w,c
 25101  01BB86  103B               	iorwf	(_width+1)^0,w,c
 25102  01BB88  A4D8               	btfss	status,2,c
 25103  01BB8A  D009               	goto	l13110
 25104                           
 25105                           ;stkvar	_w @ sp[(-2)+0]
 25106  01BB8C  0EFE               	movlw	-2
 25107  01BB8E  0060  F0EB  FFE3   	movff	_width,plusw1
 25108  01BB94  0EFF               	movlw	-1
 25109  01BB96  0060  F0EF  FFE3   	movff	_width+1,plusw1
 25110  01BB9C  D016               	goto	l13112
 25111  01BB9E                     l13110:
 25112  01BB9E  0EFF               	movlw	255
 25113  01BBA0  6E0B               	movwf	(btemp+10)^0,c
 25114  01BBA2  0EFF               	movlw	255
 25115  01BBA4  6E0C               	movwf	(btemp+11)^0,c
 25116  01BBA6  0060  F0E8  F009   	movff	_width,btemp+8
 25117  01BBAC  0060  F0EC  F00A   	movff	_width+1,btemp+9
 25118  01BBB2  500B               	movf	(btemp+10)^0,w,c
 25119  01BBB4  2609               	addwf	(btemp+8)^0,f,c
 25120  01BBB6  500C               	movf	(btemp+11)^0,w,c
 25121  01BBB8  220A               	addwfc	(btemp+9)^0,f,c
 25122                           
 25123                           ;stkvar	_w @ sp[(-2)+0]
 25124  01BBBA  0EFE               	movlw	-2
 25125  01BBBC  0060  F027  FFE3   	movff	btemp+8,plusw1
 25126  01BBC2  0EFF               	movlw	-1
 25127  01BBC4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25128  01BBCA                     l13112:
 25129                           
 25130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 25131                           ;stkvar	_c @ sp[(-2)+-3]
 25132  01BBCA  0EFB               	movlw	-5
 25133  01BBCC  006F FF8C  F243    	movff	plusw1,_dbuf
 25134                           
 25135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 25136  01BBD2  0102               	movlb	2	; () banked
 25137  01BBD4  6B44               	clrf	(_dbuf+1)& (0+255),b
 25138                           
 25139                           ; BSR set to: 2
 25140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 25141                           ;stkvar	_w @ sp[(-2)+0]
 25142  01BBD6  0EFE               	movlw	-2
 25143  01BBD8  006F FF8F FFE6     	movff	plusw1,postinc1
 25144  01BBDE  006F FF8F FFE6     	movff	plusw1,postinc1
 25145  01BBE4  0E43               	movlw	low _dbuf
 25146  01BBE6  6EE6               	movwf	postinc1,c
 25147  01BBE8  0E02               	movlw	high _dbuf
 25148  01BBEA  6EE6               	movwf	postinc1,c
 25149                           
 25150                           ;stkvar	_fp @ sp[(-6)+-2]
 25151  01BBEC  0EF8               	movlw	-8
 25152  01BBEE  006F FF8F FFE6     	movff	plusw1,postinc1
 25153  01BBF4  006F FF8F FFE6     	movff	plusw1,postinc1
 25154  01BBFA  EC3B  F0D4         	call	_pad	;wreg free
 25155                           
 25156                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 25157  01BBFE  0EFB               	movlw	251
 25158  01BC00  26E1               	addwf	fsr1l,f,c
 25159  01BC02  0EFF               	movlw	255
 25160  01BC04  22E2               	addwfc	fsr1h,f,c
 25161  01BC06  0012               	return		;funcret
 25162  01BC08                     __end_of_ctoa:
 25163                           	opt callstack 0
 25164                           
 25165 ;; *************** function _pad *****************
 25166 ;; Defined at:
 25167 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25168 ;; Parameters:    Size  Location     Type
 25169 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25170 ;;		 -> f(6), NULL(0), 
 25171 ;;  buf             2  [STACK] PTR unsigned char 
 25172 ;;		 -> dbuf(80), 
 25173 ;;  p               2  [STACK] int 
 25174 ;; Auto vars:     Size  Location     Type
 25175 ;;  w               2  [STACK] int 
 25176 ;;  i               2  [STACK] int 
 25177 ;; Return value:  Size  Location     Type
 25178 ;;                  2  [STACK] int 
 25179 ;; Registers used:
 25180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 25181 ;; Tracked objects:
 25182 ;;		On entry : 0/2
 25183 ;;		On exit  : 0/0
 25184 ;;		Unchanged: 0/0
 25185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25190 ;;Total ram usage:        0 bytes
 25191 ;; Hardware stack levels used:    1
 25192 ;; Hardware stack levels required when called:   19
 25193 ;; This function calls:
 25194 ;;		_fputc
 25195 ;;		_fputs
 25196 ;;		_strlen
 25197 ;; This function is called by:
 25198 ;;		_ctoa
 25199 ;;		_dtoa
 25200 ;;		_efgtoa
 25201 ;;		_utoa
 25202 ;;		_xtoa
 25203 ;; This function uses a reentrant model
 25204 ;;
 25205                           
 25206                           	psect	text91
 25207  01A876                     __ptext91:
 25208                           	opt callstack 0
 25209  01A876                     _pad:
 25210                           	opt callstack 0
 25211                           
 25212                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25213  01A876  52E6               	movf	postinc1,f,c
 25214  01A878  52E6               	movf	postinc1,f,c
 25215  01A87A  52E6               	movf	postinc1,f,c
 25216  01A87C  52E6               	movf	postinc1,f,c
 25217                           
 25218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 25219                           
 25220                           ;incstack = 0
 25221 ;; hardware stack exceeded
 25222  01A87E  A03E               	btfss	_flags^0,0,c
 25223  01A880  D010               	goto	l13072
 25224                           
 25225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 25226                           ;stkvar	_fp @ sp[(-4)+-2]
 25227  01A882  0EFA               	movlw	-6
 25228  01A884  006F FF8F FFE6     	movff	plusw1,postinc1
 25229  01A88A  006F FF8F FFE6     	movff	plusw1,postinc1
 25230                           
 25231                           ;stkvar	_buf @ sp[(-6)+-4]
 25232  01A890  0EF6               	movlw	-10
 25233  01A892  006F FF8F FFE6     	movff	plusw1,postinc1
 25234  01A898  006F FF8F FFE6     	movff	plusw1,postinc1
 25235  01A89E  EC52  F0DC         	call	_fputs	;wreg free
 25236  01A8A2                     l13072:
 25237                           
 25238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 25239                           ;stkvar	_p @ sp[(-4)+-6]
 25240  01A8A2  0EF7               	movlw	-9
 25241  01A8A4  BEE3               	btfsc	plusw1,7,c
 25242  01A8A6  D011               	goto	l13076
 25243                           
 25244                           ;stkvar	_p @ sp[(-4)+-6]
 25245                           ;stkvar	_w @ sp[(-4)+0]
 25246  01A8A8  0EF6               	movlw	-10
 25247  01A8AA  006F FF8C  F001    	movff	plusw1,btemp
 25248  01A8B0  0EFC               	movlw	-4
 25249  01A8B2  0060  F007  FFE3   	movff	btemp,plusw1
 25250  01A8B8  0EF7               	movlw	-9
 25251  01A8BA  006F FF8C  F001    	movff	plusw1,btemp
 25252  01A8C0  0EFD               	movlw	-3
 25253  01A8C2  0060  F007  FFE3   	movff	btemp,plusw1
 25254  01A8C8  D004               	goto	l2402
 25255  01A8CA                     l13076:
 25256                           
 25257                           ;stkvar	_w @ sp[(-4)+0]
 25258  01A8CA  0EFC               	movlw	-4
 25259  01A8CC  6AE3               	clrf	plusw1,c
 25260  01A8CE  0EFD               	movlw	-3
 25261  01A8D0  6AE3               	clrf	plusw1,c
 25262  01A8D2                     l2402:
 25263                           
 25264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 25265                           ;stkvar	_i @ sp[(-4)+2]
 25266  01A8D2  0EFE               	movlw	-2
 25267  01A8D4  6AE3               	clrf	plusw1,c
 25268  01A8D6  0EFF               	movlw	-1
 25269  01A8D8  6AE3               	clrf	plusw1,c
 25270                           
 25271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 25272  01A8DA  D01E               	goto	l13082
 25273  01A8DC                     l13078:
 25274                           
 25275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 25276                           ;stkvar	_fp @ sp[(-4)+-2]
 25277  01A8DC  0EFA               	movlw	-6
 25278  01A8DE  006F FF8F FFE6     	movff	plusw1,postinc1
 25279  01A8E4  006F FF8F FFE6     	movff	plusw1,postinc1
 25280  01A8EA  0E20               	movlw	32
 25281  01A8EC  6EE6               	movwf	postinc1,c
 25282  01A8EE  0E00               	movlw	0
 25283  01A8F0  6EE6               	movwf	postinc1,c
 25284  01A8F2  EC91  F0D2         	call	_fputc	;wreg free
 25285                           
 25286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 25287                           ;stkvar	_i @ sp[(-4)+2]
 25288  01A8F6  0EFE               	movlw	-2
 25289  01A8F8  50E3               	movf	plusw1,w,c
 25290  01A8FA  0F01               	addlw	1
 25291  01A8FC  6E01               	movwf	btemp^0,c
 25292  01A8FE  0EFE               	movlw	-2
 25293  01A900  0060  F007  FFE3   	movff	btemp,plusw1
 25294  01A906  6A01               	clrf	btemp^0,c
 25295  01A908  0EFF               	movlw	-1
 25296  01A90A  50E3               	movf	plusw1,w,c
 25297  01A90C  2001               	addwfc	btemp^0,w,c
 25298  01A90E  6E01               	movwf	btemp^0,c
 25299  01A910  0EFF               	movlw	-1
 25300  01A912  0060  F007  FFE3   	movff	btemp,plusw1
 25301  01A918                     l13082:
 25302                           
 25303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 25304                           ;stkvar	_w @ sp[(-4)+0]
 25305                           ;stkvar	_i @ sp[(-4)+2]
 25306  01A918  50E1               	movf	fsr1l,w,c
 25307  01A91A  0FFE               	addlw	-2
 25308  01A91C  6ED9               	movwf	fsr2l,c
 25309  01A91E  50E2               	movf	fsr1h,w,c
 25310  01A920  6EDA               	movwf	fsr2h,c
 25311  01A922  0EFF               	movlw	255
 25312  01A924  22DA               	addwfc	fsr2h,f,c
 25313  01A926  0EFC               	movlw	-4
 25314  01A928  50E3               	movf	plusw1,w,c
 25315  01A92A  5CDE               	subwf	postinc2,w,c
 25316  01A92C  50DE               	movf	postinc2,w,c
 25317  01A92E  0A80               	xorlw	128
 25318  01A930  6E01               	movwf	btemp^0,c
 25319  01A932  0EFD               	movlw	-3
 25320  01A934  50E3               	movf	plusw1,w,c
 25321  01A936  0A80               	xorlw	128
 25322  01A938  5801               	subwfb	btemp^0,w,c
 25323  01A93A  A0D8               	btfss	status,0,c
 25324  01A93C  D7CF               	goto	l13078
 25325                           
 25326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 25327  01A93E  B03E               	btfsc	_flags^0,0,c
 25328  01A940  D010               	goto	l13086
 25329                           
 25330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 25331                           ;stkvar	_fp @ sp[(-4)+-2]
 25332  01A942  0EFA               	movlw	-6
 25333  01A944  006F FF8F FFE6     	movff	plusw1,postinc1
 25334  01A94A  006F FF8F FFE6     	movff	plusw1,postinc1
 25335                           
 25336                           ;stkvar	_buf @ sp[(-6)+-4]
 25337  01A950  0EF6               	movlw	-10
 25338  01A952  006F FF8F FFE6     	movff	plusw1,postinc1
 25339  01A958  006F FF8F FFE6     	movff	plusw1,postinc1
 25340  01A95E  EC52  F0DC         	call	_fputs	;wreg free
 25341  01A962                     l13086:
 25342                           
 25343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 25344                           ;stkvar	_w @ sp[(-4)+0]
 25345                           ;stkvar	_buf @ sp[(-4)+-4]
 25346  01A962  0EF8               	movlw	-8
 25347  01A964  006F FF8F FFE6     	movff	plusw1,postinc1
 25348  01A96A  006F FF8F FFE6     	movff	plusw1,postinc1
 25349  01A970  EC01  F0DC         	call	_strlen	;wreg free
 25350  01A974  0EFC               	movlw	-4
 25351  01A976  50E3               	movf	plusw1,w,c
 25352  01A978  2601               	addwf	btemp^0,f,c
 25353  01A97A  0EFD               	movlw	-3
 25354  01A97C  50E3               	movf	plusw1,w,c
 25355  01A97E  2202               	addwfc	(btemp+1)^0,f,c
 25356                           
 25357                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 25358  01A980  0EF6               	movlw	246
 25359  01A982  26E1               	addwf	fsr1l,f,c
 25360  01A984  0EFF               	movlw	255
 25361  01A986  22E2               	addwfc	fsr1h,f,c
 25362  01A988  0012               	return		;funcret
 25363  01A98A                     __end_of_pad:
 25364                           	opt callstack 0
 25365                           
 25366 ;; *************** function _strlen *****************
 25367 ;; Defined at:
 25368 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 25369 ;; Parameters:    Size  Location     Type
 25370 ;;  s               2  [STACK] PTR const unsigned char 
 25371 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 25372 ;;		 -> spin(120), STR_63(9), STR_62(12), D.lcd(480), 
 25373 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 25374 ;;		 -> V(192), 
 25375 ;; Auto vars:     Size  Location     Type
 25376 ;;  a               2  [STACK] PTR const unsigned char 
 25377 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 25378 ;;		 -> spin(120), STR_63(9), STR_62(12), D.lcd(480), 
 25379 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 25380 ;;		 -> V(192), 
 25381 ;; Return value:  Size  Location     Type
 25382 ;;                  2  [STACK] unsigned int 
 25383 ;; Registers used:
 25384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 25385 ;; Tracked objects:
 25386 ;;		On entry : 0/0
 25387 ;;		On exit  : 0/0
 25388 ;;		Unchanged: 0/0
 25389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25394 ;;Total ram usage:        0 bytes
 25395 ;; Hardware stack levels used:    1
 25396 ;; Hardware stack levels required when called:   15
 25397 ;; This function calls:
 25398 ;;		Nothing
 25399 ;; This function is called by:
 25400 ;;		_eaDogM_WriteString
 25401 ;;		_spinners
 25402 ;;		_calc_bsoc
 25403 ;;		_pad
 25404 ;;		_stoa
 25405 ;; This function uses a reentrant model
 25406 ;;
 25407                           
 25408                           	psect	text92
 25409  01B802                     __ptext92:
 25410                           	opt callstack 0
 25411  01B802                     _strlen:
 25412                           	opt callstack 0
 25413                           
 25414                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25415  01B802  52E6               	movf	postinc1,f,c
 25416  01B804  52E6               	movf	postinc1,f,c
 25417                           
 25418                           ;stkvar	_s @ sp[(-2)+-2]
 25419                           
 25420                           ;incstack = 0
 25421 ;; hardware stack exceeded
 25422  01B806  0EFC               	movlw	-4
 25423  01B808  006F FF8C  F00B    	movff	plusw1,btemp+10
 25424  01B80E  0EFD               	movlw	-3
 25425  01B810  006F FF8C  F00C    	movff	plusw1,btemp+11
 25426                           
 25427                           ;stkvar	_a @ sp[(-2)+0]
 25428  01B816  0EFF               	movlw	-1
 25429  01B818  0060  F033  FFE3   	movff	btemp+11,plusw1
 25430  01B81E  0EFE               	movlw	-2
 25431  01B820  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25432  01B826  D011               	goto	l8422
 25433  01B828                     l8420:
 25434                           
 25435                           ;stkvar	_s @ sp[(-2)+-2]
 25436  01B828  0EFC               	movlw	-4
 25437  01B82A  50E3               	movf	plusw1,w,c
 25438  01B82C  0F01               	addlw	1
 25439  01B82E  6E01               	movwf	btemp^0,c
 25440  01B830  0EFC               	movlw	-4
 25441  01B832  0060  F007  FFE3   	movff	btemp,plusw1
 25442  01B838  6A01               	clrf	btemp^0,c
 25443  01B83A  0EFD               	movlw	-3
 25444  01B83C  50E3               	movf	plusw1,w,c
 25445  01B83E  2001               	addwfc	btemp^0,w,c
 25446  01B840  6E01               	movwf	btemp^0,c
 25447  01B842  0EFD               	movlw	-3
 25448  01B844  0060  F007  FFE3   	movff	btemp,plusw1
 25449  01B84A                     l8422:
 25450                           
 25451                           ;stkvar	_s @ sp[(-2)+-2]
 25452  01B84A  0EFC               	movlw	-4
 25453  01B84C  006F FF8F FFF6     	movff	plusw1,tblptrl
 25454  01B852  0EFD               	movlw	-3
 25455  01B854  006F FF8F FFF7     	movff	plusw1,tblptrh
 25456  01B85A  0E00               	movlw	low (__mediumconst shr (0+16))
 25457  01B85C  6EF8               	movwf	tblptru,c
 25458  01B85E  0E1F               	movlw	(high __ramtop+-1)
 25459  01B860  64F7               	cpfsgt	tblptrh,c
 25460  01B862  D003               	bra	u5897
 25461  01B864  0008               	tblrd		*
 25462  01B866  50F5               	movf	tablat,w,c
 25463  01B868  D007               	bra	u5890
 25464  01B86A                     u5897:
 25465  01B86A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 25466  01B870  006F FFDF FFEA     	movff	tblptrh,fsr0h
 25467  01B876  50EF               	movf	indf0,w,c
 25468  01B878                     u5890:
 25469  01B878  0900               	iorlw	0
 25470  01B87A  A4D8               	btfss	status,2,c
 25471  01B87C  D7D5               	goto	l8420
 25472                           
 25473                           ;stkvar	_a @ sp[(-2)+0]
 25474                           ;stkvar	_s @ sp[(-2)+-2]
 25475  01B87E  0EFC               	movlw	-4
 25476  01B880  006F FF8C  F001    	movff	plusw1,btemp
 25477  01B886  0EFD               	movlw	-3
 25478  01B888  006F FF8C  F002    	movff	plusw1,btemp+1
 25479  01B88E  0EFE               	movlw	-2
 25480  01B890  50E3               	movf	plusw1,w,c
 25481  01B892  5E01               	subwf	btemp^0,f,c
 25482  01B894  0EFF               	movlw	-1
 25483  01B896  50E3               	movf	plusw1,w,c
 25484  01B898  5A02               	subwfb	(btemp+1)^0,f,c
 25485                           
 25486                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 25487  01B89A  52E5               	movf	postdec1,f,c
 25488  01B89C  52E5               	movf	postdec1,f,c
 25489  01B89E  52E5               	movf	postdec1,f,c
 25490  01B8A0  52E5               	movf	postdec1,f,c
 25491  01B8A2  0012               	return		;funcret
 25492  01B8A4                     __end_of_strlen:
 25493                           	opt callstack 0
 25494                           
 25495 ;; *************** function _fputs *****************
 25496 ;; Defined at:
 25497 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 25498 ;; Parameters:    Size  Location     Type
 25499 ;;  s               2  [STACK] PTR const unsigned char 
 25500 ;;		 -> dbuf(80), 
 25501 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25502 ;;		 -> f(6), NULL(0), 
 25503 ;; Auto vars:     Size  Location     Type
 25504 ;;  i               2  [STACK] int 
 25505 ;;  c               1  [STACK] unsigned char 
 25506 ;; Return value:  Size  Location     Type
 25507 ;;                  2  [STACK] int 
 25508 ;; Registers used:
 25509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 25510 ;; Tracked objects:
 25511 ;;		On entry : 0/2
 25512 ;;		On exit  : 0/0
 25513 ;;		Unchanged: 0/0
 25514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25519 ;;Total ram usage:        0 bytes
 25520 ;; Hardware stack levels used:    1
 25521 ;; Hardware stack levels required when called:   18
 25522 ;; This function calls:
 25523 ;;		_fputc
 25524 ;; This function is called by:
 25525 ;;		_pad
 25526 ;; This function uses a reentrant model
 25527 ;;
 25528                           
 25529                           	psect	text93
 25530  01B8A4                     __ptext93:
 25531                           	opt callstack 0
 25532  01B8A4                     _fputs:
 25533                           	opt callstack 0
 25534                           
 25535                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25536  01B8A4  52E6               	movf	postinc1,f,c
 25537  01B8A6  52E6               	movf	postinc1,f,c
 25538  01B8A8  52E6               	movf	postinc1,f,c
 25539                           
 25540                           ;stkvar	_i @ sp[(-3)+0]
 25541                           
 25542                           ;incstack = 0
 25543 ;; hardware stack exceeded
 25544  01B8AA  0EFD               	movlw	-3
 25545  01B8AC  6AE3               	clrf	plusw1,c
 25546  01B8AE  0EFE               	movlw	-2
 25547  01B8B0  6AE3               	clrf	plusw1,c
 25548  01B8B2  D01F               	goto	l13024
 25549  01B8B4                     l13020:
 25550                           
 25551                           ;stkvar	_fp @ sp[(-3)+-4]
 25552  01B8B4  0EF9               	movlw	-7
 25553  01B8B6  006F FF8F FFE6     	movff	plusw1,postinc1
 25554  01B8BC  006F FF8F FFE6     	movff	plusw1,postinc1
 25555                           
 25556                           ;stkvar	_c @ sp[(-5)+2]
 25557  01B8C2  0EFD               	movlw	-3
 25558  01B8C4  50E3               	movf	plusw1,w,c
 25559  01B8C6  6EE6               	movwf	postinc1,c
 25560  01B8C8  0E00               	movlw	0
 25561  01B8CA  6EE6               	movwf	postinc1,c
 25562  01B8CC  EC91  F0D2         	call	_fputc	;wreg free
 25563                           
 25564                           ;stkvar	_i @ sp[(-3)+0]
 25565  01B8D0  0EFD               	movlw	-3
 25566  01B8D2  50E3               	movf	plusw1,w,c
 25567  01B8D4  0F01               	addlw	1
 25568  01B8D6  6E01               	movwf	btemp^0,c
 25569  01B8D8  0EFD               	movlw	-3
 25570  01B8DA  0060  F007  FFE3   	movff	btemp,plusw1
 25571  01B8E0  6A01               	clrf	btemp^0,c
 25572  01B8E2  0EFE               	movlw	-2
 25573  01B8E4  50E3               	movf	plusw1,w,c
 25574  01B8E6  2001               	addwfc	btemp^0,w,c
 25575  01B8E8  6E01               	movwf	btemp^0,c
 25576  01B8EA  0EFE               	movlw	-2
 25577  01B8EC  0060  F007  FFE3   	movff	btemp,plusw1
 25578  01B8F2                     l13024:
 25579                           
 25580                           ;stkvar	_i @ sp[(-3)+0]
 25581  01B8F2  0EFD               	movlw	-3
 25582  01B8F4  006F FF8C  F00B    	movff	plusw1,btemp+10
 25583  01B8FA  0EFE               	movlw	-2
 25584  01B8FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 25585                           
 25586                           ;stkvar	_s @ sp[(-3)+-2]
 25587  01B902  0EFB               	movlw	-5
 25588  01B904  006F FF8C  F009    	movff	plusw1,btemp+8
 25589  01B90A  0EFC               	movlw	-4
 25590  01B90C  006F FF8C  F00A    	movff	plusw1,btemp+9
 25591  01B912  500B               	movf	(btemp+10)^0,w,c
 25592  01B914  2409               	addwf	(btemp+8)^0,w,c
 25593  01B916  6ED9               	movwf	fsr2l,c
 25594  01B918  500C               	movf	(btemp+11)^0,w,c
 25595  01B91A  200A               	addwfc	(btemp+9)^0,w,c
 25596  01B91C  6EDA               	movwf	fsr2h,c
 25597  01B91E  50DF               	movf	indf2,w,c
 25598  01B920  6E0C               	movwf	(btemp+11)^0,c
 25599                           
 25600                           ;stkvar	_c @ sp[(-3)+2]
 25601  01B922  0EFF               	movlw	-1
 25602  01B924  0060  F033  FFE3   	movff	btemp+11,plusw1
 25603  01B92A  0EFF               	movlw	-1
 25604  01B92C  50E3               	movf	plusw1,w,c
 25605  01B92E  A4D8               	btfss	status,2,c
 25606  01B930  D7C1               	goto	l13020
 25607                           
 25608                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 25609  01B932  0EF9               	movlw	249
 25610  01B934  26E1               	addwf	fsr1l,f,c
 25611  01B936  0EFF               	movlw	255
 25612  01B938  22E2               	addwfc	fsr1h,f,c
 25613  01B93A  0012               	return		;funcret
 25614  01B93C                     __end_of_fputs:
 25615                           	opt callstack 0
 25616                           
 25617 ;; *************** function _fputc *****************
 25618 ;; Defined at:
 25619 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 25620 ;; Parameters:    Size  Location     Type
 25621 ;;  c               2  [STACK] int 
 25622 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25623 ;;		 -> f(6), NULL(0), 
 25624 ;; Auto vars:     Size  Location     Type
 25625 ;;		None
 25626 ;; Return value:  Size  Location     Type
 25627 ;;                  2  [STACK] int 
 25628 ;; Registers used:
 25629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 25630 ;; Tracked objects:
 25631 ;;		On entry : 0/0
 25632 ;;		On exit  : 0/0
 25633 ;;		Unchanged: 0/0
 25634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25639 ;;Total ram usage:        0 bytes
 25640 ;; Hardware stack levels used:    1
 25641 ;; Hardware stack levels required when called:   17
 25642 ;; This function calls:
 25643 ;;		_putch
 25644 ;; This function is called by:
 25645 ;;		_pad
 25646 ;;		_stoa
 25647 ;;		_vfpfcnvrt
 25648 ;;		_fputs
 25649 ;; This function uses a reentrant model
 25650 ;;
 25651                           
 25652                           	psect	text94
 25653  01A522                     __ptext94:
 25654                           	opt callstack 0
 25655  01A522                     _fputc:
 25656                           	opt callstack 0
 25657                           
 25658                           ;stkvar	_fp @ sp[(0)+-4]
 25659                           
 25660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25661                           ;incstack = 0
 25662 ;; hardware stack exceeded
 25663  01A522  0EFC               	movlw	-4
 25664  01A524  006F FF8C  F001    	movff	plusw1,btemp
 25665  01A52A  0EFD               	movlw	-3
 25666  01A52C  50E3               	movf	plusw1,w,c
 25667  01A52E  1001               	iorwf	btemp^0,w,c
 25668  01A530  B4D8               	btfsc	status,2,c
 25669  01A532  D009               	goto	u11690
 25670                           
 25671                           ;stkvar	_fp @ sp[(0)+-4]
 25672  01A534  0EFC               	movlw	-4
 25673  01A536  006F FF8C  F001    	movff	plusw1,btemp
 25674  01A53C  0EFD               	movlw	-3
 25675  01A53E  50E3               	movf	plusw1,w,c
 25676  01A540  1001               	iorwf	btemp^0,w,c
 25677  01A542  A4D8               	btfss	status,2,c
 25678  01A544  D006               	goto	l13008
 25679  01A546                     u11690:
 25680                           
 25681                           ;stkvar	_c @ sp[(0)+-2]
 25682  01A546  0EFE               	movlw	-2
 25683  01A548  50E3               	movf	plusw1,w,c
 25684  01A54A  6EE6               	movwf	postinc1,c
 25685  01A54C  ECEE  F0E8         	call	_putch	;wreg free
 25686  01A550  D075               	goto	l3448
 25687  01A552                     l13008:
 25688                           
 25689                           ;stkvar	_fp @ sp[(0)+-4]
 25690  01A552  0EFC               	movlw	-4
 25691  01A554  006F FF8C  F00B    	movff	plusw1,btemp+10
 25692  01A55A  0EFD               	movlw	-3
 25693  01A55C  006F FF8C  F00C    	movff	plusw1,btemp+11
 25694  01A562  0E04               	movlw	4
 25695  01A564  240B               	addwf	(btemp+10)^0,w,c
 25696  01A566  6ED9               	movwf	fsr2l,c
 25697  01A568  0E00               	movlw	0
 25698  01A56A  200C               	addwfc	(btemp+11)^0,w,c
 25699  01A56C  6EDA               	movwf	fsr2h,c
 25700  01A56E  50DE               	movf	postinc2,w,c
 25701  01A570  10DE               	iorwf	postinc2,w,c
 25702  01A572  B4D8               	btfsc	status,2,c
 25703  01A574  D026               	goto	u11710
 25704                           
 25705                           ;stkvar	_fp @ sp[(0)+-4]
 25706  01A576  0EFC               	movlw	-4
 25707  01A578  006F FF8C  F00B    	movff	plusw1,btemp+10
 25708  01A57E  0EFD               	movlw	-3
 25709  01A580  006F FF8C  F00C    	movff	plusw1,btemp+11
 25710  01A586  0E04               	movlw	4
 25711  01A588  240B               	addwf	(btemp+10)^0,w,c
 25712  01A58A  6ED9               	movwf	fsr2l,c
 25713  01A58C  0E00               	movlw	0
 25714  01A58E  200C               	addwfc	(btemp+11)^0,w,c
 25715  01A590  6EDA               	movwf	fsr2h,c
 25716                           
 25717                           ;stkvar	_fp @ sp[(0)+-4]
 25718  01A592  0EFC               	movlw	-4
 25719  01A594  006F FF8C  F00B    	movff	plusw1,btemp+10
 25720  01A59A  0EFD               	movlw	-3
 25721  01A59C  006F FF8C  F00C    	movff	plusw1,btemp+11
 25722  01A5A2  0E02               	movlw	2
 25723  01A5A4  240B               	addwf	(btemp+10)^0,w,c
 25724  01A5A6  6EE9               	movwf	fsr0l,c
 25725  01A5A8  0E00               	movlw	0
 25726  01A5AA  200C               	addwfc	(btemp+11)^0,w,c
 25727  01A5AC  6EEA               	movwf	fsr0h,c
 25728  01A5AE  50DE               	movf	postinc2,w,c
 25729  01A5B0  5CEE               	subwf	postinc0,w,c
 25730  01A5B2  50EE               	movf	postinc0,w,c
 25731  01A5B4  0A80               	xorlw	128
 25732  01A5B6  6E01               	movwf	btemp^0,c
 25733  01A5B8  50DE               	movf	postinc2,w,c
 25734  01A5BA  0A80               	xorlw	128
 25735  01A5BC  5801               	subwfb	btemp^0,w,c
 25736  01A5BE  B0D8               	btfsc	status,0,c
 25737  01A5C0  D03D               	goto	l3448
 25738  01A5C2                     u11710:
 25739                           
 25740                           ;stkvar	_c @ sp[(0)+-2]
 25741                           ;stkvar	_fp @ sp[(0)+-4]
 25742  01A5C2  0EFC               	movlw	-4
 25743  01A5C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 25744  01A5CA  0EFD               	movlw	-3
 25745  01A5CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 25746  01A5D2  0E02               	movlw	2
 25747  01A5D4  240B               	addwf	(btemp+10)^0,w,c
 25748  01A5D6  6ED9               	movwf	fsr2l,c
 25749  01A5D8  0E00               	movlw	0
 25750  01A5DA  200C               	addwfc	(btemp+11)^0,w,c
 25751  01A5DC  6EDA               	movwf	fsr2h,c
 25752  01A5DE  006F FF78  F00B    	movff	postinc2,btemp+10
 25753  01A5E4  006F FF74  F00C    	movff	postdec2,btemp+11
 25754                           
 25755                           ;stkvar	_fp @ sp[(0)+-4]
 25756  01A5EA  0EFC               	movlw	-4
 25757  01A5EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 25758  01A5F2  0EFD               	movlw	-3
 25759  01A5F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 25760  01A5FA  006F FF78  F009    	movff	postinc2,btemp+8
 25761  01A600  006F FF74  F00A    	movff	postdec2,btemp+9
 25762  01A606  500B               	movf	(btemp+10)^0,w,c
 25763  01A608  2409               	addwf	(btemp+8)^0,w,c
 25764  01A60A  6ED9               	movwf	fsr2l,c
 25765  01A60C  500C               	movf	(btemp+11)^0,w,c
 25766  01A60E  200A               	addwfc	(btemp+9)^0,w,c
 25767  01A610  6EDA               	movwf	fsr2h,c
 25768  01A612  0EFE               	movlw	-2
 25769  01A614  006F FF8F FFDF     	movff	plusw1,indf2
 25770                           
 25771                           ;stkvar	_fp @ sp[(0)+-4]
 25772  01A61A  0EFC               	movlw	-4
 25773  01A61C  006F FF8C  F00B    	movff	plusw1,btemp+10
 25774  01A622  0EFD               	movlw	-3
 25775  01A624  006F FF8C  F00C    	movff	plusw1,btemp+11
 25776  01A62A  0E02               	movlw	2
 25777  01A62C  240B               	addwf	(btemp+10)^0,w,c
 25778  01A62E  6ED9               	movwf	fsr2l,c
 25779  01A630  0E00               	movlw	0
 25780  01A632  200C               	addwfc	(btemp+11)^0,w,c
 25781  01A634  6EDA               	movwf	fsr2h,c
 25782  01A636  2ADE               	incf	postinc2,f,c
 25783  01A638  0E00               	movlw	0
 25784  01A63A  22DD               	addwfc	postdec2,f,c
 25785  01A63C                     l3448:
 25786                           
 25787                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 25788  01A63C  52E5               	movf	postdec1,f,c
 25789  01A63E  52E5               	movf	postdec1,f,c
 25790  01A640  52E5               	movf	postdec1,f,c
 25791  01A642  52E5               	movf	postdec1,f,c
 25792  01A644  0012               	return		;funcret
 25793  01A646                     __end_of_fputc:
 25794                           	opt callstack 0
 25795                           
 25796 ;; *************** function _putch *****************
 25797 ;; Defined at:
 25798 ;;		line 421 in file "eadog.c"
 25799 ;; Parameters:    Size  Location     Type
 25800 ;;  c               1  [STACK] unsigned char 
 25801 ;; Auto vars:     Size  Location     Type
 25802 ;;		None
 25803 ;; Return value:  Size  Location     Type
 25804 ;;                  1  [STACK] void 
 25805 ;; Registers used:
 25806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25807 ;; Tracked objects:
 25808 ;;		On entry : 0/0
 25809 ;;		On exit  : 0/0
 25810 ;;		Unchanged: 0/0
 25811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25816 ;;Total ram usage:        0 bytes
 25817 ;; Hardware stack levels used:    1
 25818 ;; Hardware stack levels required when called:   16
 25819 ;; This function calls:
 25820 ;;		_ringBufS_put_dma
 25821 ;; This function is called by:
 25822 ;;		_fputc
 25823 ;; This function uses a reentrant model
 25824 ;;
 25825                           
 25826                           	psect	text95
 25827  01D1DC                     __ptext95:
 25828                           	opt callstack 0
 25829  01D1DC                     _putch:
 25830                           	opt callstack 0
 25831                           
 25832                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 25833                           ;stkvar	_c @ sp[(0)+-1]
 25834                           
 25835                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25836                           ;incstack = 0
 25837 ;; hardware stack exceeded
 25838  01D1DC  0EFF               	movlw	-1
 25839  01D1DE  50E3               	movf	plusw1,w,c
 25840  01D1E0  6EE6               	movwf	postinc1,c
 25841  01D1E2  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 25842  01D1E8  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 25843  01D1EE  EC05  F0DB         	call	_ringBufS_put_dma	;wreg free
 25844                           
 25845                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 25846  01D1F2  52E5               	movf	postdec1,f,c
 25847  01D1F4  0012               	return		;funcret
 25848  01D1F6                     __end_of_putch:
 25849                           	opt callstack 0
 25850                           
 25851 ;; *************** function _ringBufS_put_dma *****************
 25852 ;; Defined at:
 25853 ;;		line 67 in file "ringbufs.c"
 25854 ;; Parameters:    Size  Location     Type
 25855 ;;  _this           2  [STACK] PTR struct ringBufS_t
 25856 ;;		 -> ring_buf1(67), 
 25857 ;;  c               1  [STACK] const unsigned char 
 25858 ;; Auto vars:     Size  Location     Type
 25859 ;;		None
 25860 ;; Return value:  Size  Location     Type
 25861 ;;                  1  [STACK] void 
 25862 ;; Registers used:
 25863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25864 ;; Tracked objects:
 25865 ;;		On entry : 0/0
 25866 ;;		On exit  : 0/0
 25867 ;;		Unchanged: 0/0
 25868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25873 ;;Total ram usage:        0 bytes
 25874 ;; Hardware stack levels used:    1
 25875 ;; Hardware stack levels required when called:   15
 25876 ;; This function calls:
 25877 ;;		Nothing
 25878 ;; This function is called by:
 25879 ;;		_putch
 25880 ;; This function uses a reentrant model
 25881 ;;
 25882                           
 25883                           	psect	text96
 25884  01B60A                     __ptext96:
 25885                           	opt callstack 0
 25886  01B60A                     _ringBufS_put_dma:
 25887                           	opt callstack 0
 25888                           
 25889                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 25890                           ;stkvar	__this @ sp[(0)+-2]
 25891                           
 25892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25893                           ;incstack = 0
 25894 ;; hardware stack exceeded
 25895  01B60A  0EFE               	movlw	-2
 25896  01B60C  006F FF8C  F00B    	movff	plusw1,btemp+10
 25897  01B612  0EFF               	movlw	-1
 25898  01B614  006F FF8C  F00C    	movff	plusw1,btemp+11
 25899  01B61A  0E42               	movlw	66
 25900  01B61C  240B               	addwf	(btemp+10)^0,w,c
 25901  01B61E  6ED9               	movwf	fsr2l,c
 25902  01B620  0E00               	movlw	0
 25903  01B622  200C               	addwfc	(btemp+11)^0,w,c
 25904  01B624  6EDA               	movwf	fsr2h,c
 25905  01B626  0E40               	movlw	64
 25906  01B628  60DF               	cpfslt	indf2,c
 25907  01B62A  D040               	goto	l1622
 25908                           
 25909                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 25910                           ;stkvar	_c @ sp[(0)+-3]
 25911                           ;stkvar	__this @ sp[(0)+-2]
 25912  01B62C  0EFE               	movlw	-2
 25913  01B62E  006F FF8C  F00B    	movff	plusw1,btemp+10
 25914  01B634  0EFF               	movlw	-1
 25915  01B636  006F FF8C  F00C    	movff	plusw1,btemp+11
 25916  01B63C  0E40               	movlw	64
 25917  01B63E  240B               	addwf	(btemp+10)^0,w,c
 25918  01B640  6ED9               	movwf	fsr2l,c
 25919  01B642  0E00               	movlw	0
 25920  01B644  200C               	addwfc	(btemp+11)^0,w,c
 25921  01B646  6EDA               	movwf	fsr2h,c
 25922  01B648  50DF               	movf	indf2,w,c
 25923  01B64A  6E0C               	movwf	(btemp+11)^0,c
 25924                           
 25925                           ;stkvar	__this @ sp[(0)+-2]
 25926  01B64C  0EFE               	movlw	-2
 25927  01B64E  006F FF8C  F009    	movff	plusw1,btemp+8
 25928  01B654  0EFF               	movlw	-1
 25929  01B656  006F FF8C  F00A    	movff	plusw1,btemp+9
 25930  01B65C  500C               	movf	(btemp+11)^0,w,c
 25931  01B65E  2409               	addwf	(btemp+8)^0,w,c
 25932  01B660  6ED9               	movwf	fsr2l,c
 25933  01B662  0E00               	movlw	0
 25934  01B664  200A               	addwfc	(btemp+9)^0,w,c
 25935  01B666  6EDA               	movwf	fsr2h,c
 25936  01B668  0EFD               	movlw	-3
 25937  01B66A  006F FF8F FFDF     	movff	plusw1,indf2
 25938                           
 25939                           ;ringbufs.c: 71:   ++_this->head;
 25940                           ;stkvar	__this @ sp[(0)+-2]
 25941  01B670  0EFE               	movlw	-2
 25942  01B672  006F FF8C  F00B    	movff	plusw1,btemp+10
 25943  01B678  0EFF               	movlw	-1
 25944  01B67A  006F FF8C  F00C    	movff	plusw1,btemp+11
 25945  01B680  0E40               	movlw	64
 25946  01B682  240B               	addwf	(btemp+10)^0,w,c
 25947  01B684  6ED9               	movwf	fsr2l,c
 25948  01B686  0E00               	movlw	0
 25949  01B688  200C               	addwfc	(btemp+11)^0,w,c
 25950  01B68A  6EDA               	movwf	fsr2h,c
 25951  01B68C  2ADF               	incf	indf2,f,c
 25952                           
 25953                           ;ringbufs.c: 72:   ++_this->count;
 25954                           ;stkvar	__this @ sp[(0)+-2]
 25955  01B68E  0EFE               	movlw	-2
 25956  01B690  006F FF8C  F00B    	movff	plusw1,btemp+10
 25957  01B696  0EFF               	movlw	-1
 25958  01B698  006F FF8C  F00C    	movff	plusw1,btemp+11
 25959  01B69E  0E42               	movlw	66
 25960  01B6A0  240B               	addwf	(btemp+10)^0,w,c
 25961  01B6A2  6ED9               	movwf	fsr2l,c
 25962  01B6A4  0E00               	movlw	0
 25963  01B6A6  200C               	addwfc	(btemp+11)^0,w,c
 25964  01B6A8  6EDA               	movwf	fsr2h,c
 25965  01B6AA  2ADF               	incf	indf2,f,c
 25966  01B6AC                     l1622:
 25967                           
 25968                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 25969  01B6AC  52E5               	movf	postdec1,f,c
 25970  01B6AE  52E5               	movf	postdec1,f,c
 25971  01B6B0  52E5               	movf	postdec1,f,c
 25972  01B6B2  0012               	return		;funcret
 25973  01B6B4                     __end_of_ringBufS_put_dma:
 25974                           	opt callstack 0
 25975                           
 25976 ;; *************** function _atoi *****************
 25977 ;; Defined at:
 25978 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 25979 ;; Parameters:    Size  Location     Type
 25980 ;;  s               2  [STACK] PTR const unsigned char 
 25981 ;;		 -> STR_81(127), STR_79(3), STR_78(3), STR_77(19), 
 25982 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 25983 ;;		 -> STR_72(19), STR_71(24), STR_70(15), STR_69(15), 
 25984 ;;		 -> STR_68(15), STR_67(10), STR_66(10), STR_65(19), 
 25985 ;;		 -> STR_64(19), STR_61(3), STR_60(3), STR_59(21), 
 25986 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 25987 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 25988 ;;		 -> STR_50(20), STR_49(20), STR_48(21), STR_47(21), 
 25989 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 25990 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 25991 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 25992 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 25993 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 25994 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 25995 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 25996 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 25997 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 25998 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 25999 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 26000 ;;		 -> STR_1(21), 
 26001 ;; Auto vars:     Size  Location     Type
 26002 ;;  n               2  [STACK] int 
 26003 ;;  neg             2  [STACK] int 
 26004 ;; Return value:  Size  Location     Type
 26005 ;;                  2  [STACK] int 
 26006 ;; Registers used:
 26007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 26008 ;; Tracked objects:
 26009 ;;		On entry : 0/0
 26010 ;;		On exit  : 0/0
 26011 ;;		Unchanged: 0/0
 26012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26017 ;;Total ram usage:        0 bytes
 26018 ;; Hardware stack levels used:    1
 26019 ;; Hardware stack levels required when called:   16
 26020 ;; This function calls:
 26021 ;;		_isdigit
 26022 ;;		_isspace
 26023 ;; This function is called by:
 26024 ;;		_vfpfcnvrt
 26025 ;; This function uses a reentrant model
 26026 ;;
 26027                           
 26028                           	psect	text97
 26029  017F10                     __ptext97:
 26030                           	opt callstack 0
 26031  017F10                     _atoi:
 26032                           	opt callstack 0
 26033                           
 26034                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26035  017F10  0E09               	movlw	9
 26036  017F12  26E1               	addwf	fsr1l,f,c
 26037  017F14  0E00               	movlw	0
 26038  017F16  22E2               	addwfc	fsr1h,f,c
 26039                           
 26040                           ;stkvar	_n @ sp[(-9)+5]
 26041                           
 26042                           ;incstack = 0
 26043 ;; hardware stack exceeded
 26044  017F18  0EFC               	movlw	-4
 26045  017F1A  6AE3               	clrf	plusw1,c
 26046  017F1C  0EFD               	movlw	-3
 26047  017F1E  6AE3               	clrf	plusw1,c
 26048                           
 26049                           ;stkvar	_neg @ sp[(-9)+7]
 26050  017F20  0EFE               	movlw	-2
 26051  017F22  6AE3               	clrf	plusw1,c
 26052  017F24  0EFF               	movlw	-1
 26053  017F26  6AE3               	clrf	plusw1,c
 26054  017F28  D011               	goto	l10046
 26055  017F2A                     l10044:
 26056                           
 26057                           ;stkvar	_s @ sp[(-9)+-2]
 26058  017F2A  0EF5               	movlw	-11
 26059  017F2C  50E3               	movf	plusw1,w,c
 26060  017F2E  0F01               	addlw	1
 26061  017F30  6E01               	movwf	btemp^0,c
 26062  017F32  0EF5               	movlw	-11
 26063  017F34  0060  F007  FFE3   	movff	btemp,plusw1
 26064  017F3A  6A01               	clrf	btemp^0,c
 26065  017F3C  0EF6               	movlw	-10
 26066  017F3E  50E3               	movf	plusw1,w,c
 26067  017F40  2001               	addwfc	btemp^0,w,c
 26068  017F42  6E01               	movwf	btemp^0,c
 26069  017F44  0EF6               	movlw	-10
 26070  017F46  0060  F007  FFE3   	movff	btemp,plusw1
 26071  017F4C                     l10046:
 26072                           
 26073                           ;stkvar	_atoi$6726 @ sp[(-9)+4]
 26074  017F4C  0EFB               	movlw	-5
 26075  017F4E  6AE3               	clrf	plusw1,c
 26076  017F50  2AE3               	incf	plusw1,f,c
 26077                           
 26078                           ;stkvar	_s @ sp[(-9)+-2]
 26079  017F52  50E1               	movf	fsr1l,w,c
 26080  017F54  0FF5               	addlw	-11
 26081  017F56  6ED9               	movwf	fsr2l,c
 26082  017F58  50E2               	movf	fsr1h,w,c
 26083  017F5A  6EDA               	movwf	fsr2h,c
 26084  017F5C  0EFF               	movlw	255
 26085  017F5E  22DA               	addwfc	fsr2h,f,c
 26086  017F60  006F FF7B FFF6     	movff	postinc2,tblptrl
 26087  017F66  006F FF77 FFF7     	movff	postdec2,tblptrh
 26088  017F6C                     	if	0	;tblptru may be non-zero
 26089  017F6C                     	endif
 26090  017F6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26091  017F6C  0E00               	movlw	low (__mediumconst shr (0+16))
 26092  017F6E  6EF8               	movwf	tblptru,c
 26093  017F70                     	endif
 26094  017F70  0008               	tblrd		*
 26095  017F72  50F5               	movf	tablat,w,c
 26096  017F74  0A20               	xorlw	32
 26097  017F76  B4D8               	btfsc	status,2,c
 26098  017F78  D023               	goto	l10054
 26099  017F7A  0EF7               	movlw	247
 26100  017F7C  6E0B               	movwf	(btemp+10)^0,c
 26101  017F7E  0EFF               	movlw	255
 26102  017F80  6E0C               	movwf	(btemp+11)^0,c
 26103                           
 26104                           ;stkvar	_s @ sp[(-9)+-2]
 26105  017F82  50E1               	movf	fsr1l,w,c
 26106  017F84  0FF5               	addlw	-11
 26107  017F86  6ED9               	movwf	fsr2l,c
 26108  017F88  50E2               	movf	fsr1h,w,c
 26109  017F8A  6EDA               	movwf	fsr2h,c
 26110  017F8C  0EFF               	movlw	255
 26111  017F8E  22DA               	addwfc	fsr2h,f,c
 26112  017F90  006F FF7B FFF6     	movff	postinc2,tblptrl
 26113  017F96  006F FF77 FFF7     	movff	postdec2,tblptrh
 26114  017F9C                     	if	0	;tblptru may be non-zero
 26115  017F9C                     	endif
 26116  017F9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26117  017F9C  0E00               	movlw	low (__mediumconst shr (0+16))
 26118  017F9E  6EF8               	movwf	tblptru,c
 26119  017FA0                     	endif
 26120  017FA0  0008               	tblrd		*
 26121  017FA2  50F5               	movf	tablat,w,c
 26122  017FA4  6E09               	movwf	(btemp+8)^0,c
 26123  017FA6  6A0A               	clrf	(btemp+9)^0,c
 26124  017FA8  500B               	movf	(btemp+10)^0,w,c
 26125  017FAA  2609               	addwf	(btemp+8)^0,f,c
 26126  017FAC  500C               	movf	(btemp+11)^0,w,c
 26127  017FAE  220A               	addwfc	(btemp+9)^0,f,c
 26128  017FB0  500A               	movf	(btemp+9)^0,w,c
 26129  017FB2  E104               	bnz	u9010
 26130  017FB4  0E05               	movlw	5
 26131  017FB6  5C09               	subwf	(btemp+8)^0,w,c
 26132  017FB8  A0D8               	btfss	status,0,c
 26133  017FBA  D002               	goto	l10054
 26134  017FBC                     u9010:
 26135                           
 26136                           ;stkvar	_atoi$6726 @ sp[(-9)+4]
 26137  017FBC  0EFB               	movlw	-5
 26138  017FBE  6AE3               	clrf	plusw1,c
 26139  017FC0                     l10054:
 26140                           
 26141                           ;stkvar	_atoi$6726 @ sp[(-9)+4]
 26142  017FC0  0EFB               	movlw	-5
 26143  017FC2  50E3               	movf	plusw1,w,c
 26144  017FC4  6E0B               	movwf	(btemp+10)^0,c
 26145  017FC6  6A0C               	clrf	(btemp+11)^0,c
 26146                           
 26147                           ;stkvar	_atoi$6725 @ sp[(-9)+2]
 26148  017FC8  0EF9               	movlw	-7
 26149  017FCA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26150  017FD0  0EFA               	movlw	-6
 26151  017FD2  0060  F033  FFE3   	movff	btemp+11,plusw1
 26152                           
 26153                           ;stkvar	_atoi$6725 @ sp[(-9)+2]
 26154  017FD8  0EF9               	movlw	-7
 26155  017FDA  006F FF8C  F001    	movff	plusw1,btemp
 26156  017FE0  0EFA               	movlw	-6
 26157  017FE2  50E3               	movf	plusw1,w,c
 26158  017FE4  1001               	iorwf	btemp^0,w,c
 26159  017FE6  B4D8               	btfsc	status,2,c
 26160  017FE8  D01F               	goto	l10064
 26161  017FEA  D79F               	goto	l10044
 26162  017FEC                     l10060:
 26163  017FEC  0E01               	movlw	1
 26164  017FEE  6E0B               	movwf	(btemp+10)^0,c
 26165  017FF0  0E00               	movlw	0
 26166  017FF2  6E0C               	movwf	(btemp+11)^0,c
 26167                           
 26168                           ;stkvar	_neg @ sp[(-9)+7]
 26169  017FF4  0EFE               	movlw	-2
 26170  017FF6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26171  017FFC  0EFF               	movlw	-1
 26172  017FFE  0060  F033  FFE3   	movff	btemp+11,plusw1
 26173  018004                     l10062:
 26174                           
 26175                           ;stkvar	_s @ sp[(-9)+-2]
 26176  018004  0EF5               	movlw	-11
 26177  018006  50E3               	movf	plusw1,w,c
 26178  018008  0F01               	addlw	1
 26179  01800A  6E01               	movwf	btemp^0,c
 26180  01800C  0EF5               	movlw	-11
 26181  01800E  0060  F007  FFE3   	movff	btemp,plusw1
 26182  018014  6A01               	clrf	btemp^0,c
 26183  018016  0EF6               	movlw	-10
 26184  018018  50E3               	movf	plusw1,w,c
 26185  01801A  2001               	addwfc	btemp^0,w,c
 26186  01801C  6E01               	movwf	btemp^0,c
 26187  01801E  0EF6               	movlw	-10
 26188  018020  0060  F007  FFE3   	movff	btemp,plusw1
 26189  018026  D053               	goto	l10070
 26190  018028                     l10064:
 26191                           
 26192                           ;stkvar	_s @ sp[(-9)+-2]
 26193  018028  50E1               	movf	fsr1l,w,c
 26194  01802A  0FF5               	addlw	-11
 26195  01802C  6ED9               	movwf	fsr2l,c
 26196  01802E  50E2               	movf	fsr1h,w,c
 26197  018030  6EDA               	movwf	fsr2h,c
 26198  018032  0EFF               	movlw	255
 26199  018034  22DA               	addwfc	fsr2h,f,c
 26200  018036  006F FF7B FFF6     	movff	postinc2,tblptrl
 26201  01803C  006F FF77 FFF7     	movff	postdec2,tblptrh
 26202  018042                     	if	0	;tblptru may be non-zero
 26203  018042                     	endif
 26204  018042                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26205  018042  0E00               	movlw	low (__mediumconst shr (0+16))
 26206  018044  6EF8               	movwf	tblptru,c
 26207  018046                     	endif
 26208  018046  0008               	tblrd		*
 26209  018048  50F5               	movf	tablat,w,c
 26210  01804A  6E0B               	movwf	(btemp+10)^0,c
 26211  01804C  6A0C               	clrf	(btemp+11)^0,c
 26212                           
 26213                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26214                           ; Switch size 1, requested type "simple"
 26215                           ; Number of cases is 1, Range of values is 0 to 0
 26216                           ; switch strategies available:
 26217                           ; Name         Instructions Cycles
 26218                           ; simple_byte            4     3 (average)
 26219                           ;	Chosen strategy is simple_byte
 26220  01804E  500C               	movf	(btemp+11)^0,w,c
 26221  018050  0A00               	xorlw	0	; case 0
 26222  018052  A4D8               	btfss	status,2,c
 26223  018054  D03C               	goto	l10070
 26224                           
 26225                           ; Switch size 1, requested type "simple"
 26226                           ; Number of cases is 2, Range of values is 43 to 45
 26227                           ; switch strategies available:
 26228                           ; Name         Instructions Cycles
 26229                           ; simple_byte            7     4 (average)
 26230                           ;	Chosen strategy is simple_byte
 26231  018056  500B               	movf	(btemp+10)^0,w,c
 26232  018058  0A2B               	xorlw	43	; case 43
 26233  01805A  B4D8               	btfsc	status,2,c
 26234  01805C  D7D3               	goto	l10062
 26235  01805E  0A06               	xorlw	6	; case 45
 26236  018060  B4D8               	btfsc	status,2,c
 26237  018062  D7C4               	goto	l10060
 26238  018064  D034               	goto	l10070
 26239  018066                     l10066:
 26240                           
 26241                           ;stkvar	_n @ sp[(-9)+5]
 26242  018066  0EFC               	movlw	-4
 26243  018068  006F FF8C  F00B    	movff	plusw1,btemp+10
 26244  01806E  0EFD               	movlw	-3
 26245  018070  006F FF8C  F00C    	movff	plusw1,btemp+11
 26246  018076  0E0A               	movlw	10
 26247  018078  020B               	mulwf	(btemp+10)^0,c
 26248  01807A  006F FFCC  F009    	movff	prodl,btemp+8
 26249  018080  006F FFD0  F00A    	movff	prodh,btemp+9
 26250  018086  020C               	mulwf	(btemp+11)^0,c
 26251  018088  50F3               	movf	prodl,w,c
 26252  01808A  260A               	addwf	(btemp+9)^0,f,c
 26253                           
 26254                           ;stkvar	_s @ sp[(-9)+-2]
 26255  01808C  50E1               	movf	fsr1l,w,c
 26256  01808E  0FF5               	addlw	-11
 26257  018090  6ED9               	movwf	fsr2l,c
 26258  018092  50E2               	movf	fsr1h,w,c
 26259  018094  6EDA               	movwf	fsr2h,c
 26260  018096  0EFF               	movlw	255
 26261  018098  22DA               	addwfc	fsr2h,f,c
 26262  01809A  006F FF7B FFF6     	movff	postinc2,tblptrl
 26263  0180A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 26264  0180A6                     	if	0	;tblptru may be non-zero
 26265  0180A6                     	endif
 26266  0180A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26267  0180A6  0E00               	movlw	low (__mediumconst shr (0+16))
 26268  0180A8  6EF8               	movwf	tblptru,c
 26269  0180AA                     	endif
 26270  0180AA  0008               	tblrd		*
 26271  0180AC  50F5               	movf	tablat,w,c
 26272  0180AE  5E09               	subwf	(btemp+8)^0,f,c
 26273  0180B0  0E00               	movlw	0
 26274  0180B2  5A0A               	subwfb	(btemp+9)^0,f,c
 26275  0180B4  0E30               	movlw	48
 26276  0180B6  2609               	addwf	(btemp+8)^0,f,c
 26277  0180B8  0E00               	movlw	0
 26278  0180BA  220A               	addwfc	(btemp+9)^0,f,c
 26279                           
 26280                           ;stkvar	_n @ sp[(-9)+5]
 26281  0180BC  0EFC               	movlw	-4
 26282  0180BE  0060  F027  FFE3   	movff	btemp+8,plusw1
 26283  0180C4  0EFD               	movlw	-3
 26284  0180C6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26285  0180CC  D79B               	goto	l10062
 26286  0180CE                     l10070:
 26287  0180CE  0ED0               	movlw	208
 26288  0180D0  6E0B               	movwf	(btemp+10)^0,c
 26289  0180D2  0EFF               	movlw	255
 26290  0180D4  6E0C               	movwf	(btemp+11)^0,c
 26291                           
 26292                           ;stkvar	_s @ sp[(-9)+-2]
 26293  0180D6  50E1               	movf	fsr1l,w,c
 26294  0180D8  0FF5               	addlw	-11
 26295  0180DA  6ED9               	movwf	fsr2l,c
 26296  0180DC  50E2               	movf	fsr1h,w,c
 26297  0180DE  6EDA               	movwf	fsr2h,c
 26298  0180E0  0EFF               	movlw	255
 26299  0180E2  22DA               	addwfc	fsr2h,f,c
 26300  0180E4  006F FF7B FFF6     	movff	postinc2,tblptrl
 26301  0180EA  006F FF77 FFF7     	movff	postdec2,tblptrh
 26302  0180F0                     	if	0	;tblptru may be non-zero
 26303  0180F0                     	endif
 26304  0180F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26305  0180F0  0E00               	movlw	low (__mediumconst shr (0+16))
 26306  0180F2  6EF8               	movwf	tblptru,c
 26307  0180F4                     	endif
 26308  0180F4  0008               	tblrd		*
 26309  0180F6  50F5               	movf	tablat,w,c
 26310  0180F8  6E09               	movwf	(btemp+8)^0,c
 26311  0180FA  6A0A               	clrf	(btemp+9)^0,c
 26312  0180FC  500B               	movf	(btemp+10)^0,w,c
 26313  0180FE  2609               	addwf	(btemp+8)^0,f,c
 26314  018100  500C               	movf	(btemp+11)^0,w,c
 26315  018102  220A               	addwfc	(btemp+9)^0,f,c
 26316  018104  500A               	movf	(btemp+9)^0,w,c
 26317  018106  E106               	bnz	u9030
 26318  018108  0E0A               	movlw	10
 26319  01810A  5C09               	subwf	(btemp+8)^0,w,c
 26320  01810C  B0D8               	btfsc	status,0,c
 26321  01810E  D002               	goto	u9030
 26322  018110  0E01               	movlw	1
 26323  018112  D001               	goto	u9040
 26324  018114                     u9030:
 26325  018114  0E00               	movlw	0
 26326  018116                     u9040:
 26327  018116  6E0B               	movwf	(btemp+10)^0,c
 26328  018118  6A0C               	clrf	(btemp+11)^0,c
 26329                           
 26330                           ;stkvar	_atoi$6727 @ sp[(-9)+0]
 26331  01811A  0EF7               	movlw	-9
 26332  01811C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26333  018122  0EF8               	movlw	-8
 26334  018124  0060  F033  FFE3   	movff	btemp+11,plusw1
 26335                           
 26336                           ;stkvar	_atoi$6727 @ sp[(-9)+0]
 26337  01812A  0EF7               	movlw	-9
 26338  01812C  006F FF8C  F001    	movff	plusw1,btemp
 26339  018132  0EF8               	movlw	-8
 26340  018134  50E3               	movf	plusw1,w,c
 26341  018136  1001               	iorwf	btemp^0,w,c
 26342  018138  A4D8               	btfss	status,2,c
 26343  01813A  D795               	goto	l10066
 26344                           
 26345                           ;stkvar	_neg @ sp[(-9)+7]
 26346  01813C  0EFE               	movlw	-2
 26347  01813E  006F FF8C  F001    	movff	plusw1,btemp
 26348  018144  0EFF               	movlw	-1
 26349  018146  50E3               	movf	plusw1,w,c
 26350  018148  1001               	iorwf	btemp^0,w,c
 26351  01814A  A4D8               	btfss	status,2,c
 26352  01814C  D00E               	goto	l10080
 26353                           
 26354                           ;stkvar	_n @ sp[(-9)+5]
 26355  01814E  0EFC               	movlw	-4
 26356  018150  006F FF8C  F001    	movff	plusw1,btemp
 26357  018156  1E01               	comf	btemp^0,f,c
 26358  018158  0EFD               	movlw	-3
 26359  01815A  006F FF8C  F002    	movff	plusw1,btemp+1
 26360  018160  1E02               	comf	(btemp+1)^0,f,c
 26361  018162  2A01               	incf	btemp^0,f,c
 26362  018164  B4D8               	btfsc	status,2,c
 26363  018166  2A02               	incf	(btemp+1)^0,f,c
 26364  018168  D008               	goto	l3379
 26365  01816A                     l10080:
 26366                           
 26367                           ;stkvar	_n @ sp[(-9)+5]
 26368  01816A  0EFC               	movlw	-4
 26369  01816C  006F FF8C  F001    	movff	plusw1,btemp
 26370  018172  0EFD               	movlw	-3
 26371  018174  006F FF8C  F002    	movff	plusw1,btemp+1
 26372  01817A                     l3379:
 26373                           
 26374                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 26375  01817A  0EF5               	movlw	245
 26376  01817C  26E1               	addwf	fsr1l,f,c
 26377  01817E  0EFF               	movlw	255
 26378  018180  22E2               	addwfc	fsr1h,f,c
 26379  018182  0012               	return		;funcret
 26380  018184                     __end_of_atoi:
 26381                           	opt callstack 0
 26382                           
 26383 ;; *************** function _isspace *****************
 26384 ;; Defined at:
 26385 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 26386 ;; Parameters:    Size  Location     Type
 26387 ;;  c               2  [STACK] int 
 26388 ;; Auto vars:     Size  Location     Type
 26389 ;;		None
 26390 ;; Return value:  Size  Location     Type
 26391 ;;                  2  [STACK] int 
 26392 ;; Registers used:
 26393 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 26394 ;; Tracked objects:
 26395 ;;		On entry : 0/0
 26396 ;;		On exit  : 0/0
 26397 ;;		Unchanged: 0/0
 26398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26403 ;;Total ram usage:        0 bytes
 26404 ;; Hardware stack levels used:    1
 26405 ;; Hardware stack levels required when called:   15
 26406 ;; This function calls:
 26407 ;;		Nothing
 26408 ;; This function is called by:
 26409 ;;		_atoi
 26410 ;; This function uses a reentrant model
 26411 ;;
 26412                           
 26413                           	psect	text98
 26414  01C47C                     __ptext98:
 26415                           	opt callstack 0
 26416  01C47C                     _isspace:
 26417                           	opt callstack 0
 26418                           
 26419                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26420  01C47C  52E6               	movf	postinc1,f,c
 26421                           
 26422                           ;stkvar	_isspace$6776 @ sp[(-1)+0]
 26423                           
 26424                           ;incstack = 0
 26425 ;; hardware stack exceeded
 26426  01C47E  0EFF               	movlw	-1
 26427  01C480  6AE3               	clrf	plusw1,c
 26428  01C482  2AE3               	incf	plusw1,f,c
 26429                           
 26430                           ;stkvar	_c @ sp[(-1)+-2]
 26431  01C484  0EFD               	movlw	-3
 26432  01C486  006F FF8C  F001    	movff	plusw1,btemp
 26433  01C48C  0E20               	movlw	32
 26434  01C48E  1801               	xorwf	btemp^0,w,c
 26435  01C490  E104               	bnz	u7900
 26436  01C492  0EFE               	movlw	-2
 26437  01C494  50E3               	movf	plusw1,w,c
 26438  01C496  B4D8               	btfsc	status,2,c
 26439  01C498  D012               	goto	l9464
 26440  01C49A                     u7900:
 26441                           
 26442                           ;stkvar	_c @ sp[(-1)+-2]
 26443  01C49A  0EFD               	movlw	-3
 26444  01C49C  50E3               	movf	plusw1,w,c
 26445  01C49E  0FF7               	addlw	247
 26446  01C4A0  6E0B               	movwf	(btemp+10)^0,c
 26447  01C4A2  0EFE               	movlw	-2
 26448  01C4A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 26449  01C4AA  0EFF               	movlw	255
 26450  01C4AC  220C               	addwfc	(btemp+11)^0,f,c
 26451  01C4AE  500C               	movf	(btemp+11)^0,w,c
 26452  01C4B0  E104               	bnz	u7910
 26453  01C4B2  0E05               	movlw	5
 26454  01C4B4  5C0B               	subwf	(btemp+10)^0,w,c
 26455  01C4B6  A0D8               	btfss	status,0,c
 26456  01C4B8  D002               	goto	l9464
 26457  01C4BA                     u7910:
 26458                           
 26459                           ;stkvar	_isspace$6776 @ sp[(-1)+0]
 26460  01C4BA  0EFF               	movlw	-1
 26461  01C4BC  6AE3               	clrf	plusw1,c
 26462  01C4BE                     l9464:
 26463                           
 26464                           ;stkvar	_isspace$6776 @ sp[(-1)+0]
 26465  01C4BE  0EFF               	movlw	-1
 26466  01C4C0  50E3               	movf	plusw1,w,c
 26467  01C4C2  6E01               	movwf	btemp^0,c
 26468  01C4C4  6A02               	clrf	(btemp+1)^0,c
 26469                           
 26470                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 26471  01C4C6  52E5               	movf	postdec1,f,c
 26472  01C4C8  52E5               	movf	postdec1,f,c
 26473  01C4CA  52E5               	movf	postdec1,f,c
 26474  01C4CC  0012               	return		;funcret
 26475  01C4CE                     __end_of_isspace:
 26476                           	opt callstack 0
 26477                           
 26478 ;; *************** function _isdigit *****************
 26479 ;; Defined at:
 26480 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 26481 ;; Parameters:    Size  Location     Type
 26482 ;;  c               2  [STACK] int 
 26483 ;; Auto vars:     Size  Location     Type
 26484 ;;		None
 26485 ;; Return value:  Size  Location     Type
 26486 ;;                  2  [STACK] int 
 26487 ;; Registers used:
 26488 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 26489 ;; Tracked objects:
 26490 ;;		On entry : 0/0
 26491 ;;		On exit  : 0/0
 26492 ;;		Unchanged: 0/0
 26493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26498 ;;Total ram usage:        0 bytes
 26499 ;; Hardware stack levels used:    1
 26500 ;; Hardware stack levels required when called:   15
 26501 ;; This function calls:
 26502 ;;		Nothing
 26503 ;; This function is called by:
 26504 ;;		_vfpfcnvrt
 26505 ;;		_atoi
 26506 ;; This function uses a reentrant model
 26507 ;;
 26508                           
 26509                           	psect	text99
 26510  01CC62                     __ptext99:
 26511                           	opt callstack 0
 26512  01CC62                     _isdigit:
 26513                           	opt callstack 0
 26514                           
 26515                           ;stkvar	_c @ sp[(0)+-2]
 26516                           
 26517                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26518                           ;incstack = 0
 26519 ;; hardware stack exceeded
 26520  01CC62  0EFE               	movlw	-2
 26521  01CC64  50E3               	movf	plusw1,w,c
 26522  01CC66  0FD0               	addlw	208
 26523  01CC68  6E0B               	movwf	(btemp+10)^0,c
 26524  01CC6A  0EFF               	movlw	-1
 26525  01CC6C  006F FF8C  F00C    	movff	plusw1,btemp+11
 26526  01CC72  0EFF               	movlw	255
 26527  01CC74  220C               	addwfc	(btemp+11)^0,f,c
 26528  01CC76  500C               	movf	(btemp+11)^0,w,c
 26529  01CC78  E106               	bnz	u6750
 26530  01CC7A  0E0A               	movlw	10
 26531  01CC7C  5C0B               	subwf	(btemp+10)^0,w,c
 26532  01CC7E  B0D8               	btfsc	status,0,c
 26533  01CC80  D002               	goto	u6750
 26534  01CC82  0E01               	movlw	1
 26535  01CC84  D001               	goto	u6760
 26536  01CC86                     u6750:
 26537  01CC86  0E00               	movlw	0
 26538  01CC88                     u6760:
 26539  01CC88  6E01               	movwf	btemp^0,c
 26540  01CC8A  6A02               	clrf	(btemp+1)^0,c
 26541                           
 26542                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 26543  01CC8C  52E5               	movf	postdec1,f,c
 26544  01CC8E  52E5               	movf	postdec1,f,c
 26545  01CC90  0012               	return		;funcret
 26546  01CC92                     __end_of_isdigit:
 26547                           	opt callstack 0
 26548                           
 26549 ;; *************** function _set_vterm *****************
 26550 ;; Defined at:
 26551 ;;		line 107 in file "mconfig.c"
 26552 ;; Parameters:    Size  Location     Type
 26553 ;;  vterm           1  [STACK] const unsigned char 
 26554 ;; Auto vars:     Size  Location     Type
 26555 ;;		None
 26556 ;; Return value:  Size  Location     Type
 26557 ;;                  1  [STACK] unsigned char 
 26558 ;; Registers used:
 26559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 26560 ;; Tracked objects:
 26561 ;;		On entry : 0/2
 26562 ;;		On exit  : 0/0
 26563 ;;		Unchanged: 0/0
 26564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26569 ;;Total ram usage:        0 bytes
 26570 ;; Hardware stack levels used:    1
 26571 ;; Hardware stack levels required when called:   15
 26572 ;; This function calls:
 26573 ;;		Nothing
 26574 ;; This function is called by:
 26575 ;;		_main
 26576 ;;		_check_help
 26577 ;; This function uses a reentrant model
 26578 ;;
 26579                           
 26580                           	psect	text100
 26581  01D182                     __ptext100:
 26582                           	opt callstack 0
 26583  01D182                     _set_vterm:
 26584                           	opt callstack 15
 26585                           
 26586                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 26587                           ;stkvar	_vterm @ sp[(0)+-1]
 26588                           
 26589                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26590                           ;incstack = 0
 26591  01D182  0EFF               	movlw	-1
 26592  01D184  006F FF8C  F00C    	movff	plusw1,btemp+11
 26593  01D18A  0E03               	movlw	3
 26594  01D18C  160C               	andwf	(btemp+11)^0,f,c
 26595  01D18E  EE22  F30A         	lfsr	2,_D+480
 26596  01D192  50DF               	movf	223,w,c
 26597  01D194  180C               	xorwf	(btemp+11)^0,w,c
 26598  01D196  0BFE               	andlw	-2
 26599  01D198  180C               	xorwf	(btemp+11)^0,w,c
 26600  01D19A  6EDF               	movwf	223,c
 26601                           
 26602                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 26603  01D19C  52E5               	movf	postdec1,f,c
 26604  01D19E  0012               	return		;funcret
 26605  01D1A0                     __end_of_set_vterm:
 26606                           	opt callstack 0
 26607                           
 26608 ;; *************** function _set_temp_display_help *****************
 26609 ;; Defined at:
 26610 ;;		line 211 in file "mconfig.c"
 26611 ;; Parameters:    Size  Location     Type
 26612 ;;  new_response    1  [STACK] const enum E16524
 26613 ;; Auto vars:     Size  Location     Type
 26614 ;;		None
 26615 ;; Return value:  Size  Location     Type
 26616 ;;                  1  [STACK] enum E16524
 26617 ;; Registers used:
 26618 ;;		wreg, fsr1l, fsr1h
 26619 ;; Tracked objects:
 26620 ;;		On entry : 0/1
 26621 ;;		On exit  : 3F/1
 26622 ;;		Unchanged: 0/0
 26623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26628 ;;Total ram usage:        0 bytes
 26629 ;; Hardware stack levels used:    1
 26630 ;; Hardware stack levels required when called:   15
 26631 ;; This function calls:
 26632 ;;		Nothing
 26633 ;; This function is called by:
 26634 ;;		_check_help
 26635 ;; This function uses a reentrant model
 26636 ;;
 26637                           
 26638                           	psect	text101
 26639  01D302                     __ptext101:
 26640                           	opt callstack 0
 26641  01D302                     _set_temp_display_help:
 26642                           	opt callstack 14
 26643                           
 26644                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 26645                           
 26646                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26647                           ;incstack = 0
 26648  01D302  0101               	movlb	1	; () banked
 26649  01D304  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 26650                           
 26651                           ; BSR set to: 1
 26652                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 26653                           ;stkvar	_new_response_info @ sp[(0)+-1]
 26654  01D306  0EFF               	movlw	-1
 26655  01D308  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 26656                           
 26657                           ; BSR set to: 1
 26658                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 26659  01D30E  52E5               	movf	postdec1,f,c
 26660  01D310  0012               	return		;funcret
 26661  01D312                     __end_of_set_temp_display_help:
 26662                           	opt callstack 0
 26663                           
 26664 ;; *************** function _set_display_info *****************
 26665 ;; Defined at:
 26666 ;;		line 200 in file "mconfig.c"
 26667 ;; Parameters:    Size  Location     Type
 26668 ;;  new_response    1  [STACK] const enum E16524
 26669 ;; Auto vars:     Size  Location     Type
 26670 ;;		None
 26671 ;; Return value:  Size  Location     Type
 26672 ;;                  1  [STACK] enum E17009
 26673 ;; Registers used:
 26674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26675 ;; Tracked objects:
 26676 ;;		On entry : 0/1
 26677 ;;		On exit  : 0/0
 26678 ;;		Unchanged: 0/0
 26679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26684 ;;Total ram usage:        0 bytes
 26685 ;; Hardware stack levels used:    1
 26686 ;; Hardware stack levels required when called:   16
 26687 ;; This function calls:
 26688 ;;		_TimerDone
 26689 ;; This function is called by:
 26690 ;;		_main
 26691 ;;		_check_help
 26692 ;; This function uses a reentrant model
 26693 ;;
 26694                           
 26695                           	psect	text102
 26696  01D1A0                     __ptext102:
 26697                           	opt callstack 0
 26698  01D1A0                     _set_display_info:
 26699                           	opt callstack 14
 26700                           
 26701                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 26702                           
 26703                           ; BSR set to: 1
 26704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26705                           ;incstack = 0
 26706  01D1A0  0E07               	movlw	7
 26707  01D1A2  6EE6               	movwf	postinc1,c
 26708  01D1A4  ECCB  F0E6         	call	_TimerDone	;wreg free
 26709  01D1A8  5001               	movf	btemp^0,w,c
 26710  01D1AA  B4D8               	btfsc	status,2,c
 26711  01D1AC  D006               	goto	l1757
 26712                           
 26713                           ;mconfig.c: 205:   old_info = V.response.info;
 26714  01D1AE  0101               	movlb	1	; () banked
 26715  01D1B0  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 26716                           
 26717                           ; BSR set to: 1
 26718                           ;mconfig.c: 206:   V.response.info = new_response_info;
 26719                           ;stkvar	_new_response_info @ sp[(0)+-1]
 26720  01D1B2  0EFF               	movlw	-1
 26721  01D1B4  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 26722  01D1BA                     l1757:
 26723                           
 26724                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 26725  01D1BA  52E5               	movf	postdec1,f,c
 26726  01D1BC  0012               	return		;funcret
 26727  01D1BE                     __end_of_set_display_info:
 26728                           	opt callstack 0
 26729                           
 26730 ;; *************** function _mode_lamp_dim *****************
 26731 ;; Defined at:
 26732 ;;		line 13 in file "mconfig.c"
 26733 ;; Parameters:    Size  Location     Type
 26734 ;;  level           2  [STACK] const unsigned short 
 26735 ;; Auto vars:     Size  Location     Type
 26736 ;;		None
 26737 ;; Return value:  Size  Location     Type
 26738 ;;                  1  [STACK] void 
 26739 ;; Registers used:
 26740 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 26741 ;; Tracked objects:
 26742 ;;		On entry : 0/1
 26743 ;;		On exit  : 0/0
 26744 ;;		Unchanged: 0/0
 26745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26750 ;;Total ram usage:        0 bytes
 26751 ;; Hardware stack levels used:    1
 26752 ;; Hardware stack levels required when called:   16
 26753 ;; This function calls:
 26754 ;;		_PWM8_LoadDutyValue
 26755 ;; This function is called by:
 26756 ;;		_main
 26757 ;;		_check_help
 26758 ;; This function uses a reentrant model
 26759 ;;
 26760                           
 26761                           	psect	text103
 26762  01D212                     __ptext103:
 26763                           	opt callstack 0
 26764  01D212                     _mode_lamp_dim:
 26765                           	opt callstack 14
 26766                           
 26767                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 26768                           ;stkvar	_level @ sp[(0)+-2]
 26769                           
 26770                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26771                           ;incstack = 0
 26772  01D212  0EFE               	movlw	-2
 26773  01D214  006F FF8F FFE6     	movff	plusw1,postinc1
 26774  01D21A  006F FF8F FFE6     	movff	plusw1,postinc1
 26775  01D220  ECFB  F0E3         	call	_PWM8_LoadDutyValue	;wreg free
 26776                           
 26777                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 26778  01D224  52E5               	movf	postdec1,f,c
 26779  01D226  52E5               	movf	postdec1,f,c
 26780  01D228  0012               	return		;funcret
 26781  01D22A                     __end_of_mode_lamp_dim:
 26782                           	opt callstack 0
 26783                           
 26784 ;; *************** function _mode_lamp_bright *****************
 26785 ;; Defined at:
 26786 ;;		line 18 in file "mconfig.c"
 26787 ;; Parameters:    Size  Location     Type
 26788 ;;		None
 26789 ;; Auto vars:     Size  Location     Type
 26790 ;;		None
 26791 ;; Return value:  Size  Location     Type
 26792 ;;                  1  [STACK] void 
 26793 ;; Registers used:
 26794 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 26795 ;; Tracked objects:
 26796 ;;		On entry : 0/0
 26797 ;;		On exit  : 0/0
 26798 ;;		Unchanged: 0/0
 26799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26804 ;;Total ram usage:        0 bytes
 26805 ;; Hardware stack levels used:    1
 26806 ;; Hardware stack levels required when called:   16
 26807 ;; This function calls:
 26808 ;;		_PWM8_LoadDutyValue
 26809 ;; This function is called by:
 26810 ;;		_check_help
 26811 ;; This function uses a reentrant model
 26812 ;;
 26813                           
 26814                           	psect	text104
 26815  01D330                     __ptext104:
 26816                           	opt callstack 0
 26817  01D330                     _mode_lamp_bright:
 26818                           	opt callstack 13
 26819                           
 26820                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 26821                           
 26822                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26823                           ;incstack = 0
 26824  01D330  0E2C               	movlw	44
 26825  01D332  6EE6               	movwf	postinc1,c
 26826  01D334  0E01               	movlw	1
 26827  01D336  6EE6               	movwf	postinc1,c
 26828  01D338  ECFB  F0E3         	call	_PWM8_LoadDutyValue	;wreg free
 26829                           
 26830                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 26831  01D33C  0012               	return		;funcret
 26832  01D33E                     __end_of_mode_lamp_bright:
 26833                           	opt callstack 0
 26834                           
 26835 ;; *************** function _PWM8_LoadDutyValue *****************
 26836 ;; Defined at:
 26837 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 26838 ;; Parameters:    Size  Location     Type
 26839 ;;  dutyValue       2  [STACK] unsigned short 
 26840 ;; Auto vars:     Size  Location     Type
 26841 ;;		None
 26842 ;; Return value:  Size  Location     Type
 26843 ;;                  1  [STACK] void 
 26844 ;; Registers used:
 26845 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 26846 ;; Tracked objects:
 26847 ;;		On entry : 0/1
 26848 ;;		On exit  : 0/0
 26849 ;;		Unchanged: 0/0
 26850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26855 ;;Total ram usage:        0 bytes
 26856 ;; Hardware stack levels used:    1
 26857 ;; Hardware stack levels required when called:   15
 26858 ;; This function calls:
 26859 ;;		Nothing
 26860 ;; This function is called by:
 26861 ;;		_mode_lamp_dim
 26862 ;;		_mode_lamp_bright
 26863 ;; This function uses a reentrant model
 26864 ;;
 26865                           
 26866                           	psect	text105
 26867  01C7F6                     __ptext105:
 26868                           	opt callstack 0
 26869  01C7F6                     _PWM8_LoadDutyValue:
 26870                           	opt callstack 14
 26871                           
 26872                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 26873                           ;stkvar	_dutyValue @ sp[(0)+-2]
 26874                           
 26875                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26876                           ;incstack = 0
 26877  01C7F6  0EFE               	movlw	-2
 26878  01C7F8  006F FF8C  F00B    	movff	plusw1,btemp+10
 26879  01C7FE  0EFF               	movlw	-1
 26880  01C800  006F FF8C  F00C    	movff	plusw1,btemp+11
 26881  01C806  90D8               	bcf	status,0,c
 26882  01C808  320C               	rrcf	(btemp+11)^0,f,c
 26883  01C80A  320B               	rrcf	(btemp+10)^0,f,c
 26884  01C80C  90D8               	bcf	status,0,c
 26885  01C80E  320C               	rrcf	(btemp+11)^0,f,c
 26886  01C810  320B               	rrcf	(btemp+10)^0,f,c
 26887  01C812  500B               	movf	(btemp+10)^0,w,c
 26888  01C814  6E61               	movwf	97,c	;volatile
 26889                           
 26890                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 26891                           ;stkvar	_dutyValue @ sp[(0)+-2]
 26892  01C816  0EFE               	movlw	-2
 26893  01C818  006F FF8C  F00C    	movff	plusw1,btemp+11
 26894  01C81E  0E03               	movlw	3
 26895  01C820  160C               	andwf	(btemp+11)^0,f,c
 26896  01C822  0E06               	movlw	6
 26897  01C824  6E01               	movwf	btemp^0,c
 26898  01C826                     u9915:
 26899  01C826  90D8               	bcf	status,0,c
 26900  01C828  360C               	rlcf	(btemp+11)^0,f,c
 26901  01C82A  2E01               	decfsz	btemp^0,f,c
 26902  01C82C  D7FC               	goto	u9915
 26903  01C82E  500C               	movf	(btemp+11)^0,w,c
 26904  01C830  6E60               	movwf	96,c	;volatile
 26905                           
 26906                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 26907  01C832  52E5               	movf	postdec1,f,c
 26908  01C834  52E5               	movf	postdec1,f,c
 26909  01C836  0012               	return		;funcret
 26910  01C838                     __end_of_PWM8_LoadDutyValue:
 26911                           	opt callstack 0
 26912                           
 26913 ;; *************** function _help_button *****************
 26914 ;; Defined at:
 26915 ;;		line 26 in file "mconfig.c"
 26916 ;; Parameters:    Size  Location     Type
 26917 ;;		None
 26918 ;; Auto vars:     Size  Location     Type
 26919 ;;		None
 26920 ;; Return value:  Size  Location     Type
 26921 ;;                  1  [STACK] _Bool 
 26922 ;; Registers used:
 26923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26924 ;; Tracked objects:
 26925 ;;		On entry : 0/1
 26926 ;;		On exit  : 0/0
 26927 ;;		Unchanged: 0/0
 26928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26933 ;;Total ram usage:        0 bytes
 26934 ;; Hardware stack levels used:    1
 26935 ;; Hardware stack levels required when called:   16
 26936 ;; This function calls:
 26937 ;;		_StartTimer
 26938 ;;		_TimerDone
 26939 ;; This function is called by:
 26940 ;;		_check_help
 26941 ;; This function uses a reentrant model
 26942 ;;
 26943                           
 26944                           	psect	text106
 26945  01CA2A                     __ptext106:
 26946                           	opt callstack 0
 26947  01CA2A                     _help_button:
 26948                           	opt callstack 13
 26949                           
 26950                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 26951                           
 26952                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26953                           ;incstack = 0
 26954  01CA2A  B0CB               	btfsc	203,0,c	;volatile
 26955  01CA2C  D00C               	goto	l1700
 26956                           
 26957                           ;mconfig.c: 29:   V.help = 1;
 26958  01CA2E  0101               	movlb	1	; () banked
 26959  01CA30  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 26960                           
 26961                           ; BSR set to: 1
 26962                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 26963  01CA32  0E08               	movlw	8
 26964  01CA34  6EE6               	movwf	postinc1,c
 26965  01CA36  ECCB  F0E6         	call	_TimerDone	;wreg free
 26966  01CA3A  5001               	movf	btemp^0,w,c
 26967  01CA3C  B4D8               	btfsc	status,2,c
 26968  01CA3E  D003               	goto	l1700
 26969                           
 26970                           ;mconfig.c: 31:    return 1;
 26971  01CA40  0E01               	movlw	1
 26972  01CA42  6E01               	movwf	btemp^0,c
 26973  01CA44  0012               	return	
 26974  01CA46                     l1700:
 26975                           
 26976                           ;mconfig.c: 34:  if (!V.help)
 26977  01CA46  0101               	movlb	1	; () banked
 26978  01CA48  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 26979  01CA4A  D008               	goto	l11410
 26980                           
 26981                           ; BSR set to: 1
 26982                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 26983  01CA4C  0E2C               	movlw	44
 26984  01CA4E  6EE6               	movwf	postinc1,c
 26985  01CA50  0E01               	movlw	1
 26986  01CA52  6EE6               	movwf	postinc1,c
 26987  01CA54  0E08               	movlw	8
 26988  01CA56  6EE6               	movwf	postinc1,c
 26989  01CA58  EC5C  F0E4         	call	_StartTimer	;wreg free
 26990  01CA5C                     l11410:
 26991                           
 26992                           ;mconfig.c: 37:  return 0;
 26993  01CA5C  0E00               	movlw	0
 26994  01CA5E  6E01               	movwf	btemp^0,c
 26995                           
 26996                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 26997  01CA60  0012               	return		;funcret
 26998  01CA62                     __end_of_help_button:
 26999                           	opt callstack 0
 27000                           
 27001 ;; *************** function _TimerDone *****************
 27002 ;; Defined at:
 27003 ;;		line 20 in file "timers.c"
 27004 ;; Parameters:    Size  Location     Type
 27005 ;;  timer           1  [STACK] const unsigned char 
 27006 ;; Auto vars:     Size  Location     Type
 27007 ;;		None
 27008 ;; Return value:  Size  Location     Type
 27009 ;;                  1  [STACK] _Bool 
 27010 ;; Registers used:
 27011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 27012 ;; Tracked objects:
 27013 ;;		On entry : 0/1
 27014 ;;		On exit  : 0/0
 27015 ;;		Unchanged: 0/0
 27016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27021 ;;Total ram usage:        0 bytes
 27022 ;; Hardware stack levels used:    1
 27023 ;; Hardware stack levels required when called:   15
 27024 ;; This function calls:
 27025 ;;		Nothing
 27026 ;; This function is called by:
 27027 ;;		_main
 27028 ;;		_WaitMs
 27029 ;;		_help_button
 27030 ;;		_check_help
 27031 ;;		_set_display_info
 27032 ;;		_update_adc_result
 27033 ;;		_esr_check
 27034 ;; This function uses a reentrant model
 27035 ;;
 27036                           
 27037                           	psect	text107
 27038  01CD96                     __ptext107:
 27039                           	opt callstack 0
 27040  01CD96                     _TimerDone:
 27041                           	opt callstack 14
 27042                           
 27043                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27044                           ;incstack = 0
 27045  01CD96  0004               	clrwdt		;# 
 27046                           
 27047                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 27048                           ;stkvar	_timer @ sp[(0)+-1]
 27049  01CD98  0EFF               	movlw	-1
 27050  01CD9A  50E3               	movf	plusw1,w,c
 27051  01CD9C  0D02               	mullw	2
 27052  01CD9E  0E29               	movlw	low _tickCount
 27053  01CDA0  24F3               	addwf	243,w,c
 27054  01CDA2  6ED9               	movwf	fsr2l,c
 27055  01CDA4  0E02               	movlw	high _tickCount
 27056  01CDA6  20F4               	addwfc	prodh,w,c
 27057  01CDA8  6EDA               	movwf	fsr2h,c
 27058  01CDAA  50DE               	movf	postinc2,w,c
 27059  01CDAC  10DE               	iorwf	postinc2,w,c
 27060  01CDAE  A4D8               	btfss	status,2,c
 27061  01CDB0  D002               	goto	l10478
 27062                           
 27063                           ;timers.c: 24:   return 1;
 27064  01CDB2  0E01               	movlw	1
 27065  01CDB4  D001               	goto	L32
 27066  01CDB6                     l10478:
 27067                           
 27068                           ;timers.c: 26:  return 0;
 27069  01CDB6  0E00               	movlw	0
 27070  01CDB8                     L32:
 27071  01CDB8  6E01               	movwf	btemp^0,c
 27072                           
 27073                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 27074  01CDBA  52E5               	movf	postdec1,f,c
 27075  01CDBC  0012               	return		;funcret
 27076  01CDBE                     __end_of_TimerDone:
 27077                           	opt callstack 0
 27078                           
 27079 ;; *************** function _StartTimer *****************
 27080 ;; Defined at:
 27081 ;;		line 12 in file "timers.c"
 27082 ;; Parameters:    Size  Location     Type
 27083 ;;  timer           1  [STACK] const unsigned char 
 27084 ;;  count           2  [STACK] const unsigned short 
 27085 ;; Auto vars:     Size  Location     Type
 27086 ;;		None
 27087 ;; Return value:  Size  Location     Type
 27088 ;;                  1  [STACK] void 
 27089 ;; Registers used:
 27090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27091 ;; Tracked objects:
 27092 ;;		On entry : 0/0
 27093 ;;		On exit  : 0/0
 27094 ;;		Unchanged: 0/0
 27095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27100 ;;Total ram usage:        0 bytes
 27101 ;; Hardware stack levels used:    1
 27102 ;; Hardware stack levels required when called:   15
 27103 ;; This function calls:
 27104 ;;		Nothing
 27105 ;; This function is called by:
 27106 ;;		_main
 27107 ;;		_WaitMs
 27108 ;;		_help_button
 27109 ;;		_check_help
 27110 ;;		_update_adc_result
 27111 ;;		_calc_bsoc
 27112 ;;		_esr_check
 27113 ;; This function uses a reentrant model
 27114 ;;
 27115                           
 27116                           	psect	text108
 27117  01C8B8                     __ptext108:
 27118                           	opt callstack 0
 27119  01C8B8                     _StartTimer:
 27120                           	opt callstack 0
 27121                           
 27122                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 27123                           ;stkvar	_count @ sp[(0)+-3]
 27124                           
 27125                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27126                           ;incstack = 0
 27127 ;; hardware stack exceeded
 27128  01C8B8  0EFD               	movlw	-3
 27129  01C8BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 27130  01C8C0  0EFE               	movlw	-2
 27131  01C8C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 27132  01C8C8  90D8               	bcf	status,0,c
 27133  01C8CA  340B               	rlcf	(btemp+10)^0,w,c
 27134  01C8CC  6E09               	movwf	(btemp+8)^0,c
 27135  01C8CE  340C               	rlcf	(btemp+11)^0,w,c
 27136  01C8D0  6E0A               	movwf	(btemp+9)^0,c
 27137                           
 27138                           ;stkvar	_timer @ sp[(0)+-1]
 27139  01C8D2  0EFF               	movlw	-1
 27140  01C8D4  50E3               	movf	plusw1,w,c
 27141  01C8D6  0D02               	mullw	2
 27142  01C8D8  0E29               	movlw	low _tickCount
 27143  01C8DA  24F3               	addwf	243,w,c
 27144  01C8DC  6ED9               	movwf	fsr2l,c
 27145  01C8DE  0E02               	movlw	high _tickCount
 27146  01C8E0  20F4               	addwfc	prodh,w,c
 27147  01C8E2  6EDA               	movwf	fsr2h,c
 27148  01C8E4  0060  F027  FFDE   	movff	btemp+8,postinc2
 27149  01C8EA  0060  F02B  FFDD   	movff	btemp+9,postdec2
 27150                           
 27151                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 27152  01C8F0  52E5               	movf	postdec1,f,c
 27153  01C8F2  52E5               	movf	postdec1,f,c
 27154  01C8F4  52E5               	movf	postdec1,f,c
 27155  01C8F6  0012               	return		;funcret
 27156  01C8F8                     __end_of_StartTimer:
 27157                           	opt callstack 0
 27158                           
 27159 ;; *************** function _display_info *****************
 27160 ;; Defined at:
 27161 ;;		line 190 in file "mconfig.c"
 27162 ;; Parameters:    Size  Location     Type
 27163 ;;		None
 27164 ;; Auto vars:     Size  Location     Type
 27165 ;;		None
 27166 ;; Return value:  Size  Location     Type
 27167 ;;                  1  [STACK] enum E16524
 27168 ;; Registers used:
 27169 ;;		btemp
 27170 ;; Tracked objects:
 27171 ;;		On entry : 0/1
 27172 ;;		On exit  : 0/0
 27173 ;;		Unchanged: 0/0
 27174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27179 ;;Total ram usage:        0 bytes
 27180 ;; Hardware stack levels used:    1
 27181 ;; Hardware stack levels required when called:   15
 27182 ;; This function calls:
 27183 ;;		Nothing
 27184 ;; This function is called by:
 27185 ;;		_check_help
 27186 ;; This function uses a reentrant model
 27187 ;;
 27188                           
 27189                           	psect	text109
 27190  01D3B2                     __ptext109:
 27191                           	opt callstack 0
 27192  01D3B2                     _display_info:
 27193                           	opt callstack 14
 27194                           
 27195                           ;mconfig.c: 192:  return V.response.info;
 27196                           
 27197                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27198                           ;incstack = 0
 27199  01D3B2  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 27200                           
 27201                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 27202  01D3B8  0012               	return		;funcret
 27203  01D3BA                     __end_of_display_info:
 27204                           	opt callstack 0
 27205                           
 27206 ;; *************** function _display_help *****************
 27207 ;; Defined at:
 27208 ;;		line 195 in file "mconfig.c"
 27209 ;; Parameters:    Size  Location     Type
 27210 ;;		None
 27211 ;; Auto vars:     Size  Location     Type
 27212 ;;		None
 27213 ;; Return value:  Size  Location     Type
 27214 ;;                  1  [STACK] enum E16524
 27215 ;; Registers used:
 27216 ;;		btemp
 27217 ;; Tracked objects:
 27218 ;;		On entry : 3F/1
 27219 ;;		On exit  : 0/0
 27220 ;;		Unchanged: 0/0
 27221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27226 ;;Total ram usage:        0 bytes
 27227 ;; Hardware stack levels used:    1
 27228 ;; Hardware stack levels required when called:   15
 27229 ;; This function calls:
 27230 ;;		Nothing
 27231 ;; This function is called by:
 27232 ;;		_check_help
 27233 ;; This function uses a reentrant model
 27234 ;;
 27235                           
 27236                           	psect	text110
 27237  01D3BA                     __ptext110:
 27238                           	opt callstack 0
 27239  01D3BA                     _display_help:
 27240                           	opt callstack 14
 27241                           
 27242                           ;mconfig.c: 197:  return V.response.help_temp;
 27243                           
 27244                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27245                           ;incstack = 0
 27246  01D3BA  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 27247                           
 27248                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 27249  01D3C0  0012               	return		;funcret
 27250  01D3C2                     __end_of_display_help:
 27251                           	opt callstack 0
 27252                           
 27253 ;; *************** function _check_enter_button *****************
 27254 ;; Defined at:
 27255 ;;		line 49 in file "hid.c"
 27256 ;; Parameters:    Size  Location     Type
 27257 ;;  h               2  [STACK] PTR struct H_data
 27258 ;;		 -> H(9), 
 27259 ;; Auto vars:     Size  Location     Type
 27260 ;;		None
 27261 ;; Return value:  Size  Location     Type
 27262 ;;                  1  [STACK] _Bool 
 27263 ;; Registers used:
 27264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 27265 ;; Tracked objects:
 27266 ;;		On entry : 0/0
 27267 ;;		On exit  : 0/0
 27268 ;;		Unchanged: 0/0
 27269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27274 ;;Total ram usage:        0 bytes
 27275 ;; Hardware stack levels used:    1
 27276 ;; Hardware stack levels required when called:   15
 27277 ;; This function calls:
 27278 ;;		Nothing
 27279 ;; This function is called by:
 27280 ;;		_main
 27281 ;; This function uses a reentrant model
 27282 ;;
 27283                           
 27284                           	psect	text111
 27285  01BF00                     __ptext111:
 27286                           	opt callstack 0
 27287  01BF00                     _check_enter_button:
 27288                           	opt callstack 15
 27289                           
 27290                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 27291                           ;stkvar	_h @ sp[(0)+-2]
 27292                           
 27293                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27294                           ;incstack = 0
 27295  01BF00  0EFE               	movlw	-2
 27296  01BF02  006F FF8C  F00B    	movff	plusw1,btemp+10
 27297  01BF08  0EFF               	movlw	-1
 27298  01BF0A  006F FF8C  F00C    	movff	plusw1,btemp+11
 27299  01BF10  0E04               	movlw	4
 27300  01BF12  240B               	addwf	(btemp+10)^0,w,c
 27301  01BF14  6ED9               	movwf	fsr2l,c
 27302  01BF16  0E00               	movlw	0
 27303  01BF18  200C               	addwfc	(btemp+11)^0,w,c
 27304  01BF1A  6EDA               	movwf	fsr2h,c
 27305  01BF1C  50DF               	movf	indf2,w,c
 27306  01BF1E  A4D8               	btfss	status,2,c
 27307  01BF20  D023               	goto	l14296
 27308                           
 27309                           ;stkvar	_h @ sp[(0)+-2]
 27310  01BF22  0EFE               	movlw	-2
 27311  01BF24  006F FF8C  F00B    	movff	plusw1,btemp+10
 27312  01BF2A  0EFF               	movlw	-1
 27313  01BF2C  006F FF8C  F00C    	movff	plusw1,btemp+11
 27314  01BF32  0E05               	movlw	5
 27315  01BF34  240B               	addwf	(btemp+10)^0,w,c
 27316  01BF36  6ED9               	movwf	fsr2l,c
 27317  01BF38  0E00               	movlw	0
 27318  01BF3A  200C               	addwfc	(btemp+11)^0,w,c
 27319  01BF3C  6EDA               	movwf	fsr2h,c
 27320  01BF3E  50DF               	movf	indf2,w,c
 27321  01BF40  A4D8               	btfss	status,2,c
 27322  01BF42  D012               	goto	l14296
 27323                           
 27324                           ;hid.c: 52:   h->wait_enter = 1;
 27325                           ;stkvar	_h @ sp[(0)+-2]
 27326  01BF44  0EFE               	movlw	-2
 27327  01BF46  006F FF8C  F00B    	movff	plusw1,btemp+10
 27328  01BF4C  0EFF               	movlw	-1
 27329  01BF4E  006F FF8C  F00C    	movff	plusw1,btemp+11
 27330  01BF54  0E04               	movlw	4
 27331  01BF56  240B               	addwf	(btemp+10)^0,w,c
 27332  01BF58  6ED9               	movwf	fsr2l,c
 27333  01BF5A  0E00               	movlw	0
 27334  01BF5C  200C               	addwfc	(btemp+11)^0,w,c
 27335  01BF5E  6EDA               	movwf	fsr2h,c
 27336  01BF60  0E01               	movlw	1
 27337  01BF62  6EDF               	movwf	indf2,c
 27338                           
 27339                           ;hid.c: 53:   return 1;
 27340  01BF64  0E01               	movlw	1
 27341  01BF66  D001               	goto	L33
 27342  01BF68                     l14296:
 27343                           
 27344                           ;hid.c: 55:  return 0;
 27345  01BF68  0E00               	movlw	0
 27346  01BF6A                     L33:
 27347  01BF6A  6E01               	movwf	btemp^0,c
 27348                           
 27349                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 27350  01BF6C  52E5               	movf	postdec1,f,c
 27351  01BF6E  52E5               	movf	postdec1,f,c
 27352  01BF70  0012               	return		;funcret
 27353  01BF72                     __end_of_check_enter_button:
 27354                           	opt callstack 0
 27355                           
 27356 ;; *************** function _calc_ror_data *****************
 27357 ;; Defined at:
 27358 ;;		line 102 in file "mbmc.c"
 27359 ;; Parameters:    Size  Location     Type
 27360 ;;		None
 27361 ;; Auto vars:     Size  Location     Type
 27362 ;;		None
 27363 ;; Return value:  Size  Location     Type
 27364 ;;                  1  [STACK] void 
 27365 ;; Registers used:
 27366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27367 ;; Tracked objects:
 27368 ;;		On entry : 0/0
 27369 ;;		On exit  : 0/0
 27370 ;;		Unchanged: 0/0
 27371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27376 ;;Total ram usage:        0 bytes
 27377 ;; Hardware stack levels used:    1
 27378 ;; Hardware stack levels required when called:   18
 27379 ;; This function calls:
 27380 ;;		___flge
 27381 ;;		___flsub
 27382 ;;		_conv_raw_result
 27383 ;;		_fabsf
 27384 ;; This function is called by:
 27385 ;;		_main
 27386 ;; This function uses a reentrant model
 27387 ;;
 27388                           
 27389                           	psect	text112
 27390  019510                     __ptext112:
 27391                           	opt callstack 0
 27392  019510                     _calc_ror_data:
 27393                           	opt callstack 12
 27394                           
 27395                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 27396                           
 27397                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27398                           ;incstack = 0
 27399  019510  0060  F193  FFE6   	movff	calc_ror_data@bcror,postinc1
 27400  019516  0060  F197  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 27401  01951C  0060  F19B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 27402  019522  0060  F19F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 27403  019528  0E00               	movlw	0
 27404  01952A  6EE6               	movwf	postinc1,c
 27405  01952C  0E00               	movlw	0
 27406  01952E  6EE6               	movwf	postinc1,c
 27407  019530  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 27408  019534  0060  F007  FFE6   	movff	btemp,postinc1
 27409  01953A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27410  019540  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27411  019546  0060  F013  FFE6   	movff	btemp+3,postinc1
 27412  01954C  ECB6  F0E3         	call	___flsub	;wreg free
 27413  019550  0060  F007  FFE6   	movff	btemp,postinc1
 27414  019556  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27415  01955C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27416  019562  0060  F013  FFE6   	movff	btemp+3,postinc1
 27417  019568  EC58  F0DA         	call	_fabsf	;wreg free
 27418  01956C  0060  F004  F86F   	movff	btemp,_C+112	;volatile
 27419  019572  0060  F008  F870   	movff	btemp+1,_C+113	;volatile
 27420  019578  0060  F00C  F871   	movff	btemp+2,_C+114	;volatile
 27421  01957E  0060  F010  F872   	movff	btemp+3,_C+115	;volatile
 27422                           
 27423                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 27424  019584  0E00               	movlw	0
 27425  019586  6EE6               	movwf	postinc1,c
 27426  019588  0E00               	movlw	0
 27427  01958A  6EE6               	movwf	postinc1,c
 27428  01958C  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 27429  019590  0060  F004  F064   	movff	btemp,calc_ror_data@bcror
 27430  019596  0060  F008  F065   	movff	btemp+1,calc_ror_data@bcror+1
 27431  01959C  0060  F00C  F066   	movff	btemp+2,calc_ror_data@bcror+2
 27432  0195A2  0060  F010  F067   	movff	btemp+3,calc_ror_data@bcror+3
 27433                           
 27434                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 27435  0195A8  0060  F1A3  FFE6   	movff	calc_ror_data@bvror,postinc1
 27436  0195AE  0060  F1A7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 27437  0195B4  0060  F1AB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 27438  0195BA  0060  F1AF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 27439  0195C0  0E00               	movlw	0
 27440  0195C2  6EE6               	movwf	postinc1,c
 27441  0195C4  0E04               	movlw	4
 27442  0195C6  6EE6               	movwf	postinc1,c
 27443  0195C8  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 27444  0195CC  0060  F007  FFE6   	movff	btemp,postinc1
 27445  0195D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27446  0195D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27447  0195DE  0060  F013  FFE6   	movff	btemp+3,postinc1
 27448  0195E4  ECB6  F0E3         	call	___flsub	;wreg free
 27449  0195E8  0060  F007  FFE6   	movff	btemp,postinc1
 27450  0195EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27451  0195F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27452  0195FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 27453  019600  EC58  F0DA         	call	_fabsf	;wreg free
 27454  019604  0060  F004  F86B   	movff	btemp,_C+108	;volatile
 27455  01960A  0060  F008  F86C   	movff	btemp+1,_C+109	;volatile
 27456  019610  0060  F00C  F86D   	movff	btemp+2,_C+110	;volatile
 27457  019616  0060  F010  F86E   	movff	btemp+3,_C+111	;volatile
 27458                           
 27459                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 27460  01961C  0EE7               	movlw	231
 27461  01961E  6EE6               	movwf	postinc1,c
 27462  019620  0E1D               	movlw	29
 27463  019622  6EE6               	movwf	postinc1,c
 27464  019624  0EA7               	movlw	167
 27465  019626  6EE6               	movwf	postinc1,c
 27466  019628  0E3B               	movlw	59
 27467  01962A  6EE6               	movwf	postinc1,c
 27468  01962C  EE22  F06B         	lfsr	2,_C+108	;volatile
 27469  019630  006F FF7B FFE6     	movff	postinc2,postinc1
 27470  019636  006F FF7B FFE6     	movff	postinc2,postinc1
 27471  01963C  006F FF7B FFE6     	movff	postinc2,postinc1
 27472  019642  006F FF7B FFE6     	movff	postinc2,postinc1
 27473  019648  EC7D  F0CD         	call	___flge	;wreg free
 27474  01964C  B001               	btfsc	btemp& (0+255),0,c
 27475  01964E  D010               	goto	l11962
 27476                           
 27477                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 27478  019650  0EB0               	movlw	176
 27479  019652  006F FFA0  F86B    	movff	wreg,_C+108	;volatile
 27480  019658  0E03               	movlw	3
 27481  01965A  006F FFA0  F86C    	movff	wreg,_C+109	;volatile
 27482  019660  0E67               	movlw	103
 27483  019662  006F FFA0  F86D    	movff	wreg,_C+110	;volatile
 27484  019668  0E3C               	movlw	60
 27485  01966A  006F FFA0  F86E    	movff	wreg,_C+111	;volatile
 27486  019670                     l11962:
 27487                           
 27488                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 27489  019670  0E00               	movlw	0
 27490  019672  6EE6               	movwf	postinc1,c
 27491  019674  0E04               	movlw	4
 27492  019676  6EE6               	movwf	postinc1,c
 27493  019678  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 27494  01967C  0060  F004  F068   	movff	btemp,calc_ror_data@bvror
 27495  019682  0060  F008  F069   	movff	btemp+1,calc_ror_data@bvror+1
 27496  019688  0060  F00C  F06A   	movff	btemp+2,calc_ror_data@bvror+2
 27497  01968E  0060  F010  F06B   	movff	btemp+3,calc_ror_data@bvror+3
 27498                           
 27499                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 27500  019694  0012               	return		;funcret
 27501  019696                     __end_of_calc_ror_data:
 27502                           	opt callstack 0
 27503                           
 27504 ;; *************** function _fabsf *****************
 27505 ;; Defined at:
 27506 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 27507 ;; Parameters:    Size  Location     Type
 27508 ;;  x               4  [STACK] float 
 27509 ;; Auto vars:     Size  Location     Type
 27510 ;;  u               4  [STACK] struct .
 27511 ;; Return value:  Size  Location     Type
 27512 ;;                  4  [STACK] float 
 27513 ;; Registers used:
 27514 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 27515 ;; Tracked objects:
 27516 ;;		On entry : 0/0
 27517 ;;		On exit  : 0/0
 27518 ;;		Unchanged: 0/0
 27519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27524 ;;Total ram usage:        0 bytes
 27525 ;; Hardware stack levels used:    1
 27526 ;; Hardware stack levels required when called:   15
 27527 ;; This function calls:
 27528 ;;		Nothing
 27529 ;; This function is called by:
 27530 ;;		_main
 27531 ;;		_calc_ror_data
 27532 ;;		_calc_bsoc
 27533 ;;		_esr_check
 27534 ;; This function uses a reentrant model
 27535 ;;
 27536                           
 27537                           	psect	text113
 27538  01B4B0                     __ptext113:
 27539                           	opt callstack 0
 27540  01B4B0                     _fabsf:
 27541                           	opt callstack 0
 27542                           
 27543                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27544  01B4B0  52E6               	movf	postinc1,f,c
 27545  01B4B2  52E6               	movf	postinc1,f,c
 27546  01B4B4  52E6               	movf	postinc1,f,c
 27547  01B4B6  52E6               	movf	postinc1,f,c
 27548                           
 27549                           ;incstack = 0
 27550 ;; hardware stack exceeded
 27551  01B4B8  0060  F7B8  F009   	movff	fabsf@F463,btemp+8
 27552  01B4BE  0060  F7BC  F00A   	movff	fabsf@F463+1,btemp+9
 27553  01B4C4  0060  F7C0  F00B   	movff	fabsf@F463+2,btemp+10
 27554  01B4CA  0060  F7C4  F00C   	movff	fabsf@F463+3,btemp+11
 27555                           
 27556                           ;stkvar	_u @ sp[(-4)+0]
 27557  01B4D0  0EFC               	movlw	-4
 27558  01B4D2  0060  F027  FFE3   	movff	btemp+8,plusw1
 27559  01B4D8  0EFD               	movlw	-3
 27560  01B4DA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27561  01B4E0  0EFE               	movlw	-2
 27562  01B4E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27563  01B4E8  0EFF               	movlw	-1
 27564  01B4EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27565                           
 27566                           ;stkvar	_x @ sp[(-4)+-4]
 27567  01B4F0  0EF8               	movlw	-8
 27568  01B4F2  006F FF8C  F009    	movff	plusw1,btemp+8
 27569  01B4F8  0EF9               	movlw	-7
 27570  01B4FA  006F FF8C  F00A    	movff	plusw1,btemp+9
 27571  01B500  0EFA               	movlw	-6
 27572  01B502  006F FF8C  F00B    	movff	plusw1,btemp+10
 27573  01B508  0EFB               	movlw	-5
 27574  01B50A  006F FF8C  F00C    	movff	plusw1,btemp+11
 27575                           
 27576                           ;stkvar	_u @ sp[(-4)+0]
 27577  01B510  0EFC               	movlw	-4
 27578  01B512  0060  F027  FFE3   	movff	btemp+8,plusw1
 27579  01B518  0EFD               	movlw	-3
 27580  01B51A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27581  01B520  0EFE               	movlw	-2
 27582  01B522  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27583  01B528  0EFF               	movlw	-1
 27584  01B52A  0060  F033  FFE3   	movff	btemp+11,plusw1
 27585                           
 27586                           ;stkvar	_u @ sp[(-4)+0]
 27587  01B530  0EFF               	movlw	-1
 27588  01B532  9EE3               	bcf	plusw1,7,c
 27589                           
 27590                           ;stkvar	_u @ sp[(-4)+0]
 27591  01B534  0EFC               	movlw	-4
 27592  01B536  006F FF8C  F001    	movff	plusw1,btemp
 27593  01B53C  0EFD               	movlw	-3
 27594  01B53E  006F FF8C  F002    	movff	plusw1,btemp+1
 27595  01B544  0EFE               	movlw	-2
 27596  01B546  006F FF8C  F003    	movff	plusw1,btemp+2
 27597  01B54C  0EFF               	movlw	-1
 27598  01B54E  006F FF8C  F004    	movff	plusw1,btemp+3
 27599                           
 27600                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 27601  01B554  0EF8               	movlw	248
 27602  01B556  26E1               	addwf	fsr1l,f,c
 27603  01B558  0EFF               	movlw	255
 27604  01B55A  22E2               	addwfc	fsr1h,f,c
 27605  01B55C  0012               	return		;funcret
 27606  01B55E                     __end_of_fabsf:
 27607                           	opt callstack 0
 27608                           
 27609 ;; *************** function _conv_raw_result *****************
 27610 ;; Defined at:
 27611 ;;		line 128 in file "daq.c"
 27612 ;; Parameters:    Size  Location     Type
 27613 ;;  chan            1  [STACK] const enum E16605
 27614 ;;  to_what         1  [STACK] const enum E16686
 27615 ;; Auto vars:     Size  Location     Type
 27616 ;;		None
 27617 ;; Return value:  Size  Location     Type
 27618 ;;                  4  [STACK] float 
 27619 ;; Registers used:
 27620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27621 ;; Tracked objects:
 27622 ;;		On entry : 0/0
 27623 ;;		On exit  : 0/0
 27624 ;;		Unchanged: 0/0
 27625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27630 ;;Total ram usage:        0 bytes
 27631 ;; Hardware stack levels used:    1
 27632 ;; Hardware stack levels required when called:   17
 27633 ;; This function calls:
 27634 ;;		___fldiv
 27635 ;;		___flmul
 27636 ;;		___flsub
 27637 ;;		___xxtofl
 27638 ;;		_get_raw_result
 27639 ;;		_nanf
 27640 ;; This function is called by:
 27641 ;;		_main
 27642 ;;		_convert_adc_data
 27643 ;;		_calc_ror_data
 27644 ;;		_check_day_time
 27645 ;;		_init_bsoc
 27646 ;;		_esr_check
 27647 ;; This function uses a reentrant model
 27648 ;;
 27649                           
 27650                           	psect	text114
 27651  01543C                     __ptext114:
 27652                           	opt callstack 0
 27653  01543C                     _conv_raw_result:
 27654                           	opt callstack 0
 27655                           
 27656                           ;daq.c: 128: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 129: {;daq.c: 131:  switch (to_what) {
 27657                           
 27658                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27659                           ;incstack = 0
 27660 ;; hardware stack exceeded
 27661  01543C  D24A               	goto	l10460
 27662  01543E                     l10406:
 27663                           
 27664                           ;daq.c: 133:   if (!(0b0011110001110111 >> chan & 0x1))
 27665                           ;stkvar	_chan @ sp[(0)+-1]
 27666  01543E  0EFF               	movlw	-1
 27667  015440  006F FF8C  F00C    	movff	plusw1,btemp+11
 27668  015446  0E77               	movlw	119
 27669  015448  6E09               	movwf	(btemp+8)^0,c
 27670  01544A  0E3C               	movlw	60
 27671  01544C  6E0A               	movwf	(btemp+9)^0,c
 27672  01544E  2A0C               	incf	(btemp+11)^0,f,c
 27673  015450  D003               	goto	u9574
 27674  015452                     u9575:
 27675  015452  340A               	rlcf	(btemp+9)^0,w,c
 27676  015454  320A               	rrcf	(btemp+9)^0,f,c
 27677  015456  3209               	rrcf	(btemp+8)^0,f,c
 27678  015458                     u9574:
 27679  015458  2E0C               	decfsz	(btemp+11)^0,f,c
 27680  01545A  D7FB               	goto	u9575
 27681  01545C  B009               	btfsc	(btemp+8)^0,0,c
 27682  01545E  D007               	goto	l10412
 27683                           
 27684                           ;daq.c: 134:    return nanf("");
 27685  015460  0E4D               	movlw	low (STR_81+126)
 27686  015462  6EE6               	movwf	postinc1,c
 27687  015464  0EFB               	movlw	high (STR_81+126)
 27688  015466  6EE6               	movwf	postinc1,c
 27689  015468  EC56  F0E1         	call	_nanf	;wreg free
 27690  01546C  D242               	goto	l1857
 27691  01546E                     l10412:
 27692                           
 27693                           ;daq.c: 136:   if (0b0000000000000011 >> chan & 0x1) {
 27694                           ;stkvar	_chan @ sp[(0)+-1]
 27695  01546E  0EFF               	movlw	-1
 27696  015470  006F FF8C  F00C    	movff	plusw1,btemp+11
 27697  015476  0E03               	movlw	3
 27698  015478  6E09               	movwf	(btemp+8)^0,c
 27699  01547A  0E00               	movlw	0
 27700  01547C  6E0A               	movwf	(btemp+9)^0,c
 27701  01547E  2A0C               	incf	(btemp+11)^0,f,c
 27702  015480  D003               	goto	u9594
 27703  015482                     u9595:
 27704  015482  340A               	rlcf	(btemp+9)^0,w,c
 27705  015484  320A               	rrcf	(btemp+9)^0,f,c
 27706  015486  3209               	rrcf	(btemp+8)^0,f,c
 27707  015488                     u9594:
 27708  015488  2E0C               	decfsz	(btemp+11)^0,f,c
 27709  01548A  D7FB               	goto	u9595
 27710  01548C  A009               	btfss	(btemp+8)^0,0,c
 27711  01548E  D0F3               	goto	l10426
 27712                           
 27713                           ;daq.c: 137:    if (0b0000000000000001 >> chan & 0x1) {
 27714                           ;stkvar	_chan @ sp[(0)+-1]
 27715  015490  0EFF               	movlw	-1
 27716  015492  006F FF8C  F00C    	movff	plusw1,btemp+11
 27717  015498  0E01               	movlw	1
 27718  01549A  6E09               	movwf	(btemp+8)^0,c
 27719  01549C  0E00               	movlw	0
 27720  01549E  6E0A               	movwf	(btemp+9)^0,c
 27721  0154A0  2A0C               	incf	(btemp+11)^0,f,c
 27722  0154A2  D003               	goto	u9614
 27723  0154A4                     u9615:
 27724  0154A4  340A               	rlcf	(btemp+9)^0,w,c
 27725  0154A6  320A               	rrcf	(btemp+9)^0,f,c
 27726  0154A8  3209               	rrcf	(btemp+8)^0,f,c
 27727  0154AA                     u9614:
 27728  0154AA  2E0C               	decfsz	(btemp+11)^0,f,c
 27729  0154AC  D7FB               	goto	u9615
 27730  0154AE  A009               	btfss	(btemp+8)^0,0,c
 27731  0154B0  D071               	goto	l10422
 27732                           
 27733                           ;daq.c: 138:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 27734  0154B2  0060  F363  FFE6   	movff	_R+42,postinc1
 27735  0154B8  0060  F367  FFE6   	movff	_R+43,postinc1
 27736  0154BE  0060  F36B  FFE6   	movff	_R+44,postinc1
 27737  0154C4  0060  F36F  FFE6   	movff	_R+45,postinc1
 27738  0154CA  0060  F350  F009   	movff	_R+38,btemp+8	;volatile
 27739  0154D0  0060  F354  F00A   	movff	_R+39,btemp+9	;volatile
 27740  0154D6  0E00               	movlw	0
 27741  0154D8  BE0A               	btfsc	(btemp+9)^0,7,c
 27742  0154DA  0EFF               	movlw	255
 27743  0154DC  6E0B               	movwf	(btemp+10)^0,c
 27744  0154DE  6E0C               	movwf	(btemp+11)^0,c
 27745  0154E0  0060  F027  FFE6   	movff	btemp+8,postinc1
 27746  0154E6  0060  F02B  FFE6   	movff	btemp+9,postinc1
 27747  0154EC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 27748  0154F2  0060  F033  FFE6   	movff	btemp+11,postinc1
 27749  0154F8  0E01               	movlw	1
 27750  0154FA  6EE6               	movwf	postinc1,c
 27751  0154FC  EC2C  F0C6         	call	___xxtofl	;wreg free
 27752  015500  0060  F007  FFE6   	movff	btemp,postinc1
 27753  015506  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27754  01550C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27755  015512  0060  F013  FFE6   	movff	btemp+3,postinc1
 27756                           
 27757                           ;stkvar	_chan @ sp[(-8)+-1]
 27758  015518  0EF7               	movlw	-9
 27759  01551A  50E3               	movf	plusw1,w,c
 27760  01551C  6EE6               	movwf	postinc1,c
 27761  01551E  ECDF  F0E8         	call	_get_raw_result	;wreg free
 27762  015522  0060  F004  F00B   	movff	btemp,btemp+10
 27763  015528  0060  F008  F00C   	movff	btemp+1,btemp+11
 27764  01552E  500B               	movf	(btemp+10)^0,w,c
 27765  015530  6E05               	movwf	(btemp+4)^0,c
 27766  015532  500C               	movf	(btemp+11)^0,w,c
 27767  015534  6E06               	movwf	(btemp+5)^0,c
 27768  015536  6A07               	clrf	(btemp+6)^0,c
 27769  015538  6A08               	clrf	(btemp+7)^0,c
 27770  01553A  0060  F017  FFE6   	movff	btemp+4,postinc1
 27771  015540  0060  F01B  FFE6   	movff	btemp+5,postinc1
 27772  015546  0060  F01F  FFE6   	movff	btemp+6,postinc1
 27773  01554C  0060  F023  FFE6   	movff	btemp+7,postinc1
 27774  015552  0E00               	movlw	0
 27775  015554  6EE6               	movwf	postinc1,c
 27776  015556  EC2C  F0C6         	call	___xxtofl	;wreg free
 27777  01555A  0060  F007  FFE6   	movff	btemp,postinc1
 27778  015560  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27779  015566  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27780  01556C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27781  015572  ECB6  F0E3         	call	___flsub	;wreg free
 27782  015576  0060  F007  FFE6   	movff	btemp,postinc1
 27783  01557C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27784  015582  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27785  015588  0060  F013  FFE6   	movff	btemp+3,postinc1
 27786  01558E  EC6E  F09F         	call	___flmul	;wreg free
 27787  015592  D1AF               	goto	l1857
 27788  015594                     l10422:
 27789                           
 27790                           ;daq.c: 140:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 27791  015594  0060  F373  FFE6   	movff	_R+46,postinc1
 27792  01559A  0060  F377  FFE6   	movff	_R+47,postinc1
 27793  0155A0  0060  F37B  FFE6   	movff	_R+48,postinc1
 27794  0155A6  0060  F37F  FFE6   	movff	_R+49,postinc1
 27795  0155AC  0060  F358  F009   	movff	_R+40,btemp+8	;volatile
 27796  0155B2  0060  F35C  F00A   	movff	_R+41,btemp+9	;volatile
 27797  0155B8  0E00               	movlw	0
 27798  0155BA  BE0A               	btfsc	(btemp+9)^0,7,c
 27799  0155BC  0EFF               	movlw	255
 27800  0155BE  6E0B               	movwf	(btemp+10)^0,c
 27801  0155C0  6E0C               	movwf	(btemp+11)^0,c
 27802  0155C2  0060  F027  FFE6   	movff	btemp+8,postinc1
 27803  0155C8  0060  F02B  FFE6   	movff	btemp+9,postinc1
 27804  0155CE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 27805  0155D4  0060  F033  FFE6   	movff	btemp+11,postinc1
 27806  0155DA  0E01               	movlw	1
 27807  0155DC  6EE6               	movwf	postinc1,c
 27808  0155DE  EC2C  F0C6         	call	___xxtofl	;wreg free
 27809  0155E2  0060  F007  FFE6   	movff	btemp,postinc1
 27810  0155E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27811  0155EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27812  0155F4  0060  F013  FFE6   	movff	btemp+3,postinc1
 27813                           
 27814                           ;stkvar	_chan @ sp[(-8)+-1]
 27815  0155FA  0EF7               	movlw	-9
 27816  0155FC  50E3               	movf	plusw1,w,c
 27817  0155FE  6EE6               	movwf	postinc1,c
 27818  015600  ECDF  F0E8         	call	_get_raw_result	;wreg free
 27819  015604  0060  F004  F00B   	movff	btemp,btemp+10
 27820  01560A  0060  F008  F00C   	movff	btemp+1,btemp+11
 27821  015610  500B               	movf	(btemp+10)^0,w,c
 27822  015612  6E05               	movwf	(btemp+4)^0,c
 27823  015614  500C               	movf	(btemp+11)^0,w,c
 27824  015616  6E06               	movwf	(btemp+5)^0,c
 27825  015618  6A07               	clrf	(btemp+6)^0,c
 27826  01561A  6A08               	clrf	(btemp+7)^0,c
 27827  01561C  0060  F017  FFE6   	movff	btemp+4,postinc1
 27828  015622  0060  F01B  FFE6   	movff	btemp+5,postinc1
 27829  015628  0060  F01F  FFE6   	movff	btemp+6,postinc1
 27830  01562E  0060  F023  FFE6   	movff	btemp+7,postinc1
 27831  015634  0E00               	movlw	0
 27832  015636  6EE6               	movwf	postinc1,c
 27833  015638  EC2C  F0C6         	call	___xxtofl	;wreg free
 27834  01563C  0060  F007  FFE6   	movff	btemp,postinc1
 27835  015642  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27836  015648  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27837  01564E  0060  F013  FFE6   	movff	btemp+3,postinc1
 27838  015654  ECB6  F0E3         	call	___flsub	;wreg free
 27839  015658  0060  F007  FFE6   	movff	btemp,postinc1
 27840  01565E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27841  015664  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27842  01566A  0060  F013  FFE6   	movff	btemp+3,postinc1
 27843  015670  EC6E  F09F         	call	___flmul	;wreg free
 27844  015674  D13E               	goto	l1857
 27845  015676                     l10426:
 27846                           
 27847                           ;daq.c: 143:    if (0b0000100000000000 >> chan & 0x1) {
 27848                           ;stkvar	_chan @ sp[(0)+-1]
 27849  015676  0EFF               	movlw	-1
 27850  015678  006F FF8C  F00C    	movff	plusw1,btemp+11
 27851  01567E  0E00               	movlw	0
 27852  015680  6E09               	movwf	(btemp+8)^0,c
 27853  015682  0E08               	movlw	8
 27854  015684  6E0A               	movwf	(btemp+9)^0,c
 27855  015686  2A0C               	incf	(btemp+11)^0,f,c
 27856  015688  D003               	goto	u9634
 27857  01568A                     u9635:
 27858  01568A  340A               	rlcf	(btemp+9)^0,w,c
 27859  01568C  320A               	rrcf	(btemp+9)^0,f,c
 27860  01568E  3209               	rrcf	(btemp+8)^0,f,c
 27861  015690                     u9634:
 27862  015690  2E0C               	decfsz	(btemp+11)^0,f,c
 27863  015692  D7FB               	goto	u9635
 27864  015694  A009               	btfss	(btemp+8)^0,0,c
 27865  015696  D008               	goto	l10434
 27866                           
 27867                           ;daq.c: 144:     return 25.0;
 27868  015698  0E00               	movlw	0
 27869  01569A  6E01               	movwf	btemp^0,c
 27870  01569C  0E00               	movlw	0
 27871  01569E  6E02               	movwf	(btemp+1)^0,c
 27872  0156A0  0EC8               	movlw	200
 27873  0156A2  6E03               	movwf	(btemp+2)^0,c
 27874  0156A4  0E41               	movlw	65
 27875  0156A6  D113               	goto	L34
 27876  0156A8                     l10434:
 27877                           
 27878                           ;daq.c: 146:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 27879  0156A8  0E00               	movlw	0
 27880  0156AA  6EE6               	movwf	postinc1,c
 27881  0156AC  0E00               	movlw	0
 27882  0156AE  6EE6               	movwf	postinc1,c
 27883  0156B0  0E7A               	movlw	122
 27884  0156B2  6EE6               	movwf	postinc1,c
 27885  0156B4  0E44               	movlw	68
 27886  0156B6  6EE6               	movwf	postinc1,c
 27887  0156B8  0E61               	movlw	97
 27888  0156BA  6EE6               	movwf	postinc1,c
 27889  0156BC  0E03               	movlw	3
 27890  0156BE  6EE6               	movwf	postinc1,c
 27891  0156C0  0E84               	movlw	132
 27892  0156C2  6EE6               	movwf	postinc1,c
 27893  0156C4  0E40               	movlw	64
 27894  0156C6  6EE6               	movwf	postinc1,c
 27895                           
 27896                           ;stkvar	_chan @ sp[(-8)+-1]
 27897  0156C8  0EF7               	movlw	-9
 27898  0156CA  50E3               	movf	plusw1,w,c
 27899  0156CC  6EE6               	movwf	postinc1,c
 27900  0156CE  ECDF  F0E8         	call	_get_raw_result	;wreg free
 27901  0156D2  0060  F004  F00B   	movff	btemp,btemp+10
 27902  0156D8  0060  F008  F00C   	movff	btemp+1,btemp+11
 27903  0156DE  500B               	movf	(btemp+10)^0,w,c
 27904  0156E0  6E05               	movwf	(btemp+4)^0,c
 27905  0156E2  500C               	movf	(btemp+11)^0,w,c
 27906  0156E4  6E06               	movwf	(btemp+5)^0,c
 27907  0156E6  6A07               	clrf	(btemp+6)^0,c
 27908  0156E8  6A08               	clrf	(btemp+7)^0,c
 27909  0156EA  0060  F017  FFE6   	movff	btemp+4,postinc1
 27910  0156F0  0060  F01B  FFE6   	movff	btemp+5,postinc1
 27911  0156F6  0060  F01F  FFE6   	movff	btemp+6,postinc1
 27912  0156FC  0060  F023  FFE6   	movff	btemp+7,postinc1
 27913  015702  0E00               	movlw	0
 27914  015704  6EE6               	movwf	postinc1,c
 27915  015706  EC2C  F0C6         	call	___xxtofl	;wreg free
 27916  01570A  0060  F007  FFE6   	movff	btemp,postinc1
 27917  015710  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27918  015716  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27919  01571C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27920  015722  EC6E  F09F         	call	___flmul	;wreg free
 27921  015726  0060  F007  FFE6   	movff	btemp,postinc1
 27922  01572C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27923  015732  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27924  015738  0060  F013  FFE6   	movff	btemp+3,postinc1
 27925  01573E  EC61  F0A7         	call	___fldiv	;wreg free
 27926  015742  D0D7               	goto	l1857
 27927  015744                     l10438:
 27928                           
 27929                           ;daq.c: 151:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 27930                           ;stkvar	_chan @ sp[(0)+-1]
 27931  015744  0EFF               	movlw	-1
 27932  015746  006F FF8C  F00C    	movff	plusw1,btemp+11
 27933  01574C  0E03               	movlw	3
 27934  01574E  6E09               	movwf	(btemp+8)^0,c
 27935  015750  0E00               	movlw	0
 27936  015752  6E0A               	movwf	(btemp+9)^0,c
 27937  015754  2A0C               	incf	(btemp+11)^0,f,c
 27938  015756  D003               	goto	u9654
 27939  015758                     u9655:
 27940  015758  340A               	rlcf	(btemp+9)^0,w,c
 27941  01575A  320A               	rrcf	(btemp+9)^0,f,c
 27942  01575C  3209               	rrcf	(btemp+8)^0,f,c
 27943  01575E                     u9654:
 27944  01575E  2E0C               	decfsz	(btemp+11)^0,f,c
 27945  015760  D7FB               	goto	u9655
 27946  015762  B009               	btfsc	(btemp+8)^0,0,c
 27947  015764  D011               	goto	u9680
 27948                           
 27949                           ;stkvar	_chan @ sp[(0)+-1]
 27950  015766  0EFF               	movlw	-1
 27951  015768  006F FF8C  F00C    	movff	plusw1,btemp+11
 27952  01576E  0E00               	movlw	0
 27953  015770  6E09               	movwf	(btemp+8)^0,c
 27954  015772  0E08               	movlw	8
 27955  015774  6E0A               	movwf	(btemp+9)^0,c
 27956  015776  2A0C               	incf	(btemp+11)^0,f,c
 27957  015778  D003               	goto	u9674
 27958  01577A                     u9675:
 27959  01577A  340A               	rlcf	(btemp+9)^0,w,c
 27960  01577C  320A               	rrcf	(btemp+9)^0,f,c
 27961  01577E  3209               	rrcf	(btemp+8)^0,f,c
 27962  015780                     u9674:
 27963  015780  2E0C               	decfsz	(btemp+11)^0,f,c
 27964  015782  D7FB               	goto	u9675
 27965  015784  A009               	btfss	(btemp+8)^0,0,c
 27966  015786  D04E               	goto	l10446
 27967  015788                     u9680:
 27968                           
 27969                           ;daq.c: 152:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 27970  015788  0E00               	movlw	0
 27971  01578A  6EE6               	movwf	postinc1,c
 27972  01578C  0E00               	movlw	0
 27973  01578E  6EE6               	movwf	postinc1,c
 27974  015790  0E7A               	movlw	122
 27975  015792  6EE6               	movwf	postinc1,c
 27976  015794  0E44               	movlw	68
 27977  015796  6EE6               	movwf	postinc1,c
 27978  015798  0E00               	movlw	0
 27979  01579A  6EE6               	movwf	postinc1,c
 27980  01579C  0E00               	movlw	0
 27981  01579E  6EE6               	movwf	postinc1,c
 27982  0157A0  0E20               	movlw	32
 27983  0157A2  6EE6               	movwf	postinc1,c
 27984  0157A4  0E3F               	movlw	63
 27985  0157A6  6EE6               	movwf	postinc1,c
 27986                           
 27987                           ;stkvar	_chan @ sp[(-8)+-1]
 27988  0157A8  0EF7               	movlw	-9
 27989  0157AA  50E3               	movf	plusw1,w,c
 27990  0157AC  6EE6               	movwf	postinc1,c
 27991  0157AE  ECDF  F0E8         	call	_get_raw_result	;wreg free
 27992  0157B2  0060  F004  F00B   	movff	btemp,btemp+10
 27993  0157B8  0060  F008  F00C   	movff	btemp+1,btemp+11
 27994  0157BE  500B               	movf	(btemp+10)^0,w,c
 27995  0157C0  6E05               	movwf	(btemp+4)^0,c
 27996  0157C2  500C               	movf	(btemp+11)^0,w,c
 27997  0157C4  6E06               	movwf	(btemp+5)^0,c
 27998  0157C6  6A07               	clrf	(btemp+6)^0,c
 27999  0157C8  6A08               	clrf	(btemp+7)^0,c
 28000  0157CA  0060  F017  FFE6   	movff	btemp+4,postinc1
 28001  0157D0  0060  F01B  FFE6   	movff	btemp+5,postinc1
 28002  0157D6  0060  F01F  FFE6   	movff	btemp+6,postinc1
 28003  0157DC  0060  F023  FFE6   	movff	btemp+7,postinc1
 28004  0157E2  0E00               	movlw	0
 28005  0157E4  6EE6               	movwf	postinc1,c
 28006  0157E6  EC2C  F0C6         	call	___xxtofl	;wreg free
 28007  0157EA  0060  F007  FFE6   	movff	btemp,postinc1
 28008  0157F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28009  0157F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28010  0157FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 28011  015802  EC6E  F09F         	call	___flmul	;wreg free
 28012  015806  0060  F007  FFE6   	movff	btemp,postinc1
 28013  01580C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28014  015812  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28015  015818  0060  F013  FFE6   	movff	btemp+3,postinc1
 28016  01581E  EC61  F0A7         	call	___fldiv	;wreg free
 28017  015822  D067               	goto	l1857
 28018  015824                     l10446:
 28019                           
 28020                           ;daq.c: 154:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 28021  015824  0E00               	movlw	0
 28022  015826  6EE6               	movwf	postinc1,c
 28023  015828  0E00               	movlw	0
 28024  01582A  6EE6               	movwf	postinc1,c
 28025  01582C  0E7A               	movlw	122
 28026  01582E  6EE6               	movwf	postinc1,c
 28027  015830  0E44               	movlw	68
 28028  015832  6EE6               	movwf	postinc1,c
 28029  015834  0E61               	movlw	97
 28030  015836  6EE6               	movwf	postinc1,c
 28031  015838  0E03               	movlw	3
 28032  01583A  6EE6               	movwf	postinc1,c
 28033  01583C  0E84               	movlw	132
 28034  01583E  6EE6               	movwf	postinc1,c
 28035  015840  0E40               	movlw	64
 28036  015842  6EE6               	movwf	postinc1,c
 28037                           
 28038                           ;stkvar	_chan @ sp[(-8)+-1]
 28039  015844  0EF7               	movlw	-9
 28040  015846  50E3               	movf	plusw1,w,c
 28041  015848  6EE6               	movwf	postinc1,c
 28042  01584A  ECDF  F0E8         	call	_get_raw_result	;wreg free
 28043  01584E  0060  F004  F00B   	movff	btemp,btemp+10
 28044  015854  0060  F008  F00C   	movff	btemp+1,btemp+11
 28045  01585A  500B               	movf	(btemp+10)^0,w,c
 28046  01585C  6E05               	movwf	(btemp+4)^0,c
 28047  01585E  500C               	movf	(btemp+11)^0,w,c
 28048  015860  6E06               	movwf	(btemp+5)^0,c
 28049  015862  6A07               	clrf	(btemp+6)^0,c
 28050  015864  6A08               	clrf	(btemp+7)^0,c
 28051  015866  0060  F017  FFE6   	movff	btemp+4,postinc1
 28052  01586C  0060  F01B  FFE6   	movff	btemp+5,postinc1
 28053  015872  0060  F01F  FFE6   	movff	btemp+6,postinc1
 28054  015878  0060  F023  FFE6   	movff	btemp+7,postinc1
 28055  01587E  0E00               	movlw	0
 28056  015880  6EE6               	movwf	postinc1,c
 28057  015882  EC2C  F0C6         	call	___xxtofl	;wreg free
 28058  015886  0060  F007  FFE6   	movff	btemp,postinc1
 28059  01588C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28060  015892  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28061  015898  0060  F013  FFE6   	movff	btemp+3,postinc1
 28062  01589E  EC6E  F09F         	call	___flmul	;wreg free
 28063  0158A2  0060  F007  FFE6   	movff	btemp,postinc1
 28064  0158A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28065  0158AE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28066  0158B4  0060  F013  FFE6   	movff	btemp+3,postinc1
 28067  0158BA  EC61  F0A7         	call	___fldiv	;wreg free
 28068  0158BE  D019               	goto	l1857
 28069  0158C0                     l10452:
 28070                           
 28071                           ;daq.c: 157:   return 0.0;
 28072  0158C0  0E00               	movlw	0
 28073  0158C2  6E01               	movwf	btemp^0,c
 28074  0158C4  0E00               	movlw	0
 28075  0158C6  6E02               	movwf	(btemp+1)^0,c
 28076  0158C8  0E00               	movlw	0
 28077  0158CA  6E03               	movwf	(btemp+2)^0,c
 28078  0158CC  0E00               	movlw	0
 28079  0158CE                     L34:
 28080  0158CE  6E04               	movwf	(btemp+3)^0,c
 28081  0158D0  D010               	goto	l1857
 28082  0158D2                     l10460:
 28083                           
 28084                           ;stkvar	_to_what @ sp[(0)+-2]
 28085  0158D2  0EFE               	movlw	-2
 28086  0158D4  50E3               	movf	plusw1,w,c
 28087  0158D6  6E0B               	movwf	(btemp+10)^0,c
 28088  0158D8  6A0C               	clrf	(btemp+11)^0,c
 28089                           
 28090                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28091                           ; Switch size 1, requested type "simple"
 28092                           ; Number of cases is 1, Range of values is 0 to 0
 28093                           ; switch strategies available:
 28094                           ; Name         Instructions Cycles
 28095                           ; simple_byte            4     3 (average)
 28096                           ;	Chosen strategy is simple_byte
 28097  0158DA  500C               	movf	(btemp+11)^0,w,c
 28098  0158DC  0A00               	xorlw	0	; case 0
 28099  0158DE  A4D8               	btfss	status,2,c
 28100  0158E0  D7EF               	goto	l10452
 28101                           
 28102                           ; Switch size 1, requested type "simple"
 28103                           ; Number of cases is 2, Range of values is 0 to 1
 28104                           ; switch strategies available:
 28105                           ; Name         Instructions Cycles
 28106                           ; simple_byte            7     4 (average)
 28107                           ;	Chosen strategy is simple_byte
 28108  0158E2  500B               	movf	(btemp+10)^0,w,c
 28109  0158E4  0A00               	xorlw	0	; case 0
 28110  0158E6  B4D8               	btfsc	status,2,c
 28111  0158E8  D5AA               	goto	l10406
 28112  0158EA  0A01               	xorlw	1	; case 1
 28113  0158EC  B4D8               	btfsc	status,2,c
 28114  0158EE  D72A               	goto	l10438
 28115  0158F0  D7E7               	goto	l10452
 28116  0158F2                     l1857:
 28117                           
 28118                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 28119  0158F2  52E5               	movf	postdec1,f,c
 28120  0158F4  52E5               	movf	postdec1,f,c
 28121  0158F6  0012               	return		;funcret
 28122  0158F8                     __end_of_conv_raw_result:
 28123                           	opt callstack 0
 28124                           
 28125 ;; *************** function _nanf *****************
 28126 ;; Defined at:
 28127 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 28128 ;; Parameters:    Size  Location     Type
 28129 ;;  s               2  [STACK] PTR const unsigned char 
 28130 ;;		 -> STR_118(1), STR_80(1), 
 28131 ;; Auto vars:     Size  Location     Type
 28132 ;;  u               4  [STACK] struct .
 28133 ;; Return value:  Size  Location     Type
 28134 ;;                  4  [STACK] float 
 28135 ;; Registers used:
 28136 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 28137 ;; Tracked objects:
 28138 ;;		On entry : 0/0
 28139 ;;		On exit  : 0/0
 28140 ;;		Unchanged: 0/0
 28141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28146 ;;Total ram usage:        0 bytes
 28147 ;; Hardware stack levels used:    1
 28148 ;; Hardware stack levels required when called:   15
 28149 ;; This function calls:
 28150 ;;		Nothing
 28151 ;; This function is called by:
 28152 ;;		_conv_raw_result
 28153 ;; This function uses a reentrant model
 28154 ;;
 28155                           
 28156                           	psect	text115
 28157  01C2AC                     __ptext115:
 28158                           	opt callstack 0
 28159  01C2AC                     _nanf:
 28160                           	opt callstack 0
 28161                           
 28162                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28163  01C2AC  52E6               	movf	postinc1,f,c
 28164  01C2AE  52E6               	movf	postinc1,f,c
 28165  01C2B0  52E6               	movf	postinc1,f,c
 28166  01C2B2  52E6               	movf	postinc1,f,c
 28167                           
 28168                           ;incstack = 0
 28169 ;; hardware stack exceeded
 28170  01C2B4  0EFF               	movlw	255
 28171  01C2B6  6E09               	movwf	(btemp+8)^0,c
 28172  01C2B8  0EFF               	movlw	255
 28173  01C2BA  6E0A               	movwf	(btemp+9)^0,c
 28174  01C2BC  0EFF               	movlw	255
 28175  01C2BE  6E0B               	movwf	(btemp+10)^0,c
 28176  01C2C0  0E7F               	movlw	127
 28177  01C2C2  6E0C               	movwf	(btemp+11)^0,c
 28178                           
 28179                           ;stkvar	_u @ sp[(-4)+0]
 28180  01C2C4  0EFC               	movlw	-4
 28181  01C2C6  0060  F027  FFE3   	movff	btemp+8,plusw1
 28182  01C2CC  0EFD               	movlw	-3
 28183  01C2CE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28184  01C2D4  0EFE               	movlw	-2
 28185  01C2D6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28186  01C2DC  0EFF               	movlw	-1
 28187  01C2DE  0060  F033  FFE3   	movff	btemp+11,plusw1
 28188                           
 28189                           ;stkvar	_u @ sp[(-4)+0]
 28190  01C2E4  0EFC               	movlw	-4
 28191  01C2E6  006F FF8C  F001    	movff	plusw1,btemp
 28192  01C2EC  0EFD               	movlw	-3
 28193  01C2EE  006F FF8C  F002    	movff	plusw1,btemp+1
 28194  01C2F4  0EFE               	movlw	-2
 28195  01C2F6  006F FF8C  F003    	movff	plusw1,btemp+2
 28196  01C2FC  0EFF               	movlw	-1
 28197  01C2FE  006F FF8C  F004    	movff	plusw1,btemp+3
 28198                           
 28199                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 28200  01C304  0EFA               	movlw	250
 28201  01C306  26E1               	addwf	fsr1l,f,c
 28202  01C308  0EFF               	movlw	255
 28203  01C30A  22E2               	addwfc	fsr1h,f,c
 28204  01C30C  0012               	return		;funcret
 28205  01C30E                     __end_of_nanf:
 28206                           	opt callstack 0
 28207                           
 28208 ;; *************** function _get_raw_result *****************
 28209 ;; Defined at:
 28210 ;;		line 120 in file "daq.c"
 28211 ;; Parameters:    Size  Location     Type
 28212 ;;  index           1  [STACK] const enum E16605
 28213 ;; Auto vars:     Size  Location     Type
 28214 ;;		None
 28215 ;; Return value:  Size  Location     Type
 28216 ;;                  2  [STACK] unsigned short 
 28217 ;; Registers used:
 28218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 28219 ;; Tracked objects:
 28220 ;;		On entry : 0/1
 28221 ;;		On exit  : 0/0
 28222 ;;		Unchanged: 0/0
 28223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28228 ;;Total ram usage:        0 bytes
 28229 ;; Hardware stack levels used:    1
 28230 ;; Hardware stack levels required when called:   15
 28231 ;; This function calls:
 28232 ;;		Nothing
 28233 ;; This function is called by:
 28234 ;;		_main
 28235 ;;		_current_sensor_cal
 28236 ;;		_conv_raw_result
 28237 ;; This function uses a reentrant model
 28238 ;;
 28239                           
 28240                           	psect	text116
 28241  01D1BE                     __ptext116:
 28242                           	opt callstack 0
 28243  01D1BE                     _get_raw_result:
 28244                           	opt callstack 0
 28245                           
 28246                           ;daq.c: 120: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 121: {;daq.c
      +                          : 122:  return R.raw_adc[index];
 28247                           ;stkvar	_index @ sp[(0)+-1]
 28248                           
 28249                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28250                           ;incstack = 0
 28251 ;; hardware stack exceeded
 28252  01D1BE  0EFF               	movlw	-1
 28253  01D1C0  50E3               	movf	plusw1,w,c
 28254  01D1C2  0D02               	mullw	2
 28255  01D1C4  50F3               	movf	243,w,c
 28256  01D1C6  0FAE               	addlw	low _R
 28257  01D1C8  6ED9               	movwf	fsr2l,c
 28258  01D1CA  6ADA               	clrf	fsr2h,c
 28259  01D1CC  006F FF78  F001    	movff	postinc2,btemp
 28260  01D1D2  006F FF74  F002    	movff	postdec2,btemp+1
 28261                           
 28262                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 28263  01D1D8  52E5               	movf	postdec1,f,c
 28264  01D1DA  0012               	return		;funcret
 28265  01D1DC                     __end_of_get_raw_result:
 28266                           	opt callstack 0
 28267                           
 28268 ;; *************** function ___xxtofl *****************
 28269 ;; Defined at:
 28270 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 28271 ;; Parameters:    Size  Location     Type
 28272 ;;  sign            1  [STACK] unsigned char 
 28273 ;;  val             4  [STACK] long 
 28274 ;; Auto vars:     Size  Location     Type
 28275 ;;  arg             4  [STACK] unsigned long 
 28276 ;;  exp             1  [STACK] unsigned char 
 28277 ;; Return value:  Size  Location     Type
 28278 ;;                  4  [STACK] unsigned char 
 28279 ;; Registers used:
 28280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 28281 ;; Tracked objects:
 28282 ;;		On entry : 0/0
 28283 ;;		On exit  : 0/0
 28284 ;;		Unchanged: 0/0
 28285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28290 ;;Total ram usage:        0 bytes
 28291 ;; Hardware stack levels used:    1
 28292 ;; Hardware stack levels required when called:   15
 28293 ;; This function calls:
 28294 ;;		Nothing
 28295 ;; This function is called by:
 28296 ;;		_conv_raw_result
 28297 ;;		_init_bsoc
 28298 ;; This function uses a reentrant model
 28299 ;;
 28300                           
 28301                           	psect	text117
 28302  018C58                     __ptext117:
 28303                           	opt callstack 0
 28304  018C58                     ___xxtofl:
 28305                           	opt callstack 0
 28306                           
 28307                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28308  018C58  0E05               	movlw	5
 28309  018C5A  26E1               	addwf	fsr1l,f,c
 28310  018C5C  0E00               	movlw	0
 28311  018C5E  22E2               	addwfc	fsr1h,f,c
 28312                           
 28313                           ;stkvar	_sign @ sp[(-5)+-1]
 28314                           
 28315                           ;incstack = 0
 28316 ;; hardware stack exceeded
 28317  018C60  0EFA               	movlw	-6
 28318  018C62  50E3               	movf	plusw1,w,c
 28319  018C64  B4D8               	btfsc	status,2,c
 28320  018C66  D01D               	goto	l10354
 28321                           
 28322                           ;stkvar	_val @ sp[(-5)+-5]
 28323  018C68  0EF9               	movlw	-7
 28324  018C6A  AEE3               	btfss	plusw1,7,c
 28325  018C6C  D01A               	goto	l10354
 28326                           
 28327                           ;stkvar	_val @ sp[(-5)+-5]
 28328  018C6E  0EF6               	movlw	-10
 28329  018C70  006F FF8C  F009    	movff	plusw1,btemp+8
 28330  018C76  0EF7               	movlw	-9
 28331  018C78  006F FF8C  F00A    	movff	plusw1,btemp+9
 28332  018C7E  0EF8               	movlw	-8
 28333  018C80  006F FF8C  F00B    	movff	plusw1,btemp+10
 28334  018C86  0EF9               	movlw	-7
 28335  018C88  006F FF8C  F00C    	movff	plusw1,btemp+11
 28336  018C8E  1E09               	comf	(btemp+8)^0,f,c
 28337  018C90  1E0A               	comf	(btemp+9)^0,f,c
 28338  018C92  1E0B               	comf	(btemp+10)^0,f,c
 28339  018C94  1E0C               	comf	(btemp+11)^0,f,c
 28340  018C96  2A09               	incf	(btemp+8)^0,f,c
 28341  018C98  0E00               	movlw	0
 28342  018C9A  220A               	addwfc	(btemp+9)^0,f,c
 28343  018C9C  220B               	addwfc	(btemp+10)^0,f,c
 28344  018C9E  220C               	addwfc	(btemp+11)^0,f,c
 28345  018CA0  D010               	goto	L35
 28346  018CA2                     l10354:
 28347                           
 28348                           ;stkvar	_val @ sp[(-5)+-5]
 28349  018CA2  0EF6               	movlw	-10
 28350  018CA4  006F FF8C  F009    	movff	plusw1,btemp+8
 28351  018CAA  0EF7               	movlw	-9
 28352  018CAC  006F FF8C  F00A    	movff	plusw1,btemp+9
 28353  018CB2  0EF8               	movlw	-8
 28354  018CB4  006F FF8C  F00B    	movff	plusw1,btemp+10
 28355  018CBA  0EF9               	movlw	-7
 28356  018CBC  006F FF8C  F00C    	movff	plusw1,btemp+11
 28357  018CC2                     L35:
 28358                           
 28359                           ;stkvar	_arg @ sp[(-5)+0]
 28360  018CC2  0EFB               	movlw	-5
 28361  018CC4  0060  F027  FFE3   	movff	btemp+8,plusw1
 28362  018CCA  0EFC               	movlw	-4
 28363  018CCC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28364  018CD2  0EFD               	movlw	-3
 28365  018CD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28366  018CDA  0EFE               	movlw	-2
 28367  018CDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 28368                           
 28369                           ;stkvar	_val @ sp[(-5)+-5]
 28370  018CE2  0EF6               	movlw	-10
 28371  018CE4  50E3               	movf	plusw1,w,c
 28372  018CE6  E113               	bnz	l10362
 28373  018CE8  0EF7               	movlw	-9
 28374  018CEA  50E3               	movf	plusw1,w,c
 28375  018CEC  E110               	bnz	l10362
 28376  018CEE  0EF8               	movlw	-8
 28377  018CF0  50E3               	movf	plusw1,w,c
 28378  018CF2  E10D               	bnz	l10362
 28379  018CF4  0EF9               	movlw	-7
 28380  018CF6  50E3               	movf	plusw1,w,c
 28381  018CF8  A4D8               	btfss	status,2,c
 28382  018CFA  D009               	goto	l10362
 28383  018CFC  0E00               	movlw	0
 28384  018CFE  6E01               	movwf	btemp^0,c
 28385  018D00  0E00               	movlw	0
 28386  018D02  6E02               	movwf	(btemp+1)^0,c
 28387  018D04  0E00               	movlw	0
 28388  018D06  6E03               	movwf	(btemp+2)^0,c
 28389  018D08  0E00               	movlw	0
 28390  018D0A  6E04               	movwf	(btemp+3)^0,c
 28391  018D0C  D0A2               	goto	l3317
 28392  018D0E                     l10362:
 28393  018D0E  0E96               	movlw	150
 28394  018D10  6E0C               	movwf	(btemp+11)^0,c
 28395                           
 28396                           ;stkvar	_exp @ sp[(-5)+4]
 28397  018D12  0EFF               	movlw	-1
 28398  018D14  0060  F033  FFE3   	movff	btemp+11,plusw1
 28399  018D1A  D00B               	goto	l10366
 28400  018D1C                     l10364:
 28401                           
 28402                           ;stkvar	_exp @ sp[(-5)+4]
 28403  018D1C  0EFF               	movlw	-1
 28404  018D1E  2AE3               	incf	plusw1,f,c
 28405                           
 28406                           ;stkvar	_arg @ sp[(-5)+0]
 28407  018D20  90D8               	bcf	status,0,c
 28408  018D22  0EFE               	movlw	-2
 28409  018D24  32E3               	rrcf	plusw1,f,c
 28410  018D26  0EFD               	movlw	-3
 28411  018D28  32E3               	rrcf	plusw1,f,c
 28412  018D2A  0EFC               	movlw	-4
 28413  018D2C  32E3               	rrcf	plusw1,f,c
 28414  018D2E  0EFB               	movlw	-5
 28415  018D30  32E3               	rrcf	plusw1,f,c
 28416  018D32                     l10366:
 28417                           
 28418                           ;stkvar	_arg @ sp[(-5)+0]
 28419  018D32  50E1               	movf	fsr1l,w,c
 28420  018D34  0FFB               	addlw	-5
 28421  018D36  6ED9               	movwf	fsr2l,c
 28422  018D38  50E2               	movf	fsr1h,w,c
 28423  018D3A  6EDA               	movwf	fsr2h,c
 28424  018D3C  0EFF               	movlw	255
 28425  018D3E  22DA               	addwfc	fsr2h,f,c
 28426  018D40  52DE               	movf	postinc2,f,c
 28427  018D42  52DE               	movf	postinc2,f,c
 28428  018D44  52DE               	movf	postinc2,f,c
 28429  018D46  0EFE               	movlw	254
 28430  018D48  14DD               	andwf	postdec2,w,c
 28431  018D4A  B4D8               	btfsc	status,2,c
 28432  018D4C  D018               	goto	l10374
 28433  018D4E  D7E6               	goto	l10364
 28434  018D50                     l10368:
 28435                           
 28436                           ;stkvar	_exp @ sp[(-5)+4]
 28437  018D50  0EFF               	movlw	-1
 28438  018D52  2AE3               	incf	plusw1,f,c
 28439                           
 28440                           ;stkvar	_arg @ sp[(-5)+0]
 28441  018D54  50E1               	movf	fsr1l,w,c
 28442  018D56  0FFB               	addlw	-5
 28443  018D58  6ED9               	movwf	fsr2l,c
 28444  018D5A  50E2               	movf	fsr1h,w,c
 28445  018D5C  6EDA               	movwf	fsr2h,c
 28446  018D5E  0EFF               	movlw	255
 28447  018D60  22DA               	addwfc	fsr2h,f,c
 28448  018D62  2ADE               	incf	postinc2,f,c
 28449  018D64  0E00               	movlw	0
 28450  018D66  22DE               	addwfc	postinc2,f,c
 28451  018D68  22DE               	addwfc	postinc2,f,c
 28452  018D6A  22DE               	addwfc	postinc2,f,c
 28453                           
 28454                           ;stkvar	_arg @ sp[(-5)+0]
 28455  018D6C  90D8               	bcf	status,0,c
 28456  018D6E  0EFE               	movlw	-2
 28457  018D70  32E3               	rrcf	plusw1,f,c
 28458  018D72  0EFD               	movlw	-3
 28459  018D74  32E3               	rrcf	plusw1,f,c
 28460  018D76  0EFC               	movlw	-4
 28461  018D78  32E3               	rrcf	plusw1,f,c
 28462  018D7A  0EFB               	movlw	-5
 28463  018D7C  32E3               	rrcf	plusw1,f,c
 28464  018D7E                     l10374:
 28465                           
 28466                           ;stkvar	_arg @ sp[(-5)+0]
 28467  018D7E  50E1               	movf	fsr1l,w,c
 28468  018D80  0FFB               	addlw	-5
 28469  018D82  6ED9               	movwf	fsr2l,c
 28470  018D84  50E2               	movf	fsr1h,w,c
 28471  018D86  6EDA               	movwf	fsr2h,c
 28472  018D88  0EFF               	movlw	255
 28473  018D8A  22DA               	addwfc	fsr2h,f,c
 28474  018D8C  52DE               	movf	postinc2,f,c
 28475  018D8E  52DE               	movf	postinc2,f,c
 28476  018D90  52DE               	movf	postinc2,f,c
 28477  018D92  0EFF               	movlw	255
 28478  018D94  14DD               	andwf	postdec2,w,c
 28479  018D96  B4D8               	btfsc	status,2,c
 28480  018D98  D00C               	goto	l10378
 28481  018D9A  D7DA               	goto	l10368
 28482  018D9C                     l10376:
 28483                           
 28484                           ;stkvar	_exp @ sp[(-5)+4]
 28485  018D9C  0EFF               	movlw	-1
 28486  018D9E  06E3               	decf	plusw1,f,c
 28487                           
 28488                           ;stkvar	_arg @ sp[(-5)+0]
 28489  018DA0  90D8               	bcf	status,0,c
 28490  018DA2  0EFB               	movlw	-5
 28491  018DA4  36E3               	rlcf	plusw1,f,c
 28492  018DA6  0EFC               	movlw	-4
 28493  018DA8  36E3               	rlcf	plusw1,f,c
 28494  018DAA  0EFD               	movlw	-3
 28495  018DAC  36E3               	rlcf	plusw1,f,c
 28496  018DAE  0EFE               	movlw	-2
 28497  018DB0  36E3               	rlcf	plusw1,f,c
 28498  018DB2                     l10378:
 28499                           
 28500                           ;stkvar	_arg @ sp[(-5)+0]
 28501  018DB2  0EFD               	movlw	-3
 28502  018DB4  BEE3               	btfsc	plusw1,7,c
 28503  018DB6  D007               	goto	u9530
 28504                           
 28505                           ;stkvar	_exp @ sp[(-5)+4]
 28506  018DB8  0EFF               	movlw	-1
 28507  018DBA  006F FF8C  F001    	movff	plusw1,btemp
 28508  018DC0  0E02               	movlw	2
 28509  018DC2  6001               	cpfslt	btemp^0,c
 28510  018DC4  D7EB               	goto	l10376
 28511  018DC6                     u9530:
 28512                           
 28513                           ;stkvar	_exp @ sp[(-5)+4]
 28514  018DC6  0EFF               	movlw	-1
 28515  018DC8  B0E3               	btfsc	plusw1,0,c
 28516  018DCA  D002               	goto	l10386
 28517                           
 28518                           ;stkvar	_arg @ sp[(-5)+0]
 28519  018DCC  0EFD               	movlw	-3
 28520  018DCE  9EE3               	bcf	plusw1,7,c
 28521  018DD0                     l10386:
 28522                           
 28523                           ;stkvar	_exp @ sp[(-5)+4]
 28524  018DD0  50E1               	movf	fsr1l,w,c
 28525  018DD2  0FFF               	addlw	-1
 28526  018DD4  6ED9               	movwf	fsr2l,c
 28527  018DD6  50E2               	movf	fsr1h,w,c
 28528  018DD8  6EDA               	movwf	fsr2h,c
 28529  018DDA  0EFF               	movlw	255
 28530  018DDC  22DA               	addwfc	fsr2h,f,c
 28531  018DDE  90D8               	bcf	status,0,c
 28532  018DE0  32DF               	rrcf	indf2,f,c
 28533                           
 28534                           ;stkvar	_exp @ sp[(-5)+4]
 28535  018DE2  0EFF               	movlw	-1
 28536  018DE4  006F FF8C  F00C    	movff	plusw1,btemp+11
 28537  018DEA  0060  F030  F005   	movff	btemp+11,btemp+4
 28538  018DF0  6A06               	clrf	(btemp+5)^0,c
 28539  018DF2  6A07               	clrf	(btemp+6)^0,c
 28540  018DF4  6A08               	clrf	(btemp+7)^0,c
 28541  018DF6  0060  F014  F008   	movff	btemp+4,btemp+7
 28542  018DFC  6A07               	clrf	(btemp+6)^0,c
 28543  018DFE  6A06               	clrf	(btemp+5)^0,c
 28544  018E00  6A05               	clrf	(btemp+4)^0,c
 28545                           
 28546                           ;stkvar	_arg @ sp[(-5)+0]
 28547  018E02  50E1               	movf	fsr1l,w,c
 28548  018E04  0FFB               	addlw	-5
 28549  018E06  6ED9               	movwf	fsr2l,c
 28550  018E08  50E2               	movf	fsr1h,w,c
 28551  018E0A  6EDA               	movwf	fsr2h,c
 28552  018E0C  0EFF               	movlw	255
 28553  018E0E  22DA               	addwfc	fsr2h,f,c
 28554  018E10  5005               	movf	(btemp+4)^0,w,c
 28555  018E12  12DE               	iorwf	postinc2,f,c
 28556  018E14  5006               	movf	(btemp+5)^0,w,c
 28557  018E16  12DE               	iorwf	postinc2,f,c
 28558  018E18  5007               	movf	(btemp+6)^0,w,c
 28559  018E1A  12DE               	iorwf	postinc2,f,c
 28560  018E1C  5008               	movf	(btemp+7)^0,w,c
 28561  018E1E  12DE               	iorwf	postinc2,f,c
 28562                           
 28563                           ;stkvar	_sign @ sp[(-5)+-1]
 28564  018E20  0EFA               	movlw	-6
 28565  018E22  50E3               	movf	plusw1,w,c
 28566  018E24  B4D8               	btfsc	status,2,c
 28567  018E26  D005               	goto	l10396
 28568                           
 28569                           ;stkvar	_val @ sp[(-5)+-5]
 28570  018E28  0EF9               	movlw	-7
 28571  018E2A  AEE3               	btfss	plusw1,7,c
 28572  018E2C  D002               	goto	l10396
 28573                           
 28574                           ;stkvar	_arg @ sp[(-5)+0]
 28575  018E2E  0EFE               	movlw	-2
 28576  018E30  8EE3               	bsf	plusw1,7,c
 28577  018E32                     l10396:
 28578                           
 28579                           ;stkvar	_arg @ sp[(-5)+0]
 28580  018E32  0EFB               	movlw	-5
 28581  018E34  006F FF8C  F001    	movff	plusw1,btemp
 28582  018E3A  0EFC               	movlw	-4
 28583  018E3C  006F FF8C  F002    	movff	plusw1,btemp+1
 28584  018E42  0EFD               	movlw	-3
 28585  018E44  006F FF8C  F003    	movff	plusw1,btemp+2
 28586  018E4A  0EFE               	movlw	-2
 28587  018E4C  006F FF8C  F004    	movff	plusw1,btemp+3
 28588  018E52                     l3317:
 28589                           
 28590                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 28591  018E52  0EF6               	movlw	246
 28592  018E54  26E1               	addwf	fsr1l,f,c
 28593  018E56  0EFF               	movlw	255
 28594  018E58  22E2               	addwfc	fsr1h,f,c
 28595  018E5A  0012               	return		;funcret
 28596  018E5C                     __end_of___xxtofl:
 28597                           	opt callstack 0
 28598                           
 28599 ;; *************** function ___fldiv *****************
 28600 ;; Defined at:
 28601 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 28602 ;; Parameters:    Size  Location     Type
 28603 ;;  b               4  [STACK] unsigned char 
 28604 ;;  a               4  [STACK] unsigned char 
 28605 ;; Auto vars:     Size  Location     Type
 28606 ;;  grs             4  [STACK] unsigned long 
 28607 ;;  rem             4  [STACK] unsigned long 
 28608 ;;  new_exp         2  [STACK] short 
 28609 ;;  aexp            1  [STACK] unsigned char 
 28610 ;;  bexp            1  [STACK] unsigned char 
 28611 ;;  sign            1  [STACK] unsigned char 
 28612 ;; Return value:  Size  Location     Type
 28613 ;;                  4  [STACK] unsigned char 
 28614 ;; Registers used:
 28615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 28616 ;; Tracked objects:
 28617 ;;		On entry : 0/0
 28618 ;;		On exit  : 0/0
 28619 ;;		Unchanged: 0/0
 28620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28625 ;;Total ram usage:        0 bytes
 28626 ;; Hardware stack levels used:    1
 28627 ;; Hardware stack levels required when called:   15
 28628 ;; This function calls:
 28629 ;;		Nothing
 28630 ;; This function is called by:
 28631 ;;		_conv_raw_result
 28632 ;;		_convert_dac_raw
 28633 ;;		_calc_bsoc
 28634 ;;		_init_bsoc
 28635 ;;		_esr_check
 28636 ;;		_efgtoa
 28637 ;; This function uses a reentrant model
 28638 ;;
 28639                           
 28640                           	psect	text118
 28641  014EC2                     __ptext118:
 28642                           	opt callstack 0
 28643  014EC2                     ___fldiv:
 28644                           	opt callstack 0
 28645                           
 28646                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28647  014EC2  0E0D               	movlw	13
 28648  014EC4  26E1               	addwf	fsr1l,f,c
 28649  014EC6  0E00               	movlw	0
 28650  014EC8  22E2               	addwfc	fsr1h,f,c
 28651                           
 28652                           ;stkvar	_b @ sp[(-13)+-4]
 28653                           
 28654                           ;incstack = 0
 28655 ;; hardware stack exceeded
 28656  014ECA  0EF2               	movlw	242
 28657  014ECC  24E1               	addwf	fsr1l,w,c
 28658  014ECE  6ED9               	movwf	fsr2l,c
 28659  014ED0  0EFF               	movlw	255
 28660  014ED2  20E2               	addwfc	fsr1h,w,c
 28661  014ED4  6EDA               	movwf	fsr2h,c
 28662  014ED6  50DF               	movf	indf2,w,c
 28663  014ED8  6E0C               	movwf	(btemp+11)^0,c
 28664  014EDA  0E80               	movlw	128
 28665  014EDC  160C               	andwf	(btemp+11)^0,f,c
 28666                           
 28667                           ;stkvar	_sign @ sp[(-13)+12]
 28668  014EDE  0EFF               	movlw	-1
 28669  014EE0  0060  F033  FFE3   	movff	btemp+11,plusw1
 28670                           
 28671                           ;stkvar	_b @ sp[(-13)+-4]
 28672  014EE6  0EF2               	movlw	242
 28673  014EE8  24E1               	addwf	fsr1l,w,c
 28674  014EEA  6ED9               	movwf	fsr2l,c
 28675  014EEC  0EFF               	movlw	255
 28676  014EEE  20E2               	addwfc	fsr1h,w,c
 28677  014EF0  6EDA               	movwf	fsr2h,c
 28678  014EF2  50DF               	movf	indf2,w,c
 28679  014EF4  6E0C               	movwf	(btemp+11)^0,c
 28680  014EF6  90D8               	bcf	status,0,c
 28681  014EF8  340C               	rlcf	(btemp+11)^0,w,c
 28682  014EFA  6E0B               	movwf	(btemp+10)^0,c
 28683                           
 28684                           ;stkvar	_bexp @ sp[(-13)+11]
 28685  014EFC  0EFE               	movlw	-2
 28686  014EFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28687                           
 28688                           ;stkvar	_b @ sp[(-13)+-4]
 28689  014F04  0EF1               	movlw	241
 28690  014F06  24E1               	addwf	fsr1l,w,c
 28691  014F08  6ED9               	movwf	fsr2l,c
 28692  014F0A  0EFF               	movlw	255
 28693  014F0C  20E2               	addwfc	fsr1h,w,c
 28694  014F0E  6EDA               	movwf	fsr2h,c
 28695  014F10  AEDF               	btfss	indf2,7,c
 28696  014F12  D002               	goto	l8926
 28697                           
 28698                           ;stkvar	_bexp @ sp[(-13)+11]
 28699  014F14  0EFE               	movlw	-2
 28700  014F16  80E3               	bsf	plusw1,0,c
 28701  014F18                     l8926:
 28702                           
 28703                           ;stkvar	_bexp @ sp[(-13)+11]
 28704  014F18  0EFE               	movlw	-2
 28705  014F1A  50E3               	movf	plusw1,w,c
 28706  014F1C  B4D8               	btfsc	status,2,c
 28707  014F1E  D027               	goto	l8936
 28708                           
 28709                           ;stkvar	_bexp @ sp[(-13)+11]
 28710  014F20  0EFE               	movlw	-2
 28711  014F22  28E3               	incf	plusw1,w,c
 28712  014F24  A4D8               	btfss	status,2,c
 28713  014F26  D018               	goto	l8932
 28714  014F28  0E00               	movlw	0
 28715  014F2A  6E09               	movwf	(btemp+8)^0,c
 28716  014F2C  0E00               	movlw	0
 28717  014F2E  6E0A               	movwf	(btemp+9)^0,c
 28718  014F30  0E00               	movlw	0
 28719  014F32  6E0B               	movwf	(btemp+10)^0,c
 28720  014F34  0E00               	movlw	0
 28721  014F36  6E0C               	movwf	(btemp+11)^0,c
 28722                           
 28723                           ;stkvar	_b @ sp[(-13)+-4]
 28724  014F38  0EEF               	movlw	-17
 28725  014F3A  0060  F027  FFE3   	movff	btemp+8,plusw1
 28726  014F40  0EF0               	movlw	-16
 28727  014F42  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28728  014F48  0EF1               	movlw	-15
 28729  014F4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28730  014F50  0EF2               	movlw	-14
 28731  014F52  0060  F033  FFE3   	movff	btemp+11,plusw1
 28732  014F58                     l8932:
 28733                           
 28734                           ;stkvar	_b @ sp[(-13)+-4]
 28735  014F58  0EF1               	movlw	-15
 28736  014F5A  8EE3               	bsf	plusw1,7,c
 28737                           
 28738                           ;stkvar	_b @ sp[(-13)+-4]
 28739  014F5C  0EF2               	movlw	242
 28740  014F5E  24E1               	addwf	fsr1l,w,c
 28741  014F60  6ED9               	movwf	fsr2l,c
 28742  014F62  0EFF               	movlw	255
 28743  014F64  20E2               	addwfc	fsr1h,w,c
 28744  014F66  6EDA               	movwf	fsr2h,c
 28745  014F68  0E00               	movlw	0
 28746  014F6A  6EDF               	movwf	indf2,c
 28747  014F6C  D018               	goto	l8938
 28748  014F6E                     l8936:
 28749  014F6E  0E00               	movlw	0
 28750  014F70  6E09               	movwf	(btemp+8)^0,c
 28751  014F72  0E00               	movlw	0
 28752  014F74  6E0A               	movwf	(btemp+9)^0,c
 28753  014F76  0E00               	movlw	0
 28754  014F78  6E0B               	movwf	(btemp+10)^0,c
 28755  014F7A  0E00               	movlw	0
 28756  014F7C  6E0C               	movwf	(btemp+11)^0,c
 28757                           
 28758                           ;stkvar	_b @ sp[(-13)+-4]
 28759  014F7E  0EEF               	movlw	-17
 28760  014F80  0060  F027  FFE3   	movff	btemp+8,plusw1
 28761  014F86  0EF0               	movlw	-16
 28762  014F88  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28763  014F8E  0EF1               	movlw	-15
 28764  014F90  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28765  014F96  0EF2               	movlw	-14
 28766  014F98  0060  F033  FFE3   	movff	btemp+11,plusw1
 28767  014F9E                     l8938:
 28768                           
 28769                           ;stkvar	_a @ sp[(-13)+-8]
 28770  014F9E  0EEE               	movlw	238
 28771  014FA0  24E1               	addwf	fsr1l,w,c
 28772  014FA2  6ED9               	movwf	fsr2l,c
 28773  014FA4  0EFF               	movlw	255
 28774  014FA6  20E2               	addwfc	fsr1h,w,c
 28775  014FA8  6EDA               	movwf	fsr2h,c
 28776  014FAA  50DF               	movf	indf2,w,c
 28777  014FAC  6E0C               	movwf	(btemp+11)^0,c
 28778  014FAE  0E80               	movlw	128
 28779  014FB0  160C               	andwf	(btemp+11)^0,f,c
 28780                           
 28781                           ;stkvar	_sign @ sp[(-13)+12]
 28782  014FB2  50E1               	movf	fsr1l,w,c
 28783  014FB4  0FFF               	addlw	-1
 28784  014FB6  6ED9               	movwf	fsr2l,c
 28785  014FB8  50E2               	movf	fsr1h,w,c
 28786  014FBA  6EDA               	movwf	fsr2h,c
 28787  014FBC  0EFF               	movlw	255
 28788  014FBE  22DA               	addwfc	fsr2h,f,c
 28789  014FC0  500C               	movf	(btemp+11)^0,w,c
 28790  014FC2  1ADF               	xorwf	indf2,f,c
 28791                           
 28792                           ;stkvar	_a @ sp[(-13)+-8]
 28793  014FC4  0EEE               	movlw	238
 28794  014FC6  24E1               	addwf	fsr1l,w,c
 28795  014FC8  6ED9               	movwf	fsr2l,c
 28796  014FCA  0EFF               	movlw	255
 28797  014FCC  20E2               	addwfc	fsr1h,w,c
 28798  014FCE  6EDA               	movwf	fsr2h,c
 28799  014FD0  50DF               	movf	indf2,w,c
 28800  014FD2  6E0C               	movwf	(btemp+11)^0,c
 28801  014FD4  90D8               	bcf	status,0,c
 28802  014FD6  340C               	rlcf	(btemp+11)^0,w,c
 28803  014FD8  6E0B               	movwf	(btemp+10)^0,c
 28804                           
 28805                           ;stkvar	_aexp @ sp[(-13)+10]
 28806  014FDA  0EFD               	movlw	-3
 28807  014FDC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28808                           
 28809                           ;stkvar	_a @ sp[(-13)+-8]
 28810  014FE2  0EED               	movlw	237
 28811  014FE4  24E1               	addwf	fsr1l,w,c
 28812  014FE6  6ED9               	movwf	fsr2l,c
 28813  014FE8  0EFF               	movlw	255
 28814  014FEA  20E2               	addwfc	fsr1h,w,c
 28815  014FEC  6EDA               	movwf	fsr2h,c
 28816  014FEE  AEDF               	btfss	indf2,7,c
 28817  014FF0  D002               	goto	l8946
 28818                           
 28819                           ;stkvar	_aexp @ sp[(-13)+10]
 28820  014FF2  0EFD               	movlw	-3
 28821  014FF4  80E3               	bsf	plusw1,0,c
 28822  014FF6                     l8946:
 28823                           
 28824                           ;stkvar	_aexp @ sp[(-13)+10]
 28825  014FF6  0EFD               	movlw	-3
 28826  014FF8  50E3               	movf	plusw1,w,c
 28827  014FFA  B4D8               	btfsc	status,2,c
 28828  014FFC  D027               	goto	l8956
 28829                           
 28830                           ;stkvar	_aexp @ sp[(-13)+10]
 28831  014FFE  0EFD               	movlw	-3
 28832  015000  28E3               	incf	plusw1,w,c
 28833  015002  A4D8               	btfss	status,2,c
 28834  015004  D018               	goto	l8952
 28835  015006  0E00               	movlw	0
 28836  015008  6E09               	movwf	(btemp+8)^0,c
 28837  01500A  0E00               	movlw	0
 28838  01500C  6E0A               	movwf	(btemp+9)^0,c
 28839  01500E  0E00               	movlw	0
 28840  015010  6E0B               	movwf	(btemp+10)^0,c
 28841  015012  0E00               	movlw	0
 28842  015014  6E0C               	movwf	(btemp+11)^0,c
 28843                           
 28844                           ;stkvar	_a @ sp[(-13)+-8]
 28845  015016  0EEB               	movlw	-21
 28846  015018  0060  F027  FFE3   	movff	btemp+8,plusw1
 28847  01501E  0EEC               	movlw	-20
 28848  015020  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28849  015026  0EED               	movlw	-19
 28850  015028  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28851  01502E  0EEE               	movlw	-18
 28852  015030  0060  F033  FFE3   	movff	btemp+11,plusw1
 28853  015036                     l8952:
 28854                           
 28855                           ;stkvar	_a @ sp[(-13)+-8]
 28856  015036  0EED               	movlw	-19
 28857  015038  8EE3               	bsf	plusw1,7,c
 28858                           
 28859                           ;stkvar	_a @ sp[(-13)+-8]
 28860  01503A  0EEE               	movlw	238
 28861  01503C  24E1               	addwf	fsr1l,w,c
 28862  01503E  6ED9               	movwf	fsr2l,c
 28863  015040  0EFF               	movlw	255
 28864  015042  20E2               	addwfc	fsr1h,w,c
 28865  015044  6EDA               	movwf	fsr2h,c
 28866  015046  0E00               	movlw	0
 28867  015048  6EDF               	movwf	indf2,c
 28868  01504A  D018               	goto	l8958
 28869  01504C                     l8956:
 28870  01504C  0E00               	movlw	0
 28871  01504E  6E09               	movwf	(btemp+8)^0,c
 28872  015050  0E00               	movlw	0
 28873  015052  6E0A               	movwf	(btemp+9)^0,c
 28874  015054  0E00               	movlw	0
 28875  015056  6E0B               	movwf	(btemp+10)^0,c
 28876  015058  0E00               	movlw	0
 28877  01505A  6E0C               	movwf	(btemp+11)^0,c
 28878                           
 28879                           ;stkvar	_a @ sp[(-13)+-8]
 28880  01505C  0EEB               	movlw	-21
 28881  01505E  0060  F027  FFE3   	movff	btemp+8,plusw1
 28882  015064  0EEC               	movlw	-20
 28883  015066  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28884  01506C  0EED               	movlw	-19
 28885  01506E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28886  015074  0EEE               	movlw	-18
 28887  015076  0060  F033  FFE3   	movff	btemp+11,plusw1
 28888  01507C                     l8958:
 28889                           
 28890                           ;stkvar	_a @ sp[(-13)+-8]
 28891  01507C  0EEB               	movlw	-21
 28892  01507E  50E3               	movf	plusw1,w,c
 28893  015080  E139               	bnz	l8970
 28894  015082  0EEC               	movlw	-20
 28895  015084  50E3               	movf	plusw1,w,c
 28896  015086  E136               	bnz	l8970
 28897  015088  0EED               	movlw	-19
 28898  01508A  50E3               	movf	plusw1,w,c
 28899  01508C  E133               	bnz	l8970
 28900  01508E  0EEE               	movlw	-18
 28901  015090  50E3               	movf	plusw1,w,c
 28902  015092  A4D8               	btfss	status,2,c
 28903  015094  D02F               	goto	l8970
 28904                           
 28905                           ;stkvar	_b @ sp[(-13)+-4]
 28906  015096  0EEF               	movlw	-17
 28907  015098  6AE3               	clrf	plusw1,c
 28908  01509A  0EF0               	movlw	-16
 28909  01509C  6AE3               	clrf	plusw1,c
 28910  01509E  0EF1               	movlw	-15
 28911  0150A0  6AE3               	clrf	plusw1,c
 28912  0150A2  0EF2               	movlw	-14
 28913  0150A4  6AE3               	clrf	plusw1,c
 28914                           
 28915                           ;stkvar	_b @ sp[(-13)+-4]
 28916  0150A6  0EF1               	movlw	241
 28917  0150A8  24E1               	addwf	fsr1l,w,c
 28918  0150AA  6ED9               	movwf	fsr2l,c
 28919  0150AC  0EFF               	movlw	255
 28920  0150AE  20E2               	addwfc	fsr1h,w,c
 28921  0150B0  6EDA               	movwf	fsr2h,c
 28922  0150B2  0E80               	movlw	128
 28923  0150B4  12DE               	iorwf	postinc2,f,c
 28924  0150B6  0E7F               	movlw	127
 28925  0150B8  12DD               	iorwf	postdec2,f,c
 28926  0150BA                     l8964:
 28927                           
 28928                           ;stkvar	_sign @ sp[(-13)+12]
 28929  0150BA  0EFF               	movlw	-1
 28930  0150BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 28931                           
 28932                           ;stkvar	_b @ sp[(-13)+-4]
 28933  0150C2  0EF2               	movlw	242
 28934  0150C4  24E1               	addwf	fsr1l,w,c
 28935  0150C6  6ED9               	movwf	fsr2l,c
 28936  0150C8  0EFF               	movlw	255
 28937  0150CA  20E2               	addwfc	fsr1h,w,c
 28938  0150CC  6EDA               	movwf	fsr2h,c
 28939  0150CE  500C               	movf	(btemp+11)^0,w,c
 28940  0150D0  12DF               	iorwf	indf2,f,c
 28941                           
 28942                           ;stkvar	_b @ sp[(-13)+-4]
 28943  0150D2  0EEF               	movlw	-17
 28944  0150D4  006F FF8C  F001    	movff	plusw1,btemp
 28945  0150DA  0EF0               	movlw	-16
 28946  0150DC  006F FF8C  F002    	movff	plusw1,btemp+1
 28947  0150E2  0EF1               	movlw	-15
 28948  0150E4  006F FF8C  F003    	movff	plusw1,btemp+2
 28949  0150EA  0EF2               	movlw	-14
 28950  0150EC  006F FF8C  F004    	movff	plusw1,btemp+3
 28951  0150F2  D19F               	goto	l3241
 28952  0150F4                     l8970:
 28953                           
 28954                           ;stkvar	_bexp @ sp[(-13)+11]
 28955  0150F4  0EFE               	movlw	-2
 28956  0150F6  50E3               	movf	plusw1,w,c
 28957  0150F8  A4D8               	btfss	status,2,c
 28958  0150FA  D009               	goto	l8978
 28959  0150FC  0E00               	movlw	0
 28960  0150FE  6E01               	movwf	btemp^0,c
 28961  015100  0E00               	movlw	0
 28962  015102  6E02               	movwf	(btemp+1)^0,c
 28963  015104  0E00               	movlw	0
 28964  015106  6E03               	movwf	(btemp+2)^0,c
 28965  015108  0E00               	movlw	0
 28966  01510A  6E04               	movwf	(btemp+3)^0,c
 28967  01510C  D192               	goto	l3241
 28968  01510E                     l8978:
 28969                           
 28970                           ;stkvar	_bexp @ sp[(-13)+11]
 28971  01510E  0EFE               	movlw	-2
 28972  015110  50E3               	movf	plusw1,w,c
 28973  015112  6E0B               	movwf	(btemp+10)^0,c
 28974  015114  6A0C               	clrf	(btemp+11)^0,c
 28975                           
 28976                           ;stkvar	_aexp @ sp[(-13)+10]
 28977  015116  0EFD               	movlw	-3
 28978  015118  50E3               	movf	plusw1,w,c
 28979  01511A  5E0B               	subwf	(btemp+10)^0,f,c
 28980  01511C  0E00               	movlw	0
 28981  01511E  5A0C               	subwfb	(btemp+11)^0,f,c
 28982  015120  0E7F               	movlw	127
 28983  015122  260B               	addwf	(btemp+10)^0,f,c
 28984  015124  0E00               	movlw	0
 28985  015126  220C               	addwfc	(btemp+11)^0,f,c
 28986                           
 28987                           ;stkvar	_new_exp @ sp[(-13)+8]
 28988  015128  0EFB               	movlw	-5
 28989  01512A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28990  015130  0EFC               	movlw	-4
 28991  015132  0060  F033  FFE3   	movff	btemp+11,plusw1
 28992                           
 28993                           ;stkvar	_b @ sp[(-13)+-4]
 28994  015138  0EEF               	movlw	-17
 28995  01513A  006F FF8C  F009    	movff	plusw1,btemp+8
 28996  015140  0EF0               	movlw	-16
 28997  015142  006F FF8C  F00A    	movff	plusw1,btemp+9
 28998  015148  0EF1               	movlw	-15
 28999  01514A  006F FF8C  F00B    	movff	plusw1,btemp+10
 29000  015150  0EF2               	movlw	-14
 29001  015152  006F FF8C  F00C    	movff	plusw1,btemp+11
 29002                           
 29003                           ;stkvar	_rem @ sp[(-13)+4]
 29004  015158  0EF7               	movlw	-9
 29005  01515A  0060  F027  FFE3   	movff	btemp+8,plusw1
 29006  015160  0EF8               	movlw	-8
 29007  015162  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29008  015168  0EF9               	movlw	-7
 29009  01516A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29010  015170  0EFA               	movlw	-6
 29011  015172  0060  F033  FFE3   	movff	btemp+11,plusw1
 29012                           
 29013                           ;stkvar	_b @ sp[(-13)+-4]
 29014  015178  0EEF               	movlw	-17
 29015  01517A  6AE3               	clrf	plusw1,c
 29016  01517C  0EF0               	movlw	-16
 29017  01517E  6AE3               	clrf	plusw1,c
 29018  015180  0EF1               	movlw	-15
 29019  015182  6AE3               	clrf	plusw1,c
 29020  015184  0EF2               	movlw	-14
 29021  015186  6AE3               	clrf	plusw1,c
 29022                           
 29023                           ;stkvar	_grs @ sp[(-13)+0]
 29024  015188  0EF3               	movlw	-13
 29025  01518A  6AE3               	clrf	plusw1,c
 29026  01518C  0EF4               	movlw	-12
 29027  01518E  6AE3               	clrf	plusw1,c
 29028  015190  0EF5               	movlw	-11
 29029  015192  6AE3               	clrf	plusw1,c
 29030  015194  0EF6               	movlw	-10
 29031  015196  6AE3               	clrf	plusw1,c
 29032                           
 29033                           ;stkvar	_aexp @ sp[(-13)+10]
 29034  015198  0EFD               	movlw	-3
 29035  01519A  6AE3               	clrf	plusw1,c
 29036  01519C  D050               	goto	l9006
 29037  01519E                     l8988:
 29038                           
 29039                           ;stkvar	_aexp @ sp[(-13)+10]
 29040  01519E  0EFD               	movlw	-3
 29041  0151A0  50E3               	movf	plusw1,w,c
 29042  0151A2  B4D8               	btfsc	status,2,c
 29043  0151A4  D020               	goto	l8998
 29044                           
 29045                           ;stkvar	_rem @ sp[(-13)+4]
 29046  0151A6  90D8               	bcf	status,0,c
 29047  0151A8  0EF7               	movlw	-9
 29048  0151AA  36E3               	rlcf	plusw1,f,c
 29049  0151AC  0EF8               	movlw	-8
 29050  0151AE  36E3               	rlcf	plusw1,f,c
 29051  0151B0  0EF9               	movlw	-7
 29052  0151B2  36E3               	rlcf	plusw1,f,c
 29053  0151B4  0EFA               	movlw	-6
 29054  0151B6  36E3               	rlcf	plusw1,f,c
 29055                           
 29056                           ;stkvar	_b @ sp[(-13)+-4]
 29057  0151B8  90D8               	bcf	status,0,c
 29058  0151BA  0EEF               	movlw	-17
 29059  0151BC  36E3               	rlcf	plusw1,f,c
 29060  0151BE  0EF0               	movlw	-16
 29061  0151C0  36E3               	rlcf	plusw1,f,c
 29062  0151C2  0EF1               	movlw	-15
 29063  0151C4  36E3               	rlcf	plusw1,f,c
 29064  0151C6  0EF2               	movlw	-14
 29065  0151C8  36E3               	rlcf	plusw1,f,c
 29066                           
 29067                           ;stkvar	_grs @ sp[(-13)+0]
 29068  0151CA  0EF6               	movlw	-10
 29069  0151CC  AEE3               	btfss	plusw1,7,c
 29070  0151CE  D002               	goto	l8996
 29071                           
 29072                           ;stkvar	_b @ sp[(-13)+-4]
 29073  0151D0  0EEF               	movlw	-17
 29074  0151D2  80E3               	bsf	plusw1,0,c
 29075  0151D4                     l8996:
 29076                           
 29077                           ;stkvar	_grs @ sp[(-13)+0]
 29078  0151D4  90D8               	bcf	status,0,c
 29079  0151D6  0EF3               	movlw	-13
 29080  0151D8  36E3               	rlcf	plusw1,f,c
 29081  0151DA  0EF4               	movlw	-12
 29082  0151DC  36E3               	rlcf	plusw1,f,c
 29083  0151DE  0EF5               	movlw	-11
 29084  0151E0  36E3               	rlcf	plusw1,f,c
 29085  0151E2  0EF6               	movlw	-10
 29086  0151E4  36E3               	rlcf	plusw1,f,c
 29087  0151E6                     l8998:
 29088                           
 29089                           ;stkvar	_a @ sp[(-13)+-8]
 29090                           ;stkvar	_rem @ sp[(-13)+4]
 29091  0151E6  50E1               	movf	fsr1l,w,c
 29092  0151E8  0FF7               	addlw	-9
 29093  0151EA  6ED9               	movwf	fsr2l,c
 29094  0151EC  50E2               	movf	fsr1h,w,c
 29095  0151EE  6EDA               	movwf	fsr2h,c
 29096  0151F0  0EFF               	movlw	255
 29097  0151F2  22DA               	addwfc	fsr2h,f,c
 29098  0151F4  0EEB               	movlw	-21
 29099  0151F6  50E3               	movf	plusw1,w,c
 29100  0151F8  5CDE               	subwf	postinc2,w,c
 29101  0151FA  0EEC               	movlw	-20
 29102  0151FC  50E3               	movf	plusw1,w,c
 29103  0151FE  58DE               	subwfb	postinc2,w,c
 29104  015200  0EED               	movlw	-19
 29105  015202  50E3               	movf	plusw1,w,c
 29106  015204  58DE               	subwfb	postinc2,w,c
 29107  015206  0EEE               	movlw	-18
 29108  015208  50E3               	movf	plusw1,w,c
 29109  01520A  58DE               	subwfb	postinc2,w,c
 29110  01520C  A0D8               	btfss	status,0,c
 29111  01520E  D015               	goto	l9004
 29112                           
 29113                           ;stkvar	_grs @ sp[(-13)+0]
 29114  015210  0EF6               	movlw	-10
 29115  015212  8CE3               	bsf	plusw1,6,c
 29116                           
 29117                           ;stkvar	_a @ sp[(-13)+-8]
 29118                           ;stkvar	_rem @ sp[(-13)+4]
 29119  015214  50E1               	movf	fsr1l,w,c
 29120  015216  0FF7               	addlw	-9
 29121  015218  6ED9               	movwf	fsr2l,c
 29122  01521A  50E2               	movf	fsr1h,w,c
 29123  01521C  6EDA               	movwf	fsr2h,c
 29124  01521E  0EFF               	movlw	255
 29125  015220  22DA               	addwfc	fsr2h,f,c
 29126  015222  0EEB               	movlw	-21
 29127  015224  50E3               	movf	plusw1,w,c
 29128  015226  5EDE               	subwf	postinc2,f,c
 29129  015228  0EEC               	movlw	-20
 29130  01522A  50E3               	movf	plusw1,w,c
 29131  01522C  5ADE               	subwfb	postinc2,f,c
 29132  01522E  0EED               	movlw	-19
 29133  015230  50E3               	movf	plusw1,w,c
 29134  015232  5ADE               	subwfb	postinc2,f,c
 29135  015234  0EEE               	movlw	-18
 29136  015236  50E3               	movf	plusw1,w,c
 29137  015238  5ADE               	subwfb	postinc2,f,c
 29138  01523A                     l9004:
 29139                           
 29140                           ;stkvar	_aexp @ sp[(-13)+10]
 29141  01523A  0EFD               	movlw	-3
 29142  01523C  2AE3               	incf	plusw1,f,c
 29143  01523E                     l9006:
 29144                           
 29145                           ;stkvar	_aexp @ sp[(-13)+10]
 29146  01523E  0EFD               	movlw	-3
 29147  015240  006F FF8C  F001    	movff	plusw1,btemp
 29148  015246  0E19               	movlw	25
 29149  015248  6401               	cpfsgt	btemp^0,c
 29150  01524A  D7A9               	goto	l8988
 29151                           
 29152                           ;stkvar	_rem @ sp[(-13)+4]
 29153  01524C  0EF7               	movlw	-9
 29154  01524E  50E3               	movf	plusw1,w,c
 29155  015250  E10A               	bnz	u7120
 29156  015252  0EF8               	movlw	-8
 29157  015254  50E3               	movf	plusw1,w,c
 29158  015256  E107               	bnz	u7120
 29159  015258  0EF9               	movlw	-7
 29160  01525A  50E3               	movf	plusw1,w,c
 29161  01525C  E104               	bnz	u7120
 29162  01525E  0EFA               	movlw	-6
 29163  015260  50E3               	movf	plusw1,w,c
 29164  015262  B4D8               	btfsc	status,2,c
 29165  015264  D024               	goto	l9022
 29166  015266                     u7120:
 29167                           
 29168                           ;stkvar	_grs @ sp[(-13)+0]
 29169  015266  0EF3               	movlw	-13
 29170  015268  80E3               	bsf	plusw1,0,c
 29171  01526A  D021               	goto	l9022
 29172  01526C                     l9012:
 29173                           
 29174                           ;stkvar	_b @ sp[(-13)+-4]
 29175  01526C  90D8               	bcf	status,0,c
 29176  01526E  0EEF               	movlw	-17
 29177  015270  36E3               	rlcf	plusw1,f,c
 29178  015272  0EF0               	movlw	-16
 29179  015274  36E3               	rlcf	plusw1,f,c
 29180  015276  0EF1               	movlw	-15
 29181  015278  36E3               	rlcf	plusw1,f,c
 29182  01527A  0EF2               	movlw	-14
 29183  01527C  36E3               	rlcf	plusw1,f,c
 29184                           
 29185                           ;stkvar	_grs @ sp[(-13)+0]
 29186  01527E  0EF6               	movlw	-10
 29187  015280  AEE3               	btfss	plusw1,7,c
 29188  015282  D002               	goto	l9018
 29189                           
 29190                           ;stkvar	_b @ sp[(-13)+-4]
 29191  015284  0EEF               	movlw	-17
 29192  015286  80E3               	bsf	plusw1,0,c
 29193  015288                     l9018:
 29194                           
 29195                           ;stkvar	_grs @ sp[(-13)+0]
 29196  015288  90D8               	bcf	status,0,c
 29197  01528A  0EF3               	movlw	-13
 29198  01528C  36E3               	rlcf	plusw1,f,c
 29199  01528E  0EF4               	movlw	-12
 29200  015290  36E3               	rlcf	plusw1,f,c
 29201  015292  0EF5               	movlw	-11
 29202  015294  36E3               	rlcf	plusw1,f,c
 29203  015296  0EF6               	movlw	-10
 29204  015298  36E3               	rlcf	plusw1,f,c
 29205                           
 29206                           ;stkvar	_new_exp @ sp[(-13)+8]
 29207  01529A  50E1               	movf	fsr1l,w,c
 29208  01529C  0FFB               	addlw	-5
 29209  01529E  6ED9               	movwf	fsr2l,c
 29210  0152A0  50E2               	movf	fsr1h,w,c
 29211  0152A2  6EDA               	movwf	fsr2h,c
 29212  0152A4  0EFF               	movlw	255
 29213  0152A6  22DA               	addwfc	fsr2h,f,c
 29214  0152A8  06DE               	decf	postinc2,f,c
 29215  0152AA  0E00               	movlw	0
 29216  0152AC  5ADD               	subwfb	postdec2,f,c
 29217  0152AE                     l9022:
 29218                           
 29219                           ;stkvar	_b @ sp[(-13)+-4]
 29220  0152AE  0EF1               	movlw	-15
 29221  0152B0  AEE3               	btfss	plusw1,7,c
 29222  0152B2  D7DC               	goto	l9012
 29223                           
 29224                           ;stkvar	_aexp @ sp[(-13)+10]
 29225  0152B4  0EFD               	movlw	-3
 29226  0152B6  6AE3               	clrf	plusw1,c
 29227                           
 29228                           ;stkvar	_grs @ sp[(-13)+0]
 29229  0152B8  0EF6               	movlw	-10
 29230  0152BA  AEE3               	btfss	plusw1,7,c
 29231  0152BC  D020               	goto	l9036
 29232                           
 29233                           ;stkvar	_grs @ sp[(-13)+0]
 29234  0152BE  50E1               	movf	fsr1l,w,c
 29235  0152C0  0FF3               	addlw	-13
 29236  0152C2  6ED9               	movwf	fsr2l,c
 29237  0152C4  50E2               	movf	fsr1h,w,c
 29238  0152C6  6EDA               	movwf	fsr2h,c
 29239  0152C8  0EFF               	movlw	255
 29240  0152CA  22DA               	addwfc	fsr2h,f,c
 29241  0152CC  0EFF               	movlw	255
 29242  0152CE  14DE               	andwf	postinc2,w,c
 29243  0152D0  6E09               	movwf	(btemp+8)^0,c
 29244  0152D2  0EFF               	movlw	255
 29245  0152D4  14DE               	andwf	postinc2,w,c
 29246  0152D6  6E0A               	movwf	(btemp+9)^0,c
 29247  0152D8  0EFF               	movlw	255
 29248  0152DA  14DE               	andwf	postinc2,w,c
 29249  0152DC  6E0B               	movwf	(btemp+10)^0,c
 29250  0152DE  0E7F               	movlw	127
 29251  0152E0  14DE               	andwf	postinc2,w,c
 29252  0152E2  6E0C               	movwf	(btemp+11)^0,c
 29253  0152E4  5009               	movf	(btemp+8)^0,w,c
 29254  0152E6  100A               	iorwf	(btemp+9)^0,w,c
 29255  0152E8  100B               	iorwf	(btemp+10)^0,w,c
 29256  0152EA  100C               	iorwf	(btemp+11)^0,w,c
 29257  0152EC  B4D8               	btfsc	status,2,c
 29258  0152EE  D004               	goto	l9032
 29259  0152F0                     u7160:
 29260                           
 29261                           ;stkvar	_aexp @ sp[(-13)+10]
 29262  0152F0  0EFD               	movlw	-3
 29263  0152F2  6AE3               	clrf	plusw1,c
 29264  0152F4  2AE3               	incf	plusw1,f,c
 29265  0152F6  D003               	goto	l9036
 29266  0152F8                     l9032:
 29267                           
 29268                           ;stkvar	_b @ sp[(-13)+-4]
 29269  0152F8  0EEF               	movlw	-17
 29270  0152FA  B0E3               	btfsc	plusw1,0,c
 29271  0152FC  D7F9               	goto	u7160
 29272  0152FE                     l9036:
 29273                           
 29274                           ;stkvar	_aexp @ sp[(-13)+10]
 29275  0152FE  0EFD               	movlw	-3
 29276  015300  50E3               	movf	plusw1,w,c
 29277  015302  B4D8               	btfsc	status,2,c
 29278  015304  D036               	goto	l9046
 29279                           
 29280                           ;stkvar	_b @ sp[(-13)+-4]
 29281  015306  50E1               	movf	fsr1l,w,c
 29282  015308  0FEF               	addlw	-17
 29283  01530A  6ED9               	movwf	fsr2l,c
 29284  01530C  50E2               	movf	fsr1h,w,c
 29285  01530E  6EDA               	movwf	fsr2h,c
 29286  015310  0EFF               	movlw	255
 29287  015312  22DA               	addwfc	fsr2h,f,c
 29288  015314  2ADE               	incf	postinc2,f,c
 29289  015316  0E00               	movlw	0
 29290  015318  22DE               	addwfc	postinc2,f,c
 29291  01531A  22DE               	addwfc	postinc2,f,c
 29292  01531C  22DE               	addwfc	postinc2,f,c
 29293                           
 29294                           ;stkvar	_b @ sp[(-13)+-4]
 29295  01531E  0EF2               	movlw	-14
 29296  015320  A0E3               	btfss	plusw1,0,c
 29297  015322  D027               	goto	l9046
 29298  015324  0E01               	movlw	1
 29299  015326  6E0C               	movwf	(btemp+11)^0,c
 29300                           
 29301                           ;stkvar	_b @ sp[(-13)+-4]
 29302  015328  50E1               	movf	fsr1l,w,c
 29303  01532A  0FEF               	addlw	-17
 29304  01532C  6ED9               	movwf	fsr2l,c
 29305  01532E  50E2               	movf	fsr1h,w,c
 29306  015330  6EDA               	movwf	fsr2h,c
 29307  015332  0EFF               	movlw	255
 29308  015334  22DA               	addwfc	fsr2h,f,c
 29309  015336  280C               	incf	(btemp+11)^0,w,c
 29310  015338  52DE               	movf	postinc2,f,c
 29311  01533A  D008               	goto	u7200
 29312  01533C                     u7205:
 29313  01533C  52DE               	movf	postinc2,f,c
 29314  01533E  90D8               	bcf	status,0,c
 29315  015340  BEDC               	btfsc	preinc2,7,c
 29316  015342  80D8               	bsf	status,0,c
 29317  015344  32DD               	rrcf	postdec2,f,c
 29318  015346  32DD               	rrcf	postdec2,f,c
 29319  015348  32DD               	rrcf	postdec2,f,c
 29320  01534A  32DE               	rrcf	postinc2,f,c
 29321  01534C                     u7200:
 29322  01534C  2EE8               	decfsz	wreg,f,c
 29323  01534E  D7F6               	goto	u7205
 29324                           
 29325                           ;stkvar	_new_exp @ sp[(-13)+8]
 29326  015350  0EFB               	movlw	-5
 29327  015352  50E3               	movf	plusw1,w,c
 29328  015354  0F01               	addlw	1
 29329  015356  6E01               	movwf	btemp^0,c
 29330  015358  0EFB               	movlw	-5
 29331  01535A  0060  F007  FFE3   	movff	btemp,plusw1
 29332  015360  6A01               	clrf	btemp^0,c
 29333  015362  0EFC               	movlw	-4
 29334  015364  50E3               	movf	plusw1,w,c
 29335  015366  2001               	addwfc	btemp^0,w,c
 29336  015368  6E01               	movwf	btemp^0,c
 29337  01536A  0EFC               	movlw	-4
 29338  01536C  0060  F007  FFE3   	movff	btemp,plusw1
 29339  015372                     l9046:
 29340                           
 29341                           ;stkvar	_new_exp @ sp[(-13)+8]
 29342  015372  0EFC               	movlw	-4
 29343  015374  BEE3               	btfsc	plusw1,7,c
 29344  015376  D01B               	goto	l9052
 29345  015378  0EFC               	movlw	-4
 29346  01537A  50E3               	movf	plusw1,w,c
 29347  01537C  E104               	bnz	u7210
 29348  01537E  0EFB               	movlw	-5
 29349  015380  28E3               	incf	plusw1,w,c
 29350  015382  A0D8               	btfss	status,0,c
 29351  015384  D014               	goto	l9052
 29352  015386                     u7210:
 29353  015386  0EFF               	movlw	255
 29354  015388  6E0B               	movwf	(btemp+10)^0,c
 29355  01538A  0E00               	movlw	0
 29356  01538C  6E0C               	movwf	(btemp+11)^0,c
 29357                           
 29358                           ;stkvar	_new_exp @ sp[(-13)+8]
 29359  01538E  0EFB               	movlw	-5
 29360  015390  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29361  015396  0EFC               	movlw	-4
 29362  015398  0060  F033  FFE3   	movff	btemp+11,plusw1
 29363                           
 29364                           ;stkvar	_b @ sp[(-13)+-4]
 29365  01539E  0EEF               	movlw	-17
 29366  0153A0  6AE3               	clrf	plusw1,c
 29367  0153A2  0EF0               	movlw	-16
 29368  0153A4  6AE3               	clrf	plusw1,c
 29369  0153A6  0EF1               	movlw	-15
 29370  0153A8  6AE3               	clrf	plusw1,c
 29371  0153AA  0EF2               	movlw	-14
 29372  0153AC  6AE3               	clrf	plusw1,c
 29373  0153AE                     l9052:
 29374                           
 29375                           ;stkvar	_new_exp @ sp[(-13)+8]
 29376  0153AE  0EFC               	movlw	-4
 29377  0153B0  BEE3               	btfsc	plusw1,7,c
 29378  0153B2  D007               	goto	u7220
 29379  0153B4  0EFC               	movlw	-4
 29380  0153B6  50E3               	movf	plusw1,w,c
 29381  0153B8  E112               	bnz	l9058
 29382  0153BA  0EFB               	movlw	-5
 29383  0153BC  04E3               	decf	plusw1,w,c
 29384  0153BE  B0D8               	btfsc	status,0,c
 29385  0153C0  D00E               	goto	l9058
 29386  0153C2                     u7220:
 29387                           
 29388                           ;stkvar	_new_exp @ sp[(-13)+8]
 29389  0153C2  0EFB               	movlw	-5
 29390  0153C4  6AE3               	clrf	plusw1,c
 29391  0153C6  0EFC               	movlw	-4
 29392  0153C8  6AE3               	clrf	plusw1,c
 29393                           
 29394                           ;stkvar	_b @ sp[(-13)+-4]
 29395  0153CA  0EEF               	movlw	-17
 29396  0153CC  6AE3               	clrf	plusw1,c
 29397  0153CE  0EF0               	movlw	-16
 29398  0153D0  6AE3               	clrf	plusw1,c
 29399  0153D2  0EF1               	movlw	-15
 29400  0153D4  6AE3               	clrf	plusw1,c
 29401  0153D6  0EF2               	movlw	-14
 29402  0153D8  6AE3               	clrf	plusw1,c
 29403                           
 29404                           ;stkvar	_sign @ sp[(-13)+12]
 29405  0153DA  0EFF               	movlw	-1
 29406  0153DC  6AE3               	clrf	plusw1,c
 29407  0153DE                     l9058:
 29408                           
 29409                           ;stkvar	_new_exp @ sp[(-13)+8]
 29410                           ;stkvar	_bexp @ sp[(-13)+11]
 29411  0153DE  0EFB               	movlw	-5
 29412  0153E0  006F FF8C  F001    	movff	plusw1,btemp
 29413  0153E6  0EFE               	movlw	-2
 29414  0153E8  0060  F007  FFE3   	movff	btemp,plusw1
 29415                           
 29416                           ;stkvar	_bexp @ sp[(-13)+11]
 29417  0153EE  0EFE               	movlw	-2
 29418  0153F0  A0E3               	btfss	plusw1,0,c
 29419  0153F2  D009               	goto	l9064
 29420                           
 29421                           ;stkvar	_b @ sp[(-13)+-4]
 29422  0153F4  0EF1               	movlw	241
 29423  0153F6  24E1               	addwf	fsr1l,w,c
 29424  0153F8  6ED9               	movwf	fsr2l,c
 29425  0153FA  0EFF               	movlw	255
 29426  0153FC  20E2               	addwfc	fsr1h,w,c
 29427  0153FE  6EDA               	movwf	fsr2h,c
 29428  015400  0E00               	movlw	0
 29429  015402  8EDB               	bsf	plusw2,7,c
 29430  015404  D008               	goto	l9066
 29431  015406                     l9064:
 29432                           
 29433                           ;stkvar	_b @ sp[(-13)+-4]
 29434  015406  0EF1               	movlw	241
 29435  015408  24E1               	addwf	fsr1l,w,c
 29436  01540A  6ED9               	movwf	fsr2l,c
 29437  01540C  0EFF               	movlw	255
 29438  01540E  20E2               	addwfc	fsr1h,w,c
 29439  015410  6EDA               	movwf	fsr2h,c
 29440  015412  0E7F               	movlw	127
 29441  015414  16DF               	andwf	indf2,f,c
 29442  015416                     l9066:
 29443                           
 29444                           ;stkvar	_b @ sp[(-13)+-4]
 29445  015416  0EF2               	movlw	242
 29446  015418  24E1               	addwf	fsr1l,w,c
 29447  01541A  6ED9               	movwf	fsr2l,c
 29448  01541C  0EFF               	movlw	255
 29449  01541E  20E2               	addwfc	fsr1h,w,c
 29450  015420  6EDA               	movwf	fsr2h,c
 29451                           
 29452                           ;stkvar	_bexp @ sp[(-13)+11]
 29453  015422  0EFE               	movlw	-2
 29454  015424  006F FF8C  F00C    	movff	plusw1,btemp+11
 29455  01542A  90D8               	bcf	status,0,c
 29456  01542C  300C               	rrcf	(btemp+11)^0,w,c
 29457  01542E  6EDF               	movwf	indf2,c
 29458  015430  D644               	goto	l8964
 29459  015432                     l3241:
 29460                           
 29461                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 29462  015432  0EEB               	movlw	235
 29463  015434  26E1               	addwf	fsr1l,f,c
 29464  015436  0EFF               	movlw	255
 29465  015438  22E2               	addwfc	fsr1h,f,c
 29466  01543A  0012               	return		;funcret
 29467  01543C                     __end_of___fldiv:
 29468                           	opt callstack 0
 29469                           
 29470 ;; *************** function ___flge *****************
 29471 ;; Defined at:
 29472 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 29473 ;; Parameters:    Size  Location     Type
 29474 ;;  ff1             4  [STACK] unsigned char 
 29475 ;;  ff2             4  [STACK] unsigned char 
 29476 ;; Auto vars:     Size  Location     Type
 29477 ;;		None
 29478 ;; Return value:  Size  Location     Type
 29479 ;;		None               void
 29480 ;; Registers used:
 29481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 29482 ;; Tracked objects:
 29483 ;;		On entry : 0/0
 29484 ;;		On exit  : 0/0
 29485 ;;		Unchanged: 0/0
 29486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29491 ;;Total ram usage:        0 bytes
 29492 ;; Hardware stack levels used:    1
 29493 ;; Hardware stack levels required when called:   15
 29494 ;; This function calls:
 29495 ;;		Nothing
 29496 ;; This function is called by:
 29497 ;;		_main
 29498 ;;		_convert_dac_raw
 29499 ;;		_calc_ror_data
 29500 ;;		_check_day_time
 29501 ;;		_calc_bsoc
 29502 ;;		_efgtoa
 29503 ;; This function uses a reentrant model
 29504 ;;
 29505                           
 29506                           	psect	text119
 29507  019AFA                     __ptext119:
 29508                           	opt callstack 0
 29509  019AFA                     ___flge:
 29510                           	opt callstack 0
 29511                           
 29512                           ;stkvar	_ff1 @ sp[(0)+-4]
 29513                           
 29514                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29515                           ;incstack = 0
 29516 ;; hardware stack exceeded
 29517  019AFA  50E1               	movf	fsr1l,w,c
 29518  019AFC  0FFC               	addlw	-4
 29519  019AFE  6ED9               	movwf	fsr2l,c
 29520  019B00  50E2               	movf	fsr1h,w,c
 29521  019B02  6EDA               	movwf	fsr2h,c
 29522  019B04  0EFF               	movlw	255
 29523  019B06  22DA               	addwfc	fsr2h,f,c
 29524  019B08  0E00               	movlw	0
 29525  019B0A  14DE               	andwf	postinc2,w,c
 29526  019B0C  6E09               	movwf	(btemp+8)^0,c
 29527  019B0E  0E00               	movlw	0
 29528  019B10  14DE               	andwf	postinc2,w,c
 29529  019B12  6E0A               	movwf	(btemp+9)^0,c
 29530  019B14  0E80               	movlw	128
 29531  019B16  14DE               	andwf	postinc2,w,c
 29532  019B18  6E0B               	movwf	(btemp+10)^0,c
 29533  019B1A  0E7F               	movlw	127
 29534  019B1C  14DE               	andwf	postinc2,w,c
 29535  019B1E  6E0C               	movwf	(btemp+11)^0,c
 29536  019B20  5009               	movf	(btemp+8)^0,w,c
 29537  019B22  100A               	iorwf	(btemp+9)^0,w,c
 29538  019B24  100B               	iorwf	(btemp+10)^0,w,c
 29539  019B26  100C               	iorwf	(btemp+11)^0,w,c
 29540  019B28  A4D8               	btfss	status,2,c
 29541  019B2A  D008               	goto	l9340
 29542                           
 29543                           ;stkvar	_ff1 @ sp[(0)+-4]
 29544  019B2C  0EFC               	movlw	-4
 29545  019B2E  6AE3               	clrf	plusw1,c
 29546  019B30  0EFD               	movlw	-3
 29547  019B32  6AE3               	clrf	plusw1,c
 29548  019B34  0EFE               	movlw	-2
 29549  019B36  6AE3               	clrf	plusw1,c
 29550  019B38  0EFF               	movlw	-1
 29551  019B3A  6AE3               	clrf	plusw1,c
 29552  019B3C                     l9340:
 29553                           
 29554                           ;stkvar	_ff2 @ sp[(0)+-8]
 29555  019B3C  50E1               	movf	fsr1l,w,c
 29556  019B3E  0FF8               	addlw	-8
 29557  019B40  6ED9               	movwf	fsr2l,c
 29558  019B42  50E2               	movf	fsr1h,w,c
 29559  019B44  6EDA               	movwf	fsr2h,c
 29560  019B46  0EFF               	movlw	255
 29561  019B48  22DA               	addwfc	fsr2h,f,c
 29562  019B4A  0E00               	movlw	0
 29563  019B4C  14DE               	andwf	postinc2,w,c
 29564  019B4E  6E09               	movwf	(btemp+8)^0,c
 29565  019B50  0E00               	movlw	0
 29566  019B52  14DE               	andwf	postinc2,w,c
 29567  019B54  6E0A               	movwf	(btemp+9)^0,c
 29568  019B56  0E80               	movlw	128
 29569  019B58  14DE               	andwf	postinc2,w,c
 29570  019B5A  6E0B               	movwf	(btemp+10)^0,c
 29571  019B5C  0E7F               	movlw	127
 29572  019B5E  14DE               	andwf	postinc2,w,c
 29573  019B60  6E0C               	movwf	(btemp+11)^0,c
 29574  019B62  5009               	movf	(btemp+8)^0,w,c
 29575  019B64  100A               	iorwf	(btemp+9)^0,w,c
 29576  019B66  100B               	iorwf	(btemp+10)^0,w,c
 29577  019B68  100C               	iorwf	(btemp+11)^0,w,c
 29578  019B6A  A4D8               	btfss	status,2,c
 29579  019B6C  D008               	goto	l2922
 29580                           
 29581                           ;stkvar	_ff2 @ sp[(0)+-8]
 29582  019B6E  0EF8               	movlw	-8
 29583  019B70  6AE3               	clrf	plusw1,c
 29584  019B72  0EF9               	movlw	-7
 29585  019B74  6AE3               	clrf	plusw1,c
 29586  019B76  0EFA               	movlw	-6
 29587  019B78  6AE3               	clrf	plusw1,c
 29588  019B7A  0EFB               	movlw	-5
 29589  019B7C  6AE3               	clrf	plusw1,c
 29590  019B7E                     l2922:
 29591                           
 29592                           ;stkvar	_ff1 @ sp[(0)+-4]
 29593  019B7E  0EFF               	movlw	-1
 29594  019B80  AEE3               	btfss	plusw1,7,c
 29595  019B82  D024               	goto	l9346
 29596                           
 29597                           ;stkvar	_ff1 @ sp[(0)+-4]
 29598  019B84  0E00               	movlw	0
 29599  019B86  6E09               	movwf	(btemp+8)^0,c
 29600  019B88  0E00               	movlw	0
 29601  019B8A  6E0A               	movwf	(btemp+9)^0,c
 29602  019B8C  0E00               	movlw	0
 29603  019B8E  6E0B               	movwf	(btemp+10)^0,c
 29604  019B90  0E80               	movlw	128
 29605  019B92  6E0C               	movwf	(btemp+11)^0,c
 29606  019B94  0EFC               	movlw	-4
 29607  019B96  50E3               	movf	plusw1,w,c
 29608  019B98  5E09               	subwf	(btemp+8)^0,f,c
 29609  019B9A  0EFD               	movlw	-3
 29610  019B9C  50E3               	movf	plusw1,w,c
 29611  019B9E  5A0A               	subwfb	(btemp+9)^0,f,c
 29612  019BA0  0EFE               	movlw	-2
 29613  019BA2  50E3               	movf	plusw1,w,c
 29614  019BA4  5A0B               	subwfb	(btemp+10)^0,f,c
 29615  019BA6  0EFF               	movlw	-1
 29616  019BA8  50E3               	movf	plusw1,w,c
 29617  019BAA  5A0C               	subwfb	(btemp+11)^0,f,c
 29618                           
 29619                           ;stkvar	_ff1 @ sp[(0)+-4]
 29620  019BAC  0EFC               	movlw	-4
 29621  019BAE  0060  F027  FFE3   	movff	btemp+8,plusw1
 29622  019BB4  0EFD               	movlw	-3
 29623  019BB6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29624  019BBC  0EFE               	movlw	-2
 29625  019BBE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29626  019BC4  0EFF               	movlw	-1
 29627  019BC6  0060  F033  FFE3   	movff	btemp+11,plusw1
 29628  019BCC                     l9346:
 29629                           
 29630                           ;stkvar	_ff2 @ sp[(0)+-8]
 29631  019BCC  0EFB               	movlw	-5
 29632  019BCE  AEE3               	btfss	plusw1,7,c
 29633  019BD0  D024               	goto	l9350
 29634                           
 29635                           ;stkvar	_ff2 @ sp[(0)+-8]
 29636  019BD2  0E00               	movlw	0
 29637  019BD4  6E09               	movwf	(btemp+8)^0,c
 29638  019BD6  0E00               	movlw	0
 29639  019BD8  6E0A               	movwf	(btemp+9)^0,c
 29640  019BDA  0E00               	movlw	0
 29641  019BDC  6E0B               	movwf	(btemp+10)^0,c
 29642  019BDE  0E80               	movlw	128
 29643  019BE0  6E0C               	movwf	(btemp+11)^0,c
 29644  019BE2  0EF8               	movlw	-8
 29645  019BE4  50E3               	movf	plusw1,w,c
 29646  019BE6  5E09               	subwf	(btemp+8)^0,f,c
 29647  019BE8  0EF9               	movlw	-7
 29648  019BEA  50E3               	movf	plusw1,w,c
 29649  019BEC  5A0A               	subwfb	(btemp+9)^0,f,c
 29650  019BEE  0EFA               	movlw	-6
 29651  019BF0  50E3               	movf	plusw1,w,c
 29652  019BF2  5A0B               	subwfb	(btemp+10)^0,f,c
 29653  019BF4  0EFB               	movlw	-5
 29654  019BF6  50E3               	movf	plusw1,w,c
 29655  019BF8  5A0C               	subwfb	(btemp+11)^0,f,c
 29656                           
 29657                           ;stkvar	_ff2 @ sp[(0)+-8]
 29658  019BFA  0EF8               	movlw	-8
 29659  019BFC  0060  F027  FFE3   	movff	btemp+8,plusw1
 29660  019C02  0EF9               	movlw	-7
 29661  019C04  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29662  019C0A  0EFA               	movlw	-6
 29663  019C0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29664  019C12  0EFB               	movlw	-5
 29665  019C14  0060  F033  FFE3   	movff	btemp+11,plusw1
 29666  019C1A                     l9350:
 29667                           
 29668                           ;stkvar	_ff1 @ sp[(0)+-4]
 29669  019C1A  0EFF               	movlw	-1
 29670  019C1C  7EE3               	btg	plusw1,7,c
 29671                           
 29672                           ;stkvar	_ff2 @ sp[(0)+-8]
 29673  019C1E  0EFB               	movlw	-5
 29674  019C20  7EE3               	btg	plusw1,7,c
 29675                           
 29676                           ;stkvar	_ff2 @ sp[(0)+-8]
 29677                           ;stkvar	_ff1 @ sp[(0)+-4]
 29678  019C22  50E1               	movf	fsr1l,w,c
 29679  019C24  0FFC               	addlw	-4
 29680  019C26  6ED9               	movwf	fsr2l,c
 29681  019C28  50E2               	movf	fsr1h,w,c
 29682  019C2A  6EDA               	movwf	fsr2h,c
 29683  019C2C  0EFF               	movlw	255
 29684  019C2E  22DA               	addwfc	fsr2h,f,c
 29685  019C30  0EF8               	movlw	-8
 29686  019C32  50E3               	movf	plusw1,w,c
 29687  019C34  5CDE               	subwf	postinc2,w,c
 29688  019C36  0EF9               	movlw	-7
 29689  019C38  50E3               	movf	plusw1,w,c
 29690  019C3A  58DE               	subwfb	postinc2,w,c
 29691  019C3C  0EFA               	movlw	-6
 29692  019C3E  50E3               	movf	plusw1,w,c
 29693  019C40  58DE               	subwfb	postinc2,w,c
 29694  019C42  0EFB               	movlw	-5
 29695  019C44  50E3               	movf	plusw1,w,c
 29696  019C46  58DE               	subwfb	postinc2,w,c
 29697  019C48  B0D8               	btfsc	status,0,c
 29698  019C4A  D002               	goto	l9358
 29699  019C4C  9001               	bcf	btemp& (0+255),0,c
 29700  019C4E  D001               	goto	l2929
 29701  019C50                     l9358:
 29702  019C50  8001               	bsf	btemp& (0+255),0,c
 29703  019C52                     l2929:
 29704                           
 29705                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 29706  019C52  0EF8               	movlw	248
 29707  019C54  26E1               	addwf	fsr1l,f,c
 29708  019C56  0EFF               	movlw	255
 29709  019C58  22E2               	addwfc	fsr1h,f,c
 29710  019C5A  0012               	return		;funcret
 29711  019C5C                     __end_of___flge:
 29712                           	opt callstack 0
 29713                           
 29714 ;; *************** function _calc_model_data *****************
 29715 ;; Defined at:
 29716 ;;		line 67 in file "mbmc.c"
 29717 ;; Parameters:    Size  Location     Type
 29718 ;;		None
 29719 ;; Auto vars:     Size  Location     Type
 29720 ;;		None
 29721 ;; Return value:  Size  Location     Type
 29722 ;;                  1  [STACK] void 
 29723 ;; Registers used:
 29724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 29725 ;; Tracked objects:
 29726 ;;		On entry : 0/1
 29727 ;;		On exit  : 3F/39
 29728 ;;		Unchanged: 0/0
 29729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29734 ;;Total ram usage:        0 bytes
 29735 ;; Hardware stack levels used:    1
 29736 ;; Hardware stack levels required when called:   18
 29737 ;; This function calls:
 29738 ;;		___fladd
 29739 ;;		___flmul
 29740 ;;		___flsub
 29741 ;;		_lp_filter
 29742 ;;		_start_bsoc
 29743 ;;		_stop_bsoc
 29744 ;; This function is called by:
 29745 ;;		_main
 29746 ;; This function uses a reentrant model
 29747 ;;
 29748                           
 29749                           	psect	text120
 29750  016230                     __ptext120:
 29751                           	opt callstack 0
 29752  016230                     _calc_model_data:
 29753                           	opt callstack 12
 29754                           
 29755                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 29756                           
 29757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29758                           ;incstack = 0
 29759  016230  ECF1  F0E9         	call	_stop_bsoc	;wreg free
 29760                           
 29761                           ; BSR set to: 57
 29762                           ;mbmc.c: 72:  if (!V.calib) {
 29763  016234  0101               	movlb	1	; () banked
 29764  016236  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 29765  016238  A4D8               	btfss	status,2,c
 29766  01623A  D219               	goto	l12188
 29767                           
 29768                           ; BSR set to: 1
 29769                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 29770  01623C  EE21  F3FF         	lfsr	2,_C
 29771  016240  006F FF78  F843    	movff	postinc2,_C+68	;volatile
 29772  016246  006F FF78  F844    	movff	postinc2,_C+69	;volatile
 29773  01624C  006F FF78  F845    	movff	postinc2,_C+70	;volatile
 29774  016252  006F FF74  F846    	movff	postdec2,_C+71	;volatile
 29775                           
 29776                           ; BSR set to: 1
 29777                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 29778  016258  0060  F1B3  FFE6   	movff	calc_model_data@bcror,postinc1
 29779  01625E  0060  F1B7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 29780  016264  0060  F1BB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 29781  01626A  0060  F1BF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 29782  016270  EE22  F043         	lfsr	2,_C+68	;volatile
 29783  016274  006F FF7B FFE6     	movff	postinc2,postinc1
 29784  01627A  006F FF7B FFE6     	movff	postinc2,postinc1
 29785  016280  006F FF7B FFE6     	movff	postinc2,postinc1
 29786  016286  006F FF7B FFE6     	movff	postinc2,postinc1
 29787  01628C  ECB6  F0E3         	call	___flsub	;wreg free
 29788  016290  0060  F004  F86F   	movff	btemp,_C+112	;volatile
 29789  016296  0060  F008  F870   	movff	btemp+1,_C+113	;volatile
 29790  01629C  0060  F00C  F871   	movff	btemp+2,_C+114	;volatile
 29791  0162A2  0060  F010  F872   	movff	btemp+3,_C+115	;volatile
 29792                           
 29793                           ;mbmc.c: 75:   bcror = C.c_bat;
 29794  0162A8  C843  F06C         	movff	_C+68,calc_model_data@bcror	;volatile
 29795  0162AC  C844  F06D         	movff	_C+69,calc_model_data@bcror+1	;volatile
 29796  0162B0  C845  F06E         	movff	_C+70,calc_model_data@bcror+2	;volatile
 29797  0162B4  C846  F06F         	movff	_C+71,calc_model_data@bcror+3	;volatile
 29798                           
 29799                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 29800  0162B8  EE22  F003         	lfsr	2,_C+4	;volatile
 29801  0162BC  006F FF78  F847    	movff	postinc2,_C+72	;volatile
 29802  0162C2  006F FF78  F848    	movff	postinc2,_C+73	;volatile
 29803  0162C8  006F FF78  F849    	movff	postinc2,_C+74	;volatile
 29804  0162CE  006F FF74  F84A    	movff	postdec2,_C+75	;volatile
 29805                           
 29806                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 29807  0162D4  EE22  F00F         	lfsr	2,_C+16	;volatile
 29808  0162D8  006F FF78  F853    	movff	postinc2,_C+84	;volatile
 29809  0162DE  006F FF78  F854    	movff	postinc2,_C+85	;volatile
 29810  0162E4  006F FF78  F855    	movff	postinc2,_C+86	;volatile
 29811  0162EA  006F FF74  F856    	movff	postdec2,_C+87	;volatile
 29812                           
 29813                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 29814  0162F0  EE22  F033         	lfsr	2,_C+52	;volatile
 29815  0162F4  006F FF78  F867    	movff	postinc2,_C+104	;volatile
 29816  0162FA  006F FF78  F868    	movff	postinc2,_C+105	;volatile
 29817  016300  006F FF78  F869    	movff	postinc2,_C+106	;volatile
 29818  016306  006F FF74  F86A    	movff	postdec2,_C+107	;volatile
 29819                           
 29820                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 29821  01630C  0060  F1C3  FFE6   	movff	calc_model_data@bvror,postinc1
 29822  016312  0060  F1C7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 29823  016318  0060  F1CB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 29824  01631E  0060  F1CF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 29825  016324  EE22  F053         	lfsr	2,_C+84	;volatile
 29826  016328  006F FF7B FFE6     	movff	postinc2,postinc1
 29827  01632E  006F FF7B FFE6     	movff	postinc2,postinc1
 29828  016334  006F FF7B FFE6     	movff	postinc2,postinc1
 29829  01633A  006F FF7B FFE6     	movff	postinc2,postinc1
 29830  016340  ECB6  F0E3         	call	___flsub	;wreg free
 29831  016344  0060  F004  F86B   	movff	btemp,_C+108	;volatile
 29832  01634A  0060  F008  F86C   	movff	btemp+1,_C+109	;volatile
 29833  016350  0060  F00C  F86D   	movff	btemp+2,_C+110	;volatile
 29834  016356  0060  F010  F86E   	movff	btemp+3,_C+111	;volatile
 29835                           
 29836                           ;mbmc.c: 80:   bvror = C.v_bat;
 29837  01635C  C853  F070         	movff	_C+84,calc_model_data@bvror	;volatile
 29838  016360  C854  F071         	movff	_C+85,calc_model_data@bvror+1	;volatile
 29839  016364  C855  F072         	movff	_C+86,calc_model_data@bvror+2	;volatile
 29840  016368  C856  F073         	movff	_C+87,calc_model_data@bvror+3	;volatile
 29841                           
 29842                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 29843  01636C  EE22  F013         	lfsr	2,_C+20	;volatile
 29844  016370  006F FF78  F84F    	movff	postinc2,_C+80	;volatile
 29845  016376  006F FF78  F850    	movff	postinc2,_C+81	;volatile
 29846  01637C  006F FF78  F851    	movff	postinc2,_C+82	;volatile
 29847  016382  006F FF74  F852    	movff	postdec2,_C+83	;volatile
 29848                           
 29849                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 29850  016388  EE22  F007         	lfsr	2,_C+8	;volatile
 29851  01638C  006F FF78  F84B    	movff	postinc2,_C+76	;volatile
 29852  016392  006F FF78  F84C    	movff	postinc2,_C+77	;volatile
 29853  016398  006F FF78  F84D    	movff	postinc2,_C+78	;volatile
 29854  01639E  006F FF74  F84E    	movff	postdec2,_C+79	;volatile
 29855                           
 29856                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 29857  0163A4  EE22  F02F         	lfsr	2,_C+48	;volatile
 29858  0163A8  006F FF78  F863    	movff	postinc2,_C+100	;volatile
 29859  0163AE  006F FF78  F864    	movff	postinc2,_C+101	;volatile
 29860  0163B4  006F FF78  F865    	movff	postinc2,_C+102	;volatile
 29861  0163BA  006F FF74  F866    	movff	postdec2,_C+103	;volatile
 29862                           
 29863                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 29864  0163C0  0E01               	movlw	1
 29865  0163C2  6EE6               	movwf	postinc1,c
 29866  0163C4  0E10               	movlw	16
 29867  0163C6  6EE6               	movwf	postinc1,c
 29868  0163C8  EE21  F3FF         	lfsr	2,_C
 29869  0163CC  006F FF7B FFE6     	movff	postinc2,postinc1
 29870  0163D2  006F FF7B FFE6     	movff	postinc2,postinc1
 29871  0163D8  006F FF7B FFE6     	movff	postinc2,postinc1
 29872  0163DE  006F FF7B FFE6     	movff	postinc2,postinc1
 29873  0163E4  EE22  F003         	lfsr	2,_C+4	;volatile
 29874  0163E8  006F FF7B FFE6     	movff	postinc2,postinc1
 29875  0163EE  006F FF7B FFE6     	movff	postinc2,postinc1
 29876  0163F4  006F FF7B FFE6     	movff	postinc2,postinc1
 29877  0163FA  006F FF7B FFE6     	movff	postinc2,postinc1
 29878  016400  ECB6  F0E3         	call	___flsub	;wreg free
 29879  016404  0060  F007  FFE6   	movff	btemp,postinc1
 29880  01640A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29881  016410  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29882  016416  0060  F013  FFE6   	movff	btemp+3,postinc1
 29883  01641C  EC0F  F0C8         	call	_lp_filter	;wreg free
 29884  016420  0060  F004  F83F   	movff	btemp,_C+64	;volatile
 29885  016426  0060  F008  F840   	movff	btemp+1,_C+65	;volatile
 29886  01642C  0060  F00C  F841   	movff	btemp+2,_C+66	;volatile
 29887  016432  0060  F010  F842   	movff	btemp+3,_C+67	;volatile
 29888                           
 29889                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 29890  016438  0E01               	movlw	1
 29891  01643A  6EE6               	movwf	postinc1,c
 29892  01643C  0E11               	movlw	17
 29893  01643E  6EE6               	movwf	postinc1,c
 29894  016440  EE22  F053         	lfsr	2,_C+84	;volatile
 29895  016444  006F FF7B FFE6     	movff	postinc2,postinc1
 29896  01644A  006F FF7B FFE6     	movff	postinc2,postinc1
 29897  016450  006F FF7B FFE6     	movff	postinc2,postinc1
 29898  016456  006F FF7B FFE6     	movff	postinc2,postinc1
 29899  01645C  EE22  F03F         	lfsr	2,_C+64	;volatile
 29900  016460  006F FF7B FFE6     	movff	postinc2,postinc1
 29901  016466  006F FF7B FFE6     	movff	postinc2,postinc1
 29902  01646C  006F FF7B FFE6     	movff	postinc2,postinc1
 29903  016472  006F FF7B FFE6     	movff	postinc2,postinc1
 29904  016478  EC6E  F09F         	call	___flmul	;wreg free
 29905  01647C  0060  F007  FFE6   	movff	btemp,postinc1
 29906  016482  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29907  016488  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29908  01648E  0060  F013  FFE6   	movff	btemp+3,postinc1
 29909  016494  EC0F  F0C8         	call	_lp_filter	;wreg free
 29910  016498  0060  F004  F873   	movff	btemp,_C+116	;volatile
 29911  01649E  0060  F008  F874   	movff	btemp+1,_C+117	;volatile
 29912  0164A4  0060  F00C  F875   	movff	btemp+2,_C+118	;volatile
 29913  0164AA  0060  F010  F876   	movff	btemp+3,_C+119	;volatile
 29914                           
 29915                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 29916  0164B0  0E01               	movlw	1
 29917  0164B2  6EE6               	movwf	postinc1,c
 29918  0164B4  0E12               	movlw	18
 29919  0164B6  6EE6               	movwf	postinc1,c
 29920  0164B8  EE22  F04F         	lfsr	2,_C+80	;volatile
 29921  0164BC  006F FF7B FFE6     	movff	postinc2,postinc1
 29922  0164C2  006F FF7B FFE6     	movff	postinc2,postinc1
 29923  0164C8  006F FF7B FFE6     	movff	postinc2,postinc1
 29924  0164CE  006F FF7B FFE6     	movff	postinc2,postinc1
 29925  0164D4  EE22  F047         	lfsr	2,_C+72	;volatile
 29926  0164D8  006F FF7B FFE6     	movff	postinc2,postinc1
 29927  0164DE  006F FF7B FFE6     	movff	postinc2,postinc1
 29928  0164E4  006F FF7B FFE6     	movff	postinc2,postinc1
 29929  0164EA  006F FF7B FFE6     	movff	postinc2,postinc1
 29930  0164F0  EC6E  F09F         	call	___flmul	;wreg free
 29931  0164F4  0060  F007  FFE6   	movff	btemp,postinc1
 29932  0164FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29933  016500  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29934  016506  0060  F013  FFE6   	movff	btemp+3,postinc1
 29935  01650C  EC0F  F0C8         	call	_lp_filter	;wreg free
 29936  016510  0060  F004  F87B   	movff	btemp,_C+124	;volatile
 29937  016516  0060  F008  F87C   	movff	btemp+1,_C+125	;volatile
 29938  01651C  0060  F00C  F87D   	movff	btemp+2,_C+126	;volatile
 29939  016522  0060  F010  F87E   	movff	btemp+3,_C+127	;volatile
 29940                           
 29941                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 29942  016528  0E01               	movlw	1
 29943  01652A  6EE6               	movwf	postinc1,c
 29944  01652C  0E13               	movlw	19
 29945  01652E  6EE6               	movwf	postinc1,c
 29946  016530  0E00               	movlw	0
 29947  016532  6EE6               	movwf	postinc1,c
 29948  016534  0E00               	movlw	0
 29949  016536  6EE6               	movwf	postinc1,c
 29950  016538  0E60               	movlw	96
 29951  01653A  6EE6               	movwf	postinc1,c
 29952  01653C  0EC1               	movlw	193
 29953  01653E  6EE6               	movwf	postinc1,c
 29954  016540  EE22  F063         	lfsr	2,_C+100	;volatile
 29955  016544  006F FF7B FFE6     	movff	postinc2,postinc1
 29956  01654A  006F FF7B FFE6     	movff	postinc2,postinc1
 29957  016550  006F FF7B FFE6     	movff	postinc2,postinc1
 29958  016556  006F FF7B FFE6     	movff	postinc2,postinc1
 29959  01655C  EE22  F03F         	lfsr	2,_C+64	;volatile
 29960  016560  006F FF7B FFE6     	movff	postinc2,postinc1
 29961  016566  006F FF7B FFE6     	movff	postinc2,postinc1
 29962  01656C  006F FF7B FFE6     	movff	postinc2,postinc1
 29963  016572  006F FF7B FFE6     	movff	postinc2,postinc1
 29964  016578  EC6E  F09F         	call	___flmul	;wreg free
 29965  01657C  0060  F007  FFE6   	movff	btemp,postinc1
 29966  016582  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29967  016588  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29968  01658E  0060  F013  FFE6   	movff	btemp+3,postinc1
 29969  016594  EC83  F0A3         	call	___fladd	;wreg free
 29970  016598  0060  F007  FFE6   	movff	btemp,postinc1
 29971  01659E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29972  0165A4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29973  0165AA  0060  F013  FFE6   	movff	btemp+3,postinc1
 29974  0165B0  EC0F  F0C8         	call	_lp_filter	;wreg free
 29975  0165B4  0060  F004  F877   	movff	btemp,_C+120	;volatile
 29976  0165BA  0060  F008  F878   	movff	btemp+1,_C+121	;volatile
 29977  0165C0  0060  F00C  F879   	movff	btemp+2,_C+122	;volatile
 29978  0165C6  0060  F010  F87A   	movff	btemp+3,_C+123	;volatile
 29979                           
 29980                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 29981  0165CC  0E01               	movlw	1
 29982  0165CE  6EE6               	movwf	postinc1,c
 29983  0165D0  0E14               	movlw	20
 29984  0165D2  6EE6               	movwf	postinc1,c
 29985  0165D4  EE22  F053         	lfsr	2,_C+84	;volatile
 29986  0165D8  006F FF7B FFE6     	movff	postinc2,postinc1
 29987  0165DE  006F FF7B FFE6     	movff	postinc2,postinc1
 29988  0165E4  006F FF7B FFE6     	movff	postinc2,postinc1
 29989  0165EA  006F FF7B FFE6     	movff	postinc2,postinc1
 29990  0165F0  EE22  F043         	lfsr	2,_C+68	;volatile
 29991  0165F4  006F FF7B FFE6     	movff	postinc2,postinc1
 29992  0165FA  006F FF7B FFE6     	movff	postinc2,postinc1
 29993  016600  006F FF7B FFE6     	movff	postinc2,postinc1
 29994  016606  006F FF7B FFE6     	movff	postinc2,postinc1
 29995  01660C  EC6E  F09F         	call	___flmul	;wreg free
 29996  016610  0060  F007  FFE6   	movff	btemp,postinc1
 29997  016616  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29998  01661C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29999  016622  0060  F013  FFE6   	movff	btemp+3,postinc1
 30000  016628  EC0F  F0C8         	call	_lp_filter	;wreg free
 30001  01662C  0060  F004  F87F   	movff	btemp,_C+128	;volatile
 30002  016632  0060  F008  F880   	movff	btemp+1,_C+129	;volatile
 30003  016638  0060  F00C  F881   	movff	btemp+2,_C+130	;volatile
 30004  01663E  0060  F010  F882   	movff	btemp+3,_C+131	;volatile
 30005                           
 30006                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 30007  016644  EE22  F077         	lfsr	2,_C+120	;volatile
 30008  016648  0E03               	movlw	3
 30009  01664A  AEDB               	btfss	plusw2,7,c
 30010  01664C  D010               	goto	l12188
 30011                           
 30012                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 30013  01664E  0E17               	movlw	23
 30014  016650  006F FFA0  F877    	movff	wreg,_C+120	;volatile
 30015  016656  0EB7               	movlw	183
 30016  016658  006F FFA0  F878    	movff	wreg,_C+121	;volatile
 30017  01665E  0ED1               	movlw	209
 30018  016660  006F FFA0  F879    	movff	wreg,_C+122	;volatile
 30019  016666  0E38               	movlw	56
 30020  016668  006F FFA0  F87A    	movff	wreg,_C+123	;volatile
 30021  01666E                     l12188:
 30022                           
 30023                           ;mbmc.c: 95:  start_bsoc();
 30024  01666E  EC61  F0E8         	call	_start_bsoc	;wreg free
 30025                           
 30026                           ; BSR set to: 57
 30027                           ;mbmc.c: 96:  C.update = 1;
 30028  016672  0E01               	movlw	1
 30029  016674  006F FFA0  F8B7    	movff	wreg,_C+184	;volatile
 30030                           
 30031                           ; BSR set to: 57
 30032                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30033  01667A  0012               	return		;funcret
 30034  01667C                     __end_of_calc_model_data:
 30035                           	opt callstack 0
 30036                           
 30037 ;; *************** function _stop_bsoc *****************
 30038 ;; Defined at:
 30039 ;;		line 130 in file "bsoc.c"
 30040 ;; Parameters:    Size  Location     Type
 30041 ;;		None
 30042 ;; Auto vars:     Size  Location     Type
 30043 ;;		None
 30044 ;; Return value:  Size  Location     Type
 30045 ;;                  1  [STACK] void 
 30046 ;; Registers used:
 30047 ;;		None
 30048 ;; Tracked objects:
 30049 ;;		On entry : 0/1
 30050 ;;		On exit  : 3F/39
 30051 ;;		Unchanged: 0/0
 30052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30057 ;;Total ram usage:        0 bytes
 30058 ;; Hardware stack levels used:    1
 30059 ;; Hardware stack levels required when called:   15
 30060 ;; This function calls:
 30061 ;;		Nothing
 30062 ;; This function is called by:
 30063 ;;		_calc_model_data
 30064 ;; This function uses a reentrant model
 30065 ;;
 30066                           
 30067                           	psect	text121
 30068  01D3E2                     __ptext121:
 30069                           	opt callstack 0
 30070  01D3E2                     _stop_bsoc:
 30071                           	opt callstack 14
 30072                           
 30073                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 30074                           
 30075                           ; BSR set to: 57
 30076                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30077                           ;incstack = 0
 30078  01D3E2  0139               	movlb	57	; () banked
 30079  01D3E4  9D96               	bcf	150,6,b	;volatile
 30080                           
 30081                           ; BSR set to: 57
 30082                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 30083  01D3E6  0012               	return		;funcret
 30084  01D3E8                     __end_of_stop_bsoc:
 30085                           	opt callstack 0
 30086                           
 30087 ;; *************** function _start_bsoc *****************
 30088 ;; Defined at:
 30089 ;;		line 121 in file "bsoc.c"
 30090 ;; Parameters:    Size  Location     Type
 30091 ;;		None
 30092 ;; Auto vars:     Size  Location     Type
 30093 ;;		None
 30094 ;; Return value:  Size  Location     Type
 30095 ;;                  1  [STACK] void 
 30096 ;; Registers used:
 30097 ;;		wreg, status,2, status,0, btemp+11
 30098 ;; Tracked objects:
 30099 ;;		On entry : 0/1
 30100 ;;		On exit  : 3F/39
 30101 ;;		Unchanged: 0/0
 30102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30107 ;;Total ram usage:        0 bytes
 30108 ;; Hardware stack levels used:    1
 30109 ;; Hardware stack levels required when called:   15
 30110 ;; This function calls:
 30111 ;;		Nothing
 30112 ;; This function is called by:
 30113 ;;		_calc_model_data
 30114 ;; This function uses a reentrant model
 30115 ;;
 30116                           
 30117                           	psect	text122
 30118  01D0C2                     __ptext122:
 30119                           	opt callstack 0
 30120  01D0C2                     _start_bsoc:
 30121                           	opt callstack 14
 30122                           
 30123                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 30124                           
 30125                           ; BSR set to: 57
 30126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30127                           ;incstack = 0
 30128  01D0C2  0139               	movlb	57	; () banked
 30129  01D0C4  8D96               	bsf	150,6,b	;volatile
 30130                           
 30131                           ; BSR set to: 57
 30132  01D0C6  A4BE               	btfss	190,2,c	;volatile
 30133  01D0C8  D002               	goto	u10400
 30134  01D0CA  0E01               	movlw	1
 30135  01D0CC  D001               	goto	u10406
 30136  01D0CE                     u10400:
 30137  01D0CE  0E00               	movlw	0
 30138  01D0D0                     u10406:
 30139  01D0D0  0AFF               	xorlw	255
 30140  01D0D2  6E0C               	movwf	(btemp+11)^0,c
 30141  01D0D4  460C               	rlncf	(btemp+11)^0,f,c
 30142  01D0D6  460C               	rlncf	(btemp+11)^0,f,c
 30143  01D0D8  50BE               	movf	190,w,c	;volatile
 30144  01D0DA  180C               	xorwf	(btemp+11)^0,w,c
 30145  01D0DC  0BFB               	andlw	-5
 30146  01D0DE  180C               	xorwf	(btemp+11)^0,w,c
 30147  01D0E0  6EBE               	movwf	190,c	;volatile
 30148                           
 30149                           ; BSR set to: 57
 30150                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 30151  01D0E2  0012               	return		;funcret
 30152  01D0E4                     __end_of_start_bsoc:
 30153                           	opt callstack 0
 30154                           
 30155 ;; *************** function _lp_filter *****************
 30156 ;; Defined at:
 30157 ;;		line 29 in file "mbmc.c"
 30158 ;; Parameters:    Size  Location     Type
 30159 ;;  new             4  [STACK] const float 
 30160 ;;  bn              1  [STACK] const unsigned char 
 30161 ;;  slow            1  [STACK] const char 
 30162 ;; Auto vars:     Size  Location     Type
 30163 ;;  lp_speed        4  [STACK] float 
 30164 ;; Return value:  Size  Location     Type
 30165 ;;                  4  [STACK] float 
 30166 ;; Registers used:
 30167 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 30168 ;; Tracked objects:
 30169 ;;		On entry : 0/1
 30170 ;;		On exit  : 0/0
 30171 ;;		Unchanged: 0/0
 30172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30177 ;;Total ram usage:        0 bytes
 30178 ;; Hardware stack levels used:    1
 30179 ;; Hardware stack levels required when called:   17
 30180 ;; This function calls:
 30181 ;;		___fladd
 30182 ;;		___flmul
 30183 ;;		___flsub
 30184 ;; This function is called by:
 30185 ;;		_main
 30186 ;;		_convert_adc_data
 30187 ;;		_calc_model_data
 30188 ;; This function uses a reentrant model
 30189 ;;
 30190                           
 30191                           	psect	text123
 30192  01901E                     __ptext123:
 30193                           	opt callstack 0
 30194  01901E                     _lp_filter:
 30195                           	opt callstack 0
 30196                           
 30197                           ; BSR set to: 57
 30198                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30199  01901E  52E6               	movf	postinc1,f,c
 30200  019020  52E6               	movf	postinc1,f,c
 30201  019022  52E6               	movf	postinc1,f,c
 30202  019024  52E6               	movf	postinc1,f,c
 30203                           
 30204                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 30205                           ;stkvar	_bn @ sp[(-4)+-5]
 30206                           
 30207                           ;incstack = 0
 30208  019026  0EF7               	movlw	-9
 30209  019028  006F FF8C  F001    	movff	plusw1,btemp
 30210  01902E  0E14               	movlw	20
 30211  019030  6401               	cpfsgt	btemp^0,c
 30212  019032  D011               	goto	l11310
 30213  019034                     u10210:
 30214                           
 30215                           ;mbmc.c: 35:   return new;
 30216                           ;stkvar	_new @ sp[(-4)+-4]
 30217  019034  0EF8               	movlw	-8
 30218  019036  006F FF8C  F001    	movff	plusw1,btemp
 30219  01903C  0EF9               	movlw	-7
 30220  01903E  006F FF8C  F002    	movff	plusw1,btemp+1
 30221  019044  0EFA               	movlw	-6
 30222  019046  006F FF8C  F003    	movff	plusw1,btemp+2
 30223  01904C  0EFB               	movlw	-5
 30224  01904E  006F FF8C  F004    	movff	plusw1,btemp+3
 30225  019054  D0BD               	goto	l1997
 30226  019056                     l11310:
 30227                           
 30228                           ;mbmc.c: 37:  if (slow == (-1)) {
 30229                           ;stkvar	_slow @ sp[(-4)+-6]
 30230  019056  0EF6               	movlw	-10
 30231  019058  28E3               	incf	plusw1,w,c
 30232  01905A  A4D8               	btfss	status,2,c
 30233  01905C  D012               	goto	l11318
 30234                           
 30235                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 30236                           ;stkvar	_bn @ sp[(-4)+-5]
 30237  01905E  0EF7               	movlw	-9
 30238  019060  50E3               	movf	plusw1,w,c
 30239  019062  0D04               	mullw	4
 30240  019064  0E00               	movlw	low lp_filter@smooth
 30241  019066  24F3               	addwf	243,w,c
 30242  019068  6ED9               	movwf	fsr2l,c
 30243  01906A  0E03               	movlw	high lp_filter@smooth
 30244  01906C  20F4               	addwfc	prodh,w,c
 30245  01906E  6EDA               	movwf	fsr2h,c
 30246  019070  0E00               	movlw	0
 30247  019072  6EDE               	movwf	postinc2,c
 30248  019074  0E00               	movlw	0
 30249  019076  6EDE               	movwf	postinc2,c
 30250  019078  0E00               	movlw	0
 30251  01907A  6EDE               	movwf	postinc2,c
 30252  01907C  0E00               	movlw	0
 30253  01907E  6EDD               	movwf	postdec2,c
 30254  019080  D7D9               	goto	u10210
 30255  019082                     l11318:
 30256                           
 30257                           ;mbmc.c: 42:  if (slow) {
 30258                           ;stkvar	_slow @ sp[(-4)+-6]
 30259  019082  0EF6               	movlw	-10
 30260  019084  50E3               	movf	plusw1,w,c
 30261  019086  B4D8               	btfsc	status,2,c
 30262  019088  D006               	goto	l11322
 30263                           
 30264                           ;mbmc.c: 43:   lp_speed = 0.033;
 30265  01908A  0E02               	movlw	2
 30266  01908C  6E09               	movwf	(btemp+8)^0,c
 30267  01908E  0E2B               	movlw	43
 30268  019090  6E0A               	movwf	(btemp+9)^0,c
 30269  019092  0E07               	movlw	7
 30270  019094  D005               	goto	L36
 30271  019096                     l11322:
 30272                           
 30273                           ;mbmc.c: 45:   lp_speed = 0.066;
 30274  019096  0E02               	movlw	2
 30275  019098  6E09               	movwf	(btemp+8)^0,c
 30276  01909A  0E2B               	movlw	43
 30277  01909C  6E0A               	movwf	(btemp+9)^0,c
 30278  01909E  0E87               	movlw	135
 30279  0190A0                     L36:
 30280  0190A0  6E0B               	movwf	(btemp+10)^0,c
 30281  0190A2  0E3D               	movlw	61
 30282  0190A4  6E0C               	movwf	(btemp+11)^0,c
 30283                           
 30284                           ;stkvar	_lp_speed @ sp[(-4)+0]
 30285  0190A6  0EFC               	movlw	-4
 30286  0190A8  0060  F027  FFE3   	movff	btemp+8,plusw1
 30287  0190AE  0EFD               	movlw	-3
 30288  0190B0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30289  0190B6  0EFE               	movlw	-2
 30290  0190B8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30291  0190BE  0EFF               	movlw	-1
 30292  0190C0  0060  F033  FFE3   	movff	btemp+11,plusw1
 30293                           
 30294                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 30295                           ;stkvar	_bn @ sp[(-4)+-5]
 30296  0190C6  0EF7               	movlw	-9
 30297  0190C8  50E3               	movf	plusw1,w,c
 30298  0190CA  0D04               	mullw	4
 30299  0190CC  0E00               	movlw	low lp_filter@smooth
 30300  0190CE  24F3               	addwf	243,w,c
 30301  0190D0  6ED9               	movwf	fsr2l,c
 30302  0190D2  0E03               	movlw	high lp_filter@smooth
 30303  0190D4  20F4               	addwfc	prodh,w,c
 30304  0190D6  6EDA               	movwf	fsr2h,c
 30305  0190D8  006F FF7B FFE6     	movff	postinc2,postinc1
 30306  0190DE  006F FF7B FFE6     	movff	postinc2,postinc1
 30307  0190E4  006F FF7B FFE6     	movff	postinc2,postinc1
 30308  0190EA  006F FF7B FFE6     	movff	postinc2,postinc1
 30309                           
 30310                           ;stkvar	_lp_speed @ sp[(-8)+0]
 30311  0190F0  0EF8               	movlw	-8
 30312  0190F2  006F FF8F FFE6     	movff	plusw1,postinc1
 30313  0190F8  006F FF8F FFE6     	movff	plusw1,postinc1
 30314  0190FE  006F FF8F FFE6     	movff	plusw1,postinc1
 30315  019104  006F FF8F FFE6     	movff	plusw1,postinc1
 30316                           
 30317                           ;stkvar	_bn @ sp[(-12)+-5]
 30318  01910A  0EEF               	movlw	-17
 30319  01910C  50E3               	movf	plusw1,w,c
 30320  01910E  0D04               	mullw	4
 30321  019110  0E00               	movlw	low lp_filter@smooth
 30322  019112  24F3               	addwf	243,w,c
 30323  019114  6ED9               	movwf	fsr2l,c
 30324  019116  0E03               	movlw	high lp_filter@smooth
 30325  019118  20F4               	addwfc	prodh,w,c
 30326  01911A  6EDA               	movwf	fsr2h,c
 30327  01911C  006F FF7B FFE6     	movff	postinc2,postinc1
 30328  019122  006F FF7B FFE6     	movff	postinc2,postinc1
 30329  019128  006F FF7B FFE6     	movff	postinc2,postinc1
 30330  01912E  006F FF7B FFE6     	movff	postinc2,postinc1
 30331                           
 30332                           ;stkvar	_new @ sp[(-16)+-4]
 30333  019134  0EEC               	movlw	-20
 30334  019136  006F FF8F FFE6     	movff	plusw1,postinc1
 30335  01913C  006F FF8F FFE6     	movff	plusw1,postinc1
 30336  019142  006F FF8F FFE6     	movff	plusw1,postinc1
 30337  019148  006F FF8F FFE6     	movff	plusw1,postinc1
 30338  01914E  ECB6  F0E3         	call	___flsub	;wreg free
 30339  019152  0060  F007  FFE6   	movff	btemp,postinc1
 30340  019158  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30341  01915E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30342  019164  0060  F013  FFE6   	movff	btemp+3,postinc1
 30343  01916A  EC6E  F09F         	call	___flmul	;wreg free
 30344  01916E  0060  F007  FFE6   	movff	btemp,postinc1
 30345  019174  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30346  01917A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30347  019180  0060  F013  FFE6   	movff	btemp+3,postinc1
 30348  019186  EC83  F0A3         	call	___fladd	;wreg free
 30349                           
 30350                           ;stkvar	_bn @ sp[(-4)+-5]
 30351  01918A  0EF7               	movlw	-9
 30352  01918C  50E3               	movf	plusw1,w,c
 30353  01918E  0D04               	mullw	4
 30354  019190  0E00               	movlw	low lp_filter@smooth
 30355  019192  24F3               	addwf	243,w,c
 30356  019194  6ED9               	movwf	fsr2l,c
 30357  019196  0E03               	movlw	high lp_filter@smooth
 30358  019198  20F4               	addwfc	prodh,w,c
 30359  01919A  6EDA               	movwf	fsr2h,c
 30360  01919C  0060  F007  FFDE   	movff	btemp,postinc2
 30361  0191A2  0060  F00B  FFDE   	movff	btemp+1,postinc2
 30362  0191A8  0060  F00F  FFDE   	movff	btemp+2,postinc2
 30363  0191AE  0060  F013  FFDD   	movff	btemp+3,postdec2
 30364  0191B4  52DD               	movf	postdec2,f,c
 30365  0191B6  52DD               	movf	postdec2,f,c
 30366  0191B8  006F FF78  F001    	movff	postinc2,btemp
 30367  0191BE  006F FF78  F002    	movff	postinc2,btemp+1
 30368  0191C4  006F FF78  F003    	movff	postinc2,btemp+2
 30369  0191CA  006F FF78  F004    	movff	postinc2,btemp+3
 30370  0191D0                     l1997:
 30371                           
 30372                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 30373  0191D0  0EF6               	movlw	246
 30374  0191D2  26E1               	addwf	fsr1l,f,c
 30375  0191D4  0EFF               	movlw	255
 30376  0191D6  22E2               	addwfc	fsr1h,f,c
 30377  0191D8  0012               	return		;funcret
 30378  0191DA                     __end_of_lp_filter:
 30379                           	opt callstack 0
 30380                           
 30381 ;; *************** function ___flsub *****************
 30382 ;; Defined at:
 30383 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 30384 ;; Parameters:    Size  Location     Type
 30385 ;;  b               4  [STACK] float 
 30386 ;;  a               4  [STACK] float 
 30387 ;; Auto vars:     Size  Location     Type
 30388 ;;		None
 30389 ;; Return value:  Size  Location     Type
 30390 ;;                  4  [STACK] float 
 30391 ;; Registers used:
 30392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 30393 ;; Tracked objects:
 30394 ;;		On entry : 0/0
 30395 ;;		On exit  : 0/0
 30396 ;;		Unchanged: 0/0
 30397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30402 ;;Total ram usage:        0 bytes
 30403 ;; Hardware stack levels used:    1
 30404 ;; Hardware stack levels required when called:   16
 30405 ;; This function calls:
 30406 ;;		___fladd
 30407 ;; This function is called by:
 30408 ;;		_conv_raw_result
 30409 ;;		_lp_filter
 30410 ;;		_calc_model_data
 30411 ;;		_calc_ror_data
 30412 ;;		_esr_check
 30413 ;;		_efgtoa
 30414 ;; This function uses a reentrant model
 30415 ;;
 30416                           
 30417                           	psect	text124
 30418  01C76C                     __ptext124:
 30419                           	opt callstack 0
 30420  01C76C                     ___flsub:
 30421                           	opt callstack 0
 30422                           
 30423                           ;stkvar	_a @ sp[(0)+-8]
 30424                           
 30425                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30426                           ;incstack = 0
 30427 ;; hardware stack exceeded
 30428  01C76C  0EFB               	movlw	-5
 30429  01C76E  7EE3               	btg	plusw1,7,c
 30430                           
 30431                           ;stkvar	_a @ sp[(0)+-8]
 30432  01C770  0EF8               	movlw	-8
 30433  01C772  006F FF8F FFE6     	movff	plusw1,postinc1
 30434  01C778  006F FF8F FFE6     	movff	plusw1,postinc1
 30435  01C77E  006F FF8F FFE6     	movff	plusw1,postinc1
 30436  01C784  006F FF8F FFE6     	movff	plusw1,postinc1
 30437                           
 30438                           ;stkvar	_b @ sp[(-4)+-4]
 30439  01C78A  0EF8               	movlw	-8
 30440  01C78C  006F FF8F FFE6     	movff	plusw1,postinc1
 30441  01C792  006F FF8F FFE6     	movff	plusw1,postinc1
 30442  01C798  006F FF8F FFE6     	movff	plusw1,postinc1
 30443  01C79E  006F FF8F FFE6     	movff	plusw1,postinc1
 30444  01C7A4  EC83  F0A3         	call	___fladd	;wreg free
 30445                           
 30446                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 30447  01C7A8  0EF8               	movlw	248
 30448  01C7AA  26E1               	addwf	fsr1l,f,c
 30449  01C7AC  0EFF               	movlw	255
 30450  01C7AE  22E2               	addwfc	fsr1h,f,c
 30451  01C7B0  0012               	return		;funcret
 30452  01C7B2                     __end_of___flsub:
 30453                           	opt callstack 0
 30454                           
 30455 ;; *************** function ___fladd *****************
 30456 ;; Defined at:
 30457 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 30458 ;; Parameters:    Size  Location     Type
 30459 ;;  b               4  [STACK] float 
 30460 ;;  a               4  [STACK] float 
 30461 ;; Auto vars:     Size  Location     Type
 30462 ;;  grs             1  [STACK] unsigned char 
 30463 ;;  bexp            1  [STACK] unsigned char 
 30464 ;;  aexp            1  [STACK] unsigned char 
 30465 ;;  signs           1  [STACK] unsigned char 
 30466 ;; Return value:  Size  Location     Type
 30467 ;;                  4  [STACK] unsigned char 
 30468 ;; Registers used:
 30469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 30470 ;; Tracked objects:
 30471 ;;		On entry : 0/0
 30472 ;;		On exit  : 0/0
 30473 ;;		Unchanged: 0/0
 30474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30479 ;;Total ram usage:        0 bytes
 30480 ;; Hardware stack levels used:    1
 30481 ;; Hardware stack levels required when called:   15
 30482 ;; This function calls:
 30483 ;;		Nothing
 30484 ;; This function is called by:
 30485 ;;		_main
 30486 ;;		_lp_filter
 30487 ;;		_calc_model_data
 30488 ;;		_efgtoa
 30489 ;;		___asfladd
 30490 ;;		___flsub
 30491 ;; This function uses a reentrant model
 30492 ;;
 30493                           
 30494                           	psect	text125
 30495  014706                     __ptext125:
 30496                           	opt callstack 0
 30497  014706                     ___fladd:
 30498                           	opt callstack 0
 30499                           
 30500                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30501  014706  52E6               	movf	postinc1,f,c
 30502  014708  52E6               	movf	postinc1,f,c
 30503  01470A  52E6               	movf	postinc1,f,c
 30504  01470C  52E6               	movf	postinc1,f,c
 30505                           
 30506                           ;stkvar	_b @ sp[(-4)+-4]
 30507                           
 30508                           ;incstack = 0
 30509 ;; hardware stack exceeded
 30510  01470E  0EFB               	movlw	251
 30511  014710  24E1               	addwf	fsr1l,w,c
 30512  014712  6ED9               	movwf	fsr2l,c
 30513  014714  0EFF               	movlw	255
 30514  014716  20E2               	addwfc	fsr1h,w,c
 30515  014718  6EDA               	movwf	fsr2h,c
 30516  01471A  50DF               	movf	indf2,w,c
 30517  01471C  6E0C               	movwf	(btemp+11)^0,c
 30518  01471E  0E80               	movlw	128
 30519  014720  160C               	andwf	(btemp+11)^0,f,c
 30520                           
 30521                           ;stkvar	_signs @ sp[(-4)+3]
 30522  014722  0EFF               	movlw	-1
 30523  014724  0060  F033  FFE3   	movff	btemp+11,plusw1
 30524                           
 30525                           ;stkvar	_b @ sp[(-4)+-4]
 30526  01472A  0EFB               	movlw	251
 30527  01472C  24E1               	addwf	fsr1l,w,c
 30528  01472E  6ED9               	movwf	fsr2l,c
 30529  014730  0EFF               	movlw	255
 30530  014732  20E2               	addwfc	fsr1h,w,c
 30531  014734  6EDA               	movwf	fsr2h,c
 30532  014736  50DF               	movf	indf2,w,c
 30533  014738  6E0C               	movwf	(btemp+11)^0,c
 30534  01473A  90D8               	bcf	status,0,c
 30535  01473C  340C               	rlcf	(btemp+11)^0,w,c
 30536  01473E  6E0B               	movwf	(btemp+10)^0,c
 30537                           
 30538                           ;stkvar	_bexp @ sp[(-4)+1]
 30539  014740  0EFD               	movlw	-3
 30540  014742  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30541                           
 30542                           ;stkvar	_b @ sp[(-4)+-4]
 30543  014748  0EFA               	movlw	250
 30544  01474A  24E1               	addwf	fsr1l,w,c
 30545  01474C  6ED9               	movwf	fsr2l,c
 30546  01474E  0EFF               	movlw	255
 30547  014750  20E2               	addwfc	fsr1h,w,c
 30548  014752  6EDA               	movwf	fsr2h,c
 30549  014754  AEDF               	btfss	indf2,7,c
 30550  014756  D002               	goto	l8448
 30551                           
 30552                           ;stkvar	_bexp @ sp[(-4)+1]
 30553  014758  0EFD               	movlw	-3
 30554  01475A  80E3               	bsf	plusw1,0,c
 30555  01475C                     l8448:
 30556                           
 30557                           ;stkvar	_bexp @ sp[(-4)+1]
 30558  01475C  0EFD               	movlw	-3
 30559  01475E  50E3               	movf	plusw1,w,c
 30560  014760  B4D8               	btfsc	status,2,c
 30561  014762  D027               	goto	l8458
 30562                           
 30563                           ;stkvar	_bexp @ sp[(-4)+1]
 30564  014764  0EFD               	movlw	-3
 30565  014766  28E3               	incf	plusw1,w,c
 30566  014768  A4D8               	btfss	status,2,c
 30567  01476A  D018               	goto	l8454
 30568  01476C  0E00               	movlw	0
 30569  01476E  6E09               	movwf	(btemp+8)^0,c
 30570  014770  0E00               	movlw	0
 30571  014772  6E0A               	movwf	(btemp+9)^0,c
 30572  014774  0E00               	movlw	0
 30573  014776  6E0B               	movwf	(btemp+10)^0,c
 30574  014778  0E00               	movlw	0
 30575  01477A  6E0C               	movwf	(btemp+11)^0,c
 30576                           
 30577                           ;stkvar	_b @ sp[(-4)+-4]
 30578  01477C  0EF8               	movlw	-8
 30579  01477E  0060  F027  FFE3   	movff	btemp+8,plusw1
 30580  014784  0EF9               	movlw	-7
 30581  014786  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30582  01478C  0EFA               	movlw	-6
 30583  01478E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30584  014794  0EFB               	movlw	-5
 30585  014796  0060  F033  FFE3   	movff	btemp+11,plusw1
 30586  01479C                     l8454:
 30587                           
 30588                           ;stkvar	_b @ sp[(-4)+-4]
 30589  01479C  0EFA               	movlw	-6
 30590  01479E  8EE3               	bsf	plusw1,7,c
 30591                           
 30592                           ;stkvar	_b @ sp[(-4)+-4]
 30593  0147A0  0EFB               	movlw	251
 30594  0147A2  24E1               	addwf	fsr1l,w,c
 30595  0147A4  6ED9               	movwf	fsr2l,c
 30596  0147A6  0EFF               	movlw	255
 30597  0147A8  20E2               	addwfc	fsr1h,w,c
 30598  0147AA  6EDA               	movwf	fsr2h,c
 30599  0147AC  0E00               	movlw	0
 30600  0147AE  6EDF               	movwf	indf2,c
 30601  0147B0  D018               	goto	l8460
 30602  0147B2                     l8458:
 30603  0147B2  0E00               	movlw	0
 30604  0147B4  6E09               	movwf	(btemp+8)^0,c
 30605  0147B6  0E00               	movlw	0
 30606  0147B8  6E0A               	movwf	(btemp+9)^0,c
 30607  0147BA  0E00               	movlw	0
 30608  0147BC  6E0B               	movwf	(btemp+10)^0,c
 30609  0147BE  0E00               	movlw	0
 30610  0147C0  6E0C               	movwf	(btemp+11)^0,c
 30611                           
 30612                           ;stkvar	_b @ sp[(-4)+-4]
 30613  0147C2  0EF8               	movlw	-8
 30614  0147C4  0060  F027  FFE3   	movff	btemp+8,plusw1
 30615  0147CA  0EF9               	movlw	-7
 30616  0147CC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30617  0147D2  0EFA               	movlw	-6
 30618  0147D4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30619  0147DA  0EFB               	movlw	-5
 30620  0147DC  0060  F033  FFE3   	movff	btemp+11,plusw1
 30621  0147E2                     l8460:
 30622                           
 30623                           ;stkvar	_a @ sp[(-4)+-8]
 30624  0147E2  0EF7               	movlw	247
 30625  0147E4  24E1               	addwf	fsr1l,w,c
 30626  0147E6  6ED9               	movwf	fsr2l,c
 30627  0147E8  0EFF               	movlw	255
 30628  0147EA  20E2               	addwfc	fsr1h,w,c
 30629  0147EC  6EDA               	movwf	fsr2h,c
 30630  0147EE  50DF               	movf	indf2,w,c
 30631  0147F0  6E0C               	movwf	(btemp+11)^0,c
 30632  0147F2  0E80               	movlw	128
 30633  0147F4  160C               	andwf	(btemp+11)^0,f,c
 30634                           
 30635                           ;stkvar	_aexp @ sp[(-4)+2]
 30636  0147F6  0EFE               	movlw	-2
 30637  0147F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 30638                           
 30639                           ;stkvar	_signs @ sp[(-4)+3]
 30640                           ;stkvar	_aexp @ sp[(-4)+2]
 30641  0147FE  50E1               	movf	fsr1l,w,c
 30642  014800  0FFE               	addlw	-2
 30643  014802  6ED9               	movwf	fsr2l,c
 30644  014804  50E2               	movf	fsr1h,w,c
 30645  014806  6EDA               	movwf	fsr2h,c
 30646  014808  0EFF               	movlw	255
 30647  01480A  22DA               	addwfc	fsr2h,f,c
 30648  01480C  0EFF               	movlw	-1
 30649  01480E  50E3               	movf	plusw1,w,c
 30650  014810  18DE               	xorwf	postinc2,w,c
 30651  014812  B4D8               	btfsc	status,2,c
 30652  014814  D002               	goto	l8466
 30653                           
 30654                           ;stkvar	_signs @ sp[(-4)+3]
 30655  014816  0EFF               	movlw	-1
 30656  014818  8CE3               	bsf	plusw1,6,c
 30657  01481A                     l8466:
 30658                           
 30659                           ;stkvar	_a @ sp[(-4)+-8]
 30660  01481A  0EF7               	movlw	247
 30661  01481C  24E1               	addwf	fsr1l,w,c
 30662  01481E  6ED9               	movwf	fsr2l,c
 30663  014820  0EFF               	movlw	255
 30664  014822  20E2               	addwfc	fsr1h,w,c
 30665  014824  6EDA               	movwf	fsr2h,c
 30666  014826  50DF               	movf	indf2,w,c
 30667  014828  6E0C               	movwf	(btemp+11)^0,c
 30668  01482A  90D8               	bcf	status,0,c
 30669  01482C  340C               	rlcf	(btemp+11)^0,w,c
 30670  01482E  6E0B               	movwf	(btemp+10)^0,c
 30671                           
 30672                           ;stkvar	_aexp @ sp[(-4)+2]
 30673  014830  0EFE               	movlw	-2
 30674  014832  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30675                           
 30676                           ;stkvar	_a @ sp[(-4)+-8]
 30677  014838  0EF6               	movlw	246
 30678  01483A  24E1               	addwf	fsr1l,w,c
 30679  01483C  6ED9               	movwf	fsr2l,c
 30680  01483E  0EFF               	movlw	255
 30681  014840  20E2               	addwfc	fsr1h,w,c
 30682  014842  6EDA               	movwf	fsr2h,c
 30683  014844  AEDF               	btfss	indf2,7,c
 30684  014846  D002               	goto	l8472
 30685                           
 30686                           ;stkvar	_aexp @ sp[(-4)+2]
 30687  014848  0EFE               	movlw	-2
 30688  01484A  80E3               	bsf	plusw1,0,c
 30689  01484C                     l8472:
 30690                           
 30691                           ;stkvar	_aexp @ sp[(-4)+2]
 30692  01484C  0EFE               	movlw	-2
 30693  01484E  50E3               	movf	plusw1,w,c
 30694  014850  B4D8               	btfsc	status,2,c
 30695  014852  D027               	goto	l8482
 30696                           
 30697                           ;stkvar	_aexp @ sp[(-4)+2]
 30698  014854  0EFE               	movlw	-2
 30699  014856  28E3               	incf	plusw1,w,c
 30700  014858  A4D8               	btfss	status,2,c
 30701  01485A  D018               	goto	l8478
 30702  01485C  0E00               	movlw	0
 30703  01485E  6E09               	movwf	(btemp+8)^0,c
 30704  014860  0E00               	movlw	0
 30705  014862  6E0A               	movwf	(btemp+9)^0,c
 30706  014864  0E00               	movlw	0
 30707  014866  6E0B               	movwf	(btemp+10)^0,c
 30708  014868  0E00               	movlw	0
 30709  01486A  6E0C               	movwf	(btemp+11)^0,c
 30710                           
 30711                           ;stkvar	_a @ sp[(-4)+-8]
 30712  01486C  0EF4               	movlw	-12
 30713  01486E  0060  F027  FFE3   	movff	btemp+8,plusw1
 30714  014874  0EF5               	movlw	-11
 30715  014876  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30716  01487C  0EF6               	movlw	-10
 30717  01487E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30718  014884  0EF7               	movlw	-9
 30719  014886  0060  F033  FFE3   	movff	btemp+11,plusw1
 30720  01488C                     l8478:
 30721                           
 30722                           ;stkvar	_a @ sp[(-4)+-8]
 30723  01488C  0EF6               	movlw	-10
 30724  01488E  8EE3               	bsf	plusw1,7,c
 30725                           
 30726                           ;stkvar	_a @ sp[(-4)+-8]
 30727  014890  0EF7               	movlw	247
 30728  014892  24E1               	addwf	fsr1l,w,c
 30729  014894  6ED9               	movwf	fsr2l,c
 30730  014896  0EFF               	movlw	255
 30731  014898  20E2               	addwfc	fsr1h,w,c
 30732  01489A  6EDA               	movwf	fsr2h,c
 30733  01489C  0E00               	movlw	0
 30734  01489E  6EDF               	movwf	indf2,c
 30735  0148A0  D018               	goto	l8484
 30736  0148A2                     l8482:
 30737  0148A2  0E00               	movlw	0
 30738  0148A4  6E09               	movwf	(btemp+8)^0,c
 30739  0148A6  0E00               	movlw	0
 30740  0148A8  6E0A               	movwf	(btemp+9)^0,c
 30741  0148AA  0E00               	movlw	0
 30742  0148AC  6E0B               	movwf	(btemp+10)^0,c
 30743  0148AE  0E00               	movlw	0
 30744  0148B0  6E0C               	movwf	(btemp+11)^0,c
 30745                           
 30746                           ;stkvar	_a @ sp[(-4)+-8]
 30747  0148B2  0EF4               	movlw	-12
 30748  0148B4  0060  F027  FFE3   	movff	btemp+8,plusw1
 30749  0148BA  0EF5               	movlw	-11
 30750  0148BC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30751  0148C2  0EF6               	movlw	-10
 30752  0148C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30753  0148CA  0EF7               	movlw	-9
 30754  0148CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 30755  0148D2                     l8484:
 30756                           
 30757                           ;stkvar	_bexp @ sp[(-4)+1]
 30758                           ;stkvar	_aexp @ sp[(-4)+2]
 30759  0148D2  50E1               	movf	fsr1l,w,c
 30760  0148D4  0FFE               	addlw	-2
 30761  0148D6  6ED9               	movwf	fsr2l,c
 30762  0148D8  50E2               	movf	fsr1h,w,c
 30763  0148DA  6EDA               	movwf	fsr2h,c
 30764  0148DC  0EFF               	movlw	255
 30765  0148DE  22DA               	addwfc	fsr2h,f,c
 30766  0148E0  0EFD               	movlw	-3
 30767  0148E2  50E3               	movf	plusw1,w,c
 30768  0148E4  5CDE               	subwf	postinc2,w,c
 30769  0148E6  B0D8               	btfsc	status,0,c
 30770  0148E8  D0A4               	goto	l8520
 30771                           
 30772                           ;stkvar	_signs @ sp[(-4)+3]
 30773  0148EA  0EFF               	movlw	-1
 30774  0148EC  ACE3               	btfss	plusw1,6,c
 30775  0148EE  D002               	goto	l8490
 30776                           
 30777                           ;stkvar	_signs @ sp[(-4)+3]
 30778  0148F0  0EFF               	movlw	-1
 30779  0148F2  7EE3               	btg	plusw1,7,c
 30780  0148F4                     l8490:
 30781                           
 30782                           ;stkvar	_bexp @ sp[(-4)+1]
 30783                           ;stkvar	_grs @ sp[(-4)+0]
 30784  0148F4  0EFD               	movlw	-3
 30785  0148F6  006F FF8C  F001    	movff	plusw1,btemp
 30786  0148FC  0EFC               	movlw	-4
 30787  0148FE  0060  F007  FFE3   	movff	btemp,plusw1
 30788                           
 30789                           ;stkvar	_aexp @ sp[(-4)+2]
 30790                           ;stkvar	_bexp @ sp[(-4)+1]
 30791  014904  0EFE               	movlw	-2
 30792  014906  006F FF8C  F001    	movff	plusw1,btemp
 30793  01490C  0EFD               	movlw	-3
 30794  01490E  0060  F007  FFE3   	movff	btemp,plusw1
 30795                           
 30796                           ;stkvar	_grs @ sp[(-4)+0]
 30797                           ;stkvar	_aexp @ sp[(-4)+2]
 30798  014914  0EFC               	movlw	-4
 30799  014916  006F FF8C  F001    	movff	plusw1,btemp
 30800  01491C  0EFE               	movlw	-2
 30801  01491E  0060  F007  FFE3   	movff	btemp,plusw1
 30802                           
 30803                           ;stkvar	_b @ sp[(-4)+-4]
 30804                           ;stkvar	_grs @ sp[(-4)+0]
 30805  014924  0EF8               	movlw	-8
 30806  014926  006F FF8C  F001    	movff	plusw1,btemp
 30807  01492C  0EFC               	movlw	-4
 30808  01492E  0060  F007  FFE3   	movff	btemp,plusw1
 30809                           
 30810                           ;stkvar	_a @ sp[(-4)+-8]
 30811                           ;stkvar	_b @ sp[(-4)+-4]
 30812  014934  0EF4               	movlw	-12
 30813  014936  006F FF8C  F001    	movff	plusw1,btemp
 30814  01493C  0EF8               	movlw	-8
 30815  01493E  0060  F007  FFE3   	movff	btemp,plusw1
 30816                           
 30817                           ;stkvar	_grs @ sp[(-4)+0]
 30818                           ;stkvar	_a @ sp[(-4)+-8]
 30819  014944  0EFC               	movlw	-4
 30820  014946  006F FF8C  F001    	movff	plusw1,btemp
 30821  01494C  0EF4               	movlw	-12
 30822  01494E  0060  F007  FFE3   	movff	btemp,plusw1
 30823                           
 30824                           ;stkvar	_b @ sp[(-4)+-4]
 30825  014954  0EF9               	movlw	249
 30826  014956  24E1               	addwf	fsr1l,w,c
 30827  014958  6ED9               	movwf	fsr2l,c
 30828  01495A  0EFF               	movlw	255
 30829  01495C  20E2               	addwfc	fsr1h,w,c
 30830  01495E  6EDA               	movwf	fsr2h,c
 30831  014960  50DF               	movf	indf2,w,c
 30832  014962  6E0C               	movwf	(btemp+11)^0,c
 30833                           
 30834                           ;stkvar	_grs @ sp[(-4)+0]
 30835  014964  0EFC               	movlw	-4
 30836  014966  0060  F033  FFE3   	movff	btemp+11,plusw1
 30837                           
 30838                           ;stkvar	_a @ sp[(-4)+-8]
 30839  01496C  0EF5               	movlw	245
 30840  01496E  24E1               	addwf	fsr1l,w,c
 30841  014970  6ED9               	movwf	fsr2l,c
 30842  014972  0EFF               	movlw	255
 30843  014974  20E2               	addwfc	fsr1h,w,c
 30844  014976  6EDA               	movwf	fsr2h,c
 30845                           
 30846                           ;stkvar	_b @ sp[(-4)+-4]
 30847  014978  0EF9               	movlw	249
 30848  01497A  24E1               	addwf	fsr1l,w,c
 30849  01497C  6EE9               	movwf	fsr0l,c
 30850  01497E  0EFF               	movlw	255
 30851  014980  20E2               	addwfc	fsr1h,w,c
 30852  014982  6EEA               	movwf	fsr0h,c
 30853  014984  006F FF7F FFEF     	movff	indf2,indf0
 30854                           
 30855                           ;stkvar	_grs @ sp[(-4)+0]
 30856                           ;stkvar	_a @ sp[(-4)+-8]
 30857  01498A  0EF5               	movlw	245
 30858  01498C  24E1               	addwf	fsr1l,w,c
 30859  01498E  6ED9               	movwf	fsr2l,c
 30860  014990  0EFF               	movlw	255
 30861  014992  20E2               	addwfc	fsr1h,w,c
 30862  014994  6EDA               	movwf	fsr2h,c
 30863  014996  0EFC               	movlw	-4
 30864  014998  006F FF8F FFDF     	movff	plusw1,indf2
 30865                           
 30866                           ;stkvar	_b @ sp[(-4)+-4]
 30867  01499E  0EFA               	movlw	250
 30868  0149A0  24E1               	addwf	fsr1l,w,c
 30869  0149A2  6ED9               	movwf	fsr2l,c
 30870  0149A4  0EFF               	movlw	255
 30871  0149A6  20E2               	addwfc	fsr1h,w,c
 30872  0149A8  6EDA               	movwf	fsr2h,c
 30873  0149AA  50DF               	movf	indf2,w,c
 30874  0149AC  6E0C               	movwf	(btemp+11)^0,c
 30875                           
 30876                           ;stkvar	_grs @ sp[(-4)+0]
 30877  0149AE  0EFC               	movlw	-4
 30878  0149B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 30879                           
 30880                           ;stkvar	_a @ sp[(-4)+-8]
 30881  0149B6  0EF6               	movlw	246
 30882  0149B8  24E1               	addwf	fsr1l,w,c
 30883  0149BA  6ED9               	movwf	fsr2l,c
 30884  0149BC  0EFF               	movlw	255
 30885  0149BE  20E2               	addwfc	fsr1h,w,c
 30886  0149C0  6EDA               	movwf	fsr2h,c
 30887                           
 30888                           ;stkvar	_b @ sp[(-4)+-4]
 30889  0149C2  0EFA               	movlw	250
 30890  0149C4  24E1               	addwf	fsr1l,w,c
 30891  0149C6  6EE9               	movwf	fsr0l,c
 30892  0149C8  0EFF               	movlw	255
 30893  0149CA  20E2               	addwfc	fsr1h,w,c
 30894  0149CC  6EEA               	movwf	fsr0h,c
 30895  0149CE  006F FF7F FFEF     	movff	indf2,indf0
 30896                           
 30897                           ;stkvar	_grs @ sp[(-4)+0]
 30898                           ;stkvar	_a @ sp[(-4)+-8]
 30899  0149D4  0EF6               	movlw	246
 30900  0149D6  24E1               	addwf	fsr1l,w,c
 30901  0149D8  6ED9               	movwf	fsr2l,c
 30902  0149DA  0EFF               	movlw	255
 30903  0149DC  20E2               	addwfc	fsr1h,w,c
 30904  0149DE  6EDA               	movwf	fsr2h,c
 30905  0149E0  0EFC               	movlw	-4
 30906  0149E2  006F FF8F FFDF     	movff	plusw1,indf2
 30907                           
 30908                           ;stkvar	_b @ sp[(-4)+-4]
 30909  0149E8  0EFB               	movlw	251
 30910  0149EA  24E1               	addwf	fsr1l,w,c
 30911  0149EC  6ED9               	movwf	fsr2l,c
 30912  0149EE  0EFF               	movlw	255
 30913  0149F0  20E2               	addwfc	fsr1h,w,c
 30914  0149F2  6EDA               	movwf	fsr2h,c
 30915  0149F4  50DF               	movf	indf2,w,c
 30916  0149F6  6E0C               	movwf	(btemp+11)^0,c
 30917                           
 30918                           ;stkvar	_grs @ sp[(-4)+0]
 30919  0149F8  0EFC               	movlw	-4
 30920  0149FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 30921                           
 30922                           ;stkvar	_a @ sp[(-4)+-8]
 30923  014A00  0EF7               	movlw	247
 30924  014A02  24E1               	addwf	fsr1l,w,c
 30925  014A04  6ED9               	movwf	fsr2l,c
 30926  014A06  0EFF               	movlw	255
 30927  014A08  20E2               	addwfc	fsr1h,w,c
 30928  014A0A  6EDA               	movwf	fsr2h,c
 30929                           
 30930                           ;stkvar	_b @ sp[(-4)+-4]
 30931  014A0C  0EFB               	movlw	251
 30932  014A0E  24E1               	addwf	fsr1l,w,c
 30933  014A10  6EE9               	movwf	fsr0l,c
 30934  014A12  0EFF               	movlw	255
 30935  014A14  20E2               	addwfc	fsr1h,w,c
 30936  014A16  6EEA               	movwf	fsr0h,c
 30937  014A18  006F FF7F FFEF     	movff	indf2,indf0
 30938                           
 30939                           ;stkvar	_grs @ sp[(-4)+0]
 30940                           ;stkvar	_a @ sp[(-4)+-8]
 30941  014A1E  0EF7               	movlw	247
 30942  014A20  24E1               	addwf	fsr1l,w,c
 30943  014A22  6ED9               	movwf	fsr2l,c
 30944  014A24  0EFF               	movlw	255
 30945  014A26  20E2               	addwfc	fsr1h,w,c
 30946  014A28  6EDA               	movwf	fsr2h,c
 30947  014A2A  0EFC               	movlw	-4
 30948  014A2C  006F FF8F FFDF     	movff	plusw1,indf2
 30949  014A32                     l8520:
 30950                           
 30951                           ;stkvar	_grs @ sp[(-4)+0]
 30952  014A32  0EFC               	movlw	-4
 30953  014A34  6AE3               	clrf	plusw1,c
 30954                           
 30955                           ;stkvar	_aexp @ sp[(-4)+2]
 30956  014A36  0EFE               	movlw	-2
 30957  014A38  50E3               	movf	plusw1,w,c
 30958  014A3A  6E0B               	movwf	(btemp+10)^0,c
 30959  014A3C  6A0C               	clrf	(btemp+11)^0,c
 30960                           
 30961                           ;stkvar	_bexp @ sp[(-4)+1]
 30962  014A3E  0EFD               	movlw	-3
 30963  014A40  50E3               	movf	plusw1,w,c
 30964  014A42  5E0B               	subwf	(btemp+10)^0,f,c
 30965  014A44  0E00               	movlw	0
 30966  014A46  5A0C               	subwfb	(btemp+11)^0,f,c
 30967  014A48  BE0C               	btfsc	(btemp+11)^0,7,c
 30968  014A4A  D062               	goto	l8544
 30969  014A4C  500C               	movf	(btemp+11)^0,w,c
 30970  014A4E  E104               	bnz	u6030
 30971  014A50  0E1A               	movlw	26
 30972  014A52  5C0B               	subwf	(btemp+10)^0,w,c
 30973  014A54  A0D8               	btfss	status,0,c
 30974  014A56  D05C               	goto	l8544
 30975  014A58                     u6030:
 30976                           
 30977                           ;stkvar	_b @ sp[(-4)+-4]
 30978  014A58  0EF8               	movlw	-8
 30979  014A5A  50E3               	movf	plusw1,w,c
 30980  014A5C  E10A               	bnz	u6041
 30981  014A5E  0EF9               	movlw	-7
 30982  014A60  50E3               	movf	plusw1,w,c
 30983  014A62  E107               	bnz	u6041
 30984  014A64  0EFA               	movlw	-6
 30985  014A66  50E3               	movf	plusw1,w,c
 30986  014A68  E104               	bnz	u6041
 30987  014A6A  0EFB               	movlw	-5
 30988  014A6C  50E3               	movf	plusw1,w,c
 30989  014A6E  B4D8               	btfsc	status,2,c
 30990  014A70  D003               	goto	u6040
 30991  014A72                     u6041:
 30992  014A72  6A0C               	clrf	(btemp+11)^0,c
 30993  014A74  2A0C               	incf	(btemp+11)^0,f,c
 30994  014A76  D001               	goto	u6058
 30995  014A78                     u6040:
 30996  014A78  6A0C               	clrf	(btemp+11)^0,c
 30997  014A7A                     u6058:
 30998                           
 30999                           ;stkvar	_grs @ sp[(-4)+0]
 31000  014A7A  0EFC               	movlw	-4
 31001  014A7C  0060  F033  FFE3   	movff	btemp+11,plusw1
 31002                           
 31003                           ;stkvar	_b @ sp[(-4)+-4]
 31004  014A82  0EF8               	movlw	-8
 31005  014A84  6AE3               	clrf	plusw1,c
 31006  014A86  0EF9               	movlw	-7
 31007  014A88  6AE3               	clrf	plusw1,c
 31008  014A8A  0EFA               	movlw	-6
 31009  014A8C  6AE3               	clrf	plusw1,c
 31010  014A8E  0EFB               	movlw	-5
 31011  014A90  6AE3               	clrf	plusw1,c
 31012                           
 31013                           ;stkvar	_aexp @ sp[(-4)+2]
 31014                           ;stkvar	_bexp @ sp[(-4)+1]
 31015  014A92  0EFE               	movlw	-2
 31016  014A94  006F FF8C  F001    	movff	plusw1,btemp
 31017  014A9A  0EFD               	movlw	-3
 31018  014A9C  0060  F007  FFE3   	movff	btemp,plusw1
 31019  014AA2  D042               	goto	u6090
 31020  014AA4                     l8530:
 31021                           
 31022                           ;stkvar	_grs @ sp[(-4)+0]
 31023  014AA4  0EFC               	movlw	-4
 31024  014AA6  A0E3               	btfss	plusw1,0,c
 31025  014AA8  D00D               	goto	l8534
 31026                           
 31027                           ;stkvar	_grs @ sp[(-4)+0]
 31028  014AAA  0EFC               	movlw	-4
 31029  014AAC  006F FF8C  F00C    	movff	plusw1,btemp+11
 31030  014AB2  90D8               	bcf	status,0,c
 31031  014AB4  320C               	rrcf	(btemp+11)^0,f,c
 31032  014AB6  0E01               	movlw	1
 31033  014AB8  120C               	iorwf	(btemp+11)^0,f,c
 31034                           
 31035                           ;stkvar	_grs @ sp[(-4)+0]
 31036  014ABA  0EFC               	movlw	-4
 31037  014ABC  0060  F033  FFE3   	movff	btemp+11,plusw1
 31038  014AC2  D009               	goto	l8536
 31039  014AC4                     l8534:
 31040                           
 31041                           ;stkvar	_grs @ sp[(-4)+0]
 31042  014AC4  50E1               	movf	fsr1l,w,c
 31043  014AC6  0FFC               	addlw	-4
 31044  014AC8  6ED9               	movwf	fsr2l,c
 31045  014ACA  50E2               	movf	fsr1h,w,c
 31046  014ACC  6EDA               	movwf	fsr2h,c
 31047  014ACE  0EFF               	movlw	255
 31048  014AD0  22DA               	addwfc	fsr2h,f,c
 31049  014AD2  90D8               	bcf	status,0,c
 31050  014AD4  32DF               	rrcf	indf2,f,c
 31051  014AD6                     l8536:
 31052                           
 31053                           ;stkvar	_b @ sp[(-4)+-4]
 31054  014AD6  0EF8               	movlw	-8
 31055  014AD8  A0E3               	btfss	plusw1,0,c
 31056  014ADA  D002               	goto	l8540
 31057                           
 31058                           ;stkvar	_grs @ sp[(-4)+0]
 31059  014ADC  0EFC               	movlw	-4
 31060  014ADE  8EE3               	bsf	plusw1,7,c
 31061  014AE0                     l8540:
 31062  014AE0  0E01               	movlw	1
 31063  014AE2  6E0C               	movwf	(btemp+11)^0,c
 31064                           
 31065                           ;stkvar	_b @ sp[(-4)+-4]
 31066  014AE4  50E1               	movf	fsr1l,w,c
 31067  014AE6  0FF8               	addlw	-8
 31068  014AE8  6ED9               	movwf	fsr2l,c
 31069  014AEA  50E2               	movf	fsr1h,w,c
 31070  014AEC  6EDA               	movwf	fsr2h,c
 31071  014AEE  0EFF               	movlw	255
 31072  014AF0  22DA               	addwfc	fsr2h,f,c
 31073  014AF2  280C               	incf	(btemp+11)^0,w,c
 31074  014AF4  52DE               	movf	postinc2,f,c
 31075  014AF6  D008               	goto	u6080
 31076  014AF8                     u6085:
 31077  014AF8  52DE               	movf	postinc2,f,c
 31078  014AFA  90D8               	bcf	status,0,c
 31079  014AFC  BEDC               	btfsc	preinc2,7,c
 31080  014AFE  80D8               	bsf	status,0,c
 31081  014B00  32DD               	rrcf	postdec2,f,c
 31082  014B02  32DD               	rrcf	postdec2,f,c
 31083  014B04  32DD               	rrcf	postdec2,f,c
 31084  014B06  32DE               	rrcf	postinc2,f,c
 31085  014B08                     u6080:
 31086  014B08  2EE8               	decfsz	wreg,f,c
 31087  014B0A  D7F6               	goto	u6085
 31088                           
 31089                           ;stkvar	_bexp @ sp[(-4)+1]
 31090  014B0C  0EFD               	movlw	-3
 31091  014B0E  2AE3               	incf	plusw1,f,c
 31092  014B10                     l8544:
 31093                           
 31094                           ;stkvar	_aexp @ sp[(-4)+2]
 31095                           ;stkvar	_bexp @ sp[(-4)+1]
 31096  014B10  50E1               	movf	fsr1l,w,c
 31097  014B12  0FFD               	addlw	-3
 31098  014B14  6ED9               	movwf	fsr2l,c
 31099  014B16  50E2               	movf	fsr1h,w,c
 31100  014B18  6EDA               	movwf	fsr2h,c
 31101  014B1A  0EFF               	movlw	255
 31102  014B1C  22DA               	addwfc	fsr2h,f,c
 31103  014B1E  0EFE               	movlw	-2
 31104  014B20  50E3               	movf	plusw1,w,c
 31105  014B22  5CDE               	subwf	postinc2,w,c
 31106  014B24  A0D8               	btfss	status,0,c
 31107  014B26  D7BE               	goto	l8530
 31108  014B28                     u6090:
 31109                           
 31110                           ;stkvar	_signs @ sp[(-4)+3]
 31111  014B28  0EFF               	movlw	-1
 31112  014B2A  BCE3               	btfsc	plusw1,6,c
 31113  014B2C  D066               	goto	l8572
 31114                           
 31115                           ;stkvar	_bexp @ sp[(-4)+1]
 31116  014B2E  0EFD               	movlw	-3
 31117  014B30  50E3               	movf	plusw1,w,c
 31118  014B32  B4D8               	btfsc	status,2,c
 31119  014B34  D0F2               	goto	u6190
 31120                           
 31121                           ;stkvar	_a @ sp[(-4)+-8]
 31122                           ;stkvar	_b @ sp[(-4)+-4]
 31123  014B36  0EF8               	movlw	-8
 31124  014B38  50E3               	movf	plusw1,w,c
 31125  014B3A  6E01               	movwf	btemp^0,c
 31126  014B3C  0EF4               	movlw	-12
 31127  014B3E  50E3               	movf	plusw1,w,c
 31128  014B40  2601               	addwf	btemp^0,f,c
 31129  014B42  0EF8               	movlw	-8
 31130  014B44  0060  F007  FFE3   	movff	btemp,plusw1
 31131  014B4A  0EF9               	movlw	-7
 31132  014B4C  50E3               	movf	plusw1,w,c
 31133  014B4E  6E01               	movwf	btemp^0,c
 31134  014B50  0EF5               	movlw	-11
 31135  014B52  50E3               	movf	plusw1,w,c
 31136  014B54  2201               	addwfc	btemp^0,f,c
 31137  014B56  0EF9               	movlw	-7
 31138  014B58  0060  F007  FFE3   	movff	btemp,plusw1
 31139  014B5E  0EFA               	movlw	-6
 31140  014B60  50E3               	movf	plusw1,w,c
 31141  014B62  6E01               	movwf	btemp^0,c
 31142  014B64  0EF6               	movlw	-10
 31143  014B66  50E3               	movf	plusw1,w,c
 31144  014B68  2201               	addwfc	btemp^0,f,c
 31145  014B6A  0EFA               	movlw	-6
 31146  014B6C  0060  F007  FFE3   	movff	btemp,plusw1
 31147  014B72  0EFB               	movlw	-5
 31148  014B74  50E3               	movf	plusw1,w,c
 31149  014B76  6E01               	movwf	btemp^0,c
 31150  014B78  0EF7               	movlw	-9
 31151  014B7A  50E3               	movf	plusw1,w,c
 31152  014B7C  2201               	addwfc	btemp^0,f,c
 31153  014B7E  0EFB               	movlw	-5
 31154  014B80  0060  F007  FFE3   	movff	btemp,plusw1
 31155                           
 31156                           ;stkvar	_b @ sp[(-4)+-4]
 31157  014B86  0EFB               	movlw	-5
 31158  014B88  A0E3               	btfss	plusw1,0,c
 31159  014B8A  D101               	goto	u6230
 31160                           
 31161                           ;stkvar	_grs @ sp[(-4)+0]
 31162  014B8C  0EFC               	movlw	-4
 31163  014B8E  A0E3               	btfss	plusw1,0,c
 31164  014B90  D00D               	goto	l8562
 31165                           
 31166                           ;stkvar	_grs @ sp[(-4)+0]
 31167  014B92  0EFC               	movlw	-4
 31168  014B94  006F FF8C  F00C    	movff	plusw1,btemp+11
 31169  014B9A  90D8               	bcf	status,0,c
 31170  014B9C  320C               	rrcf	(btemp+11)^0,f,c
 31171  014B9E  0E01               	movlw	1
 31172  014BA0  120C               	iorwf	(btemp+11)^0,f,c
 31173                           
 31174                           ;stkvar	_grs @ sp[(-4)+0]
 31175  014BA2  0EFC               	movlw	-4
 31176  014BA4  0060  F033  FFE3   	movff	btemp+11,plusw1
 31177  014BAA  D009               	goto	l8564
 31178  014BAC                     l8562:
 31179                           
 31180                           ;stkvar	_grs @ sp[(-4)+0]
 31181  014BAC  50E1               	movf	fsr1l,w,c
 31182  014BAE  0FFC               	addlw	-4
 31183  014BB0  6ED9               	movwf	fsr2l,c
 31184  014BB2  50E2               	movf	fsr1h,w,c
 31185  014BB4  6EDA               	movwf	fsr2h,c
 31186  014BB6  0EFF               	movlw	255
 31187  014BB8  22DA               	addwfc	fsr2h,f,c
 31188  014BBA  90D8               	bcf	status,0,c
 31189  014BBC  32DF               	rrcf	indf2,f,c
 31190  014BBE                     l8564:
 31191                           
 31192                           ;stkvar	_b @ sp[(-4)+-4]
 31193  014BBE  0EF8               	movlw	-8
 31194  014BC0  A0E3               	btfss	plusw1,0,c
 31195  014BC2  D002               	goto	l8568
 31196                           
 31197                           ;stkvar	_grs @ sp[(-4)+0]
 31198  014BC4  0EFC               	movlw	-4
 31199  014BC6  8EE3               	bsf	plusw1,7,c
 31200  014BC8                     l8568:
 31201  014BC8  0E01               	movlw	1
 31202  014BCA  6E0C               	movwf	(btemp+11)^0,c
 31203                           
 31204                           ;stkvar	_b @ sp[(-4)+-4]
 31205  014BCC  50E1               	movf	fsr1l,w,c
 31206  014BCE  0FF8               	addlw	-8
 31207  014BD0  6ED9               	movwf	fsr2l,c
 31208  014BD2  50E2               	movf	fsr1h,w,c
 31209  014BD4  6EDA               	movwf	fsr2h,c
 31210  014BD6  0EFF               	movlw	255
 31211  014BD8  22DA               	addwfc	fsr2h,f,c
 31212  014BDA  280C               	incf	(btemp+11)^0,w,c
 31213  014BDC  52DE               	movf	postinc2,f,c
 31214  014BDE  D008               	goto	u6150
 31215  014BE0                     u6155:
 31216  014BE0  52DE               	movf	postinc2,f,c
 31217  014BE2  90D8               	bcf	status,0,c
 31218  014BE4  BEDC               	btfsc	preinc2,7,c
 31219  014BE6  80D8               	bsf	status,0,c
 31220  014BE8  32DD               	rrcf	postdec2,f,c
 31221  014BEA  32DD               	rrcf	postdec2,f,c
 31222  014BEC  32DD               	rrcf	postdec2,f,c
 31223  014BEE  32DE               	rrcf	postinc2,f,c
 31224  014BF0                     u6150:
 31225  014BF0  2EE8               	decfsz	wreg,f,c
 31226  014BF2  D7F6               	goto	u6155
 31227                           
 31228                           ;stkvar	_bexp @ sp[(-4)+1]
 31229  014BF4  0EFD               	movlw	-3
 31230  014BF6  2AE3               	incf	plusw1,f,c
 31231  014BF8  D0CA               	goto	u6230
 31232  014BFA                     l8572:
 31233                           
 31234                           ;stkvar	_a @ sp[(-4)+-8]
 31235                           ;stkvar	_b @ sp[(-4)+-4]
 31236  014BFA  50E1               	movf	fsr1l,w,c
 31237  014BFC  0FF8               	addlw	-8
 31238  014BFE  6ED9               	movwf	fsr2l,c
 31239  014C00  50E2               	movf	fsr1h,w,c
 31240  014C02  6EDA               	movwf	fsr2h,c
 31241  014C04  0EFF               	movlw	255
 31242  014C06  22DA               	addwfc	fsr2h,f,c
 31243  014C08  0EF4               	movlw	-12
 31244  014C0A  50E3               	movf	plusw1,w,c
 31245  014C0C  5CDE               	subwf	postinc2,w,c
 31246  014C0E  0EF5               	movlw	-11
 31247  014C10  50E3               	movf	plusw1,w,c
 31248  014C12  58DE               	subwfb	postinc2,w,c
 31249  014C14  0EF6               	movlw	-10
 31250  014C16  50E3               	movf	plusw1,w,c
 31251  014C18  58DE               	subwfb	postinc2,w,c
 31252  014C1A  50DE               	movf	postinc2,w,c
 31253  014C1C  0A80               	xorlw	128
 31254  014C1E  6E01               	movwf	btemp^0,c
 31255  014C20  0EF7               	movlw	-9
 31256  014C22  50E3               	movf	plusw1,w,c
 31257  014C24  0A80               	xorlw	128
 31258  014C26  5801               	subwfb	btemp^0,w,c
 31259  014C28  B0D8               	btfsc	status,0,c
 31260  014C2A  D053               	goto	l8584
 31261                           
 31262                           ;stkvar	_b @ sp[(-4)+-4]
 31263                           ;stkvar	_a @ sp[(-4)+-8]
 31264  014C2C  0EF4               	movlw	-12
 31265  014C2E  006F FF8C  F009    	movff	plusw1,btemp+8
 31266  014C34  0EF5               	movlw	-11
 31267  014C36  006F FF8C  F00A    	movff	plusw1,btemp+9
 31268  014C3C  0EF6               	movlw	-10
 31269  014C3E  006F FF8C  F00B    	movff	plusw1,btemp+10
 31270  014C44  0EF7               	movlw	-9
 31271  014C46  006F FF8C  F00C    	movff	plusw1,btemp+11
 31272  014C4C  0EF8               	movlw	-8
 31273  014C4E  50E3               	movf	plusw1,w,c
 31274  014C50  5E09               	subwf	(btemp+8)^0,f,c
 31275  014C52  0EF9               	movlw	-7
 31276  014C54  50E3               	movf	plusw1,w,c
 31277  014C56  5A0A               	subwfb	(btemp+9)^0,f,c
 31278  014C58  0EFA               	movlw	-6
 31279  014C5A  50E3               	movf	plusw1,w,c
 31280  014C5C  5A0B               	subwfb	(btemp+10)^0,f,c
 31281  014C5E  0EFB               	movlw	-5
 31282  014C60  50E3               	movf	plusw1,w,c
 31283  014C62  5A0C               	subwfb	(btemp+11)^0,f,c
 31284  014C64  0EFF               	movlw	255
 31285  014C66  2409               	addwf	(btemp+8)^0,w,c
 31286  014C68  6E05               	movwf	(btemp+4)^0,c
 31287  014C6A  0EFF               	movlw	255
 31288  014C6C  200A               	addwfc	(btemp+9)^0,w,c
 31289  014C6E  6E06               	movwf	(btemp+5)^0,c
 31290  014C70  0EFF               	movlw	255
 31291  014C72  200B               	addwfc	(btemp+10)^0,w,c
 31292  014C74  6E07               	movwf	(btemp+6)^0,c
 31293  014C76  0EFF               	movlw	255
 31294  014C78  200C               	addwfc	(btemp+11)^0,w,c
 31295  014C7A  6E08               	movwf	(btemp+7)^0,c
 31296                           
 31297                           ;stkvar	_b @ sp[(-4)+-4]
 31298  014C7C  0EF8               	movlw	-8
 31299  014C7E  0060  F017  FFE3   	movff	btemp+4,plusw1
 31300  014C84  0EF9               	movlw	-7
 31301  014C86  0060  F01B  FFE3   	movff	btemp+5,plusw1
 31302  014C8C  0EFA               	movlw	-6
 31303  014C8E  0060  F01F  FFE3   	movff	btemp+6,plusw1
 31304  014C94  0EFB               	movlw	-5
 31305  014C96  0060  F023  FFE3   	movff	btemp+7,plusw1
 31306                           
 31307                           ;stkvar	_signs @ sp[(-4)+3]
 31308  014C9C  0EFF               	movlw	-1
 31309  014C9E  7EE3               	btg	plusw1,7,c
 31310                           
 31311                           ;stkvar	_grs @ sp[(-4)+0]
 31312  014CA0  0EFC               	movlw	-4
 31313  014CA2  50E3               	movf	plusw1,w,c
 31314  014CA4  0800               	sublw	0
 31315  014CA6  6E0C               	movwf	(btemp+11)^0,c
 31316                           
 31317                           ;stkvar	_grs @ sp[(-4)+0]
 31318  014CA8  0EFC               	movlw	-4
 31319  014CAA  0060  F033  FFE3   	movff	btemp+11,plusw1
 31320                           
 31321                           ;stkvar	_grs @ sp[(-4)+0]
 31322  014CB0  0EFC               	movlw	-4
 31323  014CB2  50E3               	movf	plusw1,w,c
 31324  014CB4  A4D8               	btfss	status,2,c
 31325  014CB6  D020               	goto	l8586
 31326                           
 31327                           ;stkvar	_b @ sp[(-4)+-4]
 31328  014CB8  50E1               	movf	fsr1l,w,c
 31329  014CBA  0FF8               	addlw	-8
 31330  014CBC  6ED9               	movwf	fsr2l,c
 31331  014CBE  50E2               	movf	fsr1h,w,c
 31332  014CC0  6EDA               	movwf	fsr2h,c
 31333  014CC2  0EFF               	movlw	255
 31334  014CC4  22DA               	addwfc	fsr2h,f,c
 31335  014CC6  2ADE               	incf	postinc2,f,c
 31336  014CC8  0E00               	movlw	0
 31337  014CCA  22DE               	addwfc	postinc2,f,c
 31338  014CCC  22DE               	addwfc	postinc2,f,c
 31339  014CCE  22DE               	addwfc	postinc2,f,c
 31340  014CD0  D013               	goto	l8586
 31341  014CD2                     l8584:
 31342                           
 31343                           ;stkvar	_a @ sp[(-4)+-8]
 31344                           ;stkvar	_b @ sp[(-4)+-4]
 31345  014CD2  50E1               	movf	fsr1l,w,c
 31346  014CD4  0FF8               	addlw	-8
 31347  014CD6  6ED9               	movwf	fsr2l,c
 31348  014CD8  50E2               	movf	fsr1h,w,c
 31349  014CDA  6EDA               	movwf	fsr2h,c
 31350  014CDC  0EFF               	movlw	255
 31351  014CDE  22DA               	addwfc	fsr2h,f,c
 31352  014CE0  0EF4               	movlw	-12
 31353  014CE2  50E3               	movf	plusw1,w,c
 31354  014CE4  5EDE               	subwf	postinc2,f,c
 31355  014CE6  0EF5               	movlw	-11
 31356  014CE8  50E3               	movf	plusw1,w,c
 31357  014CEA  5ADE               	subwfb	postinc2,f,c
 31358  014CEC  0EF6               	movlw	-10
 31359  014CEE  50E3               	movf	plusw1,w,c
 31360  014CF0  5ADE               	subwfb	postinc2,f,c
 31361  014CF2  0EF7               	movlw	-9
 31362  014CF4  50E3               	movf	plusw1,w,c
 31363  014CF6  5ADE               	subwfb	postinc2,f,c
 31364  014CF8                     l8586:
 31365                           
 31366                           ;stkvar	_b @ sp[(-4)+-4]
 31367  014CF8  0EF8               	movlw	-8
 31368  014CFA  50E3               	movf	plusw1,w,c
 31369  014CFC  E145               	bnz	l8608
 31370  014CFE  0EF9               	movlw	-7
 31371  014D00  50E3               	movf	plusw1,w,c
 31372  014D02  E142               	bnz	l8608
 31373  014D04  0EFA               	movlw	-6
 31374  014D06  50E3               	movf	plusw1,w,c
 31375  014D08  E13F               	bnz	l8608
 31376  014D0A  0EFB               	movlw	-5
 31377  014D0C  50E3               	movf	plusw1,w,c
 31378  014D0E  A4D8               	btfss	status,2,c
 31379  014D10  D03B               	goto	l8608
 31380                           
 31381                           ;stkvar	_grs @ sp[(-4)+0]
 31382  014D12  0EFC               	movlw	-4
 31383  014D14  50E3               	movf	plusw1,w,c
 31384  014D16  A4D8               	btfss	status,2,c
 31385  014D18  D037               	goto	l8608
 31386  014D1A                     u6190:
 31387  014D1A  0E00               	movlw	0
 31388  014D1C  6E01               	movwf	btemp^0,c
 31389  014D1E  0E00               	movlw	0
 31390  014D20  6E02               	movwf	(btemp+1)^0,c
 31391  014D22  0E00               	movlw	0
 31392  014D24  6E03               	movwf	(btemp+2)^0,c
 31393  014D26  0E00               	movlw	0
 31394  014D28  6E04               	movwf	(btemp+3)^0,c
 31395  014D2A  D0C6               	goto	l3196
 31396  014D2C                     l8594:
 31397                           
 31398                           ;stkvar	_b @ sp[(-4)+-4]
 31399  014D2C  90D8               	bcf	status,0,c
 31400  014D2E  0EF8               	movlw	-8
 31401  014D30  36E3               	rlcf	plusw1,f,c
 31402  014D32  0EF9               	movlw	-7
 31403  014D34  36E3               	rlcf	plusw1,f,c
 31404  014D36  0EFA               	movlw	-6
 31405  014D38  36E3               	rlcf	plusw1,f,c
 31406  014D3A  0EFB               	movlw	-5
 31407  014D3C  36E3               	rlcf	plusw1,f,c
 31408                           
 31409                           ;stkvar	_grs @ sp[(-4)+0]
 31410  014D3E  0EFC               	movlw	-4
 31411  014D40  AEE3               	btfss	plusw1,7,c
 31412  014D42  D002               	goto	l3208
 31413                           
 31414                           ;stkvar	_b @ sp[(-4)+-4]
 31415  014D44  0EF8               	movlw	-8
 31416  014D46  80E3               	bsf	plusw1,0,c
 31417  014D48                     l3208:
 31418                           
 31419                           ;stkvar	_grs @ sp[(-4)+0]
 31420  014D48  0EFC               	movlw	-4
 31421  014D4A  A0E3               	btfss	plusw1,0,c
 31422  014D4C  D00E               	goto	l8602
 31423                           
 31424                           ;stkvar	_grs @ sp[(-4)+0]
 31425  014D4E  0EFC               	movlw	-4
 31426  014D50  006F FF8C  F00C    	movff	plusw1,btemp+11
 31427  014D56  90D8               	bcf	status,0,c
 31428  014D58  340C               	rlcf	(btemp+11)^0,w,c
 31429  014D5A  6E0B               	movwf	(btemp+10)^0,c
 31430  014D5C  0E01               	movlw	1
 31431  014D5E  120B               	iorwf	(btemp+10)^0,f,c
 31432                           
 31433                           ;stkvar	_grs @ sp[(-4)+0]
 31434  014D60  0EFC               	movlw	-4
 31435  014D62  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31436  014D68  D009               	goto	l8604
 31437  014D6A                     l8602:
 31438                           
 31439                           ;stkvar	_grs @ sp[(-4)+0]
 31440  014D6A  50E1               	movf	fsr1l,w,c
 31441  014D6C  0FFC               	addlw	-4
 31442  014D6E  6ED9               	movwf	fsr2l,c
 31443  014D70  50E2               	movf	fsr1h,w,c
 31444  014D72  6EDA               	movwf	fsr2h,c
 31445  014D74  0EFF               	movlw	255
 31446  014D76  22DA               	addwfc	fsr2h,f,c
 31447  014D78  90D8               	bcf	status,0,c
 31448  014D7A  36DF               	rlcf	indf2,f,c
 31449  014D7C                     l8604:
 31450                           
 31451                           ;stkvar	_bexp @ sp[(-4)+1]
 31452  014D7C  0EFD               	movlw	-3
 31453  014D7E  50E3               	movf	plusw1,w,c
 31454  014D80  B4D8               	btfsc	status,2,c
 31455  014D82  D002               	goto	l8608
 31456                           
 31457                           ;stkvar	_bexp @ sp[(-4)+1]
 31458  014D84  0EFD               	movlw	-3
 31459  014D86  06E3               	decf	plusw1,f,c
 31460  014D88                     l8608:
 31461                           
 31462                           ;stkvar	_b @ sp[(-4)+-4]
 31463  014D88  0EFA               	movlw	-6
 31464  014D8A  AEE3               	btfss	plusw1,7,c
 31465  014D8C  D7CF               	goto	l8594
 31466  014D8E                     u6230:
 31467                           
 31468                           ;stkvar	_aexp @ sp[(-4)+2]
 31469  014D8E  0EFE               	movlw	-2
 31470  014D90  6AE3               	clrf	plusw1,c
 31471                           
 31472                           ;stkvar	_grs @ sp[(-4)+0]
 31473  014D92  0EFC               	movlw	-4
 31474  014D94  AEE3               	btfss	plusw1,7,c
 31475  014D96  D00F               	goto	l8622
 31476                           
 31477                           ;stkvar	_grs @ sp[(-4)+0]
 31478  014D98  0EFC               	movlw	-4
 31479  014D9A  006F FF8C  F00C    	movff	plusw1,btemp+11
 31480  014DA0  0E7F               	movlw	127
 31481  014DA2  160C               	andwf	(btemp+11)^0,f,c
 31482  014DA4  B4D8               	btfsc	status,2,c
 31483  014DA6  D004               	goto	l8618
 31484  014DA8                     u6250:
 31485                           
 31486                           ;stkvar	_aexp @ sp[(-4)+2]
 31487  014DA8  0EFE               	movlw	-2
 31488  014DAA  6AE3               	clrf	plusw1,c
 31489  014DAC  2AE3               	incf	plusw1,f,c
 31490  014DAE  D003               	goto	l8622
 31491  014DB0                     l8618:
 31492                           
 31493                           ;stkvar	_b @ sp[(-4)+-4]
 31494  014DB0  0EF8               	movlw	-8
 31495  014DB2  B0E3               	btfsc	plusw1,0,c
 31496  014DB4  D7F9               	goto	u6250
 31497  014DB6                     l8622:
 31498                           
 31499                           ;stkvar	_aexp @ sp[(-4)+2]
 31500  014DB6  0EFE               	movlw	-2
 31501  014DB8  50E3               	movf	plusw1,w,c
 31502  014DBA  B4D8               	btfsc	status,2,c
 31503  014DBC  D02B               	goto	l8634
 31504                           
 31505                           ;stkvar	_b @ sp[(-4)+-4]
 31506  014DBE  50E1               	movf	fsr1l,w,c
 31507  014DC0  0FF8               	addlw	-8
 31508  014DC2  6ED9               	movwf	fsr2l,c
 31509  014DC4  50E2               	movf	fsr1h,w,c
 31510  014DC6  6EDA               	movwf	fsr2h,c
 31511  014DC8  0EFF               	movlw	255
 31512  014DCA  22DA               	addwfc	fsr2h,f,c
 31513  014DCC  2ADE               	incf	postinc2,f,c
 31514  014DCE  0E00               	movlw	0
 31515  014DD0  22DE               	addwfc	postinc2,f,c
 31516  014DD2  22DE               	addwfc	postinc2,f,c
 31517  014DD4  22DE               	addwfc	postinc2,f,c
 31518                           
 31519                           ;stkvar	_b @ sp[(-4)+-4]
 31520  014DD6  0EFB               	movlw	-5
 31521  014DD8  A0E3               	btfss	plusw1,0,c
 31522  014DDA  D01C               	goto	l8634
 31523  014DDC  0E01               	movlw	1
 31524  014DDE  6E0C               	movwf	(btemp+11)^0,c
 31525                           
 31526                           ;stkvar	_b @ sp[(-4)+-4]
 31527  014DE0  50E1               	movf	fsr1l,w,c
 31528  014DE2  0FF8               	addlw	-8
 31529  014DE4  6ED9               	movwf	fsr2l,c
 31530  014DE6  50E2               	movf	fsr1h,w,c
 31531  014DE8  6EDA               	movwf	fsr2h,c
 31532  014DEA  0EFF               	movlw	255
 31533  014DEC  22DA               	addwfc	fsr2h,f,c
 31534  014DEE  280C               	incf	(btemp+11)^0,w,c
 31535  014DF0  52DE               	movf	postinc2,f,c
 31536  014DF2  D008               	goto	u6290
 31537  014DF4                     u6295:
 31538  014DF4  52DE               	movf	postinc2,f,c
 31539  014DF6  90D8               	bcf	status,0,c
 31540  014DF8  BEDC               	btfsc	preinc2,7,c
 31541  014DFA  80D8               	bsf	status,0,c
 31542  014DFC  32DD               	rrcf	postdec2,f,c
 31543  014DFE  32DD               	rrcf	postdec2,f,c
 31544  014E00  32DD               	rrcf	postdec2,f,c
 31545  014E02  32DE               	rrcf	postinc2,f,c
 31546  014E04                     u6290:
 31547  014E04  2EE8               	decfsz	wreg,f,c
 31548  014E06  D7F6               	goto	u6295
 31549                           
 31550                           ;stkvar	_bexp @ sp[(-4)+1]
 31551  014E08  0EFD               	movlw	-3
 31552  014E0A  28E3               	incf	plusw1,w,c
 31553  014E0C  B4D8               	btfsc	status,2,c
 31554  014E0E  D002               	goto	l8634
 31555                           
 31556                           ;stkvar	_bexp @ sp[(-4)+1]
 31557  014E10  0EFD               	movlw	-3
 31558  014E12  2AE3               	incf	plusw1,f,c
 31559  014E14                     l8634:
 31560                           
 31561                           ;stkvar	_bexp @ sp[(-4)+1]
 31562  014E14  0EFD               	movlw	-3
 31563  014E16  28E3               	incf	plusw1,w,c
 31564  014E18  B4D8               	btfsc	status,2,c
 31565  014E1A  D004               	goto	u6320
 31566                           
 31567                           ;stkvar	_bexp @ sp[(-4)+1]
 31568  014E1C  0EFD               	movlw	-3
 31569  014E1E  50E3               	movf	plusw1,w,c
 31570  014E20  A4D8               	btfss	status,2,c
 31571  014E22  D00E               	goto	l8644
 31572  014E24                     u6320:
 31573                           
 31574                           ;stkvar	_b @ sp[(-4)+-4]
 31575  014E24  0EF8               	movlw	-8
 31576  014E26  6AE3               	clrf	plusw1,c
 31577  014E28  0EF9               	movlw	-7
 31578  014E2A  6AE3               	clrf	plusw1,c
 31579  014E2C  0EFA               	movlw	-6
 31580  014E2E  6AE3               	clrf	plusw1,c
 31581  014E30  0EFB               	movlw	-5
 31582  014E32  6AE3               	clrf	plusw1,c
 31583                           
 31584                           ;stkvar	_bexp @ sp[(-4)+1]
 31585  014E34  0EFD               	movlw	-3
 31586  014E36  50E3               	movf	plusw1,w,c
 31587  014E38  A4D8               	btfss	status,2,c
 31588  014E3A  D002               	goto	l8644
 31589                           
 31590                           ;stkvar	_signs @ sp[(-4)+3]
 31591  014E3C  0EFF               	movlw	-1
 31592  014E3E  6AE3               	clrf	plusw1,c
 31593  014E40                     l8644:
 31594                           
 31595                           ;stkvar	_bexp @ sp[(-4)+1]
 31596  014E40  0EFD               	movlw	-3
 31597  014E42  A0E3               	btfss	plusw1,0,c
 31598  014E44  D009               	goto	l8648
 31599                           
 31600                           ;stkvar	_b @ sp[(-4)+-4]
 31601  014E46  0EFA               	movlw	250
 31602  014E48  24E1               	addwf	fsr1l,w,c
 31603  014E4A  6ED9               	movwf	fsr2l,c
 31604  014E4C  0EFF               	movlw	255
 31605  014E4E  20E2               	addwfc	fsr1h,w,c
 31606  014E50  6EDA               	movwf	fsr2h,c
 31607  014E52  0E00               	movlw	0
 31608  014E54  8EDB               	bsf	plusw2,7,c
 31609  014E56  D008               	goto	l8650
 31610  014E58                     l8648:
 31611                           
 31612                           ;stkvar	_b @ sp[(-4)+-4]
 31613  014E58  0EFA               	movlw	250
 31614  014E5A  24E1               	addwf	fsr1l,w,c
 31615  014E5C  6ED9               	movwf	fsr2l,c
 31616  014E5E  0EFF               	movlw	255
 31617  014E60  20E2               	addwfc	fsr1h,w,c
 31618  014E62  6EDA               	movwf	fsr2h,c
 31619  014E64  0E7F               	movlw	127
 31620  014E66  16DF               	andwf	indf2,f,c
 31621  014E68                     l8650:
 31622                           
 31623                           ;stkvar	_b @ sp[(-4)+-4]
 31624  014E68  0EFB               	movlw	251
 31625  014E6A  24E1               	addwf	fsr1l,w,c
 31626  014E6C  6ED9               	movwf	fsr2l,c
 31627  014E6E  0EFF               	movlw	255
 31628  014E70  20E2               	addwfc	fsr1h,w,c
 31629  014E72  6EDA               	movwf	fsr2h,c
 31630                           
 31631                           ;stkvar	_bexp @ sp[(-4)+1]
 31632  014E74  0EFD               	movlw	-3
 31633  014E76  006F FF8C  F00C    	movff	plusw1,btemp+11
 31634  014E7C  90D8               	bcf	status,0,c
 31635  014E7E  300C               	rrcf	(btemp+11)^0,w,c
 31636  014E80  6EDF               	movwf	indf2,c
 31637                           
 31638                           ;stkvar	_signs @ sp[(-4)+3]
 31639  014E82  0EFF               	movlw	-1
 31640  014E84  AEE3               	btfss	plusw1,7,c
 31641  014E86  D008               	goto	l8656
 31642                           
 31643                           ;stkvar	_b @ sp[(-4)+-4]
 31644  014E88  0EFB               	movlw	251
 31645  014E8A  24E1               	addwf	fsr1l,w,c
 31646  014E8C  6ED9               	movwf	fsr2l,c
 31647  014E8E  0EFF               	movlw	255
 31648  014E90  20E2               	addwfc	fsr1h,w,c
 31649  014E92  6EDA               	movwf	fsr2h,c
 31650  014E94  0E00               	movlw	0
 31651  014E96  8EDB               	bsf	plusw2,7,c
 31652  014E98                     l8656:
 31653                           
 31654                           ;stkvar	_b @ sp[(-4)+-4]
 31655  014E98  0EF8               	movlw	-8
 31656  014E9A  006F FF8C  F001    	movff	plusw1,btemp
 31657  014EA0  0EF9               	movlw	-7
 31658  014EA2  006F FF8C  F002    	movff	plusw1,btemp+1
 31659  014EA8  0EFA               	movlw	-6
 31660  014EAA  006F FF8C  F003    	movff	plusw1,btemp+2
 31661  014EB0  0EFB               	movlw	-5
 31662  014EB2  006F FF8C  F004    	movff	plusw1,btemp+3
 31663  014EB8                     l3196:
 31664                           
 31665                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 31666  014EB8  0EF4               	movlw	244
 31667  014EBA  26E1               	addwf	fsr1l,f,c
 31668  014EBC  0EFF               	movlw	255
 31669  014EBE  22E2               	addwfc	fsr1h,f,c
 31670  014EC0  0012               	return		;funcret
 31671  014EC2                     __end_of___fladd:
 31672                           	opt callstack 0
 31673                           
 31674 ;; *************** function ___flmul *****************
 31675 ;; Defined at:
 31676 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 31677 ;; Parameters:    Size  Location     Type
 31678 ;;  b               4  [STACK] unsigned char 
 31679 ;;  a               4  [STACK] unsigned char 
 31680 ;; Auto vars:     Size  Location     Type
 31681 ;;  prod            4  [STACK] struct .
 31682 ;;  grs             4  [STACK] unsigned long 
 31683 ;;  temp            2  [STACK] struct .
 31684 ;;  bexp            1  [STACK] unsigned char 
 31685 ;;  aexp            1  [STACK] unsigned char 
 31686 ;;  sign            1  [STACK] unsigned char 
 31687 ;; Return value:  Size  Location     Type
 31688 ;;                  4  [STACK] unsigned char 
 31689 ;; Registers used:
 31690 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 31691 ;; Tracked objects:
 31692 ;;		On entry : 0/0
 31693 ;;		On exit  : 0/0
 31694 ;;		Unchanged: 0/0
 31695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31700 ;;Total ram usage:        0 bytes
 31701 ;; Hardware stack levels used:    1
 31702 ;; Hardware stack levels required when called:   15
 31703 ;; This function calls:
 31704 ;;		Nothing
 31705 ;; This function is called by:
 31706 ;;		_conv_raw_result
 31707 ;;		_lp_filter
 31708 ;;		_calc_model_data
 31709 ;;		_calc_bsoc
 31710 ;;		_init_bsoc
 31711 ;;		_efgtoa
 31712 ;; This function uses a reentrant model
 31713 ;;
 31714                           
 31715                           	psect	text126
 31716  013EDC                     __ptext126:
 31717                           	opt callstack 0
 31718  013EDC                     ___flmul:
 31719                           	opt callstack 0
 31720                           
 31721                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 31722  013EDC  0E0D               	movlw	13
 31723  013EDE  26E1               	addwf	fsr1l,f,c
 31724  013EE0  0E00               	movlw	0
 31725  013EE2  22E2               	addwfc	fsr1h,f,c
 31726                           
 31727                           ;stkvar	_b @ sp[(-13)+-4]
 31728                           
 31729                           ;incstack = 0
 31730 ;; hardware stack exceeded
 31731  013EE4  0EF2               	movlw	242
 31732  013EE6  24E1               	addwf	fsr1l,w,c
 31733  013EE8  6ED9               	movwf	fsr2l,c
 31734  013EEA  0EFF               	movlw	255
 31735  013EEC  20E2               	addwfc	fsr1h,w,c
 31736  013EEE  6EDA               	movwf	fsr2h,c
 31737  013EF0  50DF               	movf	indf2,w,c
 31738  013EF2  6E0C               	movwf	(btemp+11)^0,c
 31739  013EF4  0E80               	movlw	128
 31740  013EF6  160C               	andwf	(btemp+11)^0,f,c
 31741                           
 31742                           ;stkvar	_sign @ sp[(-13)+12]
 31743  013EF8  0EFF               	movlw	-1
 31744  013EFA  0060  F033  FFE3   	movff	btemp+11,plusw1
 31745                           
 31746                           ;stkvar	_b @ sp[(-13)+-4]
 31747  013F00  0EF2               	movlw	242
 31748  013F02  24E1               	addwf	fsr1l,w,c
 31749  013F04  6ED9               	movwf	fsr2l,c
 31750  013F06  0EFF               	movlw	255
 31751  013F08  20E2               	addwfc	fsr1h,w,c
 31752  013F0A  6EDA               	movwf	fsr2h,c
 31753  013F0C  50DF               	movf	indf2,w,c
 31754  013F0E  6E0C               	movwf	(btemp+11)^0,c
 31755  013F10  90D8               	bcf	status,0,c
 31756  013F12  340C               	rlcf	(btemp+11)^0,w,c
 31757  013F14  6E0B               	movwf	(btemp+10)^0,c
 31758                           
 31759                           ;stkvar	_bexp @ sp[(-13)+10]
 31760  013F16  0EFD               	movlw	-3
 31761  013F18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31762                           
 31763                           ;stkvar	_b @ sp[(-13)+-4]
 31764  013F1E  0EF1               	movlw	241
 31765  013F20  24E1               	addwf	fsr1l,w,c
 31766  013F22  6ED9               	movwf	fsr2l,c
 31767  013F24  0EFF               	movlw	255
 31768  013F26  20E2               	addwfc	fsr1h,w,c
 31769  013F28  6EDA               	movwf	fsr2h,c
 31770  013F2A  AEDF               	btfss	indf2,7,c
 31771  013F2C  D002               	goto	l9082
 31772                           
 31773                           ;stkvar	_bexp @ sp[(-13)+10]
 31774  013F2E  0EFD               	movlw	-3
 31775  013F30  80E3               	bsf	plusw1,0,c
 31776  013F32                     l9082:
 31777                           
 31778                           ;stkvar	_bexp @ sp[(-13)+10]
 31779  013F32  0EFD               	movlw	-3
 31780  013F34  50E3               	movf	plusw1,w,c
 31781  013F36  B4D8               	btfsc	status,2,c
 31782  013F38  D01F               	goto	l9090
 31783                           
 31784                           ;stkvar	_bexp @ sp[(-13)+10]
 31785  013F3A  0EFD               	movlw	-3
 31786  013F3C  28E3               	incf	plusw1,w,c
 31787  013F3E  A4D8               	btfss	status,2,c
 31788  013F40  D018               	goto	l9088
 31789  013F42  0E00               	movlw	0
 31790  013F44  6E09               	movwf	(btemp+8)^0,c
 31791  013F46  0E00               	movlw	0
 31792  013F48  6E0A               	movwf	(btemp+9)^0,c
 31793  013F4A  0E00               	movlw	0
 31794  013F4C  6E0B               	movwf	(btemp+10)^0,c
 31795  013F4E  0E00               	movlw	0
 31796  013F50  6E0C               	movwf	(btemp+11)^0,c
 31797                           
 31798                           ;stkvar	_b @ sp[(-13)+-4]
 31799  013F52  0EEF               	movlw	-17
 31800  013F54  0060  F027  FFE3   	movff	btemp+8,plusw1
 31801  013F5A  0EF0               	movlw	-16
 31802  013F5C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31803  013F62  0EF1               	movlw	-15
 31804  013F64  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31805  013F6A  0EF2               	movlw	-14
 31806  013F6C  0060  F033  FFE3   	movff	btemp+11,plusw1
 31807  013F72                     l9088:
 31808                           
 31809                           ;stkvar	_b @ sp[(-13)+-4]
 31810  013F72  0EF1               	movlw	-15
 31811  013F74  8EE3               	bsf	plusw1,7,c
 31812  013F76  D018               	goto	l9092
 31813  013F78                     l9090:
 31814  013F78  0E00               	movlw	0
 31815  013F7A  6E09               	movwf	(btemp+8)^0,c
 31816  013F7C  0E00               	movlw	0
 31817  013F7E  6E0A               	movwf	(btemp+9)^0,c
 31818  013F80  0E00               	movlw	0
 31819  013F82  6E0B               	movwf	(btemp+10)^0,c
 31820  013F84  0E00               	movlw	0
 31821  013F86  6E0C               	movwf	(btemp+11)^0,c
 31822                           
 31823                           ;stkvar	_b @ sp[(-13)+-4]
 31824  013F88  0EEF               	movlw	-17
 31825  013F8A  0060  F027  FFE3   	movff	btemp+8,plusw1
 31826  013F90  0EF0               	movlw	-16
 31827  013F92  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31828  013F98  0EF1               	movlw	-15
 31829  013F9A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31830  013FA0  0EF2               	movlw	-14
 31831  013FA2  0060  F033  FFE3   	movff	btemp+11,plusw1
 31832  013FA8                     l9092:
 31833                           
 31834                           ;stkvar	_a @ sp[(-13)+-8]
 31835  013FA8  0EEE               	movlw	238
 31836  013FAA  24E1               	addwf	fsr1l,w,c
 31837  013FAC  6ED9               	movwf	fsr2l,c
 31838  013FAE  0EFF               	movlw	255
 31839  013FB0  20E2               	addwfc	fsr1h,w,c
 31840  013FB2  6EDA               	movwf	fsr2h,c
 31841  013FB4  50DF               	movf	indf2,w,c
 31842  013FB6  6E0C               	movwf	(btemp+11)^0,c
 31843  013FB8  0E80               	movlw	128
 31844  013FBA  160C               	andwf	(btemp+11)^0,f,c
 31845                           
 31846                           ;stkvar	_sign @ sp[(-13)+12]
 31847  013FBC  50E1               	movf	fsr1l,w,c
 31848  013FBE  0FFF               	addlw	-1
 31849  013FC0  6ED9               	movwf	fsr2l,c
 31850  013FC2  50E2               	movf	fsr1h,w,c
 31851  013FC4  6EDA               	movwf	fsr2h,c
 31852  013FC6  0EFF               	movlw	255
 31853  013FC8  22DA               	addwfc	fsr2h,f,c
 31854  013FCA  500C               	movf	(btemp+11)^0,w,c
 31855  013FCC  1ADF               	xorwf	indf2,f,c
 31856                           
 31857                           ;stkvar	_a @ sp[(-13)+-8]
 31858  013FCE  0EEE               	movlw	238
 31859  013FD0  24E1               	addwf	fsr1l,w,c
 31860  013FD2  6ED9               	movwf	fsr2l,c
 31861  013FD4  0EFF               	movlw	255
 31862  013FD6  20E2               	addwfc	fsr1h,w,c
 31863  013FD8  6EDA               	movwf	fsr2h,c
 31864  013FDA  50DF               	movf	indf2,w,c
 31865  013FDC  6E0C               	movwf	(btemp+11)^0,c
 31866  013FDE  90D8               	bcf	status,0,c
 31867  013FE0  340C               	rlcf	(btemp+11)^0,w,c
 31868  013FE2  6E0B               	movwf	(btemp+10)^0,c
 31869                           
 31870                           ;stkvar	_aexp @ sp[(-13)+11]
 31871  013FE4  0EFE               	movlw	-2
 31872  013FE6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31873                           
 31874                           ;stkvar	_a @ sp[(-13)+-8]
 31875  013FEC  0EED               	movlw	237
 31876  013FEE  24E1               	addwf	fsr1l,w,c
 31877  013FF0  6ED9               	movwf	fsr2l,c
 31878  013FF2  0EFF               	movlw	255
 31879  013FF4  20E2               	addwfc	fsr1h,w,c
 31880  013FF6  6EDA               	movwf	fsr2h,c
 31881  013FF8  AEDF               	btfss	indf2,7,c
 31882  013FFA  D002               	goto	l9100
 31883                           
 31884                           ;stkvar	_aexp @ sp[(-13)+11]
 31885  013FFC  0EFE               	movlw	-2
 31886  013FFE  80E3               	bsf	plusw1,0,c
 31887  014000                     l9100:
 31888                           
 31889                           ;stkvar	_aexp @ sp[(-13)+11]
 31890  014000  0EFE               	movlw	-2
 31891  014002  50E3               	movf	plusw1,w,c
 31892  014004  B4D8               	btfsc	status,2,c
 31893  014006  D01F               	goto	l9108
 31894                           
 31895                           ;stkvar	_aexp @ sp[(-13)+11]
 31896  014008  0EFE               	movlw	-2
 31897  01400A  28E3               	incf	plusw1,w,c
 31898  01400C  A4D8               	btfss	status,2,c
 31899  01400E  D018               	goto	l9106
 31900  014010  0E00               	movlw	0
 31901  014012  6E09               	movwf	(btemp+8)^0,c
 31902  014014  0E00               	movlw	0
 31903  014016  6E0A               	movwf	(btemp+9)^0,c
 31904  014018  0E00               	movlw	0
 31905  01401A  6E0B               	movwf	(btemp+10)^0,c
 31906  01401C  0E00               	movlw	0
 31907  01401E  6E0C               	movwf	(btemp+11)^0,c
 31908                           
 31909                           ;stkvar	_a @ sp[(-13)+-8]
 31910  014020  0EEB               	movlw	-21
 31911  014022  0060  F027  FFE3   	movff	btemp+8,plusw1
 31912  014028  0EEC               	movlw	-20
 31913  01402A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31914  014030  0EED               	movlw	-19
 31915  014032  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31916  014038  0EEE               	movlw	-18
 31917  01403A  0060  F033  FFE3   	movff	btemp+11,plusw1
 31918  014040                     l9106:
 31919                           
 31920                           ;stkvar	_a @ sp[(-13)+-8]
 31921  014040  0EED               	movlw	-19
 31922  014042  8EE3               	bsf	plusw1,7,c
 31923  014044  D018               	goto	l9110
 31924  014046                     l9108:
 31925  014046  0E00               	movlw	0
 31926  014048  6E09               	movwf	(btemp+8)^0,c
 31927  01404A  0E00               	movlw	0
 31928  01404C  6E0A               	movwf	(btemp+9)^0,c
 31929  01404E  0E00               	movlw	0
 31930  014050  6E0B               	movwf	(btemp+10)^0,c
 31931  014052  0E00               	movlw	0
 31932  014054  6E0C               	movwf	(btemp+11)^0,c
 31933                           
 31934                           ;stkvar	_a @ sp[(-13)+-8]
 31935  014056  0EEB               	movlw	-21
 31936  014058  0060  F027  FFE3   	movff	btemp+8,plusw1
 31937  01405E  0EEC               	movlw	-20
 31938  014060  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31939  014066  0EED               	movlw	-19
 31940  014068  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31941  01406E  0EEE               	movlw	-18
 31942  014070  0060  F033  FFE3   	movff	btemp+11,plusw1
 31943  014076                     l9110:
 31944                           
 31945                           ;stkvar	_aexp @ sp[(-13)+11]
 31946  014076  0EFE               	movlw	-2
 31947  014078  50E3               	movf	plusw1,w,c
 31948  01407A  B4D8               	btfsc	status,2,c
 31949  01407C  D004               	goto	u7310
 31950                           
 31951                           ;stkvar	_bexp @ sp[(-13)+10]
 31952  01407E  0EFD               	movlw	-3
 31953  014080  50E3               	movf	plusw1,w,c
 31954  014082  A4D8               	btfss	status,2,c
 31955  014084  D009               	goto	l9118
 31956  014086                     u7310:
 31957  014086  0E00               	movlw	0
 31958  014088  6E01               	movwf	btemp^0,c
 31959  01408A  0E00               	movlw	0
 31960  01408C  6E02               	movwf	(btemp+1)^0,c
 31961  01408E  0E00               	movlw	0
 31962  014090  6E03               	movwf	(btemp+2)^0,c
 31963  014092  0E00               	movlw	0
 31964  014094  6E04               	movwf	(btemp+3)^0,c
 31965  014096  D332               	goto	l3277
 31966  014098                     l9118:
 31967                           
 31968                           ;stkvar	_b @ sp[(-13)+-4]
 31969  014098  0EEF               	movlw	-17
 31970  01409A  006F FF8C  F00C    	movff	plusw1,btemp+11
 31971                           
 31972                           ;stkvar	_a @ sp[(-13)+-8]
 31973  0140A0  0EED               	movlw	237
 31974  0140A2  24E1               	addwf	fsr1l,w,c
 31975  0140A4  6ED9               	movwf	fsr2l,c
 31976  0140A6  0EFF               	movlw	255
 31977  0140A8  20E2               	addwfc	fsr1h,w,c
 31978  0140AA  6EDA               	movwf	fsr2h,c
 31979  0140AC  50DF               	movf	indf2,w,c
 31980  0140AE  020C               	mulwf	(btemp+11)^0,c
 31981                           
 31982                           ;stkvar	_temp @ sp[(-13)+8]
 31983  0140B0  0EFB               	movlw	-5
 31984  0140B2  006F FFCF FFE3     	movff	prodl,plusw1
 31985  0140B8  0EFC               	movlw	-4
 31986  0140BA  006F FFD3 FFE3     	movff	prodh,plusw1
 31987                           
 31988                           ;stkvar	_temp @ sp[(-13)+8]
 31989  0140C0  0EFB               	movlw	-5
 31990  0140C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 31991  0140C8  0060  F030  F005   	movff	btemp+11,btemp+4
 31992  0140CE  6A06               	clrf	(btemp+5)^0,c
 31993  0140D0  6A07               	clrf	(btemp+6)^0,c
 31994  0140D2  6A08               	clrf	(btemp+7)^0,c
 31995                           
 31996                           ;stkvar	_grs @ sp[(-13)+4]
 31997  0140D4  0EF7               	movlw	-9
 31998  0140D6  0060  F017  FFE3   	movff	btemp+4,plusw1
 31999  0140DC  0EF8               	movlw	-8
 32000  0140DE  0060  F01B  FFE3   	movff	btemp+5,plusw1
 32001  0140E4  0EF9               	movlw	-7
 32002  0140E6  0060  F01F  FFE3   	movff	btemp+6,plusw1
 32003  0140EC  0EFA               	movlw	-6
 32004  0140EE  0060  F023  FFE3   	movff	btemp+7,plusw1
 32005                           
 32006                           ;stkvar	_temp @ sp[(-13)+8]
 32007  0140F4  0EFC               	movlw	252
 32008  0140F6  24E1               	addwf	fsr1l,w,c
 32009  0140F8  6ED9               	movwf	fsr2l,c
 32010  0140FA  0EFF               	movlw	255
 32011  0140FC  20E2               	addwfc	fsr1h,w,c
 32012  0140FE  6EDA               	movwf	fsr2h,c
 32013  014100  50DF               	movf	indf2,w,c
 32014  014102  6E0C               	movwf	(btemp+11)^0,c
 32015  014104  0060  F030  F005   	movff	btemp+11,btemp+4
 32016  01410A  6A06               	clrf	(btemp+5)^0,c
 32017  01410C  6A07               	clrf	(btemp+6)^0,c
 32018  01410E  6A08               	clrf	(btemp+7)^0,c
 32019                           
 32020                           ;stkvar	_prod @ sp[(-13)+0]
 32021  014110  0EF3               	movlw	-13
 32022  014112  0060  F017  FFE3   	movff	btemp+4,plusw1
 32023  014118  0EF4               	movlw	-12
 32024  01411A  0060  F01B  FFE3   	movff	btemp+5,plusw1
 32025  014120  0EF5               	movlw	-11
 32026  014122  0060  F01F  FFE3   	movff	btemp+6,plusw1
 32027  014128  0EF6               	movlw	-10
 32028  01412A  0060  F023  FFE3   	movff	btemp+7,plusw1
 32029                           
 32030                           ;stkvar	_b @ sp[(-13)+-4]
 32031  014130  0EF0               	movlw	240
 32032  014132  24E1               	addwf	fsr1l,w,c
 32033  014134  6ED9               	movwf	fsr2l,c
 32034  014136  0EFF               	movlw	255
 32035  014138  20E2               	addwfc	fsr1h,w,c
 32036  01413A  6EDA               	movwf	fsr2h,c
 32037  01413C  50DF               	movf	indf2,w,c
 32038  01413E  6E0C               	movwf	(btemp+11)^0,c
 32039                           
 32040                           ;stkvar	_a @ sp[(-13)+-8]
 32041  014140  0EEC               	movlw	236
 32042  014142  24E1               	addwf	fsr1l,w,c
 32043  014144  6ED9               	movwf	fsr2l,c
 32044  014146  0EFF               	movlw	255
 32045  014148  20E2               	addwfc	fsr1h,w,c
 32046  01414A  6EDA               	movwf	fsr2h,c
 32047  01414C  50DF               	movf	indf2,w,c
 32048  01414E  020C               	mulwf	(btemp+11)^0,c
 32049                           
 32050                           ;stkvar	_temp @ sp[(-13)+8]
 32051  014150  0EFB               	movlw	-5
 32052  014152  006F FFCF FFE3     	movff	prodl,plusw1
 32053  014158  0EFC               	movlw	-4
 32054  01415A  006F FFD3 FFE3     	movff	prodh,plusw1
 32055                           
 32056                           ;stkvar	_grs @ sp[(-13)+4]
 32057  014160  50E1               	movf	fsr1l,w,c
 32058  014162  0FF7               	addlw	-9
 32059  014164  6ED9               	movwf	fsr2l,c
 32060  014166  50E2               	movf	fsr1h,w,c
 32061  014168  6EDA               	movwf	fsr2h,c
 32062  01416A  0EFF               	movlw	255
 32063  01416C  22DA               	addwfc	fsr2h,f,c
 32064                           
 32065                           ;stkvar	_temp @ sp[(-13)+8]
 32066  01416E  0EFB               	movlw	-5
 32067  014170  50E3               	movf	plusw1,w,c
 32068  014172  26DE               	addwf	postinc2,f,c
 32069  014174  0E00               	movlw	0
 32070  014176  22DE               	addwfc	postinc2,f,c
 32071  014178  22DE               	addwfc	postinc2,f,c
 32072  01417A  22DE               	addwfc	postinc2,f,c
 32073                           
 32074                           ;stkvar	_prod @ sp[(-13)+0]
 32075  01417C  50E1               	movf	fsr1l,w,c
 32076  01417E  0FF3               	addlw	-13
 32077  014180  6ED9               	movwf	fsr2l,c
 32078  014182  50E2               	movf	fsr1h,w,c
 32079  014184  6EDA               	movwf	fsr2h,c
 32080  014186  0EFF               	movlw	255
 32081  014188  22DA               	addwfc	fsr2h,f,c
 32082                           
 32083                           ;stkvar	_temp @ sp[(-13)+8]
 32084  01418A  0EFC               	movlw	252
 32085  01418C  24E1               	addwf	fsr1l,w,c
 32086  01418E  6EE9               	movwf	fsr0l,c
 32087  014190  0EFF               	movlw	255
 32088  014192  20E2               	addwfc	fsr1h,w,c
 32089  014194  6EEA               	movwf	fsr0h,c
 32090  014196  50EF               	movf	indf0,w,c
 32091  014198  26DE               	addwf	postinc2,f,c
 32092  01419A  0E00               	movlw	0
 32093  01419C  22DE               	addwfc	postinc2,f,c
 32094  01419E  22DE               	addwfc	postinc2,f,c
 32095  0141A0  22DE               	addwfc	postinc2,f,c
 32096                           
 32097                           ;stkvar	_b @ sp[(-13)+-4]
 32098  0141A2  0EF1               	movlw	241
 32099  0141A4  24E1               	addwf	fsr1l,w,c
 32100  0141A6  6ED9               	movwf	fsr2l,c
 32101  0141A8  0EFF               	movlw	255
 32102  0141AA  20E2               	addwfc	fsr1h,w,c
 32103  0141AC  6EDA               	movwf	fsr2h,c
 32104  0141AE  50DF               	movf	indf2,w,c
 32105  0141B0  6E0C               	movwf	(btemp+11)^0,c
 32106                           
 32107                           ;stkvar	_a @ sp[(-13)+-8]
 32108  0141B2  0EEB               	movlw	-21
 32109  0141B4  50E3               	movf	plusw1,w,c
 32110  0141B6  020C               	mulwf	(btemp+11)^0,c
 32111                           
 32112                           ;stkvar	_temp @ sp[(-13)+8]
 32113  0141B8  0EFB               	movlw	-5
 32114  0141BA  006F FFCF FFE3     	movff	prodl,plusw1
 32115  0141C0  0EFC               	movlw	-4
 32116  0141C2  006F FFD3 FFE3     	movff	prodh,plusw1
 32117                           
 32118                           ;stkvar	_grs @ sp[(-13)+4]
 32119  0141C8  50E1               	movf	fsr1l,w,c
 32120  0141CA  0FF7               	addlw	-9
 32121  0141CC  6ED9               	movwf	fsr2l,c
 32122  0141CE  50E2               	movf	fsr1h,w,c
 32123  0141D0  6EDA               	movwf	fsr2h,c
 32124  0141D2  0EFF               	movlw	255
 32125  0141D4  22DA               	addwfc	fsr2h,f,c
 32126                           
 32127                           ;stkvar	_temp @ sp[(-13)+8]
 32128  0141D6  0EFB               	movlw	-5
 32129  0141D8  50E3               	movf	plusw1,w,c
 32130  0141DA  26DE               	addwf	postinc2,f,c
 32131  0141DC  0E00               	movlw	0
 32132  0141DE  22DE               	addwfc	postinc2,f,c
 32133  0141E0  22DE               	addwfc	postinc2,f,c
 32134  0141E2  22DE               	addwfc	postinc2,f,c
 32135                           
 32136                           ;stkvar	_prod @ sp[(-13)+0]
 32137  0141E4  50E1               	movf	fsr1l,w,c
 32138  0141E6  0FF3               	addlw	-13
 32139  0141E8  6ED9               	movwf	fsr2l,c
 32140  0141EA  50E2               	movf	fsr1h,w,c
 32141  0141EC  6EDA               	movwf	fsr2h,c
 32142  0141EE  0EFF               	movlw	255
 32143  0141F0  22DA               	addwfc	fsr2h,f,c
 32144                           
 32145                           ;stkvar	_temp @ sp[(-13)+8]
 32146  0141F2  0EFC               	movlw	252
 32147  0141F4  24E1               	addwf	fsr1l,w,c
 32148  0141F6  6EE9               	movwf	fsr0l,c
 32149  0141F8  0EFF               	movlw	255
 32150  0141FA  20E2               	addwfc	fsr1h,w,c
 32151  0141FC  6EEA               	movwf	fsr0h,c
 32152  0141FE  50EF               	movf	indf0,w,c
 32153  014200  26DE               	addwf	postinc2,f,c
 32154  014202  0E00               	movlw	0
 32155  014204  22DE               	addwfc	postinc2,f,c
 32156  014206  22DE               	addwfc	postinc2,f,c
 32157  014208  22DE               	addwfc	postinc2,f,c
 32158                           
 32159                           ;stkvar	_grs @ sp[(-13)+4]
 32160  01420A  50E1               	movf	fsr1l,w,c
 32161  01420C  0FF7               	addlw	-9
 32162  01420E  6ED9               	movwf	fsr2l,c
 32163  014210  50E2               	movf	fsr1h,w,c
 32164  014212  6EDA               	movwf	fsr2h,c
 32165  014214  0EFF               	movlw	255
 32166  014216  22DA               	addwfc	fsr2h,f,c
 32167  014218  0E08               	movlw	8
 32168  01421A                     u7325:
 32169  01421A  90D8               	bcf	status,0,c
 32170  01421C  36DE               	rlcf	postinc2,f,c
 32171  01421E  36DE               	rlcf	postinc2,f,c
 32172  014220  36DE               	rlcf	postinc2,f,c
 32173  014222  36DD               	rlcf	postdec2,f,c
 32174  014224  52DD               	movf	postdec2,f,c
 32175  014226  52DD               	movf	postdec2,f,c
 32176  014228  2EE8               	decfsz	wreg,f,c
 32177  01422A  D7F7               	goto	u7325
 32178                           
 32179                           ;stkvar	_b @ sp[(-13)+-4]
 32180  01422C  0EF0               	movlw	240
 32181  01422E  24E1               	addwf	fsr1l,w,c
 32182  014230  6ED9               	movwf	fsr2l,c
 32183  014232  0EFF               	movlw	255
 32184  014234  20E2               	addwfc	fsr1h,w,c
 32185  014236  6EDA               	movwf	fsr2h,c
 32186  014238  50DF               	movf	indf2,w,c
 32187  01423A  6E0C               	movwf	(btemp+11)^0,c
 32188                           
 32189                           ;stkvar	_a @ sp[(-13)+-8]
 32190  01423C  0EEB               	movlw	-21
 32191  01423E  50E3               	movf	plusw1,w,c
 32192  014240  020C               	mulwf	(btemp+11)^0,c
 32193                           
 32194                           ;stkvar	_temp @ sp[(-13)+8]
 32195  014242  0EFB               	movlw	-5
 32196  014244  006F FFCF FFE3     	movff	prodl,plusw1
 32197  01424A  0EFC               	movlw	-4
 32198  01424C  006F FFD3 FFE3     	movff	prodh,plusw1
 32199                           
 32200                           ;stkvar	_temp @ sp[(-13)+8]
 32201  014252  0EFB               	movlw	-5
 32202  014254  006F FF8C  F00B    	movff	plusw1,btemp+10
 32203  01425A  0EFC               	movlw	-4
 32204  01425C  006F FF8C  F00C    	movff	plusw1,btemp+11
 32205                           
 32206                           ;stkvar	_grs @ sp[(-13)+4]
 32207  014262  50E1               	movf	fsr1l,w,c
 32208  014264  0FF7               	addlw	-9
 32209  014266  6ED9               	movwf	fsr2l,c
 32210  014268  50E2               	movf	fsr1h,w,c
 32211  01426A  6EDA               	movwf	fsr2h,c
 32212  01426C  0EFF               	movlw	255
 32213  01426E  22DA               	addwfc	fsr2h,f,c
 32214  014270  500B               	movf	(btemp+10)^0,w,c
 32215  014272  26DE               	addwf	postinc2,f,c
 32216  014274  500C               	movf	(btemp+11)^0,w,c
 32217  014276  22DE               	addwfc	postinc2,f,c
 32218  014278  0E00               	movlw	0
 32219  01427A  22DE               	addwfc	postinc2,f,c
 32220  01427C  22DE               	addwfc	postinc2,f,c
 32221                           
 32222                           ;stkvar	_b @ sp[(-13)+-4]
 32223  01427E  0EEF               	movlw	-17
 32224  014280  006F FF8C  F00C    	movff	plusw1,btemp+11
 32225                           
 32226                           ;stkvar	_a @ sp[(-13)+-8]
 32227  014286  0EEC               	movlw	236
 32228  014288  24E1               	addwf	fsr1l,w,c
 32229  01428A  6ED9               	movwf	fsr2l,c
 32230  01428C  0EFF               	movlw	255
 32231  01428E  20E2               	addwfc	fsr1h,w,c
 32232  014290  6EDA               	movwf	fsr2h,c
 32233  014292  50DF               	movf	indf2,w,c
 32234  014294  020C               	mulwf	(btemp+11)^0,c
 32235                           
 32236                           ;stkvar	_temp @ sp[(-13)+8]
 32237  014296  0EFB               	movlw	-5
 32238  014298  006F FFCF FFE3     	movff	prodl,plusw1
 32239  01429E  0EFC               	movlw	-4
 32240  0142A0  006F FFD3 FFE3     	movff	prodh,plusw1
 32241                           
 32242                           ;stkvar	_temp @ sp[(-13)+8]
 32243  0142A6  0EFB               	movlw	-5
 32244  0142A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 32245  0142AE  0EFC               	movlw	-4
 32246  0142B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 32247                           
 32248                           ;stkvar	_grs @ sp[(-13)+4]
 32249  0142B6  50E1               	movf	fsr1l,w,c
 32250  0142B8  0FF7               	addlw	-9
 32251  0142BA  6ED9               	movwf	fsr2l,c
 32252  0142BC  50E2               	movf	fsr1h,w,c
 32253  0142BE  6EDA               	movwf	fsr2h,c
 32254  0142C0  0EFF               	movlw	255
 32255  0142C2  22DA               	addwfc	fsr2h,f,c
 32256  0142C4  500B               	movf	(btemp+10)^0,w,c
 32257  0142C6  26DE               	addwf	postinc2,f,c
 32258  0142C8  500C               	movf	(btemp+11)^0,w,c
 32259  0142CA  22DE               	addwfc	postinc2,f,c
 32260  0142CC  0E00               	movlw	0
 32261  0142CE  22DE               	addwfc	postinc2,f,c
 32262  0142D0  22DE               	addwfc	postinc2,f,c
 32263                           
 32264                           ;stkvar	_grs @ sp[(-13)+4]
 32265  0142D2  50E1               	movf	fsr1l,w,c
 32266  0142D4  0FF7               	addlw	-9
 32267  0142D6  6ED9               	movwf	fsr2l,c
 32268  0142D8  50E2               	movf	fsr1h,w,c
 32269  0142DA  6EDA               	movwf	fsr2h,c
 32270  0142DC  0EFF               	movlw	255
 32271  0142DE  22DA               	addwfc	fsr2h,f,c
 32272  0142E0  0E08               	movlw	8
 32273  0142E2                     u7335:
 32274  0142E2  90D8               	bcf	status,0,c
 32275  0142E4  36DE               	rlcf	postinc2,f,c
 32276  0142E6  36DE               	rlcf	postinc2,f,c
 32277  0142E8  36DE               	rlcf	postinc2,f,c
 32278  0142EA  36DD               	rlcf	postdec2,f,c
 32279  0142EC  52DD               	movf	postdec2,f,c
 32280  0142EE  52DD               	movf	postdec2,f,c
 32281  0142F0  2EE8               	decfsz	wreg,f,c
 32282  0142F2  D7F7               	goto	u7335
 32283                           
 32284                           ;stkvar	_b @ sp[(-13)+-4]
 32285  0142F4  0EEF               	movlw	-17
 32286  0142F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 32287                           
 32288                           ;stkvar	_a @ sp[(-13)+-8]
 32289  0142FC  0EEB               	movlw	-21
 32290  0142FE  50E3               	movf	plusw1,w,c
 32291  014300  020C               	mulwf	(btemp+11)^0,c
 32292                           
 32293                           ;stkvar	_temp @ sp[(-13)+8]
 32294  014302  0EFB               	movlw	-5
 32295  014304  006F FFCF FFE3     	movff	prodl,plusw1
 32296  01430A  0EFC               	movlw	-4
 32297  01430C  006F FFD3 FFE3     	movff	prodh,plusw1
 32298                           
 32299                           ;stkvar	_temp @ sp[(-13)+8]
 32300  014312  0EFB               	movlw	-5
 32301  014314  006F FF8C  F00B    	movff	plusw1,btemp+10
 32302  01431A  0EFC               	movlw	-4
 32303  01431C  006F FF8C  F00C    	movff	plusw1,btemp+11
 32304                           
 32305                           ;stkvar	_grs @ sp[(-13)+4]
 32306  014322  50E1               	movf	fsr1l,w,c
 32307  014324  0FF7               	addlw	-9
 32308  014326  6ED9               	movwf	fsr2l,c
 32309  014328  50E2               	movf	fsr1h,w,c
 32310  01432A  6EDA               	movwf	fsr2h,c
 32311  01432C  0EFF               	movlw	255
 32312  01432E  22DA               	addwfc	fsr2h,f,c
 32313  014330  500B               	movf	(btemp+10)^0,w,c
 32314  014332  26DE               	addwf	postinc2,f,c
 32315  014334  500C               	movf	(btemp+11)^0,w,c
 32316  014336  22DE               	addwfc	postinc2,f,c
 32317  014338  0E00               	movlw	0
 32318  01433A  22DE               	addwfc	postinc2,f,c
 32319  01433C  22DE               	addwfc	postinc2,f,c
 32320                           
 32321                           ;stkvar	_b @ sp[(-13)+-4]
 32322  01433E  0EF0               	movlw	240
 32323  014340  24E1               	addwf	fsr1l,w,c
 32324  014342  6ED9               	movwf	fsr2l,c
 32325  014344  0EFF               	movlw	255
 32326  014346  20E2               	addwfc	fsr1h,w,c
 32327  014348  6EDA               	movwf	fsr2h,c
 32328  01434A  50DF               	movf	indf2,w,c
 32329  01434C  6E0C               	movwf	(btemp+11)^0,c
 32330                           
 32331                           ;stkvar	_a @ sp[(-13)+-8]
 32332  01434E  0EED               	movlw	237
 32333  014350  24E1               	addwf	fsr1l,w,c
 32334  014352  6ED9               	movwf	fsr2l,c
 32335  014354  0EFF               	movlw	255
 32336  014356  20E2               	addwfc	fsr1h,w,c
 32337  014358  6EDA               	movwf	fsr2h,c
 32338  01435A  50DF               	movf	indf2,w,c
 32339  01435C  020C               	mulwf	(btemp+11)^0,c
 32340                           
 32341                           ;stkvar	_temp @ sp[(-13)+8]
 32342  01435E  0EFB               	movlw	-5
 32343  014360  006F FFCF FFE3     	movff	prodl,plusw1
 32344  014366  0EFC               	movlw	-4
 32345  014368  006F FFD3 FFE3     	movff	prodh,plusw1
 32346                           
 32347                           ;stkvar	_temp @ sp[(-13)+8]
 32348  01436E  0EFB               	movlw	-5
 32349  014370  006F FF8C  F00B    	movff	plusw1,btemp+10
 32350  014376  0EFC               	movlw	-4
 32351  014378  006F FF8C  F00C    	movff	plusw1,btemp+11
 32352                           
 32353                           ;stkvar	_prod @ sp[(-13)+0]
 32354  01437E  50E1               	movf	fsr1l,w,c
 32355  014380  0FF3               	addlw	-13
 32356  014382  6ED9               	movwf	fsr2l,c
 32357  014384  50E2               	movf	fsr1h,w,c
 32358  014386  6EDA               	movwf	fsr2h,c
 32359  014388  0EFF               	movlw	255
 32360  01438A  22DA               	addwfc	fsr2h,f,c
 32361  01438C  500B               	movf	(btemp+10)^0,w,c
 32362  01438E  26DE               	addwf	postinc2,f,c
 32363  014390  500C               	movf	(btemp+11)^0,w,c
 32364  014392  22DE               	addwfc	postinc2,f,c
 32365  014394  0E00               	movlw	0
 32366  014396  22DE               	addwfc	postinc2,f,c
 32367  014398  22DE               	addwfc	postinc2,f,c
 32368                           
 32369                           ;stkvar	_b @ sp[(-13)+-4]
 32370  01439A  0EF1               	movlw	241
 32371  01439C  24E1               	addwf	fsr1l,w,c
 32372  01439E  6ED9               	movwf	fsr2l,c
 32373  0143A0  0EFF               	movlw	255
 32374  0143A2  20E2               	addwfc	fsr1h,w,c
 32375  0143A4  6EDA               	movwf	fsr2h,c
 32376  0143A6  50DF               	movf	indf2,w,c
 32377  0143A8  6E0C               	movwf	(btemp+11)^0,c
 32378                           
 32379                           ;stkvar	_a @ sp[(-13)+-8]
 32380  0143AA  0EEC               	movlw	236
 32381  0143AC  24E1               	addwf	fsr1l,w,c
 32382  0143AE  6ED9               	movwf	fsr2l,c
 32383  0143B0  0EFF               	movlw	255
 32384  0143B2  20E2               	addwfc	fsr1h,w,c
 32385  0143B4  6EDA               	movwf	fsr2h,c
 32386  0143B6  50DF               	movf	indf2,w,c
 32387  0143B8  020C               	mulwf	(btemp+11)^0,c
 32388                           
 32389                           ;stkvar	_temp @ sp[(-13)+8]
 32390  0143BA  0EFB               	movlw	-5
 32391  0143BC  006F FFCF FFE3     	movff	prodl,plusw1
 32392  0143C2  0EFC               	movlw	-4
 32393  0143C4  006F FFD3 FFE3     	movff	prodh,plusw1
 32394                           
 32395                           ;stkvar	_temp @ sp[(-13)+8]
 32396  0143CA  0EFB               	movlw	-5
 32397  0143CC  006F FF8C  F00B    	movff	plusw1,btemp+10
 32398  0143D2  0EFC               	movlw	-4
 32399  0143D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 32400                           
 32401                           ;stkvar	_prod @ sp[(-13)+0]
 32402  0143DA  50E1               	movf	fsr1l,w,c
 32403  0143DC  0FF3               	addlw	-13
 32404  0143DE  6ED9               	movwf	fsr2l,c
 32405  0143E0  50E2               	movf	fsr1h,w,c
 32406  0143E2  6EDA               	movwf	fsr2h,c
 32407  0143E4  0EFF               	movlw	255
 32408  0143E6  22DA               	addwfc	fsr2h,f,c
 32409  0143E8  500B               	movf	(btemp+10)^0,w,c
 32410  0143EA  26DE               	addwf	postinc2,f,c
 32411  0143EC  500C               	movf	(btemp+11)^0,w,c
 32412  0143EE  22DE               	addwfc	postinc2,f,c
 32413  0143F0  0E00               	movlw	0
 32414  0143F2  22DE               	addwfc	postinc2,f,c
 32415  0143F4  22DE               	addwfc	postinc2,f,c
 32416                           
 32417                           ;stkvar	_b @ sp[(-13)+-4]
 32418  0143F6  0EF1               	movlw	241
 32419  0143F8  24E1               	addwf	fsr1l,w,c
 32420  0143FA  6ED9               	movwf	fsr2l,c
 32421  0143FC  0EFF               	movlw	255
 32422  0143FE  20E2               	addwfc	fsr1h,w,c
 32423  014400  6EDA               	movwf	fsr2h,c
 32424  014402  50DF               	movf	indf2,w,c
 32425  014404  6E0C               	movwf	(btemp+11)^0,c
 32426                           
 32427                           ;stkvar	_a @ sp[(-13)+-8]
 32428  014406  0EED               	movlw	237
 32429  014408  24E1               	addwf	fsr1l,w,c
 32430  01440A  6ED9               	movwf	fsr2l,c
 32431  01440C  0EFF               	movlw	255
 32432  01440E  20E2               	addwfc	fsr1h,w,c
 32433  014410  6EDA               	movwf	fsr2h,c
 32434  014412  50DF               	movf	indf2,w,c
 32435  014414  020C               	mulwf	(btemp+11)^0,c
 32436                           
 32437                           ;stkvar	_temp @ sp[(-13)+8]
 32438  014416  0EFB               	movlw	-5
 32439  014418  006F FFCF FFE3     	movff	prodl,plusw1
 32440  01441E  0EFC               	movlw	-4
 32441  014420  006F FFD3 FFE3     	movff	prodh,plusw1
 32442                           
 32443                           ;stkvar	_temp @ sp[(-13)+8]
 32444  014426  0EFB               	movlw	-5
 32445  014428  006F FF8C  F00B    	movff	plusw1,btemp+10
 32446  01442E  0EFC               	movlw	-4
 32447  014430  006F FF8C  F00C    	movff	plusw1,btemp+11
 32448  014436  500B               	movf	(btemp+10)^0,w,c
 32449  014438  6E05               	movwf	(btemp+4)^0,c
 32450  01443A  500C               	movf	(btemp+11)^0,w,c
 32451  01443C  6E06               	movwf	(btemp+5)^0,c
 32452  01443E  6A07               	clrf	(btemp+6)^0,c
 32453  014440  6A08               	clrf	(btemp+7)^0,c
 32454  014442  0060  F01C  F008   	movff	btemp+6,btemp+7
 32455  014448  0060  F018  F007   	movff	btemp+5,btemp+6
 32456  01444E  0060  F014  F006   	movff	btemp+4,btemp+5
 32457  014454  6A05               	clrf	(btemp+4)^0,c
 32458                           
 32459                           ;stkvar	_prod @ sp[(-13)+0]
 32460  014456  50E1               	movf	fsr1l,w,c
 32461  014458  0FF3               	addlw	-13
 32462  01445A  6ED9               	movwf	fsr2l,c
 32463  01445C  50E2               	movf	fsr1h,w,c
 32464  01445E  6EDA               	movwf	fsr2h,c
 32465  014460  0EFF               	movlw	255
 32466  014462  22DA               	addwfc	fsr2h,f,c
 32467  014464  5005               	movf	(btemp+4)^0,w,c
 32468  014466  26DE               	addwf	postinc2,f,c
 32469  014468  5006               	movf	(btemp+5)^0,w,c
 32470  01446A  22DE               	addwfc	postinc2,f,c
 32471  01446C  5007               	movf	(btemp+6)^0,w,c
 32472  01446E  22DE               	addwfc	postinc2,f,c
 32473  014470  5008               	movf	(btemp+7)^0,w,c
 32474  014472  22DE               	addwfc	postinc2,f,c
 32475                           
 32476                           ;stkvar	_prod @ sp[(-13)+0]
 32477  014474  50E1               	movf	fsr1l,w,c
 32478  014476  0FF3               	addlw	-13
 32479  014478  6ED9               	movwf	fsr2l,c
 32480  01447A  50E2               	movf	fsr1h,w,c
 32481  01447C  6EDA               	movwf	fsr2h,c
 32482  01447E  0EFF               	movlw	255
 32483  014480  22DA               	addwfc	fsr2h,f,c
 32484                           
 32485                           ;stkvar	_grs @ sp[(-13)+4]
 32486  014482  0EFA               	movlw	250
 32487  014484  24E1               	addwf	fsr1l,w,c
 32488  014486  6EE9               	movwf	fsr0l,c
 32489  014488  0EFF               	movlw	255
 32490  01448A  20E2               	addwfc	fsr1h,w,c
 32491  01448C  6EEA               	movwf	fsr0h,c
 32492  01448E  50EF               	movf	indf0,w,c
 32493  014490  26DE               	addwf	postinc2,f,c
 32494  014492  0E00               	movlw	0
 32495  014494  22DE               	addwfc	postinc2,f,c
 32496  014496  22DE               	addwfc	postinc2,f,c
 32497  014498  22DE               	addwfc	postinc2,f,c
 32498                           
 32499                           ;stkvar	_grs @ sp[(-13)+4]
 32500  01449A  50E1               	movf	fsr1l,w,c
 32501  01449C  0FF7               	addlw	-9
 32502  01449E  6ED9               	movwf	fsr2l,c
 32503  0144A0  50E2               	movf	fsr1h,w,c
 32504  0144A2  6EDA               	movwf	fsr2h,c
 32505  0144A4  0EFF               	movlw	255
 32506  0144A6  22DA               	addwfc	fsr2h,f,c
 32507  0144A8  0E08               	movlw	8
 32508  0144AA                     u7345:
 32509  0144AA  90D8               	bcf	status,0,c
 32510  0144AC  36DE               	rlcf	postinc2,f,c
 32511  0144AE  36DE               	rlcf	postinc2,f,c
 32512  0144B0  36DE               	rlcf	postinc2,f,c
 32513  0144B2  36DD               	rlcf	postdec2,f,c
 32514  0144B4  52DD               	movf	postdec2,f,c
 32515  0144B6  52DD               	movf	postdec2,f,c
 32516  0144B8  2EE8               	decfsz	wreg,f,c
 32517  0144BA  D7F7               	goto	u7345
 32518  0144BC  0E82               	movlw	130
 32519  0144BE  6E0B               	movwf	(btemp+10)^0,c
 32520  0144C0  0EFF               	movlw	255
 32521  0144C2  6E0C               	movwf	(btemp+11)^0,c
 32522                           
 32523                           ;stkvar	_bexp @ sp[(-13)+10]
 32524  0144C4  0EFD               	movlw	-3
 32525  0144C6  50E3               	movf	plusw1,w,c
 32526  0144C8  6E09               	movwf	(btemp+8)^0,c
 32527  0144CA  6A0A               	clrf	(btemp+9)^0,c
 32528                           
 32529                           ;stkvar	_aexp @ sp[(-13)+11]
 32530  0144CC  0EFE               	movlw	-2
 32531  0144CE  50E3               	movf	plusw1,w,c
 32532  0144D0  2609               	addwf	(btemp+8)^0,f,c
 32533  0144D2  0E00               	movlw	0
 32534  0144D4  220A               	addwfc	(btemp+9)^0,f,c
 32535  0144D6  500B               	movf	(btemp+10)^0,w,c
 32536  0144D8  2609               	addwf	(btemp+8)^0,f,c
 32537  0144DA  500C               	movf	(btemp+11)^0,w,c
 32538  0144DC  220A               	addwfc	(btemp+9)^0,f,c
 32539                           
 32540                           ;stkvar	_temp @ sp[(-13)+8]
 32541  0144DE  0EFB               	movlw	-5
 32542  0144E0  0060  F027  FFE3   	movff	btemp+8,plusw1
 32543  0144E6  0EFC               	movlw	-4
 32544  0144E8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32545  0144EE  D021               	goto	l9180
 32546  0144F0                     l9170:
 32547                           
 32548                           ;stkvar	_prod @ sp[(-13)+0]
 32549  0144F0  90D8               	bcf	status,0,c
 32550  0144F2  0EF3               	movlw	-13
 32551  0144F4  36E3               	rlcf	plusw1,f,c
 32552  0144F6  0EF4               	movlw	-12
 32553  0144F8  36E3               	rlcf	plusw1,f,c
 32554  0144FA  0EF5               	movlw	-11
 32555  0144FC  36E3               	rlcf	plusw1,f,c
 32556  0144FE  0EF6               	movlw	-10
 32557  014500  36E3               	rlcf	plusw1,f,c
 32558                           
 32559                           ;stkvar	_grs @ sp[(-13)+4]
 32560  014502  0EFA               	movlw	-6
 32561  014504  AEE3               	btfss	plusw1,7,c
 32562  014506  D002               	goto	l9176
 32563                           
 32564                           ;stkvar	_prod @ sp[(-13)+0]
 32565  014508  0EF3               	movlw	-13
 32566  01450A  80E3               	bsf	plusw1,0,c
 32567  01450C                     l9176:
 32568                           
 32569                           ;stkvar	_grs @ sp[(-13)+4]
 32570  01450C  90D8               	bcf	status,0,c
 32571  01450E  0EF7               	movlw	-9
 32572  014510  36E3               	rlcf	plusw1,f,c
 32573  014512  0EF8               	movlw	-8
 32574  014514  36E3               	rlcf	plusw1,f,c
 32575  014516  0EF9               	movlw	-7
 32576  014518  36E3               	rlcf	plusw1,f,c
 32577  01451A  0EFA               	movlw	-6
 32578  01451C  36E3               	rlcf	plusw1,f,c
 32579                           
 32580                           ;stkvar	_temp @ sp[(-13)+8]
 32581  01451E  50E1               	movf	fsr1l,w,c
 32582  014520  0FFB               	addlw	-5
 32583  014522  6ED9               	movwf	fsr2l,c
 32584  014524  50E2               	movf	fsr1h,w,c
 32585  014526  6EDA               	movwf	fsr2h,c
 32586  014528  0EFF               	movlw	255
 32587  01452A  22DA               	addwfc	fsr2h,f,c
 32588  01452C  06DE               	decf	postinc2,f,c
 32589  01452E  0E00               	movlw	0
 32590  014530  5ADD               	subwfb	postdec2,f,c
 32591  014532                     l9180:
 32592                           
 32593                           ;stkvar	_prod @ sp[(-13)+0]
 32594  014532  0EF5               	movlw	-11
 32595  014534  AEE3               	btfss	plusw1,7,c
 32596  014536  D7DC               	goto	l9170
 32597                           
 32598                           ;stkvar	_aexp @ sp[(-13)+11]
 32599  014538  0EFE               	movlw	-2
 32600  01453A  6AE3               	clrf	plusw1,c
 32601                           
 32602                           ;stkvar	_grs @ sp[(-13)+4]
 32603  01453C  0EFA               	movlw	-6
 32604  01453E  AEE3               	btfss	plusw1,7,c
 32605  014540  D020               	goto	l9194
 32606                           
 32607                           ;stkvar	_grs @ sp[(-13)+4]
 32608  014542  50E1               	movf	fsr1l,w,c
 32609  014544  0FF7               	addlw	-9
 32610  014546  6ED9               	movwf	fsr2l,c
 32611  014548  50E2               	movf	fsr1h,w,c
 32612  01454A  6EDA               	movwf	fsr2h,c
 32613  01454C  0EFF               	movlw	255
 32614  01454E  22DA               	addwfc	fsr2h,f,c
 32615  014550  0EFF               	movlw	255
 32616  014552  14DE               	andwf	postinc2,w,c
 32617  014554  6E09               	movwf	(btemp+8)^0,c
 32618  014556  0EFF               	movlw	255
 32619  014558  14DE               	andwf	postinc2,w,c
 32620  01455A  6E0A               	movwf	(btemp+9)^0,c
 32621  01455C  0EFF               	movlw	255
 32622  01455E  14DE               	andwf	postinc2,w,c
 32623  014560  6E0B               	movwf	(btemp+10)^0,c
 32624  014562  0E7F               	movlw	127
 32625  014564  14DE               	andwf	postinc2,w,c
 32626  014566  6E0C               	movwf	(btemp+11)^0,c
 32627  014568  5009               	movf	(btemp+8)^0,w,c
 32628  01456A  100A               	iorwf	(btemp+9)^0,w,c
 32629  01456C  100B               	iorwf	(btemp+10)^0,w,c
 32630  01456E  100C               	iorwf	(btemp+11)^0,w,c
 32631  014570  B4D8               	btfsc	status,2,c
 32632  014572  D004               	goto	l9190
 32633  014574                     u7380:
 32634                           
 32635                           ;stkvar	_aexp @ sp[(-13)+11]
 32636  014574  0EFE               	movlw	-2
 32637  014576  6AE3               	clrf	plusw1,c
 32638  014578  2AE3               	incf	plusw1,f,c
 32639  01457A  D003               	goto	l9194
 32640  01457C                     l9190:
 32641                           
 32642                           ;stkvar	_prod @ sp[(-13)+0]
 32643  01457C  0EF3               	movlw	-13
 32644  01457E  B0E3               	btfsc	plusw1,0,c
 32645  014580  D7F9               	goto	u7380
 32646  014582                     l9194:
 32647                           
 32648                           ;stkvar	_aexp @ sp[(-13)+11]
 32649  014582  0EFE               	movlw	-2
 32650  014584  50E3               	movf	plusw1,w,c
 32651  014586  B4D8               	btfsc	status,2,c
 32652  014588  D036               	goto	l9204
 32653                           
 32654                           ;stkvar	_prod @ sp[(-13)+0]
 32655  01458A  50E1               	movf	fsr1l,w,c
 32656  01458C  0FF3               	addlw	-13
 32657  01458E  6ED9               	movwf	fsr2l,c
 32658  014590  50E2               	movf	fsr1h,w,c
 32659  014592  6EDA               	movwf	fsr2h,c
 32660  014594  0EFF               	movlw	255
 32661  014596  22DA               	addwfc	fsr2h,f,c
 32662  014598  2ADE               	incf	postinc2,f,c
 32663  01459A  0E00               	movlw	0
 32664  01459C  22DE               	addwfc	postinc2,f,c
 32665  01459E  22DE               	addwfc	postinc2,f,c
 32666  0145A0  22DE               	addwfc	postinc2,f,c
 32667                           
 32668                           ;stkvar	_prod @ sp[(-13)+0]
 32669  0145A2  0EF6               	movlw	-10
 32670  0145A4  A0E3               	btfss	plusw1,0,c
 32671  0145A6  D027               	goto	l9204
 32672  0145A8  0E01               	movlw	1
 32673  0145AA  6E0C               	movwf	(btemp+11)^0,c
 32674                           
 32675                           ;stkvar	_prod @ sp[(-13)+0]
 32676  0145AC  50E1               	movf	fsr1l,w,c
 32677  0145AE  0FF3               	addlw	-13
 32678  0145B0  6ED9               	movwf	fsr2l,c
 32679  0145B2  50E2               	movf	fsr1h,w,c
 32680  0145B4  6EDA               	movwf	fsr2h,c
 32681  0145B6  0EFF               	movlw	255
 32682  0145B8  22DA               	addwfc	fsr2h,f,c
 32683  0145BA  280C               	incf	(btemp+11)^0,w,c
 32684  0145BC  52DE               	movf	postinc2,f,c
 32685  0145BE  D008               	goto	u7420
 32686  0145C0                     u7425:
 32687  0145C0  52DE               	movf	postinc2,f,c
 32688  0145C2  90D8               	bcf	status,0,c
 32689  0145C4  BEDC               	btfsc	preinc2,7,c
 32690  0145C6  80D8               	bsf	status,0,c
 32691  0145C8  32DD               	rrcf	postdec2,f,c
 32692  0145CA  32DD               	rrcf	postdec2,f,c
 32693  0145CC  32DD               	rrcf	postdec2,f,c
 32694  0145CE  32DE               	rrcf	postinc2,f,c
 32695  0145D0                     u7420:
 32696  0145D0  2EE8               	decfsz	wreg,f,c
 32697  0145D2  D7F6               	goto	u7425
 32698                           
 32699                           ;stkvar	_temp @ sp[(-13)+8]
 32700  0145D4  0EFB               	movlw	-5
 32701  0145D6  50E3               	movf	plusw1,w,c
 32702  0145D8  0F01               	addlw	1
 32703  0145DA  6E01               	movwf	btemp^0,c
 32704  0145DC  0EFB               	movlw	-5
 32705  0145DE  0060  F007  FFE3   	movff	btemp,plusw1
 32706  0145E4  6A01               	clrf	btemp^0,c
 32707  0145E6  0EFC               	movlw	-4
 32708  0145E8  50E3               	movf	plusw1,w,c
 32709  0145EA  2001               	addwfc	btemp^0,w,c
 32710  0145EC  6E01               	movwf	btemp^0,c
 32711  0145EE  0EFC               	movlw	-4
 32712  0145F0  0060  F007  FFE3   	movff	btemp,plusw1
 32713  0145F6                     l9204:
 32714                           
 32715                           ;stkvar	_temp @ sp[(-13)+8]
 32716  0145F6  0EFC               	movlw	-4
 32717  0145F8  BEE3               	btfsc	plusw1,7,c
 32718  0145FA  D020               	goto	l9208
 32719  0145FC  0EFC               	movlw	-4
 32720  0145FE  50E3               	movf	plusw1,w,c
 32721  014600  E104               	bnz	u7430
 32722  014602  0EFB               	movlw	-5
 32723  014604  28E3               	incf	plusw1,w,c
 32724  014606  A0D8               	btfss	status,0,c
 32725  014608  D019               	goto	l9208
 32726  01460A                     u7430:
 32727  01460A  0E00               	movlw	0
 32728  01460C  6E09               	movwf	(btemp+8)^0,c
 32729  01460E  0E00               	movlw	0
 32730  014610  6E0A               	movwf	(btemp+9)^0,c
 32731  014612  0E80               	movlw	128
 32732  014614  6E0B               	movwf	(btemp+10)^0,c
 32733  014616  0E7F               	movlw	127
 32734  014618  6E0C               	movwf	(btemp+11)^0,c
 32735                           
 32736                           ;stkvar	_prod @ sp[(-13)+0]
 32737  01461A  0EF3               	movlw	-13
 32738  01461C  0060  F027  FFE3   	movff	btemp+8,plusw1
 32739  014622  0EF4               	movlw	-12
 32740  014624  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32741  01462A  0EF5               	movlw	-11
 32742  01462C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32743  014632  0EF6               	movlw	-10
 32744  014634  0060  F033  FFE3   	movff	btemp+11,plusw1
 32745  01463A  D044               	goto	l9224
 32746  01463C                     l9208:
 32747                           
 32748                           ;stkvar	_temp @ sp[(-13)+8]
 32749  01463C  0EFC               	movlw	-4
 32750  01463E  BEE3               	btfsc	plusw1,7,c
 32751  014640  D007               	goto	u7440
 32752  014642  0EFC               	movlw	-4
 32753  014644  50E3               	movf	plusw1,w,c
 32754  014646  E10F               	bnz	l9214
 32755  014648  0EFB               	movlw	-5
 32756  01464A  04E3               	decf	plusw1,w,c
 32757  01464C  B0D8               	btfsc	status,0,c
 32758  01464E  D00B               	goto	l9214
 32759  014650                     u7440:
 32760                           
 32761                           ;stkvar	_prod @ sp[(-13)+0]
 32762  014650  0EF3               	movlw	-13
 32763  014652  6AE3               	clrf	plusw1,c
 32764  014654  0EF4               	movlw	-12
 32765  014656  6AE3               	clrf	plusw1,c
 32766  014658  0EF5               	movlw	-11
 32767  01465A  6AE3               	clrf	plusw1,c
 32768  01465C  0EF6               	movlw	-10
 32769  01465E  6AE3               	clrf	plusw1,c
 32770                           
 32771                           ;stkvar	_sign @ sp[(-13)+12]
 32772  014660  0EFF               	movlw	-1
 32773  014662  6AE3               	clrf	plusw1,c
 32774  014664  D02F               	goto	l9224
 32775  014666                     l9214:
 32776                           
 32777                           ;stkvar	_temp @ sp[(-13)+8]
 32778                           ;stkvar	_bexp @ sp[(-13)+10]
 32779  014666  0EFB               	movlw	-5
 32780  014668  006F FF8C  F001    	movff	plusw1,btemp
 32781  01466E  0EFD               	movlw	-3
 32782  014670  0060  F007  FFE3   	movff	btemp,plusw1
 32783                           
 32784                           ;stkvar	_prod @ sp[(-13)+0]
 32785  014676  50E1               	movf	fsr1l,w,c
 32786  014678  0FF3               	addlw	-13
 32787  01467A  6ED9               	movwf	fsr2l,c
 32788  01467C  50E2               	movf	fsr1h,w,c
 32789  01467E  6EDA               	movwf	fsr2h,c
 32790  014680  0EFF               	movlw	255
 32791  014682  22DA               	addwfc	fsr2h,f,c
 32792  014684  0EFF               	movlw	255
 32793  014686  16DE               	andwf	postinc2,f,c
 32794  014688  0EFF               	movlw	255
 32795  01468A  16DE               	andwf	postinc2,f,c
 32796  01468C  0E7F               	movlw	127
 32797  01468E  16DE               	andwf	postinc2,f,c
 32798  014690  0E00               	movlw	0
 32799  014692  16DE               	andwf	postinc2,f,c
 32800                           
 32801                           ;stkvar	_bexp @ sp[(-13)+10]
 32802  014694  0EFD               	movlw	-3
 32803  014696  A0E3               	btfss	plusw1,0,c
 32804  014698  D008               	goto	l9222
 32805                           
 32806                           ;stkvar	_prod @ sp[(-13)+0]
 32807  01469A  0EF5               	movlw	245
 32808  01469C  24E1               	addwf	fsr1l,w,c
 32809  01469E  6ED9               	movwf	fsr2l,c
 32810  0146A0  0EFF               	movlw	255
 32811  0146A2  20E2               	addwfc	fsr1h,w,c
 32812  0146A4  6EDA               	movwf	fsr2h,c
 32813  0146A6  0E00               	movlw	0
 32814  0146A8  8EDB               	bsf	plusw2,7,c
 32815  0146AA                     l9222:
 32816                           
 32817                           ;stkvar	_prod @ sp[(-13)+0]
 32818  0146AA  0EF6               	movlw	246
 32819  0146AC  24E1               	addwf	fsr1l,w,c
 32820  0146AE  6ED9               	movwf	fsr2l,c
 32821  0146B0  0EFF               	movlw	255
 32822  0146B2  20E2               	addwfc	fsr1h,w,c
 32823  0146B4  6EDA               	movwf	fsr2h,c
 32824                           
 32825                           ;stkvar	_bexp @ sp[(-13)+10]
 32826  0146B6  0EFD               	movlw	-3
 32827  0146B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 32828  0146BE  90D8               	bcf	status,0,c
 32829  0146C0  300C               	rrcf	(btemp+11)^0,w,c
 32830  0146C2  6EDF               	movwf	indf2,c
 32831  0146C4                     l9224:
 32832                           
 32833                           ;stkvar	_sign @ sp[(-13)+12]
 32834  0146C4  0EFF               	movlw	-1
 32835  0146C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 32836                           
 32837                           ;stkvar	_prod @ sp[(-13)+0]
 32838  0146CC  0EF6               	movlw	246
 32839  0146CE  24E1               	addwf	fsr1l,w,c
 32840  0146D0  6ED9               	movwf	fsr2l,c
 32841  0146D2  0EFF               	movlw	255
 32842  0146D4  20E2               	addwfc	fsr1h,w,c
 32843  0146D6  6EDA               	movwf	fsr2h,c
 32844  0146D8  500C               	movf	(btemp+11)^0,w,c
 32845  0146DA  12DF               	iorwf	indf2,f,c
 32846                           
 32847                           ;stkvar	_prod @ sp[(-13)+0]
 32848  0146DC  0EF3               	movlw	-13
 32849  0146DE  006F FF8C  F001    	movff	plusw1,btemp
 32850  0146E4  0EF4               	movlw	-12
 32851  0146E6  006F FF8C  F002    	movff	plusw1,btemp+1
 32852  0146EC  0EF5               	movlw	-11
 32853  0146EE  006F FF8C  F003    	movff	plusw1,btemp+2
 32854  0146F4  0EF6               	movlw	-10
 32855  0146F6  006F FF8C  F004    	movff	plusw1,btemp+3
 32856  0146FC                     l3277:
 32857                           
 32858                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 32859  0146FC  0EEB               	movlw	235
 32860  0146FE  26E1               	addwf	fsr1l,f,c
 32861  014700  0EFF               	movlw	255
 32862  014702  22E2               	addwfc	fsr1h,f,c
 32863  014704  0012               	return		;funcret
 32864  014706                     __end_of___flmul:
 32865                           	opt callstack 0
 32866                           
 32867 ;; *************** function _SYSTEM_Initialize *****************
 32868 ;; Defined at:
 32869 ;;		line 50 in file "mcc_generated_files/mcc.c"
 32870 ;; Parameters:    Size  Location     Type
 32871 ;;		None
 32872 ;; Auto vars:     Size  Location     Type
 32873 ;;		None
 32874 ;; Return value:  Size  Location     Type
 32875 ;;                  1  [STACK] void 
 32876 ;; Registers used:
 32877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 32878 ;; Tracked objects:
 32879 ;;		On entry : 0/0
 32880 ;;		On exit  : 3F/3C
 32881 ;;		Unchanged: 0/0
 32882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32887 ;;Total ram usage:        0 bytes
 32888 ;; Hardware stack levels used:    1
 32889 ;; Hardware stack levels required when called:   17
 32890 ;; This function calls:
 32891 ;;		_ADCC_Initialize
 32892 ;;		_CLKREF_Initialize
 32893 ;;		_CRC_Initialize
 32894 ;;		_DMA1_Initialize
 32895 ;;		_DMA2_Initialize
 32896 ;;		_EXT_INT_Initialize
 32897 ;;		_FVR_Initialize
 32898 ;;		_INTERRUPT_Initialize
 32899 ;;		_OSCILLATOR_Initialize
 32900 ;;		_PIN_MANAGER_Initialize
 32901 ;;		_PMD_Initialize
 32902 ;;		_PWM8_Initialize
 32903 ;;		_SPI1_Initialize
 32904 ;;		_TMR2_Initialize
 32905 ;;		_TMR3_Initialize
 32906 ;;		_TMR5_Initialize
 32907 ;;		_TMR6_Initialize
 32908 ;;		_UART1_Initialize
 32909 ;;		_UART2_Initialize
 32910 ;; This function is called by:
 32911 ;;		_main
 32912 ;; This function uses a reentrant model
 32913 ;;
 32914                           
 32915                           	psect	text127
 32916  01C520                     __ptext127:
 32917                           	opt callstack 0
 32918  01C520                     _SYSTEM_Initialize:
 32919                           	opt callstack 13
 32920                           
 32921                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 32922                           
 32923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32924                           ;incstack = 0
 32925  01C520  ECC0  F0E0         	call	_INTERRUPT_Initialize	;wreg free
 32926                           
 32927                           ; BSR set to: 57
 32928                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 32929  01C524  EC4D  F0E9         	call	_PMD_Initialize	;wreg free
 32930                           
 32931                           ; BSR set to: 57
 32932                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 32933  01C528  ECE7  F0DC         	call	_PIN_MANAGER_Initialize	;wreg free
 32934                           
 32935                           ; BSR set to: 58
 32936                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 32937  01C52C  EC42  F0E9         	call	_OSCILLATOR_Initialize	;wreg free
 32938                           
 32939                           ; BSR set to: 57
 32940                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 32941  01C530  ECE1  F0E9         	call	_FVR_Initialize	;wreg free
 32942                           
 32943                           ; BSR set to: 62
 32944                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 32945  01C534  EC30  F0DD         	call	_CRC_Initialize	;wreg free
 32946                           
 32947                           ; BSR set to: 0
 32948                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 32949  01C538  ECEE  F0DF         	call	_ADCC_Initialize	;wreg free
 32950                           
 32951                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 32952  01C53C  EC37  F0E9         	call	_PWM8_Initialize	;wreg free
 32953                           
 32954                           ; BSR set to: 63
 32955                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
 32956  01C540  EC15  F0E9         	call	_TMR2_Initialize	;wreg free
 32957                           
 32958                           ; BSR set to: 57
 32959                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 32960  01C544  ECB6  F0E5         	call	_EXT_INT_Initialize	;wreg free
 32961                           
 32962                           ; BSR set to: 57
 32963                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 32964  01C548  ECA2  F0E6         	call	_TMR6_Initialize	;wreg free
 32965                           
 32966                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 32967  01C54C  EC6F  F0E3         	call	_TMR3_Initialize	;wreg free
 32968                           
 32969                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 32970  01C550  EC4B  F0E3         	call	_TMR5_Initialize	;wreg free
 32971                           
 32972                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 32973  01C554  EC27  F0E3         	call	_UART1_Initialize	;wreg free
 32974                           
 32975                           ; BSR set to: 57
 32976                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 32977  01C558  EC87  F0E1         	call	_UART2_Initialize	;wreg free
 32978                           
 32979                           ; BSR set to: 57
 32980                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 32981  01C55C  EC2C  F0E9         	call	_SPI1_Initialize	;wreg free
 32982                           
 32983                           ; BSR set to: 61
 32984                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 32985  01C560  EC11  F0E2         	call	_DMA2_Initialize	;wreg free
 32986                           
 32987                           ; BSR set to: 59
 32988                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 32989  01C564  ECB9  F0DF         	call	_DMA1_Initialize	;wreg free
 32990                           
 32991                           ; BSR set to: 59
 32992                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 32993  01C568  ECB5  F0E9         	call	_CLKREF_Initialize	;wreg free
 32994                           
 32995                           ; BSR set to: 60
 32996                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32997  01C56C  0012               	return		;funcret
 32998  01C56E                     __end_of_SYSTEM_Initialize:
 32999                           	opt callstack 0
 33000                           
 33001 ;; *************** function _UART2_Initialize *****************
 33002 ;; Defined at:
 33003 ;;		line 78 in file "mcc_generated_files/uart2.c"
 33004 ;; Parameters:    Size  Location     Type
 33005 ;;		None
 33006 ;; Auto vars:     Size  Location     Type
 33007 ;;		None
 33008 ;; Return value:  Size  Location     Type
 33009 ;;                  1  [STACK] void 
 33010 ;; Registers used:
 33011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 33012 ;; Tracked objects:
 33013 ;;		On entry : 3F/39
 33014 ;;		On exit  : 3F/39
 33015 ;;		Unchanged: 0/0
 33016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33021 ;;Total ram usage:        0 bytes
 33022 ;; Hardware stack levels used:    1
 33023 ;; Hardware stack levels required when called:   16
 33024 ;; This function calls:
 33025 ;;		_UART2_SetRxInterruptHandler
 33026 ;;		_UART2_SetTxInterruptHandler
 33027 ;; This function is called by:
 33028 ;;		_SYSTEM_Initialize
 33029 ;; This function uses a reentrant model
 33030 ;;
 33031                           
 33032                           	psect	text128
 33033  01C30E                     __ptext128:
 33034                           	opt callstack 0
 33035  01C30E                     _UART2_Initialize:
 33036                           	opt callstack 13
 33037                           
 33038                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 33039                           
 33040                           ; BSR set to: 60
 33041                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33042                           ;incstack = 0
 33043  01C30E  0139               	movlb	57	; () banked
 33044  01C310  9596               	bcf	150,2,b	;volatile
 33045                           
 33046                           ; BSR set to: 57
 33047                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 33048  01C312  0E26               	movlw	low _UART2_Receive_ISR
 33049  01C314  6EE6               	movwf	postinc1,c
 33050  01C316  0ED1               	movlw	high _UART2_Receive_ISR
 33051  01C318  6EE6               	movwf	postinc1,c
 33052  01C31A  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 33053  01C31C  6EE6               	movwf	postinc1,c
 33054  01C31E  ECF3  F0E6         	call	_UART2_SetRxInterruptHandler	;wreg free
 33055                           
 33056                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 33057  01C322  0139               	movlb	57	; () banked
 33058  01C324  9796               	bcf	150,3,b	;volatile
 33059                           
 33060                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 33061  01C326  0E18               	movlw	low _UART2_Transmit_ISR
 33062  01C328  6EE6               	movwf	postinc1,c
 33063  01C32A  0ECD               	movlw	high _UART2_Transmit_ISR
 33064  01C32C  6EE6               	movwf	postinc1,c
 33065  01C32E  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 33066  01C330  6EE6               	movwf	postinc1,c
 33067  01C332  ECDF  F0E6         	call	_UART2_SetTxInterruptHandler	;wreg free
 33068                           
 33069                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 33070  01C336  013D               	movlb	61	; () banked
 33071  01C338  6BD4               	clrf	212,b	;volatile
 33072                           
 33073                           ; BSR set to: 61
 33074                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 33075  01C33A  6BD6               	clrf	214,b	;volatile
 33076                           
 33077                           ; BSR set to: 61
 33078                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 33079  01C33C  6BD8               	clrf	216,b	;volatile
 33080                           
 33081                           ; BSR set to: 61
 33082                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 33083  01C33E  0EB0               	movlw	176
 33084  01C340  6FDA               	movwf	218,b	;volatile
 33085                           
 33086                           ; BSR set to: 61
 33087                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 33088  01C342  0E80               	movlw	128
 33089  01C344  6FDB               	movwf	219,b	;volatile
 33090                           
 33091                           ; BSR set to: 61
 33092                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 33093  01C346  6BDC               	clrf	220,b	;volatile
 33094                           
 33095                           ; BSR set to: 61
 33096                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 33097  01C348  0E82               	movlw	130
 33098  01C34A  6FDD               	movwf	221,b	;volatile
 33099                           
 33100                           ; BSR set to: 61
 33101                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 33102  01C34C  0E06               	movlw	6
 33103  01C34E  6FDE               	movwf	222,b	;volatile
 33104                           
 33105                           ; BSR set to: 61
 33106                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 33107  01C350  6BDF               	clrf	223,b	;volatile
 33108                           
 33109                           ; BSR set to: 61
 33110                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 33111  01C352  6BE0               	clrf	224,b	;volatile
 33112                           
 33113                           ; BSR set to: 61
 33114                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 33115  01C354  6BE1               	clrf	225,b	;volatile
 33116                           
 33117                           ; BSR set to: 61
 33118                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 33119  01C356  6BE2               	clrf	226,b	;volatile
 33120                           
 33121                           ; BSR set to: 61
 33122                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 33123  01C358  0100               	movlb	0	; () banked
 33124  01C35A  6BA8               	clrf	_uart2TxHead& (0+255),b	;volatile
 33125                           
 33126                           ; BSR set to: 0
 33127                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 33128  01C35C  6A46               	clrf	_uart2TxTail^0,c	;volatile
 33129                           
 33130                           ; BSR set to: 0
 33131                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 33132  01C35E  0E40               	movlw	64
 33133  01C360  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 33134                           
 33135                           ; BSR set to: 0
 33136                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 33137  01C362  6A44               	clrf	_uart2RxHead^0,c	;volatile
 33138                           
 33139                           ; BSR set to: 0
 33140                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 33141  01C364  6BA7               	clrf	_uart2RxTail& (0+255),b	;volatile
 33142                           
 33143                           ; BSR set to: 0
 33144                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 33145  01C366  6BA6               	clrf	_uart2RxCount& (0+255),b	;volatile
 33146                           
 33147                           ; BSR set to: 0
 33148                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 33149  01C368  0139               	movlb	57	; () banked
 33150  01C36A  8596               	bsf	150,2,b	;volatile
 33151                           
 33152                           ; BSR set to: 57
 33153                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 33154  01C36C  0012               	return		;funcret
 33155  01C36E                     __end_of_UART2_Initialize:
 33156                           	opt callstack 0
 33157                           
 33158 ;; *************** function _UART2_SetTxInterruptHandler *****************
 33159 ;; Defined at:
 33160 ;;		line 252 in file "mcc_generated_files/uart2.c"
 33161 ;; Parameters:    Size  Location     Type
 33162 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33163 ;;		 -> UART2_Transmit_ISR(1), 
 33164 ;; Auto vars:     Size  Location     Type
 33165 ;;		None
 33166 ;; Return value:  Size  Location     Type
 33167 ;;                  1  [STACK] void 
 33168 ;; Registers used:
 33169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33170 ;; Tracked objects:
 33171 ;;		On entry : 3F/39
 33172 ;;		On exit  : 0/0
 33173 ;;		Unchanged: 0/0
 33174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33179 ;;Total ram usage:        0 bytes
 33180 ;; Hardware stack levels used:    1
 33181 ;; Hardware stack levels required when called:   15
 33182 ;; This function calls:
 33183 ;;		Nothing
 33184 ;; This function is called by:
 33185 ;;		_UART2_Initialize
 33186 ;; This function uses a reentrant model
 33187 ;;
 33188                           
 33189                           	psect	text129
 33190  01CDBE                     __ptext129:
 33191                           	opt callstack 0
 33192  01CDBE                     _UART2_SetTxInterruptHandler:
 33193                           	opt callstack 13
 33194                           
 33195                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 33196                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33197                           
 33198                           ; BSR set to: 57
 33199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33200                           ;incstack = 0
 33201  01CDBE  50E1               	movf	fsr1l,w,c
 33202  01CDC0  0FFD               	addlw	-3
 33203  01CDC2  6ED9               	movwf	fsr2l,c
 33204  01CDC4  50E2               	movf	fsr1h,w,c
 33205  01CDC6  6EDA               	movwf	fsr2h,c
 33206  01CDC8  0EFF               	movlw	255
 33207  01CDCA  22DA               	addwfc	fsr2h,f,c
 33208  01CDCC  006F FF78  F08A    	movff	postinc2,_UART2_TxInterruptHandler
 33209  01CDD2  006F FF78  F08B    	movff	postinc2,_UART2_TxInterruptHandler+1
 33210  01CDD8  006F FF74  F08C    	movff	postdec2,_UART2_TxInterruptHandler+2
 33211                           
 33212                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33213  01CDDE  52E5               	movf	postdec1,f,c
 33214  01CDE0  52E5               	movf	postdec1,f,c
 33215  01CDE2  52E5               	movf	postdec1,f,c
 33216  01CDE4  0012               	return		;funcret
 33217  01CDE6                     __end_of_UART2_SetTxInterruptHandler:
 33218                           	opt callstack 0
 33219                           
 33220 ;; *************** function _UART2_SetRxInterruptHandler *****************
 33221 ;; Defined at:
 33222 ;;		line 248 in file "mcc_generated_files/uart2.c"
 33223 ;; Parameters:    Size  Location     Type
 33224 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33225 ;;		 -> UART2_Receive_ISR(1), 
 33226 ;; Auto vars:     Size  Location     Type
 33227 ;;		None
 33228 ;; Return value:  Size  Location     Type
 33229 ;;                  1  [STACK] void 
 33230 ;; Registers used:
 33231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33232 ;; Tracked objects:
 33233 ;;		On entry : 3F/39
 33234 ;;		On exit  : 0/0
 33235 ;;		Unchanged: 0/0
 33236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33241 ;;Total ram usage:        0 bytes
 33242 ;; Hardware stack levels used:    1
 33243 ;; Hardware stack levels required when called:   15
 33244 ;; This function calls:
 33245 ;;		Nothing
 33246 ;; This function is called by:
 33247 ;;		_UART2_Initialize
 33248 ;; This function uses a reentrant model
 33249 ;;
 33250                           
 33251                           	psect	text130
 33252  01CDE6                     __ptext130:
 33253                           	opt callstack 0
 33254  01CDE6                     _UART2_SetRxInterruptHandler:
 33255                           	opt callstack 13
 33256                           
 33257                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 33258                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33259                           
 33260                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33261                           ;incstack = 0
 33262  01CDE6  50E1               	movf	fsr1l,w,c
 33263  01CDE8  0FFD               	addlw	-3
 33264  01CDEA  6ED9               	movwf	fsr2l,c
 33265  01CDEC  50E2               	movf	fsr1h,w,c
 33266  01CDEE  6EDA               	movwf	fsr2h,c
 33267  01CDF0  0EFF               	movlw	255
 33268  01CDF2  22DA               	addwfc	fsr2h,f,c
 33269  01CDF4  006F FF78  F08D    	movff	postinc2,_UART2_RxInterruptHandler
 33270  01CDFA  006F FF78  F08E    	movff	postinc2,_UART2_RxInterruptHandler+1
 33271  01CE00  006F FF74  F08F    	movff	postdec2,_UART2_RxInterruptHandler+2
 33272                           
 33273                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33274  01CE06  52E5               	movf	postdec1,f,c
 33275  01CE08  52E5               	movf	postdec1,f,c
 33276  01CE0A  52E5               	movf	postdec1,f,c
 33277  01CE0C  0012               	return		;funcret
 33278  01CE0E                     __end_of_UART2_SetRxInterruptHandler:
 33279                           	opt callstack 0
 33280                           
 33281 ;; *************** function _UART1_Initialize *****************
 33282 ;; Defined at:
 33283 ;;		line 75 in file "mcc_generated_files/uart1.c"
 33284 ;; Parameters:    Size  Location     Type
 33285 ;;		None
 33286 ;; Auto vars:     Size  Location     Type
 33287 ;;		None
 33288 ;; Return value:  Size  Location     Type
 33289 ;;                  1  [STACK] void 
 33290 ;; Registers used:
 33291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 33292 ;; Tracked objects:
 33293 ;;		On entry : 0/39
 33294 ;;		On exit  : 3F/39
 33295 ;;		Unchanged: 0/0
 33296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33301 ;;Total ram usage:        0 bytes
 33302 ;; Hardware stack levels used:    1
 33303 ;; Hardware stack levels required when called:   16
 33304 ;; This function calls:
 33305 ;;		_UART1_SetRxInterruptHandler
 33306 ;; This function is called by:
 33307 ;;		_SYSTEM_Initialize
 33308 ;; This function uses a reentrant model
 33309 ;;
 33310                           
 33311                           	psect	text131
 33312  01C64E                     __ptext131:
 33313                           	opt callstack 0
 33314  01C64E                     _UART1_Initialize:
 33315                           	opt callstack 13
 33316                           
 33317                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 33318                           
 33319                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33320                           ;incstack = 0
 33321  01C64E  0139               	movlb	57	; () banked
 33322  01C650  9793               	bcf	147,3,b	;volatile
 33323                           
 33324                           ; BSR set to: 57
 33325                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 33326  01C652  0EE4               	movlw	low _UART1_Receive_ISR
 33327  01C654  6EE6               	movwf	postinc1,c
 33328  01C656  0ED0               	movlw	high _UART1_Receive_ISR
 33329  01C658  6EE6               	movwf	postinc1,c
 33330  01C65A  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 33331  01C65C  6EE6               	movwf	postinc1,c
 33332  01C65E  EC07  F0E7         	call	_UART1_SetRxInterruptHandler	;wreg free
 33333                           
 33334                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 33335  01C662  013D               	movlb	61	; () banked
 33336  01C664  6BEC               	clrf	236,b	;volatile
 33337                           
 33338                           ; BSR set to: 61
 33339                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 33340  01C666  6BED               	clrf	237,b	;volatile
 33341                           
 33342                           ; BSR set to: 61
 33343                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 33344  01C668  6BEE               	clrf	238,b	;volatile
 33345                           
 33346                           ; BSR set to: 61
 33347                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 33348  01C66A  6BEF               	clrf	239,b	;volatile
 33349                           
 33350                           ; BSR set to: 61
 33351                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 33352  01C66C  6BF0               	clrf	240,b	;volatile
 33353                           
 33354                           ; BSR set to: 61
 33355                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 33356  01C66E  6BF1               	clrf	241,b	;volatile
 33357                           
 33358                           ; BSR set to: 61
 33359                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 33360  01C670  0EB0               	movlw	176
 33361  01C672  6FF2               	movwf	242,b	;volatile
 33362                           
 33363                           ; BSR set to: 61
 33364                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 33365  01C674  0E80               	movlw	128
 33366  01C676  6FF3               	movwf	243,b	;volatile
 33367                           
 33368                           ; BSR set to: 61
 33369                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 33370  01C678  6BF4               	clrf	244,b	;volatile
 33371                           
 33372                           ; BSR set to: 61
 33373                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 33374  01C67A  0E8A               	movlw	138
 33375  01C67C  6FF5               	movwf	245,b	;volatile
 33376                           
 33377                           ; BSR set to: 61
 33378                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 33379  01C67E  6BF6               	clrf	246,b	;volatile
 33380                           
 33381                           ; BSR set to: 61
 33382                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 33383  01C680  6BF7               	clrf	247,b	;volatile
 33384                           
 33385                           ; BSR set to: 61
 33386                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 33387  01C682  6BF8               	clrf	248,b	;volatile
 33388                           
 33389                           ; BSR set to: 61
 33390                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 33391  01C684  6BF9               	clrf	249,b	;volatile
 33392                           
 33393                           ; BSR set to: 61
 33394                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 33395  01C686  6BFA               	clrf	250,b	;volatile
 33396                           
 33397                           ; BSR set to: 61
 33398                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 33399  01C688  6A47               	clrf	_uart1RxHead^0,c	;volatile
 33400                           
 33401                           ; BSR set to: 61
 33402                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 33403  01C68A  0100               	movlb	0	; () banked
 33404  01C68C  6BAA               	clrf	_uart1RxTail& (0+255),b	;volatile
 33405                           
 33406                           ; BSR set to: 0
 33407                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 33408  01C68E  6BA9               	clrf	_uart1RxCount& (0+255),b	;volatile
 33409                           
 33410                           ; BSR set to: 0
 33411                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 33412  01C690  0139               	movlb	57	; () banked
 33413  01C692  8793               	bsf	147,3,b	;volatile
 33414                           
 33415                           ; BSR set to: 57
 33416                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 33417  01C694  0012               	return		;funcret
 33418  01C696                     __end_of_UART1_Initialize:
 33419                           	opt callstack 0
 33420                           
 33421 ;; *************** function _UART1_SetRxInterruptHandler *****************
 33422 ;; Defined at:
 33423 ;;		line 207 in file "mcc_generated_files/uart1.c"
 33424 ;; Parameters:    Size  Location     Type
 33425 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33426 ;;		 -> UART1_Receive_ISR(1), 
 33427 ;; Auto vars:     Size  Location     Type
 33428 ;;		None
 33429 ;; Return value:  Size  Location     Type
 33430 ;;                  1  [STACK] void 
 33431 ;; Registers used:
 33432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33433 ;; Tracked objects:
 33434 ;;		On entry : 3F/39
 33435 ;;		On exit  : 0/0
 33436 ;;		Unchanged: 0/0
 33437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33442 ;;Total ram usage:        0 bytes
 33443 ;; Hardware stack levels used:    1
 33444 ;; Hardware stack levels required when called:   15
 33445 ;; This function calls:
 33446 ;;		Nothing
 33447 ;; This function is called by:
 33448 ;;		_UART1_Initialize
 33449 ;; This function uses a reentrant model
 33450 ;;
 33451                           
 33452                           	psect	text132
 33453  01CE0E                     __ptext132:
 33454                           	opt callstack 0
 33455  01CE0E                     _UART1_SetRxInterruptHandler:
 33456                           	opt callstack 13
 33457                           
 33458                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 33459                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33460                           
 33461                           ; BSR set to: 57
 33462                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33463                           ;incstack = 0
 33464  01CE0E  50E1               	movf	fsr1l,w,c
 33465  01CE10  0FFD               	addlw	-3
 33466  01CE12  6ED9               	movwf	fsr2l,c
 33467  01CE14  50E2               	movf	fsr1h,w,c
 33468  01CE16  6EDA               	movwf	fsr2h,c
 33469  01CE18  0EFF               	movlw	255
 33470  01CE1A  22DA               	addwfc	fsr2h,f,c
 33471  01CE1C  006F FF78  F087    	movff	postinc2,_UART1_RxInterruptHandler
 33472  01CE22  006F FF78  F088    	movff	postinc2,_UART1_RxInterruptHandler+1
 33473  01CE28  006F FF74  F089    	movff	postdec2,_UART1_RxInterruptHandler+2
 33474                           
 33475                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33476  01CE2E  52E5               	movf	postdec1,f,c
 33477  01CE30  52E5               	movf	postdec1,f,c
 33478  01CE32  52E5               	movf	postdec1,f,c
 33479  01CE34  0012               	return		;funcret
 33480  01CE36                     __end_of_UART1_SetRxInterruptHandler:
 33481                           	opt callstack 0
 33482                           
 33483 ;; *************** function _TMR6_Initialize *****************
 33484 ;; Defined at:
 33485 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 33486 ;; Parameters:    Size  Location     Type
 33487 ;;		None
 33488 ;; Auto vars:     Size  Location     Type
 33489 ;;		None
 33490 ;; Return value:  Size  Location     Type
 33491 ;;                  1  [STACK] void 
 33492 ;; Registers used:
 33493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 33494 ;; Tracked objects:
 33495 ;;		On entry : 3F/39
 33496 ;;		On exit  : 0/0
 33497 ;;		Unchanged: 0/0
 33498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33503 ;;Total ram usage:        0 bytes
 33504 ;; Hardware stack levels used:    1
 33505 ;; Hardware stack levels required when called:   16
 33506 ;; This function calls:
 33507 ;;		_TMR6_SetInterruptHandler
 33508 ;; This function is called by:
 33509 ;;		_SYSTEM_Initialize
 33510 ;; This function uses a reentrant model
 33511 ;;
 33512                           
 33513                           	psect	text133
 33514  01CD44                     __ptext133:
 33515                           	opt callstack 0
 33516  01CD44                     _TMR6_Initialize:
 33517                           	opt callstack 13
 33518                           
 33519                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 33520                           
 33521                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33522                           ;incstack = 0
 33523  01CD44  0E01               	movlw	1
 33524  01CD46  6E96               	movwf	150,c	;volatile
 33525                           
 33526                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 33527  01CD48  6A95               	clrf	149,c	;volatile
 33528                           
 33529                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 33530  01CD4A  6A97               	clrf	151,c	;volatile
 33531                           
 33532                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 33533  01CD4C  0E7C               	movlw	124
 33534  01CD4E  6E93               	movwf	147,c	;volatile
 33535                           
 33536                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 33537  01CD50  6A92               	clrf	146,c	;volatile
 33538                           
 33539                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 33540  01CD52  0139               	movlb	57	; () banked
 33541  01CD54  91A9               	bcf	169,0,b	;volatile
 33542                           
 33543                           ; BSR set to: 57
 33544                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 33545  01CD56  8199               	bsf	153,0,b	;volatile
 33546                           
 33547                           ; BSR set to: 57
 33548                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 33549  01CD58  0E6E               	movlw	low _TMR6_DefaultInterruptHandler
 33550  01CD5A  6EE6               	movwf	postinc1,c
 33551  01CD5C  0EC5               	movlw	high _TMR6_DefaultInterruptHandler
 33552  01CD5E  6EE6               	movwf	postinc1,c
 33553  01CD60  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 33554  01CD62  6EE6               	movwf	postinc1,c
 33555  01CD64  EC1B  F0E7         	call	_TMR6_SetInterruptHandler	;wreg free
 33556                           
 33557                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 33558  01CD68  0EE0               	movlw	224
 33559  01CD6A  6E94               	movwf	148,c	;volatile
 33560                           
 33561                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33562  01CD6C  0012               	return		;funcret
 33563  01CD6E                     __end_of_TMR6_Initialize:
 33564                           	opt callstack 0
 33565                           
 33566 ;; *************** function _TMR6_SetInterruptHandler *****************
 33567 ;; Defined at:
 33568 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 33569 ;; Parameters:    Size  Location     Type
 33570 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33571 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 33572 ;; Auto vars:     Size  Location     Type
 33573 ;;		None
 33574 ;; Return value:  Size  Location     Type
 33575 ;;                  1  [STACK] void 
 33576 ;; Registers used:
 33577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33578 ;; Tracked objects:
 33579 ;;		On entry : 3F/39
 33580 ;;		On exit  : 0/0
 33581 ;;		Unchanged: 0/0
 33582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33587 ;;Total ram usage:        0 bytes
 33588 ;; Hardware stack levels used:    1
 33589 ;; Hardware stack levels required when called:   15
 33590 ;; This function calls:
 33591 ;;		Nothing
 33592 ;; This function is called by:
 33593 ;;		_TMR6_Initialize
 33594 ;; This function uses a reentrant model
 33595 ;;
 33596                           
 33597                           	psect	text134
 33598  01CE36                     __ptext134:
 33599                           	opt callstack 0
 33600  01CE36                     _TMR6_SetInterruptHandler:
 33601                           	opt callstack 13
 33602                           
 33603                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 33604                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33605                           
 33606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33607                           ;incstack = 0
 33608  01CE36  50E1               	movf	fsr1l,w,c
 33609  01CE38  0FFD               	addlw	-3
 33610  01CE3A  6ED9               	movwf	fsr2l,c
 33611  01CE3C  50E2               	movf	fsr1h,w,c
 33612  01CE3E  6EDA               	movwf	fsr2h,c
 33613  01CE40  0EFF               	movlw	255
 33614  01CE42  22DA               	addwfc	fsr2h,f,c
 33615  01CE44  006F FF78  F07E    	movff	postinc2,_TMR6_InterruptHandler
 33616  01CE4A  006F FF78  F07F    	movff	postinc2,_TMR6_InterruptHandler+1
 33617  01CE50  006F FF74  F080    	movff	postdec2,_TMR6_InterruptHandler+2
 33618                           
 33619                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33620  01CE56  52E5               	movf	postdec1,f,c
 33621  01CE58  52E5               	movf	postdec1,f,c
 33622  01CE5A  52E5               	movf	postdec1,f,c
 33623  01CE5C  0012               	return		;funcret
 33624  01CE5E                     __end_of_TMR6_SetInterruptHandler:
 33625                           	opt callstack 0
 33626                           
 33627 ;; *************** function _TMR5_Initialize *****************
 33628 ;; Defined at:
 33629 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 33630 ;; Parameters:    Size  Location     Type
 33631 ;;		None
 33632 ;; Auto vars:     Size  Location     Type
 33633 ;;		None
 33634 ;; Return value:  Size  Location     Type
 33635 ;;                  1  [STACK] void 
 33636 ;; Registers used:
 33637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 33638 ;; Tracked objects:
 33639 ;;		On entry : 0/39
 33640 ;;		On exit  : 0/0
 33641 ;;		Unchanged: 0/0
 33642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33647 ;;Total ram usage:        0 bytes
 33648 ;; Hardware stack levels used:    1
 33649 ;; Hardware stack levels required when called:   16
 33650 ;; This function calls:
 33651 ;;		_TMR5_SetInterruptHandler
 33652 ;; This function is called by:
 33653 ;;		_SYSTEM_Initialize
 33654 ;; This function uses a reentrant model
 33655 ;;
 33656                           
 33657                           	psect	text135
 33658  01C696                     __ptext135:
 33659                           	opt callstack 0
 33660  01C696                     _TMR5_Initialize:
 33661                           	opt callstack 13
 33662                           
 33663                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 33664                           
 33665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33666                           ;incstack = 0
 33667  01C696  6A9B               	clrf	155,c	;volatile
 33668                           
 33669                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 33670  01C698  6A9C               	clrf	156,c	;volatile
 33671                           
 33672                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 33673  01C69A  0E01               	movlw	1
 33674  01C69C  6E9D               	movwf	157,c	;volatile
 33675                           
 33676                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 33677  01C69E  0E63               	movlw	99
 33678  01C6A0  6E99               	movwf	153,c	;volatile
 33679                           
 33680                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 33681  01C6A2  0EC0               	movlw	192
 33682  01C6A4  6E98               	movwf	152,c	;volatile
 33683                           
 33684                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 33685  01C6A6  5098               	movf	152,w,c	;volatile
 33686  01C6A8  006F FE64  F001    	movff	16281,btemp	;volatile
 33687  01C6AE  6A02               	clrf	(btemp+1)^0,c
 33688  01C6B0  0060  F004  F002   	movff	btemp,btemp+1
 33689  01C6B6  6A01               	clrf	btemp^0,c
 33690  01C6B8  1001               	iorwf	btemp^0,w,c
 33691  01C6BA  0100               	movlb	0	; () banked
 33692  01C6BC  6F9E               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 33693  01C6BE  5002               	movf	(btemp+1)^0,w,c
 33694  01C6C0  6F9F               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 33695                           
 33696                           ; BSR set to: 0
 33697                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 33698  01C6C2  0139               	movlb	57	; () banked
 33699  01C6C4  9DA8               	bcf	168,6,b	;volatile
 33700                           
 33701                           ; BSR set to: 57
 33702                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 33703  01C6C6  8D98               	bsf	152,6,b	;volatile
 33704                           
 33705                           ; BSR set to: 57
 33706                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 33707  01C6C8  0E62               	movlw	low _TMR5_DefaultInterruptHandler
 33708  01C6CA  6EE6               	movwf	postinc1,c
 33709  01C6CC  0ECA               	movlw	high _TMR5_DefaultInterruptHandler
 33710  01C6CE  6EE6               	movwf	postinc1,c
 33711  01C6D0  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 33712  01C6D2  6EE6               	movwf	postinc1,c
 33713  01C6D4  EC2F  F0E7         	call	_TMR5_SetInterruptHandler	;wreg free
 33714                           
 33715                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 33716  01C6D8  0E31               	movlw	49
 33717  01C6DA  6E9A               	movwf	154,c	;volatile
 33718                           
 33719                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33720  01C6DC  0012               	return		;funcret
 33721  01C6DE                     __end_of_TMR5_Initialize:
 33722                           	opt callstack 0
 33723                           
 33724 ;; *************** function _TMR5_SetInterruptHandler *****************
 33725 ;; Defined at:
 33726 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 33727 ;; Parameters:    Size  Location     Type
 33728 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33729 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 33730 ;; Auto vars:     Size  Location     Type
 33731 ;;		None
 33732 ;; Return value:  Size  Location     Type
 33733 ;;                  1  [STACK] void 
 33734 ;; Registers used:
 33735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33736 ;; Tracked objects:
 33737 ;;		On entry : 3F/39
 33738 ;;		On exit  : 0/0
 33739 ;;		Unchanged: 0/0
 33740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33745 ;;Total ram usage:        0 bytes
 33746 ;; Hardware stack levels used:    1
 33747 ;; Hardware stack levels required when called:   15
 33748 ;; This function calls:
 33749 ;;		Nothing
 33750 ;; This function is called by:
 33751 ;;		_TMR5_Initialize
 33752 ;; This function uses a reentrant model
 33753 ;;
 33754                           
 33755                           	psect	text136
 33756  01CE5E                     __ptext136:
 33757                           	opt callstack 0
 33758  01CE5E                     _TMR5_SetInterruptHandler:
 33759                           	opt callstack 13
 33760                           
 33761                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 33762                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33763                           
 33764                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33765                           ;incstack = 0
 33766  01CE5E  50E1               	movf	fsr1l,w,c
 33767  01CE60  0FFD               	addlw	-3
 33768  01CE62  6ED9               	movwf	fsr2l,c
 33769  01CE64  50E2               	movf	fsr1h,w,c
 33770  01CE66  6EDA               	movwf	fsr2h,c
 33771  01CE68  0EFF               	movlw	255
 33772  01CE6A  22DA               	addwfc	fsr2h,f,c
 33773  01CE6C  006F FF78  F07B    	movff	postinc2,_TMR5_InterruptHandler
 33774  01CE72  006F FF78  F07C    	movff	postinc2,_TMR5_InterruptHandler+1
 33775  01CE78  006F FF74  F07D    	movff	postdec2,_TMR5_InterruptHandler+2
 33776                           
 33777                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33778  01CE7E  52E5               	movf	postdec1,f,c
 33779  01CE80  52E5               	movf	postdec1,f,c
 33780  01CE82  52E5               	movf	postdec1,f,c
 33781  01CE84  0012               	return		;funcret
 33782  01CE86                     __end_of_TMR5_SetInterruptHandler:
 33783                           	opt callstack 0
 33784                           
 33785 ;; *************** function _TMR3_Initialize *****************
 33786 ;; Defined at:
 33787 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 33788 ;; Parameters:    Size  Location     Type
 33789 ;;		None
 33790 ;; Auto vars:     Size  Location     Type
 33791 ;;		None
 33792 ;; Return value:  Size  Location     Type
 33793 ;;                  1  [STACK] void 
 33794 ;; Registers used:
 33795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 33796 ;; Tracked objects:
 33797 ;;		On entry : 0/39
 33798 ;;		On exit  : 0/0
 33799 ;;		Unchanged: 0/0
 33800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33805 ;;Total ram usage:        0 bytes
 33806 ;; Hardware stack levels used:    1
 33807 ;; Hardware stack levels required when called:   16
 33808 ;; This function calls:
 33809 ;;		_TMR3_SetInterruptHandler
 33810 ;; This function is called by:
 33811 ;;		_SYSTEM_Initialize
 33812 ;; This function uses a reentrant model
 33813 ;;
 33814                           
 33815                           	psect	text137
 33816  01C6DE                     __ptext137:
 33817                           	opt callstack 0
 33818  01C6DE                     _TMR3_Initialize:
 33819                           	opt callstack 13
 33820                           
 33821                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 33822                           
 33823                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33824                           ;incstack = 0
 33825  01C6DE  6AA7               	clrf	167,c	;volatile
 33826                           
 33827                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 33828  01C6E0  6AA8               	clrf	168,c	;volatile
 33829                           
 33830                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 33831  01C6E2  0E01               	movlw	1
 33832  01C6E4  6EA9               	movwf	169,c	;volatile
 33833                           
 33834                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 33835  01C6E6  0E3C               	movlw	60
 33836  01C6E8  6EA5               	movwf	165,c	;volatile
 33837                           
 33838                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 33839  01C6EA  0EB0               	movlw	176
 33840  01C6EC  6EA4               	movwf	164,c	;volatile
 33841                           
 33842                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 33843  01C6EE  50A4               	movf	164,w,c	;volatile
 33844  01C6F0  006F FE94  F001    	movff	16293,btemp	;volatile
 33845  01C6F6  6A02               	clrf	(btemp+1)^0,c
 33846  01C6F8  0060  F004  F002   	movff	btemp,btemp+1
 33847  01C6FE  6A01               	clrf	btemp^0,c
 33848  01C700  1001               	iorwf	btemp^0,w,c
 33849  01C702  0100               	movlb	0	; () banked
 33850  01C704  6F9A               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 33851  01C706  5002               	movf	(btemp+1)^0,w,c
 33852  01C708  6F9B               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 33853                           
 33854                           ; BSR set to: 0
 33855                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 33856  01C70A  0139               	movlb	57	; () banked
 33857  01C70C  9DA6               	bcf	166,6,b	;volatile
 33858                           
 33859                           ; BSR set to: 57
 33860                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 33861  01C70E  8D96               	bsf	150,6,b	;volatile
 33862                           
 33863                           ; BSR set to: 57
 33864                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 33865  01C710  0EF0               	movlw	low _TMR3_DefaultInterruptHandler
 33866  01C712  6EE6               	movwf	postinc1,c
 33867  01C714  0ED3               	movlw	high _TMR3_DefaultInterruptHandler
 33868  01C716  6EE6               	movwf	postinc1,c
 33869  01C718  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 33870  01C71A  6EE6               	movwf	postinc1,c
 33871  01C71C  EC43  F0E7         	call	_TMR3_SetInterruptHandler	;wreg free
 33872                           
 33873                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 33874  01C720  0E31               	movlw	49
 33875  01C722  6EA6               	movwf	166,c	;volatile
 33876                           
 33877                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33878  01C724  0012               	return		;funcret
 33879  01C726                     __end_of_TMR3_Initialize:
 33880                           	opt callstack 0
 33881                           
 33882 ;; *************** function _TMR3_SetInterruptHandler *****************
 33883 ;; Defined at:
 33884 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 33885 ;; Parameters:    Size  Location     Type
 33886 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33887 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 33888 ;; Auto vars:     Size  Location     Type
 33889 ;;		None
 33890 ;; Return value:  Size  Location     Type
 33891 ;;                  1  [STACK] void 
 33892 ;; Registers used:
 33893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33894 ;; Tracked objects:
 33895 ;;		On entry : 0/0
 33896 ;;		On exit  : 0/0
 33897 ;;		Unchanged: 0/0
 33898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33903 ;;Total ram usage:        0 bytes
 33904 ;; Hardware stack levels used:    1
 33905 ;; Hardware stack levels required when called:   15
 33906 ;; This function calls:
 33907 ;;		Nothing
 33908 ;; This function is called by:
 33909 ;;		_TMR3_Initialize
 33910 ;;		_init_bsoc
 33911 ;; This function uses a reentrant model
 33912 ;;
 33913                           
 33914                           	psect	text138
 33915  01CE86                     __ptext138:
 33916                           	opt callstack 0
 33917  01CE86                     _TMR3_SetInterruptHandler:
 33918                           	opt callstack 14
 33919                           
 33920                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 33921                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33922                           
 33923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33924                           ;incstack = 0
 33925  01CE86  50E1               	movf	fsr1l,w,c
 33926  01CE88  0FFD               	addlw	-3
 33927  01CE8A  6ED9               	movwf	fsr2l,c
 33928  01CE8C  50E2               	movf	fsr1h,w,c
 33929  01CE8E  6EDA               	movwf	fsr2h,c
 33930  01CE90  0EFF               	movlw	255
 33931  01CE92  22DA               	addwfc	fsr2h,f,c
 33932  01CE94  006F FF78  F078    	movff	postinc2,_TMR3_InterruptHandler
 33933  01CE9A  006F FF78  F079    	movff	postinc2,_TMR3_InterruptHandler+1
 33934  01CEA0  006F FF74  F07A    	movff	postdec2,_TMR3_InterruptHandler+2
 33935                           
 33936                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33937  01CEA6  52E5               	movf	postdec1,f,c
 33938  01CEA8  52E5               	movf	postdec1,f,c
 33939  01CEAA  52E5               	movf	postdec1,f,c
 33940  01CEAC  0012               	return		;funcret
 33941  01CEAE                     __end_of_TMR3_SetInterruptHandler:
 33942                           	opt callstack 0
 33943                           
 33944 ;; *************** function _TMR2_Initialize *****************
 33945 ;; Defined at:
 33946 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 33947 ;; Parameters:    Size  Location     Type
 33948 ;;		None
 33949 ;; Auto vars:     Size  Location     Type
 33950 ;;		None
 33951 ;; Return value:  Size  Location     Type
 33952 ;;                  1  [STACK] void 
 33953 ;; Registers used:
 33954 ;;		wreg, status,2
 33955 ;; Tracked objects:
 33956 ;;		On entry : 3F/3F
 33957 ;;		On exit  : 3F/39
 33958 ;;		Unchanged: 0/0
 33959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33964 ;;Total ram usage:        0 bytes
 33965 ;; Hardware stack levels used:    1
 33966 ;; Hardware stack levels required when called:   15
 33967 ;; This function calls:
 33968 ;;		Nothing
 33969 ;; This function is called by:
 33970 ;;		_SYSTEM_Initialize
 33971 ;; This function uses a reentrant model
 33972 ;;
 33973                           
 33974                           	psect	text139
 33975  01D22A                     __ptext139:
 33976                           	opt callstack 0
 33977  01D22A                     _TMR2_Initialize:
 33978                           	opt callstack 14
 33979                           
 33980                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 33981                           
 33982                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33983                           ;incstack = 0
 33984  01D22A  0E01               	movlw	1
 33985  01D22C  6EAE               	movwf	174,c	;volatile
 33986                           
 33987                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 33988  01D22E  6AAD               	clrf	173,c	;volatile
 33989                           
 33990                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 33991  01D230  6AAF               	clrf	175,c	;volatile
 33992                           
 33993                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 33994  01D232  0E63               	movlw	99
 33995  01D234  6EAB               	movwf	171,c	;volatile
 33996                           
 33997                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 33998  01D236  6AAA               	clrf	170,c	;volatile
 33999                           
 34000                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 34001  01D238  0139               	movlb	57	; () banked
 34002  01D23A  95A4               	bcf	164,2,b	;volatile
 34003                           
 34004                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 34005  01D23C  0EC0               	movlw	192
 34006  01D23E  6EAC               	movwf	172,c	;volatile
 34007                           
 34008                           ; BSR set to: 57
 34009                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34010  01D240  0012               	return		;funcret
 34011  01D242                     __end_of_TMR2_Initialize:
 34012                           	opt callstack 0
 34013                           
 34014 ;; *************** function _SPI1_Initialize *****************
 34015 ;; Defined at:
 34016 ;;		line 64 in file "mcc_generated_files/spi1.c"
 34017 ;; Parameters:    Size  Location     Type
 34018 ;;		None
 34019 ;; Auto vars:     Size  Location     Type
 34020 ;;		None
 34021 ;; Return value:  Size  Location     Type
 34022 ;;                  1  [STACK] void 
 34023 ;; Registers used:
 34024 ;;		wreg, status,2
 34025 ;; Tracked objects:
 34026 ;;		On entry : 3F/39
 34027 ;;		On exit  : 3F/3D
 34028 ;;		Unchanged: 0/0
 34029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34034 ;;Total ram usage:        0 bytes
 34035 ;; Hardware stack levels used:    1
 34036 ;; Hardware stack levels required when called:   15
 34037 ;; This function calls:
 34038 ;;		Nothing
 34039 ;; This function is called by:
 34040 ;;		_SYSTEM_Initialize
 34041 ;; This function uses a reentrant model
 34042 ;;
 34043                           
 34044                           	psect	text140
 34045  01D258                     __ptext140:
 34046                           	opt callstack 0
 34047  01D258                     _SPI1_Initialize:
 34048                           	opt callstack 14
 34049                           
 34050                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 34051                           
 34052                           ; BSR set to: 57
 34053                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34054                           ;incstack = 0
 34055  01D258  0E40               	movlw	64
 34056  01D25A  013D               	movlb	61	; () banked
 34057  01D25C  6F15               	movwf	21,b	;volatile
 34058                           
 34059                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 34060  01D25E  0E03               	movlw	3
 34061  01D260  6F16               	movwf	22,b	;volatile
 34062                           
 34063                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 34064  01D262  0E4F               	movlw	79
 34065  01D264  6F19               	movwf	25,b	;volatile
 34066                           
 34067                           ; BSR set to: 61
 34068                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 34069  01D266  6B1C               	clrf	28,b	;volatile
 34070                           
 34071                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 34072  01D268  0E83               	movlw	131
 34073  01D26A  6F14               	movwf	20,b	;volatile
 34074                           
 34075                           ; BSR set to: 61
 34076                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34077  01D26C  0012               	return		;funcret
 34078  01D26E                     __end_of_SPI1_Initialize:
 34079                           	opt callstack 0
 34080                           
 34081 ;; *************** function _PWM8_Initialize *****************
 34082 ;; Defined at:
 34083 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 34084 ;; Parameters:    Size  Location     Type
 34085 ;;		None
 34086 ;; Auto vars:     Size  Location     Type
 34087 ;;		None
 34088 ;; Return value:  Size  Location     Type
 34089 ;;                  1  [STACK] void 
 34090 ;; Registers used:
 34091 ;;		wreg, status,2
 34092 ;; Tracked objects:
 34093 ;;		On entry : 0/0
 34094 ;;		On exit  : 3F/3F
 34095 ;;		Unchanged: 0/0
 34096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34101 ;;Total ram usage:        0 bytes
 34102 ;; Hardware stack levels used:    1
 34103 ;; Hardware stack levels required when called:   15
 34104 ;; This function calls:
 34105 ;;		Nothing
 34106 ;; This function is called by:
 34107 ;;		_SYSTEM_Initialize
 34108 ;; This function uses a reentrant model
 34109 ;;
 34110                           
 34111                           	psect	text141
 34112  01D26E                     __ptext141:
 34113                           	opt callstack 0
 34114  01D26E                     _PWM8_Initialize:
 34115                           	opt callstack 14
 34116                           
 34117                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 34118                           
 34119                           ; BSR set to: 61
 34120                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34121                           ;incstack = 0
 34122  01D26E  0E80               	movlw	128
 34123  01D270  6E62               	movwf	98,c	;volatile
 34124                           
 34125                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 34126  01D272  6A61               	clrf	97,c	;volatile
 34127                           
 34128                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 34129  01D274  0E40               	movlw	64
 34130  01D276  6E60               	movwf	96,c	;volatile
 34131                           
 34132                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 34133  01D278  013F               	movlb	63	; () banked
 34134  01D27A  515F               	movf	95,w,b	;volatile
 34135  01D27C  0B3F               	andlw	-193
 34136  01D27E  0940               	iorlw	64
 34137  01D280  6F5F               	movwf	95,b	;volatile
 34138                           
 34139                           ; BSR set to: 63
 34140                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34141  01D282  0012               	return		;funcret
 34142  01D284                     __end_of_PWM8_Initialize:
 34143                           	opt callstack 0
 34144                           
 34145 ;; *************** function _PMD_Initialize *****************
 34146 ;; Defined at:
 34147 ;;		line 91 in file "mcc_generated_files/mcc.c"
 34148 ;; Parameters:    Size  Location     Type
 34149 ;;		None
 34150 ;; Auto vars:     Size  Location     Type
 34151 ;;		None
 34152 ;; Return value:  Size  Location     Type
 34153 ;;                  1  [STACK] void 
 34154 ;; Registers used:
 34155 ;;		None
 34156 ;; Tracked objects:
 34157 ;;		On entry : 3F/39
 34158 ;;		On exit  : 3F/39
 34159 ;;		Unchanged: 0/0
 34160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34165 ;;Total ram usage:        0 bytes
 34166 ;; Hardware stack levels used:    1
 34167 ;; Hardware stack levels required when called:   15
 34168 ;; This function calls:
 34169 ;;		Nothing
 34170 ;; This function is called by:
 34171 ;;		_SYSTEM_Initialize
 34172 ;; This function uses a reentrant model
 34173 ;;
 34174                           
 34175                           	psect	text142
 34176  01D29A                     __ptext142:
 34177                           	opt callstack 0
 34178  01D29A                     _PMD_Initialize:
 34179                           	opt callstack 14
 34180                           
 34181                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 34182                           
 34183                           ; BSR set to: 63
 34184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34185                           ;incstack = 0
 34186  01D29A  0139               	movlb	57	; () banked
 34187  01D29C  6BC0               	clrf	192,b	;volatile
 34188                           
 34189                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 34190  01D29E  6BC1               	clrf	193,b	;volatile
 34191                           
 34192                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 34193  01D2A0  6BC2               	clrf	194,b	;volatile
 34194                           
 34195                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 34196  01D2A2  6BC3               	clrf	195,b	;volatile
 34197                           
 34198                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 34199  01D2A4  6BC4               	clrf	196,b	;volatile
 34200                           
 34201                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 34202  01D2A6  6BC5               	clrf	197,b	;volatile
 34203                           
 34204                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 34205  01D2A8  6BC6               	clrf	198,b	;volatile
 34206                           
 34207                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 34208  01D2AA  6BC7               	clrf	199,b	;volatile
 34209                           
 34210                           ; BSR set to: 57
 34211                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 34212  01D2AC  0012               	return		;funcret
 34213  01D2AE                     __end_of_PMD_Initialize:
 34214                           	opt callstack 0
 34215                           
 34216 ;; *************** function _PIN_MANAGER_Initialize *****************
 34217 ;; Defined at:
 34218 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 34219 ;; Parameters:    Size  Location     Type
 34220 ;;		None
 34221 ;; Auto vars:     Size  Location     Type
 34222 ;;		None
 34223 ;; Return value:  Size  Location     Type
 34224 ;;                  1  [STACK] void 
 34225 ;; Registers used:
 34226 ;;		wreg, status,2
 34227 ;; Tracked objects:
 34228 ;;		On entry : 3F/39
 34229 ;;		On exit  : 3F/3A
 34230 ;;		Unchanged: 0/0
 34231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34236 ;;Total ram usage:        0 bytes
 34237 ;; Hardware stack levels used:    1
 34238 ;; Hardware stack levels required when called:   15
 34239 ;; This function calls:
 34240 ;;		Nothing
 34241 ;; This function is called by:
 34242 ;;		_SYSTEM_Initialize
 34243 ;; This function uses a reentrant model
 34244 ;;
 34245                           
 34246                           	psect	text143
 34247  01B9CE                     __ptext143:
 34248                           	opt callstack 0
 34249  01B9CE                     _PIN_MANAGER_Initialize:
 34250                           	opt callstack 14
 34251                           
 34252                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 34253                           
 34254                           ; BSR set to: 57
 34255                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34256                           ;incstack = 0
 34257  01B9CE  0E07               	movlw	7
 34258  01B9D0  6EBE               	movwf	190,c	;volatile
 34259                           
 34260                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 34261  01B9D2  6ABD               	clrf	189,c	;volatile
 34262                           
 34263                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 34264  01B9D4  6ABA               	clrf	186,c	;volatile
 34265                           
 34266                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 34267  01B9D6  0E23               	movlw	35
 34268  01B9D8  6EBF               	movwf	191,c	;volatile
 34269                           
 34270                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 34271  01B9DA  6ABB               	clrf	187,c	;volatile
 34272                           
 34273                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 34274  01B9DC  0E07               	movlw	7
 34275  01B9DE  6EBC               	movwf	188,c	;volatile
 34276                           
 34277                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 34278  01B9E0  6AC6               	clrf	198,c	;volatile
 34279                           
 34280                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 34281  01B9E2  0E0C               	movlw	12
 34282  01B9E4  6EC7               	movwf	199,c	;volatile
 34283                           
 34284                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 34285  01B9E6  68C2               	setf	194,c	;volatile
 34286                           
 34287                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 34288  01B9E8  0EBF               	movlw	191
 34289  01B9EA  6EC3               	movwf	195,c	;volatile
 34290                           
 34291                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 34292  01B9EC  0E90               	movlw	144
 34293  01B9EE  6EC4               	movwf	196,c	;volatile
 34294                           
 34295                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 34296  01B9F0  0E0C               	movlw	12
 34297  01B9F2  6EC5               	movwf	197,c	;volatile
 34298                           
 34299                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 34300  01B9F4  013A               	movlb	58	; () banked
 34301  01B9F6  6B70               	clrf	112,b	;volatile
 34302                           
 34303                           ; BSR set to: 58
 34304                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 34305  01B9F8  6B60               	clrf	96,b	;volatile
 34306                           
 34307                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 34308  01B9FA  0E3C               	movlw	60
 34309  01B9FC  6F50               	movwf	80,b	;volatile
 34310                           
 34311                           ; BSR set to: 58
 34312                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 34313  01B9FE  6B80               	clrf	128,b	;volatile
 34314                           
 34315                           ; BSR set to: 58
 34316                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 34317  01BA00  6B90               	clrf	144,b	;volatile
 34318                           
 34319                           ; BSR set to: 58
 34320                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 34321  01BA02  6940               	setf	64,b	;volatile
 34322                           
 34323                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 34324  01BA04  0E0C               	movlw	12
 34325  01BA06  6F71               	movwf	113,b	;volatile
 34326                           
 34327                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 34328  01BA08  0E0C               	movlw	12
 34329  01BA0A  6F91               	movwf	145,b	;volatile
 34330                           
 34331                           ; BSR set to: 58
 34332                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 34333  01BA0C  6B81               	clrf	129,b	;volatile
 34334                           
 34335                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 34336  01BA0E  0E83               	movlw	131
 34337  01BA10  6F51               	movwf	81,b	;volatile
 34338                           
 34339                           ; BSR set to: 58
 34340                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 34341  01BA12  6B41               	clrf	65,b	;volatile
 34342                           
 34343                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 34344  01BA14  0E97               	movlw	151
 34345  01BA16  6F61               	movwf	97,b	;volatile
 34346                           
 34347                           ; BSR set to: 58
 34348                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 34349  01BA18  6B82               	clrf	130,b	;volatile
 34350                           
 34351                           ; BSR set to: 58
 34352                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 34353  01BA1A  6B92               	clrf	146,b	;volatile
 34354                           
 34355                           ; BSR set to: 58
 34356                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 34357  01BA1C  6B42               	clrf	66,b	;volatile
 34358                           
 34359                           ; BSR set to: 58
 34360                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 34361  01BA1E  6B52               	clrf	82,b	;volatile
 34362                           
 34363                           ; BSR set to: 58
 34364                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 34365  01BA20  6B62               	clrf	98,b	;volatile
 34366                           
 34367                           ; BSR set to: 58
 34368                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 34369  01BA22  6B72               	clrf	114,b	;volatile
 34370                           
 34371                           ; BSR set to: 58
 34372                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 34373  01BA24  6943               	setf	67,b	;volatile
 34374                           
 34375                           ; BSR set to: 58
 34376                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 34377  01BA26  6953               	setf	83,b	;volatile
 34378                           
 34379                           ; BSR set to: 58
 34380                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 34381  01BA28  6963               	setf	99,b	;volatile
 34382                           
 34383                           ; BSR set to: 58
 34384                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 34385  01BA2A  6973               	setf	115,b	;volatile
 34386                           
 34387                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 34388  01BA2C  0E07               	movlw	7
 34389  01BA2E  6F83               	movwf	131,b	;volatile
 34390                           
 34391                           ; BSR set to: 58
 34392                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 34393  01BA30  6993               	setf	147,b	;volatile
 34394                           
 34395                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 34396  01BA32  0E0F               	movlw	15
 34397  01BA34  6FE8               	movwf	232,b	;volatile
 34398                           
 34399                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 34400  01BA36  0E13               	movlw	19
 34401  01BA38  6FDE               	movwf	222,b	;volatile
 34402                           
 34403                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 34404  01BA3A  0E16               	movlw	22
 34405  01BA3C  6F0E               	movwf	14,b	;volatile
 34406                           
 34407                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 34408  01BA3E  0E1E               	movlw	30
 34409  01BA40  6F13               	movwf	19,b	;volatile
 34410                           
 34411                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 34412  01BA42  0E08               	movlw	8
 34413  01BA44  6FC0               	movwf	192,b	;volatile
 34414                           
 34415                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 34416  01BA46  0E10               	movlw	16
 34417  01BA48  6F19               	movwf	25,b	;volatile
 34418                           
 34419                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 34420  01BA4A  0E09               	movlw	9
 34421  01BA4C  6FC1               	movwf	193,b	;volatile
 34422                           
 34423                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 34424  01BA4E  0E1F               	movlw	31
 34425  01BA50  6F15               	movwf	21,b	;volatile
 34426                           
 34427                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 34428  01BA52  0E13               	movlw	19
 34429  01BA54  6F16               	movwf	22,b	;volatile
 34430                           
 34431                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 34432  01BA56  0E17               	movlw	23
 34433  01BA58  6FE5               	movwf	229,b	;volatile
 34434                           
 34435                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 34436  01BA5A  0E14               	movlw	20
 34437  01BA5C  6FDF               	movwf	223,b	;volatile
 34438                           
 34439                           ; BSR set to: 58
 34440                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 34441  01BA5E  0012               	return		;funcret
 34442  01BA60                     __end_of_PIN_MANAGER_Initialize:
 34443                           	opt callstack 0
 34444                           
 34445 ;; *************** function _OSCILLATOR_Initialize *****************
 34446 ;; Defined at:
 34447 ;;		line 73 in file "mcc_generated_files/mcc.c"
 34448 ;; Parameters:    Size  Location     Type
 34449 ;;		None
 34450 ;; Auto vars:     Size  Location     Type
 34451 ;;		None
 34452 ;; Return value:  Size  Location     Type
 34453 ;;                  1  [STACK] void 
 34454 ;; Registers used:
 34455 ;;		wreg, status,2
 34456 ;; Tracked objects:
 34457 ;;		On entry : 3F/3A
 34458 ;;		On exit  : 3F/39
 34459 ;;		Unchanged: 0/0
 34460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34465 ;;Total ram usage:        0 bytes
 34466 ;; Hardware stack levels used:    1
 34467 ;; Hardware stack levels required when called:   15
 34468 ;; This function calls:
 34469 ;;		Nothing
 34470 ;; This function is called by:
 34471 ;;		_SYSTEM_Initialize
 34472 ;; This function uses a reentrant model
 34473 ;;
 34474                           
 34475                           	psect	text144
 34476  01D284                     __ptext144:
 34477                           	opt callstack 0
 34478  01D284                     _OSCILLATOR_Initialize:
 34479                           	opt callstack 14
 34480                           
 34481                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 34482                           
 34483                           ; BSR set to: 58
 34484                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34485                           ;incstack = 0
 34486  01D284  0E20               	movlw	32
 34487  01D286  0139               	movlb	57	; () banked
 34488  01D288  6FD9               	movwf	217,b	;volatile
 34489                           
 34490                           ; BSR set to: 57
 34491                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 34492  01D28A  6BDB               	clrf	219,b	;volatile
 34493                           
 34494                           ; BSR set to: 57
 34495                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 34496  01D28C  6BDD               	clrf	221,b	;volatile
 34497                           
 34498                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 34499  01D28E  0E02               	movlw	2
 34500  01D290  6FDF               	movwf	223,b	;volatile
 34501                           
 34502                           ; BSR set to: 57
 34503                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 34504  01D292  6BDE               	clrf	222,b	;volatile
 34505  01D294                     l171:
 34506                           
 34507                           ; BSR set to: 57
 34508                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 34509  01D294  B1DC               	btfsc	220,0,b	;volatile
 34510  01D296  0012               	return	
 34511  01D298  D7FD               	goto	l171
 34512  01D29A                     __end_of_OSCILLATOR_Initialize:
 34513                           	opt callstack 0
 34514                           
 34515 ;; *************** function _INTERRUPT_Initialize *****************
 34516 ;; Defined at:
 34517 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 34518 ;; Parameters:    Size  Location     Type
 34519 ;;		None
 34520 ;; Auto vars:     Size  Location     Type
 34521 ;;  state           1  [STACK] _Bool 
 34522 ;; Return value:  Size  Location     Type
 34523 ;;                  1  [STACK] void 
 34524 ;; Registers used:
 34525 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 34526 ;; Tracked objects:
 34527 ;;		On entry : 0/0
 34528 ;;		On exit  : 3F/39
 34529 ;;		Unchanged: 0/0
 34530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34535 ;;Total ram usage:        0 bytes
 34536 ;; Hardware stack levels used:    1
 34537 ;; Hardware stack levels required when called:   15
 34538 ;; This function calls:
 34539 ;;		Nothing
 34540 ;; This function is called by:
 34541 ;;		_SYSTEM_Initialize
 34542 ;; This function uses a reentrant model
 34543 ;;
 34544                           
 34545                           	psect	text145
 34546  01C180                     __ptext145:
 34547                           	opt callstack 0
 34548  01C180                     _INTERRUPT_Initialize:
 34549                           	opt callstack 0
 34550                           
 34551                           ; BSR set to: 57
 34552                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34553  01C180  52E6               	movf	postinc1,f,c
 34554                           
 34555                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 34556                           
 34557                           ;incstack = 0
 34558  01C182  8AD2               	bsf	210,5,c	;volatile
 34559                           
 34560                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 34561  01C184  AED2               	btfss	16338,7,c	;volatile
 34562  01C186  D003               	goto	u10060
 34563  01C188  6A0C               	clrf	(btemp+11)^0,c
 34564  01C18A  2A0C               	incf	(btemp+11)^0,f,c
 34565  01C18C  D001               	goto	u10078
 34566  01C18E                     u10060:
 34567  01C18E  6A0C               	clrf	(btemp+11)^0,c
 34568  01C190                     u10078:
 34569                           
 34570                           ;stkvar	_state @ sp[(-1)+0]
 34571  01C190  0EFF               	movlw	-1
 34572  01C192  0060  F033  FFE3   	movff	btemp+11,plusw1
 34573                           
 34574                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 34575  01C198  9ED2               	bcf	16338,7,c	;volatile
 34576                           
 34577                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 34578  01C19A  0E55               	movlw	85
 34579  01C19C  6ED4               	movwf	212,c	;volatile
 34580                           
 34581                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 34582  01C19E  0EAA               	movlw	170
 34583  01C1A0  6ED4               	movwf	212,c	;volatile
 34584                           
 34585                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 34586  01C1A2  90D4               	bcf	212,0,c	;volatile
 34587                           
 34588                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 34589  01C1A4  0138               	movlb	56	; () banked
 34590  01C1A6  6B9F               	clrf	159,b	;volatile
 34591                           
 34592                           ; BSR set to: 56
 34593                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 34594  01C1A8  6B9E               	clrf	158,b	;volatile
 34595                           
 34596                           ; BSR set to: 56
 34597                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 34598  01C1AA  0E08               	movlw	8
 34599  01C1AC  6F9D               	movwf	157,b	;volatile
 34600                           
 34601                           ; BSR set to: 56
 34602                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 34603  01C1AE  0E55               	movlw	85
 34604  01C1B0  6ED4               	movwf	212,c	;volatile
 34605                           
 34606                           ; BSR set to: 56
 34607                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 34608  01C1B2  0EAA               	movlw	170
 34609  01C1B4  6ED4               	movwf	212,c	;volatile
 34610                           
 34611                           ; BSR set to: 56
 34612                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 34613  01C1B6  80D4               	bsf	212,0,c	;volatile
 34614                           
 34615                           ; BSR set to: 56
 34616                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 34617                           ;stkvar	_state @ sp[(-1)+0]
 34618  01C1B8  0EFF               	movlw	-1
 34619  01C1BA  B0E3               	btfsc	plusw1,0,c
 34620  01C1BC  D002               	bra	u10085
 34621  01C1BE  9ED2               	bcf	16338,7,c	;volatile
 34622  01C1C0  D001               	bra	u10086
 34623  01C1C2                     u10085:
 34624  01C1C2  8ED2               	bsf	16338,7,c	;volatile
 34625  01C1C4                     u10086:
 34626                           
 34627                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 34628  01C1C4  0139               	movlb	57	; () banked
 34629  01C1C6  8782               	bsf	130,3,b	;volatile
 34630                           
 34631                           ; BSR set to: 57
 34632                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 34633  01C1C8  8382               	bsf	130,1,b	;volatile
 34634                           
 34635                           ; BSR set to: 57
 34636                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 34637  01C1CA  8182               	bsf	130,0,b	;volatile
 34638                           
 34639                           ; BSR set to: 57
 34640                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 34641  01C1CC  8582               	bsf	130,2,b	;volatile
 34642                           
 34643                           ; BSR set to: 57
 34644                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 34645  01C1CE  8786               	bsf	134,3,b	;volatile
 34646                           
 34647                           ; BSR set to: 57
 34648                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 34649  01C1D0  8586               	bsf	134,2,b	;volatile
 34650                           
 34651                           ; BSR set to: 57
 34652                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 34653  01C1D2  8783               	bsf	131,3,b	;volatile
 34654                           
 34655                           ; BSR set to: 57
 34656                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 34657  01C1D4  8181               	bsf	129,0,b	;volatile
 34658                           
 34659                           ; BSR set to: 57
 34660                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 34661  01C1D6  9185               	bcf	133,0,b	;volatile
 34662                           
 34663                           ; BSR set to: 57
 34664                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 34665  01C1D8  8189               	bsf	137,0,b	;volatile
 34666                           
 34667                           ; BSR set to: 57
 34668                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 34669  01C1DA  9D88               	bcf	136,6,b	;volatile
 34670                           
 34671                           ; BSR set to: 57
 34672                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 34673  01C1DC  9D86               	bcf	134,6,b	;volatile
 34674                           
 34675                           ; BSR set to: 57
 34676                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 34677  01C1DE  8581               	bsf	129,2,b	;volatile
 34678                           
 34679                           ; BSR set to: 57
 34680                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 34681  01C1E0  8781               	bsf	129,3,b	;volatile
 34682                           
 34683                           ; BSR set to: 57
 34684                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 34685  01C1E2  52E5               	movf	postdec1,f,c
 34686  01C1E4  0012               	return		;funcret
 34687  01C1E6                     __end_of_INTERRUPT_Initialize:
 34688                           	opt callstack 0
 34689                           
 34690 ;; *************** function _FVR_Initialize *****************
 34691 ;; Defined at:
 34692 ;;		line 58 in file "mcc_generated_files/fvr.c"
 34693 ;; Parameters:    Size  Location     Type
 34694 ;;		None
 34695 ;; Auto vars:     Size  Location     Type
 34696 ;;		None
 34697 ;; Return value:  Size  Location     Type
 34698 ;;                  1  [STACK] void 
 34699 ;; Registers used:
 34700 ;;		wreg, status,2
 34701 ;; Tracked objects:
 34702 ;;		On entry : 3F/39
 34703 ;;		On exit  : 3F/3E
 34704 ;;		Unchanged: 0/0
 34705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34710 ;;Total ram usage:        0 bytes
 34711 ;; Hardware stack levels used:    1
 34712 ;; Hardware stack levels required when called:   15
 34713 ;; This function calls:
 34714 ;;		Nothing
 34715 ;; This function is called by:
 34716 ;;		_SYSTEM_Initialize
 34717 ;; This function uses a reentrant model
 34718 ;;
 34719                           
 34720                           	psect	text146
 34721  01D3C2                     __ptext146:
 34722                           	opt callstack 0
 34723  01D3C2                     _FVR_Initialize:
 34724                           	opt callstack 14
 34725                           
 34726                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 34727                           
 34728                           ; BSR set to: 57
 34729                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34730                           ;incstack = 0
 34731  01D3C2  0EAF               	movlw	175
 34732  01D3C4  013E               	movlb	62	; () banked
 34733  01D3C6  6FC1               	movwf	193,b	;volatile
 34734                           
 34735                           ; BSR set to: 62
 34736                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 34737  01D3C8  0012               	return		;funcret
 34738  01D3CA                     __end_of_FVR_Initialize:
 34739                           	opt callstack 0
 34740                           
 34741 ;; *************** function _EXT_INT_Initialize *****************
 34742 ;; Defined at:
 34743 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 34744 ;; Parameters:    Size  Location     Type
 34745 ;;		None
 34746 ;; Auto vars:     Size  Location     Type
 34747 ;;		None
 34748 ;; Return value:  Size  Location     Type
 34749 ;;                  1  [STACK] void 
 34750 ;; Registers used:
 34751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34752 ;; Tracked objects:
 34753 ;;		On entry : 3F/39
 34754 ;;		On exit  : 3F/39
 34755 ;;		Unchanged: 0/0
 34756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34761 ;;Total ram usage:        0 bytes
 34762 ;; Hardware stack levels used:    1
 34763 ;; Hardware stack levels required when called:   16
 34764 ;; This function calls:
 34765 ;;		_INT0_SetInterruptHandler
 34766 ;;		_INT1_SetInterruptHandler
 34767 ;; This function is called by:
 34768 ;;		_SYSTEM_Initialize
 34769 ;; This function uses a reentrant model
 34770 ;;
 34771                           
 34772                           	psect	text147
 34773  01CB6C                     __ptext147:
 34774                           	opt callstack 0
 34775  01CB6C                     _EXT_INT_Initialize:
 34776                           	opt callstack 13
 34777                           
 34778                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 34779                           
 34780                           ; BSR set to: 62
 34781                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34782                           ;incstack = 0
 34783  01CB6C  0139               	movlb	57	; () banked
 34784  01CB6E  91A1               	bcf	161,0,b	;volatile
 34785                           
 34786                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 34787  01CB70  90D2               	bcf	210,0,c	;volatile
 34788                           
 34789                           ; BSR set to: 57
 34790                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 34791  01CB72  0EF2               	movlw	low _INT0_DefaultInterruptHandler
 34792  01CB74  6EE6               	movwf	postinc1,c
 34793  01CB76  0ED3               	movlw	high _INT0_DefaultInterruptHandler
 34794  01CB78  6EE6               	movwf	postinc1,c
 34795  01CB7A  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 34796  01CB7C  6EE6               	movwf	postinc1,c
 34797  01CB7E  EC6B  F0E7         	call	_INT0_SetInterruptHandler	;wreg free
 34798                           
 34799                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 34800  01CB82  0139               	movlb	57	; () banked
 34801  01CB84  8191               	bsf	145,0,b	;volatile
 34802                           
 34803                           ; BSR set to: 57
 34804                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 34805  01CB86  91A5               	bcf	165,0,b	;volatile
 34806                           
 34807                           ; BSR set to: 57
 34808                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 34809  01CB88  92D2               	bcf	210,1,c	;volatile
 34810                           
 34811                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 34812  01CB8A  0EEE               	movlw	low _INT1_DefaultInterruptHandler
 34813  01CB8C  6EE6               	movwf	postinc1,c
 34814  01CB8E  0ED3               	movlw	high _INT1_DefaultInterruptHandler
 34815  01CB90  6EE6               	movwf	postinc1,c
 34816  01CB92  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 34817  01CB94  6EE6               	movwf	postinc1,c
 34818  01CB96  EC57  F0E7         	call	_INT1_SetInterruptHandler	;wreg free
 34819                           
 34820                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 34821  01CB9A  0139               	movlb	57	; () banked
 34822  01CB9C  8195               	bsf	149,0,b	;volatile
 34823                           
 34824                           ; BSR set to: 57
 34825                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 34826  01CB9E  0012               	return		;funcret
 34827  01CBA0                     __end_of_EXT_INT_Initialize:
 34828                           	opt callstack 0
 34829                           
 34830 ;; *************** function _INT1_SetInterruptHandler *****************
 34831 ;; Defined at:
 34832 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 34833 ;; Parameters:    Size  Location     Type
 34834 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34835 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 34836 ;; Auto vars:     Size  Location     Type
 34837 ;;		None
 34838 ;; Return value:  Size  Location     Type
 34839 ;;                  1  [STACK] void 
 34840 ;; Registers used:
 34841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34842 ;; Tracked objects:
 34843 ;;		On entry : 3F/39
 34844 ;;		On exit  : 0/0
 34845 ;;		Unchanged: 0/0
 34846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34851 ;;Total ram usage:        0 bytes
 34852 ;; Hardware stack levels used:    1
 34853 ;; Hardware stack levels required when called:   15
 34854 ;; This function calls:
 34855 ;;		Nothing
 34856 ;; This function is called by:
 34857 ;;		_EXT_INT_Initialize
 34858 ;;		_start_switch_handler
 34859 ;; This function uses a reentrant model
 34860 ;;
 34861                           
 34862                           	psect	text148
 34863  01CEAE                     __ptext148:
 34864                           	opt callstack 0
 34865  01CEAE                     _INT1_SetInterruptHandler:
 34866                           	opt callstack 14
 34867                           
 34868                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 34869                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34870                           
 34871                           ; BSR set to: 57
 34872                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34873                           ;incstack = 0
 34874  01CEAE  50E1               	movf	fsr1l,w,c
 34875  01CEB0  0FFD               	addlw	-3
 34876  01CEB2  6ED9               	movwf	fsr2l,c
 34877  01CEB4  50E2               	movf	fsr1h,w,c
 34878  01CEB6  6EDA               	movwf	fsr2h,c
 34879  01CEB8  0EFF               	movlw	255
 34880  01CEBA  22DA               	addwfc	fsr2h,f,c
 34881  01CEBC  006F FF78  F090    	movff	postinc2,_INT1_InterruptHandler
 34882  01CEC2  006F FF78  F091    	movff	postinc2,_INT1_InterruptHandler+1
 34883  01CEC8  006F FF74  F092    	movff	postdec2,_INT1_InterruptHandler+2
 34884                           
 34885                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 34886  01CECE  52E5               	movf	postdec1,f,c
 34887  01CED0  52E5               	movf	postdec1,f,c
 34888  01CED2  52E5               	movf	postdec1,f,c
 34889  01CED4  0012               	return		;funcret
 34890  01CED6                     __end_of_INT1_SetInterruptHandler:
 34891                           	opt callstack 0
 34892                           
 34893 ;; *************** function _INT0_SetInterruptHandler *****************
 34894 ;; Defined at:
 34895 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 34896 ;; Parameters:    Size  Location     Type
 34897 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34898 ;;		 -> INT0_DefaultInterruptHandler(1), 
 34899 ;; Auto vars:     Size  Location     Type
 34900 ;;		None
 34901 ;; Return value:  Size  Location     Type
 34902 ;;                  1  [STACK] void 
 34903 ;; Registers used:
 34904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34905 ;; Tracked objects:
 34906 ;;		On entry : 3F/39
 34907 ;;		On exit  : 0/0
 34908 ;;		Unchanged: 0/0
 34909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34914 ;;Total ram usage:        0 bytes
 34915 ;; Hardware stack levels used:    1
 34916 ;; Hardware stack levels required when called:   15
 34917 ;; This function calls:
 34918 ;;		Nothing
 34919 ;; This function is called by:
 34920 ;;		_EXT_INT_Initialize
 34921 ;; This function uses a reentrant model
 34922 ;;
 34923                           
 34924                           	psect	text149
 34925  01CED6                     __ptext149:
 34926                           	opt callstack 0
 34927  01CED6                     _INT0_SetInterruptHandler:
 34928                           	opt callstack 13
 34929                           
 34930                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 34931                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34932                           
 34933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34934                           ;incstack = 0
 34935  01CED6  50E1               	movf	fsr1l,w,c
 34936  01CED8  0FFD               	addlw	-3
 34937  01CEDA  6ED9               	movwf	fsr2l,c
 34938  01CEDC  50E2               	movf	fsr1h,w,c
 34939  01CEDE  6EDA               	movwf	fsr2h,c
 34940  01CEE0  0EFF               	movlw	255
 34941  01CEE2  22DA               	addwfc	fsr2h,f,c
 34942  01CEE4  006F FF78  F093    	movff	postinc2,_INT0_InterruptHandler
 34943  01CEEA  006F FF78  F094    	movff	postinc2,_INT0_InterruptHandler+1
 34944  01CEF0  006F FF74  F095    	movff	postdec2,_INT0_InterruptHandler+2
 34945                           
 34946                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 34947  01CEF6  52E5               	movf	postdec1,f,c
 34948  01CEF8  52E5               	movf	postdec1,f,c
 34949  01CEFA  52E5               	movf	postdec1,f,c
 34950  01CEFC  0012               	return		;funcret
 34951  01CEFE                     __end_of_INT0_SetInterruptHandler:
 34952                           	opt callstack 0
 34953                           
 34954 ;; *************** function _DMA2_Initialize *****************
 34955 ;; Defined at:
 34956 ;;		line 61 in file "mcc_generated_files/dma2.c"
 34957 ;; Parameters:    Size  Location     Type
 34958 ;;		None
 34959 ;; Auto vars:     Size  Location     Type
 34960 ;;		None
 34961 ;; Return value:  Size  Location     Type
 34962 ;;                  1  [STACK] void 
 34963 ;; Registers used:
 34964 ;;		wreg, status,2
 34965 ;; Tracked objects:
 34966 ;;		On entry : 3F/3D
 34967 ;;		On exit  : 3F/3B
 34968 ;;		Unchanged: 0/0
 34969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34974 ;;Total ram usage:        0 bytes
 34975 ;; Hardware stack levels used:    1
 34976 ;; Hardware stack levels required when called:   15
 34977 ;; This function calls:
 34978 ;;		Nothing
 34979 ;; This function is called by:
 34980 ;;		_SYSTEM_Initialize
 34981 ;; This function uses a reentrant model
 34982 ;;
 34983                           
 34984                           	psect	text150
 34985  01C422                     __ptext150:
 34986                           	opt callstack 0
 34987  01C422                     _DMA2_Initialize:
 34988                           	opt callstack 14
 34989                           
 34990                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 34991                           
 34992                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34993                           ;incstack = 0
 34994  01C422  0E00               	movlw	0
 34995  01C424  013B               	movlb	59	; () banked
 34996  01C426  6FD9               	movwf	217,b	;volatile
 34997  01C428  0E10               	movlw	16
 34998  01C42A  6FDA               	movwf	218,b	;volatile
 34999  01C42C  0E00               	movlw	0
 35000  01C42E  6FDB               	movwf	219,b	;volatile
 35001                           
 35002                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 35003  01C430  0E3F               	movlw	63
 35004  01C432  6FD1               	movwf	209,b	;volatile
 35005  01C434  0EBB               	movlw	187
 35006  01C436  6FD0               	movwf	208,b	;volatile
 35007                           
 35008                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 35009  01C438  0E03               	movlw	3
 35010  01C43A  6FDD               	movwf	221,b	;volatile
 35011                           
 35012                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 35013  01C43C  0E00               	movlw	0
 35014  01C43E  6FD8               	movwf	216,b	;volatile
 35015  01C440  0E01               	movlw	1
 35016  01C442  6FD7               	movwf	215,b	;volatile
 35017                           
 35018                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 35019  01C444  0E00               	movlw	0
 35020  01C446  6FCF               	movwf	207,b	;volatile
 35021  01C448  0E01               	movlw	1
 35022  01C44A  6FCE               	movwf	206,b	;volatile
 35023                           
 35024                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 35025  01C44C  0E1C               	movlw	28
 35026  01C44E  6FDF               	movwf	223,b	;volatile
 35027                           
 35028                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 35029  01C450  0E3D               	movlw	61
 35030  01C452  6FDE               	movwf	222,b	;volatile
 35031                           
 35032                           ; BSR set to: 59
 35033                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 35034  01C454  0139               	movlb	57	; () banked
 35035  01C456  97A5               	bcf	165,3,b	;volatile
 35036                           
 35037                           ; BSR set to: 57
 35038                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 35039  01C458  95A5               	bcf	165,2,b	;volatile
 35040                           
 35041                           ; BSR set to: 57
 35042                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 35043  01C45A  9BA5               	bcf	165,5,b	;volatile
 35044                           
 35045                           ; BSR set to: 57
 35046                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 35047  01C45C  99A5               	bcf	165,4,b	;volatile
 35048                           
 35049                           ; BSR set to: 57
 35050                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 35051  01C45E  9795               	bcf	149,3,b	;volatile
 35052                           
 35053                           ; BSR set to: 57
 35054                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 35055  01C460  9595               	bcf	149,2,b	;volatile
 35056                           
 35057                           ; BSR set to: 57
 35058                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 35059  01C462  9B95               	bcf	149,5,b	;volatile
 35060                           
 35061                           ; BSR set to: 57
 35062                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 35063  01C464  9995               	bcf	149,4,b	;volatile
 35064  01C466  9ED2               	bcf	16338,7,c	;# 
 35065  01C468  0139               	banksel	14831	;# 
 35066  01C46A  0E55               	movlw	85	;# 
 35067  01C46C  6FEF               	movwf	14831,b	;# 
 35068  01C46E  0EAA               	movlw	170	;# 
 35069  01C470  6FEF               	movwf	14831,b	;# 
 35070  01C472  81EF               	bsf	14831,0,b	;# 
 35071  01C474  8ED2               	bsf	16338,7,c	;# 
 35072                           
 35073                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 35074  01C476  013B               	movlb	59	; () banked
 35075  01C478  6BDC               	clrf	220,b	;volatile
 35076                           
 35077                           ; BSR set to: 59
 35078                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35079  01C47A  0012               	return		;funcret
 35080  01C47C                     __end_of_DMA2_Initialize:
 35081                           	opt callstack 0
 35082                           
 35083 ;; *************** function _DMA1_Initialize *****************
 35084 ;; Defined at:
 35085 ;;		line 86 in file "mcc_generated_files/dma1.c"
 35086 ;; Parameters:    Size  Location     Type
 35087 ;;		None
 35088 ;; Auto vars:     Size  Location     Type
 35089 ;;		None
 35090 ;; Return value:  Size  Location     Type
 35091 ;;                  1  [STACK] void 
 35092 ;; Registers used:
 35093 ;;		wreg, status,2
 35094 ;; Tracked objects:
 35095 ;;		On entry : 3F/3B
 35096 ;;		On exit  : 3F/3B
 35097 ;;		Unchanged: 0/0
 35098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35103 ;;Total ram usage:        0 bytes
 35104 ;; Hardware stack levels used:    1
 35105 ;; Hardware stack levels required when called:   15
 35106 ;; This function calls:
 35107 ;;		Nothing
 35108 ;; This function is called by:
 35109 ;;		_SYSTEM_Initialize
 35110 ;; This function uses a reentrant model
 35111 ;;
 35112                           
 35113                           	psect	text151
 35114  01BF72                     __ptext151:
 35115                           	opt callstack 0
 35116  01BF72                     _DMA1_Initialize:
 35117                           	opt callstack 14
 35118                           
 35119                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 35120                           
 35121                           ; BSR set to: 59
 35122                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35123                           ;incstack = 0
 35124  01BF72  0E00               	movlw	0
 35125  01BF74  013B               	movlb	59	; () banked
 35126  01BF76  6FF9               	movwf	249,b	;volatile
 35127  01BF78  0E10               	movlw	16
 35128  01BF7A  6FFA               	movwf	250,b	;volatile
 35129  01BF7C  0E00               	movlw	0
 35130  01BF7E  6FFB               	movwf	251,b	;volatile
 35131                           
 35132                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 35133  01BF80  0E3D               	movlw	61
 35134  01BF82  6FF1               	movwf	241,b	;volatile
 35135  01BF84  0E11               	movlw	17
 35136  01BF86  6FF0               	movwf	240,b	;volatile
 35137                           
 35138                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 35139  01BF88  0E03               	movlw	3
 35140  01BF8A  6FFD               	movwf	253,b	;volatile
 35141                           
 35142                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 35143  01BF8C  0E00               	movlw	0
 35144  01BF8E  6FF8               	movwf	248,b	;volatile
 35145  01BF90  0E01               	movlw	1
 35146  01BF92  6FF7               	movwf	247,b	;volatile
 35147                           
 35148                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 35149  01BF94  0E00               	movlw	0
 35150  01BF96  6FEF               	movwf	239,b	;volatile
 35151  01BF98  0E01               	movlw	1
 35152  01BF9A  6FEE               	movwf	238,b	;volatile
 35153                           
 35154                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 35155  01BF9C  0E15               	movlw	21
 35156  01BF9E  6FFF               	movwf	255,b	;volatile
 35157                           
 35158                           ; BSR set to: 59
 35159                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 35160  01BFA0  6BFE               	clrf	254,b	;volatile
 35161                           
 35162                           ; BSR set to: 59
 35163                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 35164  01BFA2  0139               	movlb	57	; () banked
 35165  01BFA4  93A2               	bcf	162,1,b	;volatile
 35166                           
 35167                           ; BSR set to: 57
 35168                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 35169  01BFA6  91A2               	bcf	162,0,b	;volatile
 35170                           
 35171                           ; BSR set to: 57
 35172                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 35173  01BFA8  97A2               	bcf	162,3,b	;volatile
 35174                           
 35175                           ; BSR set to: 57
 35176                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 35177  01BFAA  95A2               	bcf	162,2,b	;volatile
 35178                           
 35179                           ; BSR set to: 57
 35180                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 35181  01BFAC  8392               	bsf	146,1,b	;volatile
 35182                           
 35183                           ; BSR set to: 57
 35184                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 35185  01BFAE  8192               	bsf	146,0,b	;volatile
 35186                           
 35187                           ; BSR set to: 57
 35188                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 35189  01BFB0  8792               	bsf	146,3,b	;volatile
 35190                           
 35191                           ; BSR set to: 57
 35192                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 35193  01BFB2  8592               	bsf	146,2,b	;volatile
 35194                           
 35195                           ; BSR set to: 57
 35196                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 35197  01BFB4  6BF1               	clrf	241,b	;volatile
 35198                           
 35199                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 35200  01BFB6  0E01               	movlw	1
 35201  01BFB8  6FF2               	movwf	242,b	;volatile
 35202                           
 35203                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 35204  01BFBA  0E04               	movlw	4
 35205  01BFBC  6FF3               	movwf	243,b	;volatile
 35206                           
 35207                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 35208  01BFBE  0E02               	movlw	2
 35209  01BFC0  6FF4               	movwf	244,b	;volatile
 35210                           
 35211                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 35212  01BFC2  0E03               	movlw	3
 35213  01BFC4  6FF7               	movwf	247,b	;volatile
 35214  01BFC6  9ED2               	bcf	16338,7,c	;# 
 35215  01BFC8  0139               	banksel	14831	;# 
 35216  01BFCA  0E55               	movlw	85	;# 
 35217  01BFCC  6FEF               	movwf	14831,b	;# 
 35218  01BFCE  0EAA               	movlw	170	;# 
 35219  01BFD0  6FEF               	movwf	14831,b	;# 
 35220  01BFD2  81EF               	bsf	14831,0,b	;# 
 35221  01BFD4  8ED2               	bsf	16338,7,c	;# 
 35222                           
 35223                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 35224  01BFD6  013B               	movlb	59	; () banked
 35225  01BFD8  6BFC               	clrf	252,b	;volatile
 35226                           
 35227                           ; BSR set to: 59
 35228                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35229  01BFDA  0012               	return		;funcret
 35230  01BFDC                     __end_of_DMA1_Initialize:
 35231                           	opt callstack 0
 35232                           
 35233 ;; *************** function _CRC_Initialize *****************
 35234 ;; Defined at:
 35235 ;;		line 76 in file "mcc_generated_files/crc.c"
 35236 ;; Parameters:    Size  Location     Type
 35237 ;;		None
 35238 ;; Auto vars:     Size  Location     Type
 35239 ;;  seed            2  [STACK] unsigned short 
 35240 ;;  poly            2  [STACK] unsigned short 
 35241 ;; Return value:  Size  Location     Type
 35242 ;;                  1  [STACK] void 
 35243 ;; Registers used:
 35244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 35245 ;; Tracked objects:
 35246 ;;		On entry : 0/39
 35247 ;;		On exit  : 3F/0
 35248 ;;		Unchanged: 0/0
 35249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35254 ;;Total ram usage:        0 bytes
 35255 ;; Hardware stack levels used:    1
 35256 ;; Hardware stack levels required when called:   15
 35257 ;; This function calls:
 35258 ;;		Nothing
 35259 ;; This function is called by:
 35260 ;;		_SYSTEM_Initialize
 35261 ;;		_read_cal_data
 35262 ;;		_write_cal_data
 35263 ;; This function uses a reentrant model
 35264 ;;
 35265                           
 35266                           	psect	text152
 35267  01BA60                     __ptext152:
 35268                           	opt callstack 0
 35269  01BA60                     _CRC_Initialize:
 35270                           	opt callstack 0
 35271                           
 35272                           ; BSR set to: 59
 35273                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35274  01BA60  52E6               	movf	postinc1,f,c
 35275  01BA62  52E6               	movf	postinc1,f,c
 35276  01BA64  52E6               	movf	postinc1,f,c
 35277  01BA66  52E6               	movf	postinc1,f,c
 35278                           
 35279                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 35280                           
 35281                           ;incstack = 0
 35282  01BA68  0E80               	movlw	128
 35283  01BA6A  0139               	movlb	57	; () banked
 35284  01BA6C  6F68               	movwf	104,b	;volatile
 35285                           
 35286                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 35287  01BA6E  0E07               	movlw	7
 35288  01BA70  6F69               	movwf	105,b	;volatile
 35289                           
 35290                           ; BSR set to: 57
 35291                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 35292  01BA72  6B62               	clrf	98,b	;volatile
 35293                           
 35294                           ; BSR set to: 57
 35295                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 35296  01BA74  6B63               	clrf	99,b	;volatile
 35297                           
 35298                           ; BSR set to: 57
 35299                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 35300  01BA76  6B7C               	clrf	124,b	;volatile
 35301                           
 35302                           ; BSR set to: 57
 35303                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 35304  01BA78  6B78               	clrf	120,b	;volatile
 35305                           
 35306                           ; BSR set to: 57
 35307                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 35308  01BA7A  6B77               	clrf	119,b	;volatile
 35309                           
 35310                           ; BSR set to: 57
 35311                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 35312  01BA7C  6B76               	clrf	118,b	;volatile
 35313                           
 35314                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 35315  01BA7E  0E3F               	movlw	63
 35316  01BA80  6F7B               	movwf	123,b	;volatile
 35317                           
 35318                           ; BSR set to: 57
 35319                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 35320  01BA82  697A               	setf	122,b	;volatile
 35321                           
 35322                           ; BSR set to: 57
 35323                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 35324  01BA84  6979               	setf	121,b	;volatile
 35325                           
 35326                           ; BSR set to: 57
 35327                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 35328  01BA86  6B7D               	clrf	125,b	;volatile
 35329                           
 35330                           ; BSR set to: 57
 35331                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 35332  01BA88  0ED5               	movlw	213
 35333  01BA8A  6E0B               	movwf	(btemp+10)^0,c
 35334  01BA8C  0E00               	movlw	0
 35335  01BA8E  6E0C               	movwf	(btemp+11)^0,c
 35336                           
 35337                           ;stkvar	_poly @ sp[(-4)+2]
 35338  01BA90  0EFE               	movlw	-2
 35339  01BA92  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35340  01BA98  0EFF               	movlw	-1
 35341  01BA9A  0060  F033  FFE3   	movff	btemp+11,plusw1
 35342                           
 35343                           ; BSR set to: 57
 35344                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 35345                           ;stkvar	_poly @ sp[(-4)+2]
 35346  01BAA0  0EFF               	movlw	255
 35347  01BAA2  24E1               	addwf	fsr1l,w,c
 35348  01BAA4  6ED9               	movwf	fsr2l,c
 35349  01BAA6  0EFF               	movlw	255
 35350  01BAA8  20E2               	addwfc	fsr1h,w,c
 35351  01BAAA  6EDA               	movwf	fsr2h,c
 35352  01BAAC  50DF               	movf	indf2,w,c
 35353  01BAAE  6F67               	movwf	103,b	;volatile
 35354                           
 35355                           ; BSR set to: 57
 35356                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 35357  01BAB0  0ED5               	movlw	213
 35358  01BAB2  6F66               	movwf	102,b	;volatile
 35359                           
 35360                           ; BSR set to: 57
 35361                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 35362                           ;stkvar	_seed @ sp[(-4)+0]
 35363  01BAB4  0EFC               	movlw	-4
 35364  01BAB6  6AE3               	clrf	plusw1,c
 35365  01BAB8  0EFD               	movlw	-3
 35366  01BABA  6AE3               	clrf	plusw1,c
 35367                           
 35368                           ; BSR set to: 57
 35369                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 35370                           ;stkvar	_seed @ sp[(-4)+0]
 35371  01BABC  0EFD               	movlw	253
 35372  01BABE  24E1               	addwf	fsr1l,w,c
 35373  01BAC0  6ED9               	movwf	fsr2l,c
 35374  01BAC2  0EFF               	movlw	255
 35375  01BAC4  20E2               	addwfc	fsr1h,w,c
 35376  01BAC6  6EDA               	movwf	fsr2h,c
 35377  01BAC8  50DF               	movf	indf2,w,c
 35378  01BACA  6F63               	movwf	99,b	;volatile
 35379                           
 35380                           ; BSR set to: 57
 35381                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 35382  01BACC  6B62               	clrf	98,b	;volatile
 35383                           
 35384                           ; BSR set to: 57
 35385                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 35386  01BACE  3969               	swapf	105,w,b	;volatile
 35387  01BAD0  0B0F               	andlw	15
 35388  01BAD2  6E0C               	movwf	(btemp+11)^0,c
 35389  01BAD4  280C               	incf	(btemp+11)^0,w,c
 35390  01BAD6  0100               	movlb	0	; () banked
 35391  01BAD8  6FAB               	movwf	_crcObj& (0+255),b
 35392                           
 35393                           ; BSR set to: 0
 35394                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 35395  01BADA  0139               	movlb	57	; () banked
 35396  01BADC  5169               	movf	105,w,b	;volatile
 35397  01BADE  0B0F               	andlw	15
 35398  01BAE0  6E0C               	movwf	(btemp+11)^0,c
 35399  01BAE2  280C               	incf	(btemp+11)^0,w,c
 35400  01BAE4  0100               	movlb	0	; () banked
 35401  01BAE6  6FAC               	movwf	(_crcObj+1)& (0+255),b
 35402                           
 35403                           ; BSR set to: 0
 35404                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 35405  01BAE8  52E5               	movf	postdec1,f,c
 35406  01BAEA  52E5               	movf	postdec1,f,c
 35407  01BAEC  52E5               	movf	postdec1,f,c
 35408  01BAEE  52E5               	movf	postdec1,f,c
 35409  01BAF0  0012               	return		;funcret
 35410  01BAF2                     __end_of_CRC_Initialize:
 35411                           	opt callstack 0
 35412                           
 35413 ;; *************** function _CLKREF_Initialize *****************
 35414 ;; Defined at:
 35415 ;;		line 58 in file "mcc_generated_files/clkref.c"
 35416 ;; Parameters:    Size  Location     Type
 35417 ;;		None
 35418 ;; Auto vars:     Size  Location     Type
 35419 ;;		None
 35420 ;; Return value:  Size  Location     Type
 35421 ;;                  1  [STACK] void 
 35422 ;; Registers used:
 35423 ;;		wreg, status,2
 35424 ;; Tracked objects:
 35425 ;;		On entry : 3F/3B
 35426 ;;		On exit  : 3F/3C
 35427 ;;		Unchanged: 0/0
 35428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35433 ;;Total ram usage:        0 bytes
 35434 ;; Hardware stack levels used:    1
 35435 ;; Hardware stack levels required when called:   15
 35436 ;; This function calls:
 35437 ;;		Nothing
 35438 ;; This function is called by:
 35439 ;;		_SYSTEM_Initialize
 35440 ;; This function uses a reentrant model
 35441 ;;
 35442                           
 35443                           	psect	text153
 35444  01D36A                     __ptext153:
 35445                           	opt callstack 0
 35446  01D36A                     _CLKREF_Initialize:
 35447                           	opt callstack 14
 35448                           
 35449                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 35450                           
 35451                           ; BSR set to: 0
 35452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35453                           ;incstack = 0
 35454  01D36A  013C               	movlb	60	; () banked
 35455  01D36C  6BE6               	clrf	230,b	;volatile
 35456                           
 35457                           ; BSR set to: 60
 35458                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 35459  01D36E  0E94               	movlw	148
 35460  01D370  6FE5               	movwf	229,b	;volatile
 35461                           
 35462                           ; BSR set to: 60
 35463                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35464  01D372  0012               	return		;funcret
 35465  01D374                     __end_of_CLKREF_Initialize:
 35466                           	opt callstack 0
 35467                           
 35468 ;; *************** function _ADCC_Initialize *****************
 35469 ;; Defined at:
 35470 ;;		line 65 in file "mcc_generated_files/adcc.c"
 35471 ;; Parameters:    Size  Location     Type
 35472 ;;		None
 35473 ;; Auto vars:     Size  Location     Type
 35474 ;;		None
 35475 ;; Return value:  Size  Location     Type
 35476 ;;                  1  [STACK] void 
 35477 ;; Registers used:
 35478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 35479 ;; Tracked objects:
 35480 ;;		On entry : 3F/0
 35481 ;;		On exit  : 0/0
 35482 ;;		Unchanged: 0/0
 35483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35488 ;;Total ram usage:        0 bytes
 35489 ;; Hardware stack levels used:    1
 35490 ;; Hardware stack levels required when called:   16
 35491 ;; This function calls:
 35492 ;;		_ADCC_SetADIInterruptHandler
 35493 ;;		_ADCC_SetADTIInterruptHandler
 35494 ;; This function is called by:
 35495 ;;		_SYSTEM_Initialize
 35496 ;; This function uses a reentrant model
 35497 ;;
 35498                           
 35499                           	psect	text154
 35500  01BFDC                     __ptext154:
 35501                           	opt callstack 0
 35502  01BFDC                     _ADCC_Initialize:
 35503                           	opt callstack 13
 35504                           
 35505                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 35506                           
 35507                           ; BSR set to: 60
 35508                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35509                           ;incstack = 0
 35510  01BFDC  013E               	movlb	62	; () banked
 35511  01BFDE  6BDE               	clrf	222,b	;volatile
 35512                           
 35513                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 35514  01BFE0  6BDF               	clrf	223,b	;volatile
 35515                           
 35516                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 35517  01BFE2  6BE0               	clrf	224,b	;volatile
 35518                           
 35519                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 35520  01BFE4  6BE1               	clrf	225,b	;volatile
 35521                           
 35522                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 35523  01BFE6  6BE4               	clrf	228,b	;volatile
 35524                           
 35525                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 35526  01BFE8  6BE5               	clrf	229,b	;volatile
 35527                           
 35528                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 35529  01BFEA  6BEA               	clrf	234,b	;volatile
 35530                           
 35531                           ; BSR set to: 62
 35532                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 35533  01BFEC  0E40               	movlw	64
 35534  01BFEE  6FEC               	movwf	236,b	;volatile
 35535                           
 35536                           ; BSR set to: 62
 35537                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 35538  01BFF0  6BF1               	clrf	241,b	;volatile
 35539                           
 35540                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 35541  01BFF2  0E20               	movlw	32
 35542  01BFF4  6FF3               	movwf	243,b	;volatile
 35543                           
 35544                           ; BSR set to: 62
 35545                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 35546  01BFF6  6BF4               	clrf	244,b	;volatile
 35547                           
 35548                           ; BSR set to: 62
 35549                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 35550  01BFF8  6BF5               	clrf	245,b	;volatile
 35551                           
 35552                           ; BSR set to: 62
 35553                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 35554  01BFFA  6BF6               	clrf	246,b	;volatile
 35555                           
 35556                           ; BSR set to: 62
 35557                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 35558  01BFFC  6BF7               	clrf	247,b	;volatile
 35559                           
 35560                           ; BSR set to: 62
 35561                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 35562  01BFFE  6BF9               	clrf	249,b	;volatile
 35563                           
 35564                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 35565  01C000  0E5B               	movlw	91
 35566  01C002  6FFA               	movwf	250,b	;volatile
 35567                           
 35568                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 35569  01C004  0E27               	movlw	39
 35570  01C006  6FFB               	movwf	251,b	;volatile
 35571                           
 35572                           ; BSR set to: 62
 35573                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 35574  01C008  6BFC               	clrf	252,b	;volatile
 35575                           
 35576                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 35577  01C00A  0E02               	movlw	2
 35578  01C00C  6FFD               	movwf	253,b	;volatile
 35579                           
 35580                           ; BSR set to: 62
 35581                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 35582  01C00E  6BFE               	clrf	254,b	;volatile
 35583                           
 35584                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 35585  01C010  0E07               	movlw	7
 35586  01C012  6FFF               	movwf	255,b	;volatile
 35587                           
 35588                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 35589  01C014  0E84               	movlw	132
 35590  01C016  6FF8               	movwf	248,b	;volatile
 35591                           
 35592                           ; BSR set to: 62
 35593                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 35594  01C018  0139               	movlb	57	; () banked
 35595  01C01A  95A1               	bcf	161,2,b	;volatile
 35596                           
 35597                           ; BSR set to: 57
 35598                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 35599  01C01C  8591               	bsf	145,2,b	;volatile
 35600                           
 35601                           ; BSR set to: 57
 35602                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 35603  01C01E  0EF4               	movlw	low _ADCC_DefaultInterruptHandler
 35604  01C020  6EE6               	movwf	postinc1,c
 35605  01C022  0ED3               	movlw	high _ADCC_DefaultInterruptHandler
 35606  01C024  6EE6               	movwf	postinc1,c
 35607  01C026  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 35608  01C028  6EE6               	movwf	postinc1,c
 35609  01C02A  EC93  F0E7         	call	_ADCC_SetADIInterruptHandler	;wreg free
 35610                           
 35611                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 35612  01C02E  0139               	movlb	57	; () banked
 35613  01C030  97A1               	bcf	161,3,b	;volatile
 35614                           
 35615                           ; BSR set to: 57
 35616                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 35617  01C032  8791               	bsf	145,3,b	;volatile
 35618                           
 35619                           ; BSR set to: 57
 35620                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 35621  01C034  0EF4               	movlw	low _ADCC_DefaultInterruptHandler
 35622  01C036  6EE6               	movwf	postinc1,c
 35623  01C038  0ED3               	movlw	high _ADCC_DefaultInterruptHandler
 35624  01C03A  6EE6               	movwf	postinc1,c
 35625  01C03C  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 35626  01C03E  6EE6               	movwf	postinc1,c
 35627  01C040  EC7F  F0E7         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 35628                           
 35629                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35630  01C044  0012               	return		;funcret
 35631  01C046                     __end_of_ADCC_Initialize:
 35632                           	opt callstack 0
 35633                           
 35634 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 35635 ;; Defined at:
 35636 ;;		line 336 in file "mcc_generated_files/adcc.c"
 35637 ;; Parameters:    Size  Location     Type
 35638 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35639 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 35640 ;; Auto vars:     Size  Location     Type
 35641 ;;		None
 35642 ;; Return value:  Size  Location     Type
 35643 ;;                  1  [STACK] void 
 35644 ;; Registers used:
 35645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35646 ;; Tracked objects:
 35647 ;;		On entry : 0/0
 35648 ;;		On exit  : 0/0
 35649 ;;		Unchanged: 0/0
 35650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35655 ;;Total ram usage:        0 bytes
 35656 ;; Hardware stack levels used:    1
 35657 ;; Hardware stack levels required when called:   15
 35658 ;; This function calls:
 35659 ;;		Nothing
 35660 ;; This function is called by:
 35661 ;;		_ADCC_Initialize
 35662 ;;		_start_adc_scan
 35663 ;; This function uses a reentrant model
 35664 ;;
 35665                           
 35666                           	psect	text155
 35667  01CEFE                     __ptext155:
 35668                           	opt callstack 0
 35669  01CEFE                     _ADCC_SetADTIInterruptHandler:
 35670                           	opt callstack 14
 35671                           
 35672                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 35673                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35674                           
 35675                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35676                           ;incstack = 0
 35677  01CEFE  50E1               	movf	fsr1l,w,c
 35678  01CF00  0FFD               	addlw	-3
 35679  01CF02  6ED9               	movwf	fsr2l,c
 35680  01CF04  50E2               	movf	fsr1h,w,c
 35681  01CF06  6EDA               	movwf	fsr2h,c
 35682  01CF08  0EFF               	movlw	255
 35683  01CF0A  22DA               	addwfc	fsr2h,f,c
 35684  01CF0C  006F FF78  F081    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 35685  01CF12  006F FF78  F082    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 35686  01CF18  006F FF74  F083    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 35687                           
 35688                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 35689  01CF1E  52E5               	movf	postdec1,f,c
 35690  01CF20  52E5               	movf	postdec1,f,c
 35691  01CF22  52E5               	movf	postdec1,f,c
 35692  01CF24  0012               	return		;funcret
 35693  01CF26                     __end_of_ADCC_SetADTIInterruptHandler:
 35694                           	opt callstack 0
 35695                           
 35696 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 35697 ;; Defined at:
 35698 ;;		line 323 in file "mcc_generated_files/adcc.c"
 35699 ;; Parameters:    Size  Location     Type
 35700 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35701 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 35702 ;; Auto vars:     Size  Location     Type
 35703 ;;		None
 35704 ;; Return value:  Size  Location     Type
 35705 ;;                  1  [STACK] void 
 35706 ;; Registers used:
 35707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35708 ;; Tracked objects:
 35709 ;;		On entry : 6/0
 35710 ;;		On exit  : 0/0
 35711 ;;		Unchanged: 0/0
 35712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35717 ;;Total ram usage:        0 bytes
 35718 ;; Hardware stack levels used:    1
 35719 ;; Hardware stack levels required when called:   15
 35720 ;; This function calls:
 35721 ;;		Nothing
 35722 ;; This function is called by:
 35723 ;;		_ADCC_Initialize
 35724 ;;		_start_adc_scan
 35725 ;; This function uses a reentrant model
 35726 ;;
 35727                           
 35728                           	psect	text156
 35729  01CF26                     __ptext156:
 35730                           	opt callstack 0
 35731  01CF26                     _ADCC_SetADIInterruptHandler:
 35732                           	opt callstack 14
 35733                           
 35734                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 35735                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35736                           
 35737                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35738                           ;incstack = 0
 35739  01CF26  50E1               	movf	fsr1l,w,c
 35740  01CF28  0FFD               	addlw	-3
 35741  01CF2A  6ED9               	movwf	fsr2l,c
 35742  01CF2C  50E2               	movf	fsr1h,w,c
 35743  01CF2E  6EDA               	movwf	fsr2h,c
 35744  01CF30  0EFF               	movlw	255
 35745  01CF32  22DA               	addwfc	fsr2h,f,c
 35746  01CF34  006F FF78  F084    	movff	postinc2,_ADCC_ADI_InterruptHandler
 35747  01CF3A  006F FF78  F085    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 35748  01CF40  006F FF74  F086    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 35749                           
 35750                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 35751  01CF46  52E5               	movf	postdec1,f,c
 35752  01CF48  52E5               	movf	postdec1,f,c
 35753  01CF4A  52E5               	movf	postdec1,f,c
 35754  01CF4C  0012               	return		;funcret
 35755  01CF4E                     __end_of_ADCC_SetADIInterruptHandler:
 35756                           	opt callstack 0
 35757                           
 35758 ;; *************** function _INT1_ISR *****************
 35759 ;; Defined at:
 35760 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 35761 ;; Parameters:    Size  Location     Type
 35762 ;;		None
 35763 ;; Auto vars:     Size  Location     Type
 35764 ;;		None
 35765 ;; Return value:  Size  Location     Type
 35766 ;;                  1    wreg      void 
 35767 ;; Registers used:
 35768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 35769 ;; Tracked objects:
 35770 ;;		On entry : 0/0
 35771 ;;		On exit  : 0/0
 35772 ;;		Unchanged: 0/0
 35773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35776 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35777 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35778 ;;Total ram usage:        4 bytes
 35779 ;; Hardware stack levels used:    1
 35780 ;; Hardware stack levels required when called:    5
 35781 ;; This function calls:
 35782 ;;		_INT1_CallBack
 35783 ;; This function is called by:
 35784 ;;		Interrupt level 1
 35785 ;; This function uses a non-reentrant model
 35786 ;;
 35787                           
 35788                           	psect	text157
 35789  01C978                     __ptext157:
 35790                           	opt callstack 0
 35791  01C978                     _INT1_ISR:
 35792                           	opt callstack 11
 35793                           
 35794                           ;incstack = 0
 35795  01C978  006F FF60  F027    	movff	status,??_INT1_ISR
 35796  01C97E  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 35797  01C984  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 35798  01C98A  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 35799  01C990  EE16  F104         	lfsr	1,___intlo_sp
 35800                           
 35801                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 35802  01C994  0139               	movlb	57	; () banked
 35803  01C996  91A5               	bcf	165,0,b	;volatile
 35804                           
 35805                           ; BSR set to: 57
 35806                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 35807  01C998  ECF6  F0E7         	call	_INT1_CallBack	;wreg free
 35808  01C99C  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 35809  01C9A2  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 35810  01C9A8  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 35811  01C9AE  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 35812  01C9B4  0011               	retfie		f
 35813  01C9B6                     __end_of_INT1_ISR:
 35814                           	opt callstack 0
 35815                           
 35816 ;; *************** function _INT1_CallBack *****************
 35817 ;; Defined at:
 35818 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 35819 ;; Parameters:    Size  Location     Type
 35820 ;;		None
 35821 ;; Auto vars:     Size  Location     Type
 35822 ;;		None
 35823 ;; Return value:  Size  Location     Type
 35824 ;;                  1  [STACK] void 
 35825 ;; Registers used:
 35826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 35827 ;; Tracked objects:
 35828 ;;		On entry : 3F/39
 35829 ;;		On exit  : 0/0
 35830 ;;		Unchanged: 0/0
 35831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35836 ;;Total ram usage:        0 bytes
 35837 ;; Hardware stack levels used:    1
 35838 ;; Hardware stack levels required when called:    4
 35839 ;; This function calls:
 35840 ;;		Absolute function
 35841 ;;		_INT1_DefaultInterruptHandler
 35842 ;;		_switch_handler
 35843 ;; This function is called by:
 35844 ;;		_INT1_ISR
 35845 ;; This function uses a reentrant model
 35846 ;;
 35847                           
 35848                           	psect	text158
 35849  01CFEC                     __ptext158:
 35850                           	opt callstack 0
 35851  01CFEC                     _INT1_CallBack:
 35852                           	opt callstack 11
 35853                           
 35854                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 35855                           
 35856                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35857                           ;incstack = 0
 35858  01CFEC  0100               	movlb	0	; () banked
 35859  01CFEE  5190               	movf	_INT1_InterruptHandler& (0+255),w,b
 35860  01CFF0  1191               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 35861  01CFF2  1192               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 35862  01CFF4  B4D8               	btfsc	status,2,c
 35863  01CFF6  0012               	return	
 35864                           
 35865                           ; BSR set to: 0
 35866                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 35867  01CFF8  D801               	call	u1077_28
 35868  01CFFA  0012               	return	
 35869  01CFFC                     u1077_28:
 35870  01CFFC  0005               	push	
 35871  01CFFE  6EFA               	movwf	pclath,c
 35872  01D000  5190               	movf	_INT1_InterruptHandler& (0+255),w,b
 35873  01D002  6EFD               	movwf	tosl,c
 35874  01D004  5191               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 35875  01D006  6EFE               	movwf	tosh,c
 35876  01D008  5192               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 35877  01D00A  6EFF               	movwf	tosu,c
 35878  01D00C  50FA               	movf	pclath,w,c
 35879  01D00E  0012               	return		;indir
 35880  01D010                     __end_of_INT1_CallBack:
 35881                           	opt callstack 0
 35882                           
 35883 ;; *************** function _INT1_DefaultInterruptHandler *****************
 35884 ;; Defined at:
 35885 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 35886 ;; Parameters:    Size  Location     Type
 35887 ;;		None
 35888 ;; Auto vars:     Size  Location     Type
 35889 ;;		None
 35890 ;; Return value:  Size  Location     Type
 35891 ;;                  1  [STACK] void 
 35892 ;; Registers used:
 35893 ;;		None
 35894 ;; Tracked objects:
 35895 ;;		On entry : 3F/0
 35896 ;;		On exit  : 0/0
 35897 ;;		Unchanged: 0/0
 35898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35903 ;;Total ram usage:        0 bytes
 35904 ;; Hardware stack levels used:    1
 35905 ;; Hardware stack levels required when called:    3
 35906 ;; This function calls:
 35907 ;;		Nothing
 35908 ;; This function is called by:
 35909 ;;		_EXT_INT_Initialize
 35910 ;;		_INT1_CallBack
 35911 ;; This function uses a reentrant model
 35912 ;;
 35913                           
 35914                           	psect	text159
 35915  01D3EE                     __ptext159:
 35916                           	opt callstack 0
 35917  01D3EE                     _INT1_DefaultInterruptHandler:
 35918                           	opt callstack 11
 35919                           
 35920                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35921                           
 35922                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35923                           ;incstack = 0
 35924  01D3EE  0012               	return		;funcret
 35925  01D3F0                     __end_of_INT1_DefaultInterruptHandler:
 35926                           	opt callstack 0
 35927                           
 35928 ;; *************** function _switch_handler *****************
 35929 ;; Defined at:
 35930 ;;		line 58 in file "dio.c"
 35931 ;; Parameters:    Size  Location     Type
 35932 ;;		None
 35933 ;; Auto vars:     Size  Location     Type
 35934 ;;  i               1  [STACK] unsigned char 
 35935 ;;  sw_value        1  [STACK] unsigned char 
 35936 ;; Return value:  Size  Location     Type
 35937 ;;                  1  [STACK] void 
 35938 ;; Registers used:
 35939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 35940 ;; Tracked objects:
 35941 ;;		On entry : 3F/0
 35942 ;;		On exit  : 0/0
 35943 ;;		Unchanged: 0/0
 35944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35949 ;;Total ram usage:        0 bytes
 35950 ;; Hardware stack levels used:    1
 35951 ;; Hardware stack levels required when called:    3
 35952 ;; This function calls:
 35953 ;;		Nothing
 35954 ;; This function is called by:
 35955 ;;		_start_switch_handler
 35956 ;;		_INT1_CallBack
 35957 ;; This function uses a reentrant model
 35958 ;;
 35959                           
 35960                           	psect	text160
 35961  019F0C                     __ptext160:
 35962                           	opt callstack 0
 35963  019F0C                     _switch_handler:
 35964                           	opt callstack 0
 35965                           
 35966                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35967  019F0C  52E6               	movf	postinc1,f,c
 35968  019F0E  52E6               	movf	postinc1,f,c
 35969                           
 35970                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 35971                           ;stkvar	_i @ sp[(-2)+0]
 35972                           
 35973                           ;incstack = 0
 35974  019F10  0EFE               	movlw	-2
 35975  019F12  6AE3               	clrf	plusw1,c
 35976  019F14  9ABF               	bcf	191,5,c	;volatile
 35977                           
 35978                           ;dio.c: 72:  __nop();
 35979  019F16  F000               	nop	
 35980                           
 35981                           ;dio.c: 73:  __nop();
 35982  019F18  F000               	nop	
 35983                           
 35984                           ;dio.c: 74:  __nop();
 35985  019F1A  F000               	nop	
 35986                           
 35987                           ;dio.c: 75:  __nop();
 35988  019F1C  F000               	nop	
 35989                           
 35990                           ;dio.c: 76:  __nop();
 35991  019F1E  F000               	nop	
 35992                           
 35993                           ;dio.c: 77:  __nop();
 35994  019F20  F000               	nop	
 35995  019F22  D016               	goto	l11540
 35996  019F24                     l11526:
 35997                           
 35998                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 35999  019F24  A6CF               	btfss	207,3,c	;volatile
 36000  019F26  D00E               	goto	u1043_20
 36001  019F28  D00A               	goto	u1043_21
 36002  019F2A                     u1041_28:
 36003                           
 36004                           ;stkvar	_sw_value @ sp[(-2)+1]
 36005  019F2A  0EFF               	movlw	-1
 36006  019F2C  0060  F033  FFE3   	movff	btemp+11,plusw1
 36007                           
 36008                           ;dio.c: 83:    break;
 36009  019F32  D027               	goto	l11542
 36010  019F34                     l11528:
 36011                           
 36012                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 36013  019F34  A4CF               	btfss	207,2,c	;volatile
 36014  019F36  D006               	goto	u1043_20
 36015  019F38  D002               	goto	u1043_21
 36016  019F3A                     l11530:
 36017                           
 36018                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 36019  019F3A  A6CD               	btfss	205,3,c	;volatile
 36020  019F3C  D003               	goto	u1043_20
 36021  019F3E                     u1043_21:
 36022  019F3E  6A0C               	clrf	(btemp+11)^0,c
 36023  019F40  2A0C               	incf	(btemp+11)^0,f,c
 36024  019F42  D7F3               	goto	u1041_28
 36025  019F44                     u1043_20:
 36026  019F44  6A0C               	clrf	(btemp+11)^0,c
 36027  019F46  D7F1               	goto	u1041_28
 36028  019F48                     l11532:
 36029                           
 36030                           ;dio.c: 91:    sw_value = 1;
 36031                           ;stkvar	_sw_value @ sp[(-2)+1]
 36032  019F48  0EFF               	movlw	-1
 36033  019F4A  6AE3               	clrf	plusw1,c
 36034  019F4C  2AE3               	incf	plusw1,f,c
 36035                           
 36036                           ;dio.c: 92:    break;
 36037  019F4E  D019               	goto	l11542
 36038  019F50                     l11540:
 36039                           
 36040                           ;stkvar	_i @ sp[(-2)+0]
 36041  019F50  0EFE               	movlw	-2
 36042  019F52  50E3               	movf	plusw1,w,c
 36043  019F54  6E0B               	movwf	(btemp+10)^0,c
 36044  019F56  6A0C               	clrf	(btemp+11)^0,c
 36045                           
 36046                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36047                           ; Switch size 1, requested type "simple"
 36048                           ; Number of cases is 1, Range of values is 0 to 0
 36049                           ; switch strategies available:
 36050                           ; Name         Instructions Cycles
 36051                           ; simple_byte            4     3 (average)
 36052                           ;	Chosen strategy is simple_byte
 36053  019F58  500C               	movf	(btemp+11)^0,w,c
 36054  019F5A  0A00               	xorlw	0	; case 0
 36055  019F5C  A4D8               	btfss	status,2,c
 36056  019F5E  D7F4               	goto	l11532
 36057                           
 36058                           ; Switch size 1, requested type "simple"
 36059                           ; Number of cases is 5, Range of values is 0 to 4
 36060                           ; switch strategies available:
 36061                           ; Name         Instructions Cycles
 36062                           ; simple_byte           16     9 (average)
 36063                           ;	Chosen strategy is simple_byte
 36064  019F60  500B               	movf	(btemp+10)^0,w,c
 36065  019F62  0A00               	xorlw	0	; case 0
 36066  019F64  B4D8               	btfsc	status,2,c
 36067  019F66  D7F0               	goto	l11532
 36068  019F68  0A01               	xorlw	1	; case 1
 36069  019F6A  B4D8               	btfsc	status,2,c
 36070  019F6C  D7ED               	goto	l11532
 36071  019F6E  0A03               	xorlw	3	; case 2
 36072  019F70  B4D8               	btfsc	status,2,c
 36073  019F72  D7E0               	goto	l11528
 36074  019F74  0A01               	xorlw	1	; case 3
 36075  019F76  B4D8               	btfsc	status,2,c
 36076  019F78  D7D5               	goto	l11526
 36077  019F7A  0A07               	xorlw	7	; case 4
 36078  019F7C  B4D8               	btfsc	status,2,c
 36079  019F7E  D7DD               	goto	l11530
 36080  019F80  D7E3               	goto	l11532
 36081  019F82                     l11542:
 36082                           
 36083                           ;dio.c: 102:   if (sw_value) {
 36084                           ;stkvar	_sw_value @ sp[(-2)+1]
 36085  019F82  0EFF               	movlw	-1
 36086  019F84  50E3               	movf	plusw1,w,c
 36087  019F86  B4D8               	btfsc	status,2,c
 36088  019F88  D018               	goto	l11548
 36089                           
 36090                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 36091                           ;stkvar	_i @ sp[(-2)+0]
 36092  019F8A  0EFE               	movlw	-2
 36093  019F8C  50E3               	movf	plusw1,w,c
 36094  019F8E  0D05               	mullw	5
 36095  019F90  0E00               	movlw	low _S
 36096  019F92  24F3               	addwf	243,w,c
 36097  019F94  6ED9               	movwf	fsr2l,c
 36098  019F96  0E02               	movlw	high _S
 36099  019F98  20F4               	addwfc	prodh,w,c
 36100  019F9A  6EDA               	movwf	fsr2h,c
 36101  019F9C  04DE               	decf	postinc2,w,c
 36102  019F9E  A4D8               	btfss	status,2,c
 36103  019FA0  D049               	goto	l11556
 36104                           
 36105                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 36106                           ;stkvar	_i @ sp[(-2)+0]
 36107  019FA2  0EFE               	movlw	-2
 36108  019FA4  50E3               	movf	plusw1,w,c
 36109  019FA6  0D05               	mullw	5
 36110  019FA8  0E00               	movlw	low _S
 36111  019FAA  24F3               	addwf	243,w,c
 36112  019FAC  6ED9               	movwf	fsr2l,c
 36113  019FAE  0E02               	movlw	high _S
 36114  019FB0  20F4               	addwfc	prodh,w,c
 36115  019FB2  6EDA               	movwf	fsr2h,c
 36116  019FB4  0E00               	movlw	0
 36117  019FB6  6EDF               	movwf	indf2,c
 36118  019FB8  D03D               	goto	l11556
 36119  019FBA                     l11548:
 36120                           
 36121                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 36122                           ;stkvar	_i @ sp[(-2)+0]
 36123  019FBA  0EFE               	movlw	-2
 36124  019FBC  50E3               	movf	plusw1,w,c
 36125  019FBE  0D05               	mullw	5
 36126  019FC0  0E00               	movlw	low _S
 36127  019FC2  24F3               	addwf	243,w,c
 36128  019FC4  6ED9               	movwf	fsr2l,c
 36129  019FC6  0E02               	movlw	high _S
 36130  019FC8  20F4               	addwfc	prodh,w,c
 36131  019FCA  6EDA               	movwf	fsr2h,c
 36132  019FCC  50DF               	movf	indf2,w,c
 36133  019FCE  A4D8               	btfss	status,2,c
 36134  019FD0  D031               	goto	l11556
 36135                           
 36136                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 36137                           ;stkvar	_i @ sp[(-2)+0]
 36138  019FD2  0EFE               	movlw	-2
 36139  019FD4  50E3               	movf	plusw1,w,c
 36140  019FD6  0D05               	mullw	5
 36141  019FD8  0E00               	movlw	low _S
 36142  019FDA  24F3               	addwf	243,w,c
 36143  019FDC  6ED9               	movwf	fsr2l,c
 36144  019FDE  0E02               	movlw	high _S
 36145  019FE0  20F4               	addwfc	prodh,w,c
 36146  019FE2  6EDA               	movwf	fsr2h,c
 36147  019FE4  0E01               	movlw	1
 36148  019FE6  6EDF               	movwf	indf2,c
 36149                           
 36150                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 36151  019FE8  EE20  F1C3         	lfsr	2,_V+188	;volatile
 36152                           
 36153                           ;stkvar	_i @ sp[(-2)+0]
 36154  019FEC  0EFE               	movlw	-2
 36155  019FEE  50E3               	movf	plusw1,w,c
 36156  019FF0  0D05               	mullw	5
 36157  019FF2  0E01               	movlw	low (_S+1)
 36158  019FF4  24F3               	addwf	243,w,c
 36159  019FF6  6EE9               	movwf	fsr0l,c
 36160  019FF8  0E02               	movlw	high (_S+1)
 36161  019FFA  20F4               	addwfc	prodh,w,c
 36162  019FFC  6EEA               	movwf	fsr0h,c
 36163  019FFE  006F FF7B FFEE     	movff	postinc2,postinc0
 36164  01A004  006F FF7B FFEE     	movff	postinc2,postinc0
 36165  01A00A  006F FF7B FFEE     	movff	postinc2,postinc0
 36166  01A010  006F FF7B FFEE     	movff	postinc2,postinc0
 36167                           
 36168                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 36169                           ;stkvar	_i @ sp[(-2)+0]
 36170  01A016  0EFE               	movlw	-2
 36171  01A018  006F FF8C  F00C    	movff	plusw1,btemp+11
 36172  01A01E  0E01               	movlw	1
 36173  01A020  6E0B               	movwf	(btemp+10)^0,c
 36174  01A022  2A0C               	incf	(btemp+11)^0,f,c
 36175  01A024  D002               	goto	u1047_24
 36176  01A026                     u1047_25:
 36177  01A026  90D8               	bcf	status,0,c
 36178  01A028  360B               	rlcf	(btemp+10)^0,f,c
 36179  01A02A                     u1047_24:
 36180  01A02A  2E0C               	decfsz	(btemp+11)^0,f,c
 36181  01A02C  D7FC               	goto	u1047_25
 36182  01A02E  500B               	movf	(btemp+10)^0,w,c
 36183  01A030  0102               	movlb	2	; () banked
 36184  01A032  1328               	iorwf	(_S+40)& (0+255),f,b	;volatile
 36185  01A034                     l11556:
 36186                           
 36187                           ;dio.c: 113:  } while (++i < 6);
 36188                           ;stkvar	_i @ sp[(-2)+0]
 36189  01A034  0EFE               	movlw	-2
 36190  01A036  2AE3               	incf	plusw1,f,c
 36191  01A038  0EFE               	movlw	-2
 36192  01A03A  006F FF8C  F001    	movff	plusw1,btemp
 36193  01A040  0E05               	movlw	5
 36194  01A042  6401               	cpfsgt	btemp^0,c
 36195  01A044  D785               	goto	l11540
 36196                           
 36197                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 36198  01A046  8ABF               	bsf	191,5,c	;volatile
 36199                           
 36200                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 36201  01A048  52E5               	movf	postdec1,f,c
 36202  01A04A  52E5               	movf	postdec1,f,c
 36203  01A04C  0012               	return		;funcret
 36204  01A04E                     __end_of_switch_handler:
 36205                           	opt callstack 0
 36206                           
 36207 ;; *************** function _TMR5_ISR *****************
 36208 ;; Defined at:
 36209 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 36210 ;; Parameters:    Size  Location     Type
 36211 ;;		None
 36212 ;; Auto vars:     Size  Location     Type
 36213 ;;		None
 36214 ;; Return value:  Size  Location     Type
 36215 ;;                  1    wreg      void 
 36216 ;; Registers used:
 36217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 36218 ;; Tracked objects:
 36219 ;;		On entry : 0/0
 36220 ;;		On exit  : 3F/0
 36221 ;;		Unchanged: 0/0
 36222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36225 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36226 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36227 ;;Total ram usage:       15 bytes
 36228 ;; Hardware stack levels used:    1
 36229 ;; Hardware stack levels required when called:    9
 36230 ;; This function calls:
 36231 ;;		_TMR5_CallBack
 36232 ;;		_TMR5_WriteTimer
 36233 ;; This function is called by:
 36234 ;;		Interrupt level 1
 36235 ;; This function uses a non-reentrant model
 36236 ;;
 36237                           
 36238                           	psect	text161
 36239  01AE70                     __ptext161:
 36240                           	opt callstack 0
 36241  01AE70                     _TMR5_ISR:
 36242                           	opt callstack 7
 36243                           
 36244                           ;incstack = 0
 36245  01AE70  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 36246  01AE76  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 36247  01AE7C  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 36248  01AE82  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 36249  01AE88  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 36250  01AE8E  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 36251  01AE94  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 36252  01AE9A  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 36253  01AEA0  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 36254  01AEA6  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 36255  01AEAC  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 36256  01AEB2  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 36257  01AEB8  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 36258  01AEBE  EE16  F104         	lfsr	1,___intlo_sp
 36259                           
 36260                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 36261  01AEC2  0139               	movlb	57	; () banked
 36262  01AEC4  9DA8               	bcf	168,6,b	;volatile
 36263                           
 36264                           ; BSR set to: 57
 36265                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 36266  01AEC6  0060  F27B  FFE6   	movff	_timer5ReloadVal,postinc1
 36267  01AECC  0060  F27F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 36268  01AED2  EC7C  F0E4         	call	_TMR5_WriteTimer	;wreg free
 36269                           
 36270                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 36271  01AED6  0101               	movlb	1	; () banked
 36272  01AED8  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 36273  01AEDA  6E2B               	movwf	??_TMR5_ISR^0,c
 36274  01AEDC  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 36275  01AEDE  0E05               	movlw	5
 36276  01AEE0  262B               	addwf	??_TMR5_ISR^0,f,c
 36277  01AEE2  0E00               	movlw	0
 36278  01AEE4  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 36279  01AEE6  0100               	movlb	0	; () banked
 36280  01AEE8  4B9C               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 36281  01AEEA  2B9D               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 36282  01AEEC  502B               	movf	??_TMR5_ISR^0,w,c
 36283  01AEEE  5D9C               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 36284  01AEF0  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 36285  01AEF2  599D               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 36286  01AEF4  A0D8               	btfss	status,0,c
 36287  01AEF6  D005               	goto	i1l1021
 36288                           
 36289                           ; BSR set to: 0
 36290                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 36291  01AEF8  EC08  F0E8         	call	_TMR5_CallBack	;wreg free
 36292                           
 36293                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 36294  01AEFC  0100               	movlb	0	; () banked
 36295  01AEFE  6B9C               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 36296  01AF00  6B9D               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 36297  01AF02                     i1l1021:
 36298                           
 36299                           ; BSR set to: 0
 36300  01AF02  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 36301  01AF08  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 36302  01AF0E  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 36303  01AF14  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 36304  01AF1A  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 36305  01AF20  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 36306  01AF26  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 36307  01AF2C  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 36308  01AF32  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 36309  01AF38  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 36310  01AF3E  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 36311  01AF44  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 36312  01AF4A  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 36313  01AF50  0011               	retfie		f
 36314  01AF52                     __end_of_TMR5_ISR:
 36315                           	opt callstack 0
 36316                           
 36317 ;; *************** function _TMR5_WriteTimer *****************
 36318 ;; Defined at:
 36319 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 36320 ;; Parameters:    Size  Location     Type
 36321 ;;  timerVal        2  [STACK] unsigned short 
 36322 ;; Auto vars:     Size  Location     Type
 36323 ;;		None
 36324 ;; Return value:  Size  Location     Type
 36325 ;;                  1  [STACK] void 
 36326 ;; Registers used:
 36327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 36328 ;; Tracked objects:
 36329 ;;		On entry : 3F/39
 36330 ;;		On exit  : 0/0
 36331 ;;		Unchanged: 0/0
 36332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36337 ;;Total ram usage:        0 bytes
 36338 ;; Hardware stack levels used:    1
 36339 ;; Hardware stack levels required when called:    3
 36340 ;; This function calls:
 36341 ;;		Nothing
 36342 ;; This function is called by:
 36343 ;;		_TMR5_ISR
 36344 ;; This function uses a reentrant model
 36345 ;;
 36346                           
 36347                           	psect	text162
 36348  01C8F8                     __ptext162:
 36349                           	opt callstack 0
 36350  01C8F8                     _TMR5_WriteTimer:
 36351                           	opt callstack 12
 36352                           
 36353                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 36354                           
 36355                           ; BSR set to: 0
 36356                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36357                           ;incstack = 0
 36358  01C8F8  A49A               	btfss	154,2,c	;volatile
 36359  01C8FA  D00F               	goto	l11768
 36360                           
 36361                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 36362  01C8FC  909A               	bcf	154,0,c	;volatile
 36363                           
 36364                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 36365                           ;stkvar	_timerVal @ sp[(0)+-2]
 36366  01C8FE  0EFF               	movlw	255
 36367  01C900  24E1               	addwf	fsr1l,w,c
 36368  01C902  6ED9               	movwf	fsr2l,c
 36369  01C904  0EFF               	movlw	255
 36370  01C906  20E2               	addwfc	fsr1h,w,c
 36371  01C908  6EDA               	movwf	fsr2h,c
 36372  01C90A  50DF               	movf	indf2,w,c
 36373  01C90C  6E99               	movwf	153,c	;volatile
 36374                           
 36375                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 36376                           ;stkvar	_timerVal @ sp[(0)+-2]
 36377  01C90E  0EFE               	movlw	-2
 36378  01C910  006F FF8F FF98     	movff	plusw1,16280	;volatile
 36379                           
 36380                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 36381  01C916  809A               	bsf	154,0,c	;volatile
 36382                           
 36383                           ;mcc_generated_files/tmr5.c: 144:  } else {
 36384  01C918  D00C               	goto	l1004
 36385  01C91A                     l11768:
 36386                           
 36387                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 36388                           ;stkvar	_timerVal @ sp[(0)+-2]
 36389  01C91A  0EFF               	movlw	255
 36390  01C91C  24E1               	addwf	fsr1l,w,c
 36391  01C91E  6ED9               	movwf	fsr2l,c
 36392  01C920  0EFF               	movlw	255
 36393  01C922  20E2               	addwfc	fsr1h,w,c
 36394  01C924  6EDA               	movwf	fsr2h,c
 36395  01C926  50DF               	movf	indf2,w,c
 36396  01C928  6E99               	movwf	153,c	;volatile
 36397                           
 36398                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 36399                           ;stkvar	_timerVal @ sp[(0)+-2]
 36400  01C92A  0EFE               	movlw	-2
 36401  01C92C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 36402  01C932                     l1004:
 36403                           
 36404                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 36405  01C932  52E5               	movf	postdec1,f,c
 36406  01C934  52E5               	movf	postdec1,f,c
 36407  01C936  0012               	return		;funcret
 36408  01C938                     __end_of_TMR5_WriteTimer:
 36409                           	opt callstack 0
 36410                           
 36411 ;; *************** function _TMR5_CallBack *****************
 36412 ;; Defined at:
 36413 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 36414 ;; Parameters:    Size  Location     Type
 36415 ;;		None
 36416 ;; Auto vars:     Size  Location     Type
 36417 ;;		None
 36418 ;; Return value:  Size  Location     Type
 36419 ;;                  1  [STACK] void 
 36420 ;; Registers used:
 36421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 36422 ;; Tracked objects:
 36423 ;;		On entry : 3F/0
 36424 ;;		On exit  : 0/0
 36425 ;;		Unchanged: 0/0
 36426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36431 ;;Total ram usage:        0 bytes
 36432 ;; Hardware stack levels used:    1
 36433 ;; Hardware stack levels required when called:    8
 36434 ;; This function calls:
 36435 ;;		Absolute function
 36436 ;;		_TMR5_DefaultInterruptHandler
 36437 ;; This function is called by:
 36438 ;;		_TMR5_ISR
 36439 ;; This function uses a reentrant model
 36440 ;;
 36441                           
 36442                           	psect	text163
 36443  01D010                     __ptext163:
 36444                           	opt callstack 0
 36445  01D010                     _TMR5_CallBack:
 36446                           	opt callstack 7
 36447                           
 36448                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 36449                           
 36450                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36451                           ;incstack = 0
 36452  01D010  0100               	movlb	0	; () banked
 36453  01D012  517B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 36454  01D014  117C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 36455  01D016  117D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 36456  01D018  B4D8               	btfsc	status,2,c
 36457  01D01A  0012               	return	
 36458                           
 36459                           ; BSR set to: 0
 36460                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 36461  01D01C  D801               	call	u1086_28
 36462  01D01E  0012               	return	
 36463  01D020                     u1086_28:
 36464  01D020  0005               	push	
 36465  01D022  6EFA               	movwf	pclath,c
 36466  01D024  517B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 36467  01D026  6EFD               	movwf	tosl,c
 36468  01D028  517C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 36469  01D02A  6EFE               	movwf	tosh,c
 36470  01D02C  517D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 36471  01D02E  6EFF               	movwf	tosu,c
 36472  01D030  50FA               	movf	pclath,w,c
 36473  01D032  0012               	return		;indir
 36474  01D034                     __end_of_TMR5_CallBack:
 36475                           	opt callstack 0
 36476                           
 36477 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 36478 ;; Defined at:
 36479 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 36480 ;; Parameters:    Size  Location     Type
 36481 ;;		None
 36482 ;; Auto vars:     Size  Location     Type
 36483 ;;		None
 36484 ;; Return value:  Size  Location     Type
 36485 ;;                  1  [STACK] void 
 36486 ;; Registers used:
 36487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 36488 ;; Tracked objects:
 36489 ;;		On entry : 3F/0
 36490 ;;		On exit  : 0/0
 36491 ;;		Unchanged: 0/0
 36492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36497 ;;Total ram usage:        0 bytes
 36498 ;; Hardware stack levels used:    1
 36499 ;; Hardware stack levels required when called:    7
 36500 ;; This function calls:
 36501 ;;		_check_day_time
 36502 ;; This function is called by:
 36503 ;;		_TMR5_Initialize
 36504 ;;		_TMR5_CallBack
 36505 ;; This function uses a reentrant model
 36506 ;;
 36507                           
 36508                           	psect	text164
 36509  01CA62                     __ptext164:
 36510                           	opt callstack 0
 36511  01CA62                     _TMR5_DefaultInterruptHandler:
 36512                           	opt callstack 7
 36513                           
 36514                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 36515                           
 36516                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36517                           ;incstack = 0
 36518  01CA62  A0BE               	btfss	190,0,c	;volatile
 36519  01CA64  D002               	goto	u1012_20
 36520  01CA66  0E01               	movlw	1
 36521  01CA68  D001               	goto	u1012_26
 36522  01CA6A                     u1012_20:
 36523  01CA6A  0E00               	movlw	0
 36524  01CA6C                     u1012_26:
 36525  01CA6C  0AFF               	xorlw	255
 36526  01CA6E  6E0C               	movwf	(btemp+11)^0,c
 36527  01CA70  50BE               	movf	190,w,c	;volatile
 36528  01CA72  180C               	xorwf	(btemp+11)^0,w,c
 36529  01CA74  0BFE               	andlw	-2
 36530  01CA76  180C               	xorwf	(btemp+11)^0,w,c
 36531  01CA78  6EBE               	movwf	190,c	;volatile
 36532                           
 36533                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 36534  01CA7A  0E01               	movlw	1
 36535  01CA7C  0101               	movlb	1	; () banked
 36536  01CA7E  27C3               	addwf	(_V+188)& (0+255),f,b	;volatile
 36537  01CA80  0E00               	movlw	0
 36538  01CA82  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 36539  01CA84  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 36540  01CA86  23C6               	addwfc	(_V+191)& (0+255),f,b	;volatile
 36541                           
 36542                           ; BSR set to: 1
 36543                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 36544  01CA88  0E01               	movlw	1
 36545  01CA8A  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 36546  01CA8C  0E00               	movlw	0
 36547  01CA8E  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 36548  01CA90  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 36549  01CA92  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 36550                           
 36551                           ; BSR set to: 1
 36552                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 36553  01CA94  ECED  F0C8         	call	_check_day_time	;wreg free
 36554                           
 36555                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36556  01CA98  0012               	return		;funcret
 36557  01CA9A                     __end_of_TMR5_DefaultInterruptHandler:
 36558                           	opt callstack 0
 36559                           
 36560 ;; *************** function _check_day_time *****************
 36561 ;; Defined at:
 36562 ;;		line 165 in file "mbmc.c"
 36563 ;; Parameters:    Size  Location     Type
 36564 ;;		None
 36565 ;; Auto vars:     Size  Location     Type
 36566 ;;  light           4  [STACK] float 
 36567 ;; Return value:  Size  Location     Type
 36568 ;;                  1  [STACK] _Bool 
 36569 ;; Registers used:
 36570 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 36571 ;; Tracked objects:
 36572 ;;		On entry : 3F/1
 36573 ;;		On exit  : 0/0
 36574 ;;		Unchanged: 0/0
 36575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36580 ;;Total ram usage:        0 bytes
 36581 ;; Hardware stack levels used:    1
 36582 ;; Hardware stack levels required when called:    6
 36583 ;; This function calls:
 36584 ;;		___flge
 36585 ;;		_conv_raw_result
 36586 ;;		_get_ac_charger_relay
 36587 ;;		_set_ac_charger_relay
 36588 ;; This function is called by:
 36589 ;;		_TMR5_DefaultInterruptHandler
 36590 ;; This function uses a reentrant model
 36591 ;;
 36592                           
 36593                           	psect	text165
 36594  0191DA                     __ptext165:
 36595                           	opt callstack 0
 36596  0191DA                     _check_day_time:
 36597                           	opt callstack 0
 36598                           
 36599                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36600  0191DA  52E6               	movf	postinc1,f,c
 36601  0191DC  52E6               	movf	postinc1,f,c
 36602  0191DE  52E6               	movf	postinc1,f,c
 36603  0191E0  52E6               	movf	postinc1,f,c
 36604                           
 36605                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 36606                           
 36607                           ;incstack = 0
 36608  0191E2  0E00               	movlw	0
 36609  0191E4  6EE6               	movwf	postinc1,c
 36610  0191E6  0E0D               	movlw	13
 36611  0191E8  6EE6               	movwf	postinc1,c
 36612  0191EA  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 36613                           
 36614                           ;stkvar	_light @ sp[(-4)+0]
 36615  0191EE  0EFC               	movlw	-4
 36616  0191F0  0060  F007  FFE3   	movff	btemp,plusw1
 36617  0191F6  0EFD               	movlw	-3
 36618  0191F8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 36619  0191FE  0EFE               	movlw	-2
 36620  019200  0060  F00F  FFE3   	movff	btemp+2,plusw1
 36621  019206  0EFF               	movlw	-1
 36622  019208  0060  F013  FFE3   	movff	btemp+3,plusw1
 36623                           
 36624                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 36625  01920E  2A41               	incf	check_day_time@day_delay^0,f,c
 36626  019210  0441               	decf	check_day_time@day_delay^0,w,c
 36627  019212  A4D8               	btfss	status,2,c
 36628  019214  D0A9               	goto	l2061
 36629  019216  0101               	movlb	1	; () banked
 36630  019218  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 36631  01921A  B4D8               	btfsc	status,2,c
 36632  01921C  D0A5               	goto	l2061
 36633                           
 36634                           ; BSR set to: 1
 36635                           ;mbmc.c: 173:   if (C.soc > 3) {
 36636  01921E  EE22  F0B5         	lfsr	2,_C+182	;volatile
 36637  019222  0E01               	movlw	1
 36638  019224  50DB               	movf	plusw2,w,c
 36639  019226  E104               	bnz	u982_20
 36640  019228  0E04               	movlw	4
 36641  01922A  5CDE               	subwf	postinc2,w,c
 36642  01922C  A0D8               	btfss	status,0,c
 36643  01922E  D073               	goto	l10656
 36644  019230                     u982_20:
 36645                           
 36646                           ; BSR set to: 1
 36647                           ;mbmc.c: 174:    if (!C.day) {
 36648  019230  EE22  F121         	lfsr	2,_C+290	;volatile
 36649  019234  50DF               	movf	indf2,w,c
 36650  019236  A4D8               	btfss	status,2,c
 36651  019238  D035               	goto	l10644
 36652                           
 36653                           ; BSR set to: 1
 36654                           ;mbmc.c: 175:     if (light > 22.0) {
 36655                           ;stkvar	_light @ sp[(-4)+0]
 36656  01923A  0EFC               	movlw	-4
 36657  01923C  006F FF8F FFE6     	movff	plusw1,postinc1
 36658  019242  006F FF8F FFE6     	movff	plusw1,postinc1
 36659  019248  006F FF8F FFE6     	movff	plusw1,postinc1
 36660  01924E  006F FF8F FFE6     	movff	plusw1,postinc1
 36661  019254  0E00               	movlw	0
 36662  019256  6EE6               	movwf	postinc1,c
 36663  019258  0E00               	movlw	0
 36664  01925A  6EE6               	movwf	postinc1,c
 36665  01925C  0EB0               	movlw	176
 36666  01925E  6EE6               	movwf	postinc1,c
 36667  019260  0E41               	movlw	65
 36668  019262  6EE6               	movwf	postinc1,c
 36669  019264  EC7D  F0CD         	call	___flge	;wreg free
 36670  019268  B001               	btfsc	btemp& (0+255),0,c
 36671  01926A  D07E               	goto	l2061
 36672                           
 36673                           ;mbmc.c: 176:      C.day = 1;
 36674  01926C  0E01               	movlw	1
 36675  01926E  006F FFA0  F921    	movff	wreg,_C+290	;volatile
 36676                           
 36677                           ;mbmc.c: 177:      C.day_start = V.ticks;
 36678  019274  EE20  F188         	lfsr	2,_V+129	;volatile
 36679  019278  006F FF78  F922    	movff	postinc2,_C+291	;volatile
 36680  01927E  006F FF78  F923    	movff	postinc2,_C+292	;volatile
 36681  019284  006F FF78  F924    	movff	postinc2,_C+293	;volatile
 36682  01928A  006F FF74  F925    	movff	postdec2,_C+294	;volatile
 36683                           
 36684                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 36685  019290  EC9F  F0E9         	call	_get_ac_charger_relay	;wreg free
 36686  019294  5001               	movf	btemp^0,w,c
 36687  019296  B4D8               	btfsc	status,2,c
 36688  019298  D06B               	goto	l2057
 36689                           
 36690                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 36691  01929A  0E00               	movlw	0
 36692  01929C  6EE6               	movwf	postinc1,c
 36693  01929E  EC89  F0E9         	call	_set_ac_charger_relay	;wreg free
 36694  0192A2  D066               	goto	l2057
 36695  0192A4                     l10644:
 36696                           
 36697                           ; BSR set to: 1
 36698                           ;mbmc.c: 184:     if (light < 12.0) {
 36699  0192A4  0E00               	movlw	0
 36700  0192A6  6EE6               	movwf	postinc1,c
 36701  0192A8  0E00               	movlw	0
 36702  0192AA  6EE6               	movwf	postinc1,c
 36703  0192AC  0E40               	movlw	64
 36704  0192AE  6EE6               	movwf	postinc1,c
 36705  0192B0  0E41               	movlw	65
 36706  0192B2  6EE6               	movwf	postinc1,c
 36707                           
 36708                           ;stkvar	_light @ sp[(-8)+0]
 36709  0192B4  0EF8               	movlw	-8
 36710  0192B6  006F FF8F FFE6     	movff	plusw1,postinc1
 36711  0192BC  006F FF8F FFE6     	movff	plusw1,postinc1
 36712  0192C2  006F FF8F FFE6     	movff	plusw1,postinc1
 36713  0192C8  006F FF8F FFE6     	movff	plusw1,postinc1
 36714  0192CE  EC7D  F0CD         	call	___flge	;wreg free
 36715  0192D2  B001               	btfsc	btemp& (0+255),0,c
 36716  0192D4  D049               	goto	l2061
 36717                           
 36718                           ;mbmc.c: 185:      C.day = 0;
 36719  0192D6  0E00               	movlw	0
 36720  0192D8  006F FFA0  F921    	movff	wreg,_C+290	;volatile
 36721                           
 36722                           ;mbmc.c: 186:      C.day_end = V.ticks;
 36723  0192DE  EE20  F188         	lfsr	2,_V+129	;volatile
 36724  0192E2  006F FF78  F926    	movff	postinc2,_C+295	;volatile
 36725  0192E8  006F FF78  F927    	movff	postinc2,_C+296	;volatile
 36726  0192EE  006F FF78  F928    	movff	postinc2,_C+297	;volatile
 36727  0192F4  006F FF74  F929    	movff	postdec2,_C+298	;volatile
 36728                           
 36729                           ;mbmc.c: 190:      if ((C.soc < 20)) {
 36730  0192FA  EE22  F0B5         	lfsr	2,_C+182	;volatile
 36731  0192FE  0E01               	movlw	1
 36732  019300  50DB               	movf	plusw2,w,c
 36733  019302  E136               	bnz	l2057
 36734  019304  0E14               	movlw	20
 36735  019306  5CDE               	subwf	postinc2,w,c
 36736  019308  B0D8               	btfsc	status,0,c
 36737  01930A  D032               	goto	l2057
 36738                           
 36739                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 36740  01930C  0E01               	movlw	1
 36741  01930E  6EE6               	movwf	postinc1,c
 36742  019310  EC89  F0E9         	call	_set_ac_charger_relay	;wreg free
 36743  019314  D02D               	goto	l2057
 36744  019316                     l10656:
 36745                           
 36746                           ; BSR set to: 1
 36747                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 36748  019316  EE22  F077         	lfsr	2,_C+120	;volatile
 36749  01931A  006F FF7B FFE6     	movff	postinc2,postinc1
 36750  019320  006F FF7B FFE6     	movff	postinc2,postinc1
 36751  019326  006F FF7B FFE6     	movff	postinc2,postinc1
 36752  01932C  006F FF7B FFE6     	movff	postinc2,postinc1
 36753  019332  EE22  F07B         	lfsr	2,_C+124	;volatile
 36754  019336  006F FF7B FFE6     	movff	postinc2,postinc1
 36755  01933C  006F FF7B FFE6     	movff	postinc2,postinc1
 36756  019342  006F FF7B FFE6     	movff	postinc2,postinc1
 36757  019348  006F FF7B FFE6     	movff	postinc2,postinc1
 36758  01934E  EC7D  F0CD         	call	___flge	;wreg free
 36759  019352  B001               	btfsc	btemp& (0+255),0,c
 36760  019354  D009               	goto	l2061
 36761                           
 36762                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 36763  019356  EC9F  F0E9         	call	_get_ac_charger_relay	;wreg free
 36764  01935A  5001               	movf	btemp^0,w,c
 36765  01935C  A4D8               	btfss	status,2,c
 36766  01935E  D004               	goto	l2061
 36767                           
 36768                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 36769  019360  0E01               	movlw	1
 36770  019362  6EE6               	movwf	postinc1,c
 36771  019364  EC89  F0E9         	call	_set_ac_charger_relay	;wreg free
 36772  019368                     l2061:
 36773                           
 36774                           ;mbmc.c: 204:  if (day_delay >= 240)
 36775  019368  0EEF               	movlw	239
 36776  01936A  6441               	cpfsgt	check_day_time@day_delay^0,c
 36777  01936C  D001               	goto	l2057
 36778                           
 36779                           ;mbmc.c: 205:   day_delay = 0;
 36780  01936E  6A41               	clrf	check_day_time@day_delay^0,c
 36781  019370                     l2057:
 36782                           
 36783                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 36784  019370  52E5               	movf	postdec1,f,c
 36785  019372  52E5               	movf	postdec1,f,c
 36786  019374  52E5               	movf	postdec1,f,c
 36787  019376  52E5               	movf	postdec1,f,c
 36788  019378  0012               	return		;funcret
 36789  01937A                     __end_of_check_day_time:
 36790                           	opt callstack 0
 36791                           
 36792 ;; *************** function _set_ac_charger_relay *****************
 36793 ;; Defined at:
 36794 ;;		line 135 in file "mbmc.c"
 36795 ;; Parameters:    Size  Location     Type
 36796 ;;  mode            1  [STACK] const _Bool 
 36797 ;; Auto vars:     Size  Location     Type
 36798 ;;		None
 36799 ;; Return value:  Size  Location     Type
 36800 ;;                  1  [STACK] void 
 36801 ;; Registers used:
 36802 ;;		wreg, fsr1l, fsr1h
 36803 ;; Tracked objects:
 36804 ;;		On entry : 0/1
 36805 ;;		On exit  : 0/0
 36806 ;;		Unchanged: 0/0
 36807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36812 ;;Total ram usage:        0 bytes
 36813 ;; Hardware stack levels used:    1
 36814 ;; Hardware stack levels required when called:    3
 36815 ;; This function calls:
 36816 ;;		Nothing
 36817 ;; This function is called by:
 36818 ;;		_check_day_time
 36819 ;; This function uses a reentrant model
 36820 ;;
 36821                           
 36822                           	psect	text166
 36823  01D312                     __ptext166:
 36824                           	opt callstack 0
 36825  01D312                     _set_ac_charger_relay:
 36826                           	opt callstack 9
 36827                           
 36828                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 36829                           ;stkvar	_mode @ sp[(0)+-1]
 36830                           
 36831                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36832                           ;incstack = 0
 36833  01D312  0EFF               	movlw	-1
 36834  01D314  B0E3               	btfsc	plusw1,0,c
 36835  01D316  D002               	bra	u971_25
 36836  01D318  9CBD               	bcf	189,6,c	;volatile
 36837  01D31A  D001               	bra	u971_26
 36838  01D31C                     u971_25:
 36839  01D31C  8CBD               	bsf	189,6,c	;volatile
 36840  01D31E                     u971_26:
 36841                           
 36842                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 36843  01D31E  52E5               	movf	postdec1,f,c
 36844  01D320  0012               	return		;funcret
 36845  01D322                     __end_of_set_ac_charger_relay:
 36846                           	opt callstack 0
 36847                           
 36848 ;; *************** function _get_ac_charger_relay *****************
 36849 ;; Defined at:
 36850 ;;		line 140 in file "mbmc.c"
 36851 ;; Parameters:    Size  Location     Type
 36852 ;;		None
 36853 ;; Auto vars:     Size  Location     Type
 36854 ;;		None
 36855 ;; Return value:  Size  Location     Type
 36856 ;;                  1  [STACK] _Bool 
 36857 ;; Registers used:
 36858 ;;		btemp
 36859 ;; Tracked objects:
 36860 ;;		On entry : 0/1
 36861 ;;		On exit  : 0/0
 36862 ;;		Unchanged: 0/0
 36863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36868 ;;Total ram usage:        0 bytes
 36869 ;; Hardware stack levels used:    1
 36870 ;; Hardware stack levels required when called:    3
 36871 ;; This function calls:
 36872 ;;		Nothing
 36873 ;; This function is called by:
 36874 ;;		_check_day_time
 36875 ;;		_calc_bsoc
 36876 ;; This function uses a reentrant model
 36877 ;;
 36878                           
 36879                           	psect	text167
 36880  01D33E                     __ptext167:
 36881                           	opt callstack 0
 36882  01D33E                     _get_ac_charger_relay:
 36883                           	opt callstack 10
 36884                           
 36885                           ;mbmc.c: 142:  return LATDbits.LATD6;
 36886                           
 36887                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36888                           ;incstack = 0
 36889  01D33E  ACBD               	btfss	189,6,c	;volatile
 36890  01D340  D003               	goto	u1005_20
 36891  01D342  6A01               	clrf	btemp^0,c
 36892  01D344  2A01               	incf	btemp^0,f,c
 36893  01D346  0012               	return	
 36894  01D348                     u1005_20:
 36895  01D348  6A01               	clrf	btemp^0,c
 36896                           
 36897                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 36898  01D34A  0012               	return		;funcret
 36899  01D34C                     __end_of_get_ac_charger_relay:
 36900                           	opt callstack 0
 36901                           
 36902 ;; *************** function _TMR3_ISR *****************
 36903 ;; Defined at:
 36904 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 36905 ;; Parameters:    Size  Location     Type
 36906 ;;		None
 36907 ;; Auto vars:     Size  Location     Type
 36908 ;;		None
 36909 ;; Return value:  Size  Location     Type
 36910 ;;                  1    wreg      void 
 36911 ;; Registers used:
 36912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 36913 ;; Tracked objects:
 36914 ;;		On entry : 0/0
 36915 ;;		On exit  : 3F/0
 36916 ;;		Unchanged: 0/0
 36917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36920 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36921 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36922 ;;Total ram usage:       25 bytes
 36923 ;; Hardware stack levels used:    1
 36924 ;; Hardware stack levels required when called:   14
 36925 ;; This function calls:
 36926 ;;		_TMR3_CallBack
 36927 ;;		_TMR3_WriteTimer
 36928 ;; This function is called by:
 36929 ;;		Interrupt level 1
 36930 ;; This function uses a non-reentrant model
 36931 ;;
 36932                           
 36933                           	psect	text168
 36934  019C5C                     __ptext168:
 36935                           	opt callstack 0
 36936  019C5C                     _TMR3_ISR:
 36937                           	opt callstack 2
 36938                           
 36939                           ;incstack = 0
 36940  019C5C  006F FF60  F0E7    	movff	status,??_TMR3_ISR
 36941  019C62  006F FFD8  F0E8    	movff	tblptrl,??_TMR3_ISR+1
 36942  019C68  006F FFDC  F0E9    	movff	tblptrh,??_TMR3_ISR+2
 36943  019C6E  006F FFE0  F0EA    	movff	tblptru,??_TMR3_ISR+3
 36944  019C74  006F FFD4  F0EB    	movff	tablat,??_TMR3_ISR+4
 36945  019C7A  0060  F004  F0EC   	movff	btemp,??_TMR3_ISR+5
 36946  019C80  0060  F008  F0ED   	movff	btemp+1,??_TMR3_ISR+6
 36947  019C86  0060  F00C  F0EE   	movff	btemp+2,??_TMR3_ISR+7
 36948  019C8C  0060  F010  F0EF   	movff	btemp+3,??_TMR3_ISR+8
 36949  019C92  0060  F014  F0F0   	movff	btemp+4,??_TMR3_ISR+9
 36950  019C98  0060  F018  F0F1   	movff	btemp+5,??_TMR3_ISR+10
 36951  019C9E  0060  F01C  F0F2   	movff	btemp+6,??_TMR3_ISR+11
 36952  019CA4  0060  F020  F0F3   	movff	btemp+7,??_TMR3_ISR+12
 36953  019CAA  0060  F024  F0F4   	movff	btemp+8,??_TMR3_ISR+13
 36954  019CB0  0060  F028  F0F5   	movff	btemp+9,??_TMR3_ISR+14
 36955  019CB6  0060  F02C  F0F6   	movff	btemp+10,??_TMR3_ISR+15
 36956  019CBC  0060  F030  F0F7   	movff	btemp+11,??_TMR3_ISR+16
 36957  019CC2  0060  F044  F0F8   	movff	btemp+16,??_TMR3_ISR+17
 36958  019CC8  0060  F048  F0F9   	movff	btemp+17,??_TMR3_ISR+18
 36959  019CCE  0060  F04C  F0FA   	movff	btemp+18,??_TMR3_ISR+19
 36960  019CD4  0060  F050  F0FB   	movff	btemp+19,??_TMR3_ISR+20
 36961  019CDA  0060  F054  F0FC   	movff	btemp+20,??_TMR3_ISR+21
 36962  019CE0  0060  F058  F0FD   	movff	btemp+21,??_TMR3_ISR+22
 36963  019CE6  0060  F05C  F0FE   	movff	btemp+22,??_TMR3_ISR+23
 36964  019CEC  0060  F060  F0FF   	movff	btemp+23,??_TMR3_ISR+24
 36965  019CF2  EE16  F104         	lfsr	1,___intlo_sp
 36966                           
 36967                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 36968  019CF6  0139               	movlb	57	; () banked
 36969  019CF8  9DA6               	bcf	166,6,b	;volatile
 36970                           
 36971                           ; BSR set to: 57
 36972                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 36973  019CFA  0060  F26B  FFE6   	movff	_timer3ReloadVal,postinc1
 36974  019D00  0060  F26F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 36975  019D06  EC9C  F0E4         	call	_TMR3_WriteTimer	;wreg free
 36976                           
 36977                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 36978  019D0A  0100               	movlb	0	; () banked
 36979  019D0C  4B98               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 36980  019D0E  2B99               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 36981  019D10  5199               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 36982  019D12  E104               	bnz	i1u1369_20
 36983  019D14  0E28               	movlw	40
 36984  019D16  5D98               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 36985  019D18  A0D8               	btfss	status,0,c
 36986  019D1A  D005               	goto	i1l1209
 36987  019D1C                     i1u1369_20:
 36988                           
 36989                           ; BSR set to: 0
 36990                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 36991  019D1C  EC1A  F0E8         	call	_TMR3_CallBack	;wreg free
 36992                           
 36993                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 36994  019D20  0100               	movlb	0	; () banked
 36995  019D22  6B98               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 36996  019D24  6B99               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 36997  019D26                     i1l1209:
 36998                           
 36999                           ; BSR set to: 0
 37000  019D26  0060  F3FC  F018   	movff	??_TMR3_ISR+24,btemp+23
 37001  019D2C  0060  F3F8  F017   	movff	??_TMR3_ISR+23,btemp+22
 37002  019D32  0060  F3F4  F016   	movff	??_TMR3_ISR+22,btemp+21
 37003  019D38  0060  F3F0  F015   	movff	??_TMR3_ISR+21,btemp+20
 37004  019D3E  0060  F3EC  F014   	movff	??_TMR3_ISR+20,btemp+19
 37005  019D44  0060  F3E8  F013   	movff	??_TMR3_ISR+19,btemp+18
 37006  019D4A  0060  F3E4  F012   	movff	??_TMR3_ISR+18,btemp+17
 37007  019D50  0060  F3E0  F011   	movff	??_TMR3_ISR+17,btemp+16
 37008  019D56  0060  F3DC  F00C   	movff	??_TMR3_ISR+16,btemp+11
 37009  019D5C  0060  F3D8  F00B   	movff	??_TMR3_ISR+15,btemp+10
 37010  019D62  0060  F3D4  F00A   	movff	??_TMR3_ISR+14,btemp+9
 37011  019D68  0060  F3D0  F009   	movff	??_TMR3_ISR+13,btemp+8
 37012  019D6E  0060  F3CC  F008   	movff	??_TMR3_ISR+12,btemp+7
 37013  019D74  0060  F3C8  F007   	movff	??_TMR3_ISR+11,btemp+6
 37014  019D7A  0060  F3C4  F006   	movff	??_TMR3_ISR+10,btemp+5
 37015  019D80  0060  F3C0  F005   	movff	??_TMR3_ISR+9,btemp+4
 37016  019D86  0060  F3BC  F004   	movff	??_TMR3_ISR+8,btemp+3
 37017  019D8C  0060  F3B8  F003   	movff	??_TMR3_ISR+7,btemp+2
 37018  019D92  0060  F3B4  F002   	movff	??_TMR3_ISR+6,btemp+1
 37019  019D98  0060  F3B0  F001   	movff	??_TMR3_ISR+5,btemp
 37020  019D9E  0060  F3AF  FFF5   	movff	??_TMR3_ISR+4,tablat
 37021  019DA4  0060  F3AB  FFF8   	movff	??_TMR3_ISR+3,tblptru
 37022  019DAA  0060  F3A7  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 37023  019DB0  0060  F3A3  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 37024  019DB6  0060  F39F  FFD8   	movff	??_TMR3_ISR,status
 37025  019DBC  0011               	retfie		f
 37026  019DBE                     __end_of_TMR3_ISR:
 37027                           	opt callstack 0
 37028                           
 37029 ;; *************** function _TMR3_WriteTimer *****************
 37030 ;; Defined at:
 37031 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 37032 ;; Parameters:    Size  Location     Type
 37033 ;;  timerVal        2  [STACK] unsigned short 
 37034 ;; Auto vars:     Size  Location     Type
 37035 ;;		None
 37036 ;; Return value:  Size  Location     Type
 37037 ;;                  1  [STACK] void 
 37038 ;; Registers used:
 37039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 37040 ;; Tracked objects:
 37041 ;;		On entry : 3F/39
 37042 ;;		On exit  : 0/0
 37043 ;;		Unchanged: 0/0
 37044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37049 ;;Total ram usage:        0 bytes
 37050 ;; Hardware stack levels used:    1
 37051 ;; Hardware stack levels required when called:    3
 37052 ;; This function calls:
 37053 ;;		Nothing
 37054 ;; This function is called by:
 37055 ;;		_TMR3_ISR
 37056 ;; This function uses a reentrant model
 37057 ;;
 37058                           
 37059                           	psect	text169
 37060  01C938                     __ptext169:
 37061                           	opt callstack 0
 37062  01C938                     _TMR3_WriteTimer:
 37063                           	opt callstack 12
 37064                           
 37065                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 37066                           
 37067                           ; BSR set to: 0
 37068                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37069                           ;incstack = 0
 37070  01C938  A4A6               	btfss	166,2,c	;volatile
 37071  01C93A  D00F               	goto	l11786
 37072                           
 37073                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 37074  01C93C  90A6               	bcf	166,0,c	;volatile
 37075                           
 37076                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 37077                           ;stkvar	_timerVal @ sp[(0)+-2]
 37078  01C93E  0EFF               	movlw	255
 37079  01C940  24E1               	addwf	fsr1l,w,c
 37080  01C942  6ED9               	movwf	fsr2l,c
 37081  01C944  0EFF               	movlw	255
 37082  01C946  20E2               	addwfc	fsr1h,w,c
 37083  01C948  6EDA               	movwf	fsr2h,c
 37084  01C94A  50DF               	movf	indf2,w,c
 37085  01C94C  6EA5               	movwf	165,c	;volatile
 37086                           
 37087                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 37088                           ;stkvar	_timerVal @ sp[(0)+-2]
 37089  01C94E  0EFE               	movlw	-2
 37090  01C950  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 37091                           
 37092                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 37093  01C956  80A6               	bsf	166,0,c	;volatile
 37094                           
 37095                           ;mcc_generated_files/tmr3.c: 141:     }
 37096  01C958  D00C               	goto	l1192
 37097  01C95A                     l11786:
 37098                           
 37099                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 37100                           ;stkvar	_timerVal @ sp[(0)+-2]
 37101  01C95A  0EFF               	movlw	255
 37102  01C95C  24E1               	addwf	fsr1l,w,c
 37103  01C95E  6ED9               	movwf	fsr2l,c
 37104  01C960  0EFF               	movlw	255
 37105  01C962  20E2               	addwfc	fsr1h,w,c
 37106  01C964  6EDA               	movwf	fsr2h,c
 37107  01C966  50DF               	movf	indf2,w,c
 37108  01C968  6EA5               	movwf	165,c	;volatile
 37109                           
 37110                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 37111                           ;stkvar	_timerVal @ sp[(0)+-2]
 37112  01C96A  0EFE               	movlw	-2
 37113  01C96C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 37114  01C972                     l1192:
 37115                           
 37116                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 37117  01C972  52E5               	movf	postdec1,f,c
 37118  01C974  52E5               	movf	postdec1,f,c
 37119  01C976  0012               	return		;funcret
 37120  01C978                     __end_of_TMR3_WriteTimer:
 37121                           	opt callstack 0
 37122                           
 37123 ;; *************** function _TMR3_CallBack *****************
 37124 ;; Defined at:
 37125 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 37126 ;; Parameters:    Size  Location     Type
 37127 ;;		None
 37128 ;; Auto vars:     Size  Location     Type
 37129 ;;		None
 37130 ;; Return value:  Size  Location     Type
 37131 ;;                  1  [STACK] void 
 37132 ;; Registers used:
 37133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 37134 ;; Tracked objects:
 37135 ;;		On entry : 3F/0
 37136 ;;		On exit  : 0/0
 37137 ;;		Unchanged: 0/0
 37138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37143 ;;Total ram usage:        0 bytes
 37144 ;; Hardware stack levels used:    1
 37145 ;; Hardware stack levels required when called:   13
 37146 ;; This function calls:
 37147 ;;		Absolute function
 37148 ;;		_TMR3_DefaultInterruptHandler
 37149 ;;		_calc_bsoc
 37150 ;; This function is called by:
 37151 ;;		_TMR3_ISR
 37152 ;; This function uses a reentrant model
 37153 ;;
 37154                           
 37155                           	psect	text170
 37156  01D034                     __ptext170:
 37157                           	opt callstack 0
 37158  01D034                     _TMR3_CallBack:
 37159                           	opt callstack 2
 37160                           
 37161                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 37162                           
 37163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37164                           ;incstack = 0
 37165  01D034  0100               	movlb	0	; () banked
 37166  01D036  5178               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37167  01D038  1179               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37168  01D03A  117A               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 37169  01D03C  B4D8               	btfsc	status,2,c
 37170  01D03E  0012               	return	
 37171                           
 37172                           ; BSR set to: 0
 37173                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 37174  01D040  D801               	call	u1350_28
 37175  01D042  0012               	return	
 37176  01D044                     u1350_28:
 37177  01D044  0005               	push	
 37178  01D046  6EFA               	movwf	pclath,c
 37179  01D048  5178               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37180  01D04A  6EFD               	movwf	tosl,c
 37181  01D04C  5179               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37182  01D04E  6EFE               	movwf	tosh,c
 37183  01D050  517A               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 37184  01D052  6EFF               	movwf	tosu,c
 37185  01D054  50FA               	movf	pclath,w,c
 37186  01D056  0012               	return		;indir
 37187  01D058                     __end_of_TMR3_CallBack:
 37188                           	opt callstack 0
 37189                           
 37190 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 37191 ;; Defined at:
 37192 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 37193 ;; Parameters:    Size  Location     Type
 37194 ;;		None
 37195 ;; Auto vars:     Size  Location     Type
 37196 ;;		None
 37197 ;; Return value:  Size  Location     Type
 37198 ;;                  1  [STACK] void 
 37199 ;; Registers used:
 37200 ;;		None
 37201 ;; Tracked objects:
 37202 ;;		On entry : 3F/0
 37203 ;;		On exit  : 0/0
 37204 ;;		Unchanged: 0/0
 37205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37210 ;;Total ram usage:        0 bytes
 37211 ;; Hardware stack levels used:    1
 37212 ;; Hardware stack levels required when called:    3
 37213 ;; This function calls:
 37214 ;;		Nothing
 37215 ;; This function is called by:
 37216 ;;		_TMR3_Initialize
 37217 ;;		_TMR3_CallBack
 37218 ;; This function uses a reentrant model
 37219 ;;
 37220                           
 37221                           	psect	text171
 37222  01D3F0                     __ptext171:
 37223                           	opt callstack 0
 37224  01D3F0                     _TMR3_DefaultInterruptHandler:
 37225                           	opt callstack 11
 37226                           
 37227                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 37228                           
 37229                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37230                           ;incstack = 0
 37231  01D3F0  0012               	return		;funcret
 37232  01D3F2                     __end_of_TMR3_DefaultInterruptHandler:
 37233                           	opt callstack 0
 37234                           
 37235 ;; *************** function _calc_bsoc *****************
 37236 ;; Defined at:
 37237 ;;		line 39 in file "bsoc.c"
 37238 ;; Parameters:    Size  Location     Type
 37239 ;;		None
 37240 ;; Auto vars:     Size  Location     Type
 37241 ;;  adj             4  [STACK] float 
 37242 ;;  log_ptr         2  [STACK] PTR unsigned char 
 37243 ;;		 -> port_data(512), 
 37244 ;; Return value:  Size  Location     Type
 37245 ;;                  1  [STACK] void 
 37246 ;; Registers used:
 37247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 37248 ;; Tracked objects:
 37249 ;;		On entry : 3F/0
 37250 ;;		On exit  : 5/1
 37251 ;;		Unchanged: 0/0
 37252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37257 ;;Total ram usage:        0 bytes
 37258 ;; Hardware stack levels used:    1
 37259 ;; Hardware stack levels required when called:   12
 37260 ;; This function calls:
 37261 ;;		_StartTimer
 37262 ;;		___asfladd
 37263 ;;		___fldiv
 37264 ;;		___flge
 37265 ;;		___flmul
 37266 ;;		___flneg
 37267 ;;		___fltol
 37268 ;;		_fabsf
 37269 ;;		_get_ac_charger_relay
 37270 ;;		_port_data_dma_ptr
 37271 ;;		_send_port_data_dma
 37272 ;;		_sprintf
 37273 ;;		_strlen
 37274 ;; This function is called by:
 37275 ;;		_init_bsoc
 37276 ;;		_TMR3_CallBack
 37277 ;; This function uses a reentrant model
 37278 ;;
 37279                           
 37280                           	psect	text172
 37281  01346E                     __ptext172:
 37282                           	opt callstack 0
 37283  01346E                     _calc_bsoc:
 37284                           	opt callstack 0
 37285                           
 37286                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37287  01346E  0E06               	movlw	6
 37288  013470  26E1               	addwf	fsr1l,f,c
 37289  013472  0E00               	movlw	0
 37290  013474  22E2               	addwfc	fsr1h,f,c
 37291                           
 37292                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 37293                           
 37294                           ;incstack = 0
 37295  013476  0E00               	movlw	0
 37296  013478  6E09               	movwf	(btemp+8)^0,c
 37297  01347A  0E00               	movlw	0
 37298  01347C  6E0A               	movwf	(btemp+9)^0,c
 37299  01347E  0E80               	movlw	128
 37300  013480  6E0B               	movwf	(btemp+10)^0,c
 37301  013482  0E3F               	movlw	63
 37302  013484  6E0C               	movwf	(btemp+11)^0,c
 37303                           
 37304                           ;stkvar	_adj @ sp[(-6)+0]
 37305  013486  0EFA               	movlw	-6
 37306  013488  0060  F027  FFE3   	movff	btemp+8,plusw1
 37307  01348E  0EFB               	movlw	-5
 37308  013490  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37309  013496  0EFC               	movlw	-4
 37310  013498  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37311  01349E  0EFD               	movlw	-3
 37312  0134A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 37313  0134A6  82BE               	bsf	190,1,c	;volatile
 37314                           
 37315                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 37316  0134A8  0E00               	movlw	0
 37317  0134AA  6EE6               	movwf	postinc1,c
 37318  0134AC  0E00               	movlw	0
 37319  0134AE  6EE6               	movwf	postinc1,c
 37320  0134B0  0E61               	movlw	97
 37321  0134B2  6EE6               	movwf	postinc1,c
 37322  0134B4  0E45               	movlw	69
 37323  0134B6  6EE6               	movwf	postinc1,c
 37324  0134B8  EE22  F043         	lfsr	2,_C+68	;volatile
 37325  0134BC  006F FF7B FFE6     	movff	postinc2,postinc1
 37326  0134C2  006F FF7B FFE6     	movff	postinc2,postinc1
 37327  0134C8  006F FF7B FFE6     	movff	postinc2,postinc1
 37328  0134CE  006F FF7B FFE6     	movff	postinc2,postinc1
 37329  0134D4  EC61  F0A7         	call	___fldiv	;wreg free
 37330  0134D8  0060  F007  FFE6   	movff	btemp,postinc1
 37331  0134DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37332  0134E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37333  0134EA  0060  F013  FFE6   	movff	btemp+3,postinc1
 37334  0134F0  0E8F               	movlw	low (_C+144)
 37335  0134F2  6EE6               	movwf	postinc1,c
 37336  0134F4  0E08               	movlw	high (_C+144)
 37337  0134F6  6EE6               	movwf	postinc1,c
 37338  0134F8  EC44  F0DF         	call	___asfladd	;wreg free
 37339                           
 37340                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 37341  0134FC  EE22  F08F         	lfsr	2,_C+144	;volatile
 37342  013500  006F FF7B FFE6     	movff	postinc2,postinc1
 37343  013506  006F FF7B FFE6     	movff	postinc2,postinc1
 37344  01350C  006F FF7B FFE6     	movff	postinc2,postinc1
 37345  013512  006F FF7B FFE6     	movff	postinc2,postinc1
 37346  013518  EE22  F08B         	lfsr	2,_C+140	;volatile
 37347  01351C  006F FF7B FFE6     	movff	postinc2,postinc1
 37348  013522  006F FF7B FFE6     	movff	postinc2,postinc1
 37349  013528  006F FF7B FFE6     	movff	postinc2,postinc1
 37350  01352E  006F FF7B FFE6     	movff	postinc2,postinc1
 37351  013534  EC7D  F0CD         	call	___flge	;wreg free
 37352  013538  B001               	btfsc	btemp& (0+255),0,c
 37353  01353A  D00E               	goto	l14032
 37354                           
 37355                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 37356  01353C  EE22  F08B         	lfsr	2,_C+140	;volatile
 37357  013540  006F FF78  F88F    	movff	postinc2,_C+144	;volatile
 37358  013546  006F FF78  F890    	movff	postinc2,_C+145	;volatile
 37359  01354C  006F FF78  F891    	movff	postinc2,_C+146	;volatile
 37360  013552  006F FF74  F892    	movff	postdec2,_C+147	;volatile
 37361  013558                     l14032:
 37362                           
 37363                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 37364  013558  0ECD               	movlw	205
 37365  01355A  6EE6               	movwf	postinc1,c
 37366  01355C  0ECC               	movlw	204
 37367  01355E  6EE6               	movwf	postinc1,c
 37368  013560  0ECC               	movlw	204
 37369  013562  6EE6               	movwf	postinc1,c
 37370  013564  0E3D               	movlw	61
 37371  013566  6EE6               	movwf	postinc1,c
 37372  013568  EE22  F08F         	lfsr	2,_C+144	;volatile
 37373  01356C  006F FF7B FFE6     	movff	postinc2,postinc1
 37374  013572  006F FF7B FFE6     	movff	postinc2,postinc1
 37375  013578  006F FF7B FFE6     	movff	postinc2,postinc1
 37376  01357E  006F FF7B FFE6     	movff	postinc2,postinc1
 37377  013584  EC7D  F0CD         	call	___flge	;wreg free
 37378  013588  B001               	btfsc	btemp& (0+255),0,c
 37379  01358A  D010               	goto	l14036
 37380                           
 37381                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 37382  01358C  0ECD               	movlw	205
 37383  01358E  006F FFA0  F88F    	movff	wreg,_C+144	;volatile
 37384  013594  0ECC               	movlw	204
 37385  013596  006F FFA0  F890    	movff	wreg,_C+145	;volatile
 37386  01359C  0ECC               	movlw	204
 37387  01359E  006F FFA0  F891    	movff	wreg,_C+146	;volatile
 37388  0135A4  0E3D               	movlw	61
 37389  0135A6  006F FFA0  F892    	movff	wreg,_C+147	;volatile
 37390  0135AC                     l14036:
 37391                           
 37392                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 37393  0135AC  EE22  F043         	lfsr	2,_C+68	;volatile
 37394  0135B0  006F FF7B FFE6     	movff	postinc2,postinc1
 37395  0135B6  006F FF7B FFE6     	movff	postinc2,postinc1
 37396  0135BC  006F FF7B FFE6     	movff	postinc2,postinc1
 37397  0135C2  006F FF7B FFE6     	movff	postinc2,postinc1
 37398  0135C8  0E0A               	movlw	10
 37399  0135CA  6EE6               	movwf	postinc1,c
 37400  0135CC  0ED7               	movlw	215
 37401  0135CE  6EE6               	movwf	postinc1,c
 37402  0135D0  0E23               	movlw	35
 37403  0135D2  6EE6               	movwf	postinc1,c
 37404  0135D4  0E3C               	movlw	60
 37405  0135D6  6EE6               	movwf	postinc1,c
 37406  0135D8  EC7D  F0CD         	call	___flge	;wreg free
 37407  0135DC  B001               	btfsc	btemp& (0+255),0,c
 37408  0135DE  D01C               	goto	l14040
 37409                           
 37410                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 37411  0135E0  0062  F2F4  F009   	movff	_C+190,btemp+8	;volatile
 37412  0135E6  0062  F2F8  F00A   	movff	_C+191,btemp+9	;volatile
 37413  0135EC  0062  F2FC  F00B   	movff	_C+192,btemp+10	;volatile
 37414  0135F2  0062  F300  F00C   	movff	_C+193,btemp+11	;volatile
 37415                           
 37416                           ;stkvar	_adj @ sp[(-6)+0]
 37417  0135F8  0EFA               	movlw	-6
 37418  0135FA  0060  F027  FFE3   	movff	btemp+8,plusw1
 37419  013600  0EFB               	movlw	-5
 37420  013602  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37421  013608  0EFC               	movlw	-4
 37422  01360A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37423  013610  0EFD               	movlw	-3
 37424  013612  0060  F033  FFE3   	movff	btemp+11,plusw1
 37425  013618                     l14040:
 37426                           
 37427                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 37428  013618  0E0A               	movlw	10
 37429  01361A  6EE6               	movwf	postinc1,c
 37430  01361C  0ED7               	movlw	215
 37431  01361E  6EE6               	movwf	postinc1,c
 37432  013620  0E23               	movlw	35
 37433  013622  6EE6               	movwf	postinc1,c
 37434  013624  0E3C               	movlw	60
 37435  013626  6EE6               	movwf	postinc1,c
 37436  013628  EE22  F043         	lfsr	2,_C+68	;volatile
 37437  01362C  006F FF7B FFE6     	movff	postinc2,postinc1
 37438  013632  006F FF7B FFE6     	movff	postinc2,postinc1
 37439  013638  006F FF7B FFE6     	movff	postinc2,postinc1
 37440  01363E  006F FF7B FFE6     	movff	postinc2,postinc1
 37441  013644  EC7D  F0CD         	call	___flge	;wreg free
 37442  013648  B001               	btfsc	btemp& (0+255),0,c
 37443  01364A  D01C               	goto	l14044
 37444                           
 37445                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 37446  01364C  0062  F2E4  F009   	movff	_C+186,btemp+8	;volatile
 37447  013652  0062  F2E8  F00A   	movff	_C+187,btemp+9	;volatile
 37448  013658  0062  F2EC  F00B   	movff	_C+188,btemp+10	;volatile
 37449  01365E  0062  F2F0  F00C   	movff	_C+189,btemp+11	;volatile
 37450                           
 37451                           ;stkvar	_adj @ sp[(-6)+0]
 37452  013664  0EFA               	movlw	-6
 37453  013666  0060  F027  FFE3   	movff	btemp+8,plusw1
 37454  01366C  0EFB               	movlw	-5
 37455  01366E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37456  013674  0EFC               	movlw	-4
 37457  013676  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37458  01367C  0EFD               	movlw	-3
 37459  01367E  0060  F033  FFE3   	movff	btemp+11,plusw1
 37460  013684                     l14044:
 37461                           
 37462                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 37463  013684  0E00               	movlw	0
 37464  013686  6EE6               	movwf	postinc1,c
 37465  013688  0E00               	movlw	0
 37466  01368A  6EE6               	movwf	postinc1,c
 37467  01368C  0E61               	movlw	97
 37468  01368E  6EE6               	movwf	postinc1,c
 37469  013690  0E45               	movlw	69
 37470  013692  6EE6               	movwf	postinc1,c
 37471                           
 37472                           ;stkvar	_adj @ sp[(-10)+0]
 37473  013694  0EF6               	movlw	-10
 37474  013696  006F FF8F FFE6     	movff	plusw1,postinc1
 37475  01369C  006F FF8F FFE6     	movff	plusw1,postinc1
 37476  0136A2  006F FF8F FFE6     	movff	plusw1,postinc1
 37477  0136A8  006F FF8F FFE6     	movff	plusw1,postinc1
 37478  0136AE  EE22  F043         	lfsr	2,_C+68	;volatile
 37479  0136B2  006F FF7B FFE6     	movff	postinc2,postinc1
 37480  0136B8  006F FF7B FFE6     	movff	postinc2,postinc1
 37481  0136BE  006F FF7B FFE6     	movff	postinc2,postinc1
 37482  0136C4  006F FF7B FFE6     	movff	postinc2,postinc1
 37483  0136CA  EC6E  F09F         	call	___flmul	;wreg free
 37484  0136CE  0060  F007  FFE6   	movff	btemp,postinc1
 37485  0136D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37486  0136DA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37487  0136E0  0060  F013  FFE6   	movff	btemp+3,postinc1
 37488  0136E6  EC61  F0A7         	call	___fldiv	;wreg free
 37489  0136EA  0060  F007  FFE6   	movff	btemp,postinc1
 37490  0136F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37491  0136F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37492  0136FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 37493  013702  0E8F               	movlw	low (_C+144)
 37494  013704  6EE6               	movwf	postinc1,c
 37495  013706  0E08               	movlw	high (_C+144)
 37496  013708  6EE6               	movwf	postinc1,c
 37497  01370A  EC44  F0DF         	call	___asfladd	;wreg free
 37498                           
 37499                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 37500  01370E  EE22  F08F         	lfsr	2,_C+144	;volatile
 37501  013712  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
 37502  013718  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
 37503  01371E  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
 37504  013724  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
 37505                           
 37506                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 37507  01372A  EE22  F09B         	lfsr	2,_C+156	;volatile
 37508  01372E  006F FF7B FFE6     	movff	postinc2,postinc1
 37509  013734  006F FF7B FFE6     	movff	postinc2,postinc1
 37510  01373A  006F FF7B FFE6     	movff	postinc2,postinc1
 37511  013740  006F FF7B FFE6     	movff	postinc2,postinc1
 37512  013746  EE22  F08B         	lfsr	2,_C+140	;volatile
 37513  01374A  006F FF7B FFE6     	movff	postinc2,postinc1
 37514  013750  006F FF7B FFE6     	movff	postinc2,postinc1
 37515  013756  006F FF7B FFE6     	movff	postinc2,postinc1
 37516  01375C  006F FF7B FFE6     	movff	postinc2,postinc1
 37517  013762  EC7D  F0CD         	call	___flge	;wreg free
 37518  013766  B001               	btfsc	btemp& (0+255),0,c
 37519  013768  D00E               	goto	l14052
 37520                           
 37521                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 37522  01376A  EE22  F08B         	lfsr	2,_C+140	;volatile
 37523  01376E  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
 37524  013774  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
 37525  01377A  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
 37526  013780  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
 37527  013786                     l14052:
 37528                           
 37529                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 37530  013786  0ECD               	movlw	205
 37531  013788  6EE6               	movwf	postinc1,c
 37532  01378A  0ECC               	movlw	204
 37533  01378C  6EE6               	movwf	postinc1,c
 37534  01378E  0ECC               	movlw	204
 37535  013790  6EE6               	movwf	postinc1,c
 37536  013792  0E3D               	movlw	61
 37537  013794  6EE6               	movwf	postinc1,c
 37538  013796  EE22  F09B         	lfsr	2,_C+156	;volatile
 37539  01379A  006F FF7B FFE6     	movff	postinc2,postinc1
 37540  0137A0  006F FF7B FFE6     	movff	postinc2,postinc1
 37541  0137A6  006F FF7B FFE6     	movff	postinc2,postinc1
 37542  0137AC  006F FF7B FFE6     	movff	postinc2,postinc1
 37543  0137B2  EC7D  F0CD         	call	___flge	;wreg free
 37544  0137B6  B001               	btfsc	btemp& (0+255),0,c
 37545  0137B8  D010               	goto	l14056
 37546                           
 37547                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 37548  0137BA  0ECD               	movlw	205
 37549  0137BC  006F FFA0  F89B    	movff	wreg,_C+156	;volatile
 37550  0137C2  0ECC               	movlw	204
 37551  0137C4  006F FFA0  F89C    	movff	wreg,_C+157	;volatile
 37552  0137CA  0ECC               	movlw	204
 37553  0137CC  006F FFA0  F89D    	movff	wreg,_C+158	;volatile
 37554  0137D2  0E3D               	movlw	61
 37555  0137D4  006F FFA0  F89E    	movff	wreg,_C+159	;volatile
 37556  0137DA                     l14056:
 37557                           
 37558                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 37559  0137DA  0E00               	movlw	0
 37560  0137DC  6EE6               	movwf	postinc1,c
 37561  0137DE  0E00               	movlw	0
 37562  0137E0  6EE6               	movwf	postinc1,c
 37563  0137E2  0E61               	movlw	97
 37564  0137E4  6EE6               	movwf	postinc1,c
 37565  0137E6  0E45               	movlw	69
 37566  0137E8  6EE6               	movwf	postinc1,c
 37567  0137EA  EE22  F047         	lfsr	2,_C+72	;volatile
 37568  0137EE  006F FF7B FFE6     	movff	postinc2,postinc1
 37569  0137F4  006F FF7B FFE6     	movff	postinc2,postinc1
 37570  0137FA  006F FF7B FFE6     	movff	postinc2,postinc1
 37571  013800  006F FF7B FFE6     	movff	postinc2,postinc1
 37572  013806  EC61  F0A7         	call	___fldiv	;wreg free
 37573  01380A  0060  F007  FFE6   	movff	btemp,postinc1
 37574  013810  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37575  013816  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37576  01381C  0060  F013  FFE6   	movff	btemp+3,postinc1
 37577  013822  0E93               	movlw	low (_C+148)
 37578  013824  6EE6               	movwf	postinc1,c
 37579  013826  0E08               	movlw	high (_C+148)
 37580  013828  6EE6               	movwf	postinc1,c
 37581  01382A  EC44  F0DF         	call	___asfladd	;wreg free
 37582                           
 37583                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 37584  01382E  0E00               	movlw	0
 37585  013830  6EE6               	movwf	postinc1,c
 37586  013832  0E00               	movlw	0
 37587  013834  6EE6               	movwf	postinc1,c
 37588  013836  0E61               	movlw	97
 37589  013838  6EE6               	movwf	postinc1,c
 37590  01383A  0E45               	movlw	69
 37591  01383C  6EE6               	movwf	postinc1,c
 37592  01383E  EE22  F07B         	lfsr	2,_C+124	;volatile
 37593  013842  006F FF7B FFE6     	movff	postinc2,postinc1
 37594  013848  006F FF7B FFE6     	movff	postinc2,postinc1
 37595  01384E  006F FF7B FFE6     	movff	postinc2,postinc1
 37596  013854  006F FF7B FFE6     	movff	postinc2,postinc1
 37597  01385A  EC61  F0A7         	call	___fldiv	;wreg free
 37598  01385E  0060  F007  FFE6   	movff	btemp,postinc1
 37599  013864  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37600  01386A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37601  013870  0060  F013  FFE6   	movff	btemp+3,postinc1
 37602  013876  0EA7               	movlw	low (_C+168)
 37603  013878  6EE6               	movwf	postinc1,c
 37604  01387A  0E08               	movlw	high (_C+168)
 37605  01387C  6EE6               	movwf	postinc1,c
 37606  01387E  EC44  F0DF         	call	___asfladd	;wreg free
 37607                           
 37608                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 37609  013882  0E00               	movlw	0
 37610  013884  6EE6               	movwf	postinc1,c
 37611  013886  0E00               	movlw	0
 37612  013888  6EE6               	movwf	postinc1,c
 37613  01388A  0E61               	movlw	97
 37614  01388C  6EE6               	movwf	postinc1,c
 37615  01388E  0E45               	movlw	69
 37616  013890  6EE6               	movwf	postinc1,c
 37617  013892  EE22  F077         	lfsr	2,_C+120	;volatile
 37618  013896  006F FF7B FFE6     	movff	postinc2,postinc1
 37619  01389C  006F FF7B FFE6     	movff	postinc2,postinc1
 37620  0138A2  006F FF7B FFE6     	movff	postinc2,postinc1
 37621  0138A8  006F FF7B FFE6     	movff	postinc2,postinc1
 37622  0138AE  EC61  F0A7         	call	___fldiv	;wreg free
 37623  0138B2  0060  F007  FFE6   	movff	btemp,postinc1
 37624  0138B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37625  0138BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37626  0138C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 37627  0138CA  0EAB               	movlw	low (_C+172)
 37628  0138CC  6EE6               	movwf	postinc1,c
 37629  0138CE  0E08               	movlw	high (_C+172)
 37630  0138D0  6EE6               	movwf	postinc1,c
 37631  0138D2  EC44  F0DF         	call	___asfladd	;wreg free
 37632                           
 37633                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 37634  0138D6  0E00               	movlw	0
 37635  0138D8  6EE6               	movwf	postinc1,c
 37636  0138DA  0E00               	movlw	0
 37637  0138DC  6EE6               	movwf	postinc1,c
 37638  0138DE  0E61               	movlw	97
 37639  0138E0  6EE6               	movwf	postinc1,c
 37640  0138E2  0E45               	movlw	69
 37641  0138E4  6EE6               	movwf	postinc1,c
 37642  0138E6  EE22  F073         	lfsr	2,_C+116	;volatile
 37643  0138EA  006F FF7B FFE6     	movff	postinc2,postinc1
 37644  0138F0  006F FF7B FFE6     	movff	postinc2,postinc1
 37645  0138F6  006F FF7B FFE6     	movff	postinc2,postinc1
 37646  0138FC  006F FF7B FFE6     	movff	postinc2,postinc1
 37647  013902  EC61  F0A7         	call	___fldiv	;wreg free
 37648  013906  0060  F007  FFE6   	movff	btemp,postinc1
 37649  01390C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37650  013912  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37651  013918  0060  F013  FFE6   	movff	btemp+3,postinc1
 37652  01391E  0EAF               	movlw	low (_C+176)
 37653  013920  6EE6               	movwf	postinc1,c
 37654  013922  0E08               	movlw	high (_C+176)
 37655  013924  6EE6               	movwf	postinc1,c
 37656  013926  EC44  F0DF         	call	___asfladd	;wreg free
 37657                           
 37658                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 37659  01392A  EE22  F07F         	lfsr	2,_C+128	;volatile
 37660  01392E  006F FF7B FFE6     	movff	postinc2,postinc1
 37661  013934  006F FF7B FFE6     	movff	postinc2,postinc1
 37662  01393A  006F FF7B FFE6     	movff	postinc2,postinc1
 37663  013940  006F FF7B FFE6     	movff	postinc2,postinc1
 37664  013946  0E00               	movlw	0
 37665  013948  6EE6               	movwf	postinc1,c
 37666  01394A  0E00               	movlw	0
 37667  01394C  6EE6               	movwf	postinc1,c
 37668  01394E  0E00               	movlw	0
 37669  013950  6EE6               	movwf	postinc1,c
 37670  013952  0E00               	movlw	0
 37671  013954  6EE6               	movwf	postinc1,c
 37672  013956  EC7D  F0CD         	call	___flge	;wreg free
 37673  01395A  B001               	btfsc	btemp& (0+255),0,c
 37674  01395C  D02A               	goto	l14062
 37675                           
 37676                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 37677  01395E  0E00               	movlw	0
 37678  013960  6EE6               	movwf	postinc1,c
 37679  013962  0E00               	movlw	0
 37680  013964  6EE6               	movwf	postinc1,c
 37681  013966  0E61               	movlw	97
 37682  013968  6EE6               	movwf	postinc1,c
 37683  01396A  0E45               	movlw	69
 37684  01396C  6EE6               	movwf	postinc1,c
 37685  01396E  EE22  F07F         	lfsr	2,_C+128	;volatile
 37686  013972  006F FF7B FFE6     	movff	postinc2,postinc1
 37687  013978  006F FF7B FFE6     	movff	postinc2,postinc1
 37688  01397E  006F FF7B FFE6     	movff	postinc2,postinc1
 37689  013984  006F FF7B FFE6     	movff	postinc2,postinc1
 37690  01398A  EC61  F0A7         	call	___fldiv	;wreg free
 37691  01398E  0060  F007  FFE6   	movff	btemp,postinc1
 37692  013994  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37693  01399A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37694  0139A0  0060  F013  FFE6   	movff	btemp+3,postinc1
 37695  0139A6  0E9F               	movlw	low (_C+160)
 37696  0139A8  6EE6               	movwf	postinc1,c
 37697  0139AA  0E08               	movlw	high (_C+160)
 37698  0139AC  6EE6               	movwf	postinc1,c
 37699  0139AE  EC44  F0DF         	call	___asfladd	;wreg free
 37700  0139B2                     l14062:
 37701                           
 37702                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 37703  0139B2  EE22  F07F         	lfsr	2,_C+128	;volatile
 37704  0139B6  0E03               	movlw	3
 37705  0139B8  AEDB               	btfss	plusw2,7,c
 37706  0139BA  D038               	goto	l14066
 37707                           
 37708                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 37709  0139BC  0E00               	movlw	0
 37710  0139BE  6EE6               	movwf	postinc1,c
 37711  0139C0  0E00               	movlw	0
 37712  0139C2  6EE6               	movwf	postinc1,c
 37713  0139C4  0E61               	movlw	97
 37714  0139C6  6EE6               	movwf	postinc1,c
 37715  0139C8  0E45               	movlw	69
 37716  0139CA  6EE6               	movwf	postinc1,c
 37717  0139CC  EE22  F07F         	lfsr	2,_C+128	;volatile
 37718  0139D0  006F FF7B FFE6     	movff	postinc2,postinc1
 37719  0139D6  006F FF7B FFE6     	movff	postinc2,postinc1
 37720  0139DC  006F FF7B FFE6     	movff	postinc2,postinc1
 37721  0139E2  006F FF7B FFE6     	movff	postinc2,postinc1
 37722  0139E8  EC61  F0A7         	call	___fldiv	;wreg free
 37723  0139EC  0060  F007  FFE6   	movff	btemp,postinc1
 37724  0139F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37725  0139F8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37726  0139FE  0060  F013  FFE6   	movff	btemp+3,postinc1
 37727  013A04  EC58  F0DA         	call	_fabsf	;wreg free
 37728  013A08  0060  F007  FFE6   	movff	btemp,postinc1
 37729  013A0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37730  013A14  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37731  013A1A  0060  F013  FFE6   	movff	btemp+3,postinc1
 37732  013A20  0EA3               	movlw	low (_C+164)
 37733  013A22  6EE6               	movwf	postinc1,c
 37734  013A24  0E08               	movlw	high (_C+164)
 37735  013A26  6EE6               	movwf	postinc1,c
 37736  013A28  EC44  F0DF         	call	___asfladd	;wreg free
 37737  013A2C                     l14066:
 37738                           
 37739                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 37740  013A2C  0E00               	movlw	0
 37741  013A2E  6EE6               	movwf	postinc1,c
 37742  013A30  0E00               	movlw	0
 37743  013A32  6EE6               	movwf	postinc1,c
 37744  013A34  0EC8               	movlw	200
 37745  013A36  6EE6               	movwf	postinc1,c
 37746  013A38  0E42               	movlw	66
 37747  013A3A  6EE6               	movwf	postinc1,c
 37748  013A3C  EE22  F08B         	lfsr	2,_C+140	;volatile
 37749  013A40  006F FF7B FFE6     	movff	postinc2,postinc1
 37750  013A46  006F FF7B FFE6     	movff	postinc2,postinc1
 37751  013A4C  006F FF7B FFE6     	movff	postinc2,postinc1
 37752  013A52  006F FF7B FFE6     	movff	postinc2,postinc1
 37753  013A58  EE22  F09B         	lfsr	2,_C+156	;volatile
 37754  013A5C  006F FF7B FFE6     	movff	postinc2,postinc1
 37755  013A62  006F FF7B FFE6     	movff	postinc2,postinc1
 37756  013A68  006F FF7B FFE6     	movff	postinc2,postinc1
 37757  013A6E  006F FF7B FFE6     	movff	postinc2,postinc1
 37758  013A74  EC61  F0A7         	call	___fldiv	;wreg free
 37759  013A78  0060  F007  FFE6   	movff	btemp,postinc1
 37760  013A7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37761  013A84  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37762  013A8A  0060  F013  FFE6   	movff	btemp+3,postinc1
 37763  013A90  EC6E  F09F         	call	___flmul	;wreg free
 37764  013A94  0060  F007  FFE6   	movff	btemp,postinc1
 37765  013A9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37766  013AA0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37767  013AA6  0060  F013  FFE6   	movff	btemp+3,postinc1
 37768  013AAC  ECC4  F0CC         	call	___fltol	;wreg free
 37769  013AB0  0060  F004  F00B   	movff	btemp,btemp+10
 37770  013AB6  0060  F008  F00C   	movff	btemp+1,btemp+11
 37771  013ABC  0E01               	movlw	1
 37772  013ABE  260B               	addwf	(btemp+10)^0,f,c
 37773  013AC0  0E00               	movlw	0
 37774  013AC2  220C               	addwfc	(btemp+11)^0,f,c
 37775  013AC4  0060  F02C  F8B5   	movff	btemp+10,_C+182	;volatile
 37776  013ACA  0060  F030  F8B6   	movff	btemp+11,_C+183	;volatile
 37777                           
 37778                           ;bsoc.c: 76:  if (C.soc > 100)
 37779  013AD0  EE22  F0B5         	lfsr	2,_C+182	;volatile
 37780  013AD4  0E01               	movlw	1
 37781  013AD6  50DB               	movf	plusw2,w,c
 37782  013AD8  E104               	bnz	u1343_20
 37783  013ADA  0E65               	movlw	101
 37784  013ADC  5CDE               	subwf	postinc2,w,c
 37785  013ADE  A0D8               	btfss	status,0,c
 37786  013AE0  D008               	goto	l14072
 37787  013AE2                     u1343_20:
 37788                           
 37789                           ;bsoc.c: 77:   C.soc = 100;
 37790  013AE2  0E64               	movlw	100
 37791  013AE4  006F FFA0  F8B5    	movff	wreg,_C+182	;volatile
 37792  013AEA  0E00               	movlw	0
 37793  013AEC  006F FFA0  F8B6    	movff	wreg,_C+183	;volatile
 37794  013AF2                     l14072:
 37795                           
 37796                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 37797  013AF2  EE22  F043         	lfsr	2,_C+68	;volatile
 37798  013AF6  0E03               	movlw	3
 37799  013AF8  AEDB               	btfss	plusw2,7,c
 37800  013AFA  D047               	goto	l2206
 37801                           
 37802                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 37803  013AFC  EE22  F043         	lfsr	2,_C+68	;volatile
 37804  013B00  006F FF7B FFE6     	movff	postinc2,postinc1
 37805  013B06  006F FF7B FFE6     	movff	postinc2,postinc1
 37806  013B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 37807  013B12  006F FF7B FFE6     	movff	postinc2,postinc1
 37808  013B18  EE22  F09B         	lfsr	2,_C+156	;volatile
 37809  013B1C  006F FF7B FFE6     	movff	postinc2,postinc1
 37810  013B22  006F FF7B FFE6     	movff	postinc2,postinc1
 37811  013B28  006F FF7B FFE6     	movff	postinc2,postinc1
 37812  013B2E  006F FF7B FFE6     	movff	postinc2,postinc1
 37813  013B34  EC61  F0A7         	call	___fldiv	;wreg free
 37814  013B38  0060  F007  FFE6   	movff	btemp,postinc1
 37815  013B3E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37816  013B44  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37817  013B4A  0060  F013  FFE6   	movff	btemp+3,postinc1
 37818  013B50  EC03  F0E3         	call	___flneg	;wreg free
 37819  013B54  0060  F007  FFE6   	movff	btemp,postinc1
 37820  013B5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37821  013B60  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37822  013B66  0060  F013  FFE6   	movff	btemp+3,postinc1
 37823  013B6C  ECC4  F0CC         	call	___fltol	;wreg free
 37824  013B70  0060  F004  F00B   	movff	btemp,btemp+10
 37825  013B76  0060  F008  F00C   	movff	btemp+1,btemp+11
 37826  013B7C  0060  F02C  F8B3   	movff	btemp+10,_C+180	;volatile
 37827  013B82  0060  F030  F8B4   	movff	btemp+11,_C+181	;volatile
 37828                           
 37829                           ;bsoc.c: 81:  } else {
 37830  013B88  D008               	goto	l14076
 37831  013B8A                     l2206:
 37832                           
 37833                           ;bsoc.c: 82:   C.runtime = 99;
 37834  013B8A  0E63               	movlw	99
 37835  013B8C  006F FFA0  F8B3    	movff	wreg,_C+180	;volatile
 37836  013B92  0E00               	movlw	0
 37837  013B94  006F FFA0  F8B4    	movff	wreg,_C+181	;volatile
 37838  013B9A                     l14076:
 37839                           
 37840                           ;bsoc.c: 84:  if (C.runtime > 99)
 37841  013B9A  EE22  F0B3         	lfsr	2,_C+180	;volatile
 37842  013B9E  0E01               	movlw	1
 37843  013BA0  50DB               	movf	plusw2,w,c
 37844  013BA2  E104               	bnz	u1345_20
 37845  013BA4  0E64               	movlw	100
 37846  013BA6  5CDE               	subwf	postinc2,w,c
 37847  013BA8  A0D8               	btfss	status,0,c
 37848  013BAA  D008               	goto	l14080
 37849  013BAC                     u1345_20:
 37850                           
 37851                           ;bsoc.c: 85:   C.runtime = 99;
 37852  013BAC  0E63               	movlw	99
 37853  013BAE  006F FFA0  F8B3    	movff	wreg,_C+180	;volatile
 37854  013BB4  0E00               	movlw	0
 37855  013BB6  006F FFA0  F8B4    	movff	wreg,_C+181	;volatile
 37856  013BBC                     l14080:
 37857                           
 37858                           ;bsoc.c: 87:  V.lowint_count++;
 37859  013BBC  0E01               	movlw	1
 37860  013BBE  0101               	movlb	1	; () banked
 37861  013BC0  27BB               	addwf	(_V+180)& (0+255),f,b	;volatile
 37862  013BC2  0E00               	movlw	0
 37863  013BC4  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 37864  013BC6  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 37865  013BC8  23BE               	addwfc	(_V+183)& (0+255),f,b	;volatile
 37866                           
 37867                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 37868  013BCA  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 37869  013BCC  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 37870  013BCE  A4D8               	btfss	status,2,c
 37871  013BD0  D177               	goto	l14092
 37872                           
 37873                           ; BSR set to: 1
 37874  013BD2  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 37875  013BD4  B4D8               	btfsc	status,2,c
 37876  013BD6  D174               	goto	l14092
 37877                           
 37878                           ; BSR set to: 1
 37879                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 37880  013BD8  ECBA  F0E9         	call	_port_data_dma_ptr	;wreg free
 37881                           
 37882                           ;stkvar	_log_ptr @ sp[(-6)+4]
 37883  013BDC  0EFF               	movlw	-1
 37884  013BDE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 37885  013BE4  0EFE               	movlw	-2
 37886  013BE6  0060  F007  FFE3   	movff	btemp,plusw1
 37887                           
 37888                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 37889  013BEC  EE22  F0B9         	lfsr	2,_C+186	;volatile
 37890  013BF0  006F FF7B FFE6     	movff	postinc2,postinc1
 37891  013BF6  006F FF7B FFE6     	movff	postinc2,postinc1
 37892  013BFC  006F FF7B FFE6     	movff	postinc2,postinc1
 37893  013C02  006F FF7B FFE6     	movff	postinc2,postinc1
 37894  013C08  EE22  F0BD         	lfsr	2,_C+190	;volatile
 37895  013C0C  006F FF7B FFE6     	movff	postinc2,postinc1
 37896  013C12  006F FF7B FFE6     	movff	postinc2,postinc1
 37897  013C18  006F FF7B FFE6     	movff	postinc2,postinc1
 37898  013C1E  006F FF7B FFE6     	movff	postinc2,postinc1
 37899  013C24  EE22  F09B         	lfsr	2,_C+156	;volatile
 37900  013C28  006F FF7B FFE6     	movff	postinc2,postinc1
 37901  013C2E  006F FF7B FFE6     	movff	postinc2,postinc1
 37902  013C34  006F FF7B FFE6     	movff	postinc2,postinc1
 37903  013C3A  006F FF7B FFE6     	movff	postinc2,postinc1
 37904  013C40  EE22  F126         	lfsr	2,_C+295	;volatile
 37905  013C44  006F FF7B FFE6     	movff	postinc2,postinc1
 37906  013C4A  006F FF7B FFE6     	movff	postinc2,postinc1
 37907  013C50  006F FF7B FFE6     	movff	postinc2,postinc1
 37908  013C56  006F FF7B FFE6     	movff	postinc2,postinc1
 37909  013C5C  EE22  F122         	lfsr	2,_C+291	;volatile
 37910  013C60  006F FF7B FFE6     	movff	postinc2,postinc1
 37911  013C66  006F FF7B FFE6     	movff	postinc2,postinc1
 37912  013C6C  006F FF7B FFE6     	movff	postinc2,postinc1
 37913  013C72  006F FF7B FFE6     	movff	postinc2,postinc1
 37914  013C78  EE22  F121         	lfsr	2,_C+290	;volatile
 37915  013C7C  50DF               	movf	indf2,w,c
 37916  013C7E  6EE6               	movwf	postinc1,c
 37917  013C80  0E00               	movlw	0
 37918  013C82  6EE6               	movwf	postinc1,c
 37919  013C84  EC9F  F0E9         	call	_get_ac_charger_relay	;wreg free
 37920  013C88  5001               	movf	btemp^0,w,c
 37921  013C8A  6EE6               	movwf	postinc1,c
 37922  013C8C  0E00               	movlw	0
 37923  013C8E  6EE6               	movwf	postinc1,c
 37924  013C90  EE22  F067         	lfsr	2,_C+104	;volatile
 37925  013C94  006F FF7B FFE6     	movff	postinc2,postinc1
 37926  013C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 37927  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 37928  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 37929  013CAC  EE22  F087         	lfsr	2,_C+136	;volatile
 37930  013CB0  006F FF7B FFE6     	movff	postinc2,postinc1
 37931  013CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 37932  013CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 37933  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 37934  013CC8  EE22  F0B3         	lfsr	2,_C+180	;volatile
 37935  013CCC  006F FF78  F00B    	movff	postinc2,btemp+10
 37936  013CD2  006F FF74  F00C    	movff	postdec2,btemp+11
 37937  013CD8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 37938  013CDE  0060  F033  FFE6   	movff	btemp+11,postinc1
 37939  013CE4  EE22  F0B5         	lfsr	2,_C+182	;volatile
 37940  013CE8  006F FF78  F00B    	movff	postinc2,btemp+10
 37941  013CEE  006F FF74  F00C    	movff	postdec2,btemp+11
 37942  013CF4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 37943  013CFA  0060  F033  FFE6   	movff	btemp+11,postinc1
 37944  013D00  EE22  F093         	lfsr	2,_C+148	;volatile
 37945  013D04  006F FF7B FFE6     	movff	postinc2,postinc1
 37946  013D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 37947  013D10  006F FF7B FFE6     	movff	postinc2,postinc1
 37948  013D16  006F FF7B FFE6     	movff	postinc2,postinc1
 37949  013D1C  EE22  F08F         	lfsr	2,_C+144	;volatile
 37950  013D20  006F FF7B FFE6     	movff	postinc2,postinc1
 37951  013D26  006F FF7B FFE6     	movff	postinc2,postinc1
 37952  013D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 37953  013D32  006F FF7B FFE6     	movff	postinc2,postinc1
 37954  013D38  EE22  F077         	lfsr	2,_C+120	;volatile
 37955  013D3C  006F FF7B FFE6     	movff	postinc2,postinc1
 37956  013D42  006F FF7B FFE6     	movff	postinc2,postinc1
 37957  013D48  006F FF7B FFE6     	movff	postinc2,postinc1
 37958  013D4E  006F FF7B FFE6     	movff	postinc2,postinc1
 37959  013D54  EE22  F073         	lfsr	2,_C+116	;volatile
 37960  013D58  006F FF7B FFE6     	movff	postinc2,postinc1
 37961  013D5E  006F FF7B FFE6     	movff	postinc2,postinc1
 37962  013D64  006F FF7B FFE6     	movff	postinc2,postinc1
 37963  013D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 37964  013D70  EE22  F07B         	lfsr	2,_C+124	;volatile
 37965  013D74  006F FF7B FFE6     	movff	postinc2,postinc1
 37966  013D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 37967  013D80  006F FF7B FFE6     	movff	postinc2,postinc1
 37968  013D86  006F FF7B FFE6     	movff	postinc2,postinc1
 37969  013D8C  EE22  F07F         	lfsr	2,_C+128	;volatile
 37970  013D90  006F FF7B FFE6     	movff	postinc2,postinc1
 37971  013D96  006F FF7B FFE6     	movff	postinc2,postinc1
 37972  013D9C  006F FF7B FFE6     	movff	postinc2,postinc1
 37973  013DA2  006F FF7B FFE6     	movff	postinc2,postinc1
 37974  013DA8  EE22  F047         	lfsr	2,_C+72	;volatile
 37975  013DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 37976  013DB2  006F FF7B FFE6     	movff	postinc2,postinc1
 37977  013DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 37978  013DBE  006F FF7B FFE6     	movff	postinc2,postinc1
 37979  013DC4  EE22  F043         	lfsr	2,_C+68	;volatile
 37980  013DC8  006F FF7B FFE6     	movff	postinc2,postinc1
 37981  013DCE  006F FF7B FFE6     	movff	postinc2,postinc1
 37982  013DD4  006F FF7B FFE6     	movff	postinc2,postinc1
 37983  013DDA  006F FF7B FFE6     	movff	postinc2,postinc1
 37984  013DE0  EE22  F063         	lfsr	2,_C+100	;volatile
 37985  013DE4  006F FF7B FFE6     	movff	postinc2,postinc1
 37986  013DEA  006F FF7B FFE6     	movff	postinc2,postinc1
 37987  013DF0  006F FF7B FFE6     	movff	postinc2,postinc1
 37988  013DF6  006F FF7B FFE6     	movff	postinc2,postinc1
 37989  013DFC  EE22  F04B         	lfsr	2,_C+76	;volatile
 37990  013E00  006F FF7B FFE6     	movff	postinc2,postinc1
 37991  013E06  006F FF7B FFE6     	movff	postinc2,postinc1
 37992  013E0C  006F FF7B FFE6     	movff	postinc2,postinc1
 37993  013E12  006F FF7B FFE6     	movff	postinc2,postinc1
 37994  013E18  EE22  F04F         	lfsr	2,_C+80	;volatile
 37995  013E1C  006F FF7B FFE6     	movff	postinc2,postinc1
 37996  013E22  006F FF7B FFE6     	movff	postinc2,postinc1
 37997  013E28  006F FF7B FFE6     	movff	postinc2,postinc1
 37998  013E2E  006F FF7B FFE6     	movff	postinc2,postinc1
 37999  013E34  EE22  F053         	lfsr	2,_C+84	;volatile
 38000  013E38  006F FF7B FFE6     	movff	postinc2,postinc1
 38001  013E3E  006F FF7B FFE6     	movff	postinc2,postinc1
 38002  013E44  006F FF7B FFE6     	movff	postinc2,postinc1
 38003  013E4A  006F FF7B FFE6     	movff	postinc2,postinc1
 38004  013E50  0060  F623  FFE6   	movff	_V+129,postinc1
 38005  013E56  0060  F627  FFE6   	movff	_V+130,postinc1
 38006  013E5C  0060  F62B  FFE6   	movff	_V+131,postinc1
 38007  013E62  0060  F62F  FFE6   	movff	_V+132,postinc1
 38008  013E68  0E32               	movlw	50
 38009  013E6A  6EE6               	movwf	postinc1,c
 38010  013E6C  0E00               	movlw	0
 38011  013E6E  6EE6               	movwf	postinc1,c
 38012  013E70  0ECF               	movlw	low STR_81
 38013  013E72  6EE6               	movwf	postinc1,c
 38014  013E74  0EFA               	movlw	high STR_81
 38015  013E76  6EE6               	movwf	postinc1,c
 38016                           
 38017                           ;stkvar	_log_ptr @ sp[(-98)+4]
 38018  013E78  0EA2               	movlw	-94
 38019  013E7A  006F FF8F FFE6     	movff	plusw1,postinc1
 38020  013E80  006F FF8F FFE6     	movff	plusw1,postinc1
 38021  013E86  0E5E               	movlw	94
 38022  013E88  6EE6               	movwf	postinc1,c
 38023  013E8A  EC4D  F0D5         	call	_sprintf	;wreg free
 38024                           
 38025                           ; BSR set to: 0
 38026                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 38027  013E8E  0E7D               	movlw	125
 38028  013E90  6EE6               	movwf	postinc1,c
 38029  013E92  0E00               	movlw	0
 38030  013E94  6EE6               	movwf	postinc1,c
 38031  013E96  0E0A               	movlw	10
 38032  013E98  6EE6               	movwf	postinc1,c
 38033  013E9A  EC5C  F0E4         	call	_StartTimer	;wreg free
 38034                           
 38035                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 38036                           ;stkvar	_log_ptr @ sp[(-6)+4]
 38037  013E9E  0EFE               	movlw	-2
 38038  013EA0  006F FF8F FFE6     	movff	plusw1,postinc1
 38039  013EA6  006F FF8F FFE6     	movff	plusw1,postinc1
 38040  013EAC  EC01  F0DC         	call	_strlen	;wreg free
 38041  013EB0  0060  F007  FFE6   	movff	btemp,postinc1
 38042  013EB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38043  013EBC  EC67  F0E2         	call	_send_port_data_dma	;wreg free
 38044  013EC0                     l14092:
 38045                           
 38046                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 38047  013EC0  0E09               	movlw	9
 38048  013EC2  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 38049  013EC4  D001               	goto	l2210
 38050                           
 38051                           ;bsoc.c: 102:   log_update_wait = 0;
 38052  013EC6  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 38053  013EC8                     l2210:
 38054                           
 38055                           ;bsoc.c: 104:  C.update = 0;
 38056  013EC8  0E00               	movlw	0
 38057  013ECA  006F FFA0  F8B7    	movff	wreg,_C+184	;volatile
 38058                           
 38059                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 38060  013ED0  92BE               	bcf	190,1,c	;volatile
 38061                           
 38062                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 38063  013ED2  0EFA               	movlw	250
 38064  013ED4  26E1               	addwf	fsr1l,f,c
 38065  013ED6  0EFF               	movlw	255
 38066  013ED8  22E2               	addwfc	fsr1h,f,c
 38067  013EDA  0012               	return		;funcret
 38068  013EDC                     __end_of_calc_bsoc:
 38069                           	opt callstack 0
 38070                           
 38071 ;; *************** function _send_port_data_dma *****************
 38072 ;; Defined at:
 38073 ;;		line 398 in file "eadog.c"
 38074 ;; Parameters:    Size  Location     Type
 38075 ;;  dsize           2  [STACK] unsigned short 
 38076 ;; Auto vars:     Size  Location     Type
 38077 ;;		None
 38078 ;; Return value:  Size  Location     Type
 38079 ;;                  1  [STACK] void 
 38080 ;; Registers used:
 38081 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 38082 ;; Tracked objects:
 38083 ;;		On entry : 0/0
 38084 ;;		On exit  : 3F/3B
 38085 ;;		Unchanged: 0/0
 38086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38091 ;;Total ram usage:        0 bytes
 38092 ;; Hardware stack levels used:    1
 38093 ;; Hardware stack levels required when called:    3
 38094 ;; This function calls:
 38095 ;;		Nothing
 38096 ;; This function is called by:
 38097 ;;		_calc_bsoc
 38098 ;; This function uses a reentrant model
 38099 ;;
 38100                           
 38101                           	psect	text173
 38102  01C4CE                     __ptext173:
 38103                           	opt callstack 0
 38104  01C4CE                     _send_port_data_dma:
 38105                           	opt callstack 10
 38106                           
 38107                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 38108                           ;stkvar	_dsize @ sp[(0)+-2]
 38109                           
 38110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38111                           ;incstack = 0
 38112  01C4CE  0EFE               	movlw	-2
 38113  01C4D0  04E3               	decf	plusw1,w,c
 38114  01C4D2  0EFF               	movlw	-1
 38115  01C4D4  006F FF8C  F001    	movff	plusw1,btemp
 38116  01C4DA  0E02               	movlw	2
 38117  01C4DC  5A01               	subwfb	btemp^0,f,c
 38118  01C4DE  A0D8               	btfss	status,0,c
 38119  01C4E0  D00C               	goto	l10766
 38120                           
 38121                           ;eadog.c: 401:   dsize = 512;
 38122  01C4E2  0E00               	movlw	0
 38123  01C4E4  6E0B               	movwf	(btemp+10)^0,c
 38124  01C4E6  0E02               	movlw	2
 38125  01C4E8  6E0C               	movwf	(btemp+11)^0,c
 38126                           
 38127                           ;stkvar	_dsize @ sp[(0)+-2]
 38128  01C4EA  0EFE               	movlw	-2
 38129  01C4EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38130  01C4F2  0EFF               	movlw	-1
 38131  01C4F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 38132  01C4FA                     l10766:
 38133                           
 38134                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 38135  01C4FA  013B               	movlb	59	; () banked
 38136  01C4FC  9FDC               	bcf	220,7,b	;volatile
 38137                           
 38138                           ; BSR set to: 59
 38139                           ;eadog.c: 404:  DMA2SSZ = dsize;
 38140                           ;stkvar	_dsize @ sp[(0)+-2]
 38141  01C4FE  0EFE               	movlw	-2
 38142  01C500  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 38143  01C506  0EFF               	movlw	-1
 38144  01C508  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 38145                           
 38146                           ; BSR set to: 59
 38147                           ;eadog.c: 405:  DMA2DSZ = 1;
 38148  01C50E  0E00               	movlw	0
 38149  01C510  6FCF               	movwf	207,b	;volatile
 38150  01C512  0E01               	movlw	1
 38151  01C514  6FCE               	movwf	206,b	;volatile
 38152                           
 38153                           ; BSR set to: 59
 38154                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 38155  01C516  8FDC               	bsf	220,7,b	;volatile
 38156                           
 38157                           ; BSR set to: 59
 38158                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 38159  01C518  8DDC               	bsf	220,6,b	;volatile
 38160                           
 38161                           ; BSR set to: 59
 38162                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38163  01C51A  52E5               	movf	postdec1,f,c
 38164  01C51C  52E5               	movf	postdec1,f,c
 38165  01C51E  0012               	return		;funcret
 38166  01C520                     __end_of_send_port_data_dma:
 38167                           	opt callstack 0
 38168                           
 38169 ;; *************** function _port_data_dma_ptr *****************
 38170 ;; Defined at:
 38171 ;;		line 413 in file "eadog.c"
 38172 ;; Parameters:    Size  Location     Type
 38173 ;;		None
 38174 ;; Auto vars:     Size  Location     Type
 38175 ;;		None
 38176 ;; Return value:  Size  Location     Type
 38177 ;;                  2  [STACK] PTR unsigned char 
 38178 ;; Registers used:
 38179 ;;		wreg, status,2, status,0, btemp, btemp+1
 38180 ;; Tracked objects:
 38181 ;;		On entry : 3F/1
 38182 ;;		On exit  : 0/0
 38183 ;;		Unchanged: 0/0
 38184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38189 ;;Total ram usage:        0 bytes
 38190 ;; Hardware stack levels used:    1
 38191 ;; Hardware stack levels required when called:    3
 38192 ;; This function calls:
 38193 ;;		Nothing
 38194 ;; This function is called by:
 38195 ;;		_calc_bsoc
 38196 ;; This function uses a reentrant model
 38197 ;;
 38198                           
 38199                           	psect	text174
 38200  01D374                     __ptext174:
 38201                           	opt callstack 0
 38202  01D374                     _port_data_dma_ptr:
 38203                           	opt callstack 10
 38204                           
 38205                           ;eadog.c: 415:  return port_data;
 38206                           
 38207                           ; BSR set to: 59
 38208                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38209                           ;incstack = 0
 38210  01D374  0EFF               	movlw	low _port_data
 38211  01D376  6E01               	movwf	btemp^0,c
 38212  01D378  0E05               	movlw	high _port_data
 38213  01D37A  6E02               	movwf	(btemp+1)^0,c
 38214                           
 38215                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 38216  01D37C  0012               	return		;funcret
 38217  01D37E                     __end_of_port_data_dma_ptr:
 38218                           	opt callstack 0
 38219                           
 38220 ;; *************** function ___asfladd *****************
 38221 ;; Defined at:
 38222 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 38223 ;; Parameters:    Size  Location     Type
 38224 ;;  f1p             2  [STACK] PTR 
 38225 ;;		 -> C(299), 
 38226 ;;  f2              4  [STACK] PTR 
 38227 ;; Auto vars:     Size  Location     Type
 38228 ;;		None
 38229 ;; Return value:  Size  Location     Type
 38230 ;;                  4  [STACK] PTR 
 38231 ;; Registers used:
 38232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 38233 ;; Tracked objects:
 38234 ;;		On entry : 0/0
 38235 ;;		On exit  : 0/0
 38236 ;;		Unchanged: 0/0
 38237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38242 ;;Total ram usage:        0 bytes
 38243 ;; Hardware stack levels used:    1
 38244 ;; Hardware stack levels required when called:    4
 38245 ;; This function calls:
 38246 ;;		___fladd
 38247 ;; This function is called by:
 38248 ;;		_calc_bsoc
 38249 ;; This function uses a reentrant model
 38250 ;;
 38251                           
 38252                           	psect	text175
 38253  01BE88                     __ptext175:
 38254                           	opt callstack 0
 38255  01BE88                     ___asfladd:
 38256                           	opt callstack 9
 38257                           
 38258                           ;	Return value of ___asfladd is never used
 38259                           ;stkvar	_f2 @ sp[(0)+-6]
 38260                           
 38261                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38262                           ;incstack = 0
 38263  01BE88  0EFA               	movlw	-6
 38264  01BE8A  006F FF8F FFE6     	movff	plusw1,postinc1
 38265  01BE90  006F FF8F FFE6     	movff	plusw1,postinc1
 38266  01BE96  006F FF8F FFE6     	movff	plusw1,postinc1
 38267  01BE9C  006F FF8F FFE6     	movff	plusw1,postinc1
 38268                           
 38269                           ;stkvar	_f1p @ sp[(-4)+-2]
 38270  01BEA2  0EFA               	movlw	-6
 38271  01BEA4  006F FF8F FFD9     	movff	plusw1,fsr2l
 38272  01BEAA  0EFB               	movlw	-5
 38273  01BEAC  006F FF8F FFDA     	movff	plusw1,fsr2h
 38274  01BEB2  006F FF7B FFE6     	movff	postinc2,postinc1
 38275  01BEB8  006F FF7B FFE6     	movff	postinc2,postinc1
 38276  01BEBE  006F FF7B FFE6     	movff	postinc2,postinc1
 38277  01BEC4  006F FF7B FFE6     	movff	postinc2,postinc1
 38278  01BECA  EC83  F0A3         	call	___fladd	;wreg free
 38279                           
 38280                           ;stkvar	_f1p @ sp[(0)+-2]
 38281  01BECE  0EFE               	movlw	-2
 38282  01BED0  006F FF8F FFD9     	movff	plusw1,fsr2l
 38283  01BED6  0EFF               	movlw	-1
 38284  01BED8  006F FF8F FFDA     	movff	plusw1,fsr2h
 38285  01BEDE  0060  F007  FFDE   	movff	btemp,postinc2
 38286  01BEE4  0060  F00B  FFDE   	movff	btemp+1,postinc2
 38287  01BEEA  0060  F00F  FFDE   	movff	btemp+2,postinc2
 38288  01BEF0  0060  F013  FFDE   	movff	btemp+3,postinc2
 38289                           
 38290                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 38291  01BEF6  0EFA               	movlw	250
 38292  01BEF8  26E1               	addwf	fsr1l,f,c
 38293  01BEFA  0EFF               	movlw	255
 38294  01BEFC  22E2               	addwfc	fsr1h,f,c
 38295  01BEFE  0012               	return		;funcret
 38296  01BF00                     __end_of___asfladd:
 38297                           	opt callstack 0
 38298                           
 38299 ;; *************** function _INT0_ISR *****************
 38300 ;; Defined at:
 38301 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 38302 ;; Parameters:    Size  Location     Type
 38303 ;;		None
 38304 ;; Auto vars:     Size  Location     Type
 38305 ;;		None
 38306 ;; Return value:  Size  Location     Type
 38307 ;;                  1    wreg      void 
 38308 ;; Registers used:
 38309 ;;		wreg, status,2, status,0, pclath, tosl
 38310 ;; Tracked objects:
 38311 ;;		On entry : 0/0
 38312 ;;		On exit  : 0/0
 38313 ;;		Unchanged: 0/0
 38314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38319 ;;Total ram usage:        0 bytes
 38320 ;; Hardware stack levels used:    1
 38321 ;; Hardware stack levels required when called:    2
 38322 ;; This function calls:
 38323 ;;		_INT0_CallBack
 38324 ;; This function is called by:
 38325 ;;		Interrupt level 2
 38326 ;; This function uses a non-reentrant model
 38327 ;;
 38328                           
 38329                           	psect	text176
 38330  01D34C                     __ptext176:
 38331                           	opt callstack 0
 38332  01D34C                     _INT0_ISR:
 38333                           	opt callstack 2
 38334                           
 38335                           ;incstack = 0
 38336  01D34C  EE14  F208         	lfsr	1,___inthi_sp
 38337                           
 38338                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 38339  01D350  0139               	movlb	57	; () banked
 38340  01D352  91A1               	bcf	161,0,b	;volatile
 38341                           
 38342                           ; BSR set to: 57
 38343                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 38344  01D354  EC2C  F0E8         	call	_INT0_CallBack	;wreg free
 38345  01D358  0011               	retfie		f
 38346  01D35A                     __end_of_INT0_ISR:
 38347                           	opt callstack 0
 38348                           
 38349 ;; *************** function _INT0_CallBack *****************
 38350 ;; Defined at:
 38351 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 38352 ;; Parameters:    Size  Location     Type
 38353 ;;		None
 38354 ;; Auto vars:     Size  Location     Type
 38355 ;;		None
 38356 ;; Return value:  Size  Location     Type
 38357 ;;                  1  [STACK] void 
 38358 ;; Registers used:
 38359 ;;		wreg, status,2, status,0, pclath, tosl
 38360 ;; Tracked objects:
 38361 ;;		On entry : 3F/39
 38362 ;;		On exit  : 0/0
 38363 ;;		Unchanged: 0/0
 38364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38369 ;;Total ram usage:        0 bytes
 38370 ;; Hardware stack levels used:    1
 38371 ;; Hardware stack levels required when called:    1
 38372 ;; This function calls:
 38373 ;;		Absolute function
 38374 ;;		_INT0_DefaultInterruptHandler
 38375 ;; This function is called by:
 38376 ;;		_INT0_ISR
 38377 ;; This function uses a reentrant model
 38378 ;;
 38379                           
 38380                           	psect	text177
 38381  01D058                     __ptext177:
 38382                           	opt callstack 0
 38383  01D058                     _INT0_CallBack:
 38384                           	opt callstack 2
 38385                           
 38386                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 38387                           
 38388                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38389                           ;incstack = 0
 38390  01D058  0100               	movlb	0	; () banked
 38391  01D05A  5193               	movf	_INT0_InterruptHandler& (0+255),w,b
 38392  01D05C  1194               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 38393  01D05E  1195               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 38394  01D060  B4D8               	btfsc	status,2,c
 38395  01D062  0012               	return	
 38396                           
 38397                           ; BSR set to: 0
 38398                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 38399  01D064  D801               	call	u1075_48
 38400  01D066  0012               	return	
 38401  01D068                     u1075_48:
 38402  01D068  0005               	push	
 38403  01D06A  6EFA               	movwf	pclath,c
 38404  01D06C  5193               	movf	_INT0_InterruptHandler& (0+255),w,b
 38405  01D06E  6EFD               	movwf	tosl,c
 38406  01D070  5194               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 38407  01D072  6EFE               	movwf	tosh,c
 38408  01D074  5195               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 38409  01D076  6EFF               	movwf	tosu,c
 38410  01D078  50FA               	movf	pclath,w,c
 38411  01D07A  0012               	return		;indir
 38412  01D07C                     __end_of_INT0_CallBack:
 38413                           	opt callstack 0
 38414                           
 38415 ;; *************** function _INT0_DefaultInterruptHandler *****************
 38416 ;; Defined at:
 38417 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 38418 ;; Parameters:    Size  Location     Type
 38419 ;;		None
 38420 ;; Auto vars:     Size  Location     Type
 38421 ;;		None
 38422 ;; Return value:  Size  Location     Type
 38423 ;;                  1  [STACK] void 
 38424 ;; Registers used:
 38425 ;;		None
 38426 ;; Tracked objects:
 38427 ;;		On entry : 3F/0
 38428 ;;		On exit  : 0/0
 38429 ;;		Unchanged: 0/0
 38430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38435 ;;Total ram usage:        0 bytes
 38436 ;; Hardware stack levels used:    1
 38437 ;; This function calls:
 38438 ;;		Nothing
 38439 ;; This function is called by:
 38440 ;;		_EXT_INT_Initialize
 38441 ;;		_INT0_CallBack
 38442 ;; This function uses a reentrant model
 38443 ;;
 38444                           
 38445                           	psect	text178
 38446  01D3F2                     __ptext178:
 38447                           	opt callstack 0
 38448  01D3F2                     _INT0_DefaultInterruptHandler:
 38449                           	opt callstack 2
 38450                           
 38451                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 38452                           
 38453                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38454                           ;incstack = 0
 38455  01D3F2  0012               	return		;funcret
 38456  01D3F4                     __end_of_INT0_DefaultInterruptHandler:
 38457                           	opt callstack 0
 38458                           
 38459 ;; *************** function _Default_ISR *****************
 38460 ;; Defined at:
 38461 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 38462 ;; Parameters:    Size  Location     Type
 38463 ;;		None
 38464 ;; Auto vars:     Size  Location     Type
 38465 ;;		None
 38466 ;; Return value:  Size  Location     Type
 38467 ;;                  1    wreg      void 
 38468 ;; Registers used:
 38469 ;;		None
 38470 ;; Tracked objects:
 38471 ;;		On entry : 0/0
 38472 ;;		On exit  : 0/0
 38473 ;;		Unchanged: 0/0
 38474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38479 ;;Total ram usage:        0 bytes
 38480 ;; Hardware stack levels used:    1
 38481 ;; This function calls:
 38482 ;;		Nothing
 38483 ;; This function is called by:
 38484 ;;		Interrupt level 2
 38485 ;; This function uses a non-reentrant model
 38486 ;;
 38487                           
 38488                           	psect	text179
 38489  01D3E8                     __ptext179:
 38490                           	opt callstack 0
 38491  01D3E8                     _Default_ISR:
 38492                           	opt callstack 4
 38493                           
 38494                           ;incstack = 0
 38495  01D3E8  EE14  F208         	lfsr	1,___inthi_sp
 38496  01D3EC  0011               	retfie		f
 38497  01D3EE                     __end_of_Default_ISR:
 38498                           	opt callstack 0
 38499                           
 38500 ;; *************** function _ADCC_ISR *****************
 38501 ;; Defined at:
 38502 ;;		line 314 in file "mcc_generated_files/adcc.c"
 38503 ;; Parameters:    Size  Location     Type
 38504 ;;		None
 38505 ;; Auto vars:     Size  Location     Type
 38506 ;;		None
 38507 ;; Return value:  Size  Location     Type
 38508 ;;                  1    wreg      void 
 38509 ;; Registers used:
 38510 ;;		wreg, status,2, status,0, pclath, tosl
 38511 ;; Tracked objects:
 38512 ;;		On entry : 0/0
 38513 ;;		On exit  : 0/0
 38514 ;;		Unchanged: 0/0
 38515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38520 ;;Total ram usage:        0 bytes
 38521 ;; Hardware stack levels used:    1
 38522 ;; Hardware stack levels required when called:    1
 38523 ;; This function calls:
 38524 ;;		Absolute function
 38525 ;;		_ADCC_DefaultInterruptHandler
 38526 ;;		_adc_int_handler
 38527 ;; This function is called by:
 38528 ;;		Interrupt level 2
 38529 ;; This function uses a non-reentrant model
 38530 ;;
 38531                           
 38532                           	psect	text180
 38533  01CCEC                     __ptext180:
 38534                           	opt callstack 0
 38535  01CCEC                     _ADCC_ISR:
 38536                           	opt callstack 3
 38537                           
 38538                           ;incstack = 0
 38539  01CCEC  EE14  F208         	lfsr	1,___inthi_sp
 38540                           
 38541                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 38542  01CCF0  0139               	movlb	57	; () banked
 38543  01CCF2  95A1               	bcf	161,2,b	;volatile
 38544                           
 38545                           ; BSR set to: 57
 38546                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 38547  01CCF4  0100               	movlb	0	; () banked
 38548  01CCF6  5184               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 38549  01CCF8  1185               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 38550  01CCFA  1186               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 38551  01CCFC  B4D8               	btfsc	status,2,c
 38552  01CCFE  0011               	retfie		f
 38553                           
 38554                           ; BSR set to: 0
 38555                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 38556  01CD00  D801               	call	i2u1129_48
 38557  01CD02  0011               	retfie		f
 38558  01CD04                     i2u1129_48:
 38559  01CD04  0005               	push	
 38560  01CD06  6EFA               	movwf	pclath,c
 38561  01CD08  5184               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 38562  01CD0A  6EFD               	movwf	tosl,c
 38563  01CD0C  5185               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 38564  01CD0E  6EFE               	movwf	tosh,c
 38565  01CD10  5186               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 38566  01CD12  6EFF               	movwf	tosu,c
 38567  01CD14  50FA               	movf	pclath,w,c
 38568  01CD16  0012               	return		;indir
 38569  01CD18                     __end_of_ADCC_ISR:
 38570                           	opt callstack 0
 38571                           
 38572 ;; *************** function _adc_int_t_handler *****************
 38573 ;; Defined at:
 38574 ;;		line 176 in file "daq.c"
 38575 ;; Parameters:    Size  Location     Type
 38576 ;;		None
 38577 ;; Auto vars:     Size  Location     Type
 38578 ;;		None
 38579 ;; Return value:  Size  Location     Type
 38580 ;;                  1  [STACK] void 
 38581 ;; Registers used:
 38582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 38583 ;; Tracked objects:
 38584 ;;		On entry : 3F/0
 38585 ;;		On exit  : 1/0
 38586 ;;		Unchanged: 0/0
 38587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38592 ;;Total ram usage:        0 bytes
 38593 ;; Hardware stack levels used:    1
 38594 ;; Hardware stack levels required when called:    1
 38595 ;; This function calls:
 38596 ;;		_ADCC_DischargeSampleCapacitor
 38597 ;;		_ADCC_StartConversion
 38598 ;; This function is called by:
 38599 ;;		_start_adc_scan
 38600 ;;		_ADCC_ThresholdISR
 38601 ;; This function uses a reentrant model
 38602 ;;
 38603                           
 38604                           	psect	text181
 38605  01BD90                     __ptext181:
 38606                           	opt callstack 0
 38607  01BD90                     _adc_int_t_handler:
 38608                           	opt callstack 2
 38609                           
 38610                           ;daq.c: 181:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 38611                           
 38612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38613                           ;incstack = 0
 38614  01BD90  013E               	movlb	62	; () banked
 38615  01BD92  51E6               	movf	230,w,b	;volatile
 38616  01BD94  006F FB9C  F001    	movff	16103,btemp	;volatile
 38617  01BD9A  6A02               	clrf	(btemp+1)^0,c
 38618  01BD9C  0060  F004  F002   	movff	btemp,btemp+1
 38619  01BDA2  6A01               	clrf	btemp^0,c
 38620  01BDA4  2601               	addwf	btemp^0,f,c
 38621  01BDA6  0E00               	movlw	0
 38622  01BDA8  2202               	addwfc	(btemp+1)^0,f,c
 38623  01BDAA  0100               	movlb	0	; () banked
 38624  01BDAC  51E0               	movf	(_R+50)& (0+255),w,b	;volatile
 38625  01BDAE  0D02               	mullw	2
 38626  01BDB0  50F3               	movf	243,w,c
 38627  01BDB2  0FAE               	addlw	low _R
 38628  01BDB4  6ED9               	movwf	fsr2l,c
 38629  01BDB6  6ADA               	clrf	fsr2h,c
 38630  01BDB8  0060  F007  FFDE   	movff	btemp,postinc2
 38631  01BDBE  0060  F00B  FFDD   	movff	btemp+1,postdec2
 38632  01BDC4                     l12310:
 38633                           
 38634                           ;daq.c: 183:   if (++R.scan_index > 0XD) {
 38635  01BDC4  0100               	movlb	0	; () banked
 38636  01BDC6  2BE0               	incf	(_R+50)& (0+255),f,b	;volatile
 38637  01BDC8  0E0D               	movlw	13
 38638  01BDCA  65E0               	cpfsgt	(_R+50)& (0+255),b	;volatile
 38639  01BDCC  D003               	goto	l12316
 38640                           
 38641                           ; BSR set to: 0
 38642                           ;daq.c: 184:    R.done = 1;
 38643  01BDCE  0E01               	movlw	1
 38644  01BDD0  6FE3               	movwf	(_R+53)& (0+255),b	;volatile
 38645  01BDD2  0012               	return	
 38646  01BDD4                     l12316:
 38647                           
 38648                           ; BSR set to: 0
 38649                           ;daq.c: 190:  } while (!((R.scan_select >> R.scan_index) &0x1));
 38650  01BDD4  0060  F380  F00C   	movff	_R+50,btemp+11	;volatile
 38651  01BDDA  EE20  F0E1         	lfsr	2,_R+51	;volatile
 38652  01BDDE  006F FF78  F009    	movff	postinc2,btemp+8
 38653  01BDE4  006F FF74  F00A    	movff	postdec2,btemp+9
 38654  01BDEA  2A0C               	incf	(btemp+11)^0,f,c
 38655  01BDEC  D003               	goto	u1126_44
 38656  01BDEE                     u1126_45:
 38657  01BDEE  90D8               	bcf	status,0,c
 38658  01BDF0  320A               	rrcf	(btemp+9)^0,f,c
 38659  01BDF2  3209               	rrcf	(btemp+8)^0,f,c
 38660  01BDF4                     u1126_44:
 38661  01BDF4  2E0C               	decfsz	(btemp+11)^0,f,c
 38662  01BDF6  D7FB               	goto	u1126_45
 38663  01BDF8  A009               	btfss	(btemp+8)^0,0,c
 38664  01BDFA  D7E4               	goto	l12310
 38665                           
 38666                           ;daq.c: 191:  ADCC_DischargeSampleCapacitor();
 38667  01BDFC  ECD5  F0E9         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 38668                           
 38669                           ; BSR set to: 62
 38670                           ;daq.c: 192:  ADCC_StartConversion(R.scan_index & 0xf);
 38671  01BE00  0100               	movlb	0	; () banked
 38672  01BE02  51E0               	movf	(_R+50)& (0+255),w,b	;volatile
 38673  01BE04  0B0F               	andlw	15
 38674  01BE06  6EE6               	movwf	postinc1,c
 38675  01BE08  EC60  F0E9         	call	_ADCC_StartConversion	;wreg free
 38676                           
 38677                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 38678  01BE0C  0012               	return		;funcret
 38679  01BE0E                     __end_of_adc_int_t_handler:
 38680                           	opt callstack 0
 38681                           
 38682 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 38683 ;; Defined at:
 38684 ;;		line 339 in file "mcc_generated_files/adcc.c"
 38685 ;; Parameters:    Size  Location     Type
 38686 ;;		None
 38687 ;; Auto vars:     Size  Location     Type
 38688 ;;		None
 38689 ;; Return value:  Size  Location     Type
 38690 ;;                  1  [STACK] void 
 38691 ;; Registers used:
 38692 ;;		None
 38693 ;; Tracked objects:
 38694 ;;		On entry : 3F/0
 38695 ;;		On exit  : 0/0
 38696 ;;		Unchanged: 0/0
 38697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38702 ;;Total ram usage:        0 bytes
 38703 ;; Hardware stack levels used:    1
 38704 ;; This function calls:
 38705 ;;		Nothing
 38706 ;; This function is called by:
 38707 ;;		_ADCC_Initialize
 38708 ;;		_ADCC_ISR
 38709 ;;		_ADCC_ThresholdISR
 38710 ;; This function uses a reentrant model
 38711 ;;
 38712                           
 38713                           	psect	text182
 38714  01D3F4                     __ptext182:
 38715                           	opt callstack 0
 38716  01D3F4                     _ADCC_DefaultInterruptHandler:
 38717                           	opt callstack 3
 38718                           
 38719                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 38720                           
 38721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38722                           ;incstack = 0
 38723  01D3F4  0012               	return		;funcret
 38724  01D3F6                     __end_of_ADCC_DefaultInterruptHandler:
 38725                           	opt callstack 0
 38726                           
 38727 ;; *************** function _adc_int_handler *****************
 38728 ;; Defined at:
 38729 ;;		line 166 in file "daq.c"
 38730 ;; Parameters:    Size  Location     Type
 38731 ;;		None
 38732 ;; Auto vars:     Size  Location     Type
 38733 ;;		None
 38734 ;; Return value:  Size  Location     Type
 38735 ;;                  1  [STACK] void 
 38736 ;; Registers used:
 38737 ;;		None
 38738 ;; Tracked objects:
 38739 ;;		On entry : 3F/0
 38740 ;;		On exit  : 0/0
 38741 ;;		Unchanged: 0/0
 38742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38747 ;;Total ram usage:        0 bytes
 38748 ;; Hardware stack levels used:    1
 38749 ;; This function calls:
 38750 ;;		Nothing
 38751 ;; This function is called by:
 38752 ;;		_start_adc_scan
 38753 ;;		_ADCC_ISR
 38754 ;; This function uses a reentrant model
 38755 ;;
 38756                           
 38757                           	psect	text183
 38758  01D3F6                     __ptext183:
 38759                           	opt callstack 0
 38760  01D3F6                     _adc_int_handler:
 38761                           	opt callstack 3
 38762                           
 38763                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 38764                           
 38765                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38766                           ;incstack = 0
 38767  01D3F6  0012               	return		;funcret
 38768  01D3F8                     __end_of_adc_int_handler:
 38769                           	opt callstack 0
 38770                           
 38771 ;; *************** function _ADCC_ThresholdISR *****************
 38772 ;; Defined at:
 38773 ;;		line 327 in file "mcc_generated_files/adcc.c"
 38774 ;; Parameters:    Size  Location     Type
 38775 ;;		None
 38776 ;; Auto vars:     Size  Location     Type
 38777 ;;		None
 38778 ;; Return value:  Size  Location     Type
 38779 ;;                  1    wreg      void 
 38780 ;; Registers used:
 38781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 38782 ;; Tracked objects:
 38783 ;;		On entry : 0/0
 38784 ;;		On exit  : 0/0
 38785 ;;		Unchanged: 0/0
 38786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38789 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38790 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38791 ;;Total ram usage:        5 bytes
 38792 ;; Hardware stack levels used:    1
 38793 ;; Hardware stack levels required when called:    2
 38794 ;; This function calls:
 38795 ;;		Absolute function
 38796 ;;		_ADCC_DefaultInterruptHandler
 38797 ;;		_adc_int_t_handler
 38798 ;; This function is called by:
 38799 ;;		Interrupt level 2
 38800 ;; This function uses a non-reentrant model
 38801 ;;
 38802                           
 38803                           	psect	text184
 38804  01C048                     __ptext184:
 38805                           	opt callstack 0
 38806  01C048                     _ADCC_ThresholdISR:
 38807                           	opt callstack 2
 38808                           
 38809                           ;incstack = 0
 38810  01C048  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 38811  01C04E  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 38812  01C054  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 38813  01C05A  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 38814  01C060  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 38815  01C066  EE14  F208         	lfsr	1,___inthi_sp
 38816                           
 38817                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 38818  01C06A  0139               	movlb	57	; () banked
 38819  01C06C  97A1               	bcf	161,3,b	;volatile
 38820                           
 38821                           ; BSR set to: 57
 38822                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 38823  01C06E  0100               	movlb	0	; () banked
 38824  01C070  5181               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 38825  01C072  1182               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 38826  01C074  1183               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 38827  01C076  B4D8               	btfsc	status,2,c
 38828  01C078  D00C               	goto	i2u1131_49
 38829                           
 38830                           ; BSR set to: 0
 38831                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 38832  01C07A  D801               	call	i2u1131_48
 38833  01C07C  D00A               	goto	i2u1131_49
 38834  01C07E                     i2u1131_48:
 38835  01C07E  0005               	push	
 38836  01C080  6EFA               	movwf	pclath,c
 38837  01C082  5181               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 38838  01C084  6EFD               	movwf	tosl,c
 38839  01C086  5182               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 38840  01C088  6EFE               	movwf	tosh,c
 38841  01C08A  5183               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 38842  01C08C  6EFF               	movwf	tosu,c
 38843  01C08E  50FA               	movf	pclath,w,c
 38844  01C090  0012               	return		;indir
 38845  01C092                     i2u1131_49:
 38846  01C092  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 38847  01C098  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 38848  01C09E  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 38849  01C0A4  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 38850  01C0AA  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 38851  01C0B0  0011               	retfie		f
 38852  01C0B2                     __end_of_ADCC_ThresholdISR:
 38853                           	opt callstack 0
 38854                           
 38855 ;; *************** function _UART1_rx_vect_isr *****************
 38856 ;; Defined at:
 38857 ;;		line 181 in file "mcc_generated_files/uart1.c"
 38858 ;; Parameters:    Size  Location     Type
 38859 ;;		None
 38860 ;; Auto vars:     Size  Location     Type
 38861 ;;		None
 38862 ;; Return value:  Size  Location     Type
 38863 ;;                  1    wreg      void 
 38864 ;; Registers used:
 38865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 38866 ;; Tracked objects:
 38867 ;;		On entry : 0/0
 38868 ;;		On exit  : 0/0
 38869 ;;		Unchanged: 0/0
 38870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38875 ;;Total ram usage:        0 bytes
 38876 ;; Hardware stack levels used:    1
 38877 ;; Hardware stack levels required when called:    1
 38878 ;; This function calls:
 38879 ;;		Absolute function
 38880 ;;		_UART1_Receive_ISR
 38881 ;; This function is called by:
 38882 ;;		Interrupt level 2
 38883 ;; This function uses a non-reentrant model
 38884 ;;
 38885                           
 38886                           	psect	text185
 38887  01CF50                     __ptext185:
 38888                           	opt callstack 0
 38889  01CF50                     _UART1_rx_vect_isr:
 38890                           	opt callstack 3
 38891                           
 38892                           ;incstack = 0
 38893  01CF50  EE14  F208         	lfsr	1,___inthi_sp
 38894                           
 38895                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 38896  01CF54  0100               	movlb	0	; () banked
 38897  01CF56  5187               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 38898  01CF58  1188               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 38899  01CF5A  1189               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 38900  01CF5C  B4D8               	btfsc	status,2,c
 38901  01CF5E  0011               	retfie		f
 38902                           
 38903                           ; BSR set to: 0
 38904                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 38905  01CF60  D801               	call	i2u1133_48
 38906  01CF62  0011               	retfie		f
 38907  01CF64                     i2u1133_48:
 38908  01CF64  0005               	push	
 38909  01CF66  6EFA               	movwf	pclath,c
 38910  01CF68  5187               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 38911  01CF6A  6EFD               	movwf	tosl,c
 38912  01CF6C  5188               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 38913  01CF6E  6EFE               	movwf	tosh,c
 38914  01CF70  5189               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 38915  01CF72  6EFF               	movwf	tosu,c
 38916  01CF74  50FA               	movf	pclath,w,c
 38917  01CF76  0012               	return		;indir
 38918  01CF78                     __end_of_UART1_rx_vect_isr:
 38919                           	opt callstack 0
 38920                           
 38921 ;; *************** function _UART1_Receive_ISR *****************
 38922 ;; Defined at:
 38923 ;;		line 192 in file "mcc_generated_files/uart1.c"
 38924 ;; Parameters:    Size  Location     Type
 38925 ;;		None
 38926 ;; Auto vars:     Size  Location     Type
 38927 ;;		None
 38928 ;; Return value:  Size  Location     Type
 38929 ;;                  1  [STACK] void 
 38930 ;; Registers used:
 38931 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38932 ;; Tracked objects:
 38933 ;;		On entry : 3F/0
 38934 ;;		On exit  : 3F/0
 38935 ;;		Unchanged: 0/0
 38936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38941 ;;Total ram usage:        0 bytes
 38942 ;; Hardware stack levels used:    1
 38943 ;; This function calls:
 38944 ;;		Nothing
 38945 ;; This function is called by:
 38946 ;;		_UART1_Initialize
 38947 ;;		_UART1_rx_vect_isr
 38948 ;; This function uses a reentrant model
 38949 ;;
 38950                           
 38951                           	psect	text186
 38952  01D0E4                     __ptext186:
 38953                           	opt callstack 0
 38954  01D0E4                     _UART1_Receive_ISR:
 38955                           	opt callstack 3
 38956                           
 38957                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 38958                           
 38959                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38960                           ;incstack = 0
 38961  01D0E4  0EDC               	movlw	low _uart1RxBuffer
 38962  01D0E6  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 38963  01D0E8  6ED9               	movwf	fsr2l,c
 38964  01D0EA  6ADA               	clrf	fsr2h,c
 38965  01D0EC  0E01               	movlw	high _uart1RxBuffer
 38966  01D0EE  22DA               	addwfc	fsr2h,f,c
 38967  01D0F0  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 38968  01D0F6  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 38969                           
 38970                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 38971  01D0F8  0E07               	movlw	7
 38972  01D0FA  6447               	cpfsgt	_uart1RxHead^0,c
 38973  01D0FC  D001               	goto	l11730
 38974                           
 38975                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 38976  01D0FE  6A47               	clrf	_uart1RxHead^0,c	;volatile
 38977  01D100                     l11730:
 38978                           
 38979                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 38980  01D100  0100               	movlb	0	; () banked
 38981  01D102  2BA9               	incf	_uart1RxCount& (0+255),f,b	;volatile
 38982                           
 38983                           ; BSR set to: 0
 38984                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 38985  01D104  0012               	return		;funcret
 38986  01D106                     __end_of_UART1_Receive_ISR:
 38987                           	opt callstack 0
 38988                           
 38989 ;; *************** function _UART2_tx_vect_isr *****************
 38990 ;; Defined at:
 38991 ;;		line 195 in file "mcc_generated_files/uart2.c"
 38992 ;; Parameters:    Size  Location     Type
 38993 ;;		None
 38994 ;; Auto vars:     Size  Location     Type
 38995 ;;		None
 38996 ;; Return value:  Size  Location     Type
 38997 ;;                  1    wreg      void 
 38998 ;; Registers used:
 38999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 39000 ;; Tracked objects:
 39001 ;;		On entry : 0/0
 39002 ;;		On exit  : 0/0
 39003 ;;		Unchanged: 0/0
 39004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39009 ;;Total ram usage:        0 bytes
 39010 ;; Hardware stack levels used:    1
 39011 ;; Hardware stack levels required when called:    1
 39012 ;; This function calls:
 39013 ;;		Absolute function
 39014 ;;		_UART2_Transmit_ISR
 39015 ;; This function is called by:
 39016 ;;		Interrupt level 2
 39017 ;; This function uses a non-reentrant model
 39018 ;;
 39019                           
 39020                           	psect	text187
 39021  01CF78                     __ptext187:
 39022                           	opt callstack 0
 39023  01CF78                     _UART2_tx_vect_isr:
 39024                           	opt callstack 3
 39025                           
 39026                           ; BSR set to: 0
 39027                           ;incstack = 0
 39028  01CF78  EE14  F208         	lfsr	1,___inthi_sp
 39029                           
 39030                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 39031  01CF7C  0100               	movlb	0	; () banked
 39032  01CF7E  518A               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 39033  01CF80  118B               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 39034  01CF82  118C               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 39035  01CF84  B4D8               	btfsc	status,2,c
 39036  01CF86  0011               	retfie		f
 39037                           
 39038                           ; BSR set to: 0
 39039                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 39040  01CF88  D801               	call	i2u1135_48
 39041  01CF8A  0011               	retfie		f
 39042  01CF8C                     i2u1135_48:
 39043  01CF8C  0005               	push	
 39044  01CF8E  6EFA               	movwf	pclath,c
 39045  01CF90  518A               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 39046  01CF92  6EFD               	movwf	tosl,c
 39047  01CF94  518B               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 39048  01CF96  6EFE               	movwf	tosh,c
 39049  01CF98  518C               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 39050  01CF9A  6EFF               	movwf	tosu,c
 39051  01CF9C  50FA               	movf	pclath,w,c
 39052  01CF9E  0012               	return		;indir
 39053  01CFA0                     __end_of_UART2_tx_vect_isr:
 39054                           	opt callstack 0
 39055                           
 39056 ;; *************** function _UART2_Transmit_ISR *****************
 39057 ;; Defined at:
 39058 ;;		line 213 in file "mcc_generated_files/uart2.c"
 39059 ;; Parameters:    Size  Location     Type
 39060 ;;		None
 39061 ;; Auto vars:     Size  Location     Type
 39062 ;;		None
 39063 ;; Return value:  Size  Location     Type
 39064 ;;                  1  [STACK] void 
 39065 ;; Registers used:
 39066 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39067 ;; Tracked objects:
 39068 ;;		On entry : 3F/0
 39069 ;;		On exit  : 3B/39
 39070 ;;		Unchanged: 0/0
 39071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39076 ;;Total ram usage:        0 bytes
 39077 ;; Hardware stack levels used:    1
 39078 ;; This function calls:
 39079 ;;		Nothing
 39080 ;; This function is called by:
 39081 ;;		_UART2_Initialize
 39082 ;;		_UART2_tx_vect_isr
 39083 ;; This function uses a reentrant model
 39084 ;;
 39085                           
 39086                           	psect	text188
 39087  01CD18                     __ptext188:
 39088                           	opt callstack 0
 39089  01CD18                     _UART2_Transmit_ISR:
 39090                           	opt callstack 3
 39091                           
 39092                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 39093                           
 39094                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39095                           ;incstack = 0
 39096  01CD18  0E40               	movlw	64
 39097  01CD1A  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 39098  01CD1C  D010               	goto	l675
 39099                           
 39100                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 39101  01CD1E  0E54               	movlw	low _uart2TxBuffer
 39102  01CD20  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 39103  01CD22  6ED9               	movwf	fsr2l,c
 39104  01CD24  6ADA               	clrf	fsr2h,c
 39105  01CD26  0E03               	movlw	high _uart2TxBuffer
 39106  01CD28  22DA               	addwfc	fsr2h,f,c
 39107  01CD2A  50DF               	movf	indf2,w,c
 39108  01CD2C  013D               	movlb	61	; () banked
 39109  01CD2E  6FD2               	movwf	210,b	;volatile
 39110                           
 39111                           ; BSR set to: 61
 39112  01CD30  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 39113                           
 39114                           ; BSR set to: 61
 39115                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 39116  01CD32  0E3F               	movlw	63
 39117  01CD34  6446               	cpfsgt	_uart2TxTail^0,c
 39118  01CD36  D001               	goto	l11742
 39119                           
 39120                           ; BSR set to: 61
 39121                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 39122  01CD38  6A46               	clrf	_uart2TxTail^0,c	;volatile
 39123  01CD3A                     l11742:
 39124                           
 39125                           ; BSR set to: 61
 39126                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 39127  01CD3A  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 39128                           
 39129                           ;mcc_generated_files/uart2.c: 224:     }
 39130  01CD3C  0012               	return	
 39131  01CD3E                     l675:
 39132                           
 39133                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 39134  01CD3E  0139               	movlb	57	; () banked
 39135  01CD40  9796               	bcf	150,3,b	;volatile
 39136                           
 39137                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 39138  01CD42  0012               	return		;funcret
 39139  01CD44                     __end_of_UART2_Transmit_ISR:
 39140                           	opt callstack 0
 39141                           
 39142 ;; *************** function _UART2_rx_vect_isr *****************
 39143 ;; Defined at:
 39144 ;;		line 203 in file "mcc_generated_files/uart2.c"
 39145 ;; Parameters:    Size  Location     Type
 39146 ;;		None
 39147 ;; Auto vars:     Size  Location     Type
 39148 ;;		None
 39149 ;; Return value:  Size  Location     Type
 39150 ;;                  1    wreg      void 
 39151 ;; Registers used:
 39152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 39153 ;; Tracked objects:
 39154 ;;		On entry : 0/0
 39155 ;;		On exit  : 0/0
 39156 ;;		Unchanged: 0/0
 39157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39162 ;;Total ram usage:        0 bytes
 39163 ;; Hardware stack levels used:    1
 39164 ;; Hardware stack levels required when called:    1
 39165 ;; This function calls:
 39166 ;;		Absolute function
 39167 ;;		_UART2_Receive_ISR
 39168 ;; This function is called by:
 39169 ;;		Interrupt level 2
 39170 ;; This function uses a non-reentrant model
 39171 ;;
 39172                           
 39173                           	psect	text189
 39174  01CFA0                     __ptext189:
 39175                           	opt callstack 0
 39176  01CFA0                     _UART2_rx_vect_isr:
 39177                           	opt callstack 3
 39178                           
 39179                           ;incstack = 0
 39180  01CFA0  EE14  F208         	lfsr	1,___inthi_sp
 39181                           
 39182                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 39183  01CFA4  0100               	movlb	0	; () banked
 39184  01CFA6  518D               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 39185  01CFA8  118E               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 39186  01CFAA  118F               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 39187  01CFAC  B4D8               	btfsc	status,2,c
 39188  01CFAE  0011               	retfie		f
 39189                           
 39190                           ; BSR set to: 0
 39191                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 39192  01CFB0  D801               	call	i2u1137_48
 39193  01CFB2  0011               	retfie		f
 39194  01CFB4                     i2u1137_48:
 39195  01CFB4  0005               	push	
 39196  01CFB6  6EFA               	movwf	pclath,c
 39197  01CFB8  518D               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 39198  01CFBA  6EFD               	movwf	tosl,c
 39199  01CFBC  518E               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 39200  01CFBE  6EFE               	movwf	tosh,c
 39201  01CFC0  518F               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 39202  01CFC2  6EFF               	movwf	tosu,c
 39203  01CFC4  50FA               	movf	pclath,w,c
 39204  01CFC6  0012               	return		;indir
 39205  01CFC8                     __end_of_UART2_rx_vect_isr:
 39206                           	opt callstack 0
 39207                           
 39208 ;; *************** function _UART2_Receive_ISR *****************
 39209 ;; Defined at:
 39210 ;;		line 233 in file "mcc_generated_files/uart2.c"
 39211 ;; Parameters:    Size  Location     Type
 39212 ;;		None
 39213 ;; Auto vars:     Size  Location     Type
 39214 ;;		None
 39215 ;; Return value:  Size  Location     Type
 39216 ;;                  1  [STACK] void 
 39217 ;; Registers used:
 39218 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39219 ;; Tracked objects:
 39220 ;;		On entry : 3F/0
 39221 ;;		On exit  : 3F/0
 39222 ;;		Unchanged: 0/0
 39223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39228 ;;Total ram usage:        0 bytes
 39229 ;; Hardware stack levels used:    1
 39230 ;; This function calls:
 39231 ;;		Nothing
 39232 ;; This function is called by:
 39233 ;;		_UART2_Initialize
 39234 ;;		_UART2_rx_vect_isr
 39235 ;; This function uses a reentrant model
 39236 ;;
 39237                           
 39238                           	psect	text190
 39239  01D126                     __ptext190:
 39240                           	opt callstack 0
 39241  01D126                     _UART2_Receive_ISR:
 39242                           	opt callstack 3
 39243                           
 39244                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 39245                           
 39246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39247                           ;incstack = 0
 39248  01D126  0E00               	movlw	low _uart2RxBuffer
 39249  01D128  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 39250  01D12A  6ED9               	movwf	fsr2l,c
 39251  01D12C  6ADA               	clrf	fsr2h,c
 39252  01D12E  0E05               	movlw	high _uart2RxBuffer
 39253  01D130  22DA               	addwfc	fsr2h,f,c
 39254  01D132  006F F743 FFDF     	movff	15824,indf2	;volatile
 39255  01D138  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 39256                           
 39257                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 39258  01D13A  2844               	incf	_uart2RxHead^0,w,c
 39259  01D13C  B4D8               	btfsc	status,2,c
 39260                           
 39261                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 39262  01D13E  6A44               	clrf	_uart2RxHead^0,c	;volatile
 39263                           
 39264                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 39265  01D140  0100               	movlb	0	; () banked
 39266  01D142  2BA6               	incf	_uart2RxCount& (0+255),f,b	;volatile
 39267                           
 39268                           ; BSR set to: 0
 39269                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 39270  01D144  0012               	return		;funcret
 39271  01D146                     __end_of_UART2_Receive_ISR:
 39272                           	opt callstack 0
 39273                           
 39274 ;; *************** function _TMR6_ISR *****************
 39275 ;; Defined at:
 39276 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 39277 ;; Parameters:    Size  Location     Type
 39278 ;;		None
 39279 ;; Auto vars:     Size  Location     Type
 39280 ;;		None
 39281 ;; Return value:  Size  Location     Type
 39282 ;;                  1    wreg      void 
 39283 ;; Registers used:
 39284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 39285 ;; Tracked objects:
 39286 ;;		On entry : 0/0
 39287 ;;		On exit  : 0/0
 39288 ;;		Unchanged: 0/0
 39289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39292 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39294 ;;Total ram usage:        1 bytes
 39295 ;; Hardware stack levels used:    1
 39296 ;; Hardware stack levels required when called:    2
 39297 ;; This function calls:
 39298 ;;		_TMR6_CallBack
 39299 ;; This function is called by:
 39300 ;;		Interrupt level 2
 39301 ;; This function uses a non-reentrant model
 39302 ;;
 39303                           
 39304                           	psect	text191
 39305  01D1F8                     __ptext191:
 39306                           	opt callstack 0
 39307  01D1F8                     _TMR6_ISR:
 39308                           	opt callstack 2
 39309                           
 39310                           ; BSR set to: 0
 39311                           ;incstack = 0
 39312  01D1F8  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 39313  01D1FE  EE14  F208         	lfsr	1,___inthi_sp
 39314                           
 39315                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 39316  01D202  0139               	movlb	57	; () banked
 39317  01D204  91A9               	bcf	169,0,b	;volatile
 39318                           
 39319                           ; BSR set to: 57
 39320                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 39321  01D206  EC3E  F0E8         	call	_TMR6_CallBack	;wreg free
 39322  01D20A  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 39323  01D210  0011               	retfie		f
 39324  01D212                     __end_of_TMR6_ISR:
 39325                           	opt callstack 0
 39326                           
 39327 ;; *************** function _TMR6_CallBack *****************
 39328 ;; Defined at:
 39329 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 39330 ;; Parameters:    Size  Location     Type
 39331 ;;		None
 39332 ;; Auto vars:     Size  Location     Type
 39333 ;;		None
 39334 ;; Return value:  Size  Location     Type
 39335 ;;                  1  [STACK] void 
 39336 ;; Registers used:
 39337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 39338 ;; Tracked objects:
 39339 ;;		On entry : 3F/39
 39340 ;;		On exit  : 0/0
 39341 ;;		Unchanged: 0/0
 39342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39347 ;;Total ram usage:        0 bytes
 39348 ;; Hardware stack levels used:    1
 39349 ;; Hardware stack levels required when called:    1
 39350 ;; This function calls:
 39351 ;;		Absolute function
 39352 ;;		_TMR6_DefaultInterruptHandler
 39353 ;; This function is called by:
 39354 ;;		_TMR6_ISR
 39355 ;; This function uses a reentrant model
 39356 ;;
 39357                           
 39358                           	psect	text192
 39359  01D07C                     __ptext192:
 39360                           	opt callstack 0
 39361  01D07C                     _TMR6_CallBack:
 39362                           	opt callstack 2
 39363                           
 39364                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 39365                           
 39366                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39367                           ;incstack = 0
 39368  01D07C  0100               	movlb	0	; () banked
 39369  01D07E  517E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 39370  01D080  117F               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 39371  01D082  1180               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 39372  01D084  B4D8               	btfsc	status,2,c
 39373  01D086  0012               	return	
 39374                           
 39375                           ; BSR set to: 0
 39376                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 39377  01D088  D801               	call	u1083_48
 39378  01D08A  0012               	return	
 39379  01D08C                     u1083_48:
 39380  01D08C  0005               	push	
 39381  01D08E  6EFA               	movwf	pclath,c
 39382  01D090  517E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 39383  01D092  6EFD               	movwf	tosl,c
 39384  01D094  517F               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 39385  01D096  6EFE               	movwf	tosh,c
 39386  01D098  5180               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 39387  01D09A  6EFF               	movwf	tosu,c
 39388  01D09C  50FA               	movf	pclath,w,c
 39389  01D09E  0012               	return		;indir
 39390  01D0A0                     __end_of_TMR6_CallBack:
 39391                           	opt callstack 0
 39392                           
 39393 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 39394 ;; Defined at:
 39395 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 39396 ;; Parameters:    Size  Location     Type
 39397 ;;		None
 39398 ;; Auto vars:     Size  Location     Type
 39399 ;;  i               1  [STACK] unsigned char 
 39400 ;; Return value:  Size  Location     Type
 39401 ;;                  1  [STACK] void 
 39402 ;; Registers used:
 39403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 39404 ;; Tracked objects:
 39405 ;;		On entry : 3F/0
 39406 ;;		On exit  : 0/0
 39407 ;;		Unchanged: 0/0
 39408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39413 ;;Total ram usage:        0 bytes
 39414 ;; Hardware stack levels used:    1
 39415 ;; This function calls:
 39416 ;;		Nothing
 39417 ;; This function is called by:
 39418 ;;		_TMR6_Initialize
 39419 ;;		_TMR6_CallBack
 39420 ;; This function uses a reentrant model
 39421 ;;
 39422                           
 39423                           	psect	text193
 39424  01C56E                     __ptext193:
 39425                           	opt callstack 0
 39426  01C56E                     _TMR6_DefaultInterruptHandler:
 39427                           	opt callstack 0
 39428                           
 39429                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39430  01C56E  52E6               	movf	postinc1,f,c
 39431                           
 39432                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 39433                           ;stkvar	_i @ sp[(-1)+0]
 39434                           
 39435                           ;incstack = 0
 39436  01C570  0EFF               	movlw	-1
 39437  01C572  6AE3               	clrf	plusw1,c
 39438  01C574                     l11214:
 39439                           
 39440                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 39441                           ;stkvar	_i @ sp[(-1)+0]
 39442  01C574  0EFF               	movlw	-1
 39443  01C576  50E3               	movf	plusw1,w,c
 39444  01C578  0D02               	mullw	2
 39445  01C57A  0E29               	movlw	low _tickCount
 39446  01C57C  24F3               	addwf	243,w,c
 39447  01C57E  6ED9               	movwf	fsr2l,c
 39448  01C580  0E02               	movlw	high _tickCount
 39449  01C582  20F4               	addwfc	prodh,w,c
 39450  01C584  6EDA               	movwf	fsr2h,c
 39451  01C586  50DE               	movf	postinc2,w,c
 39452  01C588  10DE               	iorwf	postinc2,w,c
 39453  01C58A  B4D8               	btfsc	status,2,c
 39454  01C58C  D00C               	goto	l11218
 39455                           
 39456                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 39457                           ;stkvar	_i @ sp[(-1)+0]
 39458  01C58E  0EFF               	movlw	-1
 39459  01C590  50E3               	movf	plusw1,w,c
 39460  01C592  0D02               	mullw	2
 39461  01C594  0E29               	movlw	low _tickCount
 39462  01C596  24F3               	addwf	243,w,c
 39463  01C598  6ED9               	movwf	fsr2l,c
 39464  01C59A  0E02               	movlw	high _tickCount
 39465  01C59C  20F4               	addwfc	prodh,w,c
 39466  01C59E  6EDA               	movwf	fsr2h,c
 39467  01C5A0  06DE               	decf	postinc2,f,c
 39468  01C5A2  0E00               	movlw	0
 39469  01C5A4  5ADD               	subwfb	postdec2,f,c
 39470  01C5A6                     l11218:
 39471                           
 39472                           ;mcc_generated_files/tmr6.c: 207:  }
 39473                           ;stkvar	_i @ sp[(-1)+0]
 39474  01C5A6  0EFF               	movlw	-1
 39475  01C5A8  2AE3               	incf	plusw1,f,c
 39476                           
 39477                           ;stkvar	_i @ sp[(-1)+0]
 39478  01C5AA  0EFF               	movlw	-1
 39479  01C5AC  006F FF8C  F001    	movff	plusw1,btemp
 39480  01C5B2  0E0C               	movlw	12
 39481  01C5B4  6401               	cpfsgt	btemp^0,c
 39482  01C5B6  D7DE               	goto	l11214
 39483                           
 39484                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 39485  01C5B8  52E5               	movf	postdec1,f,c
 39486  01C5BA  0012               	return		;funcret
 39487  01C5BC                     __end_of_TMR6_DefaultInterruptHandler:
 39488                           	opt callstack 0
 39489                           
 39490 ;; *************** function _DMA1_DMASCNT_ISR *****************
 39491 ;; Defined at:
 39492 ;;		line 126 in file "mcc_generated_files/dma1.c"
 39493 ;; Parameters:    Size  Location     Type
 39494 ;;		None
 39495 ;; Auto vars:     Size  Location     Type
 39496 ;;		None
 39497 ;; Return value:  Size  Location     Type
 39498 ;;                  1    wreg      void 
 39499 ;; Registers used:
 39500 ;;		None
 39501 ;; Tracked objects:
 39502 ;;		On entry : 0/0
 39503 ;;		On exit  : 3F/1
 39504 ;;		Unchanged: 0/0
 39505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39510 ;;Total ram usage:        0 bytes
 39511 ;; Hardware stack levels used:    1
 39512 ;; This function calls:
 39513 ;;		Nothing
 39514 ;; This function is called by:
 39515 ;;		Interrupt level 2
 39516 ;; This function uses a non-reentrant model
 39517 ;;
 39518                           
 39519                           	psect	text194
 39520  01D35C                     __ptext194:
 39521                           	opt callstack 0
 39522  01D35C                     _DMA1_DMASCNT_ISR:
 39523                           	opt callstack 4
 39524                           
 39525                           ;incstack = 0
 39526  01D35C  EE14  F208         	lfsr	1,___inthi_sp
 39527                           
 39528                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 39529  01D360  0139               	movlb	57	; () banked
 39530  01D362  91A2               	bcf	162,0,b	;volatile
 39531                           
 39532                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 39533  01D364  0101               	movlb	1	; () banked
 39534  01D366  97D0               	bcf	_spi_link& (0+255),3,b	;volatile
 39535                           
 39536                           ; BSR set to: 1
 39537  01D368  0011               	retfie		f
 39538  01D36A                     __end_of_DMA1_DMASCNT_ISR:
 39539                           	opt callstack 0
 39540                           
 39541 ;; *************** function _DMA1_DMADCNT_ISR *****************
 39542 ;; Defined at:
 39543 ;;		line 133 in file "mcc_generated_files/dma1.c"
 39544 ;; Parameters:    Size  Location     Type
 39545 ;;		None
 39546 ;; Auto vars:     Size  Location     Type
 39547 ;;		None
 39548 ;; Return value:  Size  Location     Type
 39549 ;;                  1    wreg      void 
 39550 ;; Registers used:
 39551 ;;		None
 39552 ;; Tracked objects:
 39553 ;;		On entry : 0/0
 39554 ;;		On exit  : 3F/39
 39555 ;;		Unchanged: 0/0
 39556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39561 ;;Total ram usage:        0 bytes
 39562 ;; Hardware stack levels used:    1
 39563 ;; This function calls:
 39564 ;;		Nothing
 39565 ;; This function is called by:
 39566 ;;		Interrupt level 2
 39567 ;; This function uses a non-reentrant model
 39568 ;;
 39569                           
 39570                           	psect	text195
 39571  01D380                     __ptext195:
 39572                           	opt callstack 0
 39573  01D380                     _DMA1_DMADCNT_ISR:
 39574                           	opt callstack 4
 39575                           
 39576                           ; BSR set to: 1
 39577                           ;incstack = 0
 39578  01D380  EE14  F208         	lfsr	1,___inthi_sp
 39579                           
 39580                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 39581  01D384  0139               	movlb	57	; () banked
 39582  01D386  93A2               	bcf	162,1,b	;volatile
 39583                           
 39584                           ; BSR set to: 57
 39585  01D388  0011               	retfie		f
 39586  01D38A                     __end_of_DMA1_DMADCNT_ISR:
 39587                           	opt callstack 0
 39588                           
 39589 ;; *************** function _DMA1_DMAA_ISR *****************
 39590 ;; Defined at:
 39591 ;;		line 143 in file "mcc_generated_files/dma1.c"
 39592 ;; Parameters:    Size  Location     Type
 39593 ;;		None
 39594 ;; Auto vars:     Size  Location     Type
 39595 ;;		None
 39596 ;; Return value:  Size  Location     Type
 39597 ;;                  1    wreg      void 
 39598 ;; Registers used:
 39599 ;;		None
 39600 ;; Tracked objects:
 39601 ;;		On entry : 0/0
 39602 ;;		On exit  : 3F/39
 39603 ;;		Unchanged: 0/0
 39604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39609 ;;Total ram usage:        0 bytes
 39610 ;; Hardware stack levels used:    1
 39611 ;; This function calls:
 39612 ;;		Nothing
 39613 ;; This function is called by:
 39614 ;;		Interrupt level 2
 39615 ;; This function uses a non-reentrant model
 39616 ;;
 39617                           
 39618                           	psect	text196
 39619  01D38C                     __ptext196:
 39620                           	opt callstack 0
 39621  01D38C                     _DMA1_DMAA_ISR:
 39622                           	opt callstack 4
 39623                           
 39624                           ; BSR set to: 57
 39625                           ;incstack = 0
 39626  01D38C  EE14  F208         	lfsr	1,___inthi_sp
 39627                           
 39628                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 39629  01D390  0139               	movlb	57	; () banked
 39630  01D392  97A2               	bcf	162,3,b	;volatile
 39631                           
 39632                           ; BSR set to: 57
 39633  01D394  0011               	retfie		f
 39634  01D396                     __end_of_DMA1_DMAA_ISR:
 39635                           	opt callstack 0
 39636                           
 39637 ;; *************** function _DMA1_DMAOR_ISR *****************
 39638 ;; Defined at:
 39639 ;;		line 154 in file "mcc_generated_files/dma1.c"
 39640 ;; Parameters:    Size  Location     Type
 39641 ;;		None
 39642 ;; Auto vars:     Size  Location     Type
 39643 ;;		None
 39644 ;; Return value:  Size  Location     Type
 39645 ;;                  1    wreg      void 
 39646 ;; Registers used:
 39647 ;;		None
 39648 ;; Tracked objects:
 39649 ;;		On entry : 0/0
 39650 ;;		On exit  : 3F/39
 39651 ;;		Unchanged: 0/0
 39652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39657 ;;Total ram usage:        0 bytes
 39658 ;; Hardware stack levels used:    1
 39659 ;; This function calls:
 39660 ;;		Nothing
 39661 ;; This function is called by:
 39662 ;;		Interrupt level 2
 39663 ;; This function uses a non-reentrant model
 39664 ;;
 39665                           
 39666                           	psect	text197
 39667  01D398                     __ptext197:
 39668                           	opt callstack 0
 39669  01D398                     _DMA1_DMAOR_ISR:
 39670                           	opt callstack 4
 39671                           
 39672                           ; BSR set to: 57
 39673                           ;incstack = 0
 39674  01D398  EE14  F208         	lfsr	1,___inthi_sp
 39675                           
 39676                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 39677  01D39C  0139               	movlb	57	; () banked
 39678  01D39E  95A2               	bcf	162,2,b	;volatile
 39679                           
 39680                           ; BSR set to: 57
 39681  01D3A0  0011               	retfie		f
 39682  01D3A2                     __end_of_DMA1_DMAOR_ISR:
 39683                           	opt callstack 0
 39684                           
 39685                           ;
 39686                           ; Interrupt Vector Table @ 0x8
 39687                           ;
 39688                           
 39689                           	psect	ivt0x8
 39690  000008                     __pivt0x8:
 39691                           	opt callstack 0
 39692  000008                     ivt0x8_base:
 39693                           	opt callstack 0
 39694                           
 39695                           ; Vector 0 : SWINT
 39696  000008  74FA               	dw	_Default_ISR shr (0+2)
 39697                           
 39698                           ; Vector 1 : HLVD
 39699  00000A  74FA               	dw	_Default_ISR shr (0+2)
 39700                           
 39701                           ; Vector 2 : OSF
 39702  00000C  74FA               	dw	_Default_ISR shr (0+2)
 39703                           
 39704                           ; Vector 3 : CSW
 39705  00000E  74FA               	dw	_Default_ISR shr (0+2)
 39706                           
 39707                           ; Vector 4 : NVM
 39708  000010  74FA               	dw	_Default_ISR shr (0+2)
 39709                           
 39710                           ; Vector 5 : SCAN
 39711  000012  74FA               	dw	_Default_ISR shr (0+2)
 39712                           
 39713                           ; Vector 6 : CRC
 39714  000014  74FA               	dw	_Default_ISR shr (0+2)
 39715                           
 39716                           ; Vector 7 : IOC
 39717  000016  74FA               	dw	_Default_ISR shr (0+2)
 39718                           
 39719                           ; Vector 8 : INT0
 39720  000018  74D3               	dw	_INT0_ISR shr (0+2)
 39721                           
 39722                           ; Vector 9 : ZCD
 39723  00001A  74FA               	dw	_Default_ISR shr (0+2)
 39724                           
 39725                           ; Vector 10 : AD
 39726  00001C  733B               	dw	_ADCC_ISR shr (0+2)
 39727                           
 39728                           ; Vector 11 : ADT
 39729  00001E  7012               	dw	_ADCC_ThresholdISR shr (0+2)
 39730                           
 39731                           ; Vector 12 : CMP1
 39732  000020  74FA               	dw	_Default_ISR shr (0+2)
 39733                           
 39734                           ; Vector 13 : SMT1
 39735  000022  74FA               	dw	_Default_ISR shr (0+2)
 39736                           
 39737                           ; Vector 14 : SMT1PRA
 39738  000024  74FA               	dw	_Default_ISR shr (0+2)
 39739                           
 39740                           ; Vector 15 : SMT1PRW
 39741  000026  74FA               	dw	_Default_ISR shr (0+2)
 39742                           
 39743                           ; Vector 16 : DMA1SCNT
 39744  000028  74D7               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 39745                           
 39746                           ; Vector 17 : DMA1DCNT
 39747  00002A  74E0               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 39748                           
 39749                           ; Vector 18 : DMA1OR
 39750  00002C  74E6               	dw	_DMA1_DMAOR_ISR shr (0+2)
 39751                           
 39752                           ; Vector 19 : DMA1A
 39753  00002E  74E3               	dw	_DMA1_DMAA_ISR shr (0+2)
 39754                           
 39755                           ; Vector 20 : SPI1RX
 39756  000030  74FA               	dw	_Default_ISR shr (0+2)
 39757                           
 39758                           ; Vector 21 : SPI1TX
 39759  000032  74FA               	dw	_Default_ISR shr (0+2)
 39760                           
 39761                           ; Vector 22 : SPI1
 39762  000034  74FA               	dw	_Default_ISR shr (0+2)
 39763                           
 39764                           ; Vector 23 : I2C1RX
 39765  000036  74FA               	dw	_Default_ISR shr (0+2)
 39766                           
 39767                           ; Vector 24 : I2C1TX
 39768  000038  74FA               	dw	_Default_ISR shr (0+2)
 39769                           
 39770                           ; Vector 25 : I2C1
 39771  00003A  74FA               	dw	_Default_ISR shr (0+2)
 39772                           
 39773                           ; Vector 26 : I2C1E
 39774  00003C  74FA               	dw	_Default_ISR shr (0+2)
 39775                           
 39776                           ; Vector 27 : U1RX
 39777  00003E  73D4               	dw	_UART1_rx_vect_isr shr (0+2)
 39778                           
 39779                           ; Vector 28 : U1TX
 39780  000040  74FA               	dw	_Default_ISR shr (0+2)
 39781                           
 39782                           ; Vector 29 : U1E
 39783  000042  74FA               	dw	_Default_ISR shr (0+2)
 39784                           
 39785                           ; Vector 30 : U1
 39786  000044  74FA               	dw	_Default_ISR shr (0+2)
 39787                           
 39788                           ; Vector 31 : TMR0
 39789  000046  74FA               	dw	_Default_ISR shr (0+2)
 39790                           
 39791                           ; Vector 32 : TMR1
 39792  000048  74FA               	dw	_Default_ISR shr (0+2)
 39793                           
 39794                           ; Vector 33 : TMR1G
 39795  00004A  74FA               	dw	_Default_ISR shr (0+2)
 39796                           
 39797                           ; Vector 34 : TMR2
 39798  00004C  74FA               	dw	_Default_ISR shr (0+2)
 39799                           
 39800                           ; Vector 35 : CCP1
 39801  00004E  74FA               	dw	_Default_ISR shr (0+2)
 39802                           
 39803                           ; Vector 36 : Undefined
 39804  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 39805                           
 39806                           ; Vector 37 : NCO1
 39807  000052  74FA               	dw	_Default_ISR shr (0+2)
 39808                           
 39809                           ; Vector 38 : CWG1
 39810  000054  74FA               	dw	_Default_ISR shr (0+2)
 39811                           
 39812                           ; Vector 39 : CLC1
 39813  000056  74FA               	dw	_Default_ISR shr (0+2)
 39814                           
 39815                           ; Vector 40 : INT1
 39816  000058  725E               	dw	_INT1_ISR shr (0+2)
 39817                           
 39818                           ; Vector 41 : CMP2
 39819  00005A  74FA               	dw	_Default_ISR shr (0+2)
 39820                           
 39821                           ; Vector 42 : DMA2SCNT
 39822  00005C  74FA               	dw	_Default_ISR shr (0+2)
 39823                           
 39824                           ; Vector 43 : DMA2DCNT
 39825  00005E  74FA               	dw	_Default_ISR shr (0+2)
 39826                           
 39827                           ; Vector 44 : DMA2OR
 39828  000060  74FA               	dw	_Default_ISR shr (0+2)
 39829                           
 39830                           ; Vector 45 : DMA2A
 39831  000062  74FA               	dw	_Default_ISR shr (0+2)
 39832                           
 39833                           ; Vector 46 : I2C2RX
 39834  000064  74FA               	dw	_Default_ISR shr (0+2)
 39835                           
 39836                           ; Vector 47 : I2C2TX
 39837  000066  74FA               	dw	_Default_ISR shr (0+2)
 39838                           
 39839                           ; Vector 48 : I2C2
 39840  000068  74FA               	dw	_Default_ISR shr (0+2)
 39841                           
 39842                           ; Vector 49 : I2C2E
 39843  00006A  74FA               	dw	_Default_ISR shr (0+2)
 39844                           
 39845                           ; Vector 50 : U2RX
 39846  00006C  73E8               	dw	_UART2_rx_vect_isr shr (0+2)
 39847                           
 39848                           ; Vector 51 : U2TX
 39849  00006E  73DE               	dw	_UART2_tx_vect_isr shr (0+2)
 39850                           
 39851                           ; Vector 52 : U2E
 39852  000070  74FA               	dw	_Default_ISR shr (0+2)
 39853                           
 39854                           ; Vector 53 : U2
 39855  000072  74FA               	dw	_Default_ISR shr (0+2)
 39856                           
 39857                           ; Vector 54 : TMR3
 39858  000074  6717               	dw	_TMR3_ISR shr (0+2)
 39859                           
 39860                           ; Vector 55 : TMR3G
 39861  000076  74FA               	dw	_Default_ISR shr (0+2)
 39862                           
 39863                           ; Vector 56 : TMR4
 39864  000078  74FA               	dw	_Default_ISR shr (0+2)
 39865                           
 39866                           ; Vector 57 : CCP2
 39867  00007A  74FA               	dw	_Default_ISR shr (0+2)
 39868                           
 39869                           ; Vector 58 : Undefined
 39870  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 39871                           
 39872                           ; Vector 59 : CWG2
 39873  00007E  74FA               	dw	_Default_ISR shr (0+2)
 39874                           
 39875                           ; Vector 60 : CLC2
 39876  000080  74FA               	dw	_Default_ISR shr (0+2)
 39877                           
 39878                           ; Vector 61 : INT2
 39879  000082  74FA               	dw	_Default_ISR shr (0+2)
 39880                           
 39881                           ; Vector 62 : Undefined
 39882  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 39883                           
 39884                           ; Vector 63 : Undefined
 39885  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 39886                           
 39887                           ; Vector 64 : Undefined
 39888  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 39889                           
 39890                           ; Vector 65 : Undefined
 39891  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 39892                           
 39893                           ; Vector 66 : Undefined
 39894  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 39895                           
 39896                           ; Vector 67 : Undefined
 39897  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 39898                           
 39899                           ; Vector 68 : Undefined
 39900  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 39901                           
 39902                           ; Vector 69 : Undefined
 39903  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 39904                           
 39905                           ; Vector 70 : TMR5
 39906  000094  6B9C               	dw	_TMR5_ISR shr (0+2)
 39907                           
 39908                           ; Vector 71 : TMR5G
 39909  000096  74FA               	dw	_Default_ISR shr (0+2)
 39910                           
 39911                           ; Vector 72 : TMR6
 39912  000098  747E               	dw	_TMR6_ISR shr (0+2)
 39913                           
 39914                           ; Vector 73 : CCP3
 39915  00009A  74FA               	dw	_Default_ISR shr (0+2)
 39916                           
 39917                           ; Vector 74 : CWG3
 39918  00009C  74FA               	dw	_Default_ISR shr (0+2)
 39919                           
 39920                           ; Vector 75 : CLC3
 39921  00009E  74FA               	dw	_Default_ISR shr (0+2)
 39922                           
 39923                           ; Vector 76 : Undefined
 39924  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 39925                           
 39926                           ; Vector 77 : Undefined
 39927  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 39928                           
 39929                           ; Vector 78 : Undefined
 39930  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 39931                           
 39932                           ; Vector 79 : Undefined
 39933  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 39934                           
 39935                           ; Vector 80 : CCP4
 39936  0000A8  74FA               	dw	_Default_ISR shr (0+2)
 39937                           
 39938                           ; Vector 81 : CLC4
 39939  0000AA  74FA               	dw	_Default_ISR shr (0+2)
 39940  0000AC                     ivt0x8_undefint:
 39941                           	opt callstack 0
 39942  0000AC  00FF               	reset	
 39943                           
 39944                           	psect	text198
 39945  000000                     __ptext198:
 39946                           	opt callstack 0
 39947                           
 39948                           	psect	rparam
 39949  0000                     
 39950                           	psect	temp
 39951  000001                     btemp:
 39952                           	opt callstack 0
 39953  000001                     	ds	32
 39954  0000                     wtemp0	set	btemp
 39955  0000                     wtemp1	set	btemp+2
 39956  0000                     wtemp2	set	btemp+4
 39957  0000                     wtemp3	set	btemp+6
 39958  0000                     wtemp4	set	btemp+8
 39959  0000                     wtemp5	set	btemp+10
 39960  0000                     wtemp8	set	btemp+1
 39961  0000                     ttemp0	set	btemp
 39962  0000                     ttemp1	set	btemp+3
 39963  0000                     ttemp2	set	btemp+6
 39964  0000                     ttemp3	set	btemp+9
 39965  0000                     ttemp5	set	btemp+1
 39966  0000                     ttemp6	set	btemp+4
 39967  0000                     ttemp7	set	btemp+8
 39968  0000                     ltemp0	set	btemp
 39969  0000                     ltemp1	set	btemp+4
 39970  0000                     ltemp2	set	btemp+8
 39971  0000                     lltemp0	set	btemp
 39972  0000                     lltemp1	set	btemp+8
 39973  0000                     lltemp2	set	btemp+16
 39974  0000                     lltemp3	set	btemp+24
 39975                           tosu	equ	0x3FFF
 39976                           tosh	equ	0x3FFE
 39977                           tosl	equ	0x3FFD
 39978                           stkptr	equ	0x3FFC
 39979                           pclatu	equ	0x3FFB
 39980                           pclath	equ	0x3FFA
 39981                           pcl	equ	0x3FF9
 39982                           tblptru	equ	0x3FF8
 39983                           tblptrh	equ	0x3FF7
 39984                           tblptrl	equ	0x3FF6
 39985                           tablat	equ	0x3FF5
 39986                           prodh	equ	0x3FF4
 39987                           prodl	equ	0x3FF3
 39988                           indf0	equ	0x3FEF
 39989                           postinc0	equ	0x3FEE
 39990                           postdec0	equ	0x3FED
 39991                           preinc0	equ	0x3FEC
 39992                           plusw0	equ	0x3FEB
 39993                           fsr0h	equ	0x3FEA
 39994                           fsr0l	equ	0x3FE9
 39995                           wreg	equ	0x3FE8
 39996                           indf1	equ	0x3FE7
 39997                           postinc1	equ	0x3FE6
 39998                           postdec1	equ	0x3FE5
 39999                           preinc1	equ	0x3FE4
 40000                           plusw1	equ	0x3FE3
 40001                           fsr1h	equ	0x3FE2
 40002                           fsr1l	equ	0x3FE1
 40003                           bsr	equ	0x3FE0
 40004                           indf2	equ	0x3FDF
 40005                           postinc2	equ	0x3FDE
 40006                           postdec2	equ	0x3FDD
 40007                           preinc2	equ	0x3FDC
 40008                           plusw2	equ	0x3FDB
 40009                           fsr2h	equ	0x3FDA
 40010                           fsr2l	equ	0x3FD9
 40011                           status	equ	0x3FD8


Data Sizes:
    Strings     1328
    Constant    492
    Data        1076
    BSS         1365
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     160
    BANK1           256      0     250
    BANK2           256      0     212
    BANK3           256      0     215
    BANK4           256      0      67
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_118(CODE[1]), STR_80(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_115(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_101(CODE[3]), 
		 -> STR_96(CODE[3]), STR_92(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_115(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_101(CODE[3]), 
		 -> STR_96(CODE[3]), STR_92(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), 
		 -> STR_77(CODE[19]), STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), 
		 -> STR_69(CODE[15]), STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), 
		 -> STR_65(CODE[19]), STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), 
		 -> STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), 
		 -> STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), 
		 -> STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), 
		 -> STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), 
		 -> STR_77(CODE[19]), STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), 
		 -> STR_69(CODE[15]), STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), 
		 -> STR_65(CODE[19]), STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), 
		 -> STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), 
		 -> STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), 
		 -> STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), 
		 -> STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_63(CODE[9]), STR_62(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_63(CODE[9]), STR_62(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_87(CODE[4]), STR_86(CODE[4]), STR_83(CODE[4]), STR_82(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_87(CODE[4]), STR_86(CODE[4]), STR_83(CODE[4]), STR_82(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_61(CODE[3]), STR_60(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[20]), STR_49(CODE[20]), 
		 -> STR_48(CODE[21]), STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), 
		 -> STR_44(CODE[22]), STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), 
		 -> STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), 
		 -> STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6804_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_63(CODE[9]), STR_62(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_63(CODE[9]), STR_62(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_63(CODE[9]), 
		 -> STR_62(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    S5057tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    r_cal_ptr	PTR unsigned char  size(1) Largest target is 57
		 -> R(BANK0[57]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 57
		 -> r_cal(BANK2[57]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_63(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_62(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  598385
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                    _update_cal_data
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   9     9      0  125967
                             _WaitMs
                   _cal_current_zero
                     _clear_adc_scan
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (2) _write_cal_data                                       6     6      0     637
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    5521
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    5431
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    5431
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    5431
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_cal_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D7      11       84.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D4       9       82.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      A0       5      100.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4AE      58        0.0%
DATA                 0      0     9BB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 10 03:20:27 2020

                     _SPI1_Exchange8bit D146                __end_of_set_display_info D1BE  
                                     _C 07FF                                       _D 092A  
                                     _H 01C7                                       _P 01F6  
                                     _R 00AE                                       _S 0200  
                                     _T F9B3                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler CE86            __end_of_start_switch_handler D126  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                       _update_cal_data D242                                      _bp FABB  
                __end_of_FVR_Initialize D3CA                          _check_day_time 91DA  
                           __CFG_LVP$ON 000000                                     l171 D294  
                                   l809 D154                                     l675 CD3E  
                                   l942 C0FE                                     _GIE 01FE97  
                                   _abs C726                                     _pad A876  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize D22A  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack D058  
                     _update_adc_result C9B6                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack CFEC  
                          __CFG_ZCD$OFF 000000                                    l1004 C932  
                                  l2210 3EC8                                    l2044 ABB8  
                                  l2061 9368                                    l2206 3B8A  
                                  l1350 0288                                    l2127 A2C0  
                                  l1192 C972                                    l1408 5DA6  
                                  l2136 8A40                                    l1344 005E  
                                  l2057 9370                                    l2402 A8D2  
                                  l1363 07A6                         _timer3ReloadVal 009A  
                                  l1700 CA46                                    l2316 D2BC  
                                  l2252 79CE                                    l1373 084A  
                                  l1365 07AA                                    l1622 B6AC  
                                  l2422 5E8E                                    l2502 1D98  
                                  l1710 8C54                                    l2327 9844  
                                  l1383 0A4E                                    l3208 4D48  
                                  l1384 0C76                                    l3241 5432  
                                  l1641 CAB2                                    l2329 984A  
                                  l1626 B9C6                                    l3340 9506  
                                  l2540 7ABC                                    l3317 8E52  
                                  l1717 AA96                                    l1709 8AF8  
                                  l1389 123E                                    l1494 C3D2  
                                  l2561 6DE6                                    l1913 B49E  
                                  l2458 24B8                                    l2626 3464  
                                  l3196 4EB8                                    l3348 C766  
                                  l3277 46FC                                    l1757 D1BA  
                  _ADCC_StartConversion D2C0                                    l2487 18E8  
                                  l3448 A63C                                    l2576 66C0  
                                  l1857 58F2                                    l2922 9B7E  
                                  l3730 BD06                                    l1938 BB76  
                                  l3379 817A                                    l3715 8820  
                                  l2918 B27E                                    l3743 BC82  
                                  l2929 9C52                                    l1897 BE84  
                                  l2956 9AF0                                    l1997 91D0  
                                  l9100 4000                                    l9012 526C  
                                  l9004 523A                                    l9110 4076  
                                  l9022 52AE                                    l9006 523E  
                                  l9032 52F8                                    l9106 4040  
                                  l9018 5288                                    l9204 45F6  
                                  l9108 4046                                    l9052 53AE  
                                  l9036 52FE                                    l8420 B828  
                                  l9222 46AA                                    l9214 4666  
                                  l9118 4098                                    l9046 5372  
                                  l8422 B84A                                    l9224 46C4  
                                  l9208 463C                                    l8520 4A32  
                                  l9064 5406                                    l9400 9A88  
                                  l9170 44F0                                    l9090 3F78  
                                  l9082 3F32                                    l8602 4D6A  
                                  l8530 4AA4                                    l9066 5416  
                                  l9058 53DE                                    l9250 9DF8  
                                  l9402 9A9E                                    l9180 4532  
                                  l9092 3FA8                                    l8604 4D7C  
                                  l8540 4AE0                                    l8460 47E2  
                                  l9340 9B3C                                    l9244 9DE2  
                                  l9316 A85C                                    l9308 A828  
                                  l9332 B27C                                    l9324 B206  
                                  l9190 457C                                    l8622 4DB6  
                                  l8534 4AC4                                    l8454 479C  
                                  l9350 9C1A                                    l9270 9EBE  
                                  l9176 450C                                    l9088 3F72  
                                  l8608 4D88                                    l8536 4AD6  
                                  l8544 4B10                                    l8472 484C  
                                  l8448 475C                                    l9256 9E18  
                                  l9328 B248                                    l9416 96E4  
                                  l9440 A088                                    l9194 4582  
                                  l8650 4E68                                    l8634 4E14  
                                  l8618 4DB0                                    l8562 4BAC  
                                  l8490 48F4                                    l8482 48A2  
                                  l8466 481A                                    l8458 47B2  
                                  l9346 9BCC                                    l9290 A77E  
                                  l8802 6C72                                    l8644 4E40  
                                  l8564 4BBE                                    l8572 4BFA  
                                  l8484 48D2                                    l8732 C756  
                                  l8812 6D78                                    l8804 6CC2  
                                  l9428 97B6                                    l8478 488C  
                                  l9358 9C50                                    l9278 9EF2  
                                  l9294 A790                                    l9366 C624  
                                  l8750 94A8                                    l8830 BC72  
                                  l8656 4E98                                    l8648 4E58  
                                  l8584 4CD2                                    l8568 4BC8  
                                  l9464 C4BE                                    l9392 9A5C  
                                  l9376 99DA                                    l8808 6D0A  
                                  l9448 A134                                    l8594 4D2C  
                                  l8586 4CF8                                    l8906 855C  
                                  l9298 A7A8                                    l9394 9A78  
                                  l8746 94A4                                    l8932 4F58  
                                  l8852 7D46                                    l8756 94FE  
                                  l8926 4F18                                    l8870 7E5E  
                                  l8846 7CF2                                    l8774 BCF6  
                                  l8952 5036                                    l8936 4F6E  
                                  l8970 50F4                                    l8946 4FF6  
                                  l8938 4F9E                                    l8858 7D8C  
                                  l8890 8428                                    l8964 50BA  
                                  l8956 504C                                    l8788 6B54  
                                  l8958 507C                                    STR_1 FEA1  
                                  STR_2 FE62                                    STR_3 FFD2  
                                  l8978 510E                                    l8898 84B0  
                                  STR_4 FE0E                                    STR_5 FC45  
                                  l8996 51D4                                    l8988 519E  
                                  STR_6 FC45                                    STR_7 FC45  
                                  l8998 51E6                                    STR_8 FEF5  
                                  STR_9 FF34                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6030 4A58                                    u6040 4A78  
                                  u6041 4A72                                    _T6PR 003F93  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  u6230 4D8E                                    u6150 4BF0  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u6320 4E24                                    u6080 4B08  
                                  u7200 534C                                    u7120 5266  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u6250 4DA8                                    u6090 4B28  
                                  u6058 4A7A                                    u7210 5386  
                                  _PMD6 0039C6                                    u6155 4BE0  
                                  _PMD7 0039C7                                    u7220 53C2  
                                  u6085 4AF8                                    u7205 533C  
                                  u7310 4086                                    u6190 4D1A  
                                  u7160 52F0                                    u6600 6AEC  
                                  u6360 CC26                                    u6290 4E04  
                                  u9010 7FBC                                    u6530 94F6  
                                  u6610 6B38                                    u6370 CC28  
                                  u7420 45D0                                    u6540 94F8  
                                  u6700 C7EA                                    u7325 421A  
                                  u6525 94D8                                    u6605 6AE2  
                                  u7430 460A                                    u9030 8114  
                                  u6470 C73A                                    u7510 9EDE  
                                  u6710 C7EC                                    u7335 42E2  
                                  u6295 4DF4                                    u7440 4650  
                                  u9040 8116                                    u6800 7D42  
                                  u6480 9428                                    u5920 CC56  
                                  u9120 87C6                                    u6720 BC30  
                                  u7425 45C0                                    u7345 44AA  
                                  u6650 6C18                                    u5930 CC58  
                                  u6570 BCB4                                    u9130 87F4  
                                  u6730 BC32                                    u6811 7D4C  
                                  u6635 6B72                                    u7380 4574  
                                  u6820 7D86                                    u6900 8422  
                                  u7620 B278                                    u7700 99CE  
                                  u6636 6B78                                    u6580 BCB6  
                                  u9140 D0A6                                    u6485 941E  
                                  u6637 6B86                                    u9125 87C0  
                                  u6750 CC86                                    u6830 7DB8  
                                  u7710 9A08                                    u6670 6CF0  
                                  u6655 6C0E                                    u9127 87B2  
                                  u6760 CC88                                    u6920 8478  
                                  u7560 A7D4                                    u9080 872C  
                                  u7800 96DE                                    u9137 87E6  
                                  u5890 B878                                    u6850 7E96  
                                  u6930 84AA                                    u7490 9E44  
                                  u7810 9710                                    u7715 99FE  
                                  u6675 6CE6                                    u7900 C49A  
                                  u6780 7CEC                                    u6940 84DC  
                                  u7580 A848                                    u7910 C4BA  
                                  u6870 7EE8                                    u7830 97EE  
                                  u9087 871E                                    u6960 8594  
                                  u7680 C620                                    u7760 9AA6  
                                  u5897 B86A                                    u9530 8DC6  
                                  u7690 99BA                                    u7850 A082  
                                  u6980 85E6                                    u7780 9AD0  
                                  u7860 A0B4                                    u9614 54AA  
                                  u9615 54A4                                    u7695 99B0  
                                  u7791 96A4                                    u7880 A16C  
                                  u9720 B138                                    u9634 5690  
                                  _PLLR 01CEE0                                    u9635 568A  
                                  u9725 B132                                    u9654 575E  
                                  u9574 5458                                    u9655 5758  
                                  u9575 5452                                    u9680 5788  
                                  u9674 5780                                    u9594 5488  
                                  u9770 C0BE                                    u9675 577A  
                                  u9595 5482                                    u9915 C826  
                                  u9960 BD44                                    u9778 C0C0  
                                  u9795 C10E                                    u9796 C110  
                                  u9990 D2FE                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR CD18  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0243  
                    __size_of_CRC_Start 0006                                    _cp_h FACB  
                                  _cp_l FAC7                                    _atoi 7F10  
                                  _ctoa BB80                                    _main 0000  
                                  _dtoa 5DB0                                    _nanf C2AC  
                                  _seed 02CC                                    _prec 003C  
                                  _nout 0096                                    _spin FA43  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 79D2  
                                  btemp 0001                                    _utoa 6DA2  
                                  _xtoa 667C                  __end_of_check_adc_scan D3AA  
                         ___fpclassifyf 937A                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 009E               __end_of_SPI1_Exchange8bit D164  
             __size_of_clear_hid_pflags 0066                         _TMR3_Initialize C6DE  
           __size_of_set_load_relay_one 0010             __size_of_set_load_relay_two 0010  
                         __CFG_CSWEN$ON 000000                          _SPI1STATUSbits 003D17  
                     _UART1_rx_vect_isr CF50                            ___param_bank 000000  
                __end_of_check_day_time 937A                      ?_UART1_rx_vect_isr 0021  
             __size_of_DATAEE_WriteByte 0068                        __end_of_INT0_ISR D35A  
                      __end_of_INT1_ISR C9B6          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma B6B4           __end_of_OSCILLATOR_Initialize D29A  
                                 l10060 7FEC                                   l10044 7F2A  
                                 l10070 80CE                                   l10062 8004  
                                 l10054 7FC0                                   l10046 7F4C  
                                 l10080 816A                                   l10064 8028  
                                 l10066 8066                                   l12002 7792  
                                 l10412 546E                                   l12020 7814  
                                 l12012 77C6                                   l11214 C574  
                                 l11310 9056                                   l10422 5594  
                                 l10406 543E                                   l10096 8692  
                                 l10520 B184                                   l12008 77BA  
                                 l11218 C5A6                                   l11322 9096  
                                 l10362 8D0E                                   l10354 8CA2  
                                 l10434 56A8                                   l10426 5676  
                                 l11410 CA5C                                   l10098 86FE  
                                 l12050 7994                                   l10364 8D1C  
                                 l10452 58C0                                   l10460 58D2  
                                 l13020 B8B4                                   l12140 B348  
                                 l10516 B146                                   l10524 B198  
                                 l12028 783A                                   l12052 79BE  
                                 l11500 A70A                                   l12310 BDC4  
                                 l11318 9082                                   l10374 8D7E  
                                 l10366 8D32                                   l10446 5824  
                                 l10438 5744                                   l13110 BB9E  
                                 l11334 BB1E                                   l10376 8D9C  
                                 l10368 8D50                                   l13008 A552  
                                 l13024 B8F2                                   l13112 BBCA  
                                 l13040 74A6                                   l12144 B386  
                                 l11530 9F3A                                   l10386 8DD0  
                                 l10378 8DB2                                   l11346 BB54  
                                 l11370 A352                                   l12316 BDD4  
                                 l10644 92A4                                   l11532 9F48  
                                 l11540 9F50                                   l10396 8E32  
                                 l13060 767C                                   l13052 75CE  
                                 l11292 AC8A                                   l11452 C9D6  
                                 l11542 9F82                                   l11526 9F24  
                                 l10478 CDB6                                   l13302 1874  
                                 l13230 14AA                                   l13046 7564  
                                 l11286 ABD8                                   l11366 A310  
                                 l14014 A25A                                   l14040 3618  
                                 l14032 3558                                   l10656 9316  
                                 l11528 9F34                                   l13072 A8A2  
                                 l13144 5EC8                                   l13136 5E7E  
                                 l13320 1936                                   l13304 1880  
                                 l13208 136E                                   l13216 13C4  
                                 l10728 CCD2                                   l10832 9936  
                                 l14008 A1F4                                   l11730 D100  
                                 l13082 A918                                   l13330 19F8  
                                 l13226 1468                                   l13234 14D6  
                                 l10674 CABC                                   l14052 3786  
                                 l14044 3684                                   l14036 35AC  
                                 l11556 A034                                   l11548 9FBA  
                                 l12188 666E                                   l13076 A8CA  
                                 l13148 5EE6                                   l13092 AF9A  
                                 l13340 1BA4                                   l13324 196E  
                                 l13260 1614                                   l13244 157A  
                                 l13252 15A8                                   l13228 1494  
                                 l10828 990C                                   l11476 BE42  
                                 PRLOCK 0039EF                                   l11742 CD3A  
                                 l10766 C4FA                                   l14062 39B2  
                                 l13086 A962                                   l13078 A8DC  
                                 l13182 61E6                                   l13158 60F8  
                                 l13406 200E                                   l13414 2120  
                                 l13270 1750                                   l14206 5A6A  
                                 l14080 3BBC                                   l14072 3AF2  
                                 l14056 37DA                                   l13440 2254  
                                 l13264 1684                                   l11664 B29A  
                                 l11488 BE5A                                   l11496 A6A8  
                                 l14066 3A2C                                   l13178 61AA  
                                 l13442 226E                                   l13426 21B8  
                                 l13362 1D90                                   l13354 1CC6  
                                 l13282 17D2                                   l13266 16EE  
                                 l13522 7B5E                                   l13514 7AF2  
                                 l13610 6786                                   l13602 6726  
                                 l14322 8AC8                                   l10786 BD48  
                                 l11922 8EA4                                   l14092 3EC0  
                                 l14076 3B9A                                   l13452 2310  
                                 l13364 1DB2                                   l13196 132A  
                                 l13532 7C14                                   l14244 5CF2  
                                 l14252 883E                                   l11668 B316  
                                 l13462 2360                                   l13390 1F38  
                                 l13294 1812                                   l13286 17FA  
                                 l13518 7B2E                                   l13550 6DD6  
                                 l13710 2726                                   l11950 9010  
                                 l11934 8F5A                                   l11942 900C  
                                 l14502 0532                                   l11768 C91A  
                                 l13288 180C                                   l13536 7C50  
                                 l13528 7BE8                                   l13712 2760  
                                 l14336 8BF0                                   l11936 8F8E  
                                 l11786 C95A                                   l11962 9670  
                                 l13378 1EB0                                   l13650 69EC  
                                 l13626 687C                                   l13634 6902  
                                 l13730 28DA                                   l13714 2776  
                                 l14194 59F4                                   l14610 10C0  
                                 l14514 060C                                   l13740 2972  
                                 l14268 8932                                   l14540 07DC  
                                 l14532 079C                                   l13478 2418  
                                 l13398 1FA2                                   l13558 6E32  
                                 l13590 66B0                                   l13806 2F06  
                                 l13910 B5CC                                   l14198 5A08  
                                 l11982 7716                                   l14278 8A0A  
                                 l14454 02A2                                   l14390 0066  
                                 l14296 BF68                                   l13568 7028  
                                 l13840 325A                                   l13816 3028  
                                 l13752 2AB2                                   l11992 775C  
                                 l11984 7726                                   l14624 1116  
                                 l14608 1094                                   l14560 0836  
                                 l14552 0810                                   l14448 0260  
                                 l14392 0078                                   l14384 0040  
                                 l13498 7A3E                                   l13826 30DE  
                                 l13690 25DE                                   l11986 772C  
                                 l14570 085A                                   l14538 07AE  
                                 l14386 0048                                   l13596 66EA  
                                 l13860 33EC                                   l13772 2CC4  
                                 l13764 2C0C                                   l13748 2A5E  
                                 l13692 25F4                                   l13908 B58A  
                                 l13932 B6B8                                   l11996 7768  
                                 l14660 11EE                                   l14652 11B8  
                                 l14636 1168                                   l13854 3392  
                                 l13870 3410                                   l13934 B6C0  
                                 l14654 11D0                                   l14646 11A6  
                                 l14582 095A                                   l13864 33F0  
                                 l13776 2CF8                                   l13688 25A4  
                                 l13936 B6CA                                   l13944 B6E0  
                                 l14664 1214                                   l13938 B6D8  
                                 l13946 B70C                                   l14674 126A  
                                 l14594 0EB2                                   l13796 2E58  
                                 l14598 0F12                                   l13888 B7B4  
                                 l13968 A9AE                         __end_of___aodiv 7F10  
                          _Volts_to_SOC B288                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4EC2  
                                 _ADCLK 003EFF                         __end_of___aomod 860A  
                                 _ADPCH 003EF1                         __end_of___fldiv 543C  
                                 _ADREF 003EFD                         __end_of___awdiv 9F0C  
                       __end_of___flneg C64E                                   STR_10 FDF9  
                                 STR_11 FB9F                                   STR_12 FC70  
                                 STR_20 FB6B                                   STR_13 FD4C  
                                 STR_21 FB85                                   STR_22 FF94  
                                 STR_30 FCC8                                   STR_14 FC44  
                                 STR_15 FE23                                   STR_31 FD8E  
                                 STR_24 FF83                                   STR_16 FE38  
                                 STR_32 FD62                                   STR_40 FBD1  
                                 STR_17 FF0A                                   STR_33 FD78  
                                 STR_25 FD36                                   STR_41 FBFF  
                         __CFG_WDTE$OFF 000000                                   STR_50 FF49  
                                 STR_18 FECB                                   STR_26 FD20  
                                 STR_34 FC86                                   STR_42 FC16  
                                 STR_51 FEE0                                   STR_43 FDA4  
                                 STR_27 FD0A                                   STR_35 FC9C  
                                 STR_19 FC5A                                   STR_44 FDA4  
                                 STR_60 FFFC                                   STR_52 FDBA  
                                 STR_28 FCF4                                   STR_36 FCB2  
                       __end_of___awmod A876                                   STR_45 FDA4  
                                 STR_61 FFF9                                   STR_53 FF1F  
                                 STR_29 FCDE                                   STR_37 FBE8  
                                 STR_54 FEB6                                   STR_70 FFA4  
                                 STR_62 FFB3                                   STR_46 FEB6  
                                 STR_38 FC2D                                   STR_63 FFC9  
                                 STR_55 FDE4                                   STR_47 FDCF  
                                 STR_71 FBB9                                   STR_39 FB4E  
                                 STR_80 FB4D                                   STR_64 FF5D  
                                 STR_56 FE8C                                   STR_48 FE4D  
                                 _ADRPT 003EEC                                   STR_65 FF5D  
                                 STR_57 FEB6                                   STR_73 FF70  
                                 STR_49 FF49                                   STR_81 FACF  
                                 STR_58 FDE4                                   STR_90 FFEA  
                                 STR_82 FFD7                                   STR_66 FFBF  
                                 STR_67 FFBF                                   STR_83 FFDF  
                                 STR_59 FE77                                   STR_92 FFEA  
                                 STR_68 FFA4                                   STR_69 FFA4  
                                 STR_94 FFF0                                   STR_86 FFDB  
                                 STR_87 FFE3                                   STR_96 FFF0  
                       __end_of___flmul 4706                                   STR_99 FFED  
                       __end_of___flsub C7B2                         __end_of___fltol 9AFA  
                                 u10210 9034                                   u10034 98B8  
                                 u10035 98B2                                   u10060 C18E  
                                 u10135 D2EC                                   u10400 D0CE  
                                 u10240 BB1A                                   u10136 D2EE  
                                 u10145 D2DC                                   u12010 6180  
                                 u10146 D2DE                                   u10260 BB4E  
                                 u10085 C1C2                                   u10086 C1C4  
                                 u10078 C190                                   u10406 D0D0  
                                 u12200 17E0                                   u12120 1524  
                                 u13000 27C0                                   u12130 1526  
                                 u12050 1358                                   u13010 27E6  
                       __end_of___lodiv 9816                                   u12230 1844  
                                 u13110 2DB2                                   u12080 1412  
                                 u13200 32E2                                   u13120 2DB4  
                                 u12170 178C                                   u12090 1414  
                                 _U1P1H 003DED                                   u12500 2336  
                                 u12340 1C96                                   u13060 29C6  
                                 u13220 B794                                   u13300 A236  
                                 _U1P2H 003DEF                                   u11710 A5C2  
                                 u12270 18C6                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 u12520 23EC                                   u12440 2162  
                                 u12600 7B54                                   u13080 2B3A  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u12530 23EE                                   u12610 7B9A  
                                 u13330 A29C                                   _U1P3L 003DF0  
                                 u11900 5E52                                   u11820 B014  
                                 u12700 7080                                   u13180 3132  
                                 u12701 707E                                   u12710 7094  
                                 u13318 A238                                   u13270 A1D0  
                                 _U2P1L 003DD4                                   u11920 5E64  
                                 u12640 7C76                                   u12720 7098  
                                 u10960 900C                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u12617 7B8C  
                                 u11690 A546                                   u12810 6832  
                                 u11770 76F0                                   _U2P3L 003DD8  
                                 u11827 B006                                   u10971 D24C  
                                 u11940 5EB4                                   u12660 6DBC  
                                 u12820 6834                                   u12740 6696  
                                 u13540 5BB0                                   u13348 A29E  
                                 u11950 610C                                   u11870 5DE0  
                                 u13550 5BDA                                   _T5CLK 003F9D  
                                 u11880 5DE2                                   u12840 68FE  
                                 u13288 A1D2                                   u11961 613C  
                       __end_of___lomod A18E                                   u13545 5BA2  
                                 u11970 6152                                   u12850 691E  
                                 u12770 677E                                   u11971 6150  
                                 u12691 706A                                   u13555 5BCC  
                                 u11980 6166                                   u12780 67D2  
                                 u12940 263C                                   u13900 1106  
                                 u13740 03BC                                   _T2HLT 003FAD  
                                 u12861 694E                                   u12845 68E0  
                                 u11990 616A                                   u12870 6964  
                                 u12790 67D4                                   u12950 263E  
                                 u13670 8C40                                   u13910 111E  
                                 u12871 6962                                   u12880 6978  
                                 u12960 2664                                   u13680 8C42  
                                 u13920 1130                                   u13760 063A  
                                 _T5CON 003F9A                                   u12890 697C  
                                 u13906 1108                                   u13770 0764  
                                 u13916 1120                                   u13780 0766  
                                 u12990 27BE                                   u13926 1132  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0081  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0026  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result C9F0                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR D3E8  
                   __size_of_CRC_IsBusy 0010                 __size_of_clear_adc_scan 0006  
                    _current_sensor_cal 58F8       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 9DBE                           __CFG_WRTC$OFF 000000  
                      _cal_current_zero BAF2                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR AF52                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR D212                            _DMA1CON1bits 003BFD  
            __size_of_send_lcd_data_dma 004A                         _DATAEE_ReadByte CBA0  
                                 _fabsf B4B0                                   _flags 003E  
                  __size_of_check_range 0080               __size_of_CRC_ReverseValue 00CE  
                                 _r_cal 0293                __size_of_calc_model_data 044C  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
          __end_of_get_ac_charger_relay D34C                                   _fputc A522  
            __size_of_send_lcd_cmd_long 0040                         __end_of_isalpha C7F6  
                                 _fputs B8A4                         __end_of_isdigit CC92  
                       __end_of_ivln2_h FAC7                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand CAD0                                   _width 003A  
                                 _putch D1DC            __end_of_set_ac_charger_relay D322  
                       __end_of_islower CC32                         __end_of_isspace C4CE  
              _INT1_SetInterruptHandler CEAE                         __end_of_set_dac B4B0  
                       __end_of_isupper CC62                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw0 003FEB  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler CE36             _UART1_SetRxInterruptHandler CE0E  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf ABA4  
                       __end_of_tolower BD10                         __end_of_strncmp 882A  
                       __end_of_toupper BC8C               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr CF78                __size_of_SPI1_Initialize 0016  
               __end_of_update_cal_data D258                         _TMR5_Initialize C696  
                 __end_of_ringBufS_init CD96                         __initialization AC9A  
                     _UART2_rx_vect_isr CFA0                            __end_of_cp_h FACF  
                          __end_of_cp_l FACB                            __end_of_atoi 8184  
                          __end_of_ctoa BC08                            __end_of_main 127E  
                          __end_of_dtoa 6230                            __end_of_nanf C30E  
                          __end_of_spin FABB                            __end_of_stoa 7C90  
                          __end_of_utoa 70E2                            __end_of_xtoa 6A36  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0021  
               __end_of_TMR2_Initialize D242                   __end_of_send_lcd_data CFEC  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button BF72  
                     __end_of_CRC_Start D3D0                _TMR5_SetInterruptHandler CE5E  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 0078                       _port_data_dma_ptr D374  
                    esr_check@esr_state 00A0                     ??_UART2_rx_vect_isr 0026  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize CD44  
                       _PWM8_Initialize D26E                        _UART1_Initialize C64E  
                     _UART2_tx_vect_isr CF78                      _UART2_Transmit_ISR CD18  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan C1E6  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                STR_101 FFED                                  STR_111 FFF6  
                                STR_104 FFF3                                  STR_113 FFE7  
                                STR_106 FFF3                                  STR_115 FFE7  
                                STR_109 FFF6                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue C7F6                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0021  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1021 AF02  
                                _RB6PPS 003A0E                                  i1l1209 9D26  
                  _start_switch_handler D106                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize C726  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright D330                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  _NVMDAT 0039E3  
                                u971_25 D31C                                  u971_26 D31E  
                  __size_of_hid_display 021C                                  u982_20 9230  
                      __end_of___xxtofl 8E5C   __end_of_ADCC_DischargeSampleCapacitor D3B2  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor D3AA  
              __end_of_send_lcd_cmd_dma D182                         _TMR3_WriteTimer C938  
                   ??_UART2_tx_vect_isr 0026               __end_of_UART2_rx_vect_isr CFC8  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize D36A  
                      _UART2_Initialize C30E                                  _WaitMs CA9A  
                       _conv_raw_result 543C                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 9AFA  
                                ___fleq B1C4                       _ADCC_ThresholdISR C048  
                        __CFG_STVREN$ON 000000                                  _crcObj 00AB  
                        _ringBufS_flush B93C                                  _efgtoa 127E  
                                _floorf 6A36                       dac_spi_control@S0 0042  
                     dac_spi_control@S1 00A4                       dac_spi_control@S2 00A3  
                     dac_spi_control@SB 00A1                       dac_spi_control@SC 00A2  
                    ?_ADCC_ThresholdISR 0021                                  _memset 740E  
                  __size_of_help_button 0038                                  clear_0 AD0C  
                                clear_1 AD20                                  clear_2 AD32  
                                clear_3 AD3E                                  clear_4 AD4A  
                                clear_5 AD56                                  clear_6 AD62  
                                clear_7 AD6E               __end_of_port_data_dma_ptr D37E  
                __size_of_read_cal_data 01C2                                  _printf C24A  
                    _eaDogM_WriteString B75C                 __end_of_DATAEE_ReadByte CBD2  
                                _strcpy AF52                               ?_ADCC_ISR 0021  
                                _strlen B802                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 05FF                         _ADCC_Initialize BFDC  
                        _PMD_Initialize D29A              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr CFA0                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0021  
                __end_of_start_adc_scan C24A                            __mediumconst F8E2  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay C422  
                      __end_of_spinners AC9A                        __end_of_vfprintf B60A  
                            _StartTimer C8B8                      __size_of___asfladd 0078  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize C6DE  
                     _SYSTEM_Initialize C520                              __accesstop 0060  
               __end_of__initialization AD80                               ?_INT0_ISR 0021  
                             ?_INT1_ISR 0021                    __end_of_display_help D3C2  
                  __end_of_display_info D3BA               __end_of_CLKREF_Initialize D374  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer C8F8                   _set_temp_display_help D302  
                      _clear_hid_pflags C11A                   __end_of_TMR3_CallBack D058  
             __end_of_ADCC_ThresholdISR C0B2                      __size_of_calc_bsoc 0A6E  
                __end_of_ringBufS_flush B9CE                          __pcstackCOMRAM 0021  
                            ___inthi_sp 1208                              ___intlo_sp 1904  
                          __pidataBANK0 C9F0                            __pidataBANK1 B026  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf B55E  
                             ?_TMR3_ISR 0021                               ?_TMR5_ISR 0021  
                             ?_TMR6_ISR 0021                        _DATAEE_WriteByte C0B2  
                        ivt0x8_undefint 00AC                           __end_of_fputc A646  
                         __end_of_fputs B93C                    _get_ac_charger_relay D33E  
                         __end_of_srand CB04                   __end_of_TMR5_CallBack D034  
                         __end_of_putch D1F6                    _set_ac_charger_relay D312  
               __end_of_PWM8_Initialize D284                 __end_of_TMR6_Initialize CD6E  
                     _adc_int_t_handler BD90                  __end_of_PMD_Initialize D2AE  
                            __end_of_bp FAC3                              ??_ADCC_ISR 0021  
                 __end_of_TMR6_CallBack D0A0             __size_of_EXT_INT_Initialize 0034  
              calc_bsoc@log_update_wait 0040                  __size_of_calc_ror_data 0186  
                         _DMA1_DMAA_ISR D38C                   TMR3_ISR@CountCallBack 0098  
                        _clear_adc_scan D3D0                      __size_of_hid_input 0138  
                    __end_of_CRC_IsBusy D302                  __size_of_mode_lamp_dim 0018  
                      _CRC_ReverseValue B0F6                _UART2_RxInterruptHandler 008D  
             __end_of_SYSTEM_Initialize C56E                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer C978  
                            __pbssBANK0 0060                              __pbssBANK1 01D0  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            _check_help 8A46                           _read_cal_data 8E5C  
               __end_of_conv_raw_result 58F8                      __size_of_esr_check 02D8  
                 _INT0_InterruptHandler 0093                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone CDBE  
                      _DMA1_DMADCNT_ISR D380                         _convert_dac_raw A646  
                    __size_of_init_bsoc 0246              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma CBD2                   __end_of_wait_lcd_done D0C2  
              __end_of_cal_current_zero BB80        __end_of_TMR3_SetInterruptHandler CEAE  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler CE5E  
                            ??_TMR3_ISR 00E7                 __end_of_ADCC_Initialize C046  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler BE0E  
                            ??_TMR6_ISR 0026                       __end_of___asfladd BF00  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
                    __size_of_set_dac_a 0034                      __size_of_set_dac_b 0034  
  __end_of_ADCC_SetADTIInterruptHandler CF26   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler CEFE                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                               _CRCACCH 003963                                 _CRCACCL 003962  
                               _CRCDATH 003961                                 _CRCDATL 003960  
                     _UART1_Receive_ISR D0E4                                 _CRCCON0 003968  
                               _CRCCON1 003969                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan D3D6  
                               u1012_20 CA6A                                 u1012_26 CA6C  
                               u1005_20 D348                                 _CRCXORH 003967  
                               _CRCXORL 003966                                 u1041_28 9F2A  
                               u1043_20 9F44                                 u1043_21 9F3E  
                               u1126_44 BDF4                                 u1126_45 BDEE  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR D35C  
                               u1047_24 A02A                                 u1047_25 A026  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 u1083_48 D08C  
                               u1075_48 D068                                 _U2ERRIE 003DE2  
                               u1077_28 CFFC                                 u1343_20 3AE2  
                               u1350_28 D044                                 u1086_28 D020  
                               _U2ERRIR 003DE1                                 u1345_20 3BAC  
                     _CRC_8BitDataWrite D2AE                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0021              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                       _dac_spi_control BE0E                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                                 _NVMADRH 0039E1  
                               _NVMADRL 0039E0                       __end_of_calc_bsoc 3EDC  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _NVMCON2 0039E6                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch CCC0                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer C938                 __size_of_switch_handler 0142  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one D2F2  
            __end_of_set_load_relay_two D2E2       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 9510  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim D212  
                               __Lparam 0000                __end_of_UART1_Initialize C696  
                     __end_of_hid_input A2C6                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 7C90                                 ___fladd 4706  
                               ___aomod 83CA                                 ___fldiv 4EC2  
                               ___awdiv 9DBE                                 ___flneg C606  
                               ___awmod A75E                                 ___flmul 3EDC  
                               ___flsub C76C                                 ___fltol 9988  
                               ___lodiv 9696                                 ___lomod A04E  
             __end_of_UART1_Receive_ISR D106                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display AE70  
                               __pcinit AC9A                __end_of_mode_lamp_bright D33E  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand D322                                 __ramtop 2000  
             __end_of_CRC_8BitDataWrite D2C0                                 __ptext0 0000  
                               __ptext1 D242                                 __ptext2 C36E  
                               __ptext3 D106                                 __ptext4 CAD0  
                               __ptext5 CB04                                 __ptext6 CB38  
                               __ptext7 A646                                 __ptext8 B3FA  
                               __ptext9 BE0E                       __end_of_esr_check 79D2  
                     _UART2_Receive_ISR D126                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize D284  
                          __size_of_abs 0046                            __size_of_pad 0114  
                     __end_of_init_bsoc 83CA                                 _isalpha C7B2  
                               _isdigit CC62                                 _ivln2_h FAC3  
                             _T3CONbits 003FA6                                 us688999 7EFA  
                               us784999 9800                                 _mode_sw 00A5  
                               us699999 85F8                                 us789999 A17E  
                     __end_of_lp_filter 91DA                                 _islower CC02  
                               _isspace C47C                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                                 _set_dac B3FA  
              __end_of_UART2_Initialize C36E                                 _isupper CC32  
                             _CRC_Start D3CA              __size_of_SYSTEM_Initialize 004E  
                               _sprintf AA9A                                 _tolower BC8C  
                 __size_of_display_help 0008                                 _utctime 01F2  
               __end_of_convert_dac_raw A75E                   __size_of_display_info 0008  
                               _strncmp 860A                                 _toupper BC08  
                  end_of_initialization AD80               __size_of_convert_adc_data 00B8  
                             _SCANHADRH 00397A                               _SCANHADRL 003979  
                             _SCANHADRU 00397B                               _SCANLADRH 003977  
                             _SCANLADRL 003976                      _check_enter_button BF00  
                             _SCANLADRU 003978                       __end_of_set_dac_a CB6C  
                     __end_of_set_dac_b CB38                               i1u1369_20 9D1C  
   __end_of_UART2_SetRxInterruptHandler CE0E             _UART2_SetRxInterruptHandler CDE6  
                             i2u1131_48 C07E                               i2u1131_49 C092  
                             i2u1133_48 CF64                               i2u1135_48 CF8C  
                             i2u1137_48 CFB4                               i2u1129_48 CD04  
               check_day_time@day_delay 0041                       __end_of_set_vterm D1A0  
                     __end_of_vfpfcnvrt 346E                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd D3E2               __end_of_UART2_Receive_ISR D146  
                        wdtdelay@dcount 0074                 __end_of_dac_spi_control BE88  
           __size_of_current_sensor_cal 04B8                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0027                   _INT1_InterruptHandler 0090  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc D3E8  
                             _PORTDbits 003FCD                _TMR3_SetInterruptHandler CE86  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler CE36  
                          _display_help D3BA                   _TMR5_InterruptHandler 007B  
                          _display_info D3B2    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags C180                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler CF4E             _ADCC_SetADIInterruptHandler CF26  
                            _update_lcd A98A                         _calc_model_data 6230  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc C36E                __end_of_DATAEE_WriteByte C11A  
                       _DMA1_Initialize BF72                     __end_of_check_range BD90  
                            _start_bsoc D0C2                  __size_of_send_lcd_data 0024  
                       _SPI1_Initialize D258                   __end_of_get_vterm_ptr CCC0  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
              __end_of_CRC_ReverseValue B1C4                          __end_of_WaitMs CAD0  
          __end_of_INTERRUPT_Initialize C1E6                              _vterm_dump A3F4  
                        __end_of___flge 9C5C                          __end_of___fleq B288  
  __end_of_INT0_DefaultInterruptHandler D3F4   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler D3F2              __size_of_UART1_Receive_ISR 0022  
                       _DMA2_Initialize C422                           __pidataBIGRAM 70E2  
                        __end_of_efgtoa 24C2              __size_of_CRC_8BitDataWrite 0012  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 6DA2             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 01EA                          __end_of_memset 76FA  
                        __end_of_printf C2AC                __end_of_DMA1_DMADCNT_ISR D38A  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack D07C  
                        __end_of_strcpy B026                          __end_of_strlen B8A4  
                   start_initialization AC9A                 __size_of_write_cal_data 012E  
  __end_of_TMR5_DefaultInterruptHandler CA9A   __size_of_TMR5_DefaultInterruptHandler 0038  
          _TMR5_DefaultInterruptHandler CA62         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs C76C                   __end_of_INT1_CallBack D010  
             __size_of_set_display_info 001E                             __end_of_pad A98A  
                  __size_of_Default_ISR 0006                 __size_of_CRC_Initialize 0092  
                  __end_of_send_lcd_cmd C8B8                          _switch_handler 9F0C  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01DC                   __end_of___fpclassifyf 9510  
                         _uart2RxBuffer 0500                __end_of_DMA1_DMASCNT_ISR D36A  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR D398  
                   __end_of_hid_display 8A46              __end_of_send_port_data_dma C520  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6         __end_of_CRC_CalculatedResultGet 9988  
                             _TimerDone CD96                           _ringBufS_init CD6E  
                           __pdataBANK0 00AE                             __pdataBANK1 0100  
            __size_of_UART2_Receive_ISR 0020                     __size_of_get_switch 002C  
            __end_of_EXT_INT_Initialize CBA0                __size_of_update_cal_data 0016  
               __end_of_calc_model_data 667C                           _send_lcd_data CFC8  
                   __end_of_help_button CA62         __end_of_eaDogM_WriteStringAtPos B75C  
                   __end_of_BVSOC_TABLE F9B3                               ___asfladd BE88  
                  calc_model_data@bcror 006C                             __pbssBIGRAM 092A  
               __end_of_DMA1_Initialize BFDC                    calc_model_data@bvror 0070  
                           __pbssCOMRAM 003A                             _check_range BD10  
      __end_of_INT0_SetInterruptHandler CEFE                           __pcstackBANK0 00E7  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler A04E                             _CRCCON0bits 003968  
                           _CRCCON1bits 003969                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize D26E                _UART1_RxInterruptHandler 0087  
              _UART2_TxInterruptHandler 008A                               __end_of_T FA43  
                      _convert_adc_data B342                               _calc_bsoc 346E  
             __size_of_ringBufS_put_dma 00AA                            _init_display AD86  
                __end_of_DMA1_DMAOR_ISR D3A2                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 007E                      calc_ror_data@bcror 0064  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize C47C  
                    calc_ror_data@bvror 0068                  _PIN_MANAGER_Initialize B9CE  
              __size_of_TMR3_Initialize 0048                    __end_of_wait_lcd_set D3DC  
                         __pmediumconst F8E2                               __ptext100 D182  
                             __ptext101 D302                               __ptext110 D3BA  
                             __ptext102 D1A0                               __ptext111 BF00  
                             __ptext103 D212                               __ptext120 6230  
                             __ptext112 9510                               __ptext104 D330  
                             __ptext121 D3E2                               __ptext113 B4B0  
                             __ptext105 C7F6                               __ptext130 CDE6  
                             __ptext122 D0C2                               __ptext114 543C  
                             __ptext106 CA2A                               __ptext131 C64E  
                             __ptext123 901E                               __ptext115 C2AC  
                             __ptext107 CD96                               __ptext140 D258  
                             __ptext132 CE0E                               __ptext124 C76C  
                             __ptext116 D1BE                               __ptext108 C8B8  
                             __ptext141 D26E                               __ptext133 CD44  
                             __ptext125 4706                               __ptext117 8C58  
                             __ptext109 D3B2                               __ptext150 C422  
                             __ptext142 D29A                               __ptext134 CE36  
                             __ptext126 3EDC                               __ptext118 4EC2  
                             __ptext151 BF72                               __ptext143 B9CE  
                             __ptext135 C696                               __ptext127 C520  
                             __ptext119 9AFA                               __ptext160 9F0C  
                             __ptext152 BA60                               __ptext144 D284  
                             __ptext136 CE5E                               __ptext128 C30E  
                             __ptext161 AE70                               __ptext153 D36A  
                             __ptext145 C180                               __ptext137 C6DE  
                             __ptext129 CDBE                               __ptext170 D034  
                             __ptext162 C8F8                               __ptext154 BFDC  
                             __ptext146 D3C2                               __ptext138 CE86  
                             __ptext171 D3F0                               __ptext163 D010  
                             __ptext155 CEFE                               __ptext147 CB6C  
                             __ptext139 D22A                               __ptext180 CCEC  
                             __ptext172 346E                               __ptext164 CA62  
                             __ptext156 CF26                               __ptext148 CEAE  
                             __ptext181 BD90                               __ptext173 C4CE  
                             __ptext165 91DA                               __ptext157 C978  
                             __ptext149 CED6                               __ptext190 D126  
                             __ptext182 D3F4                               __ptext174 D374  
                             __ptext166 D312                               __ptext158 CFEC  
                             __ptext191 D1F8                               __ptext183 D3F6  
                             __ptext175 BE88                               __ptext167 D33E  
                             __ptext159 D3EE                               __ptext192 D07C  
                             __ptext184 C048                               __ptext176 D34C  
                             __ptext168 9C5C                               __ptext193 C56E  
                             __ptext185 CF50                               __ptext177 D058  
                             __ptext169 C938                               __ptext194 D35C  
                             __ptext186 D0E4                               __ptext178 D3F2  
                             __ptext195 D380                               __ptext187 CF78  
                             __ptext179 D3E8                               __ptext196 D38C  
                             __ptext188 CD18                               __ptext197 D398  
                             __ptext189 CFA0                               __ptext198 0000  
                             _hid_input A18E                      __end_of_StartTimer C8F8  
                    _set_load_relay_one D2E2                      _set_load_relay_two D2D2  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00F6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR CCEC  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 01EE  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 76FA                 __size_of_get_raw_result 001E  
                        __size_of_fabsf 00AE                               _init_bsoc 8184  
                __size_of_wait_lcd_done 0022                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
              __size_of_DATAEE_ReadByte 0032                               _lp_filter 901E  
                           _hid_display 882A                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize C180  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0021                                _INT0_ISR D34C  
                              _INT1_ISR C978                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _SCANCON0 00397C                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _SCANTRIG 00397D  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0229  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                          _SPI1CON0bits 003D14                            _SPI1CON1bits 003D15  
                             _set_dac_a CB38                               _set_dac_b CB04  
                             _ring_buf1 0394                               _ring_buf2 0400  
                              _PIR0bits 0039A0                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack D034                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                __size_of_TMR5_Initialize 0048  
                             _set_vterm D182                     __size_of_update_lcd 0110  
                           _help_button CA2A                                _TMR3_ISR 9C5C  
                           _BVSOC_TABLE F8E3                                _TMR5_ISR AE70  
                              _TMR6_ISR D1F8                               _port_data 05FF  
                   __size_of_static_soc 005A                               _vfpfcnvrt 24C2  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack D010                              _ADCON0bits 003EF8  
                    __end_of_check_help 8C58                               _start_lcd D3DC  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 001E  
                         _TMR6_CallBack D07C                          _write_cal_data A2C6  
                 __size_of_send_lcd_cmd 0040       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc D3E2                        _set_display_info D1A0  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                        _CRC_Initialize BA60                             _INTCON0bits 003FD2  
                             copy_data0 ACAE                               copy_data1 ACD4  
                             copy_data2 ACF6        __size_of_CRC_CalculatedResultGet 0172  
              _INT0_SetInterruptHandler CED6                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler CDE6             _UART2_SetTxInterruptHandler CDBE  
                          _uart1RxCount 00A9                            _uart2RxCount 00A6  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 00A8  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000              __end_of_current_sensor_cal 5DB0  
              __size_of_conv_raw_result 04BC                           _wait_lcd_done D0A0  
                          _send_lcd_cmd C878                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC           __size_of_get_ac_charger_relay 000E  
                      __size_of___aomod 0240                         _adc_int_handler D3F6  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140           __size_of_set_ac_charger_relay 0010  
                    __end_of_get_switch CCEC                 __size_of_check_day_time 01A0  
                __end_of_write_cal_data A3F4                   __end_of_DMA1_DMAA_ISR D396  
                    ___fpclassifyf@F463 0060    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 8C58  
                __end_of_CRC_Initialize BAF2                       ?_DMA1_DMADCNT_ISR 0021  
           __size_of_check_enter_button 0072                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand D330                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0027                        __size_of_set_dac 00B6  
                              __ptext10 8E5C                                __ptext11 CBA0  
                              __ptext20 B288                                __ptext12 CBD2  
                              __ptext21 882A                                __ptext13 AD86  
                              __ptext30 A2C6                                __ptext22 A18E  
                              __ptext14 CFC8                                __ptext31 C0B2  
                              __ptext23 76FA                                __ptext15 C838  
                              __ptext40 ABA4                                __ptext32 D3CA  
                              __ptext24 C9B6                                __ptext16 C878  
                              __ptext41 CCC0                                __ptext33 D2F2  
                              __ptext25 D3A2                                __ptext17 D146  
                              __ptext50 CC92                                __ptext42 D3D0  
                              __ptext34 9816                                __ptext26 D2D2  
                              __ptext18 CD6E                                __ptext51 CA9A  
                              __ptext43 BAF2                                __ptext35 B0F6  
                              __ptext27 D2E2                                __ptext19 8184  
                              __ptext60 D3DC                                __ptext52 A98A  
                              __ptext44 BD10                                __ptext36 D2AE  
                              __ptext28 D322                                __ptext61 B93C  
                              __ptext53 B6B4                                __ptext45 B342  
                              __ptext37 C1E6                                __ptext29 58F8  
                              __ptext70 6DA2                                __ptext62 740E  
                              __ptext54 D164                                __ptext46 C11A  
                              __ptext38 D2C0                                __ptext71 A04E  
                              __ptext63 C24A                                __ptext55 D0A0  
                              __ptext47 8A46                                __ptext39 D3AA  
                              __ptext80 937A                                __ptext72 9696  
                              __ptext64 B55E                                __ptext56 C3C8  
                              __ptext48 A3F4                                __ptext81 9988  
                              __ptext73 860A                                __ptext65 24C2  
                              __ptext57 C5BC                                __ptext49 AA9A  
                              __ptext90 BB80                                __ptext82 C606  
                              __ptext74 79D2                                __ptext66 667C  
                              __ptext58 B75C                                __ptext91 A876  
                              __ptext83 B1C4                                __ptext75 127E  
                              __ptext67 BC08                                __ptext59 D3D6  
                              __ptext92 B802                                __ptext84 A75E  
                              __ptext76 BC8C                                __ptext68 CC02  
                              __ptext93 B8A4                                __ptext85 9DBE  
                              __ptext77 CC32                                __ptext69 C7B2  
                              __ptext94 A522                                __ptext86 5DB0  
                              __ptext78 AF52                                __ptext95 D1DC  
                              __ptext87 C726                                __ptext79 6A36  
                              __ptext96 B60A                                __ptext88 83CA  
                              __ptext97 7F10                                __ptext89 7C90  
                              __ptext98 C47C                                __ptext99 CC62  
                      __size_of_isupper 0030                   __end_of_read_cal_data 901E  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1255999 79E4                                us1186999 5DCA  
                              us1267999 6E08                                us1276999 66FC  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma B60A                    __end_of_Volts_to_SOC B342  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 127E                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                     dac_spi_control@init 0043  
                            _CRC_IsBusy D2F2                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0021                   __end_of_init_port_dma CC02  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0084                               stoa@F1166 0100  
                    ??_DMA1_DMASCNT_ISR 0027            __end_of_ADCC_StartConversion D2D2  
                              _spi_link 01D0                                _wdtdelay C3C8  
            __end_of_UART2_Transmit_ISR CD44                                _spinners ABA4  
                              _vfprintf B55E                __end_of_convert_adc_data B3FA  
            __end_of_PWM8_LoadDutyValue C838    __end_of_TMR3_DefaultInterruptHandler D3F2  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler D3F0  
  __end_of_INT1_DefaultInterruptHandler D3F0   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler D3EE                      _send_port_data_dma C4CE  
                         ??_Default_ISR 0021                             _uart1RxHead 0047  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0044  
                           _uart1RxTail 00AA                          _get_raw_result D1BE  
                           _NVMCON1bits 0039E5                             _uart2TxHead 00A8  
                           _uart2RxTail 00A7                               spinners@s 01E4  
                           _uart2TxTail 0046               __size_of_cal_current_zero 008E  
                          _wait_lcd_set D3D6                      _EXT_INT_Initialize CB6C  
  __end_of_TMR6_DefaultInterruptHandler C5BC   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler C56E                       _send_lcd_data_dma C5BC  
  __end_of_ADCC_DefaultInterruptHandler D3F6   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler D3F4                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long C838  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help D312  
                 __end_of_calc_ror_data 9696                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString B802                   __end_of_mode_lamp_dim D22A  
               __end_of_adc_int_handler D3F8                __size_of_convert_dac_raw 0118  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd AA9A                  _uart2TxBufferRemaining 0045  
                    __end_of_static_soc C3C8                      __end_of_start_bsoc D0E4  
                        _FVR_Initialize D3C2                  __end_of_get_raw_result D1DC  
                      _send_lcd_cmd_dma D164                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 009C        __end_of_INT1_SetInterruptHandler CED6  
             __size_of_UART1_Initialize 0048                __size_of_dac_spi_control 007A  
             __end_of_send_lcd_data_dma C606                        ??_DMA1_DMAOR_ISR 0027  
               _CRC_CalculatedResultGet 9816               __end_of_send_lcd_cmd_long C878  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR D3EE  
        __end_of_PIN_MANAGER_Initialize BA60               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump A522                 _eaDogM_WriteStringAtPos B6B4  
                         _get_vterm_ptr CC92                          _check_adc_scan D3A2  
             __size_of_UART2_Initialize 0060  
